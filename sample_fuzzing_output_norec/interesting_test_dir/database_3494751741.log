-- Time: 2024/06/09 10:20:47
-- Database: database41
-- Database version: 3.40.0
-- seed value: 3494751741
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, c2 UNINDEXED, prefix = 402); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
UPDATE vt0 SET (c2, c2)=('', NULL) WHERE ((CAST(vt0.c1 AS TEXT))*(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '30764'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2093352024);\n; -- 6ms;
UPDATE OR ROLLBACK vt0 SET c0='-2093352024' WHERE ((((vt0.c0) NOTNULL))>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))); -- 0ms;
UPDATE OR IGNORE vt0 SET c2=x'' WHERE (~ ((~ (vt0.c1)))); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -650354846);\n; -- 0ms;
PRAGMA temp.mmap_size = -89848743863689221; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), x'', ('?+F^' IN ()))) AND (((t0.c0 IN (t0.c0)), ((t0.c0)LIKE(t0.c0)), (~ (t0.c0))))); -- 26ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 275559670);\n; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA main.journal_mode = DELETE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES ('-2093352024'), (NULL), ('-2093352024'), (0.005132346364122409), (0.16833071769020358); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '275559670 0 sz=-1663650964 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((NULL IN (x''))) AND (IFNULL(DISTINCT 860243044, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1663650964' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST('-650354846' AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '37677768'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=860243044 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(NULLIF(NULL, NULL), (']u' IN ())); -- 26ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=424977497 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1171732272 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '-1054492683' THEN x'' END)<<(((NULL) NOT BETWEEN (NULL) AND ('1171732272')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -9223372036854775808 sz=425656932 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 18ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2093352024 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((425656932)OR(NULL)))AND(0.0113691030907479)))=((('')!=(x'f97b')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2115736519 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1255304392 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.054492683E9)OR(0.0113691030907479)))AND(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-204150986 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '425656932 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('2115736519'))>=((0.3404858217326072)))) NOT BETWEEN ((((((((((((((((('5UQv泈R')OR(1.171732272E9)))OR(NULL)))OR(0.33268262290502804)))OR(NULL)))AND(NULL)))OR(0Xffffffffca6a9c03)))OR(0.0113691030907479)))OR(x''))) AND (1101700408 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(DISTINCT x'88c9') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-458370244 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(NULL, -1922409890)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-970976059 sz=-238340675 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1424283083 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1068060464'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=37677768 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')AND(NULL)))AND(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0x2fc3444 THEN 0.1508074755644313 ELSE NULL END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-836897079'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN (CAST(0.22963593857328923 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-843275278 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-5316940 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 0 sz=-1934866486 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1255304392 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-619176159 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1924903992 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.92240989E9)+(x'fb81'))) NOT BETWEEN ((((((((('\nPKm')AND('')))OR(x'')))AND('s*0*i>M_')))OR(0.9421053980721104))) AND (CAST(x'' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=895163753 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2 sz=711938625 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((0.8374260118557552)<(NULL)), ((('')) NOT BETWEEN ((-1.424283083E9)) AND ((NULL))), UPPER(DISTINCT 0.5878219079190212), ((0.5579845350478106) BETWEEN (NULL) AND (-0.0)), 0.4034081491006384 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2093352024')=(x'')))IS(CASE WHEN NULL THEN 1335618155 WHEN NULL THEN x'' WHEN x'' THEN 0.0113691030907479 ELSE 661357908 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((NULL) IS TRUE), ((((((((0.0113691030907479)AND(895163753)))AND(NULL)))OR(0.14874098571161398)))OR(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.7788808104883713) AND (0.6961145642580049)))%(CASE WHEN 'o*/[EC' THEN '37677768' WHEN '' THEN 0.48768613375551606 WHEN 0.4633365396448964 THEN '1270541930' ELSE x'e16f' END)); -- 11ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))IS((((('-2093352024')OR(NULL)))AND(0xffffffff9ec87ba2)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-540282250 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1884172822 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (NULL))))>=((((0xffffffff8d6a5a5e)-(0.439137307173066))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'I&nTv#/붇'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-843275278 -1938610424 sz=-913458293 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '46092396 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=895163753 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2015548930'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=-238126343 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1526770338 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN 0.33268262290502804 WHEN 33864665 THEN 0.5872538469927914 WHEN 'P' THEN 0.5872538469927914 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1526770338') NOT BETWEEN (x'') AND ('0.1508074755644313'))))<=(((-1413505719 IN ('-54583107'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1466662088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1255304392 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((((((((((((((('0.439137307173066')OR(x'8e3d')))AND(x'')))OR(NULL)))OR(NULL)))OR(NULL)))AND(x'')))AND('㣙D')))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=661357908'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('箢VZ2Z㱘 	'))!=((x'87f9'))))+((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-400641592 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))||(CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-92172084 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1214805814 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 11ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1321427895 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(NULL)))OR(0.16833071769020358)))IS((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=929251712 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'o*/[EC' THEN (('Q3Gx') IS TRUE) ELSE NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((x'', NULL, x''))<((NULL, 'Nk+c#6', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 7ms;
DELETE FROM sqlite_stat1 WHERE 0x58b009bc; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1001025490 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1964915178'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-234071582 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 sz=-619176159 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)) BETWEEN ((NULL)) AND ((x''))))OR(((x'')+(NULL)))))OR(CASE WHEN NULL THEN '' END)))AND(((NULL)==(x'0e37')))))OR((((((((('|D')OR(NULL)))OR('')))AND(NULL)))AND(0.1508074755644313)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-650354846 sz=2116798174 noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((((MIN(0.12756732118045055, '1171732272', 'J㧀\rఈ(e', x'7091'))AND('iE|e\npoV<' COLLATE RTRIM)))AND((((((((('')OR(0.3404858217326072)))OR(0.31181328642844797)))AND(0.9421053980721104)))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1054492683 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)&((- (0.49112857928708487)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 sz=1404220107'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '631306175'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-1884172822 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 16ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=424977497 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1631028318 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2064195051 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 50082884; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-537311520 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-2035314620 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-790556969 sz=1081507424 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4759467915714596; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ ('')))AND(CASE WHEN NULL THEN NULL END)))AND(NULL COLLATE BINARY)))OR(((NULL)<=(0.35989832971078706)))))OR((((x'', 0.8186349391777369, NULL, 0.8374260118557552, '860243044')) NOT BETWEEN ((NULL, x'ff27', NULL, 349583577, x'e095cdc1')) AND ((NULL, NULL, x'', '-520378449', 0.3167014273910169))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '1299958892 sz=-1504557900 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-1115989762 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-400641592 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '-1502798511 sz=1321427895 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-913458293' IN ()))AND(((-437207114)OR('425656932')))))OR(json_extract('-439962097', x''))); -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=50082884 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '522587342 sz=2126539651'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((-1.924903992E9)) NOT BETWEEN ((1270541930)) AND (('?+f^'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT SUBSTR(x'', '-234071582')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-537311520 sz=-234071582 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('-92172084')) BETWEEN ((0.8636550701662754)) AND (('-1530699200'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1097196435 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1769959870 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2015548930'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=143779557 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=317936615 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1377225799'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.4140105517690025  WHEN '|}' THEN x'2185' ELSE '4r' END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN ('212671589') AND (x''))  WHEN (('[u') BETWEEN ('360786722') AND (0.0649829365736948)) THEN ((((-1928091300)AND(0x1)))AND(1476882687)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1837002265 sz=389104295 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '86976877'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.7029414666993946)) NOT BETWEEN ((0.17416313170247322)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('n', NULL, NULL, '', NULL)) BETWEEN (('-1054492683' COLLATE BINARY, json_array_length(x'', 0Xffffffff8fb1cdea), (('0.6961145642580049')LIKE(NULL)), (((0.8025688612657865, NULL, x'')) NOT BETWEEN ((NULL, x'', 0.7788808104883713)) AND (('0.439137307173066', '1239630715', x''))), (0X39181864 IN ()))) AND ((((NULL)IS NOT(0.5862456371279731)), 3.49583577E8, (((NULL))<=(('-1039528103'))), (NULL IN ()), CAST(x'' AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=1099936895 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1968654341 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1968654341 1013454272 sz=624464093 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_object(NULL, NULL, 'r_孑h<p', NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 10ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1424283083 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2060289340 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((x'')) AND ((x''))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=929251712 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2116787624 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-836897079 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-862862135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xfffffffff9196d60; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))OR((~ ('')))))AND(-1354142944)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-172058602 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 0 sz=2110441037 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN ((((((((-1438595283)AND(NULL)))AND(NULL)))OR('%')))AND(NULL)) THEN CAST(0xffffffff8df98855 AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1449509354 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1511324176 IN ())) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-458370244')) NOT BETWEEN (((- (x'')))) AND (((((0xffffffff9c788baa, -438248212, '1141261768')) NOT BETWEEN ((x'7f97', '726117013', NULL)) AND ((0.32609592987364744, 'ᡤxgOBi)ꢙ*', NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0xffffffffaac44fc1)OR(NULL)))AND('1346430651')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (0.6303119505656434)))AND(((0Xffffffffa6a0ed11) IS TRUE))))AND(CASE WHEN NULL THEN '6V' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1938610424 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1216481135'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=1515108493 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(-1.73581487E8)))AND('s*0*i>M_')) IN (((0.6815571029570949) BETWEEN ('1769959870') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-6.50354846E8 IN (x'', x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5579845350478106; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2008789135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 -238340675 sz=-900578562 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '1233311082 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1502798511 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-37028011 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=50082884 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1669948003 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1411626803' COLLATE BINARY  WHEN NULLIF(DISTINCT 0.7234790550427123, NULL) THEN CAST(0.4637915133774556 AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(x'')))AND(0.22963593857328923)) COLLATE NOCASE; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-2024896056 1097196435 sz=-1325058317 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4221234274618437) IS FALSE) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x23375f48 COLLATE RTRIM)&(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))==(((NULL) BETWEEN (0.5891683438545305) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.4140105517690025  WHEN NULL THEN NULL WHEN -2066619288 THEN '1498683830' WHEN 0.7894190288619897 THEN '~Zxy#<L' ELSE '2077742168' END)OR((~ ('1647477729')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1928091300'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('㧃l')|('-1530699200'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(0.6446424377408262) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1424283083'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')AND(x'65e3')))AND('J\r''3')) IN (LIKE(0.8032377348261764, 0.8603501431423883), (660144542 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 7ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1099936895 -1924903992 sz=-1256910566 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1650995379'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-537311520 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1761418269 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)<=('1728979396')) THEN (0.7029414666993946 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.5255583152908806)OR(0.3180775137047914)))OR(x'a884')))AND(0.38651707504661315)))AND(NULL))) NOT BETWEEN (0.7894190288619897 COLLATE BINARY) AND (((((NULL)AND(x'c030')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-397106554 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=177108318 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('*')))AND(2064195051))) BETWEEN (x'') AND (((NULL)LIKE('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 7ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'c9e7'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1802321487 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('500019624')IS(-1.5306992E9)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 sz=-1432868563 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1512291719'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1620211729 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1283196463 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.22963593857328923') NOTNULL)  WHEN ((((-1349149029)OR(0.42983481868083084)))AND(NULL)) THEN NULL ELSE ((((1181506179)AND(x'')))OR('1532769064')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))!=(('5wWX0ᷫ'))))||(((((((((NULL)AND('-238126343')))OR('h')))OR('')))AND('521898217')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE NOCASE)OR(x'')))AND(NULL COLLATE RTRIM)))OR((+ (-2.38126343E8)))))OR((((((((((((('-1096688822')OR(x'')))OR('')))OR(0X5d003aeb)))OR('')))OR('1747088231')))OR(0X271e64e6)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-105718141 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1142197846 sz=1239630715 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('%Js' COLLATE NOCASE AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1377225799 sz=-916020628 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=604291143 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2035314620'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((x'')AND(NULL)))OR(NULL)))AND('1524164056')))OR(x'a82b')))AND(x'')))AND('-831552137')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-412708008 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('876Xa')AND(NULL)))||('1364021623' COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.13846378439097662) ISNULL) THEN x'5dcb' WHEN ((('RI', 532864580, ''))<((0.6320446291150033, 'hNd\n', 0.057725425043578804))) THEN '876Xa' WHEN CASE WHEN '910837704' THEN x'78d0' WHEN '%Js' THEN x'' WHEN x'60a5' THEN NULL ELSE -1934866486 END THEN (('g_')IS NOT(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 sz=-1631028318'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1657464951 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-710678722 sz=-1922409890 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1101700408 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.24744794183843466))<=((NULL))) THEN ((-2.01554893E9)/(x'')) ELSE '-1001025490' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 sz=1404220107 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-54583107'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert((('-1357307970') BETWEEN ('w') AND ('1214805814')), ((NULL) BETWEEN (0.29127786463507344) AND (0.6308602481179898)), '' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1821000446 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1147711108 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/((('-843275278') BETWEEN ('sά줍U') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=631306175 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (661357908)) COLLATE BINARY; -- 3ms;
DELETE FROM sqlite_stat1 WHERE (((x'2236', NULL, 0.3398038597949701)) NOT BETWEEN (('-145147456' COLLATE NOCASE, ((((NULL)OR('2064195051')))AND(NULL)), CAST(-1237174189 AS TEXT))) AND ((((NULL)<<(NULL)), CAST(0.594718092594666 AS INTEGER), x'42b6'))); -- 5ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((- (0.13846378439097662)), ((x'') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.04798963651027055 IN ()))IS NOT(UPPER('859951247'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1964915178')OR('673247010')))OR(0.00903825420483273)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-870690537 unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-520378449 sz=506948863 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)OR(x'')))AND(x'')), (((''))<>(('-1120769646'))), ((x'')!=(x''))))>=(((NULL IN ('', x'ce66')), 2.12671589E8 COLLATE BINARY, ((0.8876478247380206)<<(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-238340675'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1510488081 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '138401412 sz=-54188849 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2114026536 sz=-786285103 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (json_valid(0.24744794183843466))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1373386266 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1664576971 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ ('-1928091300')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((x'')OR('1e500')))AND(x'')))AND('')))AND('G[n)'))  WHEN ((NULL) BETWEEN (NULL) AND (0.013679315993011754)) THEN UNLIKELY(x'a52e') WHEN ((((x'')AND('1403845340')))OR(NULL)) THEN LIKELY('0.5862456371279731') WHEN (('W[m')*(0.8885268612943147)) THEN (- (NULL)) ELSE (((x'b2c5ea36dd5d'))<((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1054492683 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-447779544 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2 sz=-1466662088'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1097196435 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1352356892 317936615 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-650354846 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1971882335 sz=-1115989762 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.688329793806704))<>((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=9223372036854775807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=90284180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.74688676059716)<('337645314')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1001025490 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.0649829365736948' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN ('0.5872538469927914') AND ('-458370244'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1939024797')<<('-975403162')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-145160830 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(CASE WHEN '0' THEN NULL ELSE 0.517862165340056 END, (((((((('')AND(x'2eda')))OR('3\')))OR(NULL)))OR(0.2713387535085251)), (- (x'')), (((0xfffffffff5d49141))<(('1299958892')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-234071582 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1001025490'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')AND('1097775166')))OR(-1.413505719E9)))AND(NULL)))AND(x'4f34dff7')))AND(NULL)))OR(-9.2172084E7)))>((('%o}|8') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0Xffffffffe5c6b60f IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'')) BETWEEN ((x'')) AND (('1750098722'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2008282813 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-979298928 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1401326127 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=1708026344 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 0 sz=1186904474'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1115989762 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-336532699 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1101700408 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1635656555, x'', -1.7976931348623157E308)) NOT BETWEEN ((((((0.1805434508734075)OR('1691507946')))OR(x'ed04')), ((NULL)!=(x'8726')), ((x'')>=(-0.0)))) AND ((json_extract(0.12154360600848091, 'W'), 0.4851549168588696, ((('-474500653')) BETWEEN (('')) AND (('-400641592')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '1097196435 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1039528103 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TOTAL_CHANGES())OR((('-1837002265')<('-626456502')))))AND(((-1.115989762E9) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=254578753 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '33359830 1287564139 sz=1404220107 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (x''))))<>((((x'')-(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('661357908' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-2125276678') BETWEEN (NULL) AND (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=1799347740 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-489742809'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '771729435 0 sz=1251559127 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '93860299'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-2015548930 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x2bf506c)-('-145147456')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.21424350979209106)<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.11295118311408525)) BETWEEN (((('g-,qa|')>=(x'')))) AND ((('iRFz' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN (- ('')) THEN (('n')IS NOT(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '37677768'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'4e89', NULL, '-9223372036854775808'))<=((1099936895, '-1884172822', NULL))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'vC' COLLATE BINARY THEN ((0.3851588428834206) ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, 0.6682446847160849, NULL))==((x'', '', 0.3987583456921798))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-2097252949 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('{}n|⼎(''', NULL, ''))>(('802031067', NULL, '0.8885268612943147')))) NOT BETWEEN ('') AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=858540243 unordered noskipscan'); -- 5ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2 sz=1239630715 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1962433634 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('0.42983481868083084') AND (x'1c9951ae'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9640067261526358)*('1038633092')))<<((((0.8657267511022754))<>((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-172210178 2 sz=-5316940 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8225507698128058)GLOB(0Xffffffffec11e182)))OR(0.9299624164721251)))OR(((((((((x'')OR(NULL)))OR('1905643236')))AND(0.6181357217803042)))AND(275559670)))))OR(CASE 0.9026849173758509  WHEN NULL THEN x'' ELSE x'' END)))AND(((((x'')OR(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1099936895'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=251973734'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'ce58' IN (0X418fb47f, -770540406))) BETWEEN (CAST('-843275278' AS NUMERIC)) AND (((((-1.039528103E9)AND('0.057725425043578804')))AND('0.8885268612943147')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1958499654 sz=-499787159 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Wᵩ') IS TRUE))GLOB(((('oh|', '&', x'6fb7'))<>((0.6815571029570949, x'', x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=929251712 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1972817056'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6289882685477204)AND(0.8032377348261764)))OR('XW'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (-1.884172822E9)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-666374676 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1344605214'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2 sz=1112795831 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0x4165e393 IN ('-775952964', 0.6435070646047386)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.426781377461264  WHEN '-1502798511' THEN NULL END)AND(((('3\')) BETWEEN ((NULL)) AND ((NULL))))))AND(CASE -1.253831672E9  WHEN x'' THEN NULL END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1391917366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-428360144') BETWEEN (x'') AND (NULL)))LIKE(IFNULL(DISTINCT '', 0X64dbf333))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-97316410 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1512291719')>(x'')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=49595717 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1480406757'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1413505719'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '1321427895 -650354846 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1739321742'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-551975962)>>('>YaQQ<''೎%')))==(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(NULL)))AND(NULL)))AND('h')))AND('p2qR'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 0 sz=-1143660016 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1714119692 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1590475477'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX(0.2713387535085251) IN (((((-4.37207114E8)OR(x'')))OR(0.6199895363224525)), ((('-1413505719')) BETWEEN ((0.17119100397389575)) AND ((0Xffffffff9fbb825d))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('G' COLLATE BINARY)AND('1494273904')))OR(((6.31306175E8)<('389104295')))); -- 5ms;
DELETE FROM sqlite_stat1 WHERE (0x3c6815c0 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1977591549 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=914289324'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1466662088 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((2115736519)LIKE(x'646f')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=143779557 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT NULL COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((+ ('1487931836')))AND(('0.8186349391777369' IN ()))))OR(json_array_length(NULL, 1321427895))))AND(((x'') NOT BETWEEN ('Z	\n+') AND (-1.5045579E9)))))AND('1081507424' COLLATE BINARY)))OR(((((0.2824911127937758)OR('0.8603501431423883')))OR(x'f084')))))OR((('') BETWEEN (0.426781377461264) AND ('-594067892')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) IS TRUE); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1404220107 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (- (0.35798766836448637)), 0.588919292025122); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '-1504557900 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (0.34813895464803557))))!=(((+ (0.8186349391777369))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1040586825'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.735826323260824)>(x'2172')))OR(JULIANDAY(0xffffffffd36968ca, NULL, 0xffffffff8d13a95c, '-14267068', 'J䕋Q(d['))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-537311520 sz=-329171880 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-726462124'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1680383982 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1839541985 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=860243044 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '430248307 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1190716819 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((NULL IN ('143779557'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 176820508 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-546617363 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '176866817 sz=-1024687728 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<=(CAST(0.7894190288619897 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX('', '[u') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=1487931836 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-2015548930' COLLATE BINARY IN ((+ (-836897079)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-5316940'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-439962097 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(-1277057353)))!=(CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1648625895 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(DISTINCT 0.6308602481179898, x''))AND((- ('-293166162')))))OR(((((((((NULL)AND('-1624039067')))AND(NULL)))OR(0.3851038259006002)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH((((NULL)) BETWEEN ((NULL)) AND (('q')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1299958892'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-238126343 sz=1927611548'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN ('J0') AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT x'' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 930777 sz=-520378449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<(('')))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-217702742 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 50082884 sz=-2093352024 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=1067513627 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('' COLLATE RTRIM)OR(NULL COLLATE BINARY)))OR(((NULL)IS('0.5255583152908806')))))OR((NOT (NULL)))))AND(CAST(0.9720383599982317 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 0 sz=1315962732 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('1214805814' COLLATE RTRIM)OR((('-1199646576')&('624464093')))))OR('wᵩ' COLLATE RTRIM)))OR(CASE x''  WHEN 0.8942441861276725 THEN '-1466425563' END)))OR((NOT (x'3f2a')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=349453735 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1994452823 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF('-540282250', '-2035314620')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=377082680 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-9223372036854775808 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-618416659'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1934866486 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-970279553 sz=-676061559 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '52478587 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1491200710 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1270541930'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1003740519 1255304392 sz=1692218108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2103160521 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=820095688 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1451106975 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')|(json_array_length(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((']?')>(0.2429371727211409)))) AND ((CAST('p9' AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffbc461819; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote((((0x2fc3444))<(('1473162495')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -790556969 sz=44707181 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1476882687 sz=18276396 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN (CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'df47')))<=(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1858125539'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffffe4add33c)>(NULL)))AND(CASE WHEN '-278551690' THEN 't&3' END)))AND('^jA8ZeJ\r')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1164188402')OR('-459547442'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(NULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1181784666'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1498009790 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '37677768 sz=-1968654341 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) BETWEEN (NULLIF(DISTINCT NULL, NULL)) AND ((((0.941509862087635)) BETWEEN (('-222250757')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE RTRIM THEN ((NULL) NOTNULL) WHEN CASE WHEN 777171826 THEN NULL ELSE x'' END THEN (('-2123939546') BETWEEN ('箢VZ2Z㱘 	') AND ('')) WHEN ((x'') IS TRUE) THEN (((0.21424350979209106)) BETWEEN ((0.7234790550427123)) AND ((NULL))) ELSE (x'e9a5' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(DISTINCT 0.9299624164721251, '0.4637915133774556') IN (CASE '1530113896'  WHEN '-1319684989' THEN x'' ELSE x'2af2' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x7e2bc6de COLLATE NOCASE)-(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 2 sz=797410705 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-989456023 sz=729513855'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('>j.v0oﾀhꞯ' COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=813054356 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'4632'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-173581487 AS BLOB))%(((((x'')OR(0.7560078107480784)))AND(0.49984700931998016)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1447850902 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((-1466662088)AND('vc')))AND(NULL)))AND(NULL)))OR('-66935975')) IN (CASE NULL  WHEN NULL THEN '' WHEN 0.5761090600661584 THEN 0.8640389892242761 WHEN x'' THEN x'' ELSE '9J~-' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=874246482 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-520378449 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1255304392')OR('502220934')))AND('W0 Z&x')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '536405376 sz=-1536104167 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (NULL)))OR(CAST(x'60f9' AS NUMERIC))))OR(((x'')||('1404220107')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0x40454671 THEN x'5433' WHEN 0.9522764196803353 THEN -310503527 WHEN x'759a' THEN 'p ' WHEN x'' THEN '86976877' WHEN 0.0649829365736948 THEN x'' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1487931836 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1054492683 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-144109601 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE BINARY))!=(((((0.9881944799099004))>((-836897079)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.9826651630940061 AS NUMERIC) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (x'd8e0')) IN (((x'36de00cc') NOTNULL), (((NULL, -1377225799, '-400641592', x'd854', NULL))==((0.5878219079190212, NULL, '1270541930', x'fcda', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=440482698 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 sz=1130826345'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-5255970'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1166987551 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('IO'))) BETWEEN ((('2116798174')IS NOT(x''))) AND (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'76bd')LIKE(x'ebe3')) IN ((- (NULL)), CAST(x'' AS NUMERIC))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))*((('38831175')GLOB('-1115989762')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1066254871 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1426670704 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=522587342 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULLIF(DISTINCT '-1631028318', '')  WHEN ((((0.9906250489794266)OR(0.788215140667739)))AND(0.15572384624472368)) THEN ((('t(')) BETWEEN ((0Xffffffffa65244b4)) AND ((NULL))) WHEN load_extension('0.6682446847160849', '-2089685234') THEN ((NULL)OR(86976877)) WHEN CAST(NULL AS INTEGER) THEN CAST(NULL AS TEXT) ELSE LOWER(0.2713387535085251) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1833644756 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL))>((NULL))) THEN (0xffffffffdaf6e0d5 IN (0x39ef9080, NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1190928143 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1224982955 sz=-970976059 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-139416202 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1270541930 2 sz=381294869'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (NULL))  WHEN ((NULL) NOT NULL) THEN ((('-208404323'))>((0.9444451663757396))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 2 sz=292240645 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=415578950 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1403011962 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1237019475 sz=-1979697493 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS('')))GLOB(((x'112f70b7') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (NULL)) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '86976877 -980578248 -1837002265 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-178298767'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.005132346364122409)%(0X4bbaee6a))  WHEN ((('1773403815')) BETWEEN ((-1944331255)) AND ((x''))) THEN (((NULL, '_', 0.7788808104883713)) NOT BETWEEN (('-2059399549', 5.22587342E8, 2.008282813E9)) AND ((x'3614', -1466662088, 0.3180775137047914))) WHEN (('-1370237490') NOTNULL) THEN NULL WHEN LIKELY(x'f677') THEN ((((NULL)AND(0.6990242077487342)))OR(x'f048')) WHEN ((x'') BETWEEN (x'a4a5') AND (0.7535042886291817)) THEN (('J䕋Q(d[')=(x'')) WHEN x'' THEN ((((0.8321055417526609)AND(NULL)))AND(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1424283083 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS REAL))AND((((('-1662624410')OR(NULL)))OR(x'ec66')))))OR(((-1466662088) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9457114513446458 COLLATE RTRIM))>((CASE WHEN x'' THEN '팼0r\n' WHEN NULL THEN NULL WHEN -113208132 THEN 0.6673672794410757 END))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('425656932' COLLATE NOCASE))<(((0.13181479417136965 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((('0.34813895464803557')||(NULL)))) AND (((((6.31306175E8)) BETWEEN ((NULL)) AND ((x'')))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('')>=('-520378449')))<((((9.29251712E8, '1099936895', NULL))==((x'', -2093352024, x'c4ea'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 665950816'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1938610424 sz=1101700408'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') IS TRUE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.12154360600848091) BETWEEN ('274663798') AND (x''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((('-1054492683') NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1511683429 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1175688822 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((('p3')OR(0x2bf506c)))AND(7.11938625E8)))OR('1689178082')))OR(-460158834)))OR('')))OR('-537311520')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((x'')*(0xffffffffc62014c5))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(UNLIKELY(''), ((x'5f89')/(2.008282813E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10606845603130854) BETWEEN (0.704812053396424) AND (1.081507424E9)))>=(((0.27081319112054314)AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1844170281'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1837002265'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.2334378858050854 IN ('-2138981862')))AND(((NULL) IS TRUE))))OR(CASE WHEN -459154075 THEN x'' ELSE x'' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-273891088 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((x'')) AND ((0.4021891611153863))))|(((2.116798174E9) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-537311520'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-571607666 0 sz=0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-836897079 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=2060289340 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=275559670'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.920160730576708, 0xffffffffd4f96736)) BETWEEN ((CASE '-1068060464'  WHEN 'W[M' THEN 0.5303011183377173 END, ((((0.40452763043338313)AND(0.9840196422399753)))OR(NULL)), (('7f')|('-843275278')))) AND (('-2134329750', (NOT (0xffffffffbf4c935e)), ('-329171880' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-1130985236')OR((~ (x'')))))AND((('1299958892') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1213324698 sz=-543219515'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'bf82')AND(-1.526770338E9)))AND(0.3404858217326072))) NOT BETWEEN (((('-382129808'))=((NULL)))) AND ((('2118488194')<(0Xfffffffffdfb0148)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-739679517 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=348671563 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1621018412 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('l'))<((NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1502798511 0 sz=772760042 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1667674522'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1785637663 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT x'' COLLATE RTRIM, 0.678599872225541); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((198151980)IS NOT('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1365607636 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=1476882687 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '519530257 1239630715 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1068060464 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.8488909974527628  WHEN NULL THEN -458370244 WHEN 424977497 THEN '-843275278' WHEN NULL THEN 0.29127786463507344 END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1466662088' THEN NULL END) NOT BETWEEN ((~ (x''))) AND ((('-619176159')!=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-468098520'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1223037404 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=780926466 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '|Dc芎N1u2*'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((NOT (NULL)))) AND (((((0.658061667747225))<=(('1964915178')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-478584629 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((~ ('399410818')), ((x'')IS NOT('1101700408'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-541515210 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6737035901259801) IS TRUE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1034084369 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.1924793991403395)*(-1115989762)))AND(0.9880679124134306)))AND(('86976877' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=-329171880 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1184271595 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>=('711938625')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1837002265 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS INTEGER)  WHEN (((('')OR('1769959870')))AND('斴냐')) THEN '-173581487' COLLATE BINARY WHEN (~ (-2.38340675E8)) THEN ((NULL) NOTNULL) WHEN CASE WHEN '489169559' THEN x'624d' WHEN '2008282813' THEN 0.9554723765684913 WHEN x'e25d5584' THEN '+u둿mN' END THEN (('Gq%2\rbzE')&('cG')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1130521290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-242957938 2 sz=-214350012'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)/(NULL)) THEN CASE WHEN x'' THEN x'' END ELSE CASE ''  WHEN '-1884172822' THEN '2115736519' WHEN x'a5dd' THEN '-1068060464' WHEN x'' THEN 0.09980690843579132 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=2025797005 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1255304392'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '389104295 sz=929251712'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR('-898982909')))AND(NULL))) NOT BETWEEN (((NULL)>>(NULL))) AND (((NULL)-('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1964915178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-5316940 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.002747640927436623)IS NOT(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'be0c' THEN 212671589 END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(x'8916' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=2115736519'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-15524452 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=-1922409890 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')%('-898982909')))AND(CASE WHEN x'' THEN 'Vg뺇>)郌 ' ELSE '-1305875327' END)))AND(NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-234071582 sz=1527810814 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
UPDATE OR ABORT rt1 SET c0=x''; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES ((~ (0.8204179071253092)), NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c2, c1) VALUES ('1299958892', 0.21257604537705221, 0.6871261898584284), (x'', 0.7560078107480784, '-1631028318'), ('0.9720383599982317', 0x79130454, 0.2540378363872693); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1078242363 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1323315844 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.5165443888806263)>=(0.006249361701708311)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-555700071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1299958892 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')%((+ (-42254275)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1946176662 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1301368269 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '20373696 0 sz=1776338870 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (NULL) AND (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('196896505' AS REAL) AS NUMERIC); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '1214805814 sz=-1039528103'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('HdLt')AND(NULL)))OR(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(-650354846))) NOT BETWEEN ((('	|q+伓,I')/(NULL))) AND (-1.115989762E9 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'8d04'))) ISNULL); -- 5ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.24744794183843466 THEN ' ' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2009982679 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=725652370 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('836344027') NOT BETWEEN (x'') AND ('')))AND(((((((((((((0xffffffffcce79894)AND(x'')))OR(x'')))OR(x'')))OR(x'')))OR(0.3562417449542734)))AND(0.059916221932527214)))))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))LIKE('<(' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=192309118'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '212671589 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-843275278 -1391669309 1460209911 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-482128461 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1413505719)>('983729684')))LIKE(((x'') NOT BETWEEN (0.993647577789535) AND (0X47d79268)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN 0.0629281596463277 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1913475119 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '957880420 2101425880 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '2 sz=453699051 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.7341538785704413))==((x'4cae'))) THEN ((((NULL)AND(0Xffffffff8c732708)))AND(x'')) ELSE ((x'')<=(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1686741924 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('') NOT BETWEEN ('-1603742809') AND (NULL)) IN (6.24464093E8, NULLIF(DISTINCT '639331771', 0.8765470293271095))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((x''))==((0.4664112619300885))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1934914485 sz=-729210506 unordered noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1752132324 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1302319173 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffe99493e6; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1487481732 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1534019152 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=692382100 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2012292436 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1487931836' THEN 0.2583610371620677 ELSE x'' END)<(('銓_ZPFP7j>' IN (x'1d29')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5901') BETWEEN (0.7966416363202873) AND (0.7794119557139992))) NOT BETWEEN ((NOT (NULL))) AND (x'92b0')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-26686010 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(-1115989762 AS REAL))OR((~ ('1795786095')))))AND((NULL IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-234744131 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1413505719 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=46092396'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=522587342 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=1207259341'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=915013952 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '-1924903992'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')!=(CAST(x'2452' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-537311520 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1424283083 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '2 sz=-397760237'); -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1322263208 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-537311520')-(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=587032680 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-533174287 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-1807108320 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))<(CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN '37677768' ELSE x'' END)>=(((0.9134741807396259) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1231112355 0 sz=-486922432'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1938610424'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1769959870 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-595033405'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.2390446618005745, 0x1a2c5b64, 0x46143248)) BETWEEN (('', 0.6446424377408262, NULL)) AND ((x'', x'f55e', x'76d1'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') ISNULL))LIKE('0.8186349391777369')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 sz=-1466662088'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)<>(711938625)))OR(((0.14921766341186515)>>(0x4ad26cc8)))))AND((('0.5891683438545305') BETWEEN (NULL) AND (0.6245531493712434)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=216872962'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '2 sz=522587342 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1631028318 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN '-747797038' END)-(((x'')||('-1541436494')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.7461262873449399, '-1466662088', 0.6027522196484586, 0.002292424140517668, 'V'))<((x'cddc', -1.968654341E9, NULL, '1544440157', ''))))OR(x'' COLLATE RTRIM)))AND(((((0.20624049771196307)OR('893614998')))OR(x'52f0')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>=(-1059209785))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-109281054 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-228635489 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((IFNULL(4.24977497E8, NULL)))<((((0.08843238221422023)>>('#|[5tDmn'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-400641592 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1526770338 sz=46092396'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1054492683' AS REAL))LIKE(CASE WHEN x'' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8850' COLLATE RTRIM)AND((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-893252697'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS('-1504557900'))) BETWEEN ((+ (-2128584252))) AND ((((x'', 'ikud', x'ec22'))<=((-2.093352024E9, x'', 0.06631649501936532))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 -1143708300 sz=2141985168 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN (0.396318948766066)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1666543921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (-2076882463))  WHEN 0X7fffffffffffffff THEN 0x40767e60 COLLATE NOCASE ELSE ((0x6fc9cb8b) NOT BETWEEN (x'') AND (0.5832356464852064)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1507529897 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1115989762'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((IFNULL(NULL, 0Xfffffffff75939c0))AND(load_extension(0.24572877720312558, ''))))OR(((0.8636550701662754)&('-1884172822')))))AND((((x'026c58ed'))<=((''))))))AND(((x'')IS(0.9052252802526733)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1922409890 0 noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1900838425 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 sz=-1904773632'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1595028497 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=33864665'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('9艹r}' AS NUMERIC)  WHEN (('') IS TRUE) THEN PRINTF('Gq%2\rbzE') WHEN ((x'0856')<(NULL)) THEN CASE 0.10404371773459153  WHEN '' THEN '-2035314620' ELSE '0.49112857928708487' END WHEN (((('-887124680')OR(NULL)))AND(' y')) THEN (x'78c9' IN ()) ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))!=(((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((x'')=('0.9299624164721251'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=624464093 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-268884406'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1968654341 658858663 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.6991347698755501)=(0.5579845350478106)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('0.6682446847160849')OR(x'')))AND(x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 -1249895512 sz=-2075174517 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') BETWEEN (0Xffffffffa65244b4) AND ('1214805814')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-564249047')*(0xffffffffb45c83d4))) BETWEEN (CAST(0Xffffffffb897d536 AS BLOB)) AND (((0x66cfc50)>('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1466662088 sz=1769959870 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1081507424 -493942326 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((('0.9522764196803353', x'cb17885a', x''))>((0Xffffffffa59e4aaa, 0.17666275233479622, '1512291719'))))AND(((0.5825460986680283) NOT BETWEEN (x'') AND (0.37860360495333645)))))AND(x'a4ce91c1' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-665165861 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 sz=-437207114 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1065013358 -1527536341 sz=-13246488'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '33864665 sz=1517241543 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=37677768 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('842605528')) NOT BETWEEN ((0.763193980531167)) AND (('()'))) IN ((((0.949139326504766)) BETWEEN ((0.42044895055106457)) AND ((0xffffffff92293e73))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-2015548930'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-976987660 1853247454 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-565686141 sz=424977497 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1669051779 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE RTRIM COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2027405884 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1255304392'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1206637151 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(x'', x'') COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1008455498 sz=-1092016769'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1963936360'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=549382213 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1404220107 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1431953950 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1783478944 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight((0.7425710030655326 IN ()), ((((NULL)OR(0.9203886919282598)))AND(x'')), GLOB(0.3290040143592964, x'6327'), CAST('#-' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2008282813 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1240922574 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-汫쩷5*zOᵩ' AS TEXT)) BETWEEN (CAST(0.688329793806704 AS BLOB)) AND (((((NULL)OR('')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('1270541930' AS REAL))OR('349583577' COLLATE BINARY)))AND(((((((((x'')OR(1526314332)))AND(0.16801656866391035)))OR('')))OR(x'1d01')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-1226280528 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2090732258 sz=-537311520 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((NULL, x'', 0xffffffffc20a0f59))>((0Xffffffffabbf9d49, 0.7991513107000567, 0.8879571921652759))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('T䑤tPqDd') ISNULL))/(((NULL)&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=175815194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=929251712'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN '-1520583887' WHEN -1.884172822E9 THEN NULL WHEN x'' THEN 0.3827139191990563 ELSE x'' END THEN (x'' IN (NULL, x'')) WHEN -1281554417 THEN ((x'f877dc74')LIKE('0.8186349391777369')) WHEN ((NULL)|(NULL)) THEN (0xffffffff86af9044 IN ()) WHEN ((0.2713387535085251) NOT NULL) THEN ((0.3404858217326072)<=(0.5760517533274112)) WHEN (NULL IN ('u3\r')) THEN ((((0.9129240744514573)OR(x'702c')))OR('-1626593878')) WHEN CAST(NULL AS TEXT) THEN ((0.9240563953247319) ISNULL) WHEN -1663650964 THEN ((x'') NOT BETWEEN (NULL) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=510544407'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1326844544 sz=-1675707467'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-650354846 sz=-1682605860'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('179686235')GLOB('NiIbXedu'))  WHEN (0.4938778973932587 IN ()) THEN (+ (NULL)) WHEN CAST(x'1a9d' AS NUMERIC) THEN TYPEOF('2043512940') WHEN 0Xffffffffaad79fbd THEN (((x'', x'', 0xfffffffffa8190cc))=((x'', 909628994, NULL))) ELSE '317936615' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1780622508'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 -1377225799 sz=-655270422 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1489889000 sz=352847030 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-703122978 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-173581487'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-898982909 -2003486003 sz=1056958479'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'7114')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1350671294 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-726872789 sz=1755237900 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))GLOB(json_object(NULL, 0.30829666855005977))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (UPPER('-883841141'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1624523847')AND(NULL)))OR(x''))) BETWEEN (CAST(x'' AS INTEGER)) AND (((0.03710543636986441)<=(0.7069104440601387)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1466662088 sz=-238126343'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (x'') AND ('-2107376904')))AND(((((NULL)OR(x'1beb')))OR('1097196435')))))OR(CASE WHEN 0.8427576626420256 THEN 0.8282801847569463 ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(''))) BETWEEN ((0.3404858217326072 IN (x'90d6', x''))) AND (CASE WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-608933534 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1497157673'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-2131003650 0 550826144'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-896687547 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.32278080621686167 AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('864765127')) BETWEEN ((CASE WHEN '-963469384' THEN '-2118424159' ELSE 0xffffffffcbb39682 END)) AND (((- ('-1962822848'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE x''  WHEN NULL THEN 0.04798963651027055 WHEN '' THEN '6ZGh' WHEN -5.4583107E7 THEN NULL ELSE 0.3053713679871528 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-238126343 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-615646667 sz=1013454272 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'k'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1245384119 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-876677370 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN ((0x7acd853c IN (x'', 0.9794113506860928))) AND (((0.5377647285174938) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('xlYcJ0I+', 0.5828684839998116, 0.870878709410246)) NOT BETWEEN (('LX', x'', '0.74688676059716')) AND (('-913458293', x'', '>'))))<(CAST(0X13e518b AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((')爩[<\n') NOTNULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-329171880'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))=(((((0Xffffffffe81eb1c8, 0X7de24976, '1081507424'))<=((x'', x'', 1081507424)))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1477296875 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '646478059'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 2008282813 COLLATE BINARY  WHEN (+ ('0.34813895464803557')) THEN (- (x'cc9e')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1597982617 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-999626860 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-952549615'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1185038724 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1255304392 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1460472075 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(NULL))<>(IFNULL(DISTINCT NULL, x'99a6'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4 sz=-831568175'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-836897079 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.8325208133053955)==(x'019699ba')) THEN (((((((((((('|}')OR(NULL)))OR(NULL)))OR('-1651010602')))AND(NULL)))OR(0.5003830320410447)))OR('')) ELSE x'' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=360786722 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1160642483 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.8225507698128058)))OR(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2121600166 sz=1475056709'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-634779878 sz=793706358'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '347295412'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '-1297911853 -1319143325 sz=-104198595 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-120923493 0 sz=1769959870 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-790556969'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'79148326'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('鉷[kg7')<>(x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'2d9c') BETWEEN ('-364087326') AND ('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1777885582 noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=374530912'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1750314440'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN ('0.8032377348261764') AND (x'b53a'))))<=((((((3.60786722E8)AND('-196896445')))OR(0.6325827783029477))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=711938625 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1862468637 sz=143779557 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1758641581 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-467296295 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-898982909'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8951408384282792) ISNULL))AND(('l~' IN ()))))AND(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-913458293 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1528196608 sz=1964915178'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffffe81eb1c8)<>(NULL)))AND(((((0.2224742309701092)AND(0x10697796)))OR(x'6998')))))OR(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1299958892') NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1476882687'))<((CASE x'f131'  WHEN 0.6288129280720336 THEN '1299958892' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('957880420' IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-204150986 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-878371520 1299958892 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '375717925 sz=1601836908'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.7788808104883713; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=286953508 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1461538074 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS FALSE) IN ((x'12e8' IN (-243112183)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=50082884 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.7220731349328882 COLLATE RTRIM IN (((((0.28905529302892474)OR(x'4f7b')))AND(1964915178)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1816233973 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (x'')), ((0.74688676059716)AND(0.9934509031340794)), ((((((((0.046595388728625675)AND(1429338569)))OR(0.7411044845661161)))OR(0.22963593857328923)))OR(x''))))!=(((- ('],Y?j2Q<럻')), ((0X4a6728e1)>(0xffffffffebf6a9c8)), (('-386733936') NOT NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'', '-1678879076', NULL)) BETWEEN ((NULL, x'', x'')) AND ((NULL, 0.9378442197011555, ''))))AND((((0xfffffffff78a146d))>=((NULL))))))OR((NOT (1.081507424E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-563866452'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-329171880'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-898982909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-396797514 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1512291719') ISNULL))OR(((NULL) NOT BETWEEN (0.9001981759067565) AND ('-1804594385')))))AND(((x'')GLOB(x'')))))OR(((('J0')) BETWEEN ((x'')) AND ((NULL))))))AND(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch((((x''))<=(('-510494678'))), CASE NULL  WHEN x'' THEN 895163753 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1453668022 sz=1094304420'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ((~ (1512291719)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((8.6976877E7) ISNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)|(((((0.2595124754293042)AND(x'')))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1161910870 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '275559670 sz=-1835118438 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('c9' IN (x'001e', 0.688329793806704)))-(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((((((((x'fdd4')AND('9+eJ')))OR(x'')))OR(0X71a33790)))OR(0.42939546043006827))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<(NULL)))>>(((((x'')AND(x'')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1609447002 sz=44425502 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=143779557'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1091920756 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-400641592 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'd232')/((('0.439137307173066')!=(0x1b1c081b)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('i&ntv#/붇')OR(NULL)))OR('8￿Q8~'''))) NOT BETWEEN (1321427895) AND ((+ ('}')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UPPER(DISTINCT '-1865261605'))AND((('-2103453408')IS NOT('349583577')))))OR(((('箢VZ2Z㱘 	'))<=((0Xffffffffbd990c55))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.8025688612657865)OR('\\Ec')))AND(NULL))))==((((0.023267242713717495)AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 -537311520 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 1297139830 sz=1891710181 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-688857703 0 sz=-510420987 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1289972022 2 sz=-437207114 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(NULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '2 sz=-321183038 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-992583548'); -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -399537786 sz=-1571111215'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1053205583 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '4 sz=1684630902 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '265660040'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((1398998318)AND(0.688384534737006)))OR(0X2dc09645)))AND((('4''')<(0.37132913050706706)))))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('939547521')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 sz=-1201044896 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 2 sz=-145147456'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('沿b' COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1101700408 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-439962097 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' IN ())))>=((CASE 2064195051  WHEN x'6be7' THEN 0Xffffffffa65244b4 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1964915178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0Xb77e8fa AS REAL))==(((x'')&(756235354)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=521091663 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '2 sz=1214805814 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1298178634 1053718050'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=860243044'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.20397267219121118)<<(x'')))OR(((((x'a332')AND(0.5930743202182371)))AND(0.38271225212575355)))))OR(0x3fdaee8d COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=115226845 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CAST(0.7860172828210905 AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1891200407 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB('-1511441636')))GLOB(MAX('c,䑤I%]HJ/', x'e7ed'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-970976059' AS BLOB))|('-0.0')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2113293562 -1377225799 sz=-1851054274 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-242747340 sz=1035037557 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '273924630 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2843084 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))AND((('143779557') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1129288323'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1922409890 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1180918286 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-110058948 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1535638724 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=655207566'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1526770338 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 -729582951 sz=-1530699200'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1536344152 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=895163753 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1434254285 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1377225799 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1169352273 -400641592 sz=178513422 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=389104295 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1103613103 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1039528103 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.7482115371088697)IS NOT(-1580173355)))AND(CASE '-1938610424'  WHEN x'0142' THEN '143779557' ELSE 'H#g#B' END)))AND(((NULL) BETWEEN (NULL) AND ('929251712')))))AND((((('')OR(x'')))OR(x'')))))OR(0xffffffffdfcbf276)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-742602818 2 sz=-1467986070 unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1530450516 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=2116798174 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(CASE 0.49053354561942286  WHEN x'16a6' THEN '%Js' WHEN NULL THEN 2.008282813E9 WHEN 0.8603501431423883 THEN '' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1839749878 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('1697924154' IN ()), (- ('>vL-b[')), ((x'')+(0.686025323017153)), CASE x'd9bdeec0'  WHEN NULL THEN 0x14d638d9 END, (- (0.0016243713290483575))))<((x'', ((x'f9a9')*(0Xffffffffffbcbcc5)), ((0Xffffffffdb88c900)-('')), '895163753', x'' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1146580117 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=167562767 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('716337043')OR(x'ce4b4dd6')))OR(x'37da')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1879406423')+(0.239887094134543)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-1488853444 278051870'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-10972976 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=-650354846'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1316603241 2 1613662728 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-437298630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-843275278 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1551641470 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '2 sz=-1031151177 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.068060464E9) IS FALSE) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1055357896 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-836897079 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(SUBSTR(0.14208037829215903, 2.126539651E9) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1299958892 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LENGTH(x''))AND(((((x'')AND(x'')))OR('')))))OR(CAST(0.7586922478516086 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-579986696 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-1526770338 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1770782177 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-836897079 4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4072478770223983)>=(0x7e2bc6de)))>(((((((((-712834890)AND('Z핽i')))AND(x'81bb')))OR('1_J|1Ti')))AND('582745052')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CAST('oD' AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1846738559 sz=-2035314620'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' THEN 0.9535305839862571 ELSE '' END COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-400641592 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1504557900 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-989523757 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1907514023 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1163670091'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1711902449 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2028429066 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((('J	sNCcb췪' IN (NULL)))) AND ((COALESCE(0.9321132932135272, 0.3950730215757461)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('풁SR殃')OR('c}')) COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-320740166 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.376199732173749 THEN '33864665' ELSE NULL END) NOT BETWEEN (((NULL) NOT NULL)) AND ((((('')OR(NULL)))OR(2.126539651E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.35989832971078706)) NOT BETWEEN (('' COLLATE BINARY)) AND (((~ (0.5932638856698641))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY('-439962097', x'', '1608321449')) NOT BETWEEN (NULL COLLATE NOCASE) AND (TRIM(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1275677040 1236718937 sz=1537934703 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=711938625 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.4626729378217401 AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CASE NULL  WHEN x'' THEN 0.629603662571532 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '4 sz=-1554672788 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-83527360 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1917943933 sz=425752389 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-1137277653 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=915516655'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '860243044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE) COLLATE NOCASE COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 -1039270466 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 158893866 sz=1404220107 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS REAL)  WHEN 0Xffffffff923c2ce6 THEN (NOT (x'a282')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 sz=-1149671626 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1480351059 0 sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-5316940.0)) NOT BETWEEN (('522587342')) AND ((((0.2939522123901278)<<('&'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1161070212 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 sz=125622808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=895163753 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=832853593 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2047455952 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (0xffffffff8870a55d) AND (0.22236704122373607)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2126539651 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1752116365 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (NULL)) THEN CAST(-845110897 AS REAL) ELSE ((0.8246532659155043) NOT BETWEEN (NULL) AND (0.31181328642844797)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=2116798174 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.10859125408922232; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-782358862 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' COLLATE BINARY THEN (NULL IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))>(((659383950)|(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'fc61') BETWEEN ((('') NOT BETWEEN ('\懼') AND ('Z	\n+'))) AND ((((NULL)) NOT BETWEEN (('')) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=895163753 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))IS(((NULL)<>('銓_ZPFP7j>')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=-913458293 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1487931836 sz=1321427895 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1239630715 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))>=(('-173581487'))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1575652291 sz=1769959870 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(NULL COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELIHOOD(DISTINCT x'0c778871', 0.39872245510181825) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('624464093')OR(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=424977497 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=419136633 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1968654341 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5421582451668937)>('-1068060464')), (((('-1079113881')AND(0.3015657273252488)))OR(0.8379636144287061)), ((((((((0Xffffffffb39b60c7)OR(1582033607)))AND(NULL)))AND(NULL)))AND(x'10a497cf'))))>((((-4.00641592E8) IS TRUE), x'856f' COLLATE RTRIM, ((x'2df7') NOT BETWEEN ('~?zO>TZ') AND ('d7)32&}-'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((x'')AND('NiIbXedu')))AND('2064195051')))OR('')))OR('-1339008205')))OR((((NULL))<>((0Xfffffffff4298bbb))))))AND((87278417 IN ('-1928091300')))))OR((0.1591647210595979 IN ()))))AND((('(X^EZM*.') NOT BETWEEN (x'0d657c39') AND (3.17936615E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1674786737 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1454696913 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1491203463 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>(NULL)))>>(((NULL)>>('1385891046')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=334211777 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1461010447 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN ((('509299430')GLOB(x'959c'))) AND (CASE WHEN NULL THEN 0Xfffffffffd70bdea WHEN 0.8657267511022754 THEN '0.8657267511022754' WHEN '' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1076541236 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.46084461706325897)>>(x'07fb')))GLOB(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1476882687')LIKE(x'ef8a')))*(((-1001025490) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('갡#')) NOT BETWEEN (('-2015548930')) AND ((975070650))))GLOB((+ ('0.5579845350478106')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-911031055'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1934866486 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1684722005'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '46092396 sz=-1024101535'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '3k1Y2馺5'  WHEN x'ed88' THEN NULL END) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=80436501 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-1310526036'))<=(('-1837962369'))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-163818807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.26189378087566706) ISNULL))OR((((NULL, 0.5878219079190212, NULL)) NOT BETWEEN ((-1.413505719E9, 0.5600141849854279, '876Xa')) AND ((NULL, 614074664, ''))))))AND(CASE WHEN 3.49583577E8 THEN -1377225799 WHEN 0.8374260118557552 THEN NULL WHEN x'ed0d' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1260224029 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-439962097 sz=1013454272 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-369593121 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'', NULL, 0.7072928746443452)) BETWEEN (('1717373264', 'uJ ⍖P', 'v>')) AND (('*', '1636989633', NULL))) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.08872799812995336 THEN '-646040391' ELSE x'' END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8696828446682979 IN ()))<=(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1413505719 -1153791970 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 384199851 0 sz=349583577 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(''))) BETWEEN (((x'')=(1174083418))) AND (json_type(0.6446424377408262))); -- 0ms;
DELETE FROM sqlite_stat1; -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2.093352024E9)) BETWEEN (('+M')) AND ((1.081507424E9)))) NOT BETWEEN ((('xw')<=(x'47c3'))) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '507480329 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 404422367 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE NOCASE)OR((('&1s') IS TRUE))))OR('1255609288')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('0.3851038259006002' AS REAL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('}H''t8I')<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 -769380416 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-507071285'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-437207114' AS BLOB)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-2057726133'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1663650964')) NOT BETWEEN (((('EvPyHtVaU')>>('1366404075')))) AND (((2064195051 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.896434651503914))==((NULL)))  WHEN (~ (NULL)) THEN (0.08849487958309699 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '飉w_h.' COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1973071174 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '389104295'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-728565107 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('-1663650964')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-329171880 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1467968183 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-364807990 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 -1634343147 sz=-2015548930 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-668441650 sz=-1115989762'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 0 sz=220838405 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=840276468 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1001025490 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.35798766836448637', ((0.10476726472242259)-(0.7230939125696609)), ((NULL)IS(x'787a'))))>((x'', ((NULL) BETWEEN (x'26b1') AND ('')), (NULL IN ('dX<4Bob'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('349583577')<=('F9S	^')))<=(((0Xffffffffcb92f92b)LIKE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '1662478446 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 'DzSGD⢘'  WHEN 0.938989220454201 THEN 0.7015117107659986 WHEN '-776983953' THEN -2.38126343E8 WHEN 0.39659731406271537 THEN '-1039374704' END)OR(((0.37034481386962326)>=(0.5993773734381448)))))OR((NOT ('0.517862165340056')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CASE WHEN '-327748515' THEN 0x4313c637 WHEN '0.3987583456921798' THEN -1934866486 WHEN '-437207114' THEN 0.6682446847160849 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4225275169763385) BETWEEN ('811139923') AND ('-1966910191'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(0.4041940714839469)))OR('.Y-環2[')))AND('-1001025490')))OR('iW?P')))*(((-897644956) BETWEEN (-1500193798) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1586535415'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X49e3437b) NOT BETWEEN (0.11511542462555668) AND ('\\')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN CAST(NULL AS BLOB) THEN COALESCE(0.15339496392468344, 0.2051530153337734, -1934866486, 0.7659970127782246) WHEN -1253831672 THEN '-14574439' WHEN ('' IN ('121328343')) THEN ((((((((NULL)AND(x'')))AND(x'4140')))OR(NULL)))OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-1475824205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ((('Zq')<<('-872930205')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN 0.45549225165815255 THEN '' WHEN 0.10233900642984906 THEN x'c980' WHEN '62311835' THEN '-1299080023' ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1431849479 sz=-173412563'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1377225799'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.0649829365736948')IS(1.335618155E9)))AND(CASE WHEN x'' THEN NULL ELSE 0.0990336175754245 END)))OR((('-1068060464') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-898982909' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1487931836 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('-715085795')OR('275559670')))AND(NULL)))AND('1535417378')))OR('522587342'))))<((((NULL)OR(NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-581768259 sz=-1574313137'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-552453900 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(NULL, 2.116798174E9, 0.6192516749204076, NULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-70113871 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '193181179 sz=-1922409890'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7135004545688549)IS NOT(0.8619198173686468)))!=((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-145147456 0 sz=681760106 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1116178035 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('539787139' AS TEXT))AND(x'' COLLATE RTRIM)))OR(CASE WHEN 8.6976877E7 THEN x'4c36' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=329068134 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9930797653243733)=(NULL)))GLOB(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-329171880 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1846977265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1476882687 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1598705389 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff9e12e880; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ ('1013454272')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-400641592'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=275559670 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.18286637428944408 AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1769959870'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2038693680 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '\r'  WHEN NULL THEN x'' ELSE '-1631028318' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1045349769)) NOT BETWEEN (((0.9144160578969374 IN (0.7202191079801543, 'SΆ줍U')))) AND ((NULL COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 2 -1716806735 sz=-1526770338'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-111141962 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1924903992 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '116800951 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(NULL)))-((('')>>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) IS FALSE), (((8.95163753E8))!=(('1772181970'))), ((0x1cd53ac2)&('37677768'))))>((((-880655072) NOT BETWEEN (NULL) AND (NULL)), CAST('-329171880' AS REAL), ((x'e423') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0x77bc2993)>=('424977497')) THEN ((NULL) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-286425428 sz=1512291719 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1214805814 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1683415388'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1530699200 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=606573936 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 sz=143779557 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.08538273006277541)))>((((x''))!=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '2119971846 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1597387592'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.2117887408192829)>(x'')))OR(TRIM(DISTINCT NULL))))OR(CASE -1.73581487E8  WHEN 0.6599704062211559 THEN NULL WHEN NULL THEN 'an' WHEN x'' THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x39181864; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 'RꦽRu', 483579816))<((0.24888779683513207, NULL, NULL))) COLLATE BINARY; -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((('I\nc!eitR')+(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<((+ ('-1677128771')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1719314287 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-79812385 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((((NULL, NULL, 0.165707067673743)) BETWEEN ((NULL, '447764343', x'')) AND ((NULL, 0.6687030944602517, 0xffffffff849a230d)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-2049589098 0'); -- 0ms;
UPDATE vt0 SET c1=NULL, c1=0.31181328642844797; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c73; -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 12ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60968'); -- 1ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
UPDATE rt1 SET c3=1.255304392E9 WHERE ((((rt1.c1)|(rt1.c0)))LIKE(rt1.c1 COLLATE BINARY)); -- 0ms;
PRAGMA temp.foreign_keys = false; -- 3ms;
PRAGMA busy_timeout = 0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 441925350); -- 0ms;
REINDEX  t0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c2)=(0.975865900180346, 'cf', 896134333) WHERE (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0)|(vt0.c0)), ((vt0.c2)LIKE(vt0.c0)), (vt0.c2 IN ()))) AND ((CAST(vt0.c1 AS INTEGER), ((vt0.c2) IS FALSE), ((vt0.c2) IS TRUE)))); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ABORT t0 SET c73='275559670', c73=0.74688676059716; -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1, c4, c0, c3) VALUES ('', x'713a', '-145147456', NULL, NULL); -- 0ms;
INSERT OR FAIL INTO t0(c73) VALUES (x''); -- 19ms;
UPDATE OR IGNORE rt1 SET (c2, c4)=(NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c73) VALUES ('-5316940'), (0.15144977445951546), (x'f567'); -- 0ms;
INSERT OR REPLACE INTO t0(c73) VALUES (0.34573082613275496); -- 19ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE t0 SET (c73)=('-970976059') WHERE LOWER(DISTINCT t0.c73 COLLATE BINARY); -- 20ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c73) VALUES ('4fnᨲ'); -- 0ms;
UPDATE OR REPLACE rt1 SET c0='-1503514998'; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('-54583107'); -- 1ms;
VACUUM main; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE t0 SET c73=NULL; -- 18ms;
ALTER TABLE t0 ADD COLUMN c39 BLOB; -- 20ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (0Xfffffffffb8d9b65); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1085106730,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63383'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1469303092);\n; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c73 TO c49; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(x'') WHERE CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN 0.6308602481179898 END; -- 0ms;
PRAGMA main.foreign_keys = false; -- 2ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c1='2Sꑙ%G/_ꑙ뮋' WHERE CASE WHEN CAST(0.7227228082909604 AS INTEGER) THEN ((rt1.c1)||(0.3925995193334554)) END; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT (((vt0.c2) ISNULL) IN ()) FROM rt1 WHERE (((((((((CASE WHEN NULL THEN x'' WHEN x'ef37' THEN '-1580429893' WHEN 1.43779557E8 THEN 1.476882687E9 ELSE x'7ab816c2' END)OR(CASE ''  WHEN x'' THEN NULL WHEN NULL THEN 0.060069110147486726 WHEN '0.17119100397389575' THEN x'' END)))OR(CAST(NULL AS REAL))))AND(((-289769267) BETWEEN (x'') AND (x'')))))OR(x'' COLLATE BINARY))); -- 21ms;
UPDATE rt1 SET c4=NULL; -- 0ms;
UPDATE vt0 SET (c1)=(0.6262199004503527) WHERE NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE temp; -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t0 SET (c39, c49)=(1.476882687E9, '-1424283083') WHERE ((t0.c49 COLLATE RTRIM) BETWEEN (t0.c49 COLLATE BINARY) AND (NULLIF(t0.c49, t0.c39))); -- 0ms;
PRAGMA cache_size; -- 0ms;
UPDATE vt0 SET c0=x'99f7'; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (CASE HEX(NULL)  WHEN NULL COLLATE RTRIM THEN (('硇Vﮨv')>>('')) ELSE (('-173581487')>>(0xffffffffdb181f21)) END, '-1238641991'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c39 TO c10; -- 4ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA application_id; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c49 TO c33; -- 3ms;
PRAGMA temp.application_id; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 15ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c1)=(x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0x56ee7f8, '275559670'); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3) VALUES (''), (x''), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA soft_heap_limit = 6362243277937809099; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE VIRTUAL TABLE rt60 USING rtree(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 629963121); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'v0', ' sz=-602472784 unordered noskipscan'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c32 INT; -- 0ms;
UPDATE rt1 SET (c4, c3)=(NULL, '707880967'); -- 0ms;
UPDATE OR IGNORE t0 SET c39='Jf-Infinity믄'; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c2)=(0X59a58220, x'183f') WHERE (TRIM(rt1.c2, rt1.c0) IN ()); -- 1ms;
INSERT OR IGNORE INTO rt60(c1, c0, c2) VALUES (NULL, NULL, x''); -- 0ms;
UPDATE OR IGNORE rt60 SET (c0, c0)=(x'd076', x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1115989762,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 256024802);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17694'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c2) VALUES (0.16833071769020358), (x''), (0.015234159416550042), (0.3981700400399337), (-5.20378449E8); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt60(c1, c0, c2) VALUES ('', NULL, 0x2a6f5241), (NULL, x'', '-s'), ('qG', NULL, '1239630715'); -- 32ms;
UPDATE OR IGNORE vt0 SET (c1)=('!\n()'); -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE t0 SET (c49, c39, c49)=('-92172084', '0.013679315993011754', x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1024794610); -- 0ms;
DELETE FROM t0; -- 0ms;
ALTER TABLE t0 ADD COLUMN c87 INTEGER; -- 20ms;
UPDATE OR IGNORE vt0 SET (c0)=(' 4^a&2nmK'); -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt60 WHERE (CAST(((rt60.c1) NOT BETWEEN (rt60.c2) AND (0X5a23bd87)) AS TEXT)) ORDER BY rt60.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt60.c1) NOT BETWEEN (rt60.c2) AND (0x5a23bd87)) AS TEXT)) IS TRUE)  as count FROM rt60 ORDER BY rt60.c1 DESC  NULLS LAST);
SELECT ALL * FROM rt60 WHERE (CAST(((rt60.c1) NOT BETWEEN (rt60.c2) AND (0X5a23bd87)) AS TEXT)) ORDER BY rt60.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt60.c1) NOT BETWEEN (rt60.c2) AND (0x5a23bd87)) AS TEXT)) IS TRUE)  as count FROM rt60 ORDER BY rt60.c1 DESC  NULLS LAST);
SELECT ALL * FROM rt60 WHERE (CAST(((rt60.c1) NOT BETWEEN (rt60.c2) AND (0X5a23bd87)) AS TEXT)) ORDER BY rt60.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)!=(vt0.c2)) THEN x'' ELSE ((vt0.c0)IS NOT(vt0.c1)) END) ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN x'2bfdda99' END COLLATE NOCASE  NULLS LAST, ((NULL)|((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)!=(vt0.c2)) THEN x'' ELSE ((vt0.c0)IS NOT(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN x'2bfdda99' END COLLATE NOCASE  NULLS LAST, ((NULL)|((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)!=(vt0.c2)) THEN x'' ELSE ((vt0.c0)IS NOT(vt0.c1)) END) ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN x'2bfdda99' END COLLATE NOCASE  NULLS LAST, ((NULL)|((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)!=(vt0.c2)) THEN x'' ELSE ((vt0.c0)IS NOT(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN x'2bfdda99' END COLLATE NOCASE  NULLS LAST, ((NULL)|((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)!=(vt0.c2)) THEN x'' ELSE ((vt0.c0)IS NOT(vt0.c1)) END) ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN x'2bfdda99' END COLLATE NOCASE  NULLS LAST, ((NULL)|((vt0.c0 IN ())))  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))%((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))%((~ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))%((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))%((~ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))%((~ (rt1.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, rt60, rt1 WHERE (rt60.c1);
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM v0, t0, rt60, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt60, rt1 WHERE (rt60.c1);
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM v0, t0, rt60, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt60, rt1 WHERE (rt60.c1);
SELECT ALL * FROM t0 WHERE ((((('0.2713387535085251')>=(t0.c87)))/(((((((((t0.c32)AND(t0.c32)))AND(t0.c49)))OR(t0.c49)))AND(t0.c39)))));
SELECT SUM(count) FROM (SELECT ALL (((((('0.2713387535085251')>=(t0.c87)))/(((((((((t0.c32)AND(t0.c32)))AND(t0.c49)))OR(t0.c49)))AND(t0.c39))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((('0.2713387535085251')>=(t0.c87)))/(((((((((t0.c32)AND(t0.c32)))AND(t0.c49)))OR(t0.c49)))AND(t0.c39)))));
SELECT SUM(count) FROM (SELECT ALL (((((('0.2713387535085251')>=(t0.c87)))/(((((((((t0.c32)AND(t0.c32)))AND(t0.c49)))OR(t0.c49)))AND(t0.c39))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((('0.2713387535085251')>=(t0.c87)))/(((((((((t0.c32)AND(t0.c32)))AND(t0.c49)))OR(t0.c49)))AND(t0.c39)))));
SELECT * FROM rt1 INNER JOIN rt60 ON (- (rt60.c2)) COLLATE BINARY COLLATE NOCASE WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 INNER JOIN rt60 ON (- (rt60.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM rt1 INNER JOIN rt60 ON (- (rt60.c2)) COLLATE BINARY COLLATE NOCASE WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 INNER JOIN rt60 ON (- (rt60.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM rt1 INNER JOIN rt60 ON (- (rt60.c2)) COLLATE BINARY COLLATE NOCASE WHERE (rt1.c1);
SELECT ALL * FROM vt0 WHERE (JULIANDAY(TRIM(vt0.c2, vt0.c0), (((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c1))), '-320051943'));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(TRIM(vt0.c2, vt0.c0), (((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c1))), '-320051943')) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (JULIANDAY(TRIM(vt0.c2, vt0.c0), (((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c1))), '-320051943'));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(TRIM(vt0.c2, vt0.c0), (((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c1))), '-320051943')) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (JULIANDAY(TRIM(vt0.c2, vt0.c0), (((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c1))), '-320051943'));
SELECT ALL COUNT(*) FROM vt0, t0, rt60, v0 WHERE (((v0.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt60, v0);
SELECT ALL COUNT(*) FROM vt0, t0, rt60, v0 WHERE (((v0.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt60, v0);
SELECT ALL COUNT(*) FROM vt0, t0, rt60, v0 WHERE (((v0.c0) ISNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (rt1.c0) ORDER BY rt1.c2, (((vt0.c2, rt1.c1, rt1.c1)) BETWEEN ((((rt1.c1)<<(vt0.c1)), (NOT (rt1.c0)), vt0.c1 COLLATE RTRIM)) AND ((rtreenode(x'', v0.c0), ((((rt1.c1)AND(vt0.c1)))AND(rt1.c3)), ((rt1.c4) NOT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY rt1.c2, (((vt0.c2, rt1.c1, rt1.c1)) BETWEEN ((((rt1.c1)<<(vt0.c1)), (NOT (rt1.c0)), vt0.c1 COLLATE RTRIM)) AND ((rtreenode(x'', v0.c0), ((((rt1.c1)AND(vt0.c1)))AND(rt1.c3)), ((rt1.c4) NOT NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (rt1.c0) ORDER BY rt1.c2, (((vt0.c2, rt1.c1, rt1.c1)) BETWEEN ((((rt1.c1)<<(vt0.c1)), (NOT (rt1.c0)), vt0.c1 COLLATE RTRIM)) AND ((rtreenode(x'', v0.c0), ((((rt1.c1)AND(vt0.c1)))AND(rt1.c3)), ((rt1.c4) NOT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY rt1.c2, (((vt0.c2, rt1.c1, rt1.c1)) BETWEEN ((((rt1.c1)<<(vt0.c1)), (NOT (rt1.c0)), vt0.c1 COLLATE RTRIM)) AND ((rtreenode(x'', v0.c0), ((((rt1.c1)AND(vt0.c1)))AND(rt1.c3)), ((rt1.c4) NOT NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (rt1.c0) ORDER BY rt1.c2, (((vt0.c2, rt1.c1, rt1.c1)) BETWEEN ((((rt1.c1)<<(vt0.c1)), (NOT (rt1.c0)), vt0.c1 COLLATE RTRIM)) AND ((rtreenode(x'', v0.c0), ((((rt1.c1)AND(vt0.c1)))AND(rt1.c3)), ((rt1.c4) NOT NULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, rt60 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE rt60.c2  WHEN vt0.c2 THEN vt0.c2 END)) AND (((- (rt60.c1)))))) ORDER BY 'X/Z';
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((CASE rt60.c2  WHEN vt0.c2 THEN vt0.c2 END)) AND (((- (rt60.c1)))))) IS TRUE)  as count FROM rt1, vt0, rt60 ORDER BY 'X/Z');
SELECT ALL COUNT(*) FROM rt1, vt0, rt60 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE rt60.c2  WHEN vt0.c2 THEN vt0.c2 END)) AND (((- (rt60.c1)))))) ORDER BY 'X/Z';
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((CASE rt60.c2  WHEN vt0.c2 THEN vt0.c2 END)) AND (((- (rt60.c1)))))) IS TRUE)  as count FROM rt1, vt0, rt60 ORDER BY 'X/Z');
SELECT ALL COUNT(*) FROM rt1, vt0, rt60 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE rt60.c2  WHEN vt0.c2 THEN vt0.c2 END)) AND (((- (rt60.c1)))))) ORDER BY 'X/Z';
SELECT * FROM vt0, v0, rt1, t0 WHERE ((((((rt1.c2)) NOT BETWEEN ((0xffffffff9bc534ef)) AND ((rt1.c4))))>=(t0.c49 COLLATE NOCASE))) ORDER BY CAST('114123579' AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((0Xffffffff9bc534ef)) AND ((rt1.c4))))>=(t0.c49 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, rt1, t0 ORDER BY CAST('114123579' AS REAL) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, v0, rt1, t0 WHERE ((((((rt1.c2)) NOT BETWEEN ((0xffffffff9bc534ef)) AND ((rt1.c4))))>=(t0.c49 COLLATE NOCASE))) ORDER BY CAST('114123579' AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((0Xffffffff9bc534ef)) AND ((rt1.c4))))>=(t0.c49 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, rt1, t0 ORDER BY CAST('114123579' AS REAL) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, v0, rt1, t0 WHERE ((((((rt1.c2)) NOT BETWEEN ((0xffffffff9bc534ef)) AND ((rt1.c4))))>=(t0.c49 COLLATE NOCASE))) ORDER BY CAST('114123579' AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((t0.c49)GLOB(vt0.c1))) BETWEEN (((t0.c49) NOTNULL)) AND (NULL)) LEFT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT ((vt0.c2)LIKE('')), 0.2191931136598776) FULL OUTER JOIN vt0 ON ((t0.c49) ISNULL) COLLATE BINARY WHERE (((NULLIF(t0.c87, rt1.c3)) NOT BETWEEN (((((rt1.c4)AND(rt1.c2)))OR(rt1.c3))) AND (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN t0.c49 WHEN vt0.c2 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c87, rt1.c3)) NOT BETWEEN (((((rt1.c4)AND(rt1.c2)))OR(rt1.c3))) AND (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN t0.c49 WHEN vt0.c2 THEN NULL END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((t0.c49)GLOB(vt0.c1))) BETWEEN (((t0.c49) NOTNULL)) AND (NULL)) LEFT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT ((vt0.c2)LIKE('')), 0.2191931136598776) FULL OUTER JOIN vt0 ON ((t0.c49) ISNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((t0.c49)GLOB(vt0.c1))) BETWEEN (((t0.c49) NOTNULL)) AND (NULL)) LEFT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT ((vt0.c2)LIKE('')), 0.2191931136598776) FULL OUTER JOIN vt0 ON ((t0.c49) ISNULL) COLLATE BINARY WHERE (((NULLIF(t0.c87, rt1.c3)) NOT BETWEEN (((((rt1.c4)AND(rt1.c2)))OR(rt1.c3))) AND (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN t0.c49 WHEN vt0.c2 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c87, rt1.c3)) NOT BETWEEN (((((rt1.c4)AND(rt1.c2)))OR(rt1.c3))) AND (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN t0.c49 WHEN vt0.c2 THEN NULL END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((t0.c49)GLOB(vt0.c1))) BETWEEN (((t0.c49) NOTNULL)) AND (NULL)) LEFT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT ((vt0.c2)LIKE('')), 0.2191931136598776) FULL OUTER JOIN vt0 ON ((t0.c49) ISNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt60, t0, v0, rt1 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0, rt60, t0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt60, t0, v0, rt1 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0, rt60, t0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt60, t0, v0, rt1 WHERE ((x'' IN ()));
SELECT ALL COUNT(*) FROM rt60, rt1 WHERE (((((rt60.c1) BETWEEN (rt1.c4) AND (rt60.c2)))<=(CASE rt1.c0  WHEN rt60.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN 0.4140105517690025 THEN rt60.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt60.c1) BETWEEN (rt1.c4) AND (rt60.c2)))<=(CASE rt1.c0  WHEN rt60.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN 0.4140105517690025 THEN rt60.c1 END))) IS TRUE)  as count FROM rt60, rt1);
SELECT ALL COUNT(*) FROM rt60, rt1 WHERE (((((rt60.c1) BETWEEN (rt1.c4) AND (rt60.c2)))<=(CASE rt1.c0  WHEN rt60.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN 0.4140105517690025 THEN rt60.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt60.c1) BETWEEN (rt1.c4) AND (rt60.c2)))<=(CASE rt1.c0  WHEN rt60.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN 0.4140105517690025 THEN rt60.c1 END))) IS TRUE)  as count FROM rt60, rt1);
SELECT ALL COUNT(*) FROM rt60, rt1 WHERE (((((rt60.c1) BETWEEN (rt1.c4) AND (rt60.c2)))<=(CASE rt1.c0  WHEN rt60.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN 0.4140105517690025 THEN rt60.c1 END)));
SELECT ALL COUNT(*) FROM rt60 RIGHT OUTER JOIN vt0 ON CAST(SUBSTR(0.9026849173758509, vt0.c1) AS TEXT) CROSS JOIN v0 ON load_extension(DATE(vt0.c1, vt0.c1, v0.c0)) WHERE (CASE WHEN ((vt0.c1) BETWEEN (rt60.c1) AND (vt0.c1)) THEN rt60.c2 COLLATE RTRIM ELSE ((vt0.c2)>>(rt60.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (rt60.c1) AND (vt0.c1)) THEN rt60.c2 COLLATE RTRIM ELSE ((vt0.c2)>>(rt60.c2)) END) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN vt0 ON CAST(SUBSTR(0.9026849173758509, vt0.c1) AS TEXT) CROSS JOIN v0 ON load_extension(DATE(vt0.c1, vt0.c1, v0.c0)));
SELECT ALL COUNT(*) FROM rt60 RIGHT OUTER JOIN vt0 ON CAST(SUBSTR(0.9026849173758509, vt0.c1) AS TEXT) CROSS JOIN v0 ON load_extension(DATE(vt0.c1, vt0.c1, v0.c0)) WHERE (CASE WHEN ((vt0.c1) BETWEEN (rt60.c1) AND (vt0.c1)) THEN rt60.c2 COLLATE RTRIM ELSE ((vt0.c2)>>(rt60.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (rt60.c1) AND (vt0.c1)) THEN rt60.c2 COLLATE RTRIM ELSE ((vt0.c2)>>(rt60.c2)) END) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN vt0 ON CAST(SUBSTR(0.9026849173758509, vt0.c1) AS TEXT) CROSS JOIN v0 ON load_extension(DATE(vt0.c1, vt0.c1, v0.c0)));
SELECT ALL COUNT(*) FROM rt60 RIGHT OUTER JOIN vt0 ON CAST(SUBSTR(0.9026849173758509, vt0.c1) AS TEXT) CROSS JOIN v0 ON load_extension(DATE(vt0.c1, vt0.c1, v0.c0)) WHERE (CASE WHEN ((vt0.c1) BETWEEN (rt60.c1) AND (vt0.c1)) THEN rt60.c2 COLLATE RTRIM ELSE ((vt0.c2)>>(rt60.c2)) END);
SELECT ALL COUNT(*) FROM rt1, t0, v0, rt60, vt0 WHERE (TYPEOF(((t0.c49) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t0.c49) ISNULL))) IS TRUE)  as count FROM rt1, t0, v0, rt60, vt0);
SELECT ALL COUNT(*) FROM rt1, t0, v0, rt60, vt0 WHERE (TYPEOF(((t0.c49) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t0.c49) ISNULL))) IS TRUE)  as count FROM rt1, t0, v0, rt60, vt0);
SELECT ALL COUNT(*) FROM rt1, t0, v0, rt60, vt0 WHERE (TYPEOF(((t0.c49) ISNULL)));
SELECT ALL * FROM rt60, v0 FULL OUTER JOIN rt1 ON ((rt60.c2)!=(((rt1.c3) ISNULL))) WHERE (((x'') NOT BETWEEN (rt60.c0) AND (rt1.c3)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (rt60.c0) AND (rt1.c3)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt60, v0 FULL OUTER JOIN rt1 ON ((rt60.c2)!=(((rt1.c3) ISNULL))));
SELECT ALL * FROM rt60, v0 FULL OUTER JOIN rt1 ON ((rt60.c2)!=(((rt1.c3) ISNULL))) WHERE (((x'') NOT BETWEEN (rt60.c0) AND (rt1.c3)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (rt60.c0) AND (rt1.c3)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt60, v0 FULL OUTER JOIN rt1 ON ((rt60.c2)!=(((rt1.c3) ISNULL))));
SELECT ALL * FROM rt60, v0 FULL OUTER JOIN rt1 ON ((rt60.c2)!=(((rt1.c3) ISNULL))) WHERE (((x'') NOT BETWEEN (rt60.c0) AND (rt1.c3)) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c39)))>=(((t0.c32) NOT BETWEEN (t0.c39) AND (v0.c0))))) ORDER BY LIKELIHOOD(((t0.c87) BETWEEN (t0.c32) AND (t0.c32)), 0.06647500449670518) ASC, t0.c87, ((x'')>>(v0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c39)))>=(((t0.c32) NOT BETWEEN (t0.c39) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY LIKELIHOOD(((t0.c87) BETWEEN (t0.c32) AND (t0.c32)), 0.06647500449670518) ASC, t0.c87, ((x'')>>(v0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c39)))>=(((t0.c32) NOT BETWEEN (t0.c39) AND (v0.c0))))) ORDER BY LIKELIHOOD(((t0.c87) BETWEEN (t0.c32) AND (t0.c32)), 0.06647500449670518) ASC, t0.c87, ((x'')>>(v0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c39)))>=(((t0.c32) NOT BETWEEN (t0.c39) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY LIKELIHOOD(((t0.c87) BETWEEN (t0.c32) AND (t0.c32)), 0.06647500449670518) ASC, t0.c87, ((x'')>>(v0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c39)))>=(((t0.c32) NOT BETWEEN (t0.c39) AND (v0.c0))))) ORDER BY LIKELIHOOD(((t0.c87) BETWEEN (t0.c32) AND (t0.c32)), 0.06647500449670518) ASC, t0.c87, ((x'')>>(v0.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM rt60, rt1 WHERE (CAST((rt1.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt60, rt1);
SELECT COUNT(*) FROM rt60, rt1 WHERE (CAST((rt1.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt60, rt1);
SELECT COUNT(*) FROM rt60, rt1 WHERE (CAST((rt1.c0 IN ()) AS REAL));
SELECT ALL * FROM rt60, v0, rt1 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt60.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (rt1.c1) AND (rt60.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt60, v0, rt1);
SELECT ALL * FROM rt60, v0, rt1 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt60.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (rt1.c1) AND (rt60.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt60, v0, rt1);
SELECT ALL * FROM rt60, v0, rt1 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt60.c2)) COLLATE BINARY);
SELECT * FROM rt60, t0, rt1, vt0, v0 WHERE (((~ (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN ())) IS TRUE)  as count FROM rt60, t0, rt1, vt0, v0);
SELECT * FROM rt60, t0, rt1, vt0, v0 WHERE (((~ (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN ())) IS TRUE)  as count FROM rt60, t0, rt1, vt0, v0);
SELECT * FROM rt60, t0, rt1, vt0, v0 WHERE (((~ (v0.c0)) IN ()));
SELECT * FROM vt0, rt60, v0, rt1, t0 WHERE (CASE ((rt60.c2)/(0.003342641853114503))  WHEN t0.c87 COLLATE RTRIM THEN ((rt1.c4)=(t0.c87)) ELSE (((rt60.c2, t0.c39, rt60.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c39)) AND ((rt1.c4, x'', vt0.c2))) END) ORDER BY ((rt1.c3)*(((rt60.c1) NOT BETWEEN (0.8906883507810094) AND (t0.c87))))  NULLS FIRST, ((vt0.c1)IS NOT(rt60.c1)) COLLATE BINARY DESC  NULLS FIRST, (((((rt60.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c3)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt60.c2)/(0.003342641853114503))  WHEN t0.c87 COLLATE RTRIM THEN ((rt1.c4)==(t0.c87)) ELSE (((rt60.c2, t0.c39, rt60.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c39)) AND ((rt1.c4, x'', vt0.c2))) END) IS TRUE)  as count FROM vt0, rt60, v0, rt1, t0 ORDER BY ((rt1.c3)*(((rt60.c1) NOT BETWEEN (0.8906883507810094) AND (t0.c87))))  NULLS FIRST, ((vt0.c1)IS NOT(rt60.c1)) COLLATE BINARY DESC  NULLS FIRST, (((((rt60.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c3)))) ISNULL));
SELECT * FROM vt0, rt60, v0, rt1, t0 WHERE (CASE ((rt60.c2)/(0.003342641853114503))  WHEN t0.c87 COLLATE RTRIM THEN ((rt1.c4)=(t0.c87)) ELSE (((rt60.c2, t0.c39, rt60.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c39)) AND ((rt1.c4, x'', vt0.c2))) END) ORDER BY ((rt1.c3)*(((rt60.c1) NOT BETWEEN (0.8906883507810094) AND (t0.c87))))  NULLS FIRST, ((vt0.c1)IS NOT(rt60.c1)) COLLATE BINARY DESC  NULLS FIRST, (((((rt60.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c3)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt60.c2)/(0.003342641853114503))  WHEN t0.c87 COLLATE RTRIM THEN ((rt1.c4)==(t0.c87)) ELSE (((rt60.c2, t0.c39, rt60.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c39)) AND ((rt1.c4, x'', vt0.c2))) END) IS TRUE)  as count FROM vt0, rt60, v0, rt1, t0 ORDER BY ((rt1.c3)*(((rt60.c1) NOT BETWEEN (0.8906883507810094) AND (t0.c87))))  NULLS FIRST, ((vt0.c1)IS NOT(rt60.c1)) COLLATE BINARY DESC  NULLS FIRST, (((((rt60.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c3)))) ISNULL));
SELECT * FROM vt0, rt60, v0, rt1, t0 WHERE (CASE ((rt60.c2)/(0.003342641853114503))  WHEN t0.c87 COLLATE RTRIM THEN ((rt1.c4)=(t0.c87)) ELSE (((rt60.c2, t0.c39, rt60.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c39)) AND ((rt1.c4, x'', vt0.c2))) END) ORDER BY ((rt1.c3)*(((rt60.c1) NOT BETWEEN (0.8906883507810094) AND (t0.c87))))  NULLS FIRST, ((vt0.c1)IS NOT(rt60.c1)) COLLATE BINARY DESC  NULLS FIRST, (((((rt60.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c3)))) ISNULL);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (SUBSTR((NULL IN ()), (+ (v0.c0)))) ORDER BY (NOT (TRIM(t0.c39)));
SELECT SUM(count) FROM (SELECT ((SUBSTR((NULL IN ()), (+ (v0.c0)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (NOT (TRIM(t0.c39))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (SUBSTR((NULL IN ()), (+ (v0.c0)))) ORDER BY (NOT (TRIM(t0.c39)));
SELECT SUM(count) FROM (SELECT ((SUBSTR((NULL IN ()), (+ (v0.c0)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (NOT (TRIM(t0.c39))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (SUBSTR((NULL IN ()), (+ (v0.c0)))) ORDER BY (NOT (TRIM(t0.c39)));
SELECT ALL * FROM vt0, v0, t0, rt1 WHERE (rt1.c3) ORDER BY NULLIF(DISTINCT ((((rt1.c1)OR(vt0.c2)))AND(vt0.c1)), ((t0.c32) NOT BETWEEN (rt1.c0) AND (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, v0, t0, rt1 ORDER BY NULLIF(DISTINCT ((((rt1.c1)OR(vt0.c2)))AND(vt0.c1)), ((t0.c32) NOT BETWEEN (rt1.c0) AND (rt1.c0))));
SELECT ALL * FROM vt0, v0, t0, rt1 WHERE (rt1.c3) ORDER BY NULLIF(DISTINCT ((((rt1.c1)OR(vt0.c2)))AND(vt0.c1)), ((t0.c32) NOT BETWEEN (rt1.c0) AND (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, v0, t0, rt1 ORDER BY NULLIF(DISTINCT ((((rt1.c1)OR(vt0.c2)))AND(vt0.c1)), ((t0.c32) NOT BETWEEN (rt1.c0) AND (rt1.c0))));
SELECT ALL * FROM vt0, v0, t0, rt1 WHERE (rt1.c3) ORDER BY NULLIF(DISTINCT ((((rt1.c1)OR(vt0.c2)))AND(vt0.c1)), ((t0.c32) NOT BETWEEN (rt1.c0) AND (rt1.c0)));
SELECT ALL * FROM rt60 INNER JOIN v0 ON ((CASE WHEN x'252f' THEN rt60.c1 END) NOT NULL) INNER JOIN t0 ON (((rt60.c1 IN (rt60.c1, t0.c87))) BETWEEN (0.4351258220344759) AND (vt0.c1)) LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c39)) THEN CASE WHEN '0.5761090600661584' THEN t0.c39 END WHEN (+ (t0.c49)) THEN (rt60.c2 IN ()) WHEN ((rt60.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((NULL)*(t0.c39)) ELSE ((t0.c39) BETWEEN (v0.c0) AND ('')) END WHERE (CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt60 INNER JOIN v0 ON ((CASE WHEN x'252f' THEN rt60.c1 END) NOT NULL) INNER JOIN t0 ON (((rt60.c1 IN (rt60.c1, t0.c87))) BETWEEN (0.4351258220344759) AND (vt0.c1)) LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c39)) THEN CASE WHEN '0.5761090600661584' THEN t0.c39 END WHEN (+ (t0.c49)) THEN (rt60.c2 IN ()) WHEN ((rt60.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((NULL)*(t0.c39)) ELSE ((t0.c39) BETWEEN (v0.c0) AND ('')) END);
SELECT ALL * FROM rt60 INNER JOIN v0 ON ((CASE WHEN x'252f' THEN rt60.c1 END) NOT NULL) INNER JOIN t0 ON (((rt60.c1 IN (rt60.c1, t0.c87))) BETWEEN (0.4351258220344759) AND (vt0.c1)) LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c39)) THEN CASE WHEN '0.5761090600661584' THEN t0.c39 END WHEN (+ (t0.c49)) THEN (rt60.c2 IN ()) WHEN ((rt60.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((NULL)*(t0.c39)) ELSE ((t0.c39) BETWEEN (v0.c0) AND ('')) END WHERE (CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt60 INNER JOIN v0 ON ((CASE WHEN x'252f' THEN rt60.c1 END) NOT NULL) INNER JOIN t0 ON (((rt60.c1 IN (rt60.c1, t0.c87))) BETWEEN (0.4351258220344759) AND (vt0.c1)) LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c39)) THEN CASE WHEN '0.5761090600661584' THEN t0.c39 END WHEN (+ (t0.c49)) THEN (rt60.c2 IN ()) WHEN ((rt60.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((NULL)*(t0.c39)) ELSE ((t0.c39) BETWEEN (v0.c0) AND ('')) END);
SELECT ALL * FROM rt60 INNER JOIN v0 ON ((CASE WHEN x'252f' THEN rt60.c1 END) NOT NULL) INNER JOIN t0 ON (((rt60.c1 IN (rt60.c1, t0.c87))) BETWEEN (0.4351258220344759) AND (vt0.c1)) LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c39)) THEN CASE WHEN '0.5761090600661584' THEN t0.c39 END WHEN (+ (t0.c49)) THEN (rt60.c2 IN ()) WHEN ((rt60.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((NULL)*(t0.c39)) ELSE ((t0.c39) BETWEEN (v0.c0) AND ('')) END WHERE (CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC));
SELECT COUNT(*) FROM v0 WHERE (((((NULL)OR(v0.c0)))LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(v0.c0)))LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((NULL)OR(v0.c0)))LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(v0.c0)))LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((NULL)OR(v0.c0)))LIKE((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT COUNT(*) FROM vt0, rt60 WHERE (((((vt0.c1)AND(rt60.c1)))/(rt60.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(rt60.c1)))/(rt60.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt60);
SELECT COUNT(*) FROM vt0, rt60 WHERE (((((vt0.c1)AND(rt60.c1)))/(rt60.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(rt60.c1)))/(rt60.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt60);
SELECT COUNT(*) FROM vt0, rt60 WHERE (((((vt0.c1)AND(rt60.c1)))/(rt60.c0 COLLATE NOCASE)));
SELECT * FROM rt60 WHERE (rt60.c1);
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM rt60);
SELECT * FROM rt60 WHERE (rt60.c1);
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM rt60);
SELECT * FROM rt60 WHERE (rt60.c1);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c0)-(rt1.c3)) IN ()) WHERE (json_valid(((((rt1.c2)OR(rt1.c1)))OR(t0.c32))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((((rt1.c2)OR(rt1.c1)))OR(t0.c32)))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((rt1.c0)-(rt1.c3)) IN ()));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c0)-(rt1.c3)) IN ()) WHERE (json_valid(((((rt1.c2)OR(rt1.c1)))OR(t0.c32))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((((rt1.c2)OR(rt1.c1)))OR(t0.c32)))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((rt1.c0)-(rt1.c3)) IN ()));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c0)-(rt1.c3)) IN ()) WHERE (json_valid(((((rt1.c2)OR(rt1.c1)))OR(t0.c32))));
SELECT * FROM rt1, vt0, rt60, t0, v0 WHERE (CASE ((t0.c39) IS FALSE)  WHEN ((t0.c32)%('-1228546389')) THEN ((rt1.c2)*(0.39256859633231633)) ELSE (rt60.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c39) IS FALSE)  WHEN ((t0.c32)%('-1228546389')) THEN ((rt1.c2)*(0.39256859633231633)) ELSE (rt60.c2 IN ()) END) IS TRUE)  as count FROM rt1, vt0, rt60, t0, v0);
SELECT * FROM rt1, vt0, rt60, t0, v0 WHERE (CASE ((t0.c39) IS FALSE)  WHEN ((t0.c32)%('-1228546389')) THEN ((rt1.c2)*(0.39256859633231633)) ELSE (rt60.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c39) IS FALSE)  WHEN ((t0.c32)%('-1228546389')) THEN ((rt1.c2)*(0.39256859633231633)) ELSE (rt60.c2 IN ()) END) IS TRUE)  as count FROM rt1, vt0, rt60, t0, v0);
SELECT * FROM rt1, vt0, rt60, t0, v0 WHERE (CASE ((t0.c39) IS FALSE)  WHEN ((t0.c32)%('-1228546389')) THEN ((rt1.c2)*(0.39256859633231633)) ELSE (rt60.c2 IN ()) END);
SELECT COUNT(*) FROM v0, t0, rt60, vt0 WHERE (NULLIF(((NULL) IS FALSE), x''));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((NULL) IS FALSE), x'')) IS TRUE)  as count FROM v0, t0, rt60, vt0);
SELECT COUNT(*) FROM v0, t0, rt60, vt0 WHERE (NULLIF(((NULL) IS FALSE), x''));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((NULL) IS FALSE), x'')) IS TRUE)  as count FROM v0, t0, rt60, vt0);
SELECT COUNT(*) FROM v0, t0, rt60, vt0 WHERE (NULLIF(((NULL) IS FALSE), x''));
SELECT COUNT(*) FROM rt1, vt0, t0 NOT INDEXED, v0, rt60 WHERE (((((0.1203333336025777)) NOT BETWEEN ((t0.c87)) AND ((rt60.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0.1203333336025777)) NOT BETWEEN ((t0.c87)) AND ((rt60.c1))) IN ())) IS TRUE)  as count FROM rt1, vt0, t0, v0, rt60);
SELECT COUNT(*) FROM rt1, vt0, t0 NOT INDEXED, v0, rt60 WHERE (((((0.1203333336025777)) NOT BETWEEN ((t0.c87)) AND ((rt60.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0.1203333336025777)) NOT BETWEEN ((t0.c87)) AND ((rt60.c1))) IN ())) IS TRUE)  as count FROM rt1, vt0, t0, v0, rt60);
SELECT COUNT(*) FROM rt1, vt0, t0 NOT INDEXED, v0, rt60 WHERE (((((0.1203333336025777)) NOT BETWEEN ((t0.c87)) AND ((rt60.c1))) IN ()));
SELECT ALL * FROM rt60 RIGHT OUTER JOIN v0 ON (((((((v0.c0, rt60.c2, rt60.c1))<((rt60.c0, rt60.c2, rt60.c2))))AND(((rt60.c1) IS FALSE))))OR('FALSE')) WHERE ('') ORDER BY ((CHAR(v0.c0, v0.c0, rt60.c2)) BETWEEN (v0.c0) AND ('V')) ASC, ((((rt60.c2)*(x'')))-(((rt60.c2)AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN v0 ON (((((((v0.c0, rt60.c2, rt60.c1))<((rt60.c0, rt60.c2, rt60.c2))))AND(((rt60.c1) IS FALSE))))OR('FALSE')) ORDER BY ((CHAR(v0.c0, v0.c0, rt60.c2)) BETWEEN (v0.c0) AND ('V')) ASC, ((((rt60.c2)*(x'')))-(((rt60.c2)AND(v0.c0))))  NULLS LAST);
SELECT ALL * FROM rt60 RIGHT OUTER JOIN v0 ON (((((((v0.c0, rt60.c2, rt60.c1))<((rt60.c0, rt60.c2, rt60.c2))))AND(((rt60.c1) IS FALSE))))OR('FALSE')) WHERE ('') ORDER BY ((CHAR(v0.c0, v0.c0, rt60.c2)) BETWEEN (v0.c0) AND ('V')) ASC, ((((rt60.c2)*(x'')))-(((rt60.c2)AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN v0 ON (((((((v0.c0, rt60.c2, rt60.c1))<((rt60.c0, rt60.c2, rt60.c2))))AND(((rt60.c1) IS FALSE))))OR('FALSE')) ORDER BY ((CHAR(v0.c0, v0.c0, rt60.c2)) BETWEEN (v0.c0) AND ('V')) ASC, ((((rt60.c2)*(x'')))-(((rt60.c2)AND(v0.c0))))  NULLS LAST);
SELECT ALL * FROM rt60 RIGHT OUTER JOIN v0 ON (((((((v0.c0, rt60.c2, rt60.c1))<((rt60.c0, rt60.c2, rt60.c2))))AND(((rt60.c1) IS FALSE))))OR('FALSE')) WHERE ('') ORDER BY ((CHAR(v0.c0, v0.c0, rt60.c2)) BETWEEN (v0.c0) AND ('V')) ASC, ((((rt60.c2)*(x'')))-(((rt60.c2)AND(v0.c0))))  NULLS LAST;
SELECT * FROM rt60, v0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt60, v0, rt1);
SELECT * FROM rt60, v0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt60, v0, rt1);
SELECT * FROM rt60, v0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM rt60, vt0, rt1 LEFT OUTER JOIN t0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(rt1.c0)))OR(rt1.c0)))>>(((rt60.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)))) INNER JOIN v0 ON (- (vt0.c1 COLLATE BINARY)) WHERE (LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (t0.c39) AND (rt60.c2)), 0.7786112317897937));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (t0.c39) AND (rt60.c2)), 0.7786112317897937)) IS TRUE)  as count FROM rt60, vt0, rt1 LEFT OUTER JOIN t0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(rt1.c0)))OR(rt1.c0)))>>(((rt60.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)))) INNER JOIN v0 ON (- (vt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt60, vt0, rt1 LEFT OUTER JOIN t0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(rt1.c0)))OR(rt1.c0)))>>(((rt60.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)))) INNER JOIN v0 ON (- (vt0.c1 COLLATE BINARY)) WHERE (LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (t0.c39) AND (rt60.c2)), 0.7786112317897937));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (t0.c39) AND (rt60.c2)), 0.7786112317897937)) IS TRUE)  as count FROM rt60, vt0, rt1 LEFT OUTER JOIN t0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(rt1.c0)))OR(rt1.c0)))>>(((rt60.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)))) INNER JOIN v0 ON (- (vt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt1, vt0, rt60 WHERE (CASE WHEN ((rt60.c1) NOTNULL) THEN CAST(rt1.c3 AS REAL) WHEN ((0xffffffff8339fba8) IS FALSE) THEN rt60.c2 WHEN (rt1.c2 IN (rt60.c0, rt60.c0)) THEN rt1.c3 WHEN '-9223372036854775808' COLLATE RTRIM THEN vt0.c2 WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt60.c2)))OR(rt1.c4)))OR(vt0.c0)) THEN (('-1789721054')-(rt60.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt60.c2)) THEN CAST(rt60.c2 AS REAL) WHEN (NOT ('-1e500')) THEN ((0.7835189273753863) BETWEEN (rt1.c2) AND (vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt60.c1) NOTNULL) THEN CAST(rt1.c3 AS REAL) WHEN ((0xffffffff8339fba8) IS FALSE) THEN rt60.c2 WHEN (rt1.c2 IN (rt60.c0, rt60.c0)) THEN rt1.c3 WHEN '-9223372036854775808' COLLATE RTRIM THEN vt0.c2 WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt60.c2)))OR(rt1.c4)))OR(vt0.c0)) THEN (('-1789721054')-(rt60.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt60.c2)) THEN CAST(rt60.c2 AS REAL) WHEN (NOT ('-1e500')) THEN ((0.7835189273753863) BETWEEN (rt1.c2) AND (vt0.c2)) END) IS TRUE)  as count FROM rt1, vt0, rt60);
SELECT ALL * FROM rt1, vt0, rt60 WHERE (CASE WHEN ((rt60.c1) NOTNULL) THEN CAST(rt1.c3 AS REAL) WHEN ((0xffffffff8339fba8) IS FALSE) THEN rt60.c2 WHEN (rt1.c2 IN (rt60.c0, rt60.c0)) THEN rt1.c3 WHEN '-9223372036854775808' COLLATE RTRIM THEN vt0.c2 WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt60.c2)))OR(rt1.c4)))OR(vt0.c0)) THEN (('-1789721054')-(rt60.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt60.c2)) THEN CAST(rt60.c2 AS REAL) WHEN (NOT ('-1e500')) THEN ((0.7835189273753863) BETWEEN (rt1.c2) AND (vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt60.c1) NOTNULL) THEN CAST(rt1.c3 AS REAL) WHEN ((0xffffffff8339fba8) IS FALSE) THEN rt60.c2 WHEN (rt1.c2 IN (rt60.c0, rt60.c0)) THEN rt1.c3 WHEN '-9223372036854775808' COLLATE RTRIM THEN vt0.c2 WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt60.c2)))OR(rt1.c4)))OR(vt0.c0)) THEN (('-1789721054')-(rt60.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt60.c2)) THEN CAST(rt60.c2 AS REAL) WHEN (NOT ('-1e500')) THEN ((0.7835189273753863) BETWEEN (rt1.c2) AND (vt0.c2)) END) IS TRUE)  as count FROM rt1, vt0, rt60);
SELECT ALL * FROM rt1, vt0, rt60 WHERE (CASE WHEN ((rt60.c1) NOTNULL) THEN CAST(rt1.c3 AS REAL) WHEN ((0xffffffff8339fba8) IS FALSE) THEN rt60.c2 WHEN (rt1.c2 IN (rt60.c0, rt60.c0)) THEN rt1.c3 WHEN '-9223372036854775808' COLLATE RTRIM THEN vt0.c2 WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt60.c2)))OR(rt1.c4)))OR(vt0.c0)) THEN (('-1789721054')-(rt60.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt60.c2)) THEN CAST(rt60.c2 AS REAL) WHEN (NOT ('-1e500')) THEN ((0.7835189273753863) BETWEEN (rt1.c2) AND (vt0.c2)) END);
SELECT COUNT(*) FROM rt60 WHERE (0.4221234274618437) ORDER BY ((((((((((((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c1)))OR(CAST(rt60.c2 AS INTEGER))))AND(((rt60.c2)<<(0.0113691030907479)))))AND(IFNULL(rt60.c1, rt60.c2))))OR(LIKE(rt60.c0, rt60.c0, 'J'))))AND(((rt60.c2) BETWEEN (rt60.c0) AND (rt60.c0)))))OR(CAST(rt60.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((0.4221234274618437) IS TRUE)  as count FROM rt60 ORDER BY ((((((((((((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c1)))OR(CAST(rt60.c2 AS INTEGER))))AND(((rt60.c2)<<(0.0113691030907479)))))AND(IFNULL(rt60.c1, rt60.c2))))OR(LIKE(rt60.c0, rt60.c0, 'J'))))AND(((rt60.c2) BETWEEN (rt60.c0) AND (rt60.c0)))))OR(CAST(rt60.c1 AS TEXT))) ASC);
SELECT COUNT(*) FROM rt60 WHERE (0.4221234274618437) ORDER BY ((((((((((((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c1)))OR(CAST(rt60.c2 AS INTEGER))))AND(((rt60.c2)<<(0.0113691030907479)))))AND(IFNULL(rt60.c1, rt60.c2))))OR(LIKE(rt60.c0, rt60.c0, 'J'))))AND(((rt60.c2) BETWEEN (rt60.c0) AND (rt60.c0)))))OR(CAST(rt60.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((0.4221234274618437) IS TRUE)  as count FROM rt60 ORDER BY ((((((((((((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c1)))OR(CAST(rt60.c2 AS INTEGER))))AND(((rt60.c2)<<(0.0113691030907479)))))AND(IFNULL(rt60.c1, rt60.c2))))OR(LIKE(rt60.c0, rt60.c0, 'J'))))AND(((rt60.c2) BETWEEN (rt60.c0) AND (rt60.c0)))))OR(CAST(rt60.c1 AS TEXT))) ASC);
SELECT COUNT(*) FROM rt60 WHERE (0.4221234274618437) ORDER BY ((((((((((((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c1)))OR(CAST(rt60.c2 AS INTEGER))))AND(((rt60.c2)<<(0.0113691030907479)))))AND(IFNULL(rt60.c1, rt60.c2))))OR(LIKE(rt60.c0, rt60.c0, 'J'))))AND(((rt60.c2) BETWEEN (rt60.c0) AND (rt60.c0)))))OR(CAST(rt60.c1 AS TEXT))) ASC;
SELECT ALL * FROM rt60, vt0, rt1, v0 WHERE (((((((rt1.c0)/(rt1.c4)))AND(CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 ELSE rt60.c1 END)))AND((v0.c0 IN ())))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt60.c0) AND (x'dabd'))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)/(rt1.c4)))AND(CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 ELSE rt60.c1 END)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM rt60, vt0, rt1, v0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt60.c0) AND (x'dabd'))) IS FALSE) DESC);
SELECT ALL * FROM rt60, vt0, rt1, v0 WHERE (((((((rt1.c0)/(rt1.c4)))AND(CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 ELSE rt60.c1 END)))AND((v0.c0 IN ())))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt60.c0) AND (x'dabd'))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)/(rt1.c4)))AND(CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 ELSE rt60.c1 END)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM rt60, vt0, rt1, v0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt60.c0) AND (x'dabd'))) IS FALSE) DESC);
SELECT ALL * FROM rt60, vt0, rt1, v0 WHERE (((((((rt1.c0)/(rt1.c4)))AND(CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 ELSE rt60.c1 END)))AND((v0.c0 IN ())))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt60.c0) AND (x'dabd'))) IS FALSE) DESC;
SELECT * FROM rt1, v0 FULL OUTER JOIN rt60 ON CASE WHEN rt60.c1 COLLATE BINARY THEN CASE x''  WHEN rt1.c1 THEN vt0.c0 END WHEN ((v0.c0) NOT NULL) THEN (vt0.c1 IN (rt1.c2, t0.c39)) WHEN ((t0.c32)%(v0.c0)) THEN ((t0.c32)-(0.841145773315754)) END FULL OUTER JOIN t0 ON ((vt0.c2 COLLATE NOCASE)IS NOT(rt60.c1)) INNER JOIN vt0 ON (~ ((((vt0.c1))<((rt60.c2))))) WHERE (CASE WHEN rt1.c4 THEN CAST(rt1.c0 AS BLOB) END) ORDER BY rt1.c3, ((vt0.c0 COLLATE NOCASE)||(((((rt1.c1)OR(rt60.c0)))AND(vt0.c1)))) ASC  NULLS LAST, (((((((((((((vt0.c1 IN ()))OR((- (t0.c49)))))OR(((((v0.c0)OR(t0.c32)))OR(rt60.c2)))))AND(CASE NULL  WHEN v0.c0 THEN t0.c32 WHEN rt1.c1 THEN vt0.c1 WHEN t0.c32 THEN rt1.c1 ELSE rt60.c0 END)))OR('0.013679315993011754' COLLATE BINARY)))OR((- (NULL)))))OR(t0.c39 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c4 THEN CAST(rt1.c0 AS BLOB) END) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt60 ON CASE WHEN rt60.c1 COLLATE BINARY THEN CASE x''  WHEN rt1.c1 THEN vt0.c0 END WHEN ((v0.c0) NOT NULL) THEN (vt0.c1 IN (rt1.c2, t0.c39)) WHEN ((t0.c32)%(v0.c0)) THEN ((t0.c32)-(0.841145773315754)) END FULL OUTER JOIN t0 ON ((vt0.c2 COLLATE NOCASE)IS NOT(rt60.c1)) INNER JOIN vt0 ON (~ ((((vt0.c1))<((rt60.c2))))) ORDER BY rt1.c3, ((vt0.c0 COLLATE NOCASE)||(((((rt1.c1)OR(rt60.c0)))AND(vt0.c1)))) ASC  NULLS LAST, (((((((((((((vt0.c1 IN ()))OR((- (t0.c49)))))OR(((((v0.c0)OR(t0.c32)))OR(rt60.c2)))))AND(CASE NULL  WHEN v0.c0 THEN t0.c32 WHEN rt1.c1 THEN vt0.c1 WHEN t0.c32 THEN rt1.c1 ELSE rt60.c0 END)))OR('0.013679315993011754' COLLATE BINARY)))OR((- (NULL)))))OR(t0.c39 COLLATE RTRIM)));
SELECT * FROM rt1, v0 FULL OUTER JOIN rt60 ON CASE WHEN rt60.c1 COLLATE BINARY THEN CASE x''  WHEN rt1.c1 THEN vt0.c0 END WHEN ((v0.c0) NOT NULL) THEN (vt0.c1 IN (rt1.c2, t0.c39)) WHEN ((t0.c32)%(v0.c0)) THEN ((t0.c32)-(0.841145773315754)) END FULL OUTER JOIN t0 ON ((vt0.c2 COLLATE NOCASE)IS NOT(rt60.c1)) INNER JOIN vt0 ON (~ ((((vt0.c1))<((rt60.c2))))) WHERE (CASE WHEN rt1.c4 THEN CAST(rt1.c0 AS BLOB) END) ORDER BY rt1.c3, ((vt0.c0 COLLATE NOCASE)||(((((rt1.c1)OR(rt60.c0)))AND(vt0.c1)))) ASC  NULLS LAST, (((((((((((((vt0.c1 IN ()))OR((- (t0.c49)))))OR(((((v0.c0)OR(t0.c32)))OR(rt60.c2)))))AND(CASE NULL  WHEN v0.c0 THEN t0.c32 WHEN rt1.c1 THEN vt0.c1 WHEN t0.c32 THEN rt1.c1 ELSE rt60.c0 END)))OR('0.013679315993011754' COLLATE BINARY)))OR((- (NULL)))))OR(t0.c39 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c4 THEN CAST(rt1.c0 AS BLOB) END) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt60 ON CASE WHEN rt60.c1 COLLATE BINARY THEN CASE x''  WHEN rt1.c1 THEN vt0.c0 END WHEN ((v0.c0) NOT NULL) THEN (vt0.c1 IN (rt1.c2, t0.c39)) WHEN ((t0.c32)%(v0.c0)) THEN ((t0.c32)-(0.841145773315754)) END FULL OUTER JOIN t0 ON ((vt0.c2 COLLATE NOCASE)IS NOT(rt60.c1)) INNER JOIN vt0 ON (~ ((((vt0.c1))<((rt60.c2))))) ORDER BY rt1.c3, ((vt0.c0 COLLATE NOCASE)||(((((rt1.c1)OR(rt60.c0)))AND(vt0.c1)))) ASC  NULLS LAST, (((((((((((((vt0.c1 IN ()))OR((- (t0.c49)))))OR(((((v0.c0)OR(t0.c32)))OR(rt60.c2)))))AND(CASE NULL  WHEN v0.c0 THEN t0.c32 WHEN rt1.c1 THEN vt0.c1 WHEN t0.c32 THEN rt1.c1 ELSE rt60.c0 END)))OR('0.013679315993011754' COLLATE BINARY)))OR((- (NULL)))))OR(t0.c39 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, rt60, vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt60.c1)) AS TEXT) LEFT OUTER JOIN v0 ON ((rt1.c0) ISNULL) COLLATE BINARY WHERE (((((rt60.c0) BETWEEN (t0.c49) AND (vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt60.c0) BETWEEN (t0.c49) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, rt60, vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt60.c1)) AS TEXT) LEFT OUTER JOIN v0 ON ((rt1.c0) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt60, vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt60.c1)) AS TEXT) LEFT OUTER JOIN v0 ON ((rt1.c0) ISNULL) COLLATE BINARY WHERE (((((rt60.c0) BETWEEN (t0.c49) AND (vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt60.c0) BETWEEN (t0.c49) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, rt60, vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt60.c1)) AS TEXT) LEFT OUTER JOIN v0 ON ((rt1.c0) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt60, vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt60.c1)) AS TEXT) LEFT OUTER JOIN v0 ON ((rt1.c0) ISNULL) COLLATE BINARY WHERE (((((rt60.c0) BETWEEN (t0.c49) AND (vt0.c1))) NOT NULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)||(vt0.c0)))IS(((vt0.c2) IS TRUE))) WHERE (CAST((vt0.c1 IN (vt0.c0, v0.c0)) AS REAL)) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))-(ABS(DISTINCT vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (vt0.c0, v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)||(vt0.c0)))IS(((vt0.c2) IS TRUE))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))-(ABS(DISTINCT vt0.c2))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)||(vt0.c0)))IS(((vt0.c2) IS TRUE))) WHERE (CAST((vt0.c1 IN (vt0.c0, v0.c0)) AS REAL)) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))-(ABS(DISTINCT vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (vt0.c0, v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)||(vt0.c0)))IS(((vt0.c2) IS TRUE))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))-(ABS(DISTINCT vt0.c2))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)||(vt0.c0)))IS(((vt0.c2) IS TRUE))) WHERE (CAST((vt0.c1 IN (vt0.c0, v0.c0)) AS REAL)) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))-(ABS(DISTINCT vt0.c2))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((+ ((((rt1.c3))>=((rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c3))>=((rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ ((((rt1.c3))>=((rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c3))>=((rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ ((((rt1.c3))>=((rt1.c4))))));
SELECT * FROM t0, vt0, rt1, v0 WHERE (((0xffffffff8ad5cf1e)<=(CAST(rt1.c3 AS TEXT)))) ORDER BY ((t0.c87)/(v0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((0Xffffffff8ad5cf1e)<=(CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY ((t0.c87)/(v0.c0)) COLLATE BINARY DESC);
SELECT * FROM t0, vt0, rt1, v0 WHERE (((0xffffffff8ad5cf1e)<=(CAST(rt1.c3 AS TEXT)))) ORDER BY ((t0.c87)/(v0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((0Xffffffff8ad5cf1e)<=(CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY ((t0.c87)/(v0.c0)) COLLATE BINARY DESC);
SELECT * FROM t0, vt0, rt1, v0 WHERE (((0xffffffff8ad5cf1e)<=(CAST(rt1.c3 AS TEXT)))) ORDER BY ((t0.c87)/(v0.c0)) COLLATE BINARY DESC;
SELECT ALL * FROM v0, t0, rt60, rt1 WHERE (('hfU*' IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((('hfU*' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt60, rt1);
SELECT ALL * FROM v0, t0, rt60, rt1 WHERE (('hfU*' IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((('hfU*' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt60, rt1);
SELECT ALL * FROM v0, t0, rt60, rt1 WHERE (('hfU*' IN ()) COLLATE RTRIM);
SELECT * FROM rt1, vt0, rt60, t0 INNER JOIN v0 ON t0.c39 WHERE ('*_{W(/]') ORDER BY CASE (~ (vt0.c2))  WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c4)-(rt1.c2)) WHEN (((t0.c32, v0.c0, rt1.c2))<>((rt1.c2, t0.c49, x''))) THEN rt60.c2 WHEN 0.48454402811634334 THEN v0.c0 WHEN ((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c4)))AND(t0.c49)))AND(rt1.c4)) THEN CASE vt0.c2  WHEN t0.c87 THEN rt1.c4 END WHEN (('-1950855175') ISNULL) THEN ((t0.c32)*(rt1.c4)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('*_{W(/]') IS TRUE)  as count FROM rt1, vt0, rt60, t0 INNER JOIN v0 ON t0.c39 ORDER BY CASE (~ (vt0.c2))  WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c4)-(rt1.c2)) WHEN (((t0.c32, v0.c0, rt1.c2))<>((rt1.c2, t0.c49, x''))) THEN rt60.c2 WHEN 0.48454402811634334 THEN v0.c0 WHEN ((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c4)))AND(t0.c49)))AND(rt1.c4)) THEN CASE vt0.c2  WHEN t0.c87 THEN rt1.c4 END WHEN (('-1950855175') ISNULL) THEN ((t0.c32)*(rt1.c4)) END ASC  NULLS LAST);
SELECT * FROM rt1, vt0, rt60, t0 INNER JOIN v0 ON t0.c39 WHERE ('*_{W(/]') ORDER BY CASE (~ (vt0.c2))  WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c4)-(rt1.c2)) WHEN (((t0.c32, v0.c0, rt1.c2))<>((rt1.c2, t0.c49, x''))) THEN rt60.c2 WHEN 0.48454402811634334 THEN v0.c0 WHEN ((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c4)))AND(t0.c49)))AND(rt1.c4)) THEN CASE vt0.c2  WHEN t0.c87 THEN rt1.c4 END WHEN (('-1950855175') ISNULL) THEN ((t0.c32)*(rt1.c4)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('*_{W(/]') IS TRUE)  as count FROM rt1, vt0, rt60, t0 INNER JOIN v0 ON t0.c39 ORDER BY CASE (~ (vt0.c2))  WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c4)-(rt1.c2)) WHEN (((t0.c32, v0.c0, rt1.c2))<>((rt1.c2, t0.c49, x''))) THEN rt60.c2 WHEN 0.48454402811634334 THEN v0.c0 WHEN ((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c4)))AND(t0.c49)))AND(rt1.c4)) THEN CASE vt0.c2  WHEN t0.c87 THEN rt1.c4 END WHEN (('-1950855175') ISNULL) THEN ((t0.c32)*(rt1.c4)) END ASC  NULLS LAST);
SELECT * FROM rt1, vt0, rt60, t0 INNER JOIN v0 ON t0.c39 WHERE ('*_{W(/]') ORDER BY CASE (~ (vt0.c2))  WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c4)-(rt1.c2)) WHEN (((t0.c32, v0.c0, rt1.c2))<>((rt1.c2, t0.c49, x''))) THEN rt60.c2 WHEN 0.48454402811634334 THEN v0.c0 WHEN ((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c4)))AND(t0.c49)))AND(rt1.c4)) THEN CASE vt0.c2  WHEN t0.c87 THEN rt1.c4 END WHEN (('-1950855175') ISNULL) THEN ((t0.c32)*(rt1.c4)) END ASC  NULLS LAST;
SELECT * FROM t0, rt60, v0, vt0 WHERE ((((t0.c39 IN ()))GLOB(((vt0.c0) BETWEEN (rt60.c1) AND (rt60.c1))))) ORDER BY (((((rt60.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))))||(((rt60.c2)*(vt0.c0))))  NULLS LAST, ((((x'fd56') NOT NULL)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((t0.c39 IN ()))GLOB(((vt0.c0) BETWEEN (rt60.c1) AND (rt60.c1))))) IS TRUE)  as count FROM t0, rt60, v0, vt0 ORDER BY (((((rt60.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))))||(((rt60.c2)*(vt0.c0))))  NULLS LAST, ((((x'fd56') NOT NULL)) NOTNULL));
SELECT * FROM t0, rt60, v0, vt0 WHERE ((((t0.c39 IN ()))GLOB(((vt0.c0) BETWEEN (rt60.c1) AND (rt60.c1))))) ORDER BY (((((rt60.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))))||(((rt60.c2)*(vt0.c0))))  NULLS LAST, ((((x'fd56') NOT NULL)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((t0.c39 IN ()))GLOB(((vt0.c0) BETWEEN (rt60.c1) AND (rt60.c1))))) IS TRUE)  as count FROM t0, rt60, v0, vt0 ORDER BY (((((rt60.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))))||(((rt60.c2)*(vt0.c0))))  NULLS LAST, ((((x'fd56') NOT NULL)) NOTNULL));
SELECT * FROM t0, rt60, v0, vt0 WHERE ((((t0.c39 IN ()))GLOB(((vt0.c0) BETWEEN (rt60.c1) AND (rt60.c1))))) ORDER BY (((((rt60.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))))||(((rt60.c2)*(vt0.c0))))  NULLS LAST, ((((x'fd56') NOT NULL)) NOTNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt60 ON CASE IFNULL(DISTINCT vt0.c2, x'')  WHEN vt0.c2 THEN vt0.c0 END WHERE (STRFTIME((rt60.c1 IN ()), vt0.c2 COLLATE BINARY, CAST('#|[5tDmn' AS INTEGER), (NOT (rt60.c0)), ((0xffffffffb0a5c55c) BETWEEN (vt0.c2) AND (rt60.c0)))) ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (rt60.c0)) END  NULLS LAST, CASE WHEN rt60.c1 THEN rt60.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((rt60.c1 IN ()), vt0.c2 COLLATE BINARY, CAST('#|[5tDmn' AS INTEGER), (NOT (rt60.c0)), ((0xffffffffb0a5c55c) BETWEEN (vt0.c2) AND (rt60.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt60 ON CASE IFNULL(DISTINCT vt0.c2, x'')  WHEN vt0.c2 THEN vt0.c0 END ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (rt60.c0)) END  NULLS LAST, CASE WHEN rt60.c1 THEN rt60.c1 END  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt60 ON CASE IFNULL(DISTINCT vt0.c2, x'')  WHEN vt0.c2 THEN vt0.c0 END WHERE (STRFTIME((rt60.c1 IN ()), vt0.c2 COLLATE BINARY, CAST('#|[5tDmn' AS INTEGER), (NOT (rt60.c0)), ((0xffffffffb0a5c55c) BETWEEN (vt0.c2) AND (rt60.c0)))) ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (rt60.c0)) END  NULLS LAST, CASE WHEN rt60.c1 THEN rt60.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((rt60.c1 IN ()), vt0.c2 COLLATE BINARY, CAST('#|[5tDmn' AS INTEGER), (NOT (rt60.c0)), ((0xffffffffb0a5c55c) BETWEEN (vt0.c2) AND (rt60.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt60 ON CASE IFNULL(DISTINCT vt0.c2, x'')  WHEN vt0.c2 THEN vt0.c0 END ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (rt60.c0)) END  NULLS LAST, CASE WHEN rt60.c1 THEN rt60.c1 END  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt60 ON CASE IFNULL(DISTINCT vt0.c2, x'')  WHEN vt0.c2 THEN vt0.c0 END WHERE (STRFTIME((rt60.c1 IN ()), vt0.c2 COLLATE BINARY, CAST('#|[5tDmn' AS INTEGER), (NOT (rt60.c0)), ((0xffffffffb0a5c55c) BETWEEN (vt0.c2) AND (rt60.c0)))) ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (rt60.c0)) END  NULLS LAST, CASE WHEN rt60.c1 THEN rt60.c1 END  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (CAST(vt0.c2 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(vt0.c2 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(vt0.c2 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM v0, rt1, rt60 WHERE (rt1.c0) ORDER BY (((((v0.c0)AND(rt1.c0)))OR(rt1.c4)) IN ());
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, rt1, rt60 ORDER BY (((((v0.c0)AND(rt1.c0)))OR(rt1.c4)) IN ()));
SELECT ALL * FROM v0, rt1, rt60 WHERE (rt1.c0) ORDER BY (((((v0.c0)AND(rt1.c0)))OR(rt1.c4)) IN ());
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, rt1, rt60 ORDER BY (((((v0.c0)AND(rt1.c0)))OR(rt1.c4)) IN ()));
SELECT ALL * FROM v0, rt1, rt60 WHERE (rt1.c0) ORDER BY (((((v0.c0)AND(rt1.c0)))OR(rt1.c4)) IN ());
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((t0.c39 COLLATE BINARY)) AND ((LIKELIHOOD(vt0.c2, 0.9713899357179618)))) FULL OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) IS FALSE) WHERE (((((vt0.c2)GLOB(t0.c39)))IS NOT((NOT (rt1.c4))))) ORDER BY (((vt0.c1)<(NULL)) IN (((vt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)GLOB(t0.c39)))IS NOT((NOT (rt1.c4))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((t0.c39 COLLATE BINARY)) AND ((LIKELIHOOD(vt0.c2, 0.9713899357179618)))) FULL OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) IS FALSE) ORDER BY (((vt0.c1)<(NULL)) IN (((vt0.c2) ISNULL))));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((t0.c39 COLLATE BINARY)) AND ((LIKELIHOOD(vt0.c2, 0.9713899357179618)))) FULL OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) IS FALSE) WHERE (((((vt0.c2)GLOB(t0.c39)))IS NOT((NOT (rt1.c4))))) ORDER BY (((vt0.c1)<(NULL)) IN (((vt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)GLOB(t0.c39)))IS NOT((NOT (rt1.c4))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((t0.c39 COLLATE BINARY)) AND ((LIKELIHOOD(vt0.c2, 0.9713899357179618)))) FULL OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) IS FALSE) ORDER BY (((vt0.c1)<(NULL)) IN (((vt0.c2) ISNULL))));
SELECT COUNT(*) FROM v0, rt1, rt60 WHERE (((CAST('UF' AS NUMERIC))OR(((rt1.c1) IS TRUE)))) ORDER BY ((0.824702089796787) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((CAST('UF' AS NUMERIC))OR(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt1, rt60 ORDER BY ((0.824702089796787) NOTNULL));
SELECT COUNT(*) FROM v0, rt1, rt60 WHERE (((CAST('UF' AS NUMERIC))OR(((rt1.c1) IS TRUE)))) ORDER BY ((0.824702089796787) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((CAST('UF' AS NUMERIC))OR(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt1, rt60 ORDER BY ((0.824702089796787) NOTNULL));
SELECT COUNT(*) FROM v0, rt1, rt60 WHERE (((CAST('UF' AS NUMERIC))OR(((rt1.c1) IS TRUE)))) ORDER BY ((0.824702089796787) NOTNULL);
SELECT COUNT(*) FROM rt60, t0, vt0 LEFT OUTER JOIN rt1 ON ((((t0.c49)>>(rt1.c0)))+(((rt1.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON 1e500 WHERE (((v0.c0 COLLATE BINARY)/(((t0.c49)>(t0.c32)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)/(((t0.c49)>(t0.c32))))) IS TRUE)  as count FROM rt60, t0, vt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((((t0.c49)>>(rt1.c0)))+(((rt1.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON 1e500);
SELECT COUNT(*) FROM rt60, t0, vt0 LEFT OUTER JOIN rt1 ON ((((t0.c49)>>(rt1.c0)))+(((rt1.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON 1e500 WHERE (((v0.c0 COLLATE BINARY)/(((t0.c49)>(t0.c32)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)/(((t0.c49)>(t0.c32))))) IS TRUE)  as count FROM rt60, t0, vt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((((t0.c49)>>(rt1.c0)))+(((rt1.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON 1e500);
SELECT COUNT(*) FROM rt60, t0, vt0 LEFT OUTER JOIN rt1 ON ((((t0.c49)>>(rt1.c0)))+(((rt1.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON 1e500 WHERE (((v0.c0 COLLATE BINARY)/(((t0.c49)>(t0.c32)))));
SELECT COUNT(*) FROM rt60, t0 CROSS JOIN v0 ON CAST((NOT (v0.c0)) AS BLOB) WHERE ((((NOT (t0.c32))) NOT BETWEEN (((x'') IS TRUE)) AND (((rt60.c0)>=(v0.c0))))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c32))) NOT BETWEEN (((x'') IS TRUE)) AND (((rt60.c0)>=(v0.c0))))) IS TRUE)  as count FROM rt60, t0 CROSS JOIN v0 ON CAST((NOT (v0.c0)) AS BLOB) ORDER BY TOTAL_CHANGES());
SELECT COUNT(*) FROM rt60, t0 CROSS JOIN v0 ON CAST((NOT (v0.c0)) AS BLOB) WHERE ((((NOT (t0.c32))) NOT BETWEEN (((x'') IS TRUE)) AND (((rt60.c0)>=(v0.c0))))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c32))) NOT BETWEEN (((x'') IS TRUE)) AND (((rt60.c0)>=(v0.c0))))) IS TRUE)  as count FROM rt60, t0 CROSS JOIN v0 ON CAST((NOT (v0.c0)) AS BLOB) ORDER BY TOTAL_CHANGES());
SELECT COUNT(*) FROM rt60, t0 CROSS JOIN v0 ON CAST((NOT (v0.c0)) AS BLOB) WHERE ((((NOT (t0.c32))) NOT BETWEEN (((x'') IS TRUE)) AND (((rt60.c0)>=(v0.c0))))) ORDER BY TOTAL_CHANGES();
SELECT ALL * FROM v0 WHERE ((((NULL)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))<((v0.c0))))))) ORDER BY 0.977604441118028 DESC  NULLS LAST, ((NOT (v0.c0)) IN ())  NULLS FIRST, ((((((((0.9004650223376837)OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((v0.c0)>(v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(TYPEOF(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))<((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY 0.977604441118028 DESC  NULLS LAST, ((NOT (v0.c0)) IN ())  NULLS FIRST, ((((((((0.9004650223376837)OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((v0.c0)>(v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(TYPEOF(v0.c0)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((NULL)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))<((v0.c0))))))) ORDER BY 0.977604441118028 DESC  NULLS LAST, ((NOT (v0.c0)) IN ())  NULLS FIRST, ((((((((0.9004650223376837)OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((v0.c0)>(v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(TYPEOF(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))<((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY 0.977604441118028 DESC  NULLS LAST, ((NOT (v0.c0)) IN ())  NULLS FIRST, ((((((((0.9004650223376837)OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((v0.c0)>(v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(TYPEOF(v0.c0)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((NULL)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))<((v0.c0))))))) ORDER BY 0.977604441118028 DESC  NULLS LAST, ((NOT (v0.c0)) IN ())  NULLS FIRST, ((((((((0.9004650223376837)OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((v0.c0)>(v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(TYPEOF(v0.c0)))  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (t0.c39)))) AND (((~ (t0.c87))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((+ (t0.c39)))) AND (((~ (t0.c87)))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL * FROM vt0, t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (t0.c39)))) AND (((~ (t0.c87))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((+ (t0.c39)))) AND (((~ (t0.c87)))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL * FROM vt0, t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (t0.c39)))) AND (((~ (t0.c87))))));
SELECT * FROM t0 INNER JOIN vt0 ON ((((rt1.c0) IS TRUE)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (vt0.c1)) RIGHT OUTER JOIN rt1 ON t0.c32 CROSS JOIN rt60 ON (NOT ((((vt0.c0))<>((rt1.c3))))) WHERE ((((rt1.c4)) BETWEEN (((((rt1.c2))==((vt0.c2))))) AND ((((vt0.c1) NOT BETWEEN (t0.c87) AND (t0.c39))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN (((((rt1.c2))=((vt0.c2))))) AND ((((vt0.c1) NOT BETWEEN (t0.c87) AND (t0.c39)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((rt1.c0) IS TRUE)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (vt0.c1)) RIGHT OUTER JOIN rt1 ON t0.c32 CROSS JOIN rt60 ON (NOT ((((vt0.c0))<>((rt1.c3))))));
SELECT * FROM t0 INNER JOIN vt0 ON ((((rt1.c0) IS TRUE)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (vt0.c1)) RIGHT OUTER JOIN rt1 ON t0.c32 CROSS JOIN rt60 ON (NOT ((((vt0.c0))<>((rt1.c3))))) WHERE ((((rt1.c4)) BETWEEN (((((rt1.c2))==((vt0.c2))))) AND ((((vt0.c1) NOT BETWEEN (t0.c87) AND (t0.c39))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN (((((rt1.c2))=((vt0.c2))))) AND ((((vt0.c1) NOT BETWEEN (t0.c87) AND (t0.c39)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((rt1.c0) IS TRUE)) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (vt0.c1)) RIGHT OUTER JOIN rt1 ON t0.c32 CROSS JOIN rt60 ON (NOT ((((vt0.c0))<>((rt1.c3))))));
SELECT ALL * FROM vt0, v0, t0, rt60 WHERE ((t0.c39 IN ((+ (vt0.c2))))) ORDER BY ((-1924903992)>>('-1884172822')) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c39 IN ((+ (vt0.c2))))) IS TRUE)  as count FROM vt0, v0, t0, rt60 ORDER BY ((-1924903992)>>('-1884172822')) ASC);
SELECT ALL * FROM vt0, v0, t0, rt60 WHERE ((t0.c39 IN ((+ (vt0.c2))))) ORDER BY ((-1924903992)>>('-1884172822')) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c39 IN ((+ (vt0.c2))))) IS TRUE)  as count FROM vt0, v0, t0, rt60 ORDER BY ((-1924903992)>>('-1884172822')) ASC);
SELECT ALL * FROM vt0, v0, t0, rt60 WHERE ((t0.c39 IN ((+ (vt0.c2))))) ORDER BY ((-1924903992)>>('-1884172822')) ASC;
SELECT ALL COUNT(*) FROM rt1, rt60, t0 WHERE (rt60.c1) ORDER BY ((t0.c49)IS NOT(TRIM(DISTINCT t0.c49, 0.9737729217894101))), ((CASE WHEN rt1.c4 THEN t0.c32 END) IS FALSE)  NULLS FIRST, t0.c32  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM rt1, rt60, t0 ORDER BY ((t0.c49)IS NOT(TRIM(DISTINCT t0.c49, 0.9737729217894101))), ((CASE WHEN rt1.c4 THEN t0.c32 END) IS FALSE)  NULLS FIRST, t0.c32  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt60, t0 WHERE (rt60.c1) ORDER BY ((t0.c49)IS NOT(TRIM(DISTINCT t0.c49, 0.9737729217894101))), ((CASE WHEN rt1.c4 THEN t0.c32 END) IS FALSE)  NULLS FIRST, t0.c32  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM rt1, rt60, t0 ORDER BY ((t0.c49)IS NOT(TRIM(DISTINCT t0.c49, 0.9737729217894101))), ((CASE WHEN rt1.c4 THEN t0.c32 END) IS FALSE)  NULLS FIRST, t0.c32  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt60, t0 WHERE (rt60.c1) ORDER BY ((t0.c49)IS NOT(TRIM(DISTINCT t0.c49, 0.9737729217894101))), ((CASE WHEN rt1.c4 THEN t0.c32 END) IS FALSE)  NULLS FIRST, t0.c32  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c39)<=(t0.c32)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c39)<=(t0.c32)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c39)<=(t0.c32)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c39)<=(t0.c32)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c39)<=(t0.c32)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM rt60, v0 INNER JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE BINARY CROSS JOIN rt1 ON CAST(((rt1.c1)GLOB(rt1.c3)) AS TEXT) WHERE (((rt60.c0) BETWEEN (rt1.c3) AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((rt1.c2)/(vt0.c1)))&(rt1.c0 COLLATE NOCASE)) DESC, ((NULL)AND(json_insert(rt1.c0, rt60.c0, 0.2728146460482247, vt0.c0, vt0.c0))), (((rt60.c1 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((rt60.c0) BETWEEN (rt1.c3) AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt60, v0 INNER JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE BINARY CROSS JOIN rt1 ON CAST(((rt1.c1)GLOB(rt1.c3)) AS TEXT) ORDER BY ((((rt1.c2)/(vt0.c1)))&(rt1.c0 COLLATE NOCASE)) DESC, ((NULL)AND(json_insert(rt1.c0, rt60.c0, 0.2728146460482247, vt0.c0, vt0.c0))), (((rt60.c1 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt60, v0 INNER JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE BINARY CROSS JOIN rt1 ON CAST(((rt1.c1)GLOB(rt1.c3)) AS TEXT) WHERE (((rt60.c0) BETWEEN (rt1.c3) AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((rt1.c2)/(vt0.c1)))&(rt1.c0 COLLATE NOCASE)) DESC, ((NULL)AND(json_insert(rt1.c0, rt60.c0, 0.2728146460482247, vt0.c0, vt0.c0))), (((rt60.c1 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((rt60.c0) BETWEEN (rt1.c3) AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt60, v0 INNER JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE BINARY CROSS JOIN rt1 ON CAST(((rt1.c1)GLOB(rt1.c3)) AS TEXT) ORDER BY ((((rt1.c2)/(vt0.c1)))&(rt1.c0 COLLATE NOCASE)) DESC, ((NULL)AND(json_insert(rt1.c0, rt60.c0, 0.2728146460482247, vt0.c0, vt0.c0))), (((rt60.c1 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt60, v0 INNER JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE BINARY CROSS JOIN rt1 ON CAST(((rt1.c1)GLOB(rt1.c3)) AS TEXT) WHERE (((rt60.c0) BETWEEN (rt1.c3) AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((rt1.c2)/(vt0.c1)))&(rt1.c0 COLLATE NOCASE)) DESC, ((NULL)AND(json_insert(rt1.c0, rt60.c0, 0.2728146460482247, vt0.c0, vt0.c0))), (((rt60.c1 IN ())) IS TRUE);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c4) BETWEEN (rt1.c2) AND (1889403824)) AS TEXT)) ORDER BY ((vt0.c0) NOT BETWEEN (CASE rt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (rt1.c3))  NULLS LAST, -1.5306992E9 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4) BETWEEN (rt1.c2) AND (1889403824)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CASE rt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (rt1.c3))  NULLS LAST, -1.5306992E9 COLLATE NOCASE ASC);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c4) BETWEEN (rt1.c2) AND (1889403824)) AS TEXT)) ORDER BY ((vt0.c0) NOT BETWEEN (CASE rt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (rt1.c3))  NULLS LAST, -1.5306992E9 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4) BETWEEN (rt1.c2) AND (1889403824)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CASE rt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (rt1.c3))  NULLS LAST, -1.5306992E9 COLLATE NOCASE ASC);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c4) BETWEEN (rt1.c2) AND (1889403824)) AS TEXT)) ORDER BY ((vt0.c0) NOT BETWEEN (CASE rt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (rt1.c3))  NULLS LAST, -1.5306992E9 COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt60, rt1 WHERE (((((rt1.c2)==(rt60.c2))) NOT BETWEEN (NULL) AND (((rt1.c1)<<(rt1.c3))))) ORDER BY ((IFNULL(DISTINCT rt1.c3, rt1.c2))LIKE(((((1.7976931348623157E308)AND(rt60.c1)))AND(rt1.c1)))) ASC, CASE ((rt60.c2) NOTNULL)  WHEN ((rt1.c4) NOTNULL) THEN (((rt1.c1))>=((rt60.c1))) ELSE CASE WHEN rt60.c2 THEN rt1.c3 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)==(rt60.c2))) NOT BETWEEN (NULL) AND (((rt1.c1)<<(rt1.c3))))) IS TRUE)  as count FROM rt60, rt1 ORDER BY ((IFNULL(DISTINCT rt1.c3, rt1.c2))LIKE(((((1.7976931348623157E308)AND(rt60.c1)))AND(rt1.c1)))) ASC, CASE ((rt60.c2) NOTNULL)  WHEN ((rt1.c4) NOTNULL) THEN (((rt1.c1))>=((rt60.c1))) ELSE CASE WHEN rt60.c2 THEN rt1.c3 END END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt60, rt1 WHERE (((((rt1.c2)==(rt60.c2))) NOT BETWEEN (NULL) AND (((rt1.c1)<<(rt1.c3))))) ORDER BY ((IFNULL(DISTINCT rt1.c3, rt1.c2))LIKE(((((1.7976931348623157E308)AND(rt60.c1)))AND(rt1.c1)))) ASC, CASE ((rt60.c2) NOTNULL)  WHEN ((rt1.c4) NOTNULL) THEN (((rt1.c1))>=((rt60.c1))) ELSE CASE WHEN rt60.c2 THEN rt1.c3 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)==(rt60.c2))) NOT BETWEEN (NULL) AND (((rt1.c1)<<(rt1.c3))))) IS TRUE)  as count FROM rt60, rt1 ORDER BY ((IFNULL(DISTINCT rt1.c3, rt1.c2))LIKE(((((1.7976931348623157E308)AND(rt60.c1)))AND(rt1.c1)))) ASC, CASE ((rt60.c2) NOTNULL)  WHEN ((rt1.c4) NOTNULL) THEN (((rt1.c1))>=((rt60.c1))) ELSE CASE WHEN rt60.c2 THEN rt1.c3 END END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt60, rt1 WHERE (((((rt1.c2)==(rt60.c2))) NOT BETWEEN (NULL) AND (((rt1.c1)<<(rt1.c3))))) ORDER BY ((IFNULL(DISTINCT rt1.c3, rt1.c2))LIKE(((((1.7976931348623157E308)AND(rt60.c1)))AND(rt1.c1)))) ASC, CASE ((rt60.c2) NOTNULL)  WHEN ((rt1.c4) NOTNULL) THEN (((rt1.c1))>=((rt60.c1))) ELSE CASE WHEN rt60.c2 THEN rt1.c3 END END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt60 NATURAL JOIN vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt60 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt60 NATURAL JOIN vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt60 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt60 NATURAL JOIN vt0 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c1) ORDER BY ((rt1.c3)>>(0.426781377461264)) COLLATE RTRIM  NULLS FIRST, (((rt1.c1)) BETWEEN (((((rt1.c1, vt0.c0, rt1.c2))>=((rt1.c0, vt0.c2, vt0.c2))))) AND (((vt0.c1 IN (rt1.c3, vt0.c1)))))  NULLS LAST, (((((rt1.c3, vt0.c0, vt0.c1)) NOT BETWEEN ((']?iX~5F	', x'7e65', rt1.c1)) AND ((rt1.c2, vt0.c1, vt0.c2))))IS NOT(((rt1.c1)||(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c3)>>(0.426781377461264)) COLLATE RTRIM  NULLS FIRST, (((rt1.c1)) BETWEEN (((((rt1.c1, vt0.c0, rt1.c2))>=((rt1.c0, vt0.c2, vt0.c2))))) AND (((vt0.c1 IN (rt1.c3, vt0.c1)))))  NULLS LAST, (((((rt1.c3, vt0.c0, vt0.c1)) NOT BETWEEN ((']?iX~5F	', x'7e65', rt1.c1)) AND ((rt1.c2, vt0.c1, vt0.c2))))IS NOT(((rt1.c1)||(rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c1) ORDER BY ((rt1.c3)>>(0.426781377461264)) COLLATE RTRIM  NULLS FIRST, (((rt1.c1)) BETWEEN (((((rt1.c1, vt0.c0, rt1.c2))>=((rt1.c0, vt0.c2, vt0.c2))))) AND (((vt0.c1 IN (rt1.c3, vt0.c1)))))  NULLS LAST, (((((rt1.c3, vt0.c0, vt0.c1)) NOT BETWEEN ((']?iX~5F	', x'7e65', rt1.c1)) AND ((rt1.c2, vt0.c1, vt0.c2))))IS NOT(((rt1.c1)||(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c3)>>(0.426781377461264)) COLLATE RTRIM  NULLS FIRST, (((rt1.c1)) BETWEEN (((((rt1.c1, vt0.c0, rt1.c2))>=((rt1.c0, vt0.c2, vt0.c2))))) AND (((vt0.c1 IN (rt1.c3, vt0.c1)))))  NULLS LAST, (((((rt1.c3, vt0.c0, vt0.c1)) NOT BETWEEN ((']?iX~5F	', x'7e65', rt1.c1)) AND ((rt1.c2, vt0.c1, vt0.c2))))IS NOT(((rt1.c1)||(rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c1) ORDER BY ((rt1.c3)>>(0.426781377461264)) COLLATE RTRIM  NULLS FIRST, (((rt1.c1)) BETWEEN (((((rt1.c1, vt0.c0, rt1.c2))>=((rt1.c0, vt0.c2, vt0.c2))))) AND (((vt0.c1 IN (rt1.c3, vt0.c1)))))  NULLS LAST, (((((rt1.c3, vt0.c0, vt0.c1)) NOT BETWEEN ((']?iX~5F	', x'7e65', rt1.c1)) AND ((rt1.c2, vt0.c1, vt0.c2))))IS NOT(((rt1.c1)||(rt1.c2)))) DESC;
SELECT ALL * FROM t0, rt60, v0, vt0, rt1 WHERE (((((((((((((SQLITE_COMPILEOPTION_USED(rt1.c3))AND(CAST(vt0.c0 AS REAL))))AND(t0.c87)))OR(rt60.c0 COLLATE NOCASE)))AND(((vt0.c1) ISNULL))))AND(((rt1.c0) BETWEEN (NULL) AND (vt0.c2)))))AND(((vt0.c0)||(t0.c39)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((SQLITE_COMPILEOPTION_USED(rt1.c3))AND(CAST(vt0.c0 AS REAL))))AND(t0.c87)))OR(rt60.c0 COLLATE NOCASE)))AND(((vt0.c1) ISNULL))))AND(((rt1.c0) BETWEEN (NULL) AND (vt0.c2)))))AND(((vt0.c0)||(t0.c39))))) IS TRUE)  as count FROM t0, rt60, v0, vt0, rt1);
SELECT ALL * FROM t0, rt60, v0, vt0, rt1 WHERE (((((((((((((SQLITE_COMPILEOPTION_USED(rt1.c3))AND(CAST(vt0.c0 AS REAL))))AND(t0.c87)))OR(rt60.c0 COLLATE NOCASE)))AND(((vt0.c1) ISNULL))))AND(((rt1.c0) BETWEEN (NULL) AND (vt0.c2)))))AND(((vt0.c0)||(t0.c39)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((SQLITE_COMPILEOPTION_USED(rt1.c3))AND(CAST(vt0.c0 AS REAL))))AND(t0.c87)))OR(rt60.c0 COLLATE NOCASE)))AND(((vt0.c1) ISNULL))))AND(((rt1.c0) BETWEEN (NULL) AND (vt0.c2)))))AND(((vt0.c0)||(t0.c39))))) IS TRUE)  as count FROM t0, rt60, v0, vt0, rt1);
SELECT ALL * FROM t0, rt60, v0, vt0, rt1 WHERE (((((((((((((SQLITE_COMPILEOPTION_USED(rt1.c3))AND(CAST(vt0.c0 AS REAL))))AND(t0.c87)))OR(rt60.c0 COLLATE NOCASE)))AND(((vt0.c1) ISNULL))))AND(((rt1.c0) BETWEEN (NULL) AND (vt0.c2)))))AND(((vt0.c0)||(t0.c39)))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON COALESCE(((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0) WHERE (((-1828099378)IS(vt0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c0)*(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((-1828099378)IS(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON COALESCE(((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0) ORDER BY ((((vt0.c0)*(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))))) DESC);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON COALESCE(((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0) WHERE (((-1828099378)IS(vt0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c0)*(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((-1828099378)IS(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON COALESCE(((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0) ORDER BY ((((vt0.c0)*(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))))) DESC);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON COALESCE(((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0) WHERE (((-1828099378)IS(vt0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c0)*(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt1, rt60, v0 RIGHT OUTER JOIN vt0 ON '' WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (+ ((vt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt60, v0 RIGHT OUTER JOIN vt0 ON '' ORDER BY (+ ((vt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt60, v0 RIGHT OUTER JOIN vt0 ON '' WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (+ ((vt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt60, v0 RIGHT OUTER JOIN vt0 ON '' ORDER BY (+ ((vt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt60, v0 RIGHT OUTER JOIN vt0 ON '' WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (+ ((vt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.19216033167588142));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.19216033167588142)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.19216033167588142));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.19216033167588142)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.19216033167588142));
SELECT ALL COUNT(*) FROM rt60, t0 WHERE (((((rt60.c1)AND(t0.c87)))>=((t0.c39 IN ())))) ORDER BY (rt60.c0 IN (rt60.c2, rt60.c1)) COLLATE NOCASE  NULLS LAST, ((LIKELY(rt60.c0)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt60.c1)AND(t0.c87)))>=((t0.c39 IN ())))) IS TRUE)  as count FROM rt60, t0 ORDER BY (rt60.c0 IN (rt60.c2, rt60.c1)) COLLATE NOCASE  NULLS LAST, ((LIKELY(rt60.c0)) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt60, t0 WHERE (((((rt60.c1)AND(t0.c87)))>=((t0.c39 IN ())))) ORDER BY (rt60.c0 IN (rt60.c2, rt60.c1)) COLLATE NOCASE  NULLS LAST, ((LIKELY(rt60.c0)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt60.c1)AND(t0.c87)))>=((t0.c39 IN ())))) IS TRUE)  as count FROM rt60, t0 ORDER BY (rt60.c0 IN (rt60.c2, rt60.c1)) COLLATE NOCASE  NULLS LAST, ((LIKELY(rt60.c0)) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt60, t0 WHERE (((((rt60.c1)AND(t0.c87)))>=((t0.c39 IN ())))) ORDER BY (rt60.c0 IN (rt60.c2, rt60.c1)) COLLATE NOCASE  NULLS LAST, ((LIKELY(rt60.c0)) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt60, v0 WHERE (CAST(((rt60.c2)|(t0.c39)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt60.c2)|(t0.c39)) AS TEXT)) IS TRUE)  as count FROM t0, rt60, v0);
SELECT COUNT(*) FROM t0, rt60, v0 WHERE (CAST(((rt60.c2)|(t0.c39)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt60.c2)|(t0.c39)) AS TEXT)) IS TRUE)  as count FROM t0, rt60, v0);
SELECT COUNT(*) FROM t0, rt60, v0 WHERE (CAST(((rt60.c2)|(t0.c39)) AS TEXT));
SELECT COUNT(*) FROM t0, rt60 LEFT OUTER JOIN v0 ON t0.c87 COLLATE RTRIM WHERE (rt60.c1) ORDER BY CASE (((t0.c87))<=((rt60.c0)))  WHEN ((((v0.c0)OR(t0.c39)))AND(rt60.c0)) THEN (v0.c0 IN (t0.c39, v0.c0)) WHEN LTRIM(x'', t0.c87) THEN CASE WHEN x'' THEN rt60.c0 ELSE x'' END WHEN '0.17416313170247322' THEN rt60.c1 ELSE t0.c87 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM t0, rt60 LEFT OUTER JOIN v0 ON t0.c87 COLLATE RTRIM ORDER BY CASE (((t0.c87))<=((rt60.c0)))  WHEN ((((v0.c0)OR(t0.c39)))AND(rt60.c0)) THEN (v0.c0 IN (t0.c39, v0.c0)) WHEN LTRIM(x'', t0.c87) THEN CASE WHEN x'' THEN rt60.c0 ELSE x'' END WHEN '0.17416313170247322' THEN rt60.c1 ELSE t0.c87 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0, rt60 LEFT OUTER JOIN v0 ON t0.c87 COLLATE RTRIM WHERE (rt60.c1) ORDER BY CASE (((t0.c87))<=((rt60.c0)))  WHEN ((((v0.c0)OR(t0.c39)))AND(rt60.c0)) THEN (v0.c0 IN (t0.c39, v0.c0)) WHEN LTRIM(x'', t0.c87) THEN CASE WHEN x'' THEN rt60.c0 ELSE x'' END WHEN '0.17416313170247322' THEN rt60.c1 ELSE t0.c87 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM t0, rt60 LEFT OUTER JOIN v0 ON t0.c87 COLLATE RTRIM ORDER BY CASE (((t0.c87))<=((rt60.c0)))  WHEN ((((v0.c0)OR(t0.c39)))AND(rt60.c0)) THEN (v0.c0 IN (t0.c39, v0.c0)) WHEN LTRIM(x'', t0.c87) THEN CASE WHEN x'' THEN rt60.c0 ELSE x'' END WHEN '0.17416313170247322' THEN rt60.c1 ELSE t0.c87 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0, rt60 LEFT OUTER JOIN v0 ON t0.c87 COLLATE RTRIM WHERE (rt60.c1) ORDER BY CASE (((t0.c87))<=((rt60.c0)))  WHEN ((((v0.c0)OR(t0.c39)))AND(rt60.c0)) THEN (v0.c0 IN (t0.c39, v0.c0)) WHEN LTRIM(x'', t0.c87) THEN CASE WHEN x'' THEN rt60.c0 ELSE x'' END WHEN '0.17416313170247322' THEN rt60.c1 ELSE t0.c87 COLLATE RTRIM END;
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN t0 ON ((((((((-1377225799)OR(((vt0.c1)GLOB(rt1.c2)))))AND('0.0')))AND(((rt1.c1) ISNULL))))AND(((t0.c87)>>(t0.c39)))) LEFT OUTER JOIN rt60 ON ((ABS(rt1.c4))*((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt60.c0))))) WHERE (CASE WHEN NULL THEN 'VE' WHEN rtreenode('?C9\똏v?Jh', t0.c39) THEN ((rt1.c3) IS FALSE) WHEN ((vt0.c0)<=(t0.c32)) THEN ((t0.c49) IS TRUE) WHEN t0.c49 COLLATE BINARY THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2)<(rt1.c4)) THEN CAST(rt60.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 'VE' WHEN rtreenode('?C9\똏v?Jh', t0.c39) THEN ((rt1.c3) IS FALSE) WHEN ((vt0.c0)<=(t0.c32)) THEN ((t0.c49) IS TRUE) WHEN t0.c49 COLLATE BINARY THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2)<(rt1.c4)) THEN CAST(rt60.c2 AS BLOB) END) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN t0 ON ((((((((-1377225799)OR(((vt0.c1)GLOB(rt1.c2)))))AND('0.0')))AND(((rt1.c1) ISNULL))))AND(((t0.c87)>>(t0.c39)))) LEFT OUTER JOIN rt60 ON ((ABS(rt1.c4))*((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt60.c0))))));
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN t0 ON ((((((((-1377225799)OR(((vt0.c1)GLOB(rt1.c2)))))AND('0.0')))AND(((rt1.c1) ISNULL))))AND(((t0.c87)>>(t0.c39)))) LEFT OUTER JOIN rt60 ON ((ABS(rt1.c4))*((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt60.c0))))) WHERE (CASE WHEN NULL THEN 'VE' WHEN rtreenode('?C9\똏v?Jh', t0.c39) THEN ((rt1.c3) IS FALSE) WHEN ((vt0.c0)<=(t0.c32)) THEN ((t0.c49) IS TRUE) WHEN t0.c49 COLLATE BINARY THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2)<(rt1.c4)) THEN CAST(rt60.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 'VE' WHEN rtreenode('?C9\똏v?Jh', t0.c39) THEN ((rt1.c3) IS FALSE) WHEN ((vt0.c0)<=(t0.c32)) THEN ((t0.c49) IS TRUE) WHEN t0.c49 COLLATE BINARY THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2)<(rt1.c4)) THEN CAST(rt60.c2 AS BLOB) END) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN t0 ON ((((((((-1377225799)OR(((vt0.c1)GLOB(rt1.c2)))))AND('0.0')))AND(((rt1.c1) ISNULL))))AND(((t0.c87)>>(t0.c39)))) LEFT OUTER JOIN rt60 ON ((ABS(rt1.c4))*((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt60.c0))))));
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN t0 ON ((((((((-1377225799)OR(((vt0.c1)GLOB(rt1.c2)))))AND('0.0')))AND(((rt1.c1) ISNULL))))AND(((t0.c87)>>(t0.c39)))) LEFT OUTER JOIN rt60 ON ((ABS(rt1.c4))*((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt60.c0))))) WHERE (CASE WHEN NULL THEN 'VE' WHEN rtreenode('?C9\똏v?Jh', t0.c39) THEN ((rt1.c3) IS FALSE) WHEN ((vt0.c0)<=(t0.c32)) THEN ((t0.c49) IS TRUE) WHEN t0.c49 COLLATE BINARY THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2)<(rt1.c4)) THEN CAST(rt60.c2 AS BLOB) END);
SELECT * FROM rt60 INNER JOIN t0 ON ((((rt60.c1) NOTNULL))+(CAST(t0.c49 AS NUMERIC))) WHERE ((((rt60.c2)>(t0.c32)) IN ())) ORDER BY (CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN ()) DESC, ((('-412961697') NOTNULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt60.c2)>(t0.c32)) IN ())) IS TRUE)  as count FROM rt60 INNER JOIN t0 ON ((((rt60.c1) NOTNULL))+(CAST(t0.c49 AS NUMERIC))) ORDER BY (CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN ()) DESC, ((('-412961697') NOTNULL) IN ()) DESC  NULLS LAST);
SELECT * FROM rt60 INNER JOIN t0 ON ((((rt60.c1) NOTNULL))+(CAST(t0.c49 AS NUMERIC))) WHERE ((((rt60.c2)>(t0.c32)) IN ())) ORDER BY (CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN ()) DESC, ((('-412961697') NOTNULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt60.c2)>(t0.c32)) IN ())) IS TRUE)  as count FROM rt60 INNER JOIN t0 ON ((((rt60.c1) NOTNULL))+(CAST(t0.c49 AS NUMERIC))) ORDER BY (CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN ()) DESC, ((('-412961697') NOTNULL) IN ()) DESC  NULLS LAST);
SELECT * FROM rt60 INNER JOIN t0 ON ((((rt60.c1) NOTNULL))+(CAST(t0.c49 AS NUMERIC))) WHERE ((((rt60.c2)>(t0.c32)) IN ())) ORDER BY (CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN ()) DESC, ((('-412961697') NOTNULL) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt60 ON vt0.c1 FULL OUTER JOIN vt0 ON TYPEOF(((((rt1.c4)OR('-1253831672')))AND(vt0.c1))) WHERE (((CASE WHEN rt1.c3 THEN vt0.c2 WHEN rt1.c1 THEN '' WHEN vt0.c2 THEN rt60.c1 ELSE rt60.c2 END)OR(((rt1.c0)LIKE(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN vt0.c2 WHEN rt1.c1 THEN '' WHEN vt0.c2 THEN rt60.c1 ELSE rt60.c2 END)OR(((rt1.c0)LIKE(rt1.c4))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt60 ON vt0.c1 FULL OUTER JOIN vt0 ON TYPEOF(((((rt1.c4)OR('-1253831672')))AND(vt0.c1))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt60 ON vt0.c1 FULL OUTER JOIN vt0 ON TYPEOF(((((rt1.c4)OR('-1253831672')))AND(vt0.c1))) WHERE (((CASE WHEN rt1.c3 THEN vt0.c2 WHEN rt1.c1 THEN '' WHEN vt0.c2 THEN rt60.c1 ELSE rt60.c2 END)OR(((rt1.c0)LIKE(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN vt0.c2 WHEN rt1.c1 THEN '' WHEN vt0.c2 THEN rt60.c1 ELSE rt60.c2 END)OR(((rt1.c0)LIKE(rt1.c4))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt60 ON vt0.c1 FULL OUTER JOIN vt0 ON TYPEOF(((((rt1.c4)OR('-1253831672')))AND(vt0.c1))));
SELECT * FROM vt0, v0, t0, rt1 WHERE (((((v0.c0) NOT BETWEEN (0.3836441879525626) AND (t0.c49))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((rt1.c1) ISNULL)))) ORDER BY ((((t0.c49 COLLATE BINARY)OR(((vt0.c0) BETWEEN (rt1.c1) AND (t0.c49)))))AND((t0.c32 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (0.3836441879525626) AND (t0.c49))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt0, v0, t0, rt1 ORDER BY ((((t0.c49 COLLATE BINARY)OR(((vt0.c0) BETWEEN (rt1.c1) AND (t0.c49)))))AND((t0.c32 IN ()))) DESC);
SELECT * FROM vt0, v0, t0, rt1 WHERE (((((v0.c0) NOT BETWEEN (0.3836441879525626) AND (t0.c49))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((rt1.c1) ISNULL)))) ORDER BY ((((t0.c49 COLLATE BINARY)OR(((vt0.c0) BETWEEN (rt1.c1) AND (t0.c49)))))AND((t0.c32 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (0.3836441879525626) AND (t0.c49))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt0, v0, t0, rt1 ORDER BY ((((t0.c49 COLLATE BINARY)OR(((vt0.c0) BETWEEN (rt1.c1) AND (t0.c49)))))AND((t0.c32 IN ()))) DESC);
SELECT * FROM vt0, t0, rt60 WHERE ((((~ (rt60.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt60.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt60);
SELECT * FROM vt0, t0, rt60 WHERE ((((~ (rt60.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt60.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt60);
SELECT * FROM vt0, t0, rt60 WHERE ((((~ (rt60.c1))) NOT NULL));
SELECT ALL * FROM t0, rt60, v0 FULL OUTER JOIN rt1 ON (((t0.c39 IN ()))<=(((((rt1.c0)AND(t0.c87)))AND(t0.c87)))) WHERE (CASE (rt60.c1 IN ())  WHEN CASE t0.c39  WHEN 0X45d73730 THEN rt1.c4 END THEN (rt1.c0 IN ()) END) ORDER BY ((NULL) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt60.c1 IN ())  WHEN CASE t0.c39  WHEN 0x45d73730 THEN rt1.c4 END THEN (rt1.c0 IN ()) END) IS TRUE)  as count FROM t0, rt60, v0 FULL OUTER JOIN rt1 ON (((t0.c39 IN ()))<=(((((rt1.c0)AND(t0.c87)))AND(t0.c87)))) ORDER BY ((NULL) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt60, v0 FULL OUTER JOIN rt1 ON (((t0.c39 IN ()))<=(((((rt1.c0)AND(t0.c87)))AND(t0.c87)))) WHERE (CASE (rt60.c1 IN ())  WHEN CASE t0.c39  WHEN 0X45d73730 THEN rt1.c4 END THEN (rt1.c0 IN ()) END) ORDER BY ((NULL) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt60.c1 IN ())  WHEN CASE t0.c39  WHEN 0x45d73730 THEN rt1.c4 END THEN (rt1.c0 IN ()) END) IS TRUE)  as count FROM t0, rt60, v0 FULL OUTER JOIN rt1 ON (((t0.c39 IN ()))<=(((((rt1.c0)AND(t0.c87)))AND(t0.c87)))) ORDER BY ((NULL) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt60, v0 FULL OUTER JOIN rt1 ON (((t0.c39 IN ()))<=(((((rt1.c0)AND(t0.c87)))AND(t0.c87)))) WHERE (CASE (rt60.c1 IN ())  WHEN CASE t0.c39  WHEN 0X45d73730 THEN rt1.c4 END THEN (rt1.c0 IN ()) END) ORDER BY ((NULL) IS FALSE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt60, t0, v0, vt0 WHERE (((vt0.c1)LIKE(rt60.c1)) COLLATE RTRIM) ORDER BY CAST(((t0.c39) NOT BETWEEN (t0.c39) AND (v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)LIKE(rt60.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt60, t0, v0, vt0 NOT INDEXED ORDER BY CAST(((t0.c39) NOT BETWEEN (t0.c39) AND (v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt60, t0, v0, vt0 WHERE (((vt0.c1)LIKE(rt60.c1)) COLLATE RTRIM) ORDER BY CAST(((t0.c39) NOT BETWEEN (t0.c39) AND (v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)LIKE(rt60.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt60, t0, v0, vt0 NOT INDEXED ORDER BY CAST(((t0.c39) NOT BETWEEN (t0.c39) AND (v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt60, t0, v0, vt0 WHERE (((vt0.c1)LIKE(rt60.c1)) COLLATE RTRIM) ORDER BY CAST(((t0.c39) NOT BETWEEN (t0.c39) AND (v0.c0)) AS INTEGER);
SELECT ALL * FROM t0, rt60, rt1 WHERE (LIKELY(rt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt60, rt1);
SELECT ALL * FROM t0, rt60, rt1 WHERE (LIKELY(rt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt60, rt1);
SELECT ALL * FROM t0, rt60, rt1 WHERE (LIKELY(rt1.c1) COLLATE RTRIM);
SELECT * FROM rt1, vt0, rt60 CROSS JOIN t0 ON ((COALESCE(NULL, t0.c49))IS NOT(LIKELY(rt1.c2))) CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) WHERE (((((t0.c87) IS FALSE)) NOT BETWEEN (CAST(NULL AS REAL)) AND (CASE WHEN v0.c0 THEN NULL WHEN t0.c32 THEN rt60.c2 WHEN rt60.c0 THEN t0.c87 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c87) IS FALSE)) NOT BETWEEN (CAST(NULL AS REAL)) AND (CASE WHEN v0.c0 THEN NULL WHEN t0.c32 THEN rt60.c2 WHEN rt60.c0 THEN t0.c87 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, vt0, rt60 CROSS JOIN t0 ON ((COALESCE(NULL, t0.c49))IS NOT(LIKELY(rt1.c2))) CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL));
SELECT * FROM rt1, vt0, rt60 CROSS JOIN t0 ON ((COALESCE(NULL, t0.c49))IS NOT(LIKELY(rt1.c2))) CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) WHERE (((((t0.c87) IS FALSE)) NOT BETWEEN (CAST(NULL AS REAL)) AND (CASE WHEN v0.c0 THEN NULL WHEN t0.c32 THEN rt60.c2 WHEN rt60.c0 THEN t0.c87 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c87) IS FALSE)) NOT BETWEEN (CAST(NULL AS REAL)) AND (CASE WHEN v0.c0 THEN NULL WHEN t0.c32 THEN rt60.c2 WHEN rt60.c0 THEN t0.c87 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, vt0, rt60 CROSS JOIN t0 ON ((COALESCE(NULL, t0.c49))IS NOT(LIKELY(rt1.c2))) CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL));
SELECT * FROM rt1, vt0, rt60 CROSS JOIN t0 ON ((COALESCE(NULL, t0.c49))IS NOT(LIKELY(rt1.c2))) CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) WHERE (((((t0.c87) IS FALSE)) NOT BETWEEN (CAST(NULL AS REAL)) AND (CASE WHEN v0.c0 THEN NULL WHEN t0.c32 THEN rt60.c2 WHEN rt60.c0 THEN t0.c87 ELSE rt1.c4 END)));
SELECT ALL COUNT(*) FROM v0, rt60, t0 WHERE (((CASE rt60.c0  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END)>=(CAST(rt60.c0 AS BLOB)))) ORDER BY ((((rt60.c1)!=(t0.c39))) NOT BETWEEN (((x'') BETWEEN (t0.c39) AND (t0.c39))) AND (((t0.c32)GLOB(rt60.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE rt60.c0  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END)>=(CAST(rt60.c0 AS BLOB)))) IS TRUE)  as count FROM v0, rt60, t0 ORDER BY ((((rt60.c1)<>(t0.c39))) NOT BETWEEN (((x'') BETWEEN (t0.c39) AND (t0.c39))) AND (((t0.c32)GLOB(rt60.c0)))));
SELECT ALL COUNT(*) FROM v0, rt60, t0 WHERE (((CASE rt60.c0  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END)>=(CAST(rt60.c0 AS BLOB)))) ORDER BY ((((rt60.c1)!=(t0.c39))) NOT BETWEEN (((x'') BETWEEN (t0.c39) AND (t0.c39))) AND (((t0.c32)GLOB(rt60.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE rt60.c0  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END)>=(CAST(rt60.c0 AS BLOB)))) IS TRUE)  as count FROM v0, rt60, t0 ORDER BY ((((rt60.c1)<>(t0.c39))) NOT BETWEEN (((x'') BETWEEN (t0.c39) AND (t0.c39))) AND (((t0.c32)GLOB(rt60.c0)))));
SELECT ALL COUNT(*) FROM v0, rt60, t0 WHERE (((CASE rt60.c0  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END)>=(CAST(rt60.c0 AS BLOB)))) ORDER BY ((((rt60.c1)!=(t0.c39))) NOT BETWEEN (((x'') BETWEEN (t0.c39) AND (t0.c39))) AND (((t0.c32)GLOB(rt60.c0))));
SELECT COUNT(*) FROM vt0, v0, rt60 WHERE (TRIM(DISTINCT (((rt60.c2, v0.c0, 0x49e3437b)) BETWEEN ((rt60.c1, v0.c0, vt0.c0)) AND ((vt0.c0, rt60.c1, v0.c0))), CASE WHEN NULL THEN vt0.c2 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt60.c2, v0.c0, 0X49e3437b)) BETWEEN ((rt60.c1, v0.c0, vt0.c0)) AND ((vt0.c0, rt60.c1, v0.c0))), CASE WHEN NULL THEN vt0.c2 END)) IS TRUE)  as count FROM vt0, v0, rt60);
SELECT COUNT(*) FROM vt0, v0, rt60 WHERE (TRIM(DISTINCT (((rt60.c2, v0.c0, 0x49e3437b)) BETWEEN ((rt60.c1, v0.c0, vt0.c0)) AND ((vt0.c0, rt60.c1, v0.c0))), CASE WHEN NULL THEN vt0.c2 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt60.c2, v0.c0, 0X49e3437b)) BETWEEN ((rt60.c1, v0.c0, vt0.c0)) AND ((vt0.c0, rt60.c1, v0.c0))), CASE WHEN NULL THEN vt0.c2 END)) IS TRUE)  as count FROM vt0, v0, rt60);
SELECT COUNT(*) FROM vt0, v0, rt60 WHERE (TRIM(DISTINCT (((rt60.c2, v0.c0, 0x49e3437b)) BETWEEN ((rt60.c1, v0.c0, vt0.c0)) AND ((vt0.c0, rt60.c1, v0.c0))), CASE WHEN NULL THEN vt0.c2 END));
SELECT COUNT(*) FROM rt60, v0, vt0, rt1, t0 WHERE (TRIM(((t0.c49) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c49) IS FALSE))) IS TRUE)  as count FROM rt60, v0, vt0, rt1, t0);
SELECT COUNT(*) FROM rt60, v0, vt0, rt1, t0 WHERE (TRIM(((t0.c49) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c49) IS FALSE))) IS TRUE)  as count FROM rt60, v0, vt0, rt1, t0);
SELECT COUNT(*) FROM rt60, v0, vt0, rt1, t0 WHERE (TRIM(((t0.c49) IS FALSE)));
SELECT * FROM rt1, rt60, t0, v0, vt0 WHERE ((((((0.35989832971078706) BETWEEN (vt0.c1) AND (vt0.c0))))=((((t0.c39) NOT NULL))))) ORDER BY (((vt0.c1, rt1.c1, rt60.c0)) BETWEEN ((((rt60.c1) NOT BETWEEN (vt0.c2) AND (rt1.c2)), SQLITE_SOURCE_ID(), (('眶䆱')IS NOT(rt1.c2)))) AND ((t0.c87, rt1.c0, CAST(vt0.c2 AS INTEGER)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0.35989832971078706) BETWEEN (vt0.c1) AND (vt0.c0))))==((((t0.c39) NOT NULL))))) IS TRUE)  as count FROM rt1, rt60, t0, v0, vt0 ORDER BY (((vt0.c1, rt1.c1, rt60.c0)) BETWEEN ((((rt60.c1) NOT BETWEEN (vt0.c2) AND (rt1.c2)), SQLITE_SOURCE_ID(), (('眶䆱')IS NOT(rt1.c2)))) AND ((t0.c87, rt1.c0, CAST(vt0.c2 AS INTEGER)))) DESC  NULLS LAST);
SELECT * FROM rt1, rt60, t0, v0, vt0 WHERE ((((((0.35989832971078706) BETWEEN (vt0.c1) AND (vt0.c0))))=((((t0.c39) NOT NULL))))) ORDER BY (((vt0.c1, rt1.c1, rt60.c0)) BETWEEN ((((rt60.c1) NOT BETWEEN (vt0.c2) AND (rt1.c2)), SQLITE_SOURCE_ID(), (('眶䆱')IS NOT(rt1.c2)))) AND ((t0.c87, rt1.c0, CAST(vt0.c2 AS INTEGER)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0.35989832971078706) BETWEEN (vt0.c1) AND (vt0.c0))))==((((t0.c39) NOT NULL))))) IS TRUE)  as count FROM rt1, rt60, t0, v0, vt0 ORDER BY (((vt0.c1, rt1.c1, rt60.c0)) BETWEEN ((((rt60.c1) NOT BETWEEN (vt0.c2) AND (rt1.c2)), SQLITE_SOURCE_ID(), (('眶䆱')IS NOT(rt1.c2)))) AND ((t0.c87, rt1.c0, CAST(vt0.c2 AS INTEGER)))) DESC  NULLS LAST);
SELECT * FROM rt1, rt60, t0, v0, vt0 WHERE ((((((0.35989832971078706) BETWEEN (vt0.c1) AND (vt0.c0))))=((((t0.c39) NOT NULL))))) ORDER BY (((vt0.c1, rt1.c1, rt60.c0)) BETWEEN ((((rt60.c1) NOT BETWEEN (vt0.c2) AND (rt1.c2)), SQLITE_SOURCE_ID(), (('眶䆱')IS NOT(rt1.c2)))) AND ((t0.c87, rt1.c0, CAST(vt0.c2 AS INTEGER)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)*(rt1.c3))) BETWEEN (t0.c39 COLLATE BINARY) AND (((rt1.c2)AND(t0.c32)))) LEFT OUTER JOIN rt60 ON ('s禉-{ ~z' IN ()) FULL OUTER JOIN v0 ON CASE ((rt60.c0)OR(rt1.c2))  WHEN t0.c87 THEN CASE rt1.c1  WHEN t0.c49 THEN t0.c39 END END LEFT OUTER JOIN t0 ON (((((rt1.c2)==(rt60.c1)), ((t0.c32) IS FALSE), ((vt0.c1) BETWEEN (rt1.c2) AND (0.03490160404586928))))>=((rt1.c0 COLLATE NOCASE, t0.c39, CASE WHEN vt0.c0 THEN 0x118b72ba WHEN rt60.c0 THEN rt1.c3 WHEN '-1877923355' THEN rt1.c4 ELSE rt1.c4 END))) WHERE ((~ (t0.c32)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c32)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)*(rt1.c3))) BETWEEN (t0.c39 COLLATE BINARY) AND (((rt1.c2)AND(t0.c32)))) LEFT OUTER JOIN rt60 ON ('s禉-{ ~z' IN ()) FULL OUTER JOIN v0 ON CASE ((rt60.c0)OR(rt1.c2))  WHEN t0.c87 THEN CASE rt1.c1  WHEN t0.c49 THEN t0.c39 END END LEFT OUTER JOIN t0 ON (((((rt1.c2)==(rt60.c1)), ((t0.c32) IS FALSE), ((vt0.c1) BETWEEN (rt1.c2) AND (0.03490160404586928))))>=((rt1.c0 COLLATE NOCASE, t0.c39, CASE WHEN vt0.c0 THEN 0x118b72ba WHEN rt60.c0 THEN rt1.c3 WHEN '-1877923355' THEN rt1.c4 ELSE rt1.c4 END))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)*(rt1.c3))) BETWEEN (t0.c39 COLLATE BINARY) AND (((rt1.c2)AND(t0.c32)))) LEFT OUTER JOIN rt60 ON ('s禉-{ ~z' IN ()) FULL OUTER JOIN v0 ON CASE ((rt60.c0)OR(rt1.c2))  WHEN t0.c87 THEN CASE rt1.c1  WHEN t0.c49 THEN t0.c39 END END LEFT OUTER JOIN t0 ON (((((rt1.c2)==(rt60.c1)), ((t0.c32) IS FALSE), ((vt0.c1) BETWEEN (rt1.c2) AND (0.03490160404586928))))>=((rt1.c0 COLLATE NOCASE, t0.c39, CASE WHEN vt0.c0 THEN 0x118b72ba WHEN rt60.c0 THEN rt1.c3 WHEN '-1877923355' THEN rt1.c4 ELSE rt1.c4 END))) WHERE ((~ (t0.c32)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c32)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c1)*(rt1.c3))) BETWEEN (t0.c39 COLLATE BINARY) AND (((rt1.c2)AND(t0.c32)))) LEFT OUTER JOIN rt60 ON ('s禉-{ ~z' IN ()) FULL OUTER JOIN v0 ON CASE ((rt60.c0)OR(rt1.c2))  WHEN t0.c87 THEN CASE rt1.c1  WHEN t0.c49 THEN t0.c39 END END LEFT OUTER JOIN t0 ON (((((rt1.c2)==(rt60.c1)), ((t0.c32) IS FALSE), ((vt0.c1) BETWEEN (rt1.c2) AND (0.03490160404586928))))>=((rt1.c0 COLLATE NOCASE, t0.c39, CASE WHEN vt0.c0 THEN 0x118b72ba WHEN rt60.c0 THEN rt1.c3 WHEN '-1877923355' THEN rt1.c4 ELSE rt1.c4 END))));
SELECT * FROM vt0, v0, rt1, rt60 WHERE ((((rt1.c1 IN ()))+(rt60.c2)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))+(rt60.c2))) IS TRUE)  as count FROM vt0, v0, rt1, rt60);
SELECT * FROM vt0, v0, rt1, rt60 WHERE ((((rt1.c1 IN ()))+(rt60.c2)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))+(rt60.c2))) IS TRUE)  as count FROM vt0, v0, rt1, rt60);
SELECT * FROM vt0, v0, rt1, rt60 WHERE ((((rt1.c1 IN ()))+(rt60.c2)));
SELECT COUNT(*) FROM t0, rt60 WHERE (((t0.c87 IN (t0.c39)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c87 IN (t0.c39)) IN ())) IS TRUE)  as count FROM t0, rt60);
SELECT COUNT(*) FROM t0, rt60 WHERE (((t0.c87 IN (t0.c39)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c87 IN (t0.c39)) IN ())) IS TRUE)  as count FROM t0, rt60);
SELECT COUNT(*) FROM t0, rt60 WHERE (((t0.c87 IN (t0.c39)) IN ()));
SELECT ALL COUNT(*) FROM rt60, v0, rt1, t0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt60, v0, rt1 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM rt60, v0, rt1, t0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt60, v0, rt1 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM rt60, v0, rt1, t0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT * FROM rt1, rt60, t0, vt0, v0 WHERE ((~ (CAST(vt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, rt60, t0, vt0, v0);
SELECT * FROM rt1, rt60, t0, vt0, v0 WHERE ((~ (CAST(vt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, rt60, t0, vt0, v0);
SELECT * FROM rt1, rt60, t0, vt0, v0 WHERE ((~ (CAST(vt0.c2 AS TEXT))));
SELECT * FROM v0, rt60 WHERE (((((rt60.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)) ORDER BY CAST((- (rt60.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt60.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt60 ORDER BY CAST((- (rt60.c1)) AS REAL) ASC);
SELECT * FROM v0, rt60 WHERE (((((rt60.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)) ORDER BY CAST((- (rt60.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt60.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt60 ORDER BY CAST((- (rt60.c1)) AS REAL) ASC);
SELECT * FROM v0, rt60 WHERE (((((rt60.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)) ORDER BY CAST((- (rt60.c1)) AS REAL) ASC;
SELECT ALL * FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (v0.c0)));
SELECT ALL COUNT(*) FROM rt60 WHERE (UNLIKELY(((rt60.c2) BETWEEN (rt60.c1) AND ('	ꏃB'))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt60.c2) BETWEEN (rt60.c1) AND ('	ꏃB')))) IS TRUE)  as count FROM rt60);
SELECT ALL COUNT(*) FROM rt60 WHERE (UNLIKELY(((rt60.c2) BETWEEN (rt60.c1) AND ('	ꏃB'))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt60.c2) BETWEEN (rt60.c1) AND ('	ꏃB')))) IS TRUE)  as count FROM rt60);
SELECT ALL COUNT(*) FROM rt60 WHERE (UNLIKELY(((rt60.c2) BETWEEN (rt60.c1) AND ('	ꏃB'))));
SELECT ALL * FROM rt60, v0, vt0, rt1 RIGHT OUTER JOIN t0 ON ((CAST(rt1.c0 AS REAL)) BETWEEN (PRINTF(NULL, t0.c87, v0.c0)) AND (((rt1.c2) ISNULL))) WHERE ((((NOT (NULL)))<=(CASE rt1.c4  WHEN 0.39303752117367197 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL)))<=(CASE rt1.c4  WHEN 0.39303752117367197 THEN vt0.c1 END))) IS TRUE)  as count FROM rt60, v0, vt0, rt1 RIGHT OUTER JOIN t0 ON ((CAST(rt1.c0 AS REAL)) BETWEEN (PRINTF(NULL, t0.c87, v0.c0)) AND (((rt1.c2) ISNULL))));
SELECT ALL * FROM rt60, v0, vt0, rt1 RIGHT OUTER JOIN t0 ON ((CAST(rt1.c0 AS REAL)) BETWEEN (PRINTF(NULL, t0.c87, v0.c0)) AND (((rt1.c2) ISNULL))) WHERE ((((NOT (NULL)))<=(CASE rt1.c4  WHEN 0.39303752117367197 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL)))<=(CASE rt1.c4  WHEN 0.39303752117367197 THEN vt0.c1 END))) IS TRUE)  as count FROM rt60, v0, vt0, rt1 RIGHT OUTER JOIN t0 ON ((CAST(rt1.c0 AS REAL)) BETWEEN (PRINTF(NULL, t0.c87, v0.c0)) AND (((rt1.c2) ISNULL))));
SELECT ALL * FROM rt60, v0, vt0, rt1 RIGHT OUTER JOIN t0 ON ((CAST(rt1.c0 AS REAL)) BETWEEN (PRINTF(NULL, t0.c87, v0.c0)) AND (((rt1.c2) ISNULL))) WHERE ((((NOT (NULL)))<=(CASE rt1.c4  WHEN 0.39303752117367197 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c87) ORDER BY LOWER(DISTINCT json_quote(0.13611399605248264)) DESC  NULLS FIRST, ((((((((((((((((t0.c32)AND(t0.c49)))AND(t0.c87)))OR(t0.c39)))OR(t0.c87)))AND(((((((((t0.c32)OR(NULL)))AND(t0.c49)))OR(t0.c87)))AND(t0.c32)))))AND(((t0.c39) BETWEEN (t0.c87) AND (t0.c49)))))AND(t0.c39)))AND(((t0.c39)|(t0.c49))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t0 ORDER BY LOWER(DISTINCT json_quote(0.13611399605248264)) DESC  NULLS FIRST, ((((((((((((((((t0.c32)AND(t0.c49)))AND(t0.c87)))OR(t0.c39)))OR(t0.c87)))AND(((((((((t0.c32)OR(NULL)))AND(t0.c49)))OR(t0.c87)))AND(t0.c32)))))AND(((t0.c39) BETWEEN (t0.c87) AND (t0.c49)))))AND(t0.c39)))AND(((t0.c39)|(t0.c49))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c87) ORDER BY LOWER(DISTINCT json_quote(0.13611399605248264)) DESC  NULLS FIRST, ((((((((((((((((t0.c32)AND(t0.c49)))AND(t0.c87)))OR(t0.c39)))OR(t0.c87)))AND(((((((((t0.c32)OR(NULL)))AND(t0.c49)))OR(t0.c87)))AND(t0.c32)))))AND(((t0.c39) BETWEEN (t0.c87) AND (t0.c49)))))AND(t0.c39)))AND(((t0.c39)|(t0.c49))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t0 ORDER BY LOWER(DISTINCT json_quote(0.13611399605248264)) DESC  NULLS FIRST, ((((((((((((((((t0.c32)AND(t0.c49)))AND(t0.c87)))OR(t0.c39)))OR(t0.c87)))AND(((((((((t0.c32)OR(NULL)))AND(t0.c49)))OR(t0.c87)))AND(t0.c32)))))AND(((t0.c39) BETWEEN (t0.c87) AND (t0.c49)))))AND(t0.c39)))AND(((t0.c39)|(t0.c49))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c87) ORDER BY LOWER(DISTINCT json_quote(0.13611399605248264)) DESC  NULLS FIRST, ((((((((((((((((t0.c32)AND(t0.c49)))AND(t0.c87)))OR(t0.c39)))OR(t0.c87)))AND(((((((((t0.c32)OR(NULL)))AND(t0.c49)))OR(t0.c87)))AND(t0.c32)))))AND(((t0.c39) BETWEEN (t0.c87) AND (t0.c49)))))AND(t0.c39)))AND(((t0.c39)|(t0.c49))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt60, t0, rt1 WHERE ((+ (TYPEOF(DISTINCT rt1.c3))));
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(DISTINCT rt1.c3)))) IS TRUE)  as count FROM vt0, rt60, t0, rt1);
SELECT COUNT(*) FROM vt0, rt60, t0, rt1 WHERE ((+ (TYPEOF(DISTINCT rt1.c3))));
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(DISTINCT rt1.c3)))) IS TRUE)  as count FROM vt0, rt60, t0, rt1);
SELECT COUNT(*) FROM vt0, rt60, t0, rt1 WHERE ((+ (TYPEOF(DISTINCT rt1.c3))));
SELECT COUNT(*) FROM rt1, vt0, rt60, v0 WHERE (COALESCE(DISTINCT '-1379421781', (NOT (rt60.c2)))) ORDER BY ((CAST(rt60.c0 AS REAL)) NOT BETWEEN (((0X4240ae6b)<<(rt1.c4))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))), (((-1977943995)=(v0.c0)) IN (((rt1.c1)==(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT '-1379421781', (NOT (rt60.c2)))) IS TRUE)  as count FROM rt1, vt0, rt60, v0 ORDER BY ((CAST(rt60.c0 AS REAL)) NOT BETWEEN (((0X4240ae6b)<<(rt1.c4))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))), (((-1977943995)==(v0.c0)) IN (((rt1.c1)==(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt60, v0 WHERE (COALESCE(DISTINCT '-1379421781', (NOT (rt60.c2)))) ORDER BY ((CAST(rt60.c0 AS REAL)) NOT BETWEEN (((0X4240ae6b)<<(rt1.c4))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))), (((-1977943995)=(v0.c0)) IN (((rt1.c1)==(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT '-1379421781', (NOT (rt60.c2)))) IS TRUE)  as count FROM rt1, vt0, rt60, v0 ORDER BY ((CAST(rt60.c0 AS REAL)) NOT BETWEEN (((0X4240ae6b)<<(rt1.c4))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))), (((-1977943995)==(v0.c0)) IN (((rt1.c1)==(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt60, v0 WHERE (COALESCE(DISTINCT '-1379421781', (NOT (rt60.c2)))) ORDER BY ((CAST(rt60.c0 AS REAL)) NOT BETWEEN (((0X4240ae6b)<<(rt1.c4))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))), (((-1977943995)=(v0.c0)) IN (((rt1.c1)==(vt0.c0))))  NULLS FIRST;
SELECT * FROM v0, t0, rt1, vt0, rt60 WHERE (0.7369846159544085);
SELECT SUM(count) FROM (SELECT ALL ((0.7369846159544085) IS TRUE)  as count FROM v0, t0, rt1, vt0, rt60);
SELECT * FROM v0, t0, rt1, vt0, rt60 WHERE (0.7369846159544085);
SELECT SUM(count) FROM (SELECT ALL ((0.7369846159544085) IS TRUE)  as count FROM v0, t0, rt1, vt0, rt60);
SELECT * FROM v0, t0, rt1, vt0, rt60 WHERE (0.7369846159544085);
SELECT COUNT(*) FROM vt0, rt60, t0, v0 WHERE ((((((vt0.c1))>((rt60.c2))))!=(t0.c87 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt60.c2)>(vt0.c2)) THEN (vt0.c1 IN ()) WHEN ((rt60.c2) NOT BETWEEN (0Xffffffffe68fa1fd) AND (vt0.c1)) THEN ((t0.c39) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN rt60.c1 COLLATE BINARY THEN ((((t0.c87)OR(rt60.c1)))AND(v0.c0)) WHEN LTRIM(rt60.c0) THEN t0.c87 WHEN CASE vt0.c1  WHEN t0.c49 THEN rt60.c1 ELSE vt0.c1 END THEN HEX(vt0.c1) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((rt60.c2))))<>(t0.c87 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt60, t0, v0 ORDER BY CASE WHEN ((rt60.c2)>(vt0.c2)) THEN (vt0.c1 IN ()) WHEN ((rt60.c2) NOT BETWEEN (0xffffffffe68fa1fd) AND (vt0.c1)) THEN ((t0.c39) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN rt60.c1 COLLATE BINARY THEN ((((t0.c87)OR(rt60.c1)))AND(v0.c0)) WHEN LTRIM(rt60.c0) THEN t0.c87 WHEN CASE vt0.c1  WHEN t0.c49 THEN rt60.c1 ELSE vt0.c1 END THEN HEX(vt0.c1) END ASC);
SELECT COUNT(*) FROM vt0, rt60, t0, v0 WHERE ((((((vt0.c1))>((rt60.c2))))!=(t0.c87 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt60.c2)>(vt0.c2)) THEN (vt0.c1 IN ()) WHEN ((rt60.c2) NOT BETWEEN (0Xffffffffe68fa1fd) AND (vt0.c1)) THEN ((t0.c39) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN rt60.c1 COLLATE BINARY THEN ((((t0.c87)OR(rt60.c1)))AND(v0.c0)) WHEN LTRIM(rt60.c0) THEN t0.c87 WHEN CASE vt0.c1  WHEN t0.c49 THEN rt60.c1 ELSE vt0.c1 END THEN HEX(vt0.c1) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((rt60.c2))))<>(t0.c87 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt60, t0, v0 ORDER BY CASE WHEN ((rt60.c2)>(vt0.c2)) THEN (vt0.c1 IN ()) WHEN ((rt60.c2) NOT BETWEEN (0xffffffffe68fa1fd) AND (vt0.c1)) THEN ((t0.c39) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN rt60.c1 COLLATE BINARY THEN ((((t0.c87)OR(rt60.c1)))AND(v0.c0)) WHEN LTRIM(rt60.c0) THEN t0.c87 WHEN CASE vt0.c1  WHEN t0.c49 THEN rt60.c1 ELSE vt0.c1 END THEN HEX(vt0.c1) END ASC);
SELECT COUNT(*) FROM vt0, rt60, t0, v0 WHERE ((((((vt0.c1))>((rt60.c2))))!=(t0.c87 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt60.c2)>(vt0.c2)) THEN (vt0.c1 IN ()) WHEN ((rt60.c2) NOT BETWEEN (0Xffffffffe68fa1fd) AND (vt0.c1)) THEN ((t0.c39) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN rt60.c1 COLLATE BINARY THEN ((((t0.c87)OR(rt60.c1)))AND(v0.c0)) WHEN LTRIM(rt60.c0) THEN t0.c87 WHEN CASE vt0.c1  WHEN t0.c49 THEN rt60.c1 ELSE vt0.c1 END THEN HEX(vt0.c1) END ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt1, rt60 WHERE (COALESCE(DISTINCT UNICODE(rt1.c1), ((((vt0.c0)AND(rt60.c0)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT UNICODE(rt1.c1), ((((vt0.c0)AND(rt60.c0)))OR(rt1.c2)))) IS TRUE)  as count FROM v0, t0, vt0, rt1, rt60);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt1, rt60 WHERE (COALESCE(DISTINCT UNICODE(rt1.c1), ((((vt0.c0)AND(rt60.c0)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT UNICODE(rt1.c1), ((((vt0.c0)AND(rt60.c0)))OR(rt1.c2)))) IS TRUE)  as count FROM v0, t0, vt0, rt1, rt60);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt1, rt60 WHERE (COALESCE(DISTINCT UNICODE(rt1.c1), ((((vt0.c0)AND(rt60.c0)))OR(rt1.c2))));
SELECT ALL * FROM rt1, t0, vt0, v0 FULL OUTER JOIN rt60 ON CASE rt1.c0  WHEN vt0.c2 THEN rt1.c0 END COLLATE BINARY WHERE ((((t0.c39) NOT NULL) IN (''))) ORDER BY CASE CASE rt60.c0  WHEN t0.c32 THEN rt60.c1 WHEN -1281489388 THEN v0.c0 WHEN x'0dd7' THEN v0.c0 ELSE rt1.c4 END  WHEN '-1054492683' THEN (NOT (rt60.c1)) ELSE t0.c39 END DESC, CASE WHEN CAST(rt60.c2 AS TEXT) THEN CAST(t0.c39 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c39) NOT NULL) IN (''))) IS TRUE)  as count FROM rt1, t0, vt0, v0 FULL OUTER JOIN rt60 ON CASE rt1.c0  WHEN vt0.c2 THEN rt1.c0 END COLLATE BINARY ORDER BY CASE CASE rt60.c0  WHEN t0.c32 THEN rt60.c1 WHEN -1281489388 THEN v0.c0 WHEN x'0dd7' THEN v0.c0 ELSE rt1.c4 END  WHEN '-1054492683' THEN (NOT (rt60.c1)) ELSE t0.c39 END DESC, CASE WHEN CAST(rt60.c2 AS TEXT) THEN CAST(t0.c39 AS REAL) END  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0, v0 FULL OUTER JOIN rt60 ON CASE rt1.c0  WHEN vt0.c2 THEN rt1.c0 END COLLATE BINARY WHERE ((((t0.c39) NOT NULL) IN (''))) ORDER BY CASE CASE rt60.c0  WHEN t0.c32 THEN rt60.c1 WHEN -1281489388 THEN v0.c0 WHEN x'0dd7' THEN v0.c0 ELSE rt1.c4 END  WHEN '-1054492683' THEN (NOT (rt60.c1)) ELSE t0.c39 END DESC, CASE WHEN CAST(rt60.c2 AS TEXT) THEN CAST(t0.c39 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c39) NOT NULL) IN (''))) IS TRUE)  as count FROM rt1, t0, vt0, v0 FULL OUTER JOIN rt60 ON CASE rt1.c0  WHEN vt0.c2 THEN rt1.c0 END COLLATE BINARY ORDER BY CASE CASE rt60.c0  WHEN t0.c32 THEN rt60.c1 WHEN -1281489388 THEN v0.c0 WHEN x'0dd7' THEN v0.c0 ELSE rt1.c4 END  WHEN '-1054492683' THEN (NOT (rt60.c1)) ELSE t0.c39 END DESC, CASE WHEN CAST(rt60.c2 AS TEXT) THEN CAST(t0.c39 AS REAL) END  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0, v0 FULL OUTER JOIN rt60 ON CASE rt1.c0  WHEN vt0.c2 THEN rt1.c0 END COLLATE BINARY WHERE ((((t0.c39) NOT NULL) IN (''))) ORDER BY CASE CASE rt60.c0  WHEN t0.c32 THEN rt60.c1 WHEN -1281489388 THEN v0.c0 WHEN x'0dd7' THEN v0.c0 ELSE rt1.c4 END  WHEN '-1054492683' THEN (NOT (rt60.c1)) ELSE t0.c39 END DESC, CASE WHEN CAST(rt60.c2 AS TEXT) THEN CAST(t0.c39 AS REAL) END  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, rt1, rt60 WHERE ((((NOT (t0.c39)))OR(0.9576831433005023)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c39)))OR(0.9576831433005023))) IS TRUE)  as count FROM v0, t0 NOT INDEXED, rt1, rt60);
SELECT COUNT(*) FROM v0, t0, rt1, rt60 WHERE ((((NOT (t0.c39)))OR(0.9576831433005023)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c39)))OR(0.9576831433005023))) IS TRUE)  as count FROM v0, t0 NOT INDEXED, rt1, rt60);
SELECT COUNT(*) FROM v0, t0, rt1, rt60 WHERE ((((NOT (t0.c39)))OR(0.9576831433005023)));
SELECT * FROM rt1, rt60, vt0 WHERE ('Sj0G') ORDER BY CASE TIME(rt1.c4, rt60.c0, rt1.c1)  WHEN (((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt60.c1, vt0.c0, rt1.c2)) AND ((vt0.c1, rt1.c2, vt0.c1))) THEN ((rt60.c1)|(rt60.c0)) ELSE ((rt60.c1)GLOB(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (('Sj0G') IS TRUE)  as count FROM rt1, rt60, vt0 ORDER BY CASE TIME(rt1.c4, rt60.c0, rt1.c1)  WHEN (((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt60.c1, vt0.c0, rt1.c2)) AND ((vt0.c1, rt1.c2, vt0.c1))) THEN ((rt60.c1)|(rt60.c0)) ELSE ((rt60.c1)GLOB(rt1.c1)) END ASC);
SELECT * FROM rt1, rt60, vt0 WHERE ('Sj0G') ORDER BY CASE TIME(rt1.c4, rt60.c0, rt1.c1)  WHEN (((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt60.c1, vt0.c0, rt1.c2)) AND ((vt0.c1, rt1.c2, vt0.c1))) THEN ((rt60.c1)|(rt60.c0)) ELSE ((rt60.c1)GLOB(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (('Sj0G') IS TRUE)  as count FROM rt1, rt60, vt0 ORDER BY CASE TIME(rt1.c4, rt60.c0, rt1.c1)  WHEN (((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt60.c1, vt0.c0, rt1.c2)) AND ((vt0.c1, rt1.c2, vt0.c1))) THEN ((rt60.c1)|(rt60.c0)) ELSE ((rt60.c1)GLOB(rt1.c1)) END ASC);
SELECT * FROM rt1, rt60, vt0 WHERE ('Sj0G') ORDER BY CASE TIME(rt1.c4, rt60.c0, rt1.c1)  WHEN (((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((rt60.c1, vt0.c0, rt1.c2)) AND ((vt0.c1, rt1.c2, vt0.c1))) THEN ((rt60.c1)|(rt60.c0)) ELSE ((rt60.c1)GLOB(rt1.c1)) END ASC;
SELECT * FROM rt1 CROSS JOIN vt0 ON ((('-228472791')IS(rt60.c0)) IN ()) RIGHT OUTER JOIN rt60 ON (NOT (LAST_INSERT_ROWID())) FULL OUTER JOIN v0 ON '' FULL OUTER JOIN t0 ON (COALESCE(rt1.c4, '캕f') IN ()) WHERE ((((((rt60.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))>(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt60.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))>(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((('-228472791')IS(rt60.c0)) IN ()) RIGHT OUTER JOIN rt60 ON (NOT (LAST_INSERT_ROWID())) FULL OUTER JOIN v0 ON '' FULL OUTER JOIN t0 ON (COALESCE(rt1.c4, '캕f') IN ()));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((('-228472791')IS(rt60.c0)) IN ()) RIGHT OUTER JOIN rt60 ON (NOT (LAST_INSERT_ROWID())) FULL OUTER JOIN v0 ON '' FULL OUTER JOIN t0 ON (COALESCE(rt1.c4, '캕f') IN ()) WHERE ((((((rt60.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))>(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt60.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))>(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((('-228472791')IS(rt60.c0)) IN ()) RIGHT OUTER JOIN rt60 ON (NOT (LAST_INSERT_ROWID())) FULL OUTER JOIN v0 ON '' FULL OUTER JOIN t0 ON (COALESCE(rt1.c4, '캕f') IN ()));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((('-228472791')IS(rt60.c0)) IN ()) RIGHT OUTER JOIN rt60 ON (NOT (LAST_INSERT_ROWID())) FULL OUTER JOIN v0 ON '' FULL OUTER JOIN t0 ON (COALESCE(rt1.c4, '캕f') IN ()) WHERE ((((((rt60.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))>(CAST(vt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 AS TEXT) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, rt60 LEFT OUTER JOIN vt0 ON CAST(t0.c32 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON (- (((t0.c49)>=(rt60.c2)))) WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0, rt60 LEFT OUTER JOIN vt0 ON CAST(t0.c32 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON (- (((t0.c49)>=(rt60.c2)))));
SELECT COUNT(*) FROM t0, rt60 LEFT OUTER JOIN vt0 ON CAST(t0.c32 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON (- (((t0.c49)>=(rt60.c2)))) WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0, rt60 LEFT OUTER JOIN vt0 ON CAST(t0.c32 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON (- (((t0.c49)>=(rt60.c2)))));
SELECT COUNT(*) FROM t0, rt60 LEFT OUTER JOIN vt0 ON CAST(t0.c32 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON (- (((t0.c49)>=(rt60.c2)))) WHERE (CAST(NULL AS TEXT));
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c32) NOT NULL) AS TEXT)) ORDER BY NULL COLLATE RTRIM, (((v0.c0, v0.c0, t0.c32, v0.c0, t0.c87))!=((t0.c87, v0.c0, t0.c87, t0.c32, t0.c49))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c32) NOT NULL) AS TEXT)) IS TRUE)  as count FROM v0, t0 ORDER BY NULL COLLATE RTRIM, (((v0.c0, v0.c0, t0.c32, v0.c0, t0.c87))!=((t0.c87, v0.c0, t0.c87, t0.c32, t0.c49))) COLLATE RTRIM);
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c32) NOT NULL) AS TEXT)) ORDER BY NULL COLLATE RTRIM, (((v0.c0, v0.c0, t0.c32, v0.c0, t0.c87))!=((t0.c87, v0.c0, t0.c87, t0.c32, t0.c49))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c32) NOT NULL) AS TEXT)) IS TRUE)  as count FROM v0, t0 ORDER BY NULL COLLATE RTRIM, (((v0.c0, v0.c0, t0.c32, v0.c0, t0.c87))!=((t0.c87, v0.c0, t0.c87, t0.c32, t0.c49))) COLLATE RTRIM);
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c32) NOT NULL) AS TEXT)) ORDER BY NULL COLLATE RTRIM, (((v0.c0, v0.c0, t0.c32, v0.c0, t0.c87))!=((t0.c87, v0.c0, t0.c87, t0.c32, t0.c49))) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0, rt1 NOT INDEXED WHERE (RTRIM(((rt1.c0)LIKE('2126539651')))) ORDER BY (((NOT (''))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt1.c0)LIKE('2126539651')))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((NOT (''))) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 NOT INDEXED WHERE (RTRIM(((rt1.c0)LIKE('2126539651')))) ORDER BY (((NOT (''))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt1.c0)LIKE('2126539651')))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((NOT (''))) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 NOT INDEXED WHERE (RTRIM(((rt1.c0)LIKE('2126539651')))) ORDER BY (((NOT (''))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt60, rt1, t0, vt0 WHERE (((vt0.c0)<=((((rt1.c4))<>((rt1.c0)))))) ORDER BY CASE CASE WHEN v0.c0 THEN vt0.c2 END  WHEN ((t0.c39)+(rt1.c1)) THEN (vt0.c0 IN (t0.c32)) ELSE rt1.c3 END  NULLS FIRST, CAST(rt1.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=((((rt1.c4))<>((rt1.c0)))))) IS TRUE)  as count FROM v0, rt60, rt1, t0, vt0 ORDER BY CASE CASE WHEN v0.c0 THEN vt0.c2 END  WHEN ((t0.c39)+(rt1.c1)) THEN (vt0.c0 IN (t0.c32)) ELSE rt1.c3 END  NULLS FIRST, CAST(rt1.c0 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt60, rt1, t0, vt0 WHERE (((vt0.c0)<=((((rt1.c4))<>((rt1.c0)))))) ORDER BY CASE CASE WHEN v0.c0 THEN vt0.c2 END  WHEN ((t0.c39)+(rt1.c1)) THEN (vt0.c0 IN (t0.c32)) ELSE rt1.c3 END  NULLS FIRST, CAST(rt1.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=((((rt1.c4))<>((rt1.c0)))))) IS TRUE)  as count FROM v0, rt60, rt1, t0, vt0 ORDER BY CASE CASE WHEN v0.c0 THEN vt0.c2 END  WHEN ((t0.c39)+(rt1.c1)) THEN (vt0.c0 IN (t0.c32)) ELSE rt1.c3 END  NULLS FIRST, CAST(rt1.c0 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt60, rt1, t0, vt0 WHERE (((vt0.c0)<=((((rt1.c4))<>((rt1.c0)))))) ORDER BY CASE CASE WHEN v0.c0 THEN vt0.c2 END  WHEN ((t0.c39)+(rt1.c1)) THEN (vt0.c0 IN (t0.c32)) ELSE rt1.c3 END  NULLS FIRST, CAST(rt1.c0 COLLATE BINARY AS INTEGER);
SELECT COUNT(*) FROM rt60 WHERE (rt60.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt60.c1) IS TRUE)  as count FROM rt60);
SELECT COUNT(*) FROM rt60 WHERE (rt60.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt60.c1) IS TRUE)  as count FROM rt60);
SELECT COUNT(*) FROM rt60 WHERE (rt60.c1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, v0, rt60 WHERE ((+ (((((vt0.c1)AND(rt60.c2)))OR('-1887699200')))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c1)AND(rt60.c2)))OR('-1887699200'))))) IS TRUE)  as count FROM t0, vt0, rt1, v0, rt60);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, v0, rt60 WHERE ((+ (((((vt0.c1)AND(rt60.c2)))OR('-1887699200')))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c1)AND(rt60.c2)))OR('-1887699200'))))) IS TRUE)  as count FROM t0, vt0, rt1, v0, rt60);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, v0, rt60 WHERE ((+ (((((vt0.c1)AND(rt60.c2)))OR('-1887699200')))));
SELECT * FROM rt60, t0 WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM rt60, t0);
SELECT * FROM rt60, t0 WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM rt60, t0);
SELECT * FROM rt60, t0 WHERE (t0.c87);
SELECT ALL * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((((((x'aa06')AND(rt1.c1)))AND('-1928091300'))))>=((((((vt0.c0)AND(rt1.c4)))OR(rt60.c0))))) RIGHT OUTER JOIN rt60 ON (((- (rt1.c1))) BETWEEN ((((t0.c39, t0.c87, t0.c32)) NOT BETWEEN ((vt0.c2, vt0.c1, rt60.c0)) AND ((rt1.c2, rt1.c2, t0.c39)))) AND (x'a97a')) RIGHT OUTER JOIN rt1 ON (((((rt60.c0 IN ()))AND(NULL)))OR((t0.c39 IN (vt0.c0, rt1.c1, rt60.c1)))) WHERE (((((rt60.c0)>=(vt0.c2)))<((~ (rt60.c2))))) ORDER BY ((((t0.c49))<((t0.c87))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt60.c0)>=(vt0.c2)))<((~ (rt60.c2))))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((((((x'aa06')AND(rt1.c1)))AND('-1928091300'))))>=((((((vt0.c0)AND(rt1.c4)))OR(rt60.c0))))) RIGHT OUTER JOIN rt60 ON (((- (rt1.c1))) BETWEEN ((((t0.c39, t0.c87, t0.c32)) NOT BETWEEN ((vt0.c2, vt0.c1, rt60.c0)) AND ((rt1.c2, rt1.c2, t0.c39)))) AND (x'a97a')) RIGHT OUTER JOIN rt1 ON (((((rt60.c0 IN ()))AND(NULL)))OR((t0.c39 IN (vt0.c0, rt1.c1, rt60.c1)))) ORDER BY ((((t0.c49))<((t0.c87))) IN ()) ASC);
SELECT ALL * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((((((x'aa06')AND(rt1.c1)))AND('-1928091300'))))>=((((((vt0.c0)AND(rt1.c4)))OR(rt60.c0))))) RIGHT OUTER JOIN rt60 ON (((- (rt1.c1))) BETWEEN ((((t0.c39, t0.c87, t0.c32)) NOT BETWEEN ((vt0.c2, vt0.c1, rt60.c0)) AND ((rt1.c2, rt1.c2, t0.c39)))) AND (x'a97a')) RIGHT OUTER JOIN rt1 ON (((((rt60.c0 IN ()))AND(NULL)))OR((t0.c39 IN (vt0.c0, rt1.c1, rt60.c1)))) WHERE (((((rt60.c0)>=(vt0.c2)))<((~ (rt60.c2))))) ORDER BY ((((t0.c49))<((t0.c87))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt60.c0)>=(vt0.c2)))<((~ (rt60.c2))))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((((((x'aa06')AND(rt1.c1)))AND('-1928091300'))))>=((((((vt0.c0)AND(rt1.c4)))OR(rt60.c0))))) RIGHT OUTER JOIN rt60 ON (((- (rt1.c1))) BETWEEN ((((t0.c39, t0.c87, t0.c32)) NOT BETWEEN ((vt0.c2, vt0.c1, rt60.c0)) AND ((rt1.c2, rt1.c2, t0.c39)))) AND (x'a97a')) RIGHT OUTER JOIN rt1 ON (((((rt60.c0 IN ()))AND(NULL)))OR((t0.c39 IN (vt0.c0, rt1.c1, rt60.c1)))) ORDER BY ((((t0.c49))<((t0.c87))) IN ()) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE json_type(0.44098214688766835)  WHEN CAST(t0.c32 AS BLOB) THEN ((t0.c32) ISNULL) END) ORDER BY ((((t0.c87) NOT BETWEEN (t0.c39) AND (t0.c32)))LIKE(((((((((t0.c49)OR(t0.c49)))OR(t0.c39)))AND(t0.c87)))AND(t0.c39)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE json_type(0.44098214688766835)  WHEN CAST(t0.c32 AS BLOB) THEN ((t0.c32) ISNULL) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c87) NOT BETWEEN (t0.c39) AND (t0.c32)))LIKE(((((((((t0.c49)OR(t0.c49)))OR(t0.c39)))AND(t0.c87)))AND(t0.c39)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE json_type(0.44098214688766835)  WHEN CAST(t0.c32 AS BLOB) THEN ((t0.c32) ISNULL) END) ORDER BY ((((t0.c87) NOT BETWEEN (t0.c39) AND (t0.c32)))LIKE(((((((((t0.c49)OR(t0.c49)))OR(t0.c39)))AND(t0.c87)))AND(t0.c39)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE json_type(0.44098214688766835)  WHEN CAST(t0.c32 AS BLOB) THEN ((t0.c32) ISNULL) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c87) NOT BETWEEN (t0.c39) AND (t0.c32)))LIKE(((((((((t0.c49)OR(t0.c49)))OR(t0.c39)))AND(t0.c87)))AND(t0.c39)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE json_type(0.44098214688766835)  WHEN CAST(t0.c32 AS BLOB) THEN ((t0.c32) ISNULL) END) ORDER BY ((((t0.c87) NOT BETWEEN (t0.c39) AND (t0.c32)))LIKE(((((((((t0.c49)OR(t0.c49)))OR(t0.c39)))AND(t0.c87)))AND(t0.c39)))) ASC;
SELECT * FROM rt60 WHERE (CAST(((((rt60.c1)OR(rt60.c1)))OR(rt60.c1)) AS REAL)) ORDER BY (('') NOT BETWEEN (((rt60.c1) NOT NULL)) AND (CASE rt60.c1  WHEN rt60.c2 THEN rt60.c2 ELSE rt60.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt60.c1)OR(rt60.c1)))OR(rt60.c1)) AS REAL)) IS TRUE)  as count FROM rt60 ORDER BY (('') NOT BETWEEN (((rt60.c1) NOT NULL)) AND (CASE rt60.c1  WHEN rt60.c2 THEN rt60.c2 ELSE rt60.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt60 WHERE (CAST(((((rt60.c1)OR(rt60.c1)))OR(rt60.c1)) AS REAL)) ORDER BY (('') NOT BETWEEN (((rt60.c1) NOT NULL)) AND (CASE rt60.c1  WHEN rt60.c2 THEN rt60.c2 ELSE rt60.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt60.c1)OR(rt60.c1)))OR(rt60.c1)) AS REAL)) IS TRUE)  as count FROM rt60 ORDER BY (('') NOT BETWEEN (((rt60.c1) NOT NULL)) AND (CASE rt60.c1  WHEN rt60.c2 THEN rt60.c2 ELSE rt60.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt60 WHERE (CAST(((((rt60.c1)OR(rt60.c1)))OR(rt60.c1)) AS REAL)) ORDER BY (('') NOT BETWEEN (((rt60.c1) NOT NULL)) AND (CASE rt60.c1  WHEN rt60.c2 THEN rt60.c2 ELSE rt60.c2 END)) DESC  NULLS LAST;
SELECT ALL * FROM rt60, vt0 WHERE (((((((((((vt0.c2)AND(rt60.c1)))OR(rt60.c0)))AND(rt60.c2)))AND('691127251'))) NOT NULL)) ORDER BY (+ (NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c2)AND(rt60.c1)))OR(rt60.c0)))AND(rt60.c2)))AND('691127251'))) NOT NULL)) IS TRUE)  as count FROM rt60, vt0 ORDER BY (+ (NULL)));
SELECT ALL * FROM rt60, vt0 WHERE (((((((((((vt0.c2)AND(rt60.c1)))OR(rt60.c0)))AND(rt60.c2)))AND('691127251'))) NOT NULL)) ORDER BY (+ (NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c2)AND(rt60.c1)))OR(rt60.c0)))AND(rt60.c2)))AND('691127251'))) NOT NULL)) IS TRUE)  as count FROM rt60, vt0 ORDER BY (+ (NULL)));
SELECT ALL * FROM rt60, vt0 WHERE (((((((((((vt0.c2)AND(rt60.c1)))OR(rt60.c0)))AND(rt60.c2)))AND('691127251'))) NOT NULL)) ORDER BY (+ (NULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)IS NOT(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)IS NOT(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)IS NOT(((v0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, t0, rt60 WHERE (CAST((NOT (rt60.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt60.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt60);
SELECT COUNT(*) FROM vt0, t0, rt60 WHERE (CAST((NOT (rt60.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt60.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt60);
SELECT COUNT(*) FROM vt0, t0, rt60 WHERE (CAST((NOT (rt60.c2)) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (((t0.c32)AND(t0.c87)) COLLATE RTRIM) ORDER BY CAST(CAST(t0.c49 AS REAL) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32)AND(t0.c87)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c49 AS REAL) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c32)AND(t0.c87)) COLLATE RTRIM) ORDER BY CAST(CAST(t0.c49 AS REAL) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32)AND(t0.c87)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c49 AS REAL) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c32)AND(t0.c87)) COLLATE RTRIM) ORDER BY CAST(CAST(t0.c49 AS REAL) AS BLOB) ASC  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN t0 ON ((((((((((rt60.c2) NOT BETWEEN (rt60.c1) AND (vt0.c1)))OR(((t0.c32) IS TRUE))))OR(NULL)))OR(((rt60.c2)>>(vt0.c0)))))AND(CASE WHEN v0.c0 THEN t0.c87 END)) CROSS JOIN vt0 ON highlight(((t0.c39)<<(rt60.c2)), (((rt60.c1)) NOT BETWEEN ((t0.c39)) AND ((rt60.c1))), CASE t0.c39  WHEN vt0.c0 THEN x'6923' ELSE 0.8315634303944435 END, ((x'0298')=(vt0.c2))) LEFT OUTER JOIN rt60 ON ((vt0.c1 COLLATE BINARY)-(NULL)) WHERE ((((vt0.c2)&(0.10628247091480769)) IN (('500661073' IN ())))) ORDER BY ((((LIKELY(DISTINCT rt60.c1))AND(((t0.c87) IS FALSE))))AND(t0.c87)) DESC, (((vt0.c0 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)&(0.10628247091480769)) IN (('500661073' IN ())))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((((((((rt60.c2) NOT BETWEEN (rt60.c1) AND (vt0.c1)))OR(((t0.c32) IS TRUE))))OR(NULL)))OR(((rt60.c2)>>(vt0.c0)))))AND(CASE WHEN v0.c0 THEN t0.c87 END)) CROSS JOIN vt0 ON highlight(((t0.c39)<<(rt60.c2)), (((rt60.c1)) NOT BETWEEN ((t0.c39)) AND ((rt60.c1))), CASE t0.c39  WHEN vt0.c0 THEN x'6923' ELSE 0.8315634303944435 END, ((x'0298')=(vt0.c2))) LEFT OUTER JOIN rt60 ON ((vt0.c1 COLLATE BINARY)-(NULL)) ORDER BY ((((LIKELY(DISTINCT rt60.c1))AND(((t0.c87) IS FALSE))))AND(t0.c87)) DESC, (((vt0.c0 IN ())) NOT NULL)  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON ((((((((((rt60.c2) NOT BETWEEN (rt60.c1) AND (vt0.c1)))OR(((t0.c32) IS TRUE))))OR(NULL)))OR(((rt60.c2)>>(vt0.c0)))))AND(CASE WHEN v0.c0 THEN t0.c87 END)) CROSS JOIN vt0 ON highlight(((t0.c39)<<(rt60.c2)), (((rt60.c1)) NOT BETWEEN ((t0.c39)) AND ((rt60.c1))), CASE t0.c39  WHEN vt0.c0 THEN x'6923' ELSE 0.8315634303944435 END, ((x'0298')=(vt0.c2))) LEFT OUTER JOIN rt60 ON ((vt0.c1 COLLATE BINARY)-(NULL)) WHERE ((((vt0.c2)&(0.10628247091480769)) IN (('500661073' IN ())))) ORDER BY ((((LIKELY(DISTINCT rt60.c1))AND(((t0.c87) IS FALSE))))AND(t0.c87)) DESC, (((vt0.c0 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)&(0.10628247091480769)) IN (('500661073' IN ())))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((((((((rt60.c2) NOT BETWEEN (rt60.c1) AND (vt0.c1)))OR(((t0.c32) IS TRUE))))OR(NULL)))OR(((rt60.c2)>>(vt0.c0)))))AND(CASE WHEN v0.c0 THEN t0.c87 END)) CROSS JOIN vt0 ON highlight(((t0.c39)<<(rt60.c2)), (((rt60.c1)) NOT BETWEEN ((t0.c39)) AND ((rt60.c1))), CASE t0.c39  WHEN vt0.c0 THEN x'6923' ELSE 0.8315634303944435 END, ((x'0298')=(vt0.c2))) LEFT OUTER JOIN rt60 ON ((vt0.c1 COLLATE BINARY)-(NULL)) ORDER BY ((((LIKELY(DISTINCT rt60.c1))AND(((t0.c87) IS FALSE))))AND(t0.c87)) DESC, (((vt0.c0 IN ())) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0, t0, rt60 WHERE (TRIM(rt1.c0, rt60.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt1.c0, rt60.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1, v0, vt0, t0, rt60);
SELECT COUNT(*) FROM rt1, v0, vt0, t0, rt60 WHERE (TRIM(rt1.c0, rt60.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt1.c0, rt60.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1, v0, vt0, t0, rt60);
SELECT COUNT(*) FROM rt1, v0, vt0, t0, rt60 WHERE (TRIM(rt1.c0, rt60.c0) COLLATE BINARY);
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON CASE ((rt1.c4)||('0.7560078107480784'))  WHEN ((rt1.c0)IS(rt1.c3)) THEN UPPER(DISTINCT rt60.c1) END LEFT OUTER JOIN v0 ON CAST(((((rt60.c1)OR(rt60.c0)))AND(rt1.c1)) AS BLOB) CROSS JOIN rt60 ON CAST(((t0.c32)>(rt1.c4)) AS TEXT) WHERE ((+ (CAST(rt60.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt60.c2 AS TEXT)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CASE ((rt1.c4)||('0.7560078107480784'))  WHEN ((rt1.c0)IS(rt1.c3)) THEN UPPER(DISTINCT rt60.c1) END LEFT OUTER JOIN v0 ON CAST(((((rt60.c1)OR(rt60.c0)))AND(rt1.c1)) AS BLOB) CROSS JOIN rt60 ON CAST(((t0.c32)>(rt1.c4)) AS TEXT));
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON CASE ((rt1.c4)||('0.7560078107480784'))  WHEN ((rt1.c0)IS(rt1.c3)) THEN UPPER(DISTINCT rt60.c1) END LEFT OUTER JOIN v0 ON CAST(((((rt60.c1)OR(rt60.c0)))AND(rt1.c1)) AS BLOB) CROSS JOIN rt60 ON CAST(((t0.c32)>(rt1.c4)) AS TEXT) WHERE ((+ (CAST(rt60.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt60.c2 AS TEXT)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CASE ((rt1.c4)||('0.7560078107480784'))  WHEN ((rt1.c0)IS(rt1.c3)) THEN UPPER(DISTINCT rt60.c1) END LEFT OUTER JOIN v0 ON CAST(((((rt60.c1)OR(rt60.c0)))AND(rt1.c1)) AS BLOB) CROSS JOIN rt60 ON CAST(((t0.c32)>(rt1.c4)) AS TEXT));
SELECT * FROM vt0, v0 WHERE (CASE NULL  WHEN (~ (vt0.c2)) THEN v0.c0 ELSE ((vt0.c2)%(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN (~ (vt0.c2)) THEN v0.c0 ELSE ((vt0.c2)%(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE NULL  WHEN (~ (vt0.c2)) THEN v0.c0 ELSE ((vt0.c2)%(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN (~ (vt0.c2)) THEN v0.c0 ELSE ((vt0.c2)%(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE NULL  WHEN (~ (vt0.c2)) THEN v0.c0 ELSE ((vt0.c2)%(vt0.c0)) END);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c2)OR(vt0.c1)))AND(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(vt0.c1)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c2)OR(vt0.c1)))AND(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(vt0.c1)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c2)OR(vt0.c1)))AND(v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((0.0649829365736948, t0.c87, vt0.c0, x'5c37', rt60.c1))<=((rt1.c0, 0.12154360600848091, '-859843577', rt60.c0, 0.15681184300580364))))IS(((rt1.c0)OR(rt1.c4)))) WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.31928281455855323) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.31928281455855323) AS REAL)) IS TRUE)  as count FROM vt0, t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((0.0649829365736948, t0.c87, vt0.c0, x'5c37', rt60.c1))<=((rt1.c0, 0.12154360600848091, '-859843577', rt60.c0, 0.15681184300580364))))IS(((rt1.c0)OR(rt1.c4)))));
SELECT ALL * FROM vt0, t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((0.0649829365736948, t0.c87, vt0.c0, x'5c37', rt60.c1))<=((rt1.c0, 0.12154360600848091, '-859843577', rt60.c0, 0.15681184300580364))))IS(((rt1.c0)OR(rt1.c4)))) WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.31928281455855323) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.31928281455855323) AS REAL)) IS TRUE)  as count FROM vt0, t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((0.0649829365736948, t0.c87, vt0.c0, x'5c37', rt60.c1))<=((rt1.c0, 0.12154360600848091, '-859843577', rt60.c0, 0.15681184300580364))))IS(((rt1.c0)OR(rt1.c4)))));
SELECT ALL * FROM vt0, t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((0.0649829365736948, t0.c87, vt0.c0, x'5c37', rt60.c1))<=((rt1.c0, 0.12154360600848091, '-859843577', rt60.c0, 0.15681184300580364))))IS(((rt1.c0)OR(rt1.c4)))) WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c2, 0.31928281455855323) AS REAL));
SELECT COUNT(*) FROM vt0, rt60 FULL OUTER JOIN v0 ON '-1526770338' COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt60 FULL OUTER JOIN v0 ON '-1526770338' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt60 FULL OUTER JOIN v0 ON '-1526770338' COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt60 FULL OUTER JOIN v0 ON '-1526770338' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt60 FULL OUTER JOIN v0 ON '-1526770338' COLLATE RTRIM WHERE (x'');
SELECT ALL COUNT(*) FROM t0, v0, rt60, vt0, rt1 WHERE (CASE WHEN ((((t0.c87)OR(rt60.c1)))AND(rt1.c2)) THEN rt1.c0 WHEN ((((((((t0.c39)AND(rt1.c1)))AND(rt60.c0)))AND('1097196435')))OR(rt1.c0)) THEN ((rt1.c4) ISNULL) WHEN ((t0.c49) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN ((t0.c49)>('-92172084')) THEN ((t0.c87) ISNULL) WHEN ((vt0.c2) NOT NULL) THEN (NOT (t0.c32)) ELSE rt60.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c87)OR(rt60.c1)))AND(rt1.c2)) THEN rt1.c0 WHEN ((((((((t0.c39)AND(rt1.c1)))AND(rt60.c0)))AND('1097196435')))OR(rt1.c0)) THEN ((rt1.c4) ISNULL) WHEN ((t0.c49) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN ((t0.c49)>('-92172084')) THEN ((t0.c87) ISNULL) WHEN ((vt0.c2) NOT NULL) THEN (NOT (t0.c32)) ELSE rt60.c0 END) IS TRUE)  as count FROM t0, v0, rt60, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, v0, rt60, vt0, rt1 WHERE (CASE WHEN ((((t0.c87)OR(rt60.c1)))AND(rt1.c2)) THEN rt1.c0 WHEN ((((((((t0.c39)AND(rt1.c1)))AND(rt60.c0)))AND('1097196435')))OR(rt1.c0)) THEN ((rt1.c4) ISNULL) WHEN ((t0.c49) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN ((t0.c49)>('-92172084')) THEN ((t0.c87) ISNULL) WHEN ((vt0.c2) NOT NULL) THEN (NOT (t0.c32)) ELSE rt60.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c87)OR(rt60.c1)))AND(rt1.c2)) THEN rt1.c0 WHEN ((((((((t0.c39)AND(rt1.c1)))AND(rt60.c0)))AND('1097196435')))OR(rt1.c0)) THEN ((rt1.c4) ISNULL) WHEN ((t0.c49) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN ((t0.c49)>('-92172084')) THEN ((t0.c87) ISNULL) WHEN ((vt0.c2) NOT NULL) THEN (NOT (t0.c32)) ELSE rt60.c0 END) IS TRUE)  as count FROM t0, v0, rt60, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, v0, rt60, vt0, rt1 WHERE (CASE WHEN ((((t0.c87)OR(rt60.c1)))AND(rt1.c2)) THEN rt1.c0 WHEN ((((((((t0.c39)AND(rt1.c1)))AND(rt60.c0)))AND('1097196435')))OR(rt1.c0)) THEN ((rt1.c4) ISNULL) WHEN ((t0.c49) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN ((t0.c49)>('-92172084')) THEN ((t0.c87) ISNULL) WHEN ((vt0.c2) NOT NULL) THEN (NOT (t0.c32)) ELSE rt60.c0 END);
SELECT * FROM rt1 WHERE ((+ ((+ (rt1.c3))))) ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('0.8885268612943147'))  WHEN ((rt1.c0) ISNULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 WHEN '-54583107' THEN rt1.c1 ELSE rt1.c1 END END, MIN(IFNULL(rt1.c4, rt1.c4), ((((((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c4)))AND('-173581487')))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('0.8885268612943147'))  WHEN ((rt1.c0) ISNULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 WHEN '-54583107' THEN rt1.c1 ELSE rt1.c1 END END, MIN(IFNULL(rt1.c4, rt1.c4), ((((((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c4)))AND('-173581487')))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c1))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ ((+ (rt1.c3))))) ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('0.8885268612943147'))  WHEN ((rt1.c0) ISNULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 WHEN '-54583107' THEN rt1.c1 ELSE rt1.c1 END END, MIN(IFNULL(rt1.c4, rt1.c4), ((((((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c4)))AND('-173581487')))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('0.8885268612943147'))  WHEN ((rt1.c0) ISNULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 WHEN '-54583107' THEN rt1.c1 ELSE rt1.c1 END END, MIN(IFNULL(rt1.c4, rt1.c4), ((((((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c4)))AND('-173581487')))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c1))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ ((+ (rt1.c3))))) ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('0.8885268612943147'))  WHEN ((rt1.c0) ISNULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 WHEN '-54583107' THEN rt1.c1 ELSE rt1.c1 END END, MIN(IFNULL(rt1.c4, rt1.c4), ((((((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c4)))AND('-173581487')))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt60, rt1 LEFT OUTER JOIN v0 ON (((rt60.c0 IN ())) IS TRUE) WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt60, rt1 LEFT OUTER JOIN v0 ON (((rt60.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt60, rt1 LEFT OUTER JOIN v0 ON (((rt60.c0 IN ())) IS TRUE) WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt60, rt1 LEFT OUTER JOIN v0 ON (((rt60.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt60, rt1 LEFT OUTER JOIN v0 ON (((rt60.c0 IN ())) IS TRUE) WHERE (rt1.c4);
SELECT * FROM vt0, v0, rt1 WHERE (NULLIF(0xffffffffa79bd1f6, (((rt1.c4))<>((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(0Xffffffffa79bd1f6, (((rt1.c4))!=((vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE (NULLIF(0xffffffffa79bd1f6, (((rt1.c4))<>((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(0Xffffffffa79bd1f6, (((rt1.c4))!=((vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT * FROM vt0, v0, rt1 WHERE (NULLIF(0xffffffffa79bd1f6, (((rt1.c4))<>((vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))OR(TYPEOF(vt0.c0))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))OR(TYPEOF(vt0.c0))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))OR(TYPEOF(vt0.c0))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))OR(TYPEOF(vt0.c0))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))OR(TYPEOF(vt0.c0))))AND(vt0.c0 COLLATE BINARY)));
SELECT * FROM rt60, v0, rt1 WHERE ((((((((rt60.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c3)) AND ((rt1.c1, rt1.c2, rt1.c4))))AND((('d') ISNULL))))OR(((v0.c0) NOTNULL)))) ORDER BY rt1.c3 DESC, (((((NOT (rt1.c3)))OR((((0.6198629712149027)) NOT BETWEEN ((rt60.c2)) AND ((rt60.c1))))))OR(rt1.c1 COLLATE RTRIM)), CAST((rt60.c1 IN ()) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt60.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c3)) AND ((rt1.c1, rt1.c2, rt1.c4))))AND((('d') ISNULL))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM rt60, v0, rt1 ORDER BY rt1.c3 DESC, (((((NOT (rt1.c3)))OR((((0.6198629712149027)) NOT BETWEEN ((rt60.c2)) AND ((rt60.c1))))))OR(rt1.c1 COLLATE RTRIM)), CAST((rt60.c1 IN ()) AS REAL) ASC);
SELECT * FROM rt60, v0, rt1 WHERE ((((((((rt60.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c3)) AND ((rt1.c1, rt1.c2, rt1.c4))))AND((('d') ISNULL))))OR(((v0.c0) NOTNULL)))) ORDER BY rt1.c3 DESC, (((((NOT (rt1.c3)))OR((((0.6198629712149027)) NOT BETWEEN ((rt60.c2)) AND ((rt60.c1))))))OR(rt1.c1 COLLATE RTRIM)), CAST((rt60.c1 IN ()) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt60.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c3)) AND ((rt1.c1, rt1.c2, rt1.c4))))AND((('d') ISNULL))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM rt60, v0, rt1 ORDER BY rt1.c3 DESC, (((((NOT (rt1.c3)))OR((((0.6198629712149027)) NOT BETWEEN ((rt60.c2)) AND ((rt60.c1))))))OR(rt1.c1 COLLATE RTRIM)), CAST((rt60.c1 IN ()) AS REAL) ASC);
SELECT * FROM rt60, v0, rt1 WHERE ((((((((rt60.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c3)) AND ((rt1.c1, rt1.c2, rt1.c4))))AND((('d') ISNULL))))OR(((v0.c0) NOTNULL)))) ORDER BY rt1.c3 DESC, (((((NOT (rt1.c3)))OR((((0.6198629712149027)) NOT BETWEEN ((rt60.c2)) AND ((rt60.c1))))))OR(rt1.c1 COLLATE RTRIM)), CAST((rt60.c1 IN ()) AS REAL) ASC;
SELECT * FROM vt0, t0 WHERE (((t0.c32) NOT NULL)) ORDER BY (((vt0.c2 IN (vt0.c1))) NOT BETWEEN ((((t0.c32))>((vt0.c0)))) AND ((NOT (x''))))  NULLS LAST, ABS(DISTINCT 'Axu?\r') DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c32) NOT NULL)) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY (((vt0.c2 IN (vt0.c1))) NOT BETWEEN ((((t0.c32))>((vt0.c0)))) AND ((NOT (x''))))  NULLS LAST, ABS(DISTINCT 'Axu?\r') DESC);
SELECT * FROM vt0, t0 WHERE (((t0.c32) NOT NULL)) ORDER BY (((vt0.c2 IN (vt0.c1))) NOT BETWEEN ((((t0.c32))>((vt0.c0)))) AND ((NOT (x''))))  NULLS LAST, ABS(DISTINCT 'Axu?\r') DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c32) NOT NULL)) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY (((vt0.c2 IN (vt0.c1))) NOT BETWEEN ((((t0.c32))>((vt0.c0)))) AND ((NOT (x''))))  NULLS LAST, ABS(DISTINCT 'Axu?\r') DESC);
SELECT * FROM vt0, t0 WHERE (((t0.c32) NOT NULL)) ORDER BY (((vt0.c2 IN (vt0.c1))) NOT BETWEEN ((((t0.c32))>((vt0.c0)))) AND ((NOT (x''))))  NULLS LAST, ABS(DISTINCT 'Axu?\r') DESC;
SELECT ALL COUNT(*) FROM rt60, t0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c4) IS TRUE)) IS FALSE) WHERE (CASE WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c0) NOTNULL) THEN t0.c32 COLLATE BINARY WHEN (+ (rt1.c2)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c0) NOTNULL) THEN t0.c32 COLLATE BINARY WHEN (+ (rt1.c2)) THEN NULL END) IS TRUE)  as count FROM rt60, t0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c4) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM rt60, t0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c4) IS TRUE)) IS FALSE) WHERE (CASE WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c0) NOTNULL) THEN t0.c32 COLLATE BINARY WHEN (+ (rt1.c2)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c0) NOTNULL) THEN t0.c32 COLLATE BINARY WHEN (+ (rt1.c2)) THEN NULL END) IS TRUE)  as count FROM rt60, t0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c4) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM rt60, t0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c4) IS TRUE)) IS FALSE) WHERE (CASE WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) IS FALSE) WHEN ((rt1.c0) NOTNULL) THEN t0.c32 COLLATE BINARY WHEN (+ (rt1.c2)) THEN NULL END);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(vt0.c1 AS TEXT) COLLATE NOCASE WHERE ((((('W')AND(t0.c87)))LIKE((t0.c32 IN ())))) ORDER BY (NOT (vt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((('W')AND(t0.c87)))LIKE((t0.c32 IN ())))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(vt0.c1 AS TEXT) COLLATE NOCASE ORDER BY (NOT (vt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(vt0.c1 AS TEXT) COLLATE NOCASE WHERE ((((('W')AND(t0.c87)))LIKE((t0.c32 IN ())))) ORDER BY (NOT (vt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((('W')AND(t0.c87)))LIKE((t0.c32 IN ())))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(vt0.c1 AS TEXT) COLLATE NOCASE ORDER BY (NOT (vt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(vt0.c1 AS TEXT) COLLATE NOCASE WHERE ((((('W')AND(t0.c87)))LIKE((t0.c32 IN ())))) ORDER BY (NOT (vt0.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((x'') NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN x'' WHEN MIN(vt0.c1, vt0.c1, vt0.c2, vt0.c1, vt0.c2, rt60.c0) THEN ((rt60.c1)<(rt1.c2)) WHEN HEX(rt1.c4) THEN (rt1.c2 IN (vt0.c2)) ELSE rt60.c2 END FULL OUTER JOIN rt60 ON (((rt60.c1)) BETWEEN ((((rt1.c4) BETWEEN (v0.c0) AND (rt1.c4)))) AND ((rt1.c3))) WHERE (CAST(((rt1.c1)AND(rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)AND(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((x'') NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN x'' WHEN MIN(vt0.c1, vt0.c1, vt0.c2, vt0.c1, vt0.c2, rt60.c0) THEN ((rt60.c1)<(rt1.c2)) WHEN HEX(rt1.c4) THEN (rt1.c2 IN (vt0.c2)) ELSE rt60.c2 END FULL OUTER JOIN rt60 ON (((rt60.c1)) BETWEEN ((((rt1.c4) BETWEEN (v0.c0) AND (rt1.c4)))) AND ((rt1.c3))));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((x'') NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN x'' WHEN MIN(vt0.c1, vt0.c1, vt0.c2, vt0.c1, vt0.c2, rt60.c0) THEN ((rt60.c1)<(rt1.c2)) WHEN HEX(rt1.c4) THEN (rt1.c2 IN (vt0.c2)) ELSE rt60.c2 END FULL OUTER JOIN rt60 ON (((rt60.c1)) BETWEEN ((((rt1.c4) BETWEEN (v0.c0) AND (rt1.c4)))) AND ((rt1.c3))) WHERE (CAST(((rt1.c1)AND(rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)AND(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((x'') NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN x'' WHEN MIN(vt0.c1, vt0.c1, vt0.c2, vt0.c1, vt0.c2, rt60.c0) THEN ((rt60.c1)<(rt1.c2)) WHEN HEX(rt1.c4) THEN (rt1.c2 IN (vt0.c2)) ELSE rt60.c2 END FULL OUTER JOIN rt60 ON (((rt60.c1)) BETWEEN ((((rt1.c4) BETWEEN (v0.c0) AND (rt1.c4)))) AND ((rt1.c3))));
SELECT ALL COUNT(*) FROM v0, rt60, vt0 WHERE (((((v0.c0) NOTNULL))<<(((vt0.c1)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))<<(((vt0.c1)>>(v0.c0))))) IS TRUE)  as count FROM v0, rt60, vt0);
SELECT ALL COUNT(*) FROM v0, rt60, vt0 WHERE (((((v0.c0) NOTNULL))<<(((vt0.c1)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))<<(((vt0.c1)>>(v0.c0))))) IS TRUE)  as count FROM v0, rt60, vt0);
SELECT ALL COUNT(*) FROM v0, rt60, vt0 WHERE (((((v0.c0) NOTNULL))<<(((vt0.c1)>>(v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ('');
SELECT * FROM vt0, t0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ())) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (NULL))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT * FROM vt0, t0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ())) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (NULL))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT * FROM vt0, t0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (NULL)));
SELECT * FROM t0 RIGHT OUTER JOIN rt60 ON (((t0.c32)) NOT BETWEEN (((t0.c32 IN ()))) AND ((CASE WHEN v0.c0 THEN t0.c39 ELSE t0.c49 END))) FULL OUTER JOIN vt0 ON (json_object(rt60.c1, t0.c49) IN ()) FULL OUTER JOIN v0 ON ((((t0.c32) NOT BETWEEN (rt60.c1) AND (t0.c32)))<=(((0.8122343195599572) NOT BETWEEN (t0.c87) AND (vt0.c2)))) RIGHT OUTER JOIN rt1 ON CASE WHEN 0.8550491907178109 THEN (vt0.c2 IN ()) END WHERE (CASE (((rt1.c3)) NOT BETWEEN ((t0.c87)) AND ((vt0.c1)))  WHEN CASE vt0.c2  WHEN '-234071582' THEN rt60.c0 WHEN rt1.c1 THEN rt60.c0 WHEN t0.c39 THEN t0.c32 END THEN (vt0.c2 IN ()) ELSE ((rt1.c3)<>(rt60.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c3)) NOT BETWEEN ((t0.c87)) AND ((vt0.c1)))  WHEN CASE vt0.c2  WHEN '-234071582' THEN rt60.c0 WHEN rt1.c1 THEN rt60.c0 WHEN t0.c39 THEN t0.c32 END THEN (vt0.c2 IN ()) ELSE ((rt1.c3)<>(rt60.c0)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt60 ON (((t0.c32)) NOT BETWEEN (((t0.c32 IN ()))) AND ((CASE WHEN v0.c0 THEN t0.c39 ELSE t0.c49 END))) FULL OUTER JOIN vt0 ON (json_object(rt60.c1, t0.c49) IN ()) FULL OUTER JOIN v0 ON ((((t0.c32) NOT BETWEEN (rt60.c1) AND (t0.c32)))<=(((0.8122343195599572) NOT BETWEEN (t0.c87) AND (vt0.c2)))) RIGHT OUTER JOIN rt1 ON CASE WHEN 0.8550491907178109 THEN (vt0.c2 IN ()) END);
SELECT * FROM t0 RIGHT OUTER JOIN rt60 ON (((t0.c32)) NOT BETWEEN (((t0.c32 IN ()))) AND ((CASE WHEN v0.c0 THEN t0.c39 ELSE t0.c49 END))) FULL OUTER JOIN vt0 ON (json_object(rt60.c1, t0.c49) IN ()) FULL OUTER JOIN v0 ON ((((t0.c32) NOT BETWEEN (rt60.c1) AND (t0.c32)))<=(((0.8122343195599572) NOT BETWEEN (t0.c87) AND (vt0.c2)))) RIGHT OUTER JOIN rt1 ON CASE WHEN 0.8550491907178109 THEN (vt0.c2 IN ()) END WHERE (CASE (((rt1.c3)) NOT BETWEEN ((t0.c87)) AND ((vt0.c1)))  WHEN CASE vt0.c2  WHEN '-234071582' THEN rt60.c0 WHEN rt1.c1 THEN rt60.c0 WHEN t0.c39 THEN t0.c32 END THEN (vt0.c2 IN ()) ELSE ((rt1.c3)<>(rt60.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c3)) NOT BETWEEN ((t0.c87)) AND ((vt0.c1)))  WHEN CASE vt0.c2  WHEN '-234071582' THEN rt60.c0 WHEN rt1.c1 THEN rt60.c0 WHEN t0.c39 THEN t0.c32 END THEN (vt0.c2 IN ()) ELSE ((rt1.c3)<>(rt60.c0)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt60 ON (((t0.c32)) NOT BETWEEN (((t0.c32 IN ()))) AND ((CASE WHEN v0.c0 THEN t0.c39 ELSE t0.c49 END))) FULL OUTER JOIN vt0 ON (json_object(rt60.c1, t0.c49) IN ()) FULL OUTER JOIN v0 ON ((((t0.c32) NOT BETWEEN (rt60.c1) AND (t0.c32)))<=(((0.8122343195599572) NOT BETWEEN (t0.c87) AND (vt0.c2)))) RIGHT OUTER JOIN rt1 ON CASE WHEN 0.8550491907178109 THEN (vt0.c2 IN ()) END);
SELECT ALL * FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(NULL))) BETWEEN (x'8fae2a3175c2') AND (CAST(rt1.c3 AS TEXT))) WHERE (((((((t0.c39)IS(t0.c32)))OR(CAST('鴸RIkG]R3f' AS REAL))))OR(((t0.c39)<=(t0.c87))))) ORDER BY ((json_extract(t0.c49, v0.c0, rt1.c4, rt1.c2))=((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c39)IS(t0.c32)))OR(CAST('鴸RIkG]R3f' AS REAL))))OR(((t0.c39)<=(t0.c87))))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(NULL))) BETWEEN (x'8fae2a3175c2') AND (CAST(rt1.c3 AS TEXT))) ORDER BY ((json_extract(t0.c49, v0.c0, rt1.c4, rt1.c2))=((rt1.c2 IN ()))) ASC);
SELECT ALL * FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(NULL))) BETWEEN (x'8fae2a3175c2') AND (CAST(rt1.c3 AS TEXT))) WHERE (((((((t0.c39)IS(t0.c32)))OR(CAST('鴸RIkG]R3f' AS REAL))))OR(((t0.c39)<=(t0.c87))))) ORDER BY ((json_extract(t0.c49, v0.c0, rt1.c4, rt1.c2))=((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c39)IS(t0.c32)))OR(CAST('鴸RIkG]R3f' AS REAL))))OR(((t0.c39)<=(t0.c87))))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(NULL))) BETWEEN (x'8fae2a3175c2') AND (CAST(rt1.c3 AS TEXT))) ORDER BY ((json_extract(t0.c49, v0.c0, rt1.c4, rt1.c2))=((rt1.c2 IN ()))) ASC);
SELECT ALL * FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(NULL))) BETWEEN (x'8fae2a3175c2') AND (CAST(rt1.c3 AS TEXT))) WHERE (((((((t0.c39)IS(t0.c32)))OR(CAST('鴸RIkG]R3f' AS REAL))))OR(((t0.c39)<=(t0.c87))))) ORDER BY ((json_extract(t0.c49, v0.c0, rt1.c4, rt1.c2))=((rt1.c2 IN ()))) ASC;
SELECT * FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, v0, t0 INNER JOIN rt1 ON UNICODE(((rt60.c1)%(rt1.c3))) FULL OUTER JOIN rt60 ON (((-1.938610424E9))<=((ABS(rt1.c4)))) WHERE ((- ((~ (vt0.c1))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt60.c1) AND (t0.c87)))!=((~ (t0.c32))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, v0, t0 INNER JOIN rt1 ON UNICODE(((rt60.c1)%(rt1.c3))) FULL OUTER JOIN rt60 ON (((-1.938610424E9))<=((ABS(rt1.c4)))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt60.c1) AND (t0.c87)))<>((~ (t0.c32)))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 INNER JOIN rt1 ON UNICODE(((rt60.c1)%(rt1.c3))) FULL OUTER JOIN rt60 ON (((-1.938610424E9))<=((ABS(rt1.c4)))) WHERE ((- ((~ (vt0.c1))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt60.c1) AND (t0.c87)))!=((~ (t0.c32))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, v0, t0 INNER JOIN rt1 ON UNICODE(((rt60.c1)%(rt1.c3))) FULL OUTER JOIN rt60 ON (((-1.938610424E9))<=((ABS(rt1.c4)))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt60.c1) AND (t0.c87)))<>((~ (t0.c32)))));
SELECT ALL COUNT(*) FROM rt60 WHERE ((((rt60.c1)IS NOT(rt60.c2)) IN ((('')>=(x'')), ((rt60.c1)&(rt60.c0))))) ORDER BY ((((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c1)))<<(((rt60.c0)&(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt60.c1)IS NOT(rt60.c2)) IN ((('')>=(x'')), ((rt60.c1)&(rt60.c0))))) IS TRUE)  as count FROM rt60 ORDER BY ((((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c1)))<<(((rt60.c0)&(rt60.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt60 WHERE ((((rt60.c1)IS NOT(rt60.c2)) IN ((('')>=(x'')), ((rt60.c1)&(rt60.c0))))) ORDER BY ((((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c1)))<<(((rt60.c0)&(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt60.c1)IS NOT(rt60.c2)) IN ((('')>=(x'')), ((rt60.c1)&(rt60.c0))))) IS TRUE)  as count FROM rt60 ORDER BY ((((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c1)))<<(((rt60.c0)&(rt60.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt60 WHERE ((((rt60.c1)IS NOT(rt60.c2)) IN ((('')>=(x'')), ((rt60.c1)&(rt60.c0))))) ORDER BY ((((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c1)))<<(((rt60.c0)&(rt60.c0))))  NULLS FIRST;
SELECT * FROM rt1, vt0, v0 WHERE ((NOT (((((vt0.c0)OR(0xffffffffec613c58)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c0)OR(0Xffffffffec613c58)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT * FROM rt1, vt0, v0 WHERE ((NOT (((((vt0.c0)OR(0xffffffffec613c58)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c0)OR(0Xffffffffec613c58)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT * FROM rt1, vt0, v0 WHERE ((NOT (((((vt0.c0)OR(0xffffffffec613c58)))AND(rt1.c3)))));
SELECT ALL COUNT(*) FROM v0, rt60 WHERE ((((CAST(rt60.c2 AS REAL)))>((NULL)))) ORDER BY ((((v0.c0) IS TRUE))+(((rt60.c1)AND(rt60.c2)))) ASC, ((((v0.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)  NULLS FIRST, ((0.15693458153150042) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt60.c2 AS REAL)))>((NULL)))) IS TRUE)  as count FROM v0, rt60 ORDER BY ((((v0.c0) IS TRUE))+(((rt60.c1)AND(rt60.c2)))) ASC, ((((v0.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)  NULLS FIRST, ((0.15693458153150042) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM v0, rt60 WHERE ((((CAST(rt60.c2 AS REAL)))>((NULL)))) ORDER BY ((((v0.c0) IS TRUE))+(((rt60.c1)AND(rt60.c2)))) ASC, ((((v0.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)  NULLS FIRST, ((0.15693458153150042) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt60.c2 AS REAL)))>((NULL)))) IS TRUE)  as count FROM v0, rt60 ORDER BY ((((v0.c0) IS TRUE))+(((rt60.c1)AND(rt60.c2)))) ASC, ((((v0.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)  NULLS FIRST, ((0.15693458153150042) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM v0, rt60 WHERE ((((CAST(rt60.c2 AS REAL)))>((NULL)))) ORDER BY ((((v0.c0) IS TRUE))+(((rt60.c1)AND(rt60.c2)))) ASC, ((((v0.c0) NOT BETWEEN (rt60.c2) AND (rt60.c0))) NOTNULL)  NULLS FIRST, ((0.15693458153150042) IS FALSE) ASC;
SELECT ALL * FROM vt0, v0, rt60, t0, rt1 WHERE ('v6') ORDER BY 0.9900577081634873 ASC;
SELECT SUM(count) FROM (SELECT ALL (('v6') IS TRUE)  as count FROM vt0, v0, rt60, t0, rt1 ORDER BY 0.9900577081634873 ASC);
SELECT ALL * FROM vt0, v0, rt60, t0, rt1 WHERE ('v6') ORDER BY 0.9900577081634873 ASC;
SELECT SUM(count) FROM (SELECT ALL (('v6') IS TRUE)  as count FROM vt0, v0, rt60, t0, rt1 ORDER BY 0.9900577081634873 ASC);
SELECT ALL * FROM vt0, v0, rt60, t0, rt1 WHERE ('v6') ORDER BY 0.9900577081634873 ASC;
SELECT ALL COUNT(*) FROM rt60, v0 WHERE ('1099936895') ORDER BY CASE (+ (rt60.c1))  WHEN ((rt60.c1)AND(rt60.c0)) THEN ((((rt60.c2)OR(rt60.c1)))AND(rt60.c1)) END ASC  NULLS FIRST, (NOT (CAST(rt60.c2 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1099936895') IS TRUE)  as count FROM rt60, v0 ORDER BY CASE (+ (rt60.c1))  WHEN ((rt60.c1)AND(rt60.c0)) THEN ((((rt60.c2)OR(rt60.c1)))AND(rt60.c1)) END ASC  NULLS FIRST, (NOT (CAST(rt60.c2 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt60, v0 WHERE ('1099936895') ORDER BY CASE (+ (rt60.c1))  WHEN ((rt60.c1)AND(rt60.c0)) THEN ((((rt60.c2)OR(rt60.c1)))AND(rt60.c1)) END ASC  NULLS FIRST, (NOT (CAST(rt60.c2 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1099936895') IS TRUE)  as count FROM rt60, v0 ORDER BY CASE (+ (rt60.c1))  WHEN ((rt60.c1)AND(rt60.c0)) THEN ((((rt60.c2)OR(rt60.c1)))AND(rt60.c1)) END ASC  NULLS FIRST, (NOT (CAST(rt60.c2 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt60, v0 WHERE ('1099936895') ORDER BY CASE (+ (rt60.c1))  WHEN ((rt60.c1)AND(rt60.c0)) THEN ((((rt60.c2)OR(rt60.c1)))AND(rt60.c1)) END ASC  NULLS FIRST, (NOT (CAST(rt60.c2 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt60, rt1 WHERE ((((UNLIKELY(rt60.c2), ((vt0.c0) NOTNULL), t0.c87 COLLATE NOCASE))!=((((vt0.c0)*(rt1.c2)), ((vt0.c0)AND(v0.c0)), CAST(t0.c49 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(rt60.c2), ((vt0.c0) NOTNULL), t0.c87 COLLATE NOCASE))!=((((vt0.c0)*(rt1.c2)), ((vt0.c0)AND(v0.c0)), CAST(t0.c49 AS BLOB))))) IS TRUE)  as count FROM v0, vt0, t0, rt60, rt1);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt60, rt1 WHERE ((((UNLIKELY(rt60.c2), ((vt0.c0) NOTNULL), t0.c87 COLLATE NOCASE))!=((((vt0.c0)*(rt1.c2)), ((vt0.c0)AND(v0.c0)), CAST(t0.c49 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(rt60.c2), ((vt0.c0) NOTNULL), t0.c87 COLLATE NOCASE))!=((((vt0.c0)*(rt1.c2)), ((vt0.c0)AND(v0.c0)), CAST(t0.c49 AS BLOB))))) IS TRUE)  as count FROM v0, vt0, t0, rt60, rt1);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt60, rt1 WHERE ((((UNLIKELY(rt60.c2), ((vt0.c0) NOTNULL), t0.c87 COLLATE NOCASE))!=((((vt0.c0)*(rt1.c2)), ((vt0.c0)AND(v0.c0)), CAST(t0.c49 AS BLOB)))));
SELECT ALL * FROM vt0, t0, v0, rt1 WHERE (((t0.c49 COLLATE RTRIM) NOT BETWEEN (NULL) AND (LIKELIHOOD(rt1.c3, 0.6340969069366693))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c49 COLLATE RTRIM) NOT BETWEEN (NULL) AND (LIKELIHOOD(rt1.c3, 0.6340969069366693)))) IS TRUE)  as count FROM vt0, t0, v0, rt1);
SELECT ALL * FROM vt0, t0, v0, rt1 WHERE (((t0.c49 COLLATE RTRIM) NOT BETWEEN (NULL) AND (LIKELIHOOD(rt1.c3, 0.6340969069366693))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c49 COLLATE RTRIM) NOT BETWEEN (NULL) AND (LIKELIHOOD(rt1.c3, 0.6340969069366693)))) IS TRUE)  as count FROM vt0, t0, v0, rt1);
SELECT ALL * FROM vt0, t0, v0, rt1 WHERE (((t0.c49 COLLATE RTRIM) NOT BETWEEN (NULL) AND (LIKELIHOOD(rt1.c3, 0.6340969069366693))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt60 ON (((((((((NOT (rt60.c2)))AND(CAST(rt60.c1 AS NUMERIC))))OR((rt1.c0 IN ()))))OR(((((((((rt1.c2)AND(rt60.c2)))OR(rt60.c2)))AND(rt1.c2)))AND(rt1.c0)))))AND(((rt1.c1)<>(rt60.c1)))) WHERE (((CASE WHEN rt60.c0 THEN rt60.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt60.c0 END)<(CASE WHEN rt1.c4 THEN rt60.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt60.c2 THEN rt1.c0 END))) ORDER BY ((((((rt60.c2)&(rt1.c2)))OR(((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(NULL)))OR(rt1.c0)))))AND((rt60.c2 IN ()))), ((((rt1.c0)AND(rt60.c0)))AND(0.013679315993011754)) COLLATE BINARY  NULLS FIRST, (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 WHEN rt60.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))<>((rt60.c2 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt60.c0 THEN rt60.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt60.c0 END)<(CASE WHEN rt1.c4 THEN rt60.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt60.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt60 ON (((((((((NOT (rt60.c2)))AND(CAST(rt60.c1 AS NUMERIC))))OR((rt1.c0 IN ()))))OR(((((((((rt1.c2)AND(rt60.c2)))OR(rt60.c2)))AND(rt1.c2)))AND(rt1.c0)))))AND(((rt1.c1)!=(rt60.c1)))) ORDER BY ((((((rt60.c2)&(rt1.c2)))OR(((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(NULL)))OR(rt1.c0)))))AND((rt60.c2 IN ()))), ((((rt1.c0)AND(rt60.c0)))AND(0.013679315993011754)) COLLATE BINARY  NULLS FIRST, (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 WHEN rt60.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))<>((rt60.c2 COLLATE RTRIM))) ASC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt60 ON (((((((((NOT (rt60.c2)))AND(CAST(rt60.c1 AS NUMERIC))))OR((rt1.c0 IN ()))))OR(((((((((rt1.c2)AND(rt60.c2)))OR(rt60.c2)))AND(rt1.c2)))AND(rt1.c0)))))AND(((rt1.c1)<>(rt60.c1)))) WHERE (((CASE WHEN rt60.c0 THEN rt60.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt60.c0 END)<(CASE WHEN rt1.c4 THEN rt60.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt60.c2 THEN rt1.c0 END))) ORDER BY ((((((rt60.c2)&(rt1.c2)))OR(((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(NULL)))OR(rt1.c0)))))AND((rt60.c2 IN ()))), ((((rt1.c0)AND(rt60.c0)))AND(0.013679315993011754)) COLLATE BINARY  NULLS FIRST, (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 WHEN rt60.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))<>((rt60.c2 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt60.c0 THEN rt60.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt60.c0 END)<(CASE WHEN rt1.c4 THEN rt60.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt60.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt60 ON (((((((((NOT (rt60.c2)))AND(CAST(rt60.c1 AS NUMERIC))))OR((rt1.c0 IN ()))))OR(((((((((rt1.c2)AND(rt60.c2)))OR(rt60.c2)))AND(rt1.c2)))AND(rt1.c0)))))AND(((rt1.c1)!=(rt60.c1)))) ORDER BY ((((((rt60.c2)&(rt1.c2)))OR(((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(NULL)))OR(rt1.c0)))))AND((rt60.c2 IN ()))), ((((rt1.c0)AND(rt60.c0)))AND(0.013679315993011754)) COLLATE BINARY  NULLS FIRST, (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 WHEN rt60.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))<>((rt60.c2 COLLATE RTRIM))) ASC);
SELECT ALL * FROM v0, rt60, t0 INNER JOIN vt0 ON ((((vt0.c0))>=((rt1.c1))) IN ()) INNER JOIN rt1 ON ((((vt0.c0)OR(vt0.c1)))%(((t0.c32) BETWEEN (rt60.c2) AND (rt60.c1)))) WHERE (NULLIF((- (rt60.c2)), ((rt60.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((- (rt60.c2)), ((rt60.c0) NOTNULL))) IS TRUE)  as count FROM v0, rt60, t0 INNER JOIN vt0 ON ((((vt0.c0))>=((rt1.c1))) IN ()) INNER JOIN rt1 ON ((((vt0.c0)OR(vt0.c1)))%(((t0.c32) BETWEEN (rt60.c2) AND (rt60.c1)))));
SELECT ALL * FROM v0, rt60, t0 INNER JOIN vt0 ON ((((vt0.c0))>=((rt1.c1))) IN ()) INNER JOIN rt1 ON ((((vt0.c0)OR(vt0.c1)))%(((t0.c32) BETWEEN (rt60.c2) AND (rt60.c1)))) WHERE (NULLIF((- (rt60.c2)), ((rt60.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((- (rt60.c2)), ((rt60.c0) NOTNULL))) IS TRUE)  as count FROM v0, rt60, t0 INNER JOIN vt0 ON ((((vt0.c0))>=((rt1.c1))) IN ()) INNER JOIN rt1 ON ((((vt0.c0)OR(vt0.c1)))%(((t0.c32) BETWEEN (rt60.c2) AND (rt60.c1)))));
SELECT ALL * FROM v0, rt60, t0 INNER JOIN vt0 ON ((((vt0.c0))>=((rt1.c1))) IN ()) INNER JOIN rt1 ON ((((vt0.c0)OR(vt0.c1)))%(((t0.c32) BETWEEN (rt60.c2) AND (rt60.c1)))) WHERE (NULLIF((- (rt60.c2)), ((rt60.c0) NOTNULL)));
SELECT ALL * FROM vt0 WHERE ((NOT (HEX(NULL)))) ORDER BY ((NOT (vt0.c0)) IN (((vt0.c1) BETWEEN (x'68a3') AND (vt0.c2)))), HEX(CASE vt0.c2  WHEN 0.6823032337836578 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 6.24464093E8 THEN vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN (((vt0.c1) BETWEEN (x'68a3') AND (vt0.c2)))), HEX(CASE vt0.c2  WHEN 0.6823032337836578 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 6.24464093E8 THEN vt0.c1 END) DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (HEX(NULL)))) ORDER BY ((NOT (vt0.c0)) IN (((vt0.c1) BETWEEN (x'68a3') AND (vt0.c2)))), HEX(CASE vt0.c2  WHEN 0.6823032337836578 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 6.24464093E8 THEN vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN (((vt0.c1) BETWEEN (x'68a3') AND (vt0.c2)))), HEX(CASE vt0.c2  WHEN 0.6823032337836578 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 6.24464093E8 THEN vt0.c1 END) DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (HEX(NULL)))) ORDER BY ((NOT (vt0.c0)) IN (((vt0.c1) BETWEEN (x'68a3') AND (vt0.c2)))), HEX(CASE vt0.c2  WHEN 0.6823032337836578 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 6.24464093E8 THEN vt0.c1 END) DESC;
SELECT * FROM v0, rt1, t0, rt60, vt0 WHERE (MAX(rt1.c1, rt1.c1) COLLATE RTRIM) ORDER BY CASE t0.c32  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(rt1.c1, rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, t0, rt60, vt0 ORDER BY CASE t0.c32  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, rt1, t0, rt60, vt0 WHERE (MAX(rt1.c1, rt1.c1) COLLATE RTRIM) ORDER BY CASE t0.c32  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(rt1.c1, rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, t0, rt60, vt0 ORDER BY CASE t0.c32  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, rt1, t0, rt60, vt0 WHERE (MAX(rt1.c1, rt1.c1) COLLATE RTRIM) ORDER BY CASE t0.c32  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('') ORDER BY -2087950755, (CASE vt0.c2  WHEN vt0.c2 THEN NULL END IN ()), ((x'ad6e') ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, v0 ORDER BY -2087950755, (CASE vt0.c2  WHEN vt0.c2 THEN NULL END IN ()), ((x'ad6e') ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('') ORDER BY -2087950755, (CASE vt0.c2  WHEN vt0.c2 THEN NULL END IN ()), ((x'ad6e') ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, v0 ORDER BY -2087950755, (CASE vt0.c2  WHEN vt0.c2 THEN NULL END IN ()), ((x'ad6e') ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (((rt1.c3 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (0xfffffffffe74b870) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (0xfffffffffe74b870) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (((rt1.c3 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (0xfffffffffe74b870) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (0xfffffffffe74b870) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (((rt1.c3 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (0xfffffffffe74b870) AND (vt0.c1)))));
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))OR((+ (v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) ISNULL))) DESC  NULLS FIRST, ((v0.c0)=(v0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((CHAR(v0.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))OR((+ (v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) ISNULL))) DESC  NULLS FIRST, ((v0.c0)==(v0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((CHAR(v0.c0)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))OR((+ (v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) ISNULL))) DESC  NULLS FIRST, ((v0.c0)=(v0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((CHAR(v0.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))OR((+ (v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) ISNULL))) DESC  NULLS FIRST, ((v0.c0)==(v0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((CHAR(v0.c0)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))OR((+ (v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) ISNULL))) DESC  NULLS FIRST, ((v0.c0)=(v0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((CHAR(v0.c0)) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE ((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c1)), TIME(vt0.c1, vt0.c1, '389104295'), CASE WHEN NULL THEN rt1.c4 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN '_[\nbG働L' END))<((CAST(v0.c0 AS REAL), (vt0.c0 IN ()), ((rt1.c2)!=(rt1.c2)))))) ORDER BY ((vt0.c0) NOT BETWEEN (load_extension(vt0.c0)) AND (rt1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c1)), TIME(vt0.c1, vt0.c1, '389104295'), CASE WHEN NULL THEN rt1.c4 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN '_[\nbG働L' END))<((CAST(v0.c0 AS REAL), (vt0.c0 IN ()), ((rt1.c2)<>(rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN v0 ORDER BY ((vt0.c0) NOT BETWEEN (load_extension(vt0.c0)) AND (rt1.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE ((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c1)), TIME(vt0.c1, vt0.c1, '389104295'), CASE WHEN NULL THEN rt1.c4 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN '_[\nbG働L' END))<((CAST(v0.c0 AS REAL), (vt0.c0 IN ()), ((rt1.c2)!=(rt1.c2)))))) ORDER BY ((vt0.c0) NOT BETWEEN (load_extension(vt0.c0)) AND (rt1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c1)), TIME(vt0.c1, vt0.c1, '389104295'), CASE WHEN NULL THEN rt1.c4 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN '_[\nbG働L' END))<((CAST(v0.c0 AS REAL), (vt0.c0 IN ()), ((rt1.c2)<>(rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN v0 ORDER BY ((vt0.c0) NOT BETWEEN (load_extension(vt0.c0)) AND (rt1.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE ((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c1)), TIME(vt0.c1, vt0.c1, '389104295'), CASE WHEN NULL THEN rt1.c4 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN '_[\nbG働L' END))<((CAST(v0.c0 AS REAL), (vt0.c0 IN ()), ((rt1.c2)!=(rt1.c2)))))) ORDER BY ((vt0.c0) NOT BETWEEN (load_extension(vt0.c0)) AND (rt1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM v0, rt60, rt1 WHERE (rt1.c1) ORDER BY 0xfffffffff1cb35bd;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0, rt60, rt1 ORDER BY 0Xfffffffff1cb35bd);
SELECT ALL * FROM v0, rt60, rt1 WHERE (rt1.c1) ORDER BY 0xfffffffff1cb35bd;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0, rt60, rt1 ORDER BY 0Xfffffffff1cb35bd);
SELECT ALL * FROM v0, rt60, rt1 WHERE (rt1.c1) ORDER BY 0xfffffffff1cb35bd;
SELECT ALL * FROM t0, rt1, v0, rt60 WHERE (((t0.c49)<(rt1.c2)) COLLATE RTRIM) ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c49)<(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1, v0, rt60 ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t0, rt1, v0, rt60 WHERE (((t0.c49)<(rt1.c2)) COLLATE RTRIM) ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c49)<(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1, v0, rt60 ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t0, rt1, v0, rt60 WHERE (((t0.c49)<(rt1.c2)) COLLATE RTRIM) ORDER BY CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM v0 NATURAL JOIN rt60 WHERE (rt60.c0) ORDER BY ((((((v0.c0))>((rt60.c2)))))>=((((rt60.c1) BETWEEN (rt60.c0) AND (rt60.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt60.c0) IS TRUE)  as count FROM v0 NATURAL JOIN rt60 ORDER BY ((((((v0.c0))>((rt60.c2)))))>=((((rt60.c1) BETWEEN (rt60.c0) AND (rt60.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN rt60 WHERE (rt60.c0) ORDER BY ((((((v0.c0))>((rt60.c2)))))>=((((rt60.c1) BETWEEN (rt60.c0) AND (rt60.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt60.c0) IS TRUE)  as count FROM v0 NATURAL JOIN rt60 ORDER BY ((((((v0.c0))>((rt60.c2)))))>=((((rt60.c1) BETWEEN (rt60.c0) AND (rt60.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN rt60 WHERE (rt60.c0) ORDER BY ((((((v0.c0))>((rt60.c2)))))>=((((rt60.c1) BETWEEN (rt60.c0) AND (rt60.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt60 WHERE ((((CASE rt60.c0  WHEN rt60.c1 THEN rt60.c0 END))>((((rt60.c2)IS NOT(rt60.c2)))))) ORDER BY UPPER(DISTINCT rt60.c1) COLLATE NOCASE, rt60.c2;
SELECT SUM(count) FROM (SELECT (((((CASE rt60.c0  WHEN rt60.c1 THEN rt60.c0 END))>((((rt60.c2)IS NOT(rt60.c2)))))) IS TRUE)  as count FROM rt60 ORDER BY UPPER(DISTINCT rt60.c1) COLLATE NOCASE, rt60.c2);
SELECT COUNT(*) FROM rt60 WHERE ((((CASE rt60.c0  WHEN rt60.c1 THEN rt60.c0 END))>((((rt60.c2)IS NOT(rt60.c2)))))) ORDER BY UPPER(DISTINCT rt60.c1) COLLATE NOCASE, rt60.c2;
SELECT SUM(count) FROM (SELECT (((((CASE rt60.c0  WHEN rt60.c1 THEN rt60.c0 END))>((((rt60.c2)IS NOT(rt60.c2)))))) IS TRUE)  as count FROM rt60 ORDER BY UPPER(DISTINCT rt60.c1) COLLATE NOCASE, rt60.c2);
SELECT COUNT(*) FROM rt60 WHERE ((((CASE rt60.c0  WHEN rt60.c1 THEN rt60.c0 END))>((((rt60.c2)IS NOT(rt60.c2)))))) ORDER BY UPPER(DISTINCT rt60.c1) COLLATE NOCASE, rt60.c2;
SELECT COUNT(*) FROM v0, rt1, rt60, vt0 WHERE ('') ORDER BY (((((((((((rt1.c3, vt0.c0, vt0.c1))>((rt60.c2, rt1.c4, 1239630715))))OR(((rt1.c4)-(vt0.c1)))))OR((rt60.c2 IN ()))))OR(vt0.c1)))AND((~ (rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt1, rt60, vt0 ORDER BY (((((((((((rt1.c3, vt0.c0, vt0.c1))>((rt60.c2, rt1.c4, 1239630715))))OR(((rt1.c4)-(vt0.c1)))))OR((rt60.c2 IN ()))))OR(vt0.c1)))AND((~ (rt1.c3)))) ASC);
SELECT COUNT(*) FROM v0, rt1, rt60, vt0 WHERE ('') ORDER BY (((((((((((rt1.c3, vt0.c0, vt0.c1))>((rt60.c2, rt1.c4, 1239630715))))OR(((rt1.c4)-(vt0.c1)))))OR((rt60.c2 IN ()))))OR(vt0.c1)))AND((~ (rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt1, rt60, vt0 ORDER BY (((((((((((rt1.c3, vt0.c0, vt0.c1))>((rt60.c2, rt1.c4, 1239630715))))OR(((rt1.c4)-(vt0.c1)))))OR((rt60.c2 IN ()))))OR(vt0.c1)))AND((~ (rt1.c3)))) ASC);
SELECT COUNT(*) FROM v0, rt1, rt60, vt0 WHERE ('') ORDER BY (((((((((((rt1.c3, vt0.c0, vt0.c1))>((rt60.c2, rt1.c4, 1239630715))))OR(((rt1.c4)-(vt0.c1)))))OR((rt60.c2 IN ()))))OR(vt0.c1)))AND((~ (rt1.c3)))) ASC;
SELECT ALL * FROM v0, rt1, rt60 FULL OUTER JOIN vt0 ON (((rt1.c1, v0.c0, rt60.c2)) NOT BETWEEN (((vt0.c1 IN (rt60.c1)), vt0.c0 COLLATE RTRIM, ((vt0.c1)<<(rt1.c1)))) AND ((((rt1.c4) IS TRUE), (~ (rt60.c0)), CAST(v0.c0 AS REAL)))) WHERE ((((0.0649829365736948 IN ())) BETWEEN (((((v0.c0)OR(rt60.c2)))OR(rt1.c1))) AND (json_type(rt1.c0)))) ORDER BY (((((((rt1.c3)OR(rt60.c1)))AND(rt1.c2))))>=((((rt60.c0)-(rt1.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.0649829365736948 IN ())) BETWEEN (((((v0.c0)OR(rt60.c2)))OR(rt1.c1))) AND (json_type(rt1.c0)))) IS TRUE)  as count FROM v0, rt1, rt60 FULL OUTER JOIN vt0 ON (((rt1.c1, v0.c0, rt60.c2)) NOT BETWEEN (((vt0.c1 IN (rt60.c1)), vt0.c0 COLLATE RTRIM, ((vt0.c1)<<(rt1.c1)))) AND ((((rt1.c4) IS TRUE), (~ (rt60.c0)), CAST(v0.c0 AS REAL)))) ORDER BY (((((((rt1.c3)OR(rt60.c1)))AND(rt1.c2))))>=((((rt60.c0)-(rt1.c3))))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt60 FULL OUTER JOIN vt0 ON (((rt1.c1, v0.c0, rt60.c2)) NOT BETWEEN (((vt0.c1 IN (rt60.c1)), vt0.c0 COLLATE RTRIM, ((vt0.c1)<<(rt1.c1)))) AND ((((rt1.c4) IS TRUE), (~ (rt60.c0)), CAST(v0.c0 AS REAL)))) WHERE ((((0.0649829365736948 IN ())) BETWEEN (((((v0.c0)OR(rt60.c2)))OR(rt1.c1))) AND (json_type(rt1.c0)))) ORDER BY (((((((rt1.c3)OR(rt60.c1)))AND(rt1.c2))))>=((((rt60.c0)-(rt1.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.0649829365736948 IN ())) BETWEEN (((((v0.c0)OR(rt60.c2)))OR(rt1.c1))) AND (json_type(rt1.c0)))) IS TRUE)  as count FROM v0, rt1, rt60 FULL OUTER JOIN vt0 ON (((rt1.c1, v0.c0, rt60.c2)) NOT BETWEEN (((vt0.c1 IN (rt60.c1)), vt0.c0 COLLATE RTRIM, ((vt0.c1)<<(rt1.c1)))) AND ((((rt1.c4) IS TRUE), (~ (rt60.c0)), CAST(v0.c0 AS REAL)))) ORDER BY (((((((rt1.c3)OR(rt60.c1)))AND(rt1.c2))))>=((((rt60.c0)-(rt1.c3))))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt60 FULL OUTER JOIN vt0 ON (((rt1.c1, v0.c0, rt60.c2)) NOT BETWEEN (((vt0.c1 IN (rt60.c1)), vt0.c0 COLLATE RTRIM, ((vt0.c1)<<(rt1.c1)))) AND ((((rt1.c4) IS TRUE), (~ (rt60.c0)), CAST(v0.c0 AS REAL)))) WHERE ((((0.0649829365736948 IN ())) BETWEEN (((((v0.c0)OR(rt60.c2)))OR(rt1.c1))) AND (json_type(rt1.c0)))) ORDER BY (((((((rt1.c3)OR(rt60.c1)))AND(rt1.c2))))>=((((rt60.c0)-(rt1.c3))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt60 INNER JOIN vt0 ON ((vt0.c1)|(CAST(t0.c87 AS NUMERIC))) FULL OUTER JOIN rt1 ON (((0.638062819511784)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM INNER JOIN t0 ON (((+ (0.9520681695734625))) BETWEEN ('28') AND (((t0.c49)AND(rt1.c0)))) WHERE (CASE '-843275278'  WHEN (((rt1.c2, t0.c87, rt1.c1)) BETWEEN ((vt0.c2, rt60.c2, rt1.c3)) AND ((vt0.c2, NULL, t0.c49))) THEN rt60.c0 COLLATE NOCASE ELSE ((rt1.c0) NOTNULL) END) ORDER BY (~ ((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE '-843275278'  WHEN (((rt1.c2, t0.c87, rt1.c1)) BETWEEN ((vt0.c2, rt60.c2, rt1.c3)) AND ((vt0.c2, NULL, t0.c49))) THEN rt60.c0 COLLATE NOCASE ELSE ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM rt60 INNER JOIN vt0 ON ((vt0.c1)|(CAST(t0.c87 AS NUMERIC))) FULL OUTER JOIN rt1 ON (((0.638062819511784)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM INNER JOIN t0 ON (((+ (0.9520681695734625))) BETWEEN ('28') AND (((t0.c49)AND(rt1.c0)))) ORDER BY (~ ((rt1.c2 IN ()))) DESC);
SELECT ALL COUNT(*) FROM rt60 INNER JOIN vt0 ON ((vt0.c1)|(CAST(t0.c87 AS NUMERIC))) FULL OUTER JOIN rt1 ON (((0.638062819511784)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM INNER JOIN t0 ON (((+ (0.9520681695734625))) BETWEEN ('28') AND (((t0.c49)AND(rt1.c0)))) WHERE (CASE '-843275278'  WHEN (((rt1.c2, t0.c87, rt1.c1)) BETWEEN ((vt0.c2, rt60.c2, rt1.c3)) AND ((vt0.c2, NULL, t0.c49))) THEN rt60.c0 COLLATE NOCASE ELSE ((rt1.c0) NOTNULL) END) ORDER BY (~ ((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE '-843275278'  WHEN (((rt1.c2, t0.c87, rt1.c1)) BETWEEN ((vt0.c2, rt60.c2, rt1.c3)) AND ((vt0.c2, NULL, t0.c49))) THEN rt60.c0 COLLATE NOCASE ELSE ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM rt60 INNER JOIN vt0 ON ((vt0.c1)|(CAST(t0.c87 AS NUMERIC))) FULL OUTER JOIN rt1 ON (((0.638062819511784)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM INNER JOIN t0 ON (((+ (0.9520681695734625))) BETWEEN ('28') AND (((t0.c49)AND(rt1.c0)))) ORDER BY (~ ((rt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.40653730550041345))=((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.40653730550041345))==((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.40653730550041345))=((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.40653730550041345))==((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.40653730550041345))=((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))));
SELECT * FROM vt0, rt1, rt60 WHERE ('-1424283083') ORDER BY (((NOT (vt0.c1))) NOTNULL) ASC, (('Qw')%(((rt60.c1)IS NOT(vt0.c0)))) DESC, ((CASE WHEN rt60.c2 THEN vt0.c2 END)|(((rt1.c4) BETWEEN (rt60.c1) AND (rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1424283083') IS TRUE)  as count FROM vt0, rt1, rt60 ORDER BY (((NOT (vt0.c1))) NOTNULL) ASC, (('Qw')%(((rt60.c1)IS NOT(vt0.c0)))) DESC, ((CASE WHEN rt60.c2 THEN vt0.c2 END)|(((rt1.c4) BETWEEN (rt60.c1) AND (rt1.c3))))  NULLS LAST);
SELECT * FROM vt0, rt1, rt60 WHERE ('-1424283083') ORDER BY (((NOT (vt0.c1))) NOTNULL) ASC, (('Qw')%(((rt60.c1)IS NOT(vt0.c0)))) DESC, ((CASE WHEN rt60.c2 THEN vt0.c2 END)|(((rt1.c4) BETWEEN (rt60.c1) AND (rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1424283083') IS TRUE)  as count FROM vt0, rt1, rt60 ORDER BY (((NOT (vt0.c1))) NOTNULL) ASC, (('Qw')%(((rt60.c1)IS NOT(vt0.c0)))) DESC, ((CASE WHEN rt60.c2 THEN vt0.c2 END)|(((rt1.c4) BETWEEN (rt60.c1) AND (rt1.c3))))  NULLS LAST);
SELECT * FROM vt0, rt1, rt60 WHERE ('-1424283083') ORDER BY (((NOT (vt0.c1))) NOTNULL) ASC, (('Qw')%(((rt60.c1)IS NOT(vt0.c0)))) DESC, ((CASE WHEN rt60.c2 THEN vt0.c2 END)|(((rt1.c4) BETWEEN (rt60.c1) AND (rt1.c3))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CASE ''  WHEN t0.c87 THEN rt1.c3 END COLLATE RTRIM) ORDER BY json_quote(NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN t0.c87 THEN rt1.c3 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY json_quote(NULL) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CASE ''  WHEN t0.c87 THEN rt1.c3 END COLLATE RTRIM) ORDER BY json_quote(NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN t0.c87 THEN rt1.c3 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY json_quote(NULL) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CASE ''  WHEN t0.c87 THEN rt1.c3 END COLLATE RTRIM) ORDER BY json_quote(NULL) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c87)IS(t0.c49))))>=(((t0.c32 IN ()))))) ORDER BY (- ('-1417879769')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c87)IS(t0.c49))))>=(((t0.c32 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY (- ('-1417879769')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c87)IS(t0.c49))))>=(((t0.c32 IN ()))))) ORDER BY (- ('-1417879769')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c87)IS(t0.c49))))>=(((t0.c32 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY (- ('-1417879769')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c87)IS(t0.c49))))>=(((t0.c32 IN ()))))) ORDER BY (- ('-1417879769')) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)OR(0.6262309794965154)))AND(vt0.c2))) IS TRUE) RIGHT OUTER JOIN rt1 ON CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c87))) THEN (rt1.c4 IN ()) END WHERE (CASE WHEN rt1.c0 THEN rt1.c0 WHEN t0.c32 THEN vt0.c2 WHEN vt0.c0 THEN '-504487612' END COLLATE NOCASE) ORDER BY TYPEOF(CAST(t0.c39 AS INTEGER)) ASC, ((0.8235914797315288)AND(1.171732272E9));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN t0.c32 THEN vt0.c2 WHEN vt0.c0 THEN '-504487612' END COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)OR(0.6262309794965154)))AND(vt0.c2))) IS TRUE) RIGHT OUTER JOIN rt1 ON CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c87))) THEN (rt1.c4 IN ()) END ORDER BY TYPEOF(CAST(t0.c39 AS INTEGER)) ASC, ((0.8235914797315288)AND(1.171732272E9)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)OR(0.6262309794965154)))AND(vt0.c2))) IS TRUE) RIGHT OUTER JOIN rt1 ON CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c87))) THEN (rt1.c4 IN ()) END WHERE (CASE WHEN rt1.c0 THEN rt1.c0 WHEN t0.c32 THEN vt0.c2 WHEN vt0.c0 THEN '-504487612' END COLLATE NOCASE) ORDER BY TYPEOF(CAST(t0.c39 AS INTEGER)) ASC, ((0.8235914797315288)AND(1.171732272E9));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN t0.c32 THEN vt0.c2 WHEN vt0.c0 THEN '-504487612' END COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt1.c1)OR(0.6262309794965154)))AND(vt0.c2))) IS TRUE) RIGHT OUTER JOIN rt1 ON CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c87))) THEN (rt1.c4 IN ()) END ORDER BY TYPEOF(CAST(t0.c39 AS INTEGER)) ASC, ((0.8235914797315288)AND(1.171732272E9)));
SELECT * FROM rt60 RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN t0.c32 THEN rt1.c3 END)AND(((rt1.c3)>(rt1.c3)))))AND(NULL)))OR((- (rt60.c2)))))AND(CAST(vt0.c0 AS BLOB))) LEFT OUTER JOIN rt1 ON ((CAST(vt0.c2 AS REAL))<=(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON rt1.c4 INNER JOIN t0 ON CAST(CAST(vt0.c0 AS TEXT) AS BLOB) WHERE ((((('e*iK1')OR(CASE WHEN vt0.c2 THEN rt60.c0 END)))OR((((t0.c87))<=((t0.c87))))));
SELECT SUM(count) FROM (SELECT (((((('e*iK1')OR(CASE WHEN vt0.c2 THEN rt60.c0 END)))OR((((t0.c87))<=((t0.c87)))))) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN t0.c32 THEN rt1.c3 END)AND(((rt1.c3)>(rt1.c3)))))AND(NULL)))OR((- (rt60.c2)))))AND(CAST(vt0.c0 AS BLOB))) LEFT OUTER JOIN rt1 ON ((CAST(vt0.c2 AS REAL))<=(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON rt1.c4 INNER JOIN t0 ON CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT * FROM rt60 RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN t0.c32 THEN rt1.c3 END)AND(((rt1.c3)>(rt1.c3)))))AND(NULL)))OR((- (rt60.c2)))))AND(CAST(vt0.c0 AS BLOB))) LEFT OUTER JOIN rt1 ON ((CAST(vt0.c2 AS REAL))<=(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON rt1.c4 INNER JOIN t0 ON CAST(CAST(vt0.c0 AS TEXT) AS BLOB) WHERE ((((('e*iK1')OR(CASE WHEN vt0.c2 THEN rt60.c0 END)))OR((((t0.c87))<=((t0.c87))))));
SELECT SUM(count) FROM (SELECT (((((('e*iK1')OR(CASE WHEN vt0.c2 THEN rt60.c0 END)))OR((((t0.c87))<=((t0.c87)))))) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN t0.c32 THEN rt1.c3 END)AND(((rt1.c3)>(rt1.c3)))))AND(NULL)))OR((- (rt60.c2)))))AND(CAST(vt0.c0 AS BLOB))) LEFT OUTER JOIN rt1 ON ((CAST(vt0.c2 AS REAL))<=(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON rt1.c4 INNER JOIN t0 ON CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt60 ON ((((((rt1.c0, rt60.c2, rt1.c0))<=((t0.c49, rt1.c4, t0.c32)))))!=((json_patch(rt1.c1, rt1.c3)))) LEFT OUTER JOIN rt1 ON ABS(DISTINCT t0.c49 COLLATE RTRIM) WHERE ((((((rt1.c1)>(0.4768342752710363))))==((-1.73581487E8))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)>(0.4768342752710363))))=((-1.73581487E8)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt60 ON ((((((rt1.c0, rt60.c2, rt1.c0))<=((t0.c49, rt1.c4, t0.c32)))))!=((json_patch(rt1.c1, rt1.c3)))) LEFT OUTER JOIN rt1 ON ABS(DISTINCT t0.c49 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt60 ON ((((((rt1.c0, rt60.c2, rt1.c0))<=((t0.c49, rt1.c4, t0.c32)))))!=((json_patch(rt1.c1, rt1.c3)))) LEFT OUTER JOIN rt1 ON ABS(DISTINCT t0.c49 COLLATE RTRIM) WHERE ((((((rt1.c1)>(0.4768342752710363))))==((-1.73581487E8))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)>(0.4768342752710363))))=((-1.73581487E8)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt60 ON ((((((rt1.c0, rt60.c2, rt1.c0))<=((t0.c49, rt1.c4, t0.c32)))))!=((json_patch(rt1.c1, rt1.c3)))) LEFT OUTER JOIN rt1 ON ABS(DISTINCT t0.c49 COLLATE RTRIM));
SELECT ALL * FROM rt60 WHERE (((rt60.c1)+(rt60.c1)) COLLATE BINARY) ORDER BY x'38e4';
SELECT SUM(count) FROM (SELECT ((((rt60.c1)+(rt60.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt60 ORDER BY x'38e4');
SELECT ALL * FROM rt60 WHERE (((rt60.c1)+(rt60.c1)) COLLATE BINARY) ORDER BY x'38e4';
SELECT SUM(count) FROM (SELECT ((((rt60.c1)+(rt60.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt60 ORDER BY x'38e4');
SELECT ALL * FROM rt60 WHERE (((rt60.c1)+(rt60.c1)) COLLATE BINARY) ORDER BY x'38e4';
SELECT * FROM v0, vt0 WHERE (0X76bad244 COLLATE NOCASE) ORDER BY (+ (((v0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X76bad244 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (((v0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (0X76bad244 COLLATE NOCASE) ORDER BY (+ (((v0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X76bad244 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (((v0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (0X76bad244 COLLATE NOCASE) ORDER BY (+ (((v0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, rt60, vt0, v0 WHERE (((CASE rt60.c1  WHEN rt1.c2 THEN x'31f1' END)IS(rt60.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt60.c1  WHEN rt1.c2 THEN x'31f1' END)IS(rt60.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1, rt60, vt0, v0);
SELECT ALL COUNT(*) FROM t0, rt1, rt60, vt0, v0 WHERE (((CASE rt60.c1  WHEN rt1.c2 THEN x'31f1' END)IS(rt60.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt60.c1  WHEN rt1.c2 THEN x'31f1' END)IS(rt60.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1, rt60, vt0, v0);
SELECT ALL COUNT(*) FROM t0, rt1, rt60, vt0, v0 WHERE (((CASE rt60.c1  WHEN rt1.c2 THEN x'31f1' END)IS(rt60.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((vt0.c0 IN ())) ORDER BY ABS(((t0.c87)+('J䕋Q(d[')));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ABS(((t0.c87)+('J䕋Q(d['))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((vt0.c0 IN ())) ORDER BY ABS(((t0.c87)+('J䕋Q(d[')));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ABS(((t0.c87)+('J䕋Q(d['))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((vt0.c0 IN ())) ORDER BY ABS(((t0.c87)+('J䕋Q(d[')));
SELECT ALL * FROM vt0, t0, rt60, v0, rt1 WHERE (CASE rt1.c1 COLLATE BINARY  WHEN NULL THEN (((rt1.c4, t0.c39, t0.c39)) BETWEEN ((')爩[<\n', 0Xffffffff8fb1cdea, vt0.c2)) AND ((rt1.c4, rt1.c2, rt60.c2))) WHEN rt1.c3 COLLATE RTRIM THEN CAST(vt0.c1 AS REAL) WHEN ((rt1.c4) NOT NULL) THEN (((vt0.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1 COLLATE BINARY  WHEN NULL THEN (((rt1.c4, t0.c39, t0.c39)) BETWEEN ((')爩[<\n', 0xffffffff8fb1cdea, vt0.c2)) AND ((rt1.c4, rt1.c2, rt60.c2))) WHEN rt1.c3 COLLATE RTRIM THEN CAST(vt0.c1 AS REAL) WHEN ((rt1.c4) NOT NULL) THEN (((vt0.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1))) END) IS TRUE)  as count FROM vt0, t0, rt60, v0, rt1);
SELECT ALL * FROM vt0, t0, rt60, v0, rt1 WHERE (CASE rt1.c1 COLLATE BINARY  WHEN NULL THEN (((rt1.c4, t0.c39, t0.c39)) BETWEEN ((')爩[<\n', 0Xffffffff8fb1cdea, vt0.c2)) AND ((rt1.c4, rt1.c2, rt60.c2))) WHEN rt1.c3 COLLATE RTRIM THEN CAST(vt0.c1 AS REAL) WHEN ((rt1.c4) NOT NULL) THEN (((vt0.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1 COLLATE BINARY  WHEN NULL THEN (((rt1.c4, t0.c39, t0.c39)) BETWEEN ((')爩[<\n', 0xffffffff8fb1cdea, vt0.c2)) AND ((rt1.c4, rt1.c2, rt60.c2))) WHEN rt1.c3 COLLATE RTRIM THEN CAST(vt0.c1 AS REAL) WHEN ((rt1.c4) NOT NULL) THEN (((vt0.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1))) END) IS TRUE)  as count FROM vt0, t0, rt60, v0, rt1);
SELECT ALL * FROM vt0, t0, rt60, v0, rt1 WHERE (CASE rt1.c1 COLLATE BINARY  WHEN NULL THEN (((rt1.c4, t0.c39, t0.c39)) BETWEEN ((')爩[<\n', 0Xffffffff8fb1cdea, vt0.c2)) AND ((rt1.c4, rt1.c2, rt60.c2))) WHEN rt1.c3 COLLATE RTRIM THEN CAST(vt0.c1 AS REAL) WHEN ((rt1.c4) NOT NULL) THEN (((vt0.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1))) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c87 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c87 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c87 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c87 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c87 COLLATE RTRIM IN ()));
SELECT * FROM rt1 WHERE (((((CAST(rt1.c1 AS TEXT))OR(((rt1.c0)-(rt1.c2)))))OR((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c1 AS TEXT))OR(((rt1.c0)-(rt1.c2)))))OR((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((CAST(rt1.c1 AS TEXT))OR(((rt1.c0)-(rt1.c2)))))OR((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c1 AS TEXT))OR(((rt1.c0)-(rt1.c2)))))OR((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((CAST(rt1.c1 AS TEXT))OR(((rt1.c0)-(rt1.c2)))))OR((rt1.c3 IN ()))));
SELECT * FROM t0, rt1, v0, rt60, vt0 WHERE (0.3987583456921798);
SELECT SUM(count) FROM (SELECT ALL ((0.3987583456921798) IS TRUE)  as count FROM t0, rt1, v0, rt60, vt0);
SELECT * FROM t0, rt1, v0, rt60, vt0 WHERE (0.3987583456921798);
SELECT SUM(count) FROM (SELECT ALL ((0.3987583456921798) IS TRUE)  as count FROM t0, rt1, v0, rt60, vt0);
SELECT * FROM t0, rt1, v0, rt60, vt0 WHERE (0.3987583456921798);
SELECT COUNT(*) FROM t0, rt60, rt1, v0 WHERE (t0.c32) ORDER BY HEX((t0.c39 IN (rt60.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM t0, rt60, rt1, v0 ORDER BY HEX((t0.c39 IN (rt60.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt60, rt1, v0 WHERE (t0.c32) ORDER BY HEX((t0.c39 IN (rt60.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM t0, rt60, rt1, v0 ORDER BY HEX((t0.c39 IN (rt60.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt60, rt1, v0 WHERE (t0.c32) ORDER BY HEX((t0.c39 IN (rt60.c1))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt1, t0, v0 WHERE ((((~ (vt0.c0)))*((((t0.c87, rt1.c0, t0.c87))<>((t0.c49, t0.c39, rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))*((((t0.c87, rt1.c0, t0.c87))<>((t0.c49, t0.c39, rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1, t0, v0);
SELECT ALL * FROM vt0, rt1, t0, v0 WHERE ((((~ (vt0.c0)))*((((t0.c87, rt1.c0, t0.c87))<>((t0.c49, t0.c39, rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))*((((t0.c87, rt1.c0, t0.c87))<>((t0.c49, t0.c39, rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1, t0, v0);
SELECT ALL * FROM vt0, rt1, t0, v0 WHERE ((((~ (vt0.c0)))*((((t0.c87, rt1.c0, t0.c87))<>((t0.c49, t0.c39, rt1.c4))))));
SELECT * FROM vt0, t0, v0, rt60 WHERE ('LiwN');
SELECT SUM(count) FROM (SELECT (('LiwN') IS TRUE)  as count FROM vt0, t0, v0, rt60);
SELECT * FROM vt0, t0, v0, rt60 WHERE ('LiwN');
SELECT SUM(count) FROM (SELECT (('LiwN') IS TRUE)  as count FROM vt0, t0, v0, rt60);
SELECT * FROM vt0, t0, v0, rt60 WHERE ('LiwN');
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt60 ON ((((((rt1.c0)AND(vt0.c1)))AND(rt60.c1))) NOTNULL) CROSS JOIN rt1 ON (-1.7976931348623157E308 IN ()) COLLATE BINARY WHERE (((((rt1.c1)OR(UNLIKELY(rt1.c3))))OR((((vt0.c2, vt0.c0, rt1.c2))<((vt0.c0, vt0.c1, rt1.c0)))))) ORDER BY ((json_valid(rt1.c0)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(UNLIKELY(rt1.c3))))OR((((vt0.c2, vt0.c0, rt1.c2))<((vt0.c0, vt0.c1, rt1.c0)))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt60 ON ((((((rt1.c0)AND(vt0.c1)))AND(rt60.c1))) NOTNULL) CROSS JOIN rt1 ON (-1.7976931348623157E308 IN ()) COLLATE BINARY ORDER BY ((json_valid(rt1.c0)) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt60 ON ((((((rt1.c0)AND(vt0.c1)))AND(rt60.c1))) NOTNULL) CROSS JOIN rt1 ON (-1.7976931348623157E308 IN ()) COLLATE BINARY WHERE (((((rt1.c1)OR(UNLIKELY(rt1.c3))))OR((((vt0.c2, vt0.c0, rt1.c2))<((vt0.c0, vt0.c1, rt1.c0)))))) ORDER BY ((json_valid(rt1.c0)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(UNLIKELY(rt1.c3))))OR((((vt0.c2, vt0.c0, rt1.c2))<((vt0.c0, vt0.c1, rt1.c0)))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt60 ON ((((((rt1.c0)AND(vt0.c1)))AND(rt60.c1))) NOTNULL) CROSS JOIN rt1 ON (-1.7976931348623157E308 IN ()) COLLATE BINARY ORDER BY ((json_valid(rt1.c0)) IS FALSE) DESC);
SELECT ALL * FROM v0, vt0, rt60 WHERE (((((((((((vt0.c0)OR(rt60.c0)))OR(x'')))OR(rt60.c1)))OR(rt60.c1)))>(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt60.c0)))OR(x'')))OR(rt60.c1)))OR(rt60.c1)))>(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, rt60);
SELECT ALL * FROM v0, vt0, rt60 WHERE (((((((((((vt0.c0)OR(rt60.c0)))OR(x'')))OR(rt60.c1)))OR(rt60.c1)))>(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt60.c0)))OR(x'')))OR(rt60.c1)))OR(rt60.c1)))>(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, rt60);
SELECT ALL * FROM v0, vt0, rt60 WHERE (((((((((((vt0.c0)OR(rt60.c0)))OR(x'')))OR(rt60.c1)))OR(rt60.c1)))>(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM rt60, vt0, t0, v0 WHERE (((vt0.c2) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((vt0.c2) NOT BETWEEN ('9艹r}') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((vt0.c2) NOT BETWEEN ('9艹r}') AND (vt0.c1))))) IS TRUE)  as count FROM rt60, vt0, t0, v0);
SELECT ALL COUNT(*) FROM rt60, vt0, t0, v0 WHERE (((vt0.c2) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((vt0.c2) NOT BETWEEN ('9艹r}') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((vt0.c2) NOT BETWEEN ('9艹r}') AND (vt0.c1))))) IS TRUE)  as count FROM rt60, vt0, t0, v0);
SELECT ALL COUNT(*) FROM rt60, vt0, t0, v0 WHERE (((vt0.c2) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((vt0.c2) NOT BETWEEN ('9艹r}') AND (vt0.c1)))));
SELECT * FROM v0 CROSS JOIN t0 ON CAST(v0.c0 COLLATE BINARY AS REAL) WHERE (CAST(((t0.c87)GLOB(t0.c39)) AS INTEGER)) ORDER BY v0.c0 DESC  NULLS FIRST, (((+ (v0.c0)))OR(CAST(x'' AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c87)GLOB(t0.c39)) AS INTEGER)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(v0.c0 COLLATE BINARY AS REAL) ORDER BY v0.c0 DESC  NULLS FIRST, (((+ (v0.c0)))OR(CAST(x'' AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM v0 CROSS JOIN t0 ON CAST(v0.c0 COLLATE BINARY AS REAL) WHERE (CAST(((t0.c87)GLOB(t0.c39)) AS INTEGER)) ORDER BY v0.c0 DESC  NULLS FIRST, (((+ (v0.c0)))OR(CAST(x'' AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c87)GLOB(t0.c39)) AS INTEGER)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(v0.c0 COLLATE BINARY AS REAL) ORDER BY v0.c0 DESC  NULLS FIRST, (((+ (v0.c0)))OR(CAST(x'' AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM v0 CROSS JOIN t0 ON CAST(v0.c0 COLLATE BINARY AS REAL) WHERE (CAST(((t0.c87)GLOB(t0.c39)) AS INTEGER)) ORDER BY v0.c0 DESC  NULLS FIRST, (((+ (v0.c0)))OR(CAST(x'' AS INTEGER))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt60 ON x'23ca' INNER JOIN v0 ON CASE WHEN ((rt1.c4) BETWEEN (t0.c49) AND (rt60.c1)) THEN ((rt60.c2)IS NOT(t0.c49)) END FULL OUTER JOIN vt0 ON (((((vt0.c1)AND(t0.c39)))AND(vt0.c1)) IN (((vt0.c1) IS FALSE))) LEFT OUTER JOIN rt1 ON ((rt60.c1 COLLATE BINARY)<=(((((t0.c87)OR(t0.c87)))OR(rt60.c0)))) WHERE (((0.9283426822843307) NOT NULL)) ORDER BY ((((rt1.c2)IS NOT(vt0.c1)))>>(SQLITE_COMPILEOPTION_GET(rt1.c2)))  NULLS LAST, (+ ((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((0.9283426822843307) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt60 ON x'23ca' INNER JOIN v0 ON CASE WHEN ((rt1.c4) BETWEEN (t0.c49) AND (rt60.c1)) THEN ((rt60.c2)IS NOT(t0.c49)) END FULL OUTER JOIN vt0 ON (((((vt0.c1)AND(t0.c39)))AND(vt0.c1)) IN (((vt0.c1) IS FALSE))) LEFT OUTER JOIN rt1 ON ((rt60.c1 COLLATE BINARY)<=(((((t0.c87)OR(t0.c87)))OR(rt60.c0)))) ORDER BY ((((rt1.c2)IS NOT(vt0.c1)))>>(SQLITE_COMPILEOPTION_GET(rt1.c2)))  NULLS LAST, (+ ((rt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt60 ON x'23ca' INNER JOIN v0 ON CASE WHEN ((rt1.c4) BETWEEN (t0.c49) AND (rt60.c1)) THEN ((rt60.c2)IS NOT(t0.c49)) END FULL OUTER JOIN vt0 ON (((((vt0.c1)AND(t0.c39)))AND(vt0.c1)) IN (((vt0.c1) IS FALSE))) LEFT OUTER JOIN rt1 ON ((rt60.c1 COLLATE BINARY)<=(((((t0.c87)OR(t0.c87)))OR(rt60.c0)))) WHERE (((0.9283426822843307) NOT NULL)) ORDER BY ((((rt1.c2)IS NOT(vt0.c1)))>>(SQLITE_COMPILEOPTION_GET(rt1.c2)))  NULLS LAST, (+ ((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((0.9283426822843307) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt60 ON x'23ca' INNER JOIN v0 ON CASE WHEN ((rt1.c4) BETWEEN (t0.c49) AND (rt60.c1)) THEN ((rt60.c2)IS NOT(t0.c49)) END FULL OUTER JOIN vt0 ON (((((vt0.c1)AND(t0.c39)))AND(vt0.c1)) IN (((vt0.c1) IS FALSE))) LEFT OUTER JOIN rt1 ON ((rt60.c1 COLLATE BINARY)<=(((((t0.c87)OR(t0.c87)))OR(rt60.c0)))) ORDER BY ((((rt1.c2)IS NOT(vt0.c1)))>>(SQLITE_COMPILEOPTION_GET(rt1.c2)))  NULLS LAST, (+ ((rt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt60, v0, rt1, vt0, t0 WHERE (1608256741) ORDER BY (((v0.c0, t0.c49, t0.c32)) BETWEEN ((((rt60.c0) IS FALSE), ((v0.c0)>=(t0.c39)), ((((NULL)OR(t0.c39)))AND(rt1.c3)))) AND ((NULL, CASE WHEN rt60.c1 THEN t0.c39 END, ((vt0.c2) ISNULL)))), CAST(0.008817449374451058 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((1608256741) IS TRUE)  as count FROM rt60, v0, rt1, vt0, t0 ORDER BY (((v0.c0, t0.c49, t0.c32)) BETWEEN ((((rt60.c0) IS FALSE), ((v0.c0)>=(t0.c39)), ((((NULL)OR(t0.c39)))AND(rt1.c3)))) AND ((NULL, CASE WHEN rt60.c1 THEN t0.c39 END, ((vt0.c2) ISNULL)))), CAST(0.008817449374451058 COLLATE RTRIM AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt60, v0, rt1, vt0, t0 WHERE (1608256741) ORDER BY (((v0.c0, t0.c49, t0.c32)) BETWEEN ((((rt60.c0) IS FALSE), ((v0.c0)>=(t0.c39)), ((((NULL)OR(t0.c39)))AND(rt1.c3)))) AND ((NULL, CASE WHEN rt60.c1 THEN t0.c39 END, ((vt0.c2) ISNULL)))), CAST(0.008817449374451058 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((1608256741) IS TRUE)  as count FROM rt60, v0, rt1, vt0, t0 ORDER BY (((v0.c0, t0.c49, t0.c32)) BETWEEN ((((rt60.c0) IS FALSE), ((v0.c0)>=(t0.c39)), ((((NULL)OR(t0.c39)))AND(rt1.c3)))) AND ((NULL, CASE WHEN rt60.c1 THEN t0.c39 END, ((vt0.c2) ISNULL)))), CAST(0.008817449374451058 COLLATE RTRIM AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt60, v0, rt1, vt0, t0 WHERE (1608256741) ORDER BY (((v0.c0, t0.c49, t0.c32)) BETWEEN ((((rt60.c0) IS FALSE), ((v0.c0)>=(t0.c39)), ((((NULL)OR(t0.c39)))AND(rt1.c3)))) AND ((NULL, CASE WHEN rt60.c1 THEN t0.c39 END, ((vt0.c2) ISNULL)))), CAST(0.008817449374451058 COLLATE RTRIM AS BLOB) DESC;
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))<=(((t0.c87)&(t0.c49))))) ORDER BY (NOT (((t0.c87)+(t0.c49)))) ASC  NULLS FIRST, ((vt0.c1)+(t0.c49)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))<=(((t0.c87)&(t0.c49))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (NOT (((t0.c87)+(t0.c49)))) ASC  NULLS FIRST, ((vt0.c1)+(t0.c49)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))<=(((t0.c87)&(t0.c49))))) ORDER BY (NOT (((t0.c87)+(t0.c49)))) ASC  NULLS FIRST, ((vt0.c1)+(t0.c49)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))<=(((t0.c87)&(t0.c49))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (NOT (((t0.c87)+(t0.c49)))) ASC  NULLS FIRST, ((vt0.c1)+(t0.c49)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))<=(((t0.c87)&(t0.c49))))) ORDER BY (NOT (((t0.c87)+(t0.c49)))) ASC  NULLS FIRST, ((vt0.c1)+(t0.c49)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN rt60 ON (~ (rt60.c1)) COLLATE NOCASE INNER JOIN t0 ON 's*0*i>M_' WHERE ((x'' IN ((~ (t0.c49)))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((~ (t0.c49))))) IS TRUE)  as count FROM v0 INNER JOIN rt60 ON (~ (rt60.c1)) COLLATE NOCASE INNER JOIN t0 ON 's*0*i>M_');
SELECT ALL * FROM v0 INNER JOIN rt60 ON (~ (rt60.c1)) COLLATE NOCASE INNER JOIN t0 ON 's*0*i>M_' WHERE ((x'' IN ((~ (t0.c49)))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((~ (t0.c49))))) IS TRUE)  as count FROM v0 INNER JOIN rt60 ON (~ (rt60.c1)) COLLATE NOCASE INNER JOIN t0 ON 's*0*i>M_');
SELECT ALL * FROM v0 INNER JOIN rt60 ON (~ (rt60.c1)) COLLATE NOCASE INNER JOIN t0 ON 's*0*i>M_' WHERE ((x'' IN ((~ (t0.c49)))));
SELECT * FROM t0 WHERE (-238126343) ORDER BY LIKELIHOOD(CAST(t0.c39 AS NUMERIC), 0.379324946716314);
SELECT SUM(count) FROM (SELECT ((-238126343) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(CAST(t0.c39 AS NUMERIC), 0.379324946716314));
SELECT * FROM t0 WHERE (-238126343) ORDER BY LIKELIHOOD(CAST(t0.c39 AS NUMERIC), 0.379324946716314);
SELECT SUM(count) FROM (SELECT ((-238126343) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(CAST(t0.c39 AS NUMERIC), 0.379324946716314));
SELECT * FROM t0 WHERE (-238126343) ORDER BY LIKELIHOOD(CAST(t0.c39 AS NUMERIC), 0.379324946716314);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)GLOB(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)GLOB(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt60, vt0, t0, v0, rt1 WHERE (((CASE '1088229328'  WHEN rt60.c0 THEN -1.068060464E9 WHEN rt60.c1 THEN t0.c39 WHEN t0.c49 THEN rt60.c1 ELSE rt1.c4 END) IS FALSE)) ORDER BY MIN((t0.c49 IN ()), ((t0.c49) BETWEEN (rt1.c0) AND (0Xffffffff895a1379)), rt1.c4 COLLATE BINARY, UNICODE(rt60.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '1088229328'  WHEN rt60.c0 THEN -1.068060464E9 WHEN rt60.c1 THEN t0.c39 WHEN t0.c49 THEN rt60.c1 ELSE rt1.c4 END) IS FALSE)) IS TRUE)  as count FROM rt60, vt0, t0, v0, rt1 ORDER BY MIN((t0.c49 IN ()), ((t0.c49) BETWEEN (rt1.c0) AND (0xffffffff895a1379)), rt1.c4 COLLATE BINARY, UNICODE(rt60.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM rt60, vt0, t0, v0, rt1 WHERE (((CASE '1088229328'  WHEN rt60.c0 THEN -1.068060464E9 WHEN rt60.c1 THEN t0.c39 WHEN t0.c49 THEN rt60.c1 ELSE rt1.c4 END) IS FALSE)) ORDER BY MIN((t0.c49 IN ()), ((t0.c49) BETWEEN (rt1.c0) AND (0Xffffffff895a1379)), rt1.c4 COLLATE BINARY, UNICODE(rt60.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '1088229328'  WHEN rt60.c0 THEN -1.068060464E9 WHEN rt60.c1 THEN t0.c39 WHEN t0.c49 THEN rt60.c1 ELSE rt1.c4 END) IS FALSE)) IS TRUE)  as count FROM rt60, vt0, t0, v0, rt1 ORDER BY MIN((t0.c49 IN ()), ((t0.c49) BETWEEN (rt1.c0) AND (0xffffffff895a1379)), rt1.c4 COLLATE BINARY, UNICODE(rt60.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM rt60, vt0, t0, v0, rt1 WHERE (((CASE '1088229328'  WHEN rt60.c0 THEN -1.068060464E9 WHEN rt60.c1 THEN t0.c39 WHEN t0.c49 THEN rt60.c1 ELSE rt1.c4 END) IS FALSE)) ORDER BY MIN((t0.c49 IN ()), ((t0.c49) BETWEEN (rt1.c0) AND (0Xffffffff895a1379)), rt1.c4 COLLATE BINARY, UNICODE(rt60.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c3))<=((vt0.c2))) IN ()) LEFT OUTER JOIN vt0 ON ((t0.c49)&(rt1.c1)) WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((0x58b009bc)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((0x58b009bc)))) IS TRUE)) IS TRUE)  as count FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c3))<=((vt0.c2))) IN ()) LEFT OUTER JOIN vt0 ON ((t0.c49)&(rt1.c1)));
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c3))<=((vt0.c2))) IN ()) LEFT OUTER JOIN vt0 ON ((t0.c49)&(rt1.c1)) WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((0x58b009bc)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((0x58b009bc)))) IS TRUE)) IS TRUE)  as count FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c3))<=((vt0.c2))) IN ()) LEFT OUTER JOIN vt0 ON ((t0.c49)&(rt1.c1)));
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN v0 ON ((((rt1.c3))<=((vt0.c2))) IN ()) LEFT OUTER JOIN vt0 ON ((t0.c49)&(rt1.c1)) WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((0x58b009bc)))) IS TRUE));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN x'' COLLATE BINARY END RIGHT OUTER JOIN vt0 ON (+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) RIGHT OUTER JOIN rt60 ON ((CAST(v0.c0 AS BLOB)) IS FALSE) WHERE (CASE WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) ORDER BY ((((((t0.c49)OR(vt0.c0)))AND(vt0.c2)))<(((t0.c49)-(t0.c87)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN x'' COLLATE BINARY END RIGHT OUTER JOIN vt0 ON (+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) RIGHT OUTER JOIN rt60 ON ((CAST(v0.c0 AS BLOB)) IS FALSE) ORDER BY ((((((t0.c49)OR(vt0.c0)))AND(vt0.c2)))<(((t0.c49)-(t0.c87)))) ASC  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN x'' COLLATE BINARY END RIGHT OUTER JOIN vt0 ON (+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) RIGHT OUTER JOIN rt60 ON ((CAST(v0.c0 AS BLOB)) IS FALSE) WHERE (CASE WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) ORDER BY ((((((t0.c49)OR(vt0.c0)))AND(vt0.c2)))<(((t0.c49)-(t0.c87)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN x'' COLLATE BINARY END RIGHT OUTER JOIN vt0 ON (+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) RIGHT OUTER JOIN rt60 ON ((CAST(v0.c0 AS BLOB)) IS FALSE) ORDER BY ((((((t0.c49)OR(vt0.c0)))AND(vt0.c2)))<(((t0.c49)-(t0.c87)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, t0, v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, t0, v0);
SELECT ALL * FROM rt1, vt0, t0, v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, t0, v0);
SELECT ALL * FROM rt1, vt0, t0, v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM rt60, rt1, v0, t0, vt0 WHERE ((((t0.c39)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c2 AS TEXT))))) ORDER BY (NOT (x'')), (((((vt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((NULL)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c39)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c2 AS TEXT))))) IS TRUE)  as count FROM rt60, rt1, v0, t0, vt0 ORDER BY (NOT (x'')), (((((vt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((NULL)))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt60, rt1, v0, t0, vt0 WHERE ((((t0.c39)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c2 AS TEXT))))) ORDER BY (NOT (x'')), (((((vt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((NULL)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c39)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c2 AS TEXT))))) IS TRUE)  as count FROM rt60, rt1, v0, t0, vt0 ORDER BY (NOT (x'')), (((((vt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((NULL)))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt60, rt1, v0, t0, vt0 WHERE ((((t0.c39)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c2 AS TEXT))))) ORDER BY (NOT (x'')), (((((vt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((NULL)))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt60 ON ((((rt60.c0)*(rt60.c0))) ISNULL) FULL OUTER JOIN v0 ON ((((((((((rt60.c2) BETWEEN (0.28471531567874475) AND (vt0.c0)))AND(((((rt60.c1)OR(vt0.c2)))AND(rt60.c2)))))OR(((rt1.c1)!=(rt1.c4)))))OR(((((rt1.c0)OR(rt1.c3)))AND(rt1.c4)))))AND(STRFTIME(v0.c0, rt1.c3, rt60.c0))) WHERE ((CASE WHEN rt60.c1 THEN rt60.c1 WHEN 33864665 THEN rt60.c0 WHEN rt1.c4 THEN v0.c0 END IN (((rt1.c4)LIKE(x'')))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt60.c1 THEN rt60.c1 WHEN 33864665 THEN rt60.c0 WHEN rt1.c4 THEN v0.c0 END IN (((rt1.c4)LIKE(x''))))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt60 ON ((((rt60.c0)*(rt60.c0))) ISNULL) FULL OUTER JOIN v0 ON ((((((((((rt60.c2) BETWEEN (0.28471531567874475) AND (vt0.c0)))AND(((((rt60.c1)OR(vt0.c2)))AND(rt60.c2)))))OR(((rt1.c1)!=(rt1.c4)))))OR(((((rt1.c0)OR(rt1.c3)))AND(rt1.c4)))))AND(STRFTIME(v0.c0, rt1.c3, rt60.c0))));
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt60 ON ((((rt60.c0)*(rt60.c0))) ISNULL) FULL OUTER JOIN v0 ON ((((((((((rt60.c2) BETWEEN (0.28471531567874475) AND (vt0.c0)))AND(((((rt60.c1)OR(vt0.c2)))AND(rt60.c2)))))OR(((rt1.c1)!=(rt1.c4)))))OR(((((rt1.c0)OR(rt1.c3)))AND(rt1.c4)))))AND(STRFTIME(v0.c0, rt1.c3, rt60.c0))) WHERE ((CASE WHEN rt60.c1 THEN rt60.c1 WHEN 33864665 THEN rt60.c0 WHEN rt1.c4 THEN v0.c0 END IN (((rt1.c4)LIKE(x'')))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt60.c1 THEN rt60.c1 WHEN 33864665 THEN rt60.c0 WHEN rt1.c4 THEN v0.c0 END IN (((rt1.c4)LIKE(x''))))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt60 ON ((((rt60.c0)*(rt60.c0))) ISNULL) FULL OUTER JOIN v0 ON ((((((((((rt60.c2) BETWEEN (0.28471531567874475) AND (vt0.c0)))AND(((((rt60.c1)OR(vt0.c2)))AND(rt60.c2)))))OR(((rt1.c1)!=(rt1.c4)))))OR(((((rt1.c0)OR(rt1.c3)))AND(rt1.c4)))))AND(STRFTIME(v0.c0, rt1.c3, rt60.c0))));
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt60 ON ((((rt60.c0)*(rt60.c0))) ISNULL) FULL OUTER JOIN v0 ON ((((((((((rt60.c2) BETWEEN (0.28471531567874475) AND (vt0.c0)))AND(((((rt60.c1)OR(vt0.c2)))AND(rt60.c2)))))OR(((rt1.c1)!=(rt1.c4)))))OR(((((rt1.c0)OR(rt1.c3)))AND(rt1.c4)))))AND(STRFTIME(v0.c0, rt1.c3, rt60.c0))) WHERE ((CASE WHEN rt60.c1 THEN rt60.c1 WHEN 33864665 THEN rt60.c0 WHEN rt1.c4 THEN v0.c0 END IN (((rt1.c4)LIKE(x'')))));
SELECT ALL * FROM v0, t0 LEFT OUTER JOIN rt60 ON (((t0.c32, t0.c87, rt60.c1)) NOT BETWEEN ((((t0.c39) NOT NULL), ((v0.c0)==(t0.c87)), t0.c39)) AND ((((rt60.c0)<(rt60.c2)), rt60.c1, ((0X446da03f)>(0.7888248521255199))))) WHERE ((((((((((((t0.c32)) BETWEEN ((0.3096709648072844)) AND ((t0.c32))))OR(((v0.c0)LIKE(rt60.c0)))))AND('709779480' COLLATE BINARY)))OR(((t0.c39)=(t0.c32)))))OR(NULL))) ORDER BY ((0.694691842123186 COLLATE BINARY)GLOB((((rt60.c0))>=((t0.c32))))), CASE t0.c39 COLLATE RTRIM  WHEN t0.c87 THEN (rt60.c0 IN ()) ELSE (((rt60.c1, v0.c0, rt60.c1)) NOT BETWEEN ((t0.c49, x'', rt60.c0)) AND ((x'1668', rt60.c1, rt60.c2))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c32)) BETWEEN ((0.3096709648072844)) AND ((t0.c32))))OR(((v0.c0)LIKE(rt60.c0)))))AND('709779480' COLLATE BINARY)))OR(((t0.c39)=(t0.c32)))))OR(NULL))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN rt60 ON (((t0.c32, t0.c87, rt60.c1)) NOT BETWEEN ((((t0.c39) NOT NULL), ((v0.c0)=(t0.c87)), t0.c39)) AND ((((rt60.c0)<(rt60.c2)), rt60.c1, ((0x446da03f)>(0.7888248521255199))))) ORDER BY ((0.694691842123186 COLLATE BINARY)GLOB((((rt60.c0))>=((t0.c32))))), CASE t0.c39 COLLATE RTRIM  WHEN t0.c87 THEN (rt60.c0 IN ()) ELSE (((rt60.c1, v0.c0, rt60.c1)) NOT BETWEEN ((t0.c49, x'', rt60.c0)) AND ((x'1668', rt60.c1, rt60.c2))) END ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 LEFT OUTER JOIN rt60 ON (((t0.c32, t0.c87, rt60.c1)) NOT BETWEEN ((((t0.c39) NOT NULL), ((v0.c0)==(t0.c87)), t0.c39)) AND ((((rt60.c0)<(rt60.c2)), rt60.c1, ((0X446da03f)>(0.7888248521255199))))) WHERE ((((((((((((t0.c32)) BETWEEN ((0.3096709648072844)) AND ((t0.c32))))OR(((v0.c0)LIKE(rt60.c0)))))AND('709779480' COLLATE BINARY)))OR(((t0.c39)=(t0.c32)))))OR(NULL))) ORDER BY ((0.694691842123186 COLLATE BINARY)GLOB((((rt60.c0))>=((t0.c32))))), CASE t0.c39 COLLATE RTRIM  WHEN t0.c87 THEN (rt60.c0 IN ()) ELSE (((rt60.c1, v0.c0, rt60.c1)) NOT BETWEEN ((t0.c49, x'', rt60.c0)) AND ((x'1668', rt60.c1, rt60.c2))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c32)) BETWEEN ((0.3096709648072844)) AND ((t0.c32))))OR(((v0.c0)LIKE(rt60.c0)))))AND('709779480' COLLATE BINARY)))OR(((t0.c39)=(t0.c32)))))OR(NULL))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN rt60 ON (((t0.c32, t0.c87, rt60.c1)) NOT BETWEEN ((((t0.c39) NOT NULL), ((v0.c0)=(t0.c87)), t0.c39)) AND ((((rt60.c0)<(rt60.c2)), rt60.c1, ((0x446da03f)>(0.7888248521255199))))) ORDER BY ((0.694691842123186 COLLATE BINARY)GLOB((((rt60.c0))>=((t0.c32))))), CASE t0.c39 COLLATE RTRIM  WHEN t0.c87 THEN (rt60.c0 IN ()) ELSE (((rt60.c1, v0.c0, rt60.c1)) NOT BETWEEN ((t0.c49, x'', rt60.c0)) AND ((x'1668', rt60.c1, rt60.c2))) END ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 LEFT OUTER JOIN rt60 ON (((t0.c32, t0.c87, rt60.c1)) NOT BETWEEN ((((t0.c39) NOT NULL), ((v0.c0)==(t0.c87)), t0.c39)) AND ((((rt60.c0)<(rt60.c2)), rt60.c1, ((0X446da03f)>(0.7888248521255199))))) WHERE ((((((((((((t0.c32)) BETWEEN ((0.3096709648072844)) AND ((t0.c32))))OR(((v0.c0)LIKE(rt60.c0)))))AND('709779480' COLLATE BINARY)))OR(((t0.c39)=(t0.c32)))))OR(NULL))) ORDER BY ((0.694691842123186 COLLATE BINARY)GLOB((((rt60.c0))>=((t0.c32))))), CASE t0.c39 COLLATE RTRIM  WHEN t0.c87 THEN (rt60.c0 IN ()) ELSE (((rt60.c1, v0.c0, rt60.c1)) NOT BETWEEN ((t0.c49, x'', rt60.c0)) AND ((x'1668', rt60.c1, rt60.c2))) END ASC  NULLS FIRST;
SELECT * FROM rt60, vt0 WHERE ('QfJMpRG#') ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(rt60.c0))) NOT BETWEEN ((- (vt0.c1))) AND (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('QfJMpRG#') IS TRUE)  as count FROM rt60, vt0 ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(rt60.c0))) NOT BETWEEN ((- (vt0.c1))) AND (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))))  NULLS FIRST);
SELECT * FROM rt60, vt0 WHERE ('QfJMpRG#') ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(rt60.c0))) NOT BETWEEN ((- (vt0.c1))) AND (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('QfJMpRG#') IS TRUE)  as count FROM rt60, vt0 ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(rt60.c0))) NOT BETWEEN ((- (vt0.c1))) AND (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))))  NULLS FIRST);
SELECT * FROM rt60, vt0 WHERE ('QfJMpRG#') ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(rt60.c0))) NOT BETWEEN ((- (vt0.c1))) AND (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY (NOT (t0.c32 COLLATE NOCASE)) DESC, t0.c39  NULLS FIRST, vt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (t0.c32 COLLATE NOCASE)) DESC, t0.c39  NULLS FIRST, vt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY (NOT (t0.c32 COLLATE NOCASE)) DESC, t0.c39  NULLS FIRST, vt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (t0.c32 COLLATE NOCASE)) DESC, t0.c39  NULLS FIRST, vt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY (NOT (t0.c32 COLLATE NOCASE)) DESC, t0.c39  NULLS FIRST, vt0.c2 DESC  NULLS FIRST;
SELECT * FROM rt60 WHERE (0.438901611616504);
SELECT SUM(count) FROM (SELECT ((0.438901611616504) IS TRUE)  as count FROM rt60);
SELECT * FROM rt60 WHERE (0.438901611616504);
SELECT SUM(count) FROM (SELECT ((0.438901611616504) IS TRUE)  as count FROM rt60);
SELECT * FROM rt60 WHERE (0.438901611616504);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(t0.c87 AS BLOB) AS INTEGER) LEFT OUTER JOIN rt60 ON CASE ((t0.c39) IS FALSE)  WHEN CASE rt60.c0  WHEN rt60.c0 THEN t0.c87 END THEN t0.c87 COLLATE RTRIM END WHERE ((((t0.c39, t0.c87, rt60.c1)) BETWEEN ((t0.c39, (t0.c87 IN (t0.c87, t0.c39)), ((((((((NULL)AND(t0.c87)))OR(rt60.c1)))OR(rt60.c0)))OR('317936615')))) AND ((0X697f71be, NULL, (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c39, t0.c87, rt60.c1)) BETWEEN ((t0.c39, (t0.c87 IN (t0.c87, t0.c39)), ((((((((NULL)AND(t0.c87)))OR(rt60.c1)))OR(rt60.c0)))OR('317936615')))) AND ((0X697f71be, NULL, (v0.c0 IN ()))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(t0.c87 AS BLOB) AS INTEGER) LEFT OUTER JOIN rt60 ON CASE ((t0.c39) IS FALSE)  WHEN CASE rt60.c0  WHEN rt60.c0 THEN t0.c87 END THEN t0.c87 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(t0.c87 AS BLOB) AS INTEGER) LEFT OUTER JOIN rt60 ON CASE ((t0.c39) IS FALSE)  WHEN CASE rt60.c0  WHEN rt60.c0 THEN t0.c87 END THEN t0.c87 COLLATE RTRIM END WHERE ((((t0.c39, t0.c87, rt60.c1)) BETWEEN ((t0.c39, (t0.c87 IN (t0.c87, t0.c39)), ((((((((NULL)AND(t0.c87)))OR(rt60.c1)))OR(rt60.c0)))OR('317936615')))) AND ((0X697f71be, NULL, (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c39, t0.c87, rt60.c1)) BETWEEN ((t0.c39, (t0.c87 IN (t0.c87, t0.c39)), ((((((((NULL)AND(t0.c87)))OR(rt60.c1)))OR(rt60.c0)))OR('317936615')))) AND ((0X697f71be, NULL, (v0.c0 IN ()))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(t0.c87 AS BLOB) AS INTEGER) LEFT OUTER JOIN rt60 ON CASE ((t0.c39) IS FALSE)  WHEN CASE rt60.c0  WHEN rt60.c0 THEN t0.c87 END THEN t0.c87 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(t0.c87 AS BLOB) AS INTEGER) LEFT OUTER JOIN rt60 ON CASE ((t0.c39) IS FALSE)  WHEN CASE rt60.c0  WHEN rt60.c0 THEN t0.c87 END THEN t0.c87 COLLATE RTRIM END WHERE ((((t0.c39, t0.c87, rt60.c1)) BETWEEN ((t0.c39, (t0.c87 IN (t0.c87, t0.c39)), ((((((((NULL)AND(t0.c87)))OR(rt60.c1)))OR(rt60.c0)))OR('317936615')))) AND ((0X697f71be, NULL, (v0.c0 IN ())))));
SELECT * FROM t0, rt1, vt0, v0 WHERE (vt0.c1) ORDER BY CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((t0.c49)GLOB(rt1.c2)) WHEN CAST(t0.c49 AS INTEGER) THEN ((t0.c49) IS TRUE) WHEN CAST(rt1.c0 AS BLOB) THEN ((((rt1.c0)AND(vt0.c0)))AND(rt1.c3)) WHEN TRIM(DISTINCT rt1.c3, t0.c49) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN (NOT ('-1054492683')) END DESC, vt0.c1 DESC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (x'') AND (t0.c32)))OR(CASE WHEN t0.c39 THEN vt0.c2 ELSE x'' END)))AND((('-459259784') BETWEEN (t0.c39) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, rt1, vt0, v0 ORDER BY CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((t0.c49)GLOB(rt1.c2)) WHEN CAST(t0.c49 AS INTEGER) THEN ((t0.c49) IS TRUE) WHEN CAST(rt1.c0 AS BLOB) THEN ((((rt1.c0)AND(vt0.c0)))AND(rt1.c3)) WHEN TRIM(DISTINCT rt1.c3, t0.c49) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN (NOT ('-1054492683')) END DESC, vt0.c1 DESC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (x'') AND (t0.c32)))OR(CASE WHEN t0.c39 THEN vt0.c2 ELSE x'' END)))AND((('-459259784') BETWEEN (t0.c39) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, rt1, vt0, v0 WHERE (vt0.c1) ORDER BY CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((t0.c49)GLOB(rt1.c2)) WHEN CAST(t0.c49 AS INTEGER) THEN ((t0.c49) IS TRUE) WHEN CAST(rt1.c0 AS BLOB) THEN ((((rt1.c0)AND(vt0.c0)))AND(rt1.c3)) WHEN TRIM(DISTINCT rt1.c3, t0.c49) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN (NOT ('-1054492683')) END DESC, vt0.c1 DESC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (x'') AND (t0.c32)))OR(CASE WHEN t0.c39 THEN vt0.c2 ELSE x'' END)))AND((('-459259784') BETWEEN (t0.c39) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, rt1, vt0, v0 ORDER BY CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((t0.c49)GLOB(rt1.c2)) WHEN CAST(t0.c49 AS INTEGER) THEN ((t0.c49) IS TRUE) WHEN CAST(rt1.c0 AS BLOB) THEN ((((rt1.c0)AND(vt0.c0)))AND(rt1.c3)) WHEN TRIM(DISTINCT rt1.c3, t0.c49) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN (NOT ('-1054492683')) END DESC, vt0.c1 DESC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (x'') AND (t0.c32)))OR(CASE WHEN t0.c39 THEN vt0.c2 ELSE x'' END)))AND((('-459259784') BETWEEN (t0.c39) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, rt1, vt0, v0 WHERE (vt0.c1) ORDER BY CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((t0.c49)GLOB(rt1.c2)) WHEN CAST(t0.c49 AS INTEGER) THEN ((t0.c49) IS TRUE) WHEN CAST(rt1.c0 AS BLOB) THEN ((((rt1.c0)AND(vt0.c0)))AND(rt1.c3)) WHEN TRIM(DISTINCT rt1.c3, t0.c49) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN (NOT ('-1054492683')) END DESC, vt0.c1 DESC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (x'') AND (t0.c32)))OR(CASE WHEN t0.c39 THEN vt0.c2 ELSE x'' END)))AND((('-459259784') BETWEEN (t0.c39) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, rt60 LEFT OUTER JOIN t0 ON CASE (((rt60.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1)))  WHEN CAST(rt60.c0 AS REAL) THEN '7f' WHEN t0.c39 THEN ((vt0.c2)<=(v0.c0)) WHEN (NOT (vt0.c1)) THEN CAST(rt60.c1 AS REAL) WHEN (((vt0.c2, v0.c0, vt0.c2, t0.c32, rt60.c0, rt1.c4, rt1.c2)) BETWEEN ((rt60.c2, t0.c49, vt0.c0, t0.c49, vt0.c1, t0.c32, rt1.c2)) AND ((t0.c87, rt60.c2, vt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c3))) THEN ((((((((t0.c39)OR(rt60.c2)))AND(rt60.c0)))OR(rt60.c0)))OR(vt0.c2)) WHEN ((v0.c0) IS TRUE) THEN SQLITE_VERSION() ELSE t0.c32 END LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c87 THEN x'' WHEN rt1.c1 THEN rt1.c0 WHEN t0.c39 THEN vt0.c2 ELSE 0.8477450592475597 END) BETWEEN (CASE WHEN t0.c32 THEN vt0.c0 END) AND (rt1.c2 COLLATE RTRIM)) WHERE ('1223151367');
SELECT SUM(count) FROM (SELECT ALL (('1223151367') IS TRUE)  as count FROM v0, rt1, rt60 LEFT OUTER JOIN t0 ON CASE (((rt60.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1)))  WHEN CAST(rt60.c0 AS REAL) THEN '7f' WHEN t0.c39 THEN ((vt0.c2)<=(v0.c0)) WHEN (NOT (vt0.c1)) THEN CAST(rt60.c1 AS REAL) WHEN (((vt0.c2, v0.c0, vt0.c2, t0.c32, rt60.c0, rt1.c4, rt1.c2)) BETWEEN ((rt60.c2, t0.c49, vt0.c0, t0.c49, vt0.c1, t0.c32, rt1.c2)) AND ((t0.c87, rt60.c2, vt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c3))) THEN ((((((((t0.c39)OR(rt60.c2)))AND(rt60.c0)))OR(rt60.c0)))OR(vt0.c2)) WHEN ((v0.c0) IS TRUE) THEN SQLITE_VERSION() ELSE t0.c32 END LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c87 THEN x'' WHEN rt1.c1 THEN rt1.c0 WHEN t0.c39 THEN vt0.c2 ELSE 0.8477450592475597 END) BETWEEN (CASE WHEN t0.c32 THEN vt0.c0 END) AND (rt1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, rt1, rt60 LEFT OUTER JOIN t0 ON CASE (((rt60.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1)))  WHEN CAST(rt60.c0 AS REAL) THEN '7f' WHEN t0.c39 THEN ((vt0.c2)<=(v0.c0)) WHEN (NOT (vt0.c1)) THEN CAST(rt60.c1 AS REAL) WHEN (((vt0.c2, v0.c0, vt0.c2, t0.c32, rt60.c0, rt1.c4, rt1.c2)) BETWEEN ((rt60.c2, t0.c49, vt0.c0, t0.c49, vt0.c1, t0.c32, rt1.c2)) AND ((t0.c87, rt60.c2, vt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c3))) THEN ((((((((t0.c39)OR(rt60.c2)))AND(rt60.c0)))OR(rt60.c0)))OR(vt0.c2)) WHEN ((v0.c0) IS TRUE) THEN SQLITE_VERSION() ELSE t0.c32 END LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c87 THEN x'' WHEN rt1.c1 THEN rt1.c0 WHEN t0.c39 THEN vt0.c2 ELSE 0.8477450592475597 END) BETWEEN (CASE WHEN t0.c32 THEN vt0.c0 END) AND (rt1.c2 COLLATE RTRIM)) WHERE ('1223151367');
SELECT SUM(count) FROM (SELECT ALL (('1223151367') IS TRUE)  as count FROM v0, rt1, rt60 LEFT OUTER JOIN t0 ON CASE (((rt60.c1)) BETWEEN ((t0.c49)) AND ((rt1.c1)))  WHEN CAST(rt60.c0 AS REAL) THEN '7f' WHEN t0.c39 THEN ((vt0.c2)<=(v0.c0)) WHEN (NOT (vt0.c1)) THEN CAST(rt60.c1 AS REAL) WHEN (((vt0.c2, v0.c0, vt0.c2, t0.c32, rt60.c0, rt1.c4, rt1.c2)) BETWEEN ((rt60.c2, t0.c49, vt0.c0, t0.c49, vt0.c1, t0.c32, rt1.c2)) AND ((t0.c87, rt60.c2, vt0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c3))) THEN ((((((((t0.c39)OR(rt60.c2)))AND(rt60.c0)))OR(rt60.c0)))OR(vt0.c2)) WHEN ((v0.c0) IS TRUE) THEN SQLITE_VERSION() ELSE t0.c32 END LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c87 THEN x'' WHEN rt1.c1 THEN rt1.c0 WHEN t0.c39 THEN vt0.c2 ELSE 0.8477450592475597 END) BETWEEN (CASE WHEN t0.c32 THEN vt0.c0 END) AND (rt1.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt60 WHERE (((CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c1 THEN rt60.c2 WHEN rt60.c2 THEN '1239630715' WHEN rt60.c0 THEN rt60.c2 WHEN rt60.c1 THEN rt60.c2 END) NOTNULL)) ORDER BY (((((1.081507424E9))>=((rt60.c1))))IS(((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c1 THEN rt60.c2 WHEN rt60.c2 THEN '1239630715' WHEN rt60.c0 THEN rt60.c2 WHEN rt60.c1 THEN rt60.c2 END) NOTNULL)) IS TRUE)  as count FROM rt60 ORDER BY (((((1.081507424E9))>=((rt60.c1))))IS(((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt60 WHERE (((CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c1 THEN rt60.c2 WHEN rt60.c2 THEN '1239630715' WHEN rt60.c0 THEN rt60.c2 WHEN rt60.c1 THEN rt60.c2 END) NOTNULL)) ORDER BY (((((1.081507424E9))>=((rt60.c1))))IS(((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c1 THEN rt60.c2 WHEN rt60.c2 THEN '1239630715' WHEN rt60.c0 THEN rt60.c2 WHEN rt60.c1 THEN rt60.c2 END) NOTNULL)) IS TRUE)  as count FROM rt60 ORDER BY (((((1.081507424E9))>=((rt60.c1))))IS(((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt60 WHERE (((CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c1 THEN rt60.c2 WHEN rt60.c2 THEN '1239630715' WHEN rt60.c0 THEN rt60.c2 WHEN rt60.c1 THEN rt60.c2 END) NOTNULL)) ORDER BY (((((1.081507424E9))>=((rt60.c1))))IS(((rt60.c2) NOT BETWEEN (rt60.c1) AND (rt60.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt60, v0, t0 WHERE (((((x'36a4')!=(rt60.c1)))GLOB(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'36a4')!=(rt60.c1)))GLOB(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1, rt60, v0, t0);
SELECT COUNT(*) FROM vt0, rt1, rt60, v0, t0 WHERE (((((x'36a4')!=(rt60.c1)))GLOB(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'36a4')!=(rt60.c1)))GLOB(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1, rt60, v0, t0);
SELECT COUNT(*) FROM vt0, rt1, rt60, v0, t0 WHERE (((((x'36a4')!=(rt60.c1)))GLOB(rt1.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1, rt60, vt0 INNER JOIN t0 ON rt60.c1 WHERE (CASE CAST(t0.c39 AS TEXT)  WHEN (+ (rt60.c0)) THEN ((vt0.c0)+(t0.c49)) END) ORDER BY ((((((((CAST(rt60.c2 AS INTEGER))OR((- (rt1.c4)))))OR('Ky3')))AND(rt1.c3)))AND(((((((((t0.c39)AND(t0.c32)))OR('-234071582')))AND(rt1.c2)))AND(t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c39 AS TEXT)  WHEN (+ (rt60.c0)) THEN ((vt0.c0)+(t0.c49)) END) IS TRUE)  as count FROM rt1, rt60, vt0 INNER JOIN t0 ON rt60.c1 ORDER BY ((((((((CAST(rt60.c2 AS INTEGER))OR((- (rt1.c4)))))OR('Ky3')))AND(rt1.c3)))AND(((((((((t0.c39)AND(t0.c32)))OR('-234071582')))AND(rt1.c2)))AND(t0.c32)))) DESC);
SELECT COUNT(*) FROM rt1, rt60, vt0 INNER JOIN t0 ON rt60.c1 WHERE (CASE CAST(t0.c39 AS TEXT)  WHEN (+ (rt60.c0)) THEN ((vt0.c0)+(t0.c49)) END) ORDER BY ((((((((CAST(rt60.c2 AS INTEGER))OR((- (rt1.c4)))))OR('Ky3')))AND(rt1.c3)))AND(((((((((t0.c39)AND(t0.c32)))OR('-234071582')))AND(rt1.c2)))AND(t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c39 AS TEXT)  WHEN (+ (rt60.c0)) THEN ((vt0.c0)+(t0.c49)) END) IS TRUE)  as count FROM rt1, rt60, vt0 INNER JOIN t0 ON rt60.c1 ORDER BY ((((((((CAST(rt60.c2 AS INTEGER))OR((- (rt1.c4)))))OR('Ky3')))AND(rt1.c3)))AND(((((((((t0.c39)AND(t0.c32)))OR('-234071582')))AND(rt1.c2)))AND(t0.c32)))) DESC);
SELECT COUNT(*) FROM rt1, rt60, vt0 INNER JOIN t0 ON rt60.c1 WHERE (CASE CAST(t0.c39 AS TEXT)  WHEN (+ (rt60.c0)) THEN ((vt0.c0)+(t0.c49)) END) ORDER BY ((((((((CAST(rt60.c2 AS INTEGER))OR((- (rt1.c4)))))OR('Ky3')))AND(rt1.c3)))AND(((((((((t0.c39)AND(t0.c32)))OR('-234071582')))AND(rt1.c2)))AND(t0.c32)))) DESC;
SELECT ALL * FROM rt1, v0 CROSS JOIN rt60 ON (((v0.c0))>=((NULL))) WHERE (((((rt60.c0)*(rt60.c1)))/((NOT (0xffffffffb229be90)))));
SELECT SUM(count) FROM (SELECT ((((((rt60.c0)*(rt60.c1)))/((NOT (0xffffffffb229be90))))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN rt60 ON (((v0.c0))>=((NULL))));
SELECT ALL * FROM rt1, v0 CROSS JOIN rt60 ON (((v0.c0))>=((NULL))) WHERE (((((rt60.c0)*(rt60.c1)))/((NOT (0xffffffffb229be90)))));
SELECT SUM(count) FROM (SELECT ((((((rt60.c0)*(rt60.c1)))/((NOT (0xffffffffb229be90))))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN rt60 ON (((v0.c0))>=((NULL))));
SELECT ALL * FROM rt1, v0 CROSS JOIN rt60 ON (((v0.c0))>=((NULL))) WHERE (((((rt60.c0)*(rt60.c1)))/((NOT (0xffffffffb229be90)))));
SELECT ALL * FROM v0, rt60 FULL OUTER JOIN vt0 ON ((((('*Pi,7I%Dl'))!=((t0.c49)))) ISNULL) LEFT OUTER JOIN t0 ON (((('') NOT NULL)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c3) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((NOT (rt1.c2)) IN ()) WHERE ((IFNULL(rt60.c0, rt1.c4) IN ()));
SELECT SUM(count) FROM (SELECT (((IFNULL(rt60.c0, rt1.c4) IN ())) IS TRUE)  as count FROM v0, rt60 FULL OUTER JOIN vt0 ON ((((('*Pi,7I%Dl'))<>((t0.c49)))) ISNULL) LEFT OUTER JOIN t0 ON (((('') NOT NULL)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c3) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((NOT (rt1.c2)) IN ()));
SELECT ALL * FROM v0, rt60 FULL OUTER JOIN vt0 ON ((((('*Pi,7I%Dl'))!=((t0.c49)))) ISNULL) LEFT OUTER JOIN t0 ON (((('') NOT NULL)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c3) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((NOT (rt1.c2)) IN ()) WHERE ((IFNULL(rt60.c0, rt1.c4) IN ()));
SELECT SUM(count) FROM (SELECT (((IFNULL(rt60.c0, rt1.c4) IN ())) IS TRUE)  as count FROM v0, rt60 FULL OUTER JOIN vt0 ON ((((('*Pi,7I%Dl'))<>((t0.c49)))) ISNULL) LEFT OUTER JOIN t0 ON (((('') NOT NULL)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c3) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((NOT (rt1.c2)) IN ()));
SELECT ALL * FROM rt1 WHERE ((((('-2073839357') BETWEEN (rt1.c3) AND (rt1.c1))) NOTNULL)) ORDER BY (((NOT (rt1.c0)))|(CAST(rt1.c4 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2073839357') BETWEEN (rt1.c3) AND (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY (((NOT (rt1.c0)))|(CAST(rt1.c4 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((('-2073839357') BETWEEN (rt1.c3) AND (rt1.c1))) NOTNULL)) ORDER BY (((NOT (rt1.c0)))|(CAST(rt1.c4 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2073839357') BETWEEN (rt1.c3) AND (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY (((NOT (rt1.c0)))|(CAST(rt1.c4 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((('-2073839357') BETWEEN (rt1.c3) AND (rt1.c1))) NOTNULL)) ORDER BY (((NOT (rt1.c0)))|(CAST(rt1.c4 AS REAL))) DESC  NULLS LAST;
SELECT * FROM rt60, t0, v0, vt0 WHERE (vt0.c0) ORDER BY rt60.c2 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt60, t0, v0, vt0 ORDER BY rt60.c2 ASC);
SELECT * FROM rt60, t0, v0, vt0 WHERE (vt0.c0) ORDER BY rt60.c2 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt60, t0, v0, vt0 ORDER BY rt60.c2 ASC);
SELECT * FROM rt60, t0, v0, vt0 WHERE (vt0.c0) ORDER BY rt60.c2 ASC;
SELECT * FROM v0, t0 CROSS JOIN rt1 ON vt0.c1 CROSS JOIN vt0 ON ((t0.c49)<((rt1.c2 IN ()))) WHERE ((((rt1.c4 IN ())) NOT BETWEEN (((((t0.c39)AND(vt0.c1)))AND(t0.c32))) AND (CAST(rt1.c2 AS TEXT)))) ORDER BY (((t0.c49)) NOT BETWEEN ((UNLIKELY(DISTINCT rt1.c1))) AND ((((rt1.c3) BETWEEN (t0.c49) AND (rt1.c1))))), LIKELY(CAST(rt1.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ())) NOT BETWEEN (((((t0.c39)AND(vt0.c1)))AND(t0.c32))) AND (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM v0, t0 CROSS JOIN rt1 ON vt0.c1 CROSS JOIN vt0 ON ((t0.c49)<((rt1.c2 IN ()))) ORDER BY (((t0.c49)) NOT BETWEEN ((UNLIKELY(DISTINCT rt1.c1))) AND ((((rt1.c3) BETWEEN (t0.c49) AND (rt1.c1))))), LIKELY(CAST(rt1.c0 AS NUMERIC))  NULLS LAST);
SELECT * FROM v0, t0 CROSS JOIN rt1 ON vt0.c1 CROSS JOIN vt0 ON ((t0.c49)<((rt1.c2 IN ()))) WHERE ((((rt1.c4 IN ())) NOT BETWEEN (((((t0.c39)AND(vt0.c1)))AND(t0.c32))) AND (CAST(rt1.c2 AS TEXT)))) ORDER BY (((t0.c49)) NOT BETWEEN ((UNLIKELY(DISTINCT rt1.c1))) AND ((((rt1.c3) BETWEEN (t0.c49) AND (rt1.c1))))), LIKELY(CAST(rt1.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ())) NOT BETWEEN (((((t0.c39)AND(vt0.c1)))AND(t0.c32))) AND (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM v0, t0 CROSS JOIN rt1 ON vt0.c1 CROSS JOIN vt0 ON ((t0.c49)<((rt1.c2 IN ()))) ORDER BY (((t0.c49)) NOT BETWEEN ((UNLIKELY(DISTINCT rt1.c1))) AND ((((rt1.c3) BETWEEN (t0.c49) AND (rt1.c1))))), LIKELY(CAST(rt1.c0 AS NUMERIC))  NULLS LAST);
SELECT * FROM v0, t0 CROSS JOIN rt1 ON vt0.c1 CROSS JOIN vt0 ON ((t0.c49)<((rt1.c2 IN ()))) WHERE ((((rt1.c4 IN ())) NOT BETWEEN (((((t0.c39)AND(vt0.c1)))AND(t0.c32))) AND (CAST(rt1.c2 AS TEXT)))) ORDER BY (((t0.c49)) NOT BETWEEN ((UNLIKELY(DISTINCT rt1.c1))) AND ((((rt1.c3) BETWEEN (t0.c49) AND (rt1.c1))))), LIKELY(CAST(rt1.c0 AS NUMERIC))  NULLS LAST;
SELECT * FROM t0, vt0, rt1, v0 WHERE (((((t0.c49)GLOB(t0.c32)))&(((v0.c0)<<(rt1.c3))))) ORDER BY CASE WHEN TYPEOF(DISTINCT x'') THEN (rt1.c4 IN ()) WHEN (vt0.c2 IN ()) THEN t0.c49 COLLATE NOCASE WHEN CASE WHEN t0.c87 THEN rt1.c4 ELSE vt0.c1 END THEN ((((((((rt1.c2)AND(vt0.c1)))OR(v0.c0)))AND(t0.c32)))OR(t0.c32)) END DESC  NULLS LAST, rt1.c0 DESC, rt1.c4 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c49)GLOB(t0.c32)))&(((v0.c0)<<(rt1.c3))))) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY CASE WHEN TYPEOF(DISTINCT x'') THEN (rt1.c4 IN ()) WHEN (vt0.c2 IN ()) THEN t0.c49 COLLATE NOCASE WHEN CASE WHEN t0.c87 THEN rt1.c4 ELSE vt0.c1 END THEN ((((((((rt1.c2)AND(vt0.c1)))OR(v0.c0)))AND(t0.c32)))OR(t0.c32)) END DESC  NULLS LAST, rt1.c0 DESC, rt1.c4 DESC);
SELECT * FROM t0, vt0, rt1, v0 WHERE (((((t0.c49)GLOB(t0.c32)))&(((v0.c0)<<(rt1.c3))))) ORDER BY CASE WHEN TYPEOF(DISTINCT x'') THEN (rt1.c4 IN ()) WHEN (vt0.c2 IN ()) THEN t0.c49 COLLATE NOCASE WHEN CASE WHEN t0.c87 THEN rt1.c4 ELSE vt0.c1 END THEN ((((((((rt1.c2)AND(vt0.c1)))OR(v0.c0)))AND(t0.c32)))OR(t0.c32)) END DESC  NULLS LAST, rt1.c0 DESC, rt1.c4 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c49)GLOB(t0.c32)))&(((v0.c0)<<(rt1.c3))))) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY CASE WHEN TYPEOF(DISTINCT x'') THEN (rt1.c4 IN ()) WHEN (vt0.c2 IN ()) THEN t0.c49 COLLATE NOCASE WHEN CASE WHEN t0.c87 THEN rt1.c4 ELSE vt0.c1 END THEN ((((((((rt1.c2)AND(vt0.c1)))OR(v0.c0)))AND(t0.c32)))OR(t0.c32)) END DESC  NULLS LAST, rt1.c0 DESC, rt1.c4 DESC);
SELECT * FROM t0, vt0, rt1, v0 WHERE (((((t0.c49)GLOB(t0.c32)))&(((v0.c0)<<(rt1.c3))))) ORDER BY CASE WHEN TYPEOF(DISTINCT x'') THEN (rt1.c4 IN ()) WHEN (vt0.c2 IN ()) THEN t0.c49 COLLATE NOCASE WHEN CASE WHEN t0.c87 THEN rt1.c4 ELSE vt0.c1 END THEN ((((((((rt1.c2)AND(vt0.c1)))OR(v0.c0)))AND(t0.c32)))OR(t0.c32)) END DESC  NULLS LAST, rt1.c0 DESC, rt1.c4 DESC;
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt60 ON (((rt1.c3 IN ())) NOTNULL) LEFT OUTER JOIN t0 ON CASE ((rt60.c1)LIKE(-1.663650964E9))  WHEN ((rt60.c1) BETWEEN (rt1.c0) AND (rt60.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c49)) WHEN ((rt1.c2)GLOB(t0.c39)) THEN CASE v0.c0  WHEN '' THEN t0.c49 WHEN rt1.c4 THEN rt60.c0 WHEN x'' THEN t0.c39 ELSE rt60.c1 END WHEN (x'' IN ()) THEN ((t0.c49)+(rt1.c3)) ELSE rt60.c1 END WHERE ((((rt60.c1 IN ())) NOTNULL)) ORDER BY (((((x'')) NOT BETWEEN ((t0.c87)) AND ((rt60.c1)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt60.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt60 ON (((rt1.c3 IN ())) NOTNULL) LEFT OUTER JOIN t0 ON CASE ((rt60.c1)LIKE(-1.663650964E9))  WHEN ((rt60.c1) BETWEEN (rt1.c0) AND (rt60.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c49)) WHEN ((rt1.c2)GLOB(t0.c39)) THEN CASE v0.c0  WHEN '' THEN t0.c49 WHEN rt1.c4 THEN rt60.c0 WHEN x'' THEN t0.c39 ELSE rt60.c1 END WHEN (x'' IN ()) THEN ((t0.c49)+(rt1.c3)) ELSE rt60.c1 END ORDER BY (((((x'')) NOT BETWEEN ((t0.c87)) AND ((rt60.c1)))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt60 ON (((rt1.c3 IN ())) NOTNULL) LEFT OUTER JOIN t0 ON CASE ((rt60.c1)LIKE(-1.663650964E9))  WHEN ((rt60.c1) BETWEEN (rt1.c0) AND (rt60.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c49)) WHEN ((rt1.c2)GLOB(t0.c39)) THEN CASE v0.c0  WHEN '' THEN t0.c49 WHEN rt1.c4 THEN rt60.c0 WHEN x'' THEN t0.c39 ELSE rt60.c1 END WHEN (x'' IN ()) THEN ((t0.c49)+(rt1.c3)) ELSE rt60.c1 END WHERE ((((rt60.c1 IN ())) NOTNULL)) ORDER BY (((((x'')) NOT BETWEEN ((t0.c87)) AND ((rt60.c1)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt60.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt60 ON (((rt1.c3 IN ())) NOTNULL) LEFT OUTER JOIN t0 ON CASE ((rt60.c1)LIKE(-1.663650964E9))  WHEN ((rt60.c1) BETWEEN (rt1.c0) AND (rt60.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c49)) WHEN ((rt1.c2)GLOB(t0.c39)) THEN CASE v0.c0  WHEN '' THEN t0.c49 WHEN rt1.c4 THEN rt60.c0 WHEN x'' THEN t0.c39 ELSE rt60.c1 END WHEN (x'' IN ()) THEN ((t0.c49)+(rt1.c3)) ELSE rt60.c1 END ORDER BY (((((x'')) NOT BETWEEN ((t0.c87)) AND ((rt60.c1)))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt60 ON (((rt1.c3 IN ())) NOTNULL) LEFT OUTER JOIN t0 ON CASE ((rt60.c1)LIKE(-1.663650964E9))  WHEN ((rt60.c1) BETWEEN (rt1.c0) AND (rt60.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (t0.c49)) WHEN ((rt1.c2)GLOB(t0.c39)) THEN CASE v0.c0  WHEN '' THEN t0.c49 WHEN rt1.c4 THEN rt60.c0 WHEN x'' THEN t0.c39 ELSE rt60.c1 END WHEN (x'' IN ()) THEN ((t0.c49)+(rt1.c3)) ELSE rt60.c1 END WHERE ((((rt60.c1 IN ())) NOTNULL)) ORDER BY (((((x'')) NOT BETWEEN ((t0.c87)) AND ((rt60.c1)))) NOTNULL) ASC;
SELECT ALL * FROM rt1, t0, v0, vt0, rt60 WHERE (((((rt1.c4) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt1, t0, v0, vt0, rt60);
SELECT ALL * FROM rt1, t0, v0, vt0, rt60 WHERE (((((rt1.c4) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt1, t0, v0, vt0, rt60);
SELECT ALL * FROM rt1, t0, v0, vt0, rt60 WHERE (((((rt1.c4) NOTNULL)) IS TRUE));
SELECT COUNT(*) FROM rt60 CROSS JOIN vt0 ON CAST(CAST(vt0.c2 AS BLOB) AS INTEGER) RIGHT OUTER JOIN v0 ON (CAST(rt60.c1 AS BLOB) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c49 AS BLOB))GLOB(ABS(v0.c0))) FULL OUTER JOIN t0 ON rt1.c3 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt60 CROSS JOIN vt0 ON CAST(CAST(vt0.c2 AS BLOB) AS INTEGER) RIGHT OUTER JOIN v0 ON (CAST(rt60.c1 AS BLOB) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c49 AS BLOB))GLOB(ABS(v0.c0))) FULL OUTER JOIN t0 ON rt1.c3);
SELECT COUNT(*) FROM rt60 CROSS JOIN vt0 ON CAST(CAST(vt0.c2 AS BLOB) AS INTEGER) RIGHT OUTER JOIN v0 ON (CAST(rt60.c1 AS BLOB) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c49 AS BLOB))GLOB(ABS(v0.c0))) FULL OUTER JOIN t0 ON rt1.c3 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt60 CROSS JOIN vt0 ON CAST(CAST(vt0.c2 AS BLOB) AS INTEGER) RIGHT OUTER JOIN v0 ON (CAST(rt60.c1 AS BLOB) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c49 AS BLOB))GLOB(ABS(v0.c0))) FULL OUTER JOIN t0 ON rt1.c3);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))==((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))=((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))==((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))=((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))==((v0.c0))));
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) AS BLOB) DESC);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) AS BLOB) DESC);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) AS BLOB) DESC;
SELECT ALL * FROM v0, rt60 CROSS JOIN rt1 ON (((((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c1, NULL, rt1.c4)) AND ((rt60.c1, v0.c0, rt60.c1))))AND(CAST(rt60.c0 AS INTEGER))))AND('NiIbXedu')) WHERE (((((NULL)|(rt1.c4))) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(v0.c0))) AND (CAST(rt1.c1 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)|(rt1.c4))) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(v0.c0))) AND (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, rt60 CROSS JOIN rt1 ON (((((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c1, NULL, rt1.c4)) AND ((rt60.c1, v0.c0, rt60.c1))))AND(CAST(rt60.c0 AS INTEGER))))AND('NiIbXedu')) ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c0 END AS REAL)  NULLS LAST);
SELECT ALL * FROM v0, rt60 CROSS JOIN rt1 ON (((((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c1, NULL, rt1.c4)) AND ((rt60.c1, v0.c0, rt60.c1))))AND(CAST(rt60.c0 AS INTEGER))))AND('NiIbXedu')) WHERE (((((NULL)|(rt1.c4))) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(v0.c0))) AND (CAST(rt1.c1 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)|(rt1.c4))) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(v0.c0))) AND (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, rt60 CROSS JOIN rt1 ON (((((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c1, NULL, rt1.c4)) AND ((rt60.c1, v0.c0, rt60.c1))))AND(CAST(rt60.c0 AS INTEGER))))AND('NiIbXedu')) ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c0 END AS REAL)  NULLS LAST);
SELECT ALL * FROM v0, rt60 CROSS JOIN rt1 ON (((((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c1, NULL, rt1.c4)) AND ((rt60.c1, v0.c0, rt60.c1))))AND(CAST(rt60.c0 AS INTEGER))))AND('NiIbXedu')) WHERE (((((NULL)|(rt1.c4))) NOT BETWEEN (((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))AND(v0.c0))) AND (CAST(rt1.c1 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt1.c4 THEN rt1.c0 END AS REAL)  NULLS LAST;
SELECT ALL * FROM v0, t0, rt1, rt60 WHERE (CASE (~ ('-1837002265'))  WHEN json('') THEN rt1.c1 COLLATE NOCASE ELSE ((t0.c39) NOTNULL) END) ORDER BY ((((((((((rt60.c1)OR(rt1.c3)))AND(rt60.c1)))OR(NULL)))OR(rt1.c3)))<('-540282250')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ ('-1837002265'))  WHEN json('') THEN rt1.c1 COLLATE NOCASE ELSE ((t0.c39) NOTNULL) END) IS TRUE)  as count FROM v0, t0, rt1, rt60 ORDER BY ((((((((((rt60.c1)OR(rt1.c3)))AND(rt60.c1)))OR(NULL)))OR(rt1.c3)))<('-540282250')) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt1, rt60 WHERE (CASE (~ ('-1837002265'))  WHEN json('') THEN rt1.c1 COLLATE NOCASE ELSE ((t0.c39) NOTNULL) END) ORDER BY ((((((((((rt60.c1)OR(rt1.c3)))AND(rt60.c1)))OR(NULL)))OR(rt1.c3)))<('-540282250')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ ('-1837002265'))  WHEN json('') THEN rt1.c1 COLLATE NOCASE ELSE ((t0.c39) NOTNULL) END) IS TRUE)  as count FROM v0, t0, rt1, rt60 ORDER BY ((((((((((rt60.c1)OR(rt1.c3)))AND(rt60.c1)))OR(NULL)))OR(rt1.c3)))<('-540282250')) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt1, rt60 WHERE (CASE (~ ('-1837002265'))  WHEN json('') THEN rt1.c1 COLLATE NOCASE ELSE ((t0.c39) NOTNULL) END) ORDER BY ((((((((((rt60.c1)OR(rt1.c3)))AND(rt60.c1)))OR(NULL)))OR(rt1.c3)))<('-540282250')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt60, t0 WHERE (rt60.c1) ORDER BY ((((t0.c87) NOT NULL))<(TRIM(DISTINCT rt60.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM v0, rt60, t0 ORDER BY ((((t0.c87) NOT NULL))<(TRIM(DISTINCT rt60.c1))) ASC);
SELECT COUNT(*) FROM v0, rt60, t0 WHERE (rt60.c1) ORDER BY ((((t0.c87) NOT NULL))<(TRIM(DISTINCT rt60.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((rt60.c1) IS TRUE)  as count FROM v0, rt60, t0 ORDER BY ((((t0.c87) NOT NULL))<(TRIM(DISTINCT rt60.c1))) ASC);
SELECT COUNT(*) FROM v0, rt60, t0 WHERE (rt60.c1) ORDER BY ((((t0.c87) NOT NULL))<(TRIM(DISTINCT rt60.c1))) ASC;
SELECT ALL * FROM rt60, rt1 WHERE ((+ (UNLIKELY(rt60.c1))));
SELECT SUM(count) FROM (SELECT (((+ (UNLIKELY(rt60.c1)))) IS TRUE)  as count FROM rt60, rt1);
SELECT ALL * FROM rt60, rt1 WHERE ((+ (UNLIKELY(rt60.c1))));
SELECT SUM(count) FROM (SELECT (((+ (UNLIKELY(rt60.c1)))) IS TRUE)  as count FROM rt60, rt1);
SELECT ALL * FROM rt60, rt1 WHERE ((+ (UNLIKELY(rt60.c1))));
SELECT ALL * FROM rt60 WHERE ((NOT (((rt60.c2)>=(rt60.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt60.c2)>=(rt60.c0))))) IS TRUE)  as count FROM rt60);
SELECT ALL * FROM rt60 WHERE ((NOT (((rt60.c2)>=(rt60.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt60.c2)>=(rt60.c0))))) IS TRUE)  as count FROM rt60);
SELECT ALL * FROM rt60 WHERE ((NOT (((rt60.c2)>=(rt60.c0)))));
SELECT * FROM rt60 WHERE (((rt60.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt60.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt60);
SELECT * FROM rt60 WHERE (((rt60.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt60.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt60);
SELECT * FROM rt60 WHERE (((rt60.c0) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY (((((((((- (t0.c32)))AND(((NULL) IS FALSE))))OR((- (t0.c32)))))OR(((t0.c39) BETWEEN (t0.c32) AND (t0.c39)))))OR(-1631028318)) DESC, CAST(t0.c87 COLLATE NOCASE AS INTEGER)  NULLS LAST, 'ZCU' DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY (((((((((- (t0.c32)))AND(((NULL) IS FALSE))))OR((- (t0.c32)))))OR(((t0.c39) BETWEEN (t0.c32) AND (t0.c39)))))OR(-1631028318)) DESC, CAST(t0.c87 COLLATE NOCASE AS INTEGER)  NULLS LAST, 'ZCU' DESC);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY (((((((((- (t0.c32)))AND(((NULL) IS FALSE))))OR((- (t0.c32)))))OR(((t0.c39) BETWEEN (t0.c32) AND (t0.c39)))))OR(-1631028318)) DESC, CAST(t0.c87 COLLATE NOCASE AS INTEGER)  NULLS LAST, 'ZCU' DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY (((((((((- (t0.c32)))AND(((NULL) IS FALSE))))OR((- (t0.c32)))))OR(((t0.c39) BETWEEN (t0.c32) AND (t0.c39)))))OR(-1631028318)) DESC, CAST(t0.c87 COLLATE NOCASE AS INTEGER)  NULLS LAST, 'ZCU' DESC);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY (((((((((- (t0.c32)))AND(((NULL) IS FALSE))))OR((- (t0.c32)))))OR(((t0.c39) BETWEEN (t0.c32) AND (t0.c39)))))OR(-1631028318)) DESC, CAST(t0.c87 COLLATE NOCASE AS INTEGER)  NULLS LAST, 'ZCU' DESC;
SELECT COUNT(*) FROM rt1, v0, t0, vt0, rt60 WHERE (rt1.c3) ORDER BY CASE WHEN ((((rt1.c3)OR(rt60.c1)))OR('-843275278')) THEN ((vt0.c0) IS TRUE) END ASC, (json(rt60.c2) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, v0, t0, vt0, rt60 ORDER BY CASE WHEN ((((rt1.c3)OR(rt60.c1)))OR('-843275278')) THEN ((vt0.c0) IS TRUE) END ASC, (json(rt60.c2) IN ()) DESC);
SELECT COUNT(*) FROM rt1, v0, t0, vt0, rt60 WHERE (rt1.c3) ORDER BY CASE WHEN ((((rt1.c3)OR(rt60.c1)))OR('-843275278')) THEN ((vt0.c0) IS TRUE) END ASC, (json(rt60.c2) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, v0, t0, vt0, rt60 ORDER BY CASE WHEN ((((rt1.c3)OR(rt60.c1)))OR('-843275278')) THEN ((vt0.c0) IS TRUE) END ASC, (json(rt60.c2) IN ()) DESC);
SELECT COUNT(*) FROM rt1, v0, t0, vt0, rt60 WHERE (rt1.c3) ORDER BY CASE WHEN ((((rt1.c3)OR(rt60.c1)))OR('-843275278')) THEN ((vt0.c0) IS TRUE) END ASC, (json(rt60.c2) IN ()) DESC;
SELECT * FROM rt1, v0, rt60, t0 WHERE (((t0.c39) IS TRUE)) ORDER BY CAST(((t0.c32) ISNULL) AS REAL) ASC, (NOT ((((rt60.c0, t0.c39, rt1.c1, rt1.c1, rt60.c2)) NOT BETWEEN ((rt1.c0, rt1.c3, rt60.c0, rt1.c1, t0.c87)) AND ((rt60.c0, rt60.c2, rt1.c4, rt1.c3, rt1.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c39) IS TRUE)) IS TRUE)  as count FROM rt1, v0, rt60, t0 ORDER BY CAST(((t0.c32) ISNULL) AS REAL) ASC, (NOT ((((rt60.c0, t0.c39, rt1.c1, rt1.c1, rt60.c2)) NOT BETWEEN ((rt1.c0, rt1.c3, rt60.c0, rt1.c1, t0.c87)) AND ((rt60.c0, rt60.c2, rt1.c4, rt1.c3, rt1.c3)))))  NULLS FIRST);
SELECT * FROM rt1, v0, rt60, t0 WHERE (((t0.c39) IS TRUE)) ORDER BY CAST(((t0.c32) ISNULL) AS REAL) ASC, (NOT ((((rt60.c0, t0.c39, rt1.c1, rt1.c1, rt60.c2)) NOT BETWEEN ((rt1.c0, rt1.c3, rt60.c0, rt1.c1, t0.c87)) AND ((rt60.c0, rt60.c2, rt1.c4, rt1.c3, rt1.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c39) IS TRUE)) IS TRUE)  as count FROM rt1, v0, rt60, t0 ORDER BY CAST(((t0.c32) ISNULL) AS REAL) ASC, (NOT ((((rt60.c0, t0.c39, rt1.c1, rt1.c1, rt60.c2)) NOT BETWEEN ((rt1.c0, rt1.c3, rt60.c0, rt1.c1, t0.c87)) AND ((rt60.c0, rt60.c2, rt1.c4, rt1.c3, rt1.c3)))))  NULLS FIRST);
SELECT * FROM rt1, v0, rt60, t0 WHERE (((t0.c39) IS TRUE)) ORDER BY CAST(((t0.c32) ISNULL) AS REAL) ASC, (NOT ((((rt60.c0, t0.c39, rt1.c1, rt1.c1, rt60.c2)) NOT BETWEEN ((rt1.c0, rt1.c3, rt60.c0, rt1.c1, t0.c87)) AND ((rt60.c0, rt60.c2, rt1.c4, rt1.c3, rt1.c3)))))  NULLS FIRST;
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((((t0.c87) BETWEEN (rt60.c2) AND (rt60.c1))) BETWEEN (rt1.c4) AND (x'' COLLATE BINARY)) LEFT OUTER JOIN vt0 ON HEX('') LEFT OUTER JOIN rt60 ON ((((vt0.c2) NOT BETWEEN (NULL) AND (rt60.c0)))LIKE(((rt1.c3) NOT BETWEEN (t0.c87) AND (rt1.c3)))) FULL OUTER JOIN t0 ON ((t0.c87 COLLATE RTRIM)<<(((t0.c39) NOT BETWEEN (rt60.c2) AND (rt1.c0)))) WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((((t0.c87) BETWEEN (rt60.c2) AND (rt60.c1))) BETWEEN (rt1.c4) AND (x'' COLLATE BINARY)) LEFT OUTER JOIN vt0 ON HEX('') LEFT OUTER JOIN rt60 ON ((((vt0.c2) NOT BETWEEN (NULL) AND (rt60.c0)))LIKE(((rt1.c3) NOT BETWEEN (t0.c87) AND (rt1.c3)))) FULL OUTER JOIN t0 ON ((t0.c87 COLLATE RTRIM)<<(((t0.c39) NOT BETWEEN (rt60.c2) AND (rt1.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((((t0.c87) BETWEEN (rt60.c2) AND (rt60.c1))) BETWEEN (rt1.c4) AND (x'' COLLATE BINARY)) LEFT OUTER JOIN vt0 ON HEX('') LEFT OUTER JOIN rt60 ON ((((vt0.c2) NOT BETWEEN (NULL) AND (rt60.c0)))LIKE(((rt1.c3) NOT BETWEEN (t0.c87) AND (rt1.c3)))) FULL OUTER JOIN t0 ON ((t0.c87 COLLATE RTRIM)<<(((t0.c39) NOT BETWEEN (rt60.c2) AND (rt1.c0)))) WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((((t0.c87) BETWEEN (rt60.c2) AND (rt60.c1))) BETWEEN (rt1.c4) AND (x'' COLLATE BINARY)) LEFT OUTER JOIN vt0 ON HEX('') LEFT OUTER JOIN rt60 ON ((((vt0.c2) NOT BETWEEN (NULL) AND (rt60.c0)))LIKE(((rt1.c3) NOT BETWEEN (t0.c87) AND (rt1.c3)))) FULL OUTER JOIN t0 ON ((t0.c87 COLLATE RTRIM)<<(((t0.c39) NOT BETWEEN (rt60.c2) AND (rt1.c0)))));
SELECT COUNT(*) FROM t0, vt0, rt1, v0 WHERE (((((rt1.c1)+(vt0.c2)))GLOB(CAST(rt1.c3 AS TEXT)))) ORDER BY ((((t0.c87)>(rt1.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)+(vt0.c2)))GLOB(CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY ((((t0.c87)>(rt1.c1))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt1, v0 WHERE (((((rt1.c1)+(vt0.c2)))GLOB(CAST(rt1.c3 AS TEXT)))) ORDER BY ((((t0.c87)>(rt1.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)+(vt0.c2)))GLOB(CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY ((((t0.c87)>(rt1.c1))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt1, v0 WHERE (((((rt1.c1)+(vt0.c2)))GLOB(CAST(rt1.c3 AS TEXT)))) ORDER BY ((((t0.c87)>(rt1.c1))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0))<((v0.c0)))) NOT BETWEEN (v0.c0) AND ((~ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))<((v0.c0)))) NOT BETWEEN (v0.c0) AND ((~ (v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0))<((v0.c0)))) NOT BETWEEN (v0.c0) AND ((~ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))<((v0.c0)))) NOT BETWEEN (v0.c0) AND ((~ (v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0))<((v0.c0)))) NOT BETWEEN (v0.c0) AND ((~ (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt60, vt0 WHERE (((((rt1.c1) NOT BETWEEN (t0.c39) AND (vt0.c2))) NOTNULL)) ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE), t0.c39 DESC, CASE NULL  WHEN (((('')AND(vt0.c1)))OR(vt0.c2)) THEN ((((vt0.c1)AND(rt1.c1)))AND(rt60.c0)) ELSE CAST(rt1.c1 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (t0.c39) AND (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, v0, t0, rt60, vt0 ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE), t0.c39 DESC, CASE NULL  WHEN (((('')AND(vt0.c1)))OR(vt0.c2)) THEN ((((vt0.c1)AND(rt1.c1)))AND(rt60.c0)) ELSE CAST(rt1.c1 AS TEXT) END DESC);
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt60, vt0 WHERE (((((rt1.c1) NOT BETWEEN (t0.c39) AND (vt0.c2))) NOTNULL)) ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE), t0.c39 DESC, CASE NULL  WHEN (((('')AND(vt0.c1)))OR(vt0.c2)) THEN ((((vt0.c1)AND(rt1.c1)))AND(rt60.c0)) ELSE CAST(rt1.c1 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (t0.c39) AND (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, v0, t0, rt60, vt0 ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE), t0.c39 DESC, CASE NULL  WHEN (((('')AND(vt0.c1)))OR(vt0.c2)) THEN ((((vt0.c1)AND(rt1.c1)))AND(rt60.c0)) ELSE CAST(rt1.c1 AS TEXT) END DESC);
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt60, vt0 WHERE (((((rt1.c1) NOT BETWEEN (t0.c39) AND (vt0.c2))) NOTNULL)) ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE), t0.c39 DESC, CASE NULL  WHEN (((('')AND(vt0.c1)))OR(vt0.c2)) THEN ((((vt0.c1)AND(rt1.c1)))AND(rt60.c0)) ELSE CAST(rt1.c1 AS TEXT) END DESC;
SELECT ALL * FROM vt0, rt1, v0, t0, rt60 WHERE ((((((vt0.c1)LIKE(t0.c87))))<=((CAST(rt1.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)LIKE(t0.c87))))<=((CAST(rt1.c2 AS BLOB))))) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt60);
SELECT ALL * FROM vt0, rt1, v0, t0, rt60 WHERE ((((((vt0.c1)LIKE(t0.c87))))<=((CAST(rt1.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)LIKE(t0.c87))))<=((CAST(rt1.c2 AS BLOB))))) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt60);
SELECT ALL * FROM vt0, rt1, v0, t0, rt60 WHERE ((((((vt0.c1)LIKE(t0.c87))))<=((CAST(rt1.c2 AS BLOB)))));
SELECT COUNT(*) FROM vt0, t0, rt60, v0 FULL OUTER JOIN rt1 ON x'' WHERE (((vt0.c0)IS(x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(x''))) IS TRUE)  as count FROM vt0, t0, rt60, v0 FULL OUTER JOIN rt1 ON x'');
SELECT COUNT(*) FROM vt0, t0, rt60, v0 FULL OUTER JOIN rt1 ON x'' WHERE (((vt0.c0)IS(x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(x''))) IS TRUE)  as count FROM vt0, t0, rt60, v0 FULL OUTER JOIN rt1 ON x'');
SELECT COUNT(*) FROM vt0, t0, rt60, v0 FULL OUTER JOIN rt1 ON x'' WHERE (((vt0.c0)IS(x'')));
SELECT * FROM v0, rt60, rt1, vt0, t0 WHERE (((rt60.c1 COLLATE BINARY) NOT BETWEEN (LOWER(DISTINCT rt1.c1)) AND (((vt0.c0) NOTNULL)))) ORDER BY CAST(((rt1.c2)|(t0.c32)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt60.c1 COLLATE BINARY) NOT BETWEEN (LOWER(DISTINCT rt1.c1)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt60, rt1, vt0, t0 ORDER BY CAST(((rt1.c2)|(t0.c32)) AS BLOB)  NULLS LAST);
SELECT * FROM v0, rt60, rt1, vt0, t0 WHERE (((rt60.c1 COLLATE BINARY) NOT BETWEEN (LOWER(DISTINCT rt1.c1)) AND (((vt0.c0) NOTNULL)))) ORDER BY CAST(((rt1.c2)|(t0.c32)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt60.c1 COLLATE BINARY) NOT BETWEEN (LOWER(DISTINCT rt1.c1)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt60, rt1, vt0, t0 ORDER BY CAST(((rt1.c2)|(t0.c32)) AS BLOB)  NULLS LAST);
SELECT * FROM v0, rt60, rt1, vt0, t0 WHERE (((rt60.c1 COLLATE BINARY) NOT BETWEEN (LOWER(DISTINCT rt1.c1)) AND (((vt0.c0) NOTNULL)))) ORDER BY CAST(((rt1.c2)|(t0.c32)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY CASE WHEN (((x'', v0.c0, v0.c0))<=(('-209410673', v0.c0, v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5955761309524996))) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)>(v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE 0.986613153485313 END;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((x'', v0.c0, v0.c0))<=(('-209410673', v0.c0, v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5955761309524996))) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)>(v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE 0.986613153485313 END);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY CASE WHEN (((x'', v0.c0, v0.c0))<=(('-209410673', v0.c0, v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5955761309524996))) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)>(v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE 0.986613153485313 END;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((x'', v0.c0, v0.c0))<=(('-209410673', v0.c0, v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5955761309524996))) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)>(v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE 0.986613153485313 END);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY CASE WHEN (((x'', v0.c0, v0.c0))<=(('-209410673', v0.c0, v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5955761309524996))) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)>(v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE 0.986613153485313 END;
SELECT ALL * FROM rt60, rt1, vt0, t0, v0 WHERE (x'') ORDER BY (- (((t0.c32) IS TRUE)))  NULLS LAST, CASE WHEN rt1.c2 THEN (((rt1.c2))>=((vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt60, rt1, vt0, t0, v0 ORDER BY (- (((t0.c32) IS TRUE)))  NULLS LAST, CASE WHEN rt1.c2 THEN (((rt1.c2))>=((vt0.c0))) END DESC);
SELECT ALL * FROM rt60, rt1, vt0, t0, v0 WHERE (x'') ORDER BY (- (((t0.c32) IS TRUE)))  NULLS LAST, CASE WHEN rt1.c2 THEN (((rt1.c2))>=((vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt60, rt1, vt0, t0, v0 ORDER BY (- (((t0.c32) IS TRUE)))  NULLS LAST, CASE WHEN rt1.c2 THEN (((rt1.c2))>=((vt0.c0))) END DESC);
SELECT ALL * FROM rt60, rt1, vt0, t0, v0 WHERE (x'') ORDER BY (- (((t0.c32) IS TRUE)))  NULLS LAST, CASE WHEN rt1.c2 THEN (((rt1.c2))>=((vt0.c0))) END DESC;
SELECT ALL COUNT(*) FROM rt1, rt60 WHERE ((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1, rt60);
SELECT ALL COUNT(*) FROM rt1, rt60 WHERE ((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1, rt60);
SELECT ALL COUNT(*) FROM rt1, rt60 WHERE ((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))) AND ((rt1.c1))));
SELECT * FROM vt0 NOT INDEXED, v0, t0, rt60 WHERE ((((((t0.c39)AND(t0.c49)))OR(t0.c49)) IN (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c39)AND(t0.c49)))OR(t0.c49)) IN (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, v0, t0, rt60);
SELECT * FROM vt0 NOT INDEXED, v0, t0, rt60 WHERE ((((((t0.c39)AND(t0.c49)))OR(t0.c49)) IN (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c39)AND(t0.c49)))OR(t0.c49)) IN (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, v0, t0, rt60);
SELECT * FROM vt0 NOT INDEXED, v0, t0, rt60 WHERE ((((((t0.c39)AND(t0.c49)))OR(t0.c49)) IN (((vt0.c1) IS FALSE))));
SELECT COUNT(*) FROM vt0, rt60 INNER JOIN t0 ON x'' CROSS JOIN rt1 ON ((((rt1.c2)<(t0.c32))) BETWEEN ((((t0.c39)) BETWEEN ((vt0.c1)) AND ((t0.c49)))) AND (rt60.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((0.6071956553790817)=(CASE ''  WHEN rt60.c1 THEN rt1.c4 ELSE t0.c87 END)) WHERE (CASE NULLIF(rt1.c0, rt60.c0)  WHEN SQLITE_COMPILEOPTION_GET(t0.c87) THEN ((vt0.c0)*(t0.c49)) WHEN rt1.c4 COLLATE BINARY THEN ((t0.c49)>>(t0.c87)) WHEN CASE WHEN rt1.c2 THEN v0.c0 WHEN t0.c49 THEN rt1.c1 WHEN rt1.c0 THEN rt60.c1 ELSE vt0.c2 END THEN ((((rt60.c0)AND(rt60.c1)))AND(t0.c49)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(rt1.c0, rt60.c0)  WHEN SQLITE_COMPILEOPTION_GET(t0.c87) THEN ((vt0.c0)*(t0.c49)) WHEN rt1.c4 COLLATE BINARY THEN ((t0.c49)>>(t0.c87)) WHEN CASE WHEN rt1.c2 THEN v0.c0 WHEN t0.c49 THEN rt1.c1 WHEN rt1.c0 THEN rt60.c1 ELSE vt0.c2 END THEN ((((rt60.c0)AND(rt60.c1)))AND(t0.c49)) END) IS TRUE)  as count FROM vt0, rt60 INNER JOIN t0 ON x'' CROSS JOIN rt1 ON ((((rt1.c2)<(t0.c32))) BETWEEN ((((t0.c39)) BETWEEN ((vt0.c1)) AND ((t0.c49)))) AND (rt60.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((0.6071956553790817)==(CASE ''  WHEN rt60.c1 THEN rt1.c4 ELSE t0.c87 END)));
SELECT COUNT(*) FROM vt0, rt60 INNER JOIN t0 ON x'' CROSS JOIN rt1 ON ((((rt1.c2)<(t0.c32))) BETWEEN ((((t0.c39)) BETWEEN ((vt0.c1)) AND ((t0.c49)))) AND (rt60.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((0.6071956553790817)=(CASE ''  WHEN rt60.c1 THEN rt1.c4 ELSE t0.c87 END)) WHERE (CASE NULLIF(rt1.c0, rt60.c0)  WHEN SQLITE_COMPILEOPTION_GET(t0.c87) THEN ((vt0.c0)*(t0.c49)) WHEN rt1.c4 COLLATE BINARY THEN ((t0.c49)>>(t0.c87)) WHEN CASE WHEN rt1.c2 THEN v0.c0 WHEN t0.c49 THEN rt1.c1 WHEN rt1.c0 THEN rt60.c1 ELSE vt0.c2 END THEN ((((rt60.c0)AND(rt60.c1)))AND(t0.c49)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(rt1.c0, rt60.c0)  WHEN SQLITE_COMPILEOPTION_GET(t0.c87) THEN ((vt0.c0)*(t0.c49)) WHEN rt1.c4 COLLATE BINARY THEN ((t0.c49)>>(t0.c87)) WHEN CASE WHEN rt1.c2 THEN v0.c0 WHEN t0.c49 THEN rt1.c1 WHEN rt1.c0 THEN rt60.c1 ELSE vt0.c2 END THEN ((((rt60.c0)AND(rt60.c1)))AND(t0.c49)) END) IS TRUE)  as count FROM vt0, rt60 INNER JOIN t0 ON x'' CROSS JOIN rt1 ON ((((rt1.c2)<(t0.c32))) BETWEEN ((((t0.c39)) BETWEEN ((vt0.c1)) AND ((t0.c49)))) AND (rt60.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((0.6071956553790817)==(CASE ''  WHEN rt60.c1 THEN rt1.c4 ELSE t0.c87 END)));
SELECT COUNT(*) FROM vt0, rt60 INNER JOIN t0 ON x'' CROSS JOIN rt1 ON ((((rt1.c2)<(t0.c32))) BETWEEN ((((t0.c39)) BETWEEN ((vt0.c1)) AND ((t0.c49)))) AND (rt60.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON ((0.6071956553790817)=(CASE ''  WHEN rt60.c1 THEN rt1.c4 ELSE t0.c87 END)) WHERE (CASE NULLIF(rt1.c0, rt60.c0)  WHEN SQLITE_COMPILEOPTION_GET(t0.c87) THEN ((vt0.c0)*(t0.c49)) WHEN rt1.c4 COLLATE BINARY THEN ((t0.c49)>>(t0.c87)) WHEN CASE WHEN rt1.c2 THEN v0.c0 WHEN t0.c49 THEN rt1.c1 WHEN rt1.c0 THEN rt60.c1 ELSE vt0.c2 END THEN ((((rt60.c0)AND(rt60.c1)))AND(t0.c49)) END);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((JULIANDAY(rt1.c4, vt0.c2, t0.c39))||(CASE WHEN rt1.c3 THEN rt1.c4 WHEN vt0.c2 THEN t0.c39 WHEN t0.c39 THEN 0.005273511265927344 END)));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(rt1.c4, vt0.c2, t0.c39))||(CASE WHEN rt1.c3 THEN rt1.c4 WHEN vt0.c2 THEN t0.c39 WHEN t0.c39 THEN 0.005273511265927344 END))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((JULIANDAY(rt1.c4, vt0.c2, t0.c39))||(CASE WHEN rt1.c3 THEN rt1.c4 WHEN vt0.c2 THEN t0.c39 WHEN t0.c39 THEN 0.005273511265927344 END)));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(rt1.c4, vt0.c2, t0.c39))||(CASE WHEN rt1.c3 THEN rt1.c4 WHEN vt0.c2 THEN t0.c39 WHEN t0.c39 THEN 0.005273511265927344 END))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((JULIANDAY(rt1.c4, vt0.c2, t0.c39))||(CASE WHEN rt1.c3 THEN rt1.c4 WHEN vt0.c2 THEN t0.c39 WHEN t0.c39 THEN 0.005273511265927344 END)));
SELECT ALL COUNT(*) FROM rt1, t0, rt60, vt0 WHERE (CASE (('N\n') BETWEEN (0.6559084489498989) AND (rt1.c3))  WHEN (((vt0.c0))>=((rt60.c1))) THEN rt1.c0 COLLATE RTRIM WHEN (~ (vt0.c1)) THEN (rt60.c0 IN (t0.c87, t0.c49)) WHEN t0.c39 COLLATE RTRIM THEN (((t0.c39))>((t0.c32))) WHEN ((vt0.c2)-(rt60.c0)) THEN vt0.c2 COLLATE BINARY WHEN TRIM(vt0.c1) THEN CASE WHEN rt60.c2 THEN rt1.c4 WHEN t0.c32 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE t0.c49 END WHEN rt1.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c49 END WHEN (((vt0.c0))<((rt1.c4))) THEN ((rt1.c3) IS FALSE) END) ORDER BY rt1.c1  NULLS LAST, (((CAST(rt60.c0 AS BLOB)))<>((((rt1.c3)||(0X3d9f046))))) DESC  NULLS LAST, (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN (((t0.c32 IN ()), CAST(t0.c49 AS TEXT), rt60.c1 COLLATE RTRIM)) AND (((- (rt60.c2)), CASE rt1.c2  WHEN x'5661' THEN rt1.c0 WHEN t0.c39 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c39 END, ROUND(t0.c39, x''))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (('N\n') BETWEEN (0.6559084489498989) AND (rt1.c3))  WHEN (((vt0.c0))>=((rt60.c1))) THEN rt1.c0 COLLATE RTRIM WHEN (~ (vt0.c1)) THEN (rt60.c0 IN (t0.c87, t0.c49)) WHEN t0.c39 COLLATE RTRIM THEN (((t0.c39))>((t0.c32))) WHEN ((vt0.c2)-(rt60.c0)) THEN vt0.c2 COLLATE BINARY WHEN TRIM(vt0.c1) THEN CASE WHEN rt60.c2 THEN rt1.c4 WHEN t0.c32 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE t0.c49 END WHEN rt1.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c49 END WHEN (((vt0.c0))<((rt1.c4))) THEN ((rt1.c3) IS FALSE) END) IS TRUE)  as count FROM rt1, t0, rt60, vt0 ORDER BY rt1.c1  NULLS LAST, (((CAST(rt60.c0 AS BLOB)))!=((((rt1.c3)||(0x3d9f046))))) DESC  NULLS LAST, (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN (((t0.c32 IN ()), CAST(t0.c49 AS TEXT), rt60.c1 COLLATE RTRIM)) AND (((- (rt60.c2)), CASE rt1.c2  WHEN x'5661' THEN rt1.c0 WHEN t0.c39 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c39 END, ROUND(t0.c39, x'')))));
SELECT ALL COUNT(*) FROM rt1, t0, rt60, vt0 WHERE (CASE (('N\n') BETWEEN (0.6559084489498989) AND (rt1.c3))  WHEN (((vt0.c0))>=((rt60.c1))) THEN rt1.c0 COLLATE RTRIM WHEN (~ (vt0.c1)) THEN (rt60.c0 IN (t0.c87, t0.c49)) WHEN t0.c39 COLLATE RTRIM THEN (((t0.c39))>((t0.c32))) WHEN ((vt0.c2)-(rt60.c0)) THEN vt0.c2 COLLATE BINARY WHEN TRIM(vt0.c1) THEN CASE WHEN rt60.c2 THEN rt1.c4 WHEN t0.c32 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE t0.c49 END WHEN rt1.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c49 END WHEN (((vt0.c0))<((rt1.c4))) THEN ((rt1.c3) IS FALSE) END) ORDER BY rt1.c1  NULLS LAST, (((CAST(rt60.c0 AS BLOB)))<>((((rt1.c3)||(0X3d9f046))))) DESC  NULLS LAST, (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN (((t0.c32 IN ()), CAST(t0.c49 AS TEXT), rt60.c1 COLLATE RTRIM)) AND (((- (rt60.c2)), CASE rt1.c2  WHEN x'5661' THEN rt1.c0 WHEN t0.c39 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c39 END, ROUND(t0.c39, x''))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (('N\n') BETWEEN (0.6559084489498989) AND (rt1.c3))  WHEN (((vt0.c0))>=((rt60.c1))) THEN rt1.c0 COLLATE RTRIM WHEN (~ (vt0.c1)) THEN (rt60.c0 IN (t0.c87, t0.c49)) WHEN t0.c39 COLLATE RTRIM THEN (((t0.c39))>((t0.c32))) WHEN ((vt0.c2)-(rt60.c0)) THEN vt0.c2 COLLATE BINARY WHEN TRIM(vt0.c1) THEN CASE WHEN rt60.c2 THEN rt1.c4 WHEN t0.c32 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE t0.c49 END WHEN rt1.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c49 END WHEN (((vt0.c0))<((rt1.c4))) THEN ((rt1.c3) IS FALSE) END) IS TRUE)  as count FROM rt1, t0, rt60, vt0 ORDER BY rt1.c1  NULLS LAST, (((CAST(rt60.c0 AS BLOB)))!=((((rt1.c3)||(0x3d9f046))))) DESC  NULLS LAST, (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN (((t0.c32 IN ()), CAST(t0.c49 AS TEXT), rt60.c1 COLLATE RTRIM)) AND (((- (rt60.c2)), CASE rt1.c2  WHEN x'5661' THEN rt1.c0 WHEN t0.c39 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c39 END, ROUND(t0.c39, x'')))));
SELECT ALL COUNT(*) FROM rt1, t0, rt60, vt0 WHERE (CASE (('N\n') BETWEEN (0.6559084489498989) AND (rt1.c3))  WHEN (((vt0.c0))>=((rt60.c1))) THEN rt1.c0 COLLATE RTRIM WHEN (~ (vt0.c1)) THEN (rt60.c0 IN (t0.c87, t0.c49)) WHEN t0.c39 COLLATE RTRIM THEN (((t0.c39))>((t0.c32))) WHEN ((vt0.c2)-(rt60.c0)) THEN vt0.c2 COLLATE BINARY WHEN TRIM(vt0.c1) THEN CASE WHEN rt60.c2 THEN rt1.c4 WHEN t0.c32 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE t0.c49 END WHEN rt1.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c49 END WHEN (((vt0.c0))<((rt1.c4))) THEN ((rt1.c3) IS FALSE) END) ORDER BY rt1.c1  NULLS LAST, (((CAST(rt60.c0 AS BLOB)))<>((((rt1.c3)||(0X3d9f046))))) DESC  NULLS LAST, (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN (((t0.c32 IN ()), CAST(t0.c49 AS TEXT), rt60.c1 COLLATE RTRIM)) AND (((- (rt60.c2)), CASE rt1.c2  WHEN x'5661' THEN rt1.c0 WHEN t0.c39 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c39 END, ROUND(t0.c39, x''))));
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON (- (CAST(v0.c0 AS TEXT))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN x'' THEN rt1.c3 ELSE rt1.c2 END AS TEXT) WHERE (TRIM((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((t0.c39))), (vt0.c0 IN (''))));
SELECT SUM(count) FROM (SELECT ((TRIM((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((t0.c39))), (vt0.c0 IN ('')))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON (- (CAST(v0.c0 AS TEXT))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN x'' THEN rt1.c3 ELSE rt1.c2 END AS TEXT));
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON (- (CAST(v0.c0 AS TEXT))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN x'' THEN rt1.c3 ELSE rt1.c2 END AS TEXT) WHERE (TRIM((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((t0.c39))), (vt0.c0 IN (''))));
SELECT SUM(count) FROM (SELECT ((TRIM((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((t0.c39))), (vt0.c0 IN ('')))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON (- (CAST(v0.c0 AS TEXT))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN x'' THEN rt1.c3 ELSE rt1.c2 END AS TEXT));
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON (- (CAST(v0.c0 AS TEXT))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN x'' THEN rt1.c3 ELSE rt1.c2 END AS TEXT) WHERE (TRIM((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((t0.c39))), (vt0.c0 IN (''))));
SELECT ALL * FROM v0, vt0, t0, rt60, rt1 WHERE (((((rt1.c3)IS NOT(rt1.c0))) ISNULL)) ORDER BY NULLIF((rt1.c4 IN ()), ((vt0.c1)=(rt60.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS NOT(rt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0, t0, rt60, rt1 ORDER BY NULLIF((rt1.c4 IN ()), ((vt0.c1)==(rt60.c2))));
SELECT ALL * FROM v0, vt0, t0, rt60, rt1 WHERE (((((rt1.c3)IS NOT(rt1.c0))) ISNULL)) ORDER BY NULLIF((rt1.c4 IN ()), ((vt0.c1)=(rt60.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS NOT(rt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0, t0, rt60, rt1 ORDER BY NULLIF((rt1.c4 IN ()), ((vt0.c1)==(rt60.c2))));
SELECT ALL * FROM v0, vt0, t0, rt60, rt1 WHERE (((((rt1.c3)IS NOT(rt1.c0))) ISNULL)) ORDER BY NULLIF((rt1.c4 IN ()), ((vt0.c1)=(rt60.c2)));
SELECT COUNT(*) FROM v0, vt0, rt60, rt1, t0 WHERE (((CAST(t0.c39 AS BLOB))!=(((rt1.c2)<(vt0.c2))))) ORDER BY CASE (((v0.c0)) BETWEEN ((0.5005008708915775)) AND ((rt60.c0)))  WHEN ((((rt60.c0)OR(NULL)))AND(vt0.c1)) THEN t0.c49 COLLATE NOCASE WHEN CASE v0.c0  WHEN rt60.c0 THEN vt0.c1 END THEN CAST(rt60.c1 AS BLOB) WHEN TRIM(DISTINCT '-1663650964') THEN 0.010432739052327111 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c39 AS BLOB))<>(((rt1.c2)<(vt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt60, rt1, t0 ORDER BY CASE (((v0.c0)) BETWEEN ((0.5005008708915775)) AND ((rt60.c0)))  WHEN ((((rt60.c0)OR(NULL)))AND(vt0.c1)) THEN t0.c49 COLLATE NOCASE WHEN CASE v0.c0  WHEN rt60.c0 THEN vt0.c1 END THEN CAST(rt60.c1 AS BLOB) WHEN TRIM(DISTINCT '-1663650964') THEN 0.010432739052327111 END DESC);
SELECT COUNT(*) FROM v0, vt0, rt60, rt1, t0 WHERE (((CAST(t0.c39 AS BLOB))!=(((rt1.c2)<(vt0.c2))))) ORDER BY CASE (((v0.c0)) BETWEEN ((0.5005008708915775)) AND ((rt60.c0)))  WHEN ((((rt60.c0)OR(NULL)))AND(vt0.c1)) THEN t0.c49 COLLATE NOCASE WHEN CASE v0.c0  WHEN rt60.c0 THEN vt0.c1 END THEN CAST(rt60.c1 AS BLOB) WHEN TRIM(DISTINCT '-1663650964') THEN 0.010432739052327111 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c39 AS BLOB))<>(((rt1.c2)<(vt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt60, rt1, t0 ORDER BY CASE (((v0.c0)) BETWEEN ((0.5005008708915775)) AND ((rt60.c0)))  WHEN ((((rt60.c0)OR(NULL)))AND(vt0.c1)) THEN t0.c49 COLLATE NOCASE WHEN CASE v0.c0  WHEN rt60.c0 THEN vt0.c1 END THEN CAST(rt60.c1 AS BLOB) WHEN TRIM(DISTINCT '-1663650964') THEN 0.010432739052327111 END DESC);
SELECT COUNT(*) FROM v0, vt0, rt60, rt1, t0 WHERE (((CAST(t0.c39 AS BLOB))!=(((rt1.c2)<(vt0.c2))))) ORDER BY CASE (((v0.c0)) BETWEEN ((0.5005008708915775)) AND ((rt60.c0)))  WHEN ((((rt60.c0)OR(NULL)))AND(vt0.c1)) THEN t0.c49 COLLATE NOCASE WHEN CASE v0.c0  WHEN rt60.c0 THEN vt0.c1 END THEN CAST(rt60.c1 AS BLOB) WHEN TRIM(DISTINCT '-1663650964') THEN 0.010432739052327111 END DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOTNULL)) NOTNULL)) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOTNULL)) NOTNULL)) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOTNULL)) NOTNULL)) ORDER BY rt1.c1 ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2) NOTNULL)) ISNULL)) ORDER BY (- (((vt0.c2) NOT BETWEEN (NULL) AND ('/_9')))) ASC, ((6.61357908E8)*(((v0.c0)<(vt0.c2)))) ASC  NULLS FIRST, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(v0.c0)))AND(vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((vt0.c2) NOT BETWEEN (NULL) AND ('/_9')))) ASC, ((6.61357908E8)*(((v0.c0)<(vt0.c2)))) ASC  NULLS FIRST, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(v0.c0)))AND(vt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2) NOTNULL)) ISNULL)) ORDER BY (- (((vt0.c2) NOT BETWEEN (NULL) AND ('/_9')))) ASC, ((6.61357908E8)*(((v0.c0)<(vt0.c2)))) ASC  NULLS FIRST, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(v0.c0)))AND(vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((vt0.c2) NOT BETWEEN (NULL) AND ('/_9')))) ASC, ((6.61357908E8)*(((v0.c0)<(vt0.c2)))) ASC  NULLS FIRST, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(v0.c0)))AND(vt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2) NOTNULL)) ISNULL)) ORDER BY (- (((vt0.c2) NOT BETWEEN (NULL) AND ('/_9')))) ASC, ((6.61357908E8)*(((v0.c0)<(vt0.c2)))) ASC  NULLS FIRST, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(v0.c0)))AND(vt0.c1)) COLLATE BINARY DESC;
SELECT * FROM v0, rt60 WHERE (((rt60.c2) NOT BETWEEN (((v0.c0) NOT BETWEEN (rt60.c1) AND (rt60.c1))) AND (rt60.c1))) ORDER BY (('Ug' COLLATE NOCASE) NOT BETWEEN (rt60.c1 COLLATE BINARY) AND (v0.c0)) ASC, CASE x''  WHEN (rt60.c2 IN (v0.c0, rt60.c2)) THEN ((((rt60.c2)AND(rt60.c0)))OR(rt60.c2)) ELSE COALESCE(rt60.c2, rt60.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt60.c2) NOT BETWEEN (((v0.c0) NOT BETWEEN (rt60.c1) AND (rt60.c1))) AND (rt60.c1))) IS TRUE)  as count FROM v0, rt60 ORDER BY (('Ug' COLLATE NOCASE) NOT BETWEEN (rt60.c1 COLLATE BINARY) AND (v0.c0)) ASC, CASE x''  WHEN (rt60.c2 IN (v0.c0, rt60.c2)) THEN ((((rt60.c2)AND(rt60.c0)))OR(rt60.c2)) ELSE COALESCE(rt60.c2, rt60.c0) END  NULLS LAST);
SELECT * FROM v0, rt60 WHERE (((rt60.c2) NOT BETWEEN (((v0.c0) NOT BETWEEN (rt60.c1) AND (rt60.c1))) AND (rt60.c1))) ORDER BY (('Ug' COLLATE NOCASE) NOT BETWEEN (rt60.c1 COLLATE BINARY) AND (v0.c0)) ASC, CASE x''  WHEN (rt60.c2 IN (v0.c0, rt60.c2)) THEN ((((rt60.c2)AND(rt60.c0)))OR(rt60.c2)) ELSE COALESCE(rt60.c2, rt60.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt60.c2) NOT BETWEEN (((v0.c0) NOT BETWEEN (rt60.c1) AND (rt60.c1))) AND (rt60.c1))) IS TRUE)  as count FROM v0, rt60 ORDER BY (('Ug' COLLATE NOCASE) NOT BETWEEN (rt60.c1 COLLATE BINARY) AND (v0.c0)) ASC, CASE x''  WHEN (rt60.c2 IN (v0.c0, rt60.c2)) THEN ((((rt60.c2)AND(rt60.c0)))OR(rt60.c2)) ELSE COALESCE(rt60.c2, rt60.c0) END  NULLS LAST);
SELECT * FROM v0, rt60 WHERE (((rt60.c2) NOT BETWEEN (((v0.c0) NOT BETWEEN (rt60.c1) AND (rt60.c1))) AND (rt60.c1))) ORDER BY (('Ug' COLLATE NOCASE) NOT BETWEEN (rt60.c1 COLLATE BINARY) AND (v0.c0)) ASC, CASE x''  WHEN (rt60.c2 IN (v0.c0, rt60.c2)) THEN ((((rt60.c2)AND(rt60.c0)))OR(rt60.c2)) ELSE COALESCE(rt60.c2, rt60.c0) END  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN rt60 ON '593180102' WHERE (((((t0.c49) BETWEEN (rt60.c2) AND (t0.c87))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c49) BETWEEN (rt60.c2) AND (t0.c87))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt60 ON '593180102');
SELECT ALL * FROM t0 CROSS JOIN rt60 ON '593180102' WHERE (((((t0.c49) BETWEEN (rt60.c2) AND (t0.c87))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c49) BETWEEN (rt60.c2) AND (t0.c87))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt60 ON '593180102');
SELECT ALL * FROM t0 CROSS JOIN rt60 ON '593180102' WHERE (((((t0.c49) BETWEEN (rt60.c2) AND (t0.c87))) NOT NULL));
SELECT ALL * FROM t0, rt60 WHERE (CAST(CASE rt60.c1  WHEN t0.c32 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 WHEN t0.c49 THEN NULL WHEN 0.2824911127937758 THEN rt60.c1 WHEN t0.c39 THEN t0.c87 ELSE rt60.c2 END AS TEXT)) ORDER BY CAST(((t0.c49) BETWEEN (NULL) AND (rt60.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt60.c1  WHEN t0.c32 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 WHEN t0.c49 THEN NULL WHEN 0.2824911127937758 THEN rt60.c1 WHEN t0.c39 THEN t0.c87 ELSE rt60.c2 END AS TEXT)) IS TRUE)  as count FROM t0, rt60 ORDER BY CAST(((t0.c49) BETWEEN (NULL) AND (rt60.c0)) AS TEXT) ASC);
SELECT ALL * FROM t0, rt60 WHERE (CAST(CASE rt60.c1  WHEN t0.c32 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 WHEN t0.c49 THEN NULL WHEN 0.2824911127937758 THEN rt60.c1 WHEN t0.c39 THEN t0.c87 ELSE rt60.c2 END AS TEXT)) ORDER BY CAST(((t0.c49) BETWEEN (NULL) AND (rt60.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt60.c1  WHEN t0.c32 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 WHEN t0.c49 THEN NULL WHEN 0.2824911127937758 THEN rt60.c1 WHEN t0.c39 THEN t0.c87 ELSE rt60.c2 END AS TEXT)) IS TRUE)  as count FROM t0, rt60 ORDER BY CAST(((t0.c49) BETWEEN (NULL) AND (rt60.c0)) AS TEXT) ASC);
SELECT ALL * FROM t0, rt60 WHERE (CAST(CASE rt60.c1  WHEN t0.c32 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 WHEN t0.c49 THEN NULL WHEN 0.2824911127937758 THEN rt60.c1 WHEN t0.c39 THEN t0.c87 ELSE rt60.c2 END AS TEXT)) ORDER BY CAST(((t0.c49) BETWEEN (NULL) AND (rt60.c0)) AS TEXT) ASC;
SELECT ALL * FROM v0, rt60, rt1 NOT INDEXED, vt0, t0 WHERE ((((((t0.c39)) BETWEEN ((vt0.c1)) AND ((rt60.c2))))>=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((t0.c39)) BETWEEN ((vt0.c1)) AND ((rt60.c2))))>=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt60, rt1, vt0, t0);
SELECT ALL * FROM v0, rt60, rt1 NOT INDEXED, vt0, t0 WHERE ((((((t0.c39)) BETWEEN ((vt0.c1)) AND ((rt60.c2))))>=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((t0.c39)) BETWEEN ((vt0.c1)) AND ((rt60.c2))))>=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt60, rt1, vt0, t0);
SELECT ALL * FROM v0, rt60, rt1 NOT INDEXED, vt0, t0 WHERE ((((((t0.c39)) BETWEEN ((vt0.c1)) AND ((rt60.c2))))>=(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt60, t0 WHERE (0.25070983412367565);
SELECT SUM(count) FROM (SELECT ((0.25070983412367565) IS TRUE)  as count FROM rt60, t0);
SELECT COUNT(*) FROM rt60, t0 WHERE (0.25070983412367565);
SELECT SUM(count) FROM (SELECT ((0.25070983412367565) IS TRUE)  as count FROM rt60, t0);
SELECT COUNT(*) FROM rt60, t0 WHERE (0.25070983412367565);
SELECT COUNT(*) FROM rt1, t0, v0, vt0, rt60 WHERE (LOWER(t0.c49) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(t0.c49) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, v0, vt0, rt60);
SELECT COUNT(*) FROM rt1, t0, v0, vt0, rt60 WHERE (LOWER(t0.c49) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(t0.c49) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, v0, vt0, rt60);
SELECT COUNT(*) FROM rt1, t0, v0, vt0, rt60 WHERE (LOWER(t0.c49) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, rt1, vt0, v0 WHERE (CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC)) ORDER BY (((rt1.c0, t0.c39, vt0.c0))<((v0.c0, t0.c49, t0.c49))) COLLATE RTRIM DESC  NULLS FIRST, rt1.c3, ((t0.c87) NOT BETWEEN (t0.c39) AND (0.3540229599785879)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, vt0, v0 ORDER BY (((rt1.c0, t0.c39, vt0.c0))<((v0.c0, t0.c49, t0.c49))) COLLATE RTRIM DESC  NULLS FIRST, rt1.c3, ((t0.c87) NOT BETWEEN (t0.c39) AND (0.3540229599785879)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt1, vt0, v0 WHERE (CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC)) ORDER BY (((rt1.c0, t0.c39, vt0.c0))<((v0.c0, t0.c49, t0.c49))) COLLATE RTRIM DESC  NULLS FIRST, rt1.c3, ((t0.c87) NOT BETWEEN (t0.c39) AND (0.3540229599785879)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, vt0, v0 ORDER BY (((rt1.c0, t0.c39, vt0.c0))<((v0.c0, t0.c49, t0.c49))) COLLATE RTRIM DESC  NULLS FIRST, rt1.c3, ((t0.c87) NOT BETWEEN (t0.c39) AND (0.3540229599785879)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt1, vt0, v0 WHERE (CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC)) ORDER BY (((rt1.c0, t0.c39, vt0.c0))<((v0.c0, t0.c49, t0.c49))) COLLATE RTRIM DESC  NULLS FIRST, rt1.c3, ((t0.c87) NOT BETWEEN (t0.c39) AND (0.3540229599785879)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((+ (v0.c0))))) ORDER BY 'v' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 'v' DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((+ (v0.c0))))) ORDER BY 'v' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 'v' DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((+ (v0.c0))))) ORDER BY 'v' DESC;
SELECT COUNT(*) FROM t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((- (t0.c87)))OR(((((rt60.c0)AND(t0.c87)))AND(rt1.c0)))))AND(((t0.c39)<=(rt1.c2)))) CROSS JOIN vt0 ON vt0.c0 WHERE ((CASE WHEN rt1.c4 THEN rt60.c2 WHEN '-1466662088' THEN rt1.c3 WHEN t0.c39 THEN vt0.c2 END IN (((rt60.c0)&(rt60.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c4 THEN rt60.c2 WHEN '-1466662088' THEN rt1.c3 WHEN t0.c39 THEN vt0.c2 END IN (((rt60.c0)&(rt60.c0))))) IS TRUE)  as count FROM t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((- (t0.c87)))OR(((((rt60.c0)AND(t0.c87)))AND(rt1.c0)))))AND(((t0.c39)<=(rt1.c2)))) CROSS JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((- (t0.c87)))OR(((((rt60.c0)AND(t0.c87)))AND(rt1.c0)))))AND(((t0.c39)<=(rt1.c2)))) CROSS JOIN vt0 ON vt0.c0 WHERE ((CASE WHEN rt1.c4 THEN rt60.c2 WHEN '-1466662088' THEN rt1.c3 WHEN t0.c39 THEN vt0.c2 END IN (((rt60.c0)&(rt60.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c4 THEN rt60.c2 WHEN '-1466662088' THEN rt1.c3 WHEN t0.c39 THEN vt0.c2 END IN (((rt60.c0)&(rt60.c0))))) IS TRUE)  as count FROM t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((- (t0.c87)))OR(((((rt60.c0)AND(t0.c87)))AND(rt1.c0)))))AND(((t0.c39)<=(rt1.c2)))) CROSS JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM t0, v0, rt1 LEFT OUTER JOIN rt60 ON (((((- (t0.c87)))OR(((((rt60.c0)AND(t0.c87)))AND(rt1.c0)))))AND(((t0.c39)<=(rt1.c2)))) CROSS JOIN vt0 ON vt0.c0 WHERE ((CASE WHEN rt1.c4 THEN rt60.c2 WHEN '-1466662088' THEN rt1.c3 WHEN t0.c39 THEN vt0.c2 END IN (((rt60.c0)&(rt60.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE (- (t0.c87))  WHEN ((t0.c32)>>(v0.c0)) THEN (t0.c87 IN ()) END) ORDER BY (((0.9307909696221167 COLLATE BINARY))=(((t0.c39 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c87))  WHEN ((t0.c32)>>(v0.c0)) THEN (t0.c87 IN ()) END) IS TRUE)  as count FROM v0, t0 ORDER BY (((0.9307909696221167 COLLATE BINARY))==(((t0.c39 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE (- (t0.c87))  WHEN ((t0.c32)>>(v0.c0)) THEN (t0.c87 IN ()) END) ORDER BY (((0.9307909696221167 COLLATE BINARY))=(((t0.c39 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c87))  WHEN ((t0.c32)>>(v0.c0)) THEN (t0.c87 IN ()) END) IS TRUE)  as count FROM v0, t0 ORDER BY (((0.9307909696221167 COLLATE BINARY))==(((t0.c39 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE (- (t0.c87))  WHEN ((t0.c32)>>(v0.c0)) THEN (t0.c87 IN ()) END) ORDER BY (((0.9307909696221167 COLLATE BINARY))=(((t0.c39 IN ()))))  NULLS LAST;
SELECT * FROM rt60 CROSS JOIN rt1 ON UPPER(DISTINCT (+ (rt1.c1))) WHERE (CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(x'04e5' AS TEXT) WHEN ((((rt1.c3)OR(rt60.c1)))OR(rt60.c0)) THEN (rt60.c1 IN ()) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt60.c2)))OR(rt60.c1)))OR(rt60.c1)) THEN rt60.c2 ELSE rt60.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(x'04e5' AS TEXT) WHEN ((((rt1.c3)OR(rt60.c1)))OR(rt60.c0)) THEN (rt60.c1 IN ()) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt60.c2)))OR(rt60.c1)))OR(rt60.c1)) THEN rt60.c2 ELSE rt60.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt60 CROSS JOIN rt1 ON UPPER(DISTINCT (+ (rt1.c1))));
SELECT * FROM rt60 CROSS JOIN rt1 ON UPPER(DISTINCT (+ (rt1.c1))) WHERE (CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(x'04e5' AS TEXT) WHEN ((((rt1.c3)OR(rt60.c1)))OR(rt60.c0)) THEN (rt60.c1 IN ()) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt60.c2)))OR(rt60.c1)))OR(rt60.c1)) THEN rt60.c2 ELSE rt60.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(x'04e5' AS TEXT) WHEN ((((rt1.c3)OR(rt60.c1)))OR(rt60.c0)) THEN (rt60.c1 IN ()) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt60.c2)))OR(rt60.c1)))OR(rt60.c1)) THEN rt60.c2 ELSE rt60.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt60 CROSS JOIN rt1 ON UPPER(DISTINCT (+ (rt1.c1))));
SELECT * FROM rt60 CROSS JOIN rt1 ON UPPER(DISTINCT (+ (rt1.c1))) WHERE (CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(x'04e5' AS TEXT) WHEN ((((rt1.c3)OR(rt60.c1)))OR(rt60.c0)) THEN (rt60.c1 IN ()) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt60.c2)))OR(rt60.c1)))OR(rt60.c1)) THEN rt60.c2 ELSE rt60.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0, rt60 CROSS JOIN vt0 ON (((((vt0.c0)>(rt60.c0))))<=((((t0.c39)/(rt60.c0))))) INNER JOIN v0 ON (((rt60.c0 IN (t0.c49)))IS NOT((NOT (vt0.c1)))) WHERE ((DATETIME(NULL, vt0.c1, v0.c0, t0.c39, rt60.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((DATETIME(NULL, vt0.c1, v0.c0, t0.c39, rt60.c2) IN ())) IS TRUE)  as count FROM t0, rt60 CROSS JOIN vt0 ON (((((vt0.c0)>(rt60.c0))))<=((((t0.c39)/(rt60.c0))))) INNER JOIN v0 ON (((rt60.c0 IN (t0.c49)))IS NOT((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt60 CROSS JOIN vt0 ON (((((vt0.c0)>(rt60.c0))))<=((((t0.c39)/(rt60.c0))))) INNER JOIN v0 ON (((rt60.c0 IN (t0.c49)))IS NOT((NOT (vt0.c1)))) WHERE ((DATETIME(NULL, vt0.c1, v0.c0, t0.c39, rt60.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((DATETIME(NULL, vt0.c1, v0.c0, t0.c39, rt60.c2) IN ())) IS TRUE)  as count FROM t0, rt60 CROSS JOIN vt0 ON (((((vt0.c0)>(rt60.c0))))<=((((t0.c39)/(rt60.c0))))) INNER JOIN v0 ON (((rt60.c0 IN (t0.c49)))IS NOT((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt60 CROSS JOIN vt0 ON (((((vt0.c0)>(rt60.c0))))<=((((t0.c39)/(rt60.c0))))) INNER JOIN v0 ON (((rt60.c0 IN (t0.c49)))IS NOT((NOT (vt0.c1)))) WHERE ((DATETIME(NULL, vt0.c1, v0.c0, t0.c39, rt60.c2) IN ()));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- (((t0.c49) IS TRUE)))) ORDER BY (~ (((t0.c49) BETWEEN (v0.c0) AND (t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((t0.c49) IS TRUE)))) IS TRUE)  as count FROM v0, t0 ORDER BY (~ (((t0.c49) BETWEEN (v0.c0) AND (t0.c32)))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- (((t0.c49) IS TRUE)))) ORDER BY (~ (((t0.c49) BETWEEN (v0.c0) AND (t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((t0.c49) IS TRUE)))) IS TRUE)  as count FROM v0, t0 ORDER BY (~ (((t0.c49) BETWEEN (v0.c0) AND (t0.c32)))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- (((t0.c49) IS TRUE)))) ORDER BY (~ (((t0.c49) BETWEEN (v0.c0) AND (t0.c32)))) DESC;
SELECT ALL * FROM vt0, rt60, rt1, v0, t0 WHERE (v0.c0) ORDER BY (((rt1.c0, rt60.c1, rt1.c2)) NOT BETWEEN ((v0.c0, CAST(vt0.c1 AS BLOB), rt60.c0)) AND ((((rt1.c0)|(rt60.c2)), ((t0.c49)AND(rt1.c3)), (NOT (t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt60, rt1, v0, t0 ORDER BY (((rt1.c0, rt60.c1, rt1.c2)) NOT BETWEEN ((v0.c0, CAST(vt0.c1 AS BLOB), rt60.c0)) AND ((((rt1.c0)|(rt60.c2)), ((t0.c49)AND(rt1.c3)), (NOT (t0.c87))))));
SELECT ALL * FROM vt0, rt60, rt1, v0, t0 WHERE (v0.c0) ORDER BY (((rt1.c0, rt60.c1, rt1.c2)) NOT BETWEEN ((v0.c0, CAST(vt0.c1 AS BLOB), rt60.c0)) AND ((((rt1.c0)|(rt60.c2)), ((t0.c49)AND(rt1.c3)), (NOT (t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt60, rt1, v0, t0 ORDER BY (((rt1.c0, rt60.c1, rt1.c2)) NOT BETWEEN ((v0.c0, CAST(vt0.c1 AS BLOB), rt60.c0)) AND ((((rt1.c0)|(rt60.c2)), ((t0.c49)AND(rt1.c3)), (NOT (t0.c87))))));
SELECT ALL * FROM vt0, rt60, rt1, v0, t0 WHERE (v0.c0) ORDER BY (((rt1.c0, rt60.c1, rt1.c2)) NOT BETWEEN ((v0.c0, CAST(vt0.c1 AS BLOB), rt60.c0)) AND ((((rt1.c0)|(rt60.c2)), ((t0.c49)AND(rt1.c3)), (NOT (t0.c87)))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))<<(((rt1.c1)IS NOT(vt0.c0)))) FULL OUTER JOIN rt1 ON (- (((v0.c0) ISNULL))) WHERE (((((((rt1.c3) IS TRUE))OR(rt1.c0)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) IS TRUE))OR(rt1.c0)))AND(x''))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))<<(((rt1.c1)IS NOT(vt0.c0)))) FULL OUTER JOIN rt1 ON (- (((v0.c0) ISNULL))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))<<(((rt1.c1)IS NOT(vt0.c0)))) FULL OUTER JOIN rt1 ON (- (((v0.c0) ISNULL))) WHERE (((((((rt1.c3) IS TRUE))OR(rt1.c0)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) IS TRUE))OR(rt1.c0)))AND(x''))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))<<(((rt1.c1)IS NOT(vt0.c0)))) FULL OUTER JOIN rt1 ON (- (((v0.c0) ISNULL))));
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN t0.c87 THEN vt0.c1 WHEN vt0.c0 THEN t0.c49 WHEN '' THEN t0.c87 WHEN vt0.c2 THEN t0.c49 WHEN t0.c32 THEN t0.c87 ELSE t0.c49 END COLLATE RTRIM) ORDER BY ((((t0.c49)GLOB(vt0.c0))) BETWEEN (((t0.c87)IS(t0.c49))) AND (HEX(DISTINCT '_n >'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c87 THEN vt0.c1 WHEN vt0.c0 THEN t0.c49 WHEN '' THEN t0.c87 WHEN vt0.c2 THEN t0.c49 WHEN t0.c32 THEN t0.c87 ELSE t0.c49 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((t0.c49)GLOB(vt0.c0))) BETWEEN (((t0.c87)IS(t0.c49))) AND (HEX(DISTINCT '_n >'))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN t0.c87 THEN vt0.c1 WHEN vt0.c0 THEN t0.c49 WHEN '' THEN t0.c87 WHEN vt0.c2 THEN t0.c49 WHEN t0.c32 THEN t0.c87 ELSE t0.c49 END COLLATE RTRIM) ORDER BY ((((t0.c49)GLOB(vt0.c0))) BETWEEN (((t0.c87)IS(t0.c49))) AND (HEX(DISTINCT '_n >'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c87 THEN vt0.c1 WHEN vt0.c0 THEN t0.c49 WHEN '' THEN t0.c87 WHEN vt0.c2 THEN t0.c49 WHEN t0.c32 THEN t0.c87 ELSE t0.c49 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((t0.c49)GLOB(vt0.c0))) BETWEEN (((t0.c87)IS(t0.c49))) AND (HEX(DISTINCT '_n >'))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN t0.c87 THEN vt0.c1 WHEN vt0.c0 THEN t0.c49 WHEN '' THEN t0.c87 WHEN vt0.c2 THEN t0.c49 WHEN t0.c32 THEN t0.c87 ELSE t0.c49 END COLLATE RTRIM) ORDER BY ((((t0.c49)GLOB(vt0.c0))) BETWEEN (((t0.c87)IS(t0.c49))) AND (HEX(DISTINCT '_n >'))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt60 WHERE (((((CAST(rt60.c2 AS TEXT))OR(((t0.c32) BETWEEN (t0.c32) AND (t0.c49)))))AND((+ (t0.c39)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt60.c2 AS TEXT))OR(((t0.c32) BETWEEN (t0.c32) AND (t0.c49)))))AND((+ (t0.c39))))) IS TRUE)  as count FROM t0, rt60);
SELECT COUNT(*) FROM t0, rt60 WHERE (((((CAST(rt60.c2 AS TEXT))OR(((t0.c32) BETWEEN (t0.c32) AND (t0.c49)))))AND((+ (t0.c39)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt60.c2 AS TEXT))OR(((t0.c32) BETWEEN (t0.c32) AND (t0.c49)))))AND((+ (t0.c39))))) IS TRUE)  as count FROM t0, rt60);
SELECT COUNT(*) FROM t0, rt60 WHERE (((((CAST(rt60.c2 AS TEXT))OR(((t0.c32) BETWEEN (t0.c32) AND (t0.c49)))))AND((+ (t0.c39)))));
SELECT * FROM v0 WHERE (CASE ((v0.c0)<=(v0.c0))  WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) END) ORDER BY x'7dd0' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<=(v0.c0))  WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY x'7dd0' DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE ((v0.c0)<=(v0.c0))  WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) END) ORDER BY x'7dd0' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<=(v0.c0))  WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY x'7dd0' DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE ((v0.c0)<=(v0.c0))  WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) END) ORDER BY x'7dd0' DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0, v0, vt0 WHERE (((((t0.c87)IS NOT(vt0.c0))) IS TRUE)) ORDER BY CAST((t0.c87 IN ()) AS REAL)  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(HEX(vt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c87)IS NOT(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, t0, v0, vt0 ORDER BY CAST((t0.c87 IN ()) AS REAL)  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(HEX(vt0.c2)))  NULLS LAST);
SELECT ALL * FROM rt1, t0, v0, vt0 WHERE (((((t0.c87)IS NOT(vt0.c0))) IS TRUE)) ORDER BY CAST((t0.c87 IN ()) AS REAL)  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(HEX(vt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c87)IS NOT(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, t0, v0, vt0 ORDER BY CAST((t0.c87 IN ()) AS REAL)  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(HEX(vt0.c2)))  NULLS LAST);
SELECT ALL * FROM rt1, t0, v0, vt0 WHERE (((((t0.c87)IS NOT(vt0.c0))) IS TRUE)) ORDER BY CAST((t0.c87 IN ()) AS REAL)  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(HEX(vt0.c2)))  NULLS LAST;
SELECT * FROM rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (NULL);
SELECT * FROM rt1, v0, vt0, rt60 WHERE ((~ (((NULL) BETWEEN (rt60.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) BETWEEN (rt60.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt1, v0, vt0, rt60);
SELECT * FROM rt1, v0, vt0, rt60 WHERE ((~ (((NULL) BETWEEN (rt60.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) BETWEEN (rt60.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt1, v0, vt0, rt60);
SELECT * FROM rt1, v0, vt0, rt60 WHERE ((~ (((NULL) BETWEEN (rt60.c1) AND (vt0.c1)))));
SELECT COUNT(*) FROM rt60 CROSS JOIN v0 ON 'g.' WHERE (((TYPEOF(rt60.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt60.c0)) IS FALSE)) IS TRUE)  as count FROM rt60 CROSS JOIN v0 ON 'g.');
SELECT COUNT(*) FROM rt60 CROSS JOIN v0 ON 'g.' WHERE (((TYPEOF(rt60.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt60.c0)) IS FALSE)) IS TRUE)  as count FROM rt60 CROSS JOIN v0 ON 'g.');
SELECT COUNT(*) FROM rt60 CROSS JOIN v0 ON 'g.' WHERE (((TYPEOF(rt60.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM rt60 WHERE ((((('')<=(rt60.c2)))%(((rt60.c2)AND(rt60.c2))))) ORDER BY 0X52f296d  NULLS LAST, (NOT (CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c0 THEN rt60.c0 WHEN rt60.c0 THEN rt60.c0 END));
SELECT SUM(count) FROM (SELECT (((((('')<=(rt60.c2)))%(((rt60.c2)AND(rt60.c2))))) IS TRUE)  as count FROM rt60 ORDER BY 0X52f296d  NULLS LAST, (NOT (CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c0 THEN rt60.c0 WHEN rt60.c0 THEN rt60.c0 END)));
SELECT ALL COUNT(*) FROM rt60 WHERE ((((('')<=(rt60.c2)))%(((rt60.c2)AND(rt60.c2))))) ORDER BY 0X52f296d  NULLS LAST, (NOT (CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c0 THEN rt60.c0 WHEN rt60.c0 THEN rt60.c0 END));
SELECT SUM(count) FROM (SELECT (((((('')<=(rt60.c2)))%(((rt60.c2)AND(rt60.c2))))) IS TRUE)  as count FROM rt60 ORDER BY 0X52f296d  NULLS LAST, (NOT (CASE WHEN rt60.c0 THEN rt60.c1 WHEN rt60.c0 THEN rt60.c0 WHEN rt60.c0 THEN rt60.c0 END)));
SELECT COUNT(*) FROM rt60, vt0, t0, rt1, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c39 IN (v0.c0, rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c39 IN (v0.c0, rt1.c4)))))) IS TRUE)  as count FROM rt60, vt0, t0, rt1, v0);
SELECT COUNT(*) FROM rt60, vt0, t0, rt1, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c39 IN (v0.c0, rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c39 IN (v0.c0, rt1.c4)))))) IS TRUE)  as count FROM rt60, vt0, t0, rt1, v0);
SELECT COUNT(*) FROM rt60, vt0, t0, rt1, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c39 IN (v0.c0, rt1.c4))))));
SELECT * FROM rt1, t0 WHERE (((CAST('/_[&eCnҶ' AS REAL))|(((t0.c49) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('/_[&eCnҶ' AS REAL))|(((t0.c49) ISNULL)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((CAST('/_[&eCnҶ' AS REAL))|(((t0.c49) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('/_[&eCnҶ' AS REAL))|(((t0.c49) ISNULL)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((CAST('/_[&eCnҶ' AS REAL))|(((t0.c49) ISNULL))));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c87)))<<(rt1.c2)) FULL OUTER JOIN vt0 ON ((((rt60.c2)OR(((rt1.c4)-(rt1.c1)))))AND(t0.c87 COLLATE RTRIM)) RIGHT OUTER JOIN rt60 ON CAST(((((rt60.c1)OR(t0.c32)))AND(rt1.c3)) AS TEXT) WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c87)))<<(rt1.c2)) FULL OUTER JOIN vt0 ON ((((rt60.c2)OR(((rt1.c4)-(rt1.c1)))))AND(t0.c87 COLLATE RTRIM)) RIGHT OUTER JOIN rt60 ON CAST(((((rt60.c1)OR(t0.c32)))AND(rt1.c3)) AS TEXT));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c87)))<<(rt1.c2)) FULL OUTER JOIN vt0 ON ((((rt60.c2)OR(((rt1.c4)-(rt1.c1)))))AND(t0.c87 COLLATE RTRIM)) RIGHT OUTER JOIN rt60 ON CAST(((((rt60.c1)OR(t0.c32)))AND(rt1.c3)) AS TEXT) WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c87)))<<(rt1.c2)) FULL OUTER JOIN vt0 ON ((((rt60.c2)OR(((rt1.c4)-(rt1.c1)))))AND(t0.c87 COLLATE RTRIM)) RIGHT OUTER JOIN rt60 ON CAST(((((rt60.c1)OR(t0.c32)))AND(rt1.c3)) AS TEXT));
SELECT COUNT(*) FROM rt1, rt60, vt0, t0 WHERE (rt60.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt60.c2) IS TRUE)  as count FROM rt1, rt60, vt0, t0);
SELECT COUNT(*) FROM rt1, rt60, vt0, t0 WHERE (rt60.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt60.c2) IS TRUE)  as count FROM rt1, rt60, vt0, t0);
SELECT COUNT(*) FROM rt1, rt60, vt0, t0 WHERE (rt60.c2);
SELECT * FROM vt0, rt60, v0, rt1, t0 WHERE (t0.c39);
SELECT SUM(count) FROM (SELECT ALL ((t0.c39) IS TRUE)  as count FROM vt0, rt60, v0, rt1, t0);
SELECT * FROM vt0, rt60, v0, rt1, t0 WHERE (t0.c39);
SELECT SUM(count) FROM (SELECT ALL ((t0.c39) IS TRUE)  as count FROM vt0, rt60, v0, rt1, t0);
SELECT * FROM vt0, rt60, v0, rt1, t0 WHERE (t0.c39);
SELECT COUNT(*) FROM rt60 NOT INDEXED RIGHT OUTER JOIN t0 ON CAST((t0.c87 IN (rt60.c1)) AS REAL) WHERE ((((0x77b3f6bd)) BETWEEN ((((((((((t0.c87)OR(rt60.c1)))AND(t0.c32)))OR(t0.c87)))AND('')))) AND ((t0.c32))));
SELECT SUM(count) FROM (SELECT ALL (((((0x77b3f6bd)) BETWEEN ((((((((((t0.c87)OR(rt60.c1)))AND(t0.c32)))OR(t0.c87)))AND('')))) AND ((t0.c32)))) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN t0 ON CAST((t0.c87 IN (rt60.c1)) AS REAL));
SELECT COUNT(*) FROM rt60 NOT INDEXED RIGHT OUTER JOIN t0 ON CAST((t0.c87 IN (rt60.c1)) AS REAL) WHERE ((((0x77b3f6bd)) BETWEEN ((((((((((t0.c87)OR(rt60.c1)))AND(t0.c32)))OR(t0.c87)))AND('')))) AND ((t0.c32))));
SELECT SUM(count) FROM (SELECT ALL (((((0x77b3f6bd)) BETWEEN ((((((((((t0.c87)OR(rt60.c1)))AND(t0.c32)))OR(t0.c87)))AND('')))) AND ((t0.c32)))) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN t0 ON CAST((t0.c87 IN (rt60.c1)) AS REAL));
SELECT COUNT(*) FROM rt60 NOT INDEXED RIGHT OUTER JOIN t0 ON CAST((t0.c87 IN (rt60.c1)) AS REAL) WHERE ((((0x77b3f6bd)) BETWEEN ((((((((((t0.c87)OR(rt60.c1)))AND(t0.c32)))OR(t0.c87)))AND('')))) AND ((t0.c32))));
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0) IS TRUE)) IS FALSE));
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c87)) BETWEEN (((~ (t0.c87)))) AND ((t0.c32)))) ORDER BY ('Fw|&uu_' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c87)) BETWEEN (((~ (t0.c87)))) AND ((t0.c32)))) IS TRUE)  as count FROM v0, t0 ORDER BY ('Fw|&uu_' IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c87)) BETWEEN (((~ (t0.c87)))) AND ((t0.c32)))) ORDER BY ('Fw|&uu_' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c87)) BETWEEN (((~ (t0.c87)))) AND ((t0.c32)))) IS TRUE)  as count FROM v0, t0 ORDER BY ('Fw|&uu_' IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c87)) BETWEEN (((~ (t0.c87)))) AND ((t0.c32)))) ORDER BY ('Fw|&uu_' IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0, vt0, rt60 WHERE (CASE (rt1.c1 IN (rt60.c1, v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN (rt1.c2 IN (vt0.c2, rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN (rt60.c1, v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN (rt1.c2 IN (vt0.c2, rt1.c0)) END) IS TRUE)  as count FROM rt1, v0, vt0, rt60);
SELECT COUNT(*) FROM rt1, v0, vt0, rt60 WHERE (CASE (rt1.c1 IN (rt60.c1, v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN (rt1.c2 IN (vt0.c2, rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN (rt60.c1, v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN (rt1.c2 IN (vt0.c2, rt1.c0)) END) IS TRUE)  as count FROM rt1, v0, vt0, rt60);
SELECT COUNT(*) FROM rt1, v0, vt0, rt60 WHERE (CASE (rt1.c1 IN (rt60.c1, v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) THEN (rt1.c2 IN (vt0.c2, rt1.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (NULL) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN '1097196435' ELSE vt0.c0 END))) ORDER BY ((((+ (vt0.c2))))<=((LIKELY(DISTINCT 'm-M!')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOT BETWEEN (NULL) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN '1097196435' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c2))))<=((LIKELY(DISTINCT 'm-M!')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (NULL) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN '1097196435' ELSE vt0.c0 END))) ORDER BY ((((+ (vt0.c2))))<=((LIKELY(DISTINCT 'm-M!')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOT BETWEEN (NULL) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN '1097196435' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c2))))<=((LIKELY(DISTINCT 'm-M!')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (NULL) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN '1097196435' ELSE vt0.c0 END))) ORDER BY ((((+ (vt0.c2))))<=((LIKELY(DISTINCT 'm-M!')))) ASC  NULLS LAST;
SELECT * FROM t0, rt1, rt60, vt0, v0 WHERE ((CASE t0.c49  WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN (rt1.c2 COLLATE BINARY, ((x'') NOT BETWEEN (rt1.c3) AND (t0.c49))))) ORDER BY (v0.c0 IN ())  NULLS LAST, ((((((rt60.c1)>=(vt0.c1)))OR((- (vt0.c2)))))OR(TYPEOF(DISTINCT t0.c87))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE t0.c49  WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN (rt1.c2 COLLATE BINARY, ((x'') NOT BETWEEN (rt1.c3) AND (t0.c49))))) IS TRUE)  as count FROM t0, rt1, rt60, vt0, v0 ORDER BY (v0.c0 IN ())  NULLS LAST, ((((((rt60.c1)>=(vt0.c1)))OR((- (vt0.c2)))))OR(TYPEOF(DISTINCT t0.c87))) ASC  NULLS LAST);
SELECT * FROM t0, rt1, rt60, vt0, v0 WHERE ((CASE t0.c49  WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN (rt1.c2 COLLATE BINARY, ((x'') NOT BETWEEN (rt1.c3) AND (t0.c49))))) ORDER BY (v0.c0 IN ())  NULLS LAST, ((((((rt60.c1)>=(vt0.c1)))OR((- (vt0.c2)))))OR(TYPEOF(DISTINCT t0.c87))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE t0.c49  WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN (rt1.c2 COLLATE BINARY, ((x'') NOT BETWEEN (rt1.c3) AND (t0.c49))))) IS TRUE)  as count FROM t0, rt1, rt60, vt0, v0 ORDER BY (v0.c0 IN ())  NULLS LAST, ((((((rt60.c1)>=(vt0.c1)))OR((- (vt0.c2)))))OR(TYPEOF(DISTINCT t0.c87))) ASC  NULLS LAST);
SELECT * FROM t0, rt1, rt60, vt0, v0 WHERE ((CASE t0.c49  WHEN t0.c87 THEN t0.c32 ELSE t0.c32 END IN (rt1.c2 COLLATE BINARY, ((x'') NOT BETWEEN (rt1.c3) AND (t0.c49))))) ORDER BY (v0.c0 IN ())  NULLS LAST, ((((((rt60.c1)>=(vt0.c1)))OR((- (vt0.c2)))))OR(TYPEOF(DISTINCT t0.c87))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, vt0, v0, rt60 WHERE (((((((((((((CAST(rt60.c0 AS BLOB))OR(((t0.c87)%(rt1.c2)))))OR(((((((((((((rt60.c1)AND(rt60.c0)))OR(vt0.c2)))OR(x'')))OR(t0.c32)))OR(rt60.c1)))OR(rt60.c0)))))OR(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((t0.c32) IS FALSE))))OR(LAST_INSERT_ROWID())))AND(((rt60.c0)%(vt0.c0))))) ORDER BY ((x'3918')&(((((rt1.c4)OR(t0.c49)))OR(rt60.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt60.c0 AS BLOB))OR(((t0.c87)%(rt1.c2)))))OR(((((((((((((rt60.c1)AND(rt60.c0)))OR(vt0.c2)))OR(x'')))OR(t0.c32)))OR(rt60.c1)))OR(rt60.c0)))))OR(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((t0.c32) IS FALSE))))OR(LAST_INSERT_ROWID())))AND(((rt60.c0)%(vt0.c0))))) IS TRUE)  as count FROM t0, rt1, vt0, v0, rt60 ORDER BY ((x'3918')&(((((rt1.c4)OR(t0.c49)))OR(rt60.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, vt0, v0, rt60 WHERE (((((((((((((CAST(rt60.c0 AS BLOB))OR(((t0.c87)%(rt1.c2)))))OR(((((((((((((rt60.c1)AND(rt60.c0)))OR(vt0.c2)))OR(x'')))OR(t0.c32)))OR(rt60.c1)))OR(rt60.c0)))))OR(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((t0.c32) IS FALSE))))OR(LAST_INSERT_ROWID())))AND(((rt60.c0)%(vt0.c0))))) ORDER BY ((x'3918')&(((((rt1.c4)OR(t0.c49)))OR(rt60.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt60.c0 AS BLOB))OR(((t0.c87)%(rt1.c2)))))OR(((((((((((((rt60.c1)AND(rt60.c0)))OR(vt0.c2)))OR(x'')))OR(t0.c32)))OR(rt60.c1)))OR(rt60.c0)))))OR(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((t0.c32) IS FALSE))))OR(LAST_INSERT_ROWID())))AND(((rt60.c0)%(vt0.c0))))) IS TRUE)  as count FROM t0, rt1, vt0, v0, rt60 ORDER BY ((x'3918')&(((((rt1.c4)OR(t0.c49)))OR(rt60.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, vt0, v0, rt60 WHERE (((((((((((((CAST(rt60.c0 AS BLOB))OR(((t0.c87)%(rt1.c2)))))OR(((((((((((((rt60.c1)AND(rt60.c0)))OR(vt0.c2)))OR(x'')))OR(t0.c32)))OR(rt60.c1)))OR(rt60.c0)))))OR(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((t0.c32) IS FALSE))))OR(LAST_INSERT_ROWID())))AND(((rt60.c0)%(vt0.c0))))) ORDER BY ((x'3918')&(((((rt1.c4)OR(t0.c49)))OR(rt60.c1))))  NULLS LAST;
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON ((((CASE t0.c39  WHEN v0.c0 THEN t0.c49 WHEN rt60.c0 THEN vt0.c1 WHEN t0.c49 THEN vt0.c2 ELSE t0.c49 END)OR((((NULL))=((vt0.c0))))))AND(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN rt60 ON (((+ (vt0.c0)))%(json_array(t0.c39, rt60.c1))) WHERE ((((- (vt0.c2))) IS FALSE)) ORDER BY ((NOT (t0.c87)) IN (rt60.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON ((((CASE t0.c39  WHEN v0.c0 THEN t0.c49 WHEN rt60.c0 THEN vt0.c1 WHEN t0.c49 THEN vt0.c2 ELSE t0.c49 END)OR((((NULL))==((vt0.c0))))))AND(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN rt60 ON (((+ (vt0.c0)))%(json_array(t0.c39, rt60.c1))) ORDER BY ((NOT (t0.c87)) IN (rt60.c1 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON ((((CASE t0.c39  WHEN v0.c0 THEN t0.c49 WHEN rt60.c0 THEN vt0.c1 WHEN t0.c49 THEN vt0.c2 ELSE t0.c49 END)OR((((NULL))=((vt0.c0))))))AND(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN rt60 ON (((+ (vt0.c0)))%(json_array(t0.c39, rt60.c1))) WHERE ((((- (vt0.c2))) IS FALSE)) ORDER BY ((NOT (t0.c87)) IN (rt60.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON ((((CASE t0.c39  WHEN v0.c0 THEN t0.c49 WHEN rt60.c0 THEN vt0.c1 WHEN t0.c49 THEN vt0.c2 ELSE t0.c49 END)OR((((NULL))==((vt0.c0))))))AND(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN rt60 ON (((+ (vt0.c0)))%(json_array(t0.c39, rt60.c1))) ORDER BY ((NOT (t0.c87)) IN (rt60.c1 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt60, v0, t0, vt0 RIGHT OUTER JOIN rt1 ON (- (rt60.c2)) COLLATE RTRIM WHERE (((((v0.c0)+(t0.c32))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(t0.c32))) IS FALSE)) IS TRUE)  as count FROM rt60, v0, t0, vt0 RIGHT OUTER JOIN rt1 ON (- (rt60.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt60, v0, t0, vt0 RIGHT OUTER JOIN rt1 ON (- (rt60.c2)) COLLATE RTRIM WHERE (((((v0.c0)+(t0.c32))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(t0.c32))) IS FALSE)) IS TRUE)  as count FROM rt60, v0, t0, vt0 RIGHT OUTER JOIN rt1 ON (- (rt60.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt60, v0, t0, vt0 RIGHT OUTER JOIN rt1 ON (- (rt60.c2)) COLLATE RTRIM WHERE (((((v0.c0)+(t0.c32))) IS FALSE));
SELECT * FROM rt1, rt60 WHERE (CAST((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS NUMERIC)) ORDER BY INSTR(CASE WHEN rt1.c4 THEN rt1.c3 END, ((rt60.c1)IS(rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt60 ORDER BY INSTR(CASE WHEN rt1.c4 THEN rt1.c3 END, ((rt60.c1)IS(rt1.c3))) ASC);
SELECT * FROM rt1, rt60 WHERE (CAST((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS NUMERIC)) ORDER BY INSTR(CASE WHEN rt1.c4 THEN rt1.c3 END, ((rt60.c1)IS(rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt60 ORDER BY INSTR(CASE WHEN rt1.c4 THEN rt1.c3 END, ((rt60.c1)IS(rt1.c3))) ASC);
SELECT * FROM rt1, rt60 WHERE (CAST((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS NUMERIC)) ORDER BY INSTR(CASE WHEN rt1.c4 THEN rt1.c3 END, ((rt60.c1)IS(rt1.c3))) ASC;
SELECT COUNT(*) FROM rt60 FULL OUTER JOIN vt0 ON ((v0.c0) ISNULL) CROSS JOIN v0 ON (NOT (((rt60.c1)%(rt60.c2)))) FULL OUTER JOIN t0 ON ((((t0.c49 COLLATE BINARY)AND((((rt60.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((((rt60.c0)AND(vt0.c0)))OR(vt0.c1)))) WHERE (((t0.c32) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c32) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt60 FULL OUTER JOIN vt0 ON ((v0.c0) ISNULL) CROSS JOIN v0 ON (NOT (((rt60.c1)%(rt60.c2)))) FULL OUTER JOIN t0 ON ((((t0.c49 COLLATE BINARY)AND((((rt60.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((((rt60.c0)AND(vt0.c0)))OR(vt0.c1)))));
SELECT COUNT(*) FROM rt60 FULL OUTER JOIN vt0 ON ((v0.c0) ISNULL) CROSS JOIN v0 ON (NOT (((rt60.c1)%(rt60.c2)))) FULL OUTER JOIN t0 ON ((((t0.c49 COLLATE BINARY)AND((((rt60.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((((rt60.c0)AND(vt0.c0)))OR(vt0.c1)))) WHERE (((t0.c32) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c32) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt60 FULL OUTER JOIN vt0 ON ((v0.c0) ISNULL) CROSS JOIN v0 ON (NOT (((rt60.c1)%(rt60.c2)))) FULL OUTER JOIN t0 ON ((((t0.c49 COLLATE BINARY)AND((((rt60.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((((rt60.c0)AND(vt0.c0)))OR(vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((((vt0.c2, vt0.c2, 0.5105333861518155))>=((vt0.c0, vt0.c1, vt0.c2))))OR(((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))))OR(vt0.c1))) ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c2)||(x'')))))OR((vt0.c0 IN ()))) DESC, ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c2, vt0.c2, 0.5105333861518155))>=((vt0.c0, vt0.c1, vt0.c2))))OR(((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))))OR(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c2)||(x'')))))OR((vt0.c0 IN ()))) DESC, ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((vt0.c2, vt0.c2, 0.5105333861518155))>=((vt0.c0, vt0.c1, vt0.c2))))OR(((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))))OR(vt0.c1))) ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c2)||(x'')))))OR((vt0.c0 IN ()))) DESC, ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c2, vt0.c2, 0.5105333861518155))>=((vt0.c0, vt0.c1, vt0.c2))))OR(((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))))OR(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c2)||(x'')))))OR((vt0.c0 IN ()))) DESC, ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((vt0.c2, vt0.c2, 0.5105333861518155))>=((vt0.c0, vt0.c1, vt0.c2))))OR(((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))))OR(vt0.c1))) ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c2)||(x'')))))OR((vt0.c0 IN ()))) DESC, ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT * FROM t0 WHERE (UNLIKELY(t0.c39 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t0.c39 COLLATE BINARY)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (UNLIKELY(t0.c39 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t0.c39 COLLATE BINARY)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (UNLIKELY(t0.c39 COLLATE BINARY));
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c87)OR(t0.c49)))AND(t0.c39))  WHEN CAST(t0.c32 AS INTEGER) THEN ((t0.c87) BETWEEN (t0.c39) AND (t0.c87)) WHEN ((t0.c39)==(t0.c49)) THEN TOTAL_CHANGES() WHEN CASE t0.c49  WHEN t0.c49 THEN t0.c39 END THEN CASE t0.c49  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END WHEN t0.c39 THEN t0.c87 WHEN CASE WHEN t0.c87 THEN '-539599237' WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 END THEN TRIM(t0.c87) ELSE (((t0.c32)) BETWEEN ((t0.c39)) AND ((t0.c39))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c87)OR(t0.c49)))AND(t0.c39))  WHEN CAST(t0.c32 AS INTEGER) THEN ((t0.c87) BETWEEN (t0.c39) AND (t0.c87)) WHEN ((t0.c39)==(t0.c49)) THEN TOTAL_CHANGES() WHEN CASE t0.c49  WHEN t0.c49 THEN t0.c39 END THEN CASE t0.c49  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END WHEN t0.c39 THEN t0.c87 WHEN CASE WHEN t0.c87 THEN '-539599237' WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 END THEN TRIM(t0.c87) ELSE (((t0.c32)) BETWEEN ((t0.c39)) AND ((t0.c39))) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c87)OR(t0.c49)))AND(t0.c39))  WHEN CAST(t0.c32 AS INTEGER) THEN ((t0.c87) BETWEEN (t0.c39) AND (t0.c87)) WHEN ((t0.c39)==(t0.c49)) THEN TOTAL_CHANGES() WHEN CASE t0.c49  WHEN t0.c49 THEN t0.c39 END THEN CASE t0.c49  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END WHEN t0.c39 THEN t0.c87 WHEN CASE WHEN t0.c87 THEN '-539599237' WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 END THEN TRIM(t0.c87) ELSE (((t0.c32)) BETWEEN ((t0.c39)) AND ((t0.c39))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c87)OR(t0.c49)))AND(t0.c39))  WHEN CAST(t0.c32 AS INTEGER) THEN ((t0.c87) BETWEEN (t0.c39) AND (t0.c87)) WHEN ((t0.c39)==(t0.c49)) THEN TOTAL_CHANGES() WHEN CASE t0.c49  WHEN t0.c49 THEN t0.c39 END THEN CASE t0.c49  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END WHEN t0.c39 THEN t0.c87 WHEN CASE WHEN t0.c87 THEN '-539599237' WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 END THEN TRIM(t0.c87) ELSE (((t0.c32)) BETWEEN ((t0.c39)) AND ((t0.c39))) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c87)OR(t0.c49)))AND(t0.c39))  WHEN CAST(t0.c32 AS INTEGER) THEN ((t0.c87) BETWEEN (t0.c39) AND (t0.c87)) WHEN ((t0.c39)==(t0.c49)) THEN TOTAL_CHANGES() WHEN CASE t0.c49  WHEN t0.c49 THEN t0.c39 END THEN CASE t0.c49  WHEN t0.c39 THEN t0.c49 ELSE t0.c39 END WHEN t0.c39 THEN t0.c87 WHEN CASE WHEN t0.c87 THEN '-539599237' WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 END THEN TRIM(t0.c87) ELSE (((t0.c32)) BETWEEN ((t0.c39)) AND ((t0.c39))) END);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((((vt0.c1)||(vt0.c2)))-((('')!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c2)))-((('')!=(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((((vt0.c1)||(vt0.c2)))-((('')!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c2)))-((('')!=(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT COUNT(*) FROM vt0, rt1, v0 WHERE (((((vt0.c1)||(vt0.c2)))-((('')!=(rt1.c1)))));
SELECT COUNT(*) FROM vt0, rt60, rt1 WHERE (LIKELIHOOD(((rt1.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)), 0.8956318660689853)) ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, CAST(((vt0.c1)AND(rt60.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt1.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)), 0.8956318660689853)) IS TRUE)  as count FROM vt0, rt60, rt1 ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, CAST(((vt0.c1)AND(rt60.c2)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt60, rt1 WHERE (LIKELIHOOD(((rt1.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)), 0.8956318660689853)) ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, CAST(((vt0.c1)AND(rt60.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt1.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)), 0.8956318660689853)) IS TRUE)  as count FROM vt0, rt60, rt1 ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, CAST(((vt0.c1)AND(rt60.c2)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt60, rt1 WHERE (LIKELIHOOD(((rt1.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)), 0.8956318660689853)) ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, CAST(((vt0.c1)AND(rt60.c2)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN rt60 ON 1.255304392E9 FULL OUTER JOIN t0 ON 0.23275471863765917 FULL OUTER JOIN vt0 ON ((((((((((rt1.c0)GLOB(rt60.c0)))OR((rt60.c0 IN ()))))AND((NOT (vt0.c2)))))AND('0.7234790550427123')))OR(((rt60.c2) ISNULL))) CROSS JOIN rt1 ON (((((rt1.c3)) NOT BETWEEN ((t0.c39)) AND ((t0.c87))))-(x'')) WHERE ((CAST(vt0.c1 AS REAL) IN (((rt1.c3)AND(NULL)), (t0.c87 IN ()), CASE vt0.c0  WHEN NULL THEN rt60.c2 ELSE rt60.c0 END))) ORDER BY (((rt1.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN '425656932' THEN rt1.c0 ELSE rt60.c2 END)) AND ((((t0.c32) IS FALSE)))) ASC, ((((((t0.c87)AND(t0.c32)))AND(rt1.c2)))>=(((rt60.c2) BETWEEN (t0.c39) AND (t0.c32))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN (((rt1.c3)AND(NULL)), (t0.c87 IN ()), CASE vt0.c0  WHEN NULL THEN rt60.c2 ELSE rt60.c0 END))) IS TRUE)  as count FROM v0 INNER JOIN rt60 ON 1.255304392E9 FULL OUTER JOIN t0 ON 0.23275471863765917 FULL OUTER JOIN vt0 ON ((((((((((rt1.c0)GLOB(rt60.c0)))OR((rt60.c0 IN ()))))AND((NOT (vt0.c2)))))AND('0.7234790550427123')))OR(((rt60.c2) ISNULL))) CROSS JOIN rt1 ON (((((rt1.c3)) NOT BETWEEN ((t0.c39)) AND ((t0.c87))))-(x'')) ORDER BY (((rt1.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN '425656932' THEN rt1.c0 ELSE rt60.c2 END)) AND ((((t0.c32) IS FALSE)))) ASC, ((((((t0.c87)AND(t0.c32)))AND(rt1.c2)))>=(((rt60.c2) BETWEEN (t0.c39) AND (t0.c32))))  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN rt60 ON 1.255304392E9 FULL OUTER JOIN t0 ON 0.23275471863765917 FULL OUTER JOIN vt0 ON ((((((((((rt1.c0)GLOB(rt60.c0)))OR((rt60.c0 IN ()))))AND((NOT (vt0.c2)))))AND('0.7234790550427123')))OR(((rt60.c2) ISNULL))) CROSS JOIN rt1 ON (((((rt1.c3)) NOT BETWEEN ((t0.c39)) AND ((t0.c87))))-(x'')) WHERE ((CAST(vt0.c1 AS REAL) IN (((rt1.c3)AND(NULL)), (t0.c87 IN ()), CASE vt0.c0  WHEN NULL THEN rt60.c2 ELSE rt60.c0 END))) ORDER BY (((rt1.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN '425656932' THEN rt1.c0 ELSE rt60.c2 END)) AND ((((t0.c32) IS FALSE)))) ASC, ((((((t0.c87)AND(t0.c32)))AND(rt1.c2)))>=(((rt60.c2) BETWEEN (t0.c39) AND (t0.c32))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN (((rt1.c3)AND(NULL)), (t0.c87 IN ()), CASE vt0.c0  WHEN NULL THEN rt60.c2 ELSE rt60.c0 END))) IS TRUE)  as count FROM v0 INNER JOIN rt60 ON 1.255304392E9 FULL OUTER JOIN t0 ON 0.23275471863765917 FULL OUTER JOIN vt0 ON ((((((((((rt1.c0)GLOB(rt60.c0)))OR((rt60.c0 IN ()))))AND((NOT (vt0.c2)))))AND('0.7234790550427123')))OR(((rt60.c2) ISNULL))) CROSS JOIN rt1 ON (((((rt1.c3)) NOT BETWEEN ((t0.c39)) AND ((t0.c87))))-(x'')) ORDER BY (((rt1.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN '425656932' THEN rt1.c0 ELSE rt60.c2 END)) AND ((((t0.c32) IS FALSE)))) ASC, ((((((t0.c87)AND(t0.c32)))AND(rt1.c2)))>=(((rt60.c2) BETWEEN (t0.c39) AND (t0.c32))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c39 COLLATE BINARY AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c39 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL) ASC);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c39 COLLATE BINARY AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c39 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL) ASC);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c39 COLLATE BINARY AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL) ASC;
SELECT * FROM rt60, v0, vt0 WHERE (CAST((rt60.c1 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt60.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM rt60, v0, vt0);
SELECT * FROM rt60, v0, vt0 WHERE (CAST((rt60.c1 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt60.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM rt60, v0, vt0);
SELECT * FROM rt60, v0, vt0 WHERE (CAST((rt60.c1 IN ()) AS TEXT));
SELECT ALL * FROM rt1, t0, vt0, v0, rt60 WHERE ((- (((rt1.c2) IS FALSE)))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, t0, vt0, v0, rt60 ORDER BY rt1.c1 ASC);
SELECT ALL * FROM rt1, t0, vt0, v0, rt60 WHERE ((- (((rt1.c2) IS FALSE)))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, t0, vt0, v0, rt60 ORDER BY rt1.c1 ASC);
SELECT ALL * FROM rt1, t0, vt0, v0, rt60 WHERE ((- (((rt1.c2) IS FALSE)))) ORDER BY rt1.c1 ASC;
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN vt0 ON t0.c32 RIGHT OUTER JOIN rt60 ON ((t0.c87)>=(vt0.c0)) COLLATE BINARY FULL OUTER JOIN v0 ON NULL COLLATE BINARY WHERE (((((rt60.c0) NOT BETWEEN (t0.c32) AND (rt1.c4)))%(-1068060464)));
SELECT SUM(count) FROM (SELECT ((((((rt60.c0) NOT BETWEEN (t0.c32) AND (rt1.c4)))%(-1068060464))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN vt0 ON t0.c32 RIGHT OUTER JOIN rt60 ON ((t0.c87)>=(vt0.c0)) COLLATE BINARY FULL OUTER JOIN v0 ON NULL COLLATE BINARY);
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN vt0 ON t0.c32 RIGHT OUTER JOIN rt60 ON ((t0.c87)>=(vt0.c0)) COLLATE BINARY FULL OUTER JOIN v0 ON NULL COLLATE BINARY WHERE (((((rt60.c0) NOT BETWEEN (t0.c32) AND (rt1.c4)))%(-1068060464)));
SELECT SUM(count) FROM (SELECT ((((((rt60.c0) NOT BETWEEN (t0.c32) AND (rt1.c4)))%(-1068060464))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN vt0 ON t0.c32 RIGHT OUTER JOIN rt60 ON ((t0.c87)>=(vt0.c0)) COLLATE BINARY FULL OUTER JOIN v0 ON NULL COLLATE BINARY);
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN vt0 ON t0.c32 RIGHT OUTER JOIN rt60 ON ((t0.c87)>=(vt0.c0)) COLLATE BINARY FULL OUTER JOIN v0 ON NULL COLLATE BINARY WHERE (((((rt60.c0) NOT BETWEEN (t0.c32) AND (rt1.c4)))%(-1068060464)));
SELECT * FROM t0 WHERE ((((TYPEOF(DISTINCT t0.c39), (+ (t0.c49)), (- (t0.c32))))<((((((t0.c87)AND(t0.c87)))OR(t0.c39)), (~ (0.8876478247380206)), (+ (t0.c32)))))) ORDER BY (((((t0.c49) NOT NULL)))<=((x''))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(DISTINCT t0.c39), (+ (t0.c49)), (- (t0.c32))))<((((((t0.c87)AND(t0.c87)))OR(t0.c39)), (~ (0.8876478247380206)), (+ (t0.c32)))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c49) NOT NULL)))<=((x''))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((TYPEOF(DISTINCT t0.c39), (+ (t0.c49)), (- (t0.c32))))<((((((t0.c87)AND(t0.c87)))OR(t0.c39)), (~ (0.8876478247380206)), (+ (t0.c32)))))) ORDER BY (((((t0.c49) NOT NULL)))<=((x''))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(DISTINCT t0.c39), (+ (t0.c49)), (- (t0.c32))))<((((((t0.c87)AND(t0.c87)))OR(t0.c39)), (~ (0.8876478247380206)), (+ (t0.c32)))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c49) NOT NULL)))<=((x''))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((TYPEOF(DISTINCT t0.c39), (+ (t0.c49)), (- (t0.c32))))<((((((t0.c87)AND(t0.c87)))OR(t0.c39)), (~ (0.8876478247380206)), (+ (t0.c32)))))) ORDER BY (((((t0.c49) NOT NULL)))<=((x''))) ASC  NULLS FIRST;
SELECT * FROM v0, rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN (v0.c0)))=((0.696284256696721 IN (rt1.c1, rt1.c1)))) WHERE (CASE t0.c32  WHEN ((t0.c49) NOT BETWEEN (t0.c39) AND (0Xffffffffce663864)) THEN (NOT (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c32  WHEN ((t0.c49) NOT BETWEEN (t0.c39) AND (0xffffffffce663864)) THEN (NOT (rt1.c1)) END) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN (v0.c0)))=((0.696284256696721 IN (rt1.c1, rt1.c1)))));
SELECT * FROM v0, rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN (v0.c0)))=((0.696284256696721 IN (rt1.c1, rt1.c1)))) WHERE (CASE t0.c32  WHEN ((t0.c49) NOT BETWEEN (t0.c39) AND (0Xffffffffce663864)) THEN (NOT (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c32  WHEN ((t0.c49) NOT BETWEEN (t0.c39) AND (0xffffffffce663864)) THEN (NOT (rt1.c1)) END) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN (v0.c0)))=((0.696284256696721 IN (rt1.c1, rt1.c1)))));
SELECT * FROM v0, rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN (v0.c0)))=((0.696284256696721 IN (rt1.c1, rt1.c1)))) WHERE (CASE t0.c32  WHEN ((t0.c49) NOT BETWEEN (t0.c39) AND (0Xffffffffce663864)) THEN (NOT (rt1.c1)) END);
SELECT * FROM vt0, v0, rt60, rt1 WHERE (((rt1.c3) BETWEEN ((((rt60.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((v0.c0) IS TRUE)))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) BETWEEN ((((rt60.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, rt60, rt1 ORDER BY (NULL IN ()) ASC);
SELECT * FROM vt0, v0, rt60, rt1 WHERE (((rt1.c3) BETWEEN ((((rt60.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((v0.c0) IS TRUE)))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) BETWEEN ((((rt60.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, rt60, rt1 ORDER BY (NULL IN ()) ASC);
SELECT * FROM vt0, v0, rt60, rt1 WHERE (((rt1.c3) BETWEEN ((((rt60.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((v0.c0) IS TRUE)))) ORDER BY (NULL IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)IS(vt0.c0))))) ORDER BY ((((vt0.c2)-(vt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND (0.554968979851083));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)-(vt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND (0.554968979851083)));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)IS(vt0.c0))))) ORDER BY ((((vt0.c2)-(vt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND (0.554968979851083));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)-(vt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND (0.554968979851083)));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)IS(vt0.c0))))) ORDER BY ((((vt0.c2)-(vt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND (0.554968979851083));
SELECT ALL COUNT(*) FROM rt1, t0 FULL OUTER JOIN rt60 ON ((((((rt60.c0) BETWEEN (v0.c0) AND (rt1.c1)))OR(NULL)))OR(-728094923)) FULL OUTER JOIN v0 ON CAST((- (rt1.c4)) AS INTEGER) WHERE ((- ((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN rt60 ON ((((((rt60.c0) BETWEEN (v0.c0) AND (rt1.c1)))OR(NULL)))OR(-728094923)) FULL OUTER JOIN v0 ON CAST((- (rt1.c4)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, t0 FULL OUTER JOIN rt60 ON ((((((rt60.c0) BETWEEN (v0.c0) AND (rt1.c1)))OR(NULL)))OR(-728094923)) FULL OUTER JOIN v0 ON CAST((- (rt1.c4)) AS INTEGER) WHERE ((- ((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN rt60 ON ((((((rt60.c0) BETWEEN (v0.c0) AND (rt1.c1)))OR(NULL)))OR(-728094923)) FULL OUTER JOIN v0 ON CAST((- (rt1.c4)) AS INTEGER));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CAST(((rt1.c3) BETWEEN (t0.c39) AND (t0.c32)) AS REAL) WHERE ((((t0.c87 IN (t0.c49))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87 IN (t0.c49))) ISNULL)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CAST(((rt1.c3) BETWEEN (t0.c39) AND (t0.c32)) AS REAL));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CAST(((rt1.c3) BETWEEN (t0.c39) AND (t0.c32)) AS REAL) WHERE ((((t0.c87 IN (t0.c49))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87 IN (t0.c49))) ISNULL)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CAST(((rt1.c3) BETWEEN (t0.c39) AND (t0.c32)) AS REAL));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CAST(((rt1.c3) BETWEEN (t0.c39) AND (t0.c32)) AS REAL) WHERE ((((t0.c87 IN (t0.c49))) ISNULL));
SELECT COUNT(*) FROM vt0, rt60, rt1, t0, v0 WHERE (((+ (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt0, rt60, rt1, t0, v0);
SELECT COUNT(*) FROM vt0, rt60, rt1, t0, v0 WHERE (((+ (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt0, rt60, rt1, t0, v0);
SELECT COUNT(*) FROM vt0, rt60, rt1, t0, v0 WHERE (((+ (rt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((((TRIM(DISTINCT t0.c39, t0.c49))AND(((v0.c0)<>(rt1.c3)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT t0.c39, t0.c49))AND(((v0.c0)!=(rt1.c3)))))AND(NULL))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((((TRIM(DISTINCT t0.c39, t0.c49))AND(((v0.c0)<>(rt1.c3)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT t0.c39, t0.c49))AND(((v0.c0)!=(rt1.c3)))))AND(NULL))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((((TRIM(DISTINCT t0.c39, t0.c49))AND(((v0.c0)<>(rt1.c3)))))AND(NULL)));
SELECT * FROM t0 LEFT OUTER JOIN rt60 ON (t0.c87 IN ()) COLLATE RTRIM INNER JOIN vt0 ON TRIM(DISTINCT (t0.c32 IN (t0.c49))) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt60 ON (t0.c87 IN ()) COLLATE RTRIM INNER JOIN vt0 ON TRIM(DISTINCT (t0.c32 IN (t0.c49))));
SELECT * FROM t0 LEFT OUTER JOIN rt60 ON (t0.c87 IN ()) COLLATE RTRIM INNER JOIN vt0 ON TRIM(DISTINCT (t0.c32 IN (t0.c49))) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt60 ON (t0.c87 IN ()) COLLATE RTRIM INNER JOIN vt0 ON TRIM(DISTINCT (t0.c32 IN (t0.c49))));
SELECT * FROM t0 LEFT OUTER JOIN rt60 ON (t0.c87 IN ()) COLLATE RTRIM INNER JOIN vt0 ON TRIM(DISTINCT (t0.c32 IN (t0.c49))) WHERE (vt0.c2);
SELECT COUNT(*) FROM v0, t0 WHERE ((((- (v0.c0)))&(CASE t0.c49  WHEN t0.c87 THEN t0.c39 END)));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))&(CASE t0.c49  WHEN t0.c87 THEN t0.c39 END))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((- (v0.c0)))&(CASE t0.c49  WHEN t0.c87 THEN t0.c39 END)));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))&(CASE t0.c49  WHEN t0.c87 THEN t0.c39 END))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((- (v0.c0)))&(CASE t0.c49  WHEN t0.c87 THEN t0.c39 END)));
SELECT ALL COUNT(*) FROM rt1, v0, vt0, t0, rt60 WHERE (((((((t0.c87, vt0.c2, rt1.c4)) BETWEEN ((vt0.c0, rt1.c4, vt0.c1)) AND ((0.0649829365736948, rt60.c2, t0.c87))), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(x'')))AND(vt0.c0))))<((TRIM(DISTINCT rt60.c0, vt0.c1), (- (rt1.c4)), ((rt60.c1) BETWEEN (t0.c32) AND (t0.c49))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c87, vt0.c2, rt1.c4)) BETWEEN ((vt0.c0, rt1.c4, vt0.c1)) AND ((0.0649829365736948, rt60.c2, t0.c87))), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(x'')))AND(vt0.c0))))<((TRIM(DISTINCT rt60.c0, vt0.c1), (- (rt1.c4)), ((rt60.c1) BETWEEN (t0.c32) AND (t0.c49)))))) IS TRUE)  as count FROM rt1, v0, vt0, t0, rt60);
SELECT ALL COUNT(*) FROM rt1, v0, vt0, t0, rt60 WHERE (((((((t0.c87, vt0.c2, rt1.c4)) BETWEEN ((vt0.c0, rt1.c4, vt0.c1)) AND ((0.0649829365736948, rt60.c2, t0.c87))), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(x'')))AND(vt0.c0))))<((TRIM(DISTINCT rt60.c0, vt0.c1), (- (rt1.c4)), ((rt60.c1) BETWEEN (t0.c32) AND (t0.c49))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c87, vt0.c2, rt1.c4)) BETWEEN ((vt0.c0, rt1.c4, vt0.c1)) AND ((0.0649829365736948, rt60.c2, t0.c87))), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(x'')))AND(vt0.c0))))<((TRIM(DISTINCT rt60.c0, vt0.c1), (- (rt1.c4)), ((rt60.c1) BETWEEN (t0.c32) AND (t0.c49)))))) IS TRUE)  as count FROM rt1, v0, vt0, t0, rt60);
SELECT ALL COUNT(*) FROM rt1, v0, vt0, t0, rt60 WHERE (((((((t0.c87, vt0.c2, rt1.c4)) BETWEEN ((vt0.c0, rt1.c4, vt0.c1)) AND ((0.0649829365736948, rt60.c2, t0.c87))), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(x'')))AND(vt0.c0))))<((TRIM(DISTINCT rt60.c0, vt0.c1), (- (rt1.c4)), ((rt60.c1) BETWEEN (t0.c32) AND (t0.c49))))));
SELECT ALL COUNT(*) FROM t0, v0, rt60, vt0, rt1 WHERE (vt0.c2) ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((rt1.c3) IS FALSE) ELSE CASE WHEN t0.c87 THEN t0.c49 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, v0, rt60, vt0, rt1 ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((rt1.c3) IS FALSE) ELSE CASE WHEN t0.c87 THEN t0.c49 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, rt60, vt0, rt1 WHERE (vt0.c2) ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((rt1.c3) IS FALSE) ELSE CASE WHEN t0.c87 THEN t0.c49 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, v0, rt60, vt0, rt1 ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((rt1.c3) IS FALSE) ELSE CASE WHEN t0.c87 THEN t0.c49 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, rt60, vt0, rt1 WHERE (vt0.c2) ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((rt1.c3) IS FALSE) ELSE CASE WHEN t0.c87 THEN t0.c49 END END  NULLS LAST;
SELECT * FROM rt60, rt1, t0, v0, vt0 WHERE ((((((rt60.c0 IN ()))AND(rt1.c3)))AND(t0.c87))) ORDER BY (~ (TRIM(vt0.c1, t0.c32))) DESC, ((((t0.c32)-(t0.c87))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt60.c0 IN ()))AND(rt1.c3)))AND(t0.c87))) IS TRUE)  as count FROM rt60, rt1, t0, v0, vt0 ORDER BY (~ (TRIM(vt0.c1, t0.c32))) DESC, ((((t0.c32)-(t0.c87))) IS FALSE) ASC);
SELECT * FROM rt60, rt1, t0, v0, vt0 WHERE ((((((rt60.c0 IN ()))AND(rt1.c3)))AND(t0.c87))) ORDER BY (~ (TRIM(vt0.c1, t0.c32))) DESC, ((((t0.c32)-(t0.c87))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt60.c0 IN ()))AND(rt1.c3)))AND(t0.c87))) IS TRUE)  as count FROM rt60, rt1, t0, v0, vt0 ORDER BY (~ (TRIM(vt0.c1, t0.c32))) DESC, ((((t0.c32)-(t0.c87))) IS FALSE) ASC);
SELECT * FROM rt60, rt1, t0, v0, vt0 WHERE ((((((rt60.c0 IN ()))AND(rt1.c3)))AND(t0.c87))) ORDER BY (~ (TRIM(vt0.c1, t0.c32))) DESC, ((((t0.c32)-(t0.c87))) IS FALSE) ASC;
SELECT ALL * FROM v0, rt1 FULL OUTER JOIN t0 ON TYPEOF(CAST(vt0.c0 AS BLOB)) INNER JOIN vt0 ON CAST((t0.c39 IN (rt1.c2)) AS INTEGER) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON TYPEOF(CAST(vt0.c0 AS BLOB)) INNER JOIN vt0 ON CAST((t0.c39 IN (rt1.c2)) AS INTEGER));
SELECT ALL * FROM v0, rt1 FULL OUTER JOIN t0 ON TYPEOF(CAST(vt0.c0 AS BLOB)) INNER JOIN vt0 ON CAST((t0.c39 IN (rt1.c2)) AS INTEGER) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON TYPEOF(CAST(vt0.c0 AS BLOB)) INNER JOIN vt0 ON CAST((t0.c39 IN (rt1.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0, v0 RIGHT OUTER JOIN rt60 ON (- (CASE WHEN t0.c49 THEN rt1.c4 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON TYPEOF(((vt0.c2) NOT BETWEEN (t0.c87) AND (t0.c32))) WHERE ((((((((((v0.c0)AND(rt60.c2)))OR(rt1.c4)))OR(t0.c32)))AND(rt1.c0)) IN ())) ORDER BY (((vt0.c2 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0)AND(rt60.c2)))OR(rt1.c4)))OR(t0.c32)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, v0 RIGHT OUTER JOIN rt60 ON (- (CASE WHEN t0.c49 THEN rt1.c4 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON TYPEOF(((vt0.c2) NOT BETWEEN (t0.c87) AND (t0.c32))) ORDER BY (((vt0.c2 IN ())) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 RIGHT OUTER JOIN rt60 ON (- (CASE WHEN t0.c49 THEN rt1.c4 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON TYPEOF(((vt0.c2) NOT BETWEEN (t0.c87) AND (t0.c32))) WHERE ((((((((((v0.c0)AND(rt60.c2)))OR(rt1.c4)))OR(t0.c32)))AND(rt1.c0)) IN ())) ORDER BY (((vt0.c2 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0)AND(rt60.c2)))OR(rt1.c4)))OR(t0.c32)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, v0 RIGHT OUTER JOIN rt60 ON (- (CASE WHEN t0.c49 THEN rt1.c4 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON TYPEOF(((vt0.c2) NOT BETWEEN (t0.c87) AND (t0.c32))) ORDER BY (((vt0.c2 IN ())) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt60 WHERE (CASE WHEN rt60.c0 COLLATE RTRIM THEN LIKELIHOOD(DISTINCT rt60.c2, 0.9550539863999375) ELSE (NOT (rt60.c2)) END) ORDER BY (- ((((v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c0, rt60.c2, rt60.c1)) AND ((rt60.c2, rt60.c0, rt60.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt60.c0 COLLATE RTRIM THEN LIKELIHOOD(DISTINCT rt60.c2, 0.9550539863999375) ELSE (NOT (rt60.c2)) END) IS TRUE)  as count FROM v0, rt60 ORDER BY (- ((((v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c0, rt60.c2, rt60.c1)) AND ((rt60.c2, rt60.c0, rt60.c2))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt60 WHERE (CASE WHEN rt60.c0 COLLATE RTRIM THEN LIKELIHOOD(DISTINCT rt60.c2, 0.9550539863999375) ELSE (NOT (rt60.c2)) END) ORDER BY (- ((((v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c0, rt60.c2, rt60.c1)) AND ((rt60.c2, rt60.c0, rt60.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt60.c0 COLLATE RTRIM THEN LIKELIHOOD(DISTINCT rt60.c2, 0.9550539863999375) ELSE (NOT (rt60.c2)) END) IS TRUE)  as count FROM v0, rt60 ORDER BY (- ((((v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c0, rt60.c2, rt60.c1)) AND ((rt60.c2, rt60.c0, rt60.c2))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt60 WHERE (CASE WHEN rt60.c0 COLLATE RTRIM THEN LIKELIHOOD(DISTINCT rt60.c2, 0.9550539863999375) ELSE (NOT (rt60.c2)) END) ORDER BY (- ((((v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c0, rt60.c2, rt60.c1)) AND ((rt60.c2, rt60.c0, rt60.c2))))) DESC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((TRIM(t0.c87, rt1.c1))AND(4.25656932E8)))AND(((t0.c32) BETWEEN (t0.c49) AND (NULL))))) ORDER BY ((CASE WHEN rt1.c4 THEN t0.c39 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN NULL END) BETWEEN (((t0.c39)/(t0.c49))) AND ((((rt1.c3, t0.c87, t0.c49))<>((0.9227992300064303, x'', rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)LIKE(t0.c39)))AND(((rt1.c2)IS(rt1.c2)))))AND(rt1.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t0.c87, rt1.c1))AND(4.25656932E8)))AND(((t0.c32) BETWEEN (t0.c49) AND (NULL))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN rt1.c4 THEN t0.c39 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN NULL END) BETWEEN (((t0.c39)/(t0.c49))) AND ((((rt1.c3, t0.c87, t0.c49))!=((0.9227992300064303, x'', rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)LIKE(t0.c39)))AND(((rt1.c2)IS(rt1.c2)))))AND(rt1.c4 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((TRIM(t0.c87, rt1.c1))AND(4.25656932E8)))AND(((t0.c32) BETWEEN (t0.c49) AND (NULL))))) ORDER BY ((CASE WHEN rt1.c4 THEN t0.c39 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN NULL END) BETWEEN (((t0.c39)/(t0.c49))) AND ((((rt1.c3, t0.c87, t0.c49))<>((0.9227992300064303, x'', rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)LIKE(t0.c39)))AND(((rt1.c2)IS(rt1.c2)))))AND(rt1.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t0.c87, rt1.c1))AND(4.25656932E8)))AND(((t0.c32) BETWEEN (t0.c49) AND (NULL))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN rt1.c4 THEN t0.c39 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN NULL END) BETWEEN (((t0.c39)/(t0.c49))) AND ((((rt1.c3, t0.c87, t0.c49))!=((0.9227992300064303, x'', rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)LIKE(t0.c39)))AND(((rt1.c2)IS(rt1.c2)))))AND(rt1.c4 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((TRIM(t0.c87, rt1.c1))AND(4.25656932E8)))AND(((t0.c32) BETWEEN (t0.c49) AND (NULL))))) ORDER BY ((CASE WHEN rt1.c4 THEN t0.c39 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN NULL END) BETWEEN (((t0.c39)/(t0.c49))) AND ((((rt1.c3, t0.c87, t0.c49))<>((0.9227992300064303, x'', rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)LIKE(t0.c39)))AND(((rt1.c2)IS(rt1.c2)))))AND(rt1.c4 COLLATE BINARY));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c3 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c2)) AND (CASE rt1.c0  WHEN rt60.c2 THEN vt0.c0 END)) INNER JOIN rt60 ON ((NULL) NOTNULL) CROSS JOIN vt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS BLOB) WHERE ((((((('-106408444')AND(rt60.c0)))OR(t0.c87))) NOT BETWEEN (((rt60.c0) NOT BETWEEN ('') AND (rt60.c0))) AND (CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c2 END))) ORDER BY CASE ((t0.c49)IS NOT(vt0.c2))  WHEN ((t0.c39) IS TRUE) THEN rt1.c0 COLLATE BINARY WHEN NULLIF(vt0.c2, vt0.c2) THEN (+ (vt0.c1)) WHEN (vt0.c1 IN (rt1.c4)) THEN ((t0.c49) IS TRUE) ELSE '' END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((('-106408444')AND(rt60.c0)))OR(t0.c87))) NOT BETWEEN (((rt60.c0) NOT BETWEEN ('') AND (rt60.c0))) AND (CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c2 END))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c3 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c2)) AND (CASE rt1.c0  WHEN rt60.c2 THEN vt0.c0 END)) INNER JOIN rt60 ON ((NULL) NOTNULL) CROSS JOIN vt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS BLOB) ORDER BY CASE ((t0.c49)IS NOT(vt0.c2))  WHEN ((t0.c39) IS TRUE) THEN rt1.c0 COLLATE BINARY WHEN NULLIF(vt0.c2, vt0.c2) THEN (+ (vt0.c1)) WHEN (vt0.c1 IN (rt1.c4)) THEN ((t0.c49) IS TRUE) ELSE '' END ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c3 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c2)) AND (CASE rt1.c0  WHEN rt60.c2 THEN vt0.c0 END)) INNER JOIN rt60 ON ((NULL) NOTNULL) CROSS JOIN vt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS BLOB) WHERE ((((((('-106408444')AND(rt60.c0)))OR(t0.c87))) NOT BETWEEN (((rt60.c0) NOT BETWEEN ('') AND (rt60.c0))) AND (CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c2 END))) ORDER BY CASE ((t0.c49)IS NOT(vt0.c2))  WHEN ((t0.c39) IS TRUE) THEN rt1.c0 COLLATE BINARY WHEN NULLIF(vt0.c2, vt0.c2) THEN (+ (vt0.c1)) WHEN (vt0.c1 IN (rt1.c4)) THEN ((t0.c49) IS TRUE) ELSE '' END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((('-106408444')AND(rt60.c0)))OR(t0.c87))) NOT BETWEEN (((rt60.c0) NOT BETWEEN ('') AND (rt60.c0))) AND (CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c2 END))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c3 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c2)) AND (CASE rt1.c0  WHEN rt60.c2 THEN vt0.c0 END)) INNER JOIN rt60 ON ((NULL) NOTNULL) CROSS JOIN vt0 ON CAST(CAST(vt0.c2 AS INTEGER) AS BLOB) ORDER BY CASE ((t0.c49)IS NOT(vt0.c2))  WHEN ((t0.c39) IS TRUE) THEN rt1.c0 COLLATE BINARY WHEN NULLIF(vt0.c2, vt0.c2) THEN (+ (vt0.c1)) WHEN (vt0.c1 IN (rt1.c4)) THEN ((t0.c49) IS TRUE) ELSE '' END ASC);
SELECT * FROM t0 WHERE (((CASE t0.c39  WHEN t0.c49 THEN t0.c87 ELSE t0.c49 END) NOT BETWEEN ((- (t0.c49))) AND (TRIM(t0.c49)))) ORDER BY t0.c39 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c39  WHEN t0.c49 THEN t0.c87 ELSE t0.c49 END) NOT BETWEEN ((- (t0.c49))) AND (TRIM(t0.c49)))) IS TRUE)  as count FROM t0 ORDER BY t0.c39 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CASE t0.c39  WHEN t0.c49 THEN t0.c87 ELSE t0.c49 END) NOT BETWEEN ((- (t0.c49))) AND (TRIM(t0.c49)))) ORDER BY t0.c39 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c39  WHEN t0.c49 THEN t0.c87 ELSE t0.c49 END) NOT BETWEEN ((- (t0.c49))) AND (TRIM(t0.c49)))) IS TRUE)  as count FROM t0 ORDER BY t0.c39 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CASE t0.c39  WHEN t0.c49 THEN t0.c87 ELSE t0.c49 END) NOT BETWEEN ((- (t0.c49))) AND (TRIM(t0.c49)))) ORDER BY t0.c39 COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1)<>(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)!=(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1)<>(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)!=(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1)<>(rt1.c0)) AS NUMERIC));
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST, UNLIKELY(DISTINCT (- (vt0.c1))) ASC  NULLS LAST, ((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c2 IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('')))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, UNLIKELY(DISTINCT (- (vt0.c1))) ASC  NULLS LAST, ((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c2 IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('')))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST, UNLIKELY(DISTINCT (- (vt0.c1))) ASC  NULLS LAST, ((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c2 IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('')))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, UNLIKELY(DISTINCT (- (vt0.c1))) ASC  NULLS LAST, ((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c2 IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('')))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST, UNLIKELY(DISTINCT (- (vt0.c1))) ASC  NULLS LAST, ((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c2 IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('')))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, t0, rt60 WHERE ((((((((491148764))<((v0.c0))))AND(t0.c87)))OR(((rt60.c1)>(rt60.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((491148764))<((v0.c0))))AND(t0.c87)))OR(((rt60.c1)>(rt60.c0))))) IS TRUE)  as count FROM v0, t0, rt60);
SELECT * FROM v0, t0, rt60 WHERE ((((((((491148764))<((v0.c0))))AND(t0.c87)))OR(((rt60.c1)>(rt60.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((491148764))<((v0.c0))))AND(t0.c87)))OR(((rt60.c1)>(rt60.c0))))) IS TRUE)  as count FROM v0, t0, rt60);
SELECT * FROM v0, t0, rt60 WHERE ((((((((491148764))<((v0.c0))))AND(t0.c87)))OR(((rt60.c1)>(rt60.c0)))));
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt60 WHERE (((((((rt60.c0)OR(rt60.c2)))OR(rt60.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt60.c0)OR(rt60.c2)))OR(rt60.c1))) IS TRUE)) IS TRUE)  as count FROM rt1 NATURAL JOIN rt60);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt60 WHERE (((((((rt60.c0)OR(rt60.c2)))OR(rt60.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt60.c0)OR(rt60.c2)))OR(rt60.c1))) IS TRUE)) IS TRUE)  as count FROM rt1 NATURAL JOIN rt60);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt60 WHERE (((((((rt60.c0)OR(rt60.c2)))OR(rt60.c1))) IS TRUE));
SELECT * FROM rt1, rt60, vt0, v0, t0 WHERE (((((rt60.c0)<(rt60.c2)))<(((rt60.c0)<<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt60.c0)<(rt60.c2)))<(((rt60.c0)<<(rt1.c2))))) IS TRUE)  as count FROM rt1, rt60, vt0, v0, t0);
SELECT * FROM rt1, rt60, vt0, v0, t0 WHERE (((((rt60.c0)<(rt60.c2)))<(((rt60.c0)<<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt60.c0)<(rt60.c2)))<(((rt60.c0)<<(rt1.c2))))) IS TRUE)  as count FROM rt1, rt60, vt0, v0, t0);
SELECT * FROM rt1, rt60, vt0, v0, t0 WHERE (((((rt60.c0)<(rt60.c2)))<(((rt60.c0)<<(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((rt60.c2, t0.c39, rt60.c0, vt0.c0, rt60.c2))==((rt60.c2, t0.c87, vt0.c0, vt0.c1, t0.c49))) IN (((rt60.c2)>=(rt60.c1)))) LEFT OUTER JOIN rt60 ON CAST((rt60.c2 IN ()) AS BLOB) WHERE ((((((t0.c49, vt0.c2, vt0.c2, t0.c32, vt0.c1))<=((t0.c39, rt60.c1, t0.c87, t0.c49, t0.c87)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c49, vt0.c2, vt0.c2, t0.c32, vt0.c1))<=((t0.c39, rt60.c1, t0.c87, t0.c49, t0.c87)))) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((rt60.c2, t0.c39, rt60.c0, vt0.c0, rt60.c2))=((rt60.c2, t0.c87, vt0.c0, vt0.c1, t0.c49))) IN (((rt60.c2)>=(rt60.c1)))) LEFT OUTER JOIN rt60 ON CAST((rt60.c2 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((rt60.c2, t0.c39, rt60.c0, vt0.c0, rt60.c2))==((rt60.c2, t0.c87, vt0.c0, vt0.c1, t0.c49))) IN (((rt60.c2)>=(rt60.c1)))) LEFT OUTER JOIN rt60 ON CAST((rt60.c2 IN ()) AS BLOB) WHERE ((((((t0.c49, vt0.c2, vt0.c2, t0.c32, vt0.c1))<=((t0.c39, rt60.c1, t0.c87, t0.c49, t0.c87)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c49, vt0.c2, vt0.c2, t0.c32, vt0.c1))<=((t0.c39, rt60.c1, t0.c87, t0.c49, t0.c87)))) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((rt60.c2, t0.c39, rt60.c0, vt0.c0, rt60.c2))=((rt60.c2, t0.c87, vt0.c0, vt0.c1, t0.c49))) IN (((rt60.c2)>=(rt60.c1)))) LEFT OUTER JOIN rt60 ON CAST((rt60.c2 IN ()) AS BLOB));
SELECT COUNT(*) FROM rt60, t0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) BETWEEN ((((rt60.c0)*(t0.c49)))) AND ((CAST(rt60.c2 AS REAL)))) WHERE (CASE CASE v0.c0  WHEN t0.c49 THEN t0.c32 ELSE rt60.c1 END  WHEN rt60.c0 THEN ((v0.c0) IS TRUE) ELSE t0.c32 COLLATE NOCASE END) ORDER BY (((rt1.c1, rt1.c1, 1.321427895E9))>=((rt60.c1, rt1.c4, t0.c87))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c0  WHEN t0.c49 THEN t0.c32 ELSE rt60.c1 END  WHEN rt60.c0 THEN ((v0.c0) IS TRUE) ELSE t0.c32 COLLATE NOCASE END) IS TRUE)  as count FROM rt60, t0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) BETWEEN ((((rt60.c0)*(t0.c49)))) AND ((CAST(rt60.c2 AS REAL)))) ORDER BY (((rt1.c1, rt1.c1, 1.321427895E9))>=((rt60.c1, rt1.c4, t0.c87))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt60, t0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) BETWEEN ((((rt60.c0)*(t0.c49)))) AND ((CAST(rt60.c2 AS REAL)))) WHERE (CASE CASE v0.c0  WHEN t0.c49 THEN t0.c32 ELSE rt60.c1 END  WHEN rt60.c0 THEN ((v0.c0) IS TRUE) ELSE t0.c32 COLLATE NOCASE END) ORDER BY (((rt1.c1, rt1.c1, 1.321427895E9))>=((rt60.c1, rt1.c4, t0.c87))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c0  WHEN t0.c49 THEN t0.c32 ELSE rt60.c1 END  WHEN rt60.c0 THEN ((v0.c0) IS TRUE) ELSE t0.c32 COLLATE NOCASE END) IS TRUE)  as count FROM rt60, t0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) BETWEEN ((((rt60.c0)*(t0.c49)))) AND ((CAST(rt60.c2 AS REAL)))) ORDER BY (((rt1.c1, rt1.c1, 1.321427895E9))>=((rt60.c1, rt1.c4, t0.c87))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt60, t0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) BETWEEN ((((rt60.c0)*(t0.c49)))) AND ((CAST(rt60.c2 AS REAL)))) WHERE (CASE CASE v0.c0  WHEN t0.c49 THEN t0.c32 ELSE rt60.c1 END  WHEN rt60.c0 THEN ((v0.c0) IS TRUE) ELSE t0.c32 COLLATE NOCASE END) ORDER BY (((rt1.c1, rt1.c1, 1.321427895E9))>=((rt60.c1, rt1.c4, t0.c87))) COLLATE BINARY ASC;
SELECT ALL * FROM rt60 NATURAL JOIN rt1 WHERE ((((rt60.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt60.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt60 NATURAL JOIN rt1);
SELECT ALL * FROM rt60 NATURAL JOIN rt1 WHERE ((((rt60.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt60.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt60 NATURAL JOIN rt1);
SELECT ALL * FROM rt60 NATURAL JOIN rt1 WHERE ((((rt60.c1 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM rt60, rt1 WHERE (((('-1377225799') NOT BETWEEN (rt60.c1) AND (rt1.c1)) IN (rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((('-1377225799') NOT BETWEEN (rt60.c1) AND (rt1.c1)) IN (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt60, rt1);
SELECT ALL COUNT(*) FROM rt60, rt1 WHERE (((('-1377225799') NOT BETWEEN (rt60.c1) AND (rt1.c1)) IN (rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((('-1377225799') NOT BETWEEN (rt60.c1) AND (rt1.c1)) IN (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt60, rt1);
SELECT ALL COUNT(*) FROM rt60, rt1 WHERE (((('-1377225799') NOT BETWEEN (rt60.c1) AND (rt1.c1)) IN (rt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((('786815327' COLLATE NOCASE)OR((- (t0.c39)))))OR(((((t0.c87)OR(t0.c39)))OR(t0.c32)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (((('786815327' COLLATE NOCASE)OR((- (t0.c39)))))OR(((((t0.c87)OR(t0.c39)))OR(t0.c32)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((('786815327' COLLATE NOCASE)OR((- (t0.c39)))))OR(((((t0.c87)OR(t0.c39)))OR(t0.c32)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (((('786815327' COLLATE NOCASE)OR((- (t0.c39)))))OR(((((t0.c87)OR(t0.c39)))OR(t0.c32)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((('786815327' COLLATE NOCASE)OR((- (t0.c39)))))OR(((((t0.c87)OR(t0.c39)))OR(t0.c32)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt60, t0, rt1 WHERE (SUBSTR(rt1.c2 COLLATE NOCASE, 0.057725425043578804)) ORDER BY ((TRIM(t0.c39)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(rt1.c2 COLLATE NOCASE, 0.057725425043578804)) IS TRUE)  as count FROM vt0, rt60, t0, rt1 ORDER BY ((TRIM(t0.c39)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt60, t0, rt1 WHERE (SUBSTR(rt1.c2 COLLATE NOCASE, 0.057725425043578804)) ORDER BY ((TRIM(t0.c39)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(rt1.c2 COLLATE NOCASE, 0.057725425043578804)) IS TRUE)  as count FROM vt0, rt60, t0, rt1 ORDER BY ((TRIM(t0.c39)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt60, t0, rt1 WHERE (SUBSTR(rt1.c2 COLLATE NOCASE, 0.057725425043578804)) ORDER BY ((TRIM(t0.c39)) IS FALSE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)/(vt0.c2)) THEN ((vt0.c1)<<(vt0.c2)) END) ORDER BY CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(x'')))AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR('1482021198')))AND(vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) ELSE (vt0.c0 IN (vt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c2)/(vt0.c2)) THEN ((vt0.c1)<<(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(x'')))AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR('1482021198')))AND(vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) ELSE (vt0.c0 IN (vt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)/(vt0.c2)) THEN ((vt0.c1)<<(vt0.c2)) END) ORDER BY CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(x'')))AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR('1482021198')))AND(vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) ELSE (vt0.c0 IN (vt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c2)/(vt0.c2)) THEN ((vt0.c1)<<(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(x'')))AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR('1482021198')))AND(vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) ELSE (vt0.c0 IN (vt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)/(vt0.c2)) THEN ((vt0.c1)<<(vt0.c2)) END) ORDER BY CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(x'')))AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR('1482021198')))AND(vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) ELSE (vt0.c0 IN (vt0.c2)) END ASC;
SELECT ALL COUNT(*) FROM rt60, t0, rt1, v0 WHERE (((CAST(rt1.c3 AS INTEGER))LIKE((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c4))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS INTEGER))LIKE((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c4)))))) IS TRUE)  as count FROM rt60, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt60, t0, rt1, v0 WHERE (((CAST(rt1.c3 AS INTEGER))LIKE((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c4))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS INTEGER))LIKE((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c4)))))) IS TRUE)  as count FROM rt60, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt60, t0, rt1, v0 WHERE (((CAST(rt1.c3 AS INTEGER))LIKE((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c4))))));
SELECT ALL * FROM rt1, v0, rt60, t0 WHERE ((~ (UPPER(t0.c87)))) ORDER BY ((((((rt1.c3, t0.c49, rt60.c1)) BETWEEN ((0X39181864, v0.c0, rt1.c1)) AND ((0.4762530238655457, t0.c87, rt60.c0)))))<>((rt1.c1 COLLATE NOCASE)))  NULLS FIRST, LIKE((~ (rt60.c2)), ((rt1.c2)=(rt1.c2)), '9'), ((('-1022017475' COLLATE NOCASE))<((CASE WHEN t0.c49 THEN rt1.c3 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(t0.c87)))) IS TRUE)  as count FROM rt1, v0, rt60, t0 ORDER BY ((((((rt1.c3, t0.c49, rt60.c1)) BETWEEN ((0x39181864, v0.c0, rt1.c1)) AND ((0.4762530238655457, t0.c87, rt60.c0)))))!=((rt1.c1 COLLATE NOCASE)))  NULLS FIRST, LIKE((~ (rt60.c2)), ((rt1.c2)=(rt1.c2)), '9'), ((('-1022017475' COLLATE NOCASE))<((CASE WHEN t0.c49 THEN rt1.c3 END)))  NULLS LAST);
SELECT ALL * FROM rt1, v0, rt60, t0 WHERE ((~ (UPPER(t0.c87)))) ORDER BY ((((((rt1.c3, t0.c49, rt60.c1)) BETWEEN ((0X39181864, v0.c0, rt1.c1)) AND ((0.4762530238655457, t0.c87, rt60.c0)))))<>((rt1.c1 COLLATE NOCASE)))  NULLS FIRST, LIKE((~ (rt60.c2)), ((rt1.c2)=(rt1.c2)), '9'), ((('-1022017475' COLLATE NOCASE))<((CASE WHEN t0.c49 THEN rt1.c3 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(t0.c87)))) IS TRUE)  as count FROM rt1, v0, rt60, t0 ORDER BY ((((((rt1.c3, t0.c49, rt60.c1)) BETWEEN ((0x39181864, v0.c0, rt1.c1)) AND ((0.4762530238655457, t0.c87, rt60.c0)))))!=((rt1.c1 COLLATE NOCASE)))  NULLS FIRST, LIKE((~ (rt60.c2)), ((rt1.c2)=(rt1.c2)), '9'), ((('-1022017475' COLLATE NOCASE))<((CASE WHEN t0.c49 THEN rt1.c3 END)))  NULLS LAST);
SELECT ALL * FROM rt1, v0, rt60, t0 WHERE ((~ (UPPER(t0.c87)))) ORDER BY ((((((rt1.c3, t0.c49, rt60.c1)) BETWEEN ((0X39181864, v0.c0, rt1.c1)) AND ((0.4762530238655457, t0.c87, rt60.c0)))))<>((rt1.c1 COLLATE NOCASE)))  NULLS FIRST, LIKE((~ (rt60.c2)), ((rt1.c2)=(rt1.c2)), '9'), ((('-1022017475' COLLATE NOCASE))<((CASE WHEN t0.c49 THEN rt1.c3 END)))  NULLS LAST;
SELECT * FROM vt0, t0, rt1, rt60, v0 WHERE (CAST(((((rt1.c1)OR(t0.c87)))OR(rt60.c1)) AS REAL)) ORDER BY rt60.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c1)OR(t0.c87)))OR(rt60.c1)) AS REAL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, rt1, rt60, v0 ORDER BY rt60.c0 DESC);
SELECT * FROM vt0, t0, rt1, rt60, v0 WHERE (CAST(((((rt1.c1)OR(t0.c87)))OR(rt60.c1)) AS REAL)) ORDER BY rt60.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c1)OR(t0.c87)))OR(rt60.c1)) AS REAL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, rt1, rt60, v0 ORDER BY rt60.c0 DESC);
SELECT * FROM vt0, t0, rt1, rt60, v0 WHERE (CAST(((((rt1.c1)OR(t0.c87)))OR(rt60.c1)) AS REAL)) ORDER BY rt60.c0 DESC;
SELECT * FROM v0, t0 WHERE (((((t0.c39) NOT BETWEEN (NULL) AND (t0.c32)))||(t0.c39))) ORDER BY (((CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c39 END))!=((((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))  NULLS LAST, CASE ((t0.c87) NOTNULL)  WHEN LIKELIHOOD(t0.c49, 0.7107216163767013) THEN (- (t0.c39)) WHEN (((t0.c39)) BETWEEN ((v0.c0)) AND ((t0.c32))) THEN 0.3669055682528056 WHEN (('-537311520') NOT BETWEEN (t0.c39) AND (t0.c49)) THEN CAST(t0.c87 AS REAL) WHEN ((t0.c49) BETWEEN (t0.c32) AND (t0.c32)) THEN CASE WHEN t0.c49 THEN t0.c87 ELSE t0.c32 END WHEN t0.c32 THEN (t0.c87 IN (t0.c87)) END, ((((x'')AND(CAST(t0.c39 AS NUMERIC))))OR((NOT (t0.c39))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39) NOT BETWEEN (NULL) AND (t0.c32)))||(t0.c39))) IS TRUE)  as count FROM v0, t0 ORDER BY (((CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c39 END))<>((((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))  NULLS LAST, CASE ((t0.c87) NOTNULL)  WHEN LIKELIHOOD(t0.c49, 0.7107216163767013) THEN (- (t0.c39)) WHEN (((t0.c39)) BETWEEN ((v0.c0)) AND ((t0.c32))) THEN 0.3669055682528056 WHEN (('-537311520') NOT BETWEEN (t0.c39) AND (t0.c49)) THEN CAST(t0.c87 AS REAL) WHEN ((t0.c49) BETWEEN (t0.c32) AND (t0.c32)) THEN CASE WHEN t0.c49 THEN t0.c87 ELSE t0.c32 END WHEN t0.c32 THEN (t0.c87 IN (t0.c87)) END, ((((x'')AND(CAST(t0.c39 AS NUMERIC))))OR((NOT (t0.c39)))));
SELECT * FROM v0, t0 WHERE (((((t0.c39) NOT BETWEEN (NULL) AND (t0.c32)))||(t0.c39))) ORDER BY (((CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c39 END))!=((((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))  NULLS LAST, CASE ((t0.c87) NOTNULL)  WHEN LIKELIHOOD(t0.c49, 0.7107216163767013) THEN (- (t0.c39)) WHEN (((t0.c39)) BETWEEN ((v0.c0)) AND ((t0.c32))) THEN 0.3669055682528056 WHEN (('-537311520') NOT BETWEEN (t0.c39) AND (t0.c49)) THEN CAST(t0.c87 AS REAL) WHEN ((t0.c49) BETWEEN (t0.c32) AND (t0.c32)) THEN CASE WHEN t0.c49 THEN t0.c87 ELSE t0.c32 END WHEN t0.c32 THEN (t0.c87 IN (t0.c87)) END, ((((x'')AND(CAST(t0.c39 AS NUMERIC))))OR((NOT (t0.c39))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39) NOT BETWEEN (NULL) AND (t0.c32)))||(t0.c39))) IS TRUE)  as count FROM v0, t0 ORDER BY (((CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c39 END))<>((((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))  NULLS LAST, CASE ((t0.c87) NOTNULL)  WHEN LIKELIHOOD(t0.c49, 0.7107216163767013) THEN (- (t0.c39)) WHEN (((t0.c39)) BETWEEN ((v0.c0)) AND ((t0.c32))) THEN 0.3669055682528056 WHEN (('-537311520') NOT BETWEEN (t0.c39) AND (t0.c49)) THEN CAST(t0.c87 AS REAL) WHEN ((t0.c49) BETWEEN (t0.c32) AND (t0.c32)) THEN CASE WHEN t0.c49 THEN t0.c87 ELSE t0.c32 END WHEN t0.c32 THEN (t0.c87 IN (t0.c87)) END, ((((x'')AND(CAST(t0.c39 AS NUMERIC))))OR((NOT (t0.c39)))));
SELECT * FROM v0, t0 WHERE (((((t0.c39) NOT BETWEEN (NULL) AND (t0.c32)))||(t0.c39))) ORDER BY (((CASE WHEN t0.c87 THEN t0.c32 ELSE t0.c39 END))!=((((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))  NULLS LAST, CASE ((t0.c87) NOTNULL)  WHEN LIKELIHOOD(t0.c49, 0.7107216163767013) THEN (- (t0.c39)) WHEN (((t0.c39)) BETWEEN ((v0.c0)) AND ((t0.c32))) THEN 0.3669055682528056 WHEN (('-537311520') NOT BETWEEN (t0.c39) AND (t0.c49)) THEN CAST(t0.c87 AS REAL) WHEN ((t0.c49) BETWEEN (t0.c32) AND (t0.c32)) THEN CASE WHEN t0.c49 THEN t0.c87 ELSE t0.c32 END WHEN t0.c32 THEN (t0.c87 IN (t0.c87)) END, ((((x'')AND(CAST(t0.c39 AS NUMERIC))))OR((NOT (t0.c39))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((t0.c87))) COLLATE BINARY LEFT OUTER JOIN rt1 ON t0.c39 INNER JOIN v0 ON ((((rt1.c4, v0.c0, v0.c0))!=((rt1.c1, t0.c87, t0.c49))) IN ()) INNER JOIN rt60 ON (CAST(vt0.c0 AS BLOB) IN (((((t0.c49)OR(rt1.c0)))OR('VTZO')))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((t0.c87))) COLLATE BINARY LEFT OUTER JOIN rt1 ON t0.c39 INNER JOIN v0 ON ((((rt1.c4, v0.c0, v0.c0))!=((rt1.c1, t0.c87, t0.c49))) IN ()) INNER JOIN rt60 ON (CAST(vt0.c0 AS BLOB) IN (((((t0.c49)OR(rt1.c0)))OR('VTZO')))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((t0.c87))) COLLATE BINARY LEFT OUTER JOIN rt1 ON t0.c39 INNER JOIN v0 ON ((((rt1.c4, v0.c0, v0.c0))!=((rt1.c1, t0.c87, t0.c49))) IN ()) INNER JOIN rt60 ON (CAST(vt0.c0 AS BLOB) IN (((((t0.c49)OR(rt1.c0)))OR('VTZO')))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((t0.c87))) COLLATE BINARY LEFT OUTER JOIN rt1 ON t0.c39 INNER JOIN v0 ON ((((rt1.c4, v0.c0, v0.c0))!=((rt1.c1, t0.c87, t0.c49))) IN ()) INNER JOIN rt60 ON (CAST(vt0.c0 AS BLOB) IN (((((t0.c49)OR(rt1.c0)))OR('VTZO')))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((t0.c87))) COLLATE BINARY LEFT OUTER JOIN rt1 ON t0.c39 INNER JOIN v0 ON ((((rt1.c4, v0.c0, v0.c0))!=((rt1.c1, t0.c87, t0.c49))) IN ()) INNER JOIN rt60 ON (CAST(vt0.c0 AS BLOB) IN (((((t0.c49)OR(rt1.c0)))OR('VTZO')))) WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (IFNULL(LIKELIHOOD('-1001025490', 0.11059211725902562), v0.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL(LIKELIHOOD('-1001025490', 0.11059211725902562), v0.c0)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (IFNULL(LIKELIHOOD('-1001025490', 0.11059211725902562), v0.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL(LIKELIHOOD('-1001025490', 0.11059211725902562), v0.c0)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (IFNULL(LIKELIHOOD('-1001025490', 0.11059211725902562), v0.c0));
SELECT ALL * FROM t0, v0, rt60 WHERE (CAST(t0.c87 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c87 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, rt60);
SELECT ALL * FROM t0, v0, rt60 WHERE (CAST(t0.c87 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c87 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, rt60);
SELECT ALL * FROM t0, v0, rt60 WHERE (CAST(t0.c87 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((v0.c0 IN (t0.c49)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (t0.c49)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((v0.c0 IN (t0.c49)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (t0.c49)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((v0.c0 IN (t0.c49)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)<=(CAST(rt1.c0 AS NUMERIC)))) ORDER BY GLOB(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c4) ISNULL)) ASC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((MAX(rt1.c4, rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)<=(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1 ORDER BY GLOB(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c4) ISNULL)) ASC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((MAX(rt1.c4, rt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)<=(CAST(rt1.c0 AS NUMERIC)))) ORDER BY GLOB(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c4) ISNULL)) ASC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((MAX(rt1.c4, rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)<=(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1 ORDER BY GLOB(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c4) ISNULL)) ASC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((MAX(rt1.c4, rt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)<=(CAST(rt1.c0 AS NUMERIC)))) ORDER BY GLOB(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c4) ISNULL)) ASC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((MAX(rt1.c4, rt1.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt60, t0 RIGHT OUTER JOIN rt1 ON rt60.c2 FULL OUTER JOIN v0 ON rt1.c1 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt60, t0 RIGHT OUTER JOIN rt1 ON rt60.c2 FULL OUTER JOIN v0 ON rt1.c1);
SELECT COUNT(*) FROM rt60, t0 RIGHT OUTER JOIN rt1 ON rt60.c2 FULL OUTER JOIN v0 ON rt1.c1 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt60, t0 RIGHT OUTER JOIN rt1 ON rt60.c2 FULL OUTER JOIN v0 ON rt1.c1);
SELECT COUNT(*) FROM rt60, t0 RIGHT OUTER JOIN rt1 ON rt60.c2 FULL OUTER JOIN v0 ON rt1.c1 WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON vt0.c1 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND (((((t0.c39, vt0.c0, rt1.c3)) NOT BETWEEN ((x'8e9d', v0.c0, rt1.c3)) AND ((t0.c39, rt60.c0, rt1.c4)))))) FULL OUTER JOIN t0 ON TYPEOF(DISTINCT t0.c39) COLLATE RTRIM LEFT OUTER JOIN rt60 ON (~ ((('p3') NOTNULL))) WHERE (((((rt1.c4) NOT BETWEEN (NULL) AND (t0.c87))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOT BETWEEN (NULL) AND (t0.c87))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON vt0.c1 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND (((((t0.c39, vt0.c0, rt1.c3)) NOT BETWEEN ((x'8e9d', v0.c0, rt1.c3)) AND ((t0.c39, rt60.c0, rt1.c4)))))) FULL OUTER JOIN t0 ON TYPEOF(DISTINCT t0.c39) COLLATE RTRIM LEFT OUTER JOIN rt60 ON (~ ((('p3') NOTNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON vt0.c1 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND (((((t0.c39, vt0.c0, rt1.c3)) NOT BETWEEN ((x'8e9d', v0.c0, rt1.c3)) AND ((t0.c39, rt60.c0, rt1.c4)))))) FULL OUTER JOIN t0 ON TYPEOF(DISTINCT t0.c39) COLLATE RTRIM LEFT OUTER JOIN rt60 ON (~ ((('p3') NOTNULL))) WHERE (((((rt1.c4) NOT BETWEEN (NULL) AND (t0.c87))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOT BETWEEN (NULL) AND (t0.c87))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON vt0.c1 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND (((((t0.c39, vt0.c0, rt1.c3)) NOT BETWEEN ((x'8e9d', v0.c0, rt1.c3)) AND ((t0.c39, rt60.c0, rt1.c4)))))) FULL OUTER JOIN t0 ON TYPEOF(DISTINCT t0.c39) COLLATE RTRIM LEFT OUTER JOIN rt60 ON (~ ((('p3') NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, t0, v0 FULL OUTER JOIN rt60 ON ((((((((t0.c32)AND((- (vt0.c0)))))AND(((vt0.c0)IS(t0.c49)))))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))OR(rt60.c0)) CROSS JOIN vt0 ON NULL WHERE (CASE WHEN 349583577 THEN x'' ELSE ((vt0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 349583577 THEN x'' ELSE ((vt0.c1) NOT NULL) END) IS TRUE)  as count FROM rt1, t0, v0 FULL OUTER JOIN rt60 ON ((((((((t0.c32)AND((- (vt0.c0)))))AND(((vt0.c0)IS(t0.c49)))))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))OR(rt60.c0)) CROSS JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1, t0, v0 FULL OUTER JOIN rt60 ON ((((((((t0.c32)AND((- (vt0.c0)))))AND(((vt0.c0)IS(t0.c49)))))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))OR(rt60.c0)) CROSS JOIN vt0 ON NULL WHERE (CASE WHEN 349583577 THEN x'' ELSE ((vt0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 349583577 THEN x'' ELSE ((vt0.c1) NOT NULL) END) IS TRUE)  as count FROM rt1, t0, v0 FULL OUTER JOIN rt60 ON ((((((((t0.c32)AND((- (vt0.c0)))))AND(((vt0.c0)IS(t0.c49)))))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))OR(rt60.c0)) CROSS JOIN vt0 ON NULL);
SELECT * FROM rt1, v0, rt60, vt0 WHERE ((((+ (rt60.c2))) NOT BETWEEN (((vt0.c2) BETWEEN (rt60.c1) AND (rt60.c1))) AND ((((vt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt60.c2))) NOT BETWEEN (((vt0.c2) BETWEEN (rt60.c1) AND (rt60.c1))) AND ((((vt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))) IS TRUE)  as count FROM rt1, v0, rt60, vt0);
SELECT * FROM rt1, v0, rt60, vt0 WHERE ((((+ (rt60.c2))) NOT BETWEEN (((vt0.c2) BETWEEN (rt60.c1) AND (rt60.c1))) AND ((((vt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt60.c2))) NOT BETWEEN (((vt0.c2) BETWEEN (rt60.c1) AND (rt60.c1))) AND ((((vt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))) IS TRUE)  as count FROM rt1, v0, rt60, vt0);
SELECT * FROM rt1, v0, rt60, vt0 WHERE ((((+ (rt60.c2))) NOT BETWEEN (((vt0.c2) BETWEEN (rt60.c1) AND (rt60.c1))) AND ((((vt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))));
SELECT * FROM v0, rt1, t0 INNER JOIN rt60 ON CASE ((vt0.c2) IS TRUE)  WHEN rt60.c2 THEN rt1.c2 ELSE (vt0.c1 IN (vt0.c0, NULL)) END FULL OUTER JOIN vt0 ON (((t0.c32, vt0.c2, rt1.c1)) NOT BETWEEN ((vt0.c2, t0.c87, rt60.c1)) AND ((rt60.c2, rt60.c0, rt1.c3))) COLLATE BINARY WHERE (CASE ((t0.c87)>=(t0.c87))  WHEN ((t0.c87)/(t0.c87)) THEN ((t0.c49)>(vt0.c2)) ELSE ((vt0.c2)*(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c87)>=(t0.c87))  WHEN ((t0.c87)/(t0.c87)) THEN ((t0.c49)>(vt0.c2)) ELSE ((vt0.c2)*(vt0.c2)) END) IS TRUE)  as count FROM v0, rt1, t0 INNER JOIN rt60 ON CASE ((vt0.c2) IS TRUE)  WHEN rt60.c2 THEN rt1.c2 ELSE (vt0.c1 IN (vt0.c0, NULL)) END FULL OUTER JOIN vt0 ON (((t0.c32, vt0.c2, rt1.c1)) NOT BETWEEN ((vt0.c2, t0.c87, rt60.c1)) AND ((rt60.c2, rt60.c0, rt1.c3))) COLLATE BINARY);
SELECT * FROM v0, rt1, t0 INNER JOIN rt60 ON CASE ((vt0.c2) IS TRUE)  WHEN rt60.c2 THEN rt1.c2 ELSE (vt0.c1 IN (vt0.c0, NULL)) END FULL OUTER JOIN vt0 ON (((t0.c32, vt0.c2, rt1.c1)) NOT BETWEEN ((vt0.c2, t0.c87, rt60.c1)) AND ((rt60.c2, rt60.c0, rt1.c3))) COLLATE BINARY WHERE (CASE ((t0.c87)>=(t0.c87))  WHEN ((t0.c87)/(t0.c87)) THEN ((t0.c49)>(vt0.c2)) ELSE ((vt0.c2)*(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c87)>=(t0.c87))  WHEN ((t0.c87)/(t0.c87)) THEN ((t0.c49)>(vt0.c2)) ELSE ((vt0.c2)*(vt0.c2)) END) IS TRUE)  as count FROM v0, rt1, t0 INNER JOIN rt60 ON CASE ((vt0.c2) IS TRUE)  WHEN rt60.c2 THEN rt1.c2 ELSE (vt0.c1 IN (vt0.c0, NULL)) END FULL OUTER JOIN vt0 ON (((t0.c32, vt0.c2, rt1.c1)) NOT BETWEEN ((vt0.c2, t0.c87, rt60.c1)) AND ((rt60.c2, rt60.c0, rt1.c3))) COLLATE BINARY);
SELECT ALL * FROM rt1, rt60 CROSS JOIN v0 ON IFNULL(DISTINCT json_array_length(rt1.c4), rt60.c0 COLLATE RTRIM) WHERE (((((0.2824911127937758)>>(rt60.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((rt1.c4)+(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.2824911127937758)>>(rt60.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((rt1.c4)+(rt1.c2))))) IS TRUE)  as count FROM rt1, rt60 CROSS JOIN v0 ON IFNULL(DISTINCT json_array_length(rt1.c4), rt60.c0 COLLATE RTRIM));
SELECT ALL * FROM rt1, rt60 CROSS JOIN v0 ON IFNULL(DISTINCT json_array_length(rt1.c4), rt60.c0 COLLATE RTRIM) WHERE (((((0.2824911127937758)>>(rt60.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((rt1.c4)+(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.2824911127937758)>>(rt60.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((rt1.c4)+(rt1.c2))))) IS TRUE)  as count FROM rt1, rt60 CROSS JOIN v0 ON IFNULL(DISTINCT json_array_length(rt1.c4), rt60.c0 COLLATE RTRIM));
SELECT ALL * FROM rt1, rt60 CROSS JOIN v0 ON IFNULL(DISTINCT json_array_length(rt1.c4), rt60.c0 COLLATE RTRIM) WHERE (((((0.2824911127937758)>>(rt60.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((rt1.c4)+(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY ((rtreenode(0.7605174324853164, vt0.c1)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((rtreenode(0.7605174324853164, vt0.c1)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY ((rtreenode(0.7605174324853164, vt0.c1)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((rtreenode(0.7605174324853164, vt0.c1)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY ((rtreenode(0.7605174324853164, vt0.c1)) NOTNULL);
SELECT ALL * FROM v0, t0, rt60, vt0 WHERE (((((vt0.c2) IS TRUE))OR(STRFTIME(t0.c32, t0.c32, rt60.c1)))) ORDER BY ('1964915178' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS TRUE))OR(STRFTIME(t0.c32, t0.c32, rt60.c1)))) IS TRUE)  as count FROM v0, t0, rt60, vt0 ORDER BY ('1964915178' IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt60, vt0 WHERE (((((vt0.c2) IS TRUE))OR(STRFTIME(t0.c32, t0.c32, rt60.c1)))) ORDER BY ('1964915178' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS TRUE))OR(STRFTIME(t0.c32, t0.c32, rt60.c1)))) IS TRUE)  as count FROM v0, t0, rt60, vt0 ORDER BY ('1964915178' IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt60, vt0 WHERE (((((vt0.c2) IS TRUE))OR(STRFTIME(t0.c32, t0.c32, rt60.c1)))) ORDER BY ('1964915178' IN ()) ASC  NULLS FIRST;
SELECT * FROM rt1, t0, v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (- (((rt1.c4)%(rt1.c4)))) ASC  NULLS LAST, ((((((t0.c39) IS FALSE))AND(CHAR(v0.c0))))AND(((((vt0.c2)OR(vt0.c0)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt1, t0, v0, vt0 ORDER BY (- (((rt1.c4)%(rt1.c4)))) ASC  NULLS LAST, ((((((t0.c39) IS FALSE))AND(CHAR(v0.c0))))AND(((((vt0.c2)OR(vt0.c0)))AND(rt1.c1)))));
SELECT * FROM rt1, t0, v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (- (((rt1.c4)%(rt1.c4)))) ASC  NULLS LAST, ((((((t0.c39) IS FALSE))AND(CHAR(v0.c0))))AND(((((vt0.c2)OR(vt0.c0)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt1, t0, v0, vt0 ORDER BY (- (((rt1.c4)%(rt1.c4)))) ASC  NULLS LAST, ((((((t0.c39) IS FALSE))AND(CHAR(v0.c0))))AND(((((vt0.c2)OR(vt0.c0)))AND(rt1.c1)))));
SELECT * FROM rt1, t0, v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (- (((rt1.c4)%(rt1.c4)))) ASC  NULLS LAST, ((((((t0.c39) IS FALSE))AND(CHAR(v0.c0))))AND(((((vt0.c2)OR(vt0.c0)))AND(rt1.c1))));
SELECT ALL * FROM rt60, vt0 WHERE (CASE rt60.c0 COLLATE RTRIM  WHEN (((rt60.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE rt60.c0 COLLATE RTRIM  WHEN (((rt60.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END) IS TRUE)  as count FROM rt60, vt0);
SELECT ALL * FROM rt60, vt0 WHERE (CASE rt60.c0 COLLATE RTRIM  WHEN (((rt60.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE rt60.c0 COLLATE RTRIM  WHEN (((rt60.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END) IS TRUE)  as count FROM rt60, vt0);
SELECT ALL * FROM rt60, vt0 WHERE (CASE rt60.c0 COLLATE RTRIM  WHEN (((rt60.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) THEN CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END);
SELECT ALL * FROM v0, t0 WHERE (((CAST(t0.c32 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c32 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((CAST(t0.c32 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c32 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((CAST(t0.c32 AS INTEGER)) IS FALSE));
SELECT * FROM v0, t0, vt0, rt1 WHERE ((((NOT (vt0.c0)))<<(x'b7e0ab33'))) ORDER BY 0.4759467915714596  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))<<(x'b7e0ab33'))) IS TRUE)  as count FROM v0, t0, vt0, rt1 ORDER BY 0.4759467915714596  NULLS LAST);
SELECT * FROM v0, t0, vt0, rt1 WHERE ((((NOT (vt0.c0)))<<(x'b7e0ab33'))) ORDER BY 0.4759467915714596  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))<<(x'b7e0ab33'))) IS TRUE)  as count FROM v0, t0, vt0, rt1 ORDER BY 0.4759467915714596  NULLS LAST);
SELECT * FROM v0, t0, vt0, rt1 WHERE ((((NOT (vt0.c0)))<<(x'b7e0ab33'))) ORDER BY 0.4759467915714596  NULLS LAST;
SELECT ALL * FROM v0, t0, rt60, vt0 WHERE ((((((NOT (vt0.c2)))AND(t0.c87)))OR(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c2)))AND(t0.c87)))OR(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, t0, rt60, vt0);
SELECT ALL * FROM v0, t0, rt60, vt0 WHERE ((((((NOT (vt0.c2)))AND(t0.c87)))OR(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c2)))AND(t0.c87)))OR(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, t0, rt60, vt0);
SELECT ALL * FROM v0, t0, rt60, vt0 WHERE ((((((NOT (vt0.c2)))AND(t0.c87)))OR(((vt0.c1) NOTNULL))));
SELECT * FROM t0 NOT INDEXED, rt60, v0, vt0, rt1 WHERE (CAST(CASE WHEN rt60.c1 THEN rt60.c0 WHEN rt1.c2 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 ELSE v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt60.c1 THEN rt60.c0 WHEN rt1.c2 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 ELSE v0.c0 END AS REAL)) IS TRUE)  as count FROM t0, rt60, v0, vt0, rt1);
SELECT * FROM t0 NOT INDEXED, rt60, v0, vt0, rt1 WHERE (CAST(CASE WHEN rt60.c1 THEN rt60.c0 WHEN rt1.c2 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 ELSE v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt60.c1 THEN rt60.c0 WHEN rt1.c2 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 ELSE v0.c0 END AS REAL)) IS TRUE)  as count FROM t0, rt60, v0, vt0, rt1);
SELECT * FROM t0 NOT INDEXED, rt60, v0, vt0, rt1 WHERE (CAST(CASE WHEN rt60.c1 THEN rt60.c0 WHEN rt1.c2 THEN rt60.c2 WHEN t0.c39 THEN t0.c39 ELSE v0.c0 END AS REAL));
SELECT ALL * FROM v0, rt1, rt60 WHERE (CAST(rt60.c0 COLLATE RTRIM AS REAL)) ORDER BY (((0.17848155662541065 IN (rt1.c0, 0.32878369179994804))) ISNULL)  NULLS LAST, ((((rt1.c1)||(rt60.c2)))=(CAST(rt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((CAST(rt60.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, rt1, rt60 ORDER BY (((0.17848155662541065 IN (rt1.c0, 0.32878369179994804))) ISNULL)  NULLS LAST, ((((rt1.c1)||(rt60.c2)))=(CAST(rt1.c0 AS BLOB))));
SELECT ALL * FROM v0, rt1, rt60 WHERE (CAST(rt60.c0 COLLATE RTRIM AS REAL)) ORDER BY (((0.17848155662541065 IN (rt1.c0, 0.32878369179994804))) ISNULL)  NULLS LAST, ((((rt1.c1)||(rt60.c2)))=(CAST(rt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((CAST(rt60.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, rt1, rt60 ORDER BY (((0.17848155662541065 IN (rt1.c0, 0.32878369179994804))) ISNULL)  NULLS LAST, ((((rt1.c1)||(rt60.c2)))=(CAST(rt1.c0 AS BLOB))));
SELECT ALL * FROM v0, rt1, rt60 WHERE (CAST(rt60.c0 COLLATE RTRIM AS REAL)) ORDER BY (((0.17848155662541065 IN (rt1.c0, 0.32878369179994804))) ISNULL)  NULLS LAST, ((((rt1.c1)||(rt60.c2)))=(CAST(rt1.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((TRIM(vt0.c2, vt0.c2))+((+ ('')))) RIGHT OUTER JOIN rt60 ON ((t0.c32) BETWEEN (t0.c32) AND (LIKELIHOOD(DISTINCT rt60.c0, 0.5397067032095315))) INNER JOIN t0 ON (+ (((((rt60.c2)OR(rt60.c1)))AND(vt0.c0)))) FULL OUTER JOIN v0 ON CASE WHEN ((rt1.c4) NOT BETWEEN (vt0.c2) AND (rt1.c1)) THEN ((rt60.c0) BETWEEN (t0.c39) AND (rt60.c2)) WHEN CASE v0.c0  WHEN vt0.c2 THEN t0.c32 WHEN vt0.c0 THEN x'' WHEN rt1.c2 THEN x'' WHEN t0.c49 THEN rt1.c3 WHEN rt1.c2 THEN rt60.c2 END THEN t0.c32 WHEN ((((vt0.c0)AND(rt1.c2)))AND(rt60.c0)) THEN TIME(t0.c32, rt60.c2, x'', rt60.c1, rt1.c1) END WHERE (((NULL)<(((rt1.c1)GLOB(rt60.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<(((rt1.c1)GLOB(rt60.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((TRIM(vt0.c2, vt0.c2))+((+ ('')))) RIGHT OUTER JOIN rt60 ON ((t0.c32) BETWEEN (t0.c32) AND (LIKELIHOOD(DISTINCT rt60.c0, 0.5397067032095315))) INNER JOIN t0 ON (+ (((((rt60.c2)OR(rt60.c1)))AND(vt0.c0)))) FULL OUTER JOIN v0 ON CASE WHEN ((rt1.c4) NOT BETWEEN (vt0.c2) AND (rt1.c1)) THEN ((rt60.c0) BETWEEN (t0.c39) AND (rt60.c2)) WHEN CASE v0.c0  WHEN vt0.c2 THEN t0.c32 WHEN vt0.c0 THEN x'' WHEN rt1.c2 THEN x'' WHEN t0.c49 THEN rt1.c3 WHEN rt1.c2 THEN rt60.c2 END THEN t0.c32 WHEN ((((vt0.c0)AND(rt1.c2)))AND(rt60.c0)) THEN TIME(t0.c32, rt60.c2, x'', rt60.c1, rt1.c1) END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((TRIM(vt0.c2, vt0.c2))+((+ ('')))) RIGHT OUTER JOIN rt60 ON ((t0.c32) BETWEEN (t0.c32) AND (LIKELIHOOD(DISTINCT rt60.c0, 0.5397067032095315))) INNER JOIN t0 ON (+ (((((rt60.c2)OR(rt60.c1)))AND(vt0.c0)))) FULL OUTER JOIN v0 ON CASE WHEN ((rt1.c4) NOT BETWEEN (vt0.c2) AND (rt1.c1)) THEN ((rt60.c0) BETWEEN (t0.c39) AND (rt60.c2)) WHEN CASE v0.c0  WHEN vt0.c2 THEN t0.c32 WHEN vt0.c0 THEN x'' WHEN rt1.c2 THEN x'' WHEN t0.c49 THEN rt1.c3 WHEN rt1.c2 THEN rt60.c2 END THEN t0.c32 WHEN ((((vt0.c0)AND(rt1.c2)))AND(rt60.c0)) THEN TIME(t0.c32, rt60.c2, x'', rt60.c1, rt1.c1) END WHERE (((NULL)<(((rt1.c1)GLOB(rt60.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<(((rt1.c1)GLOB(rt60.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((TRIM(vt0.c2, vt0.c2))+((+ ('')))) RIGHT OUTER JOIN rt60 ON ((t0.c32) BETWEEN (t0.c32) AND (LIKELIHOOD(DISTINCT rt60.c0, 0.5397067032095315))) INNER JOIN t0 ON (+ (((((rt60.c2)OR(rt60.c1)))AND(vt0.c0)))) FULL OUTER JOIN v0 ON CASE WHEN ((rt1.c4) NOT BETWEEN (vt0.c2) AND (rt1.c1)) THEN ((rt60.c0) BETWEEN (t0.c39) AND (rt60.c2)) WHEN CASE v0.c0  WHEN vt0.c2 THEN t0.c32 WHEN vt0.c0 THEN x'' WHEN rt1.c2 THEN x'' WHEN t0.c49 THEN rt1.c3 WHEN rt1.c2 THEN rt60.c2 END THEN t0.c32 WHEN ((((vt0.c0)AND(rt1.c2)))AND(rt60.c0)) THEN TIME(t0.c32, rt60.c2, x'', rt60.c1, rt1.c1) END);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c4)AND(NULL)))OR(rt1.c0)) AS REAL)) ORDER BY 'BFXxo!y' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c4)AND(NULL)))OR(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY 'BFXxo!y' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c4)AND(NULL)))OR(rt1.c0)) AS REAL)) ORDER BY 'BFXxo!y' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c4)AND(NULL)))OR(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY 'BFXxo!y' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c4)AND(NULL)))OR(rt1.c0)) AS REAL)) ORDER BY 'BFXxo!y' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c2 END)OR(rt1.c1)))AND(CAST(rt1.c4 AS BLOB)))) ORDER BY (+ (rt1.c4)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c2 END)OR(rt1.c1)))AND(CAST(rt1.c4 AS BLOB)))) IS TRUE)  as count FROM v0, rt1 ORDER BY (+ (rt1.c4)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c2 END)OR(rt1.c1)))AND(CAST(rt1.c4 AS BLOB)))) ORDER BY (+ (rt1.c4)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c2 END)OR(rt1.c1)))AND(CAST(rt1.c4 AS BLOB)))) IS TRUE)  as count FROM v0, rt1 ORDER BY (+ (rt1.c4)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c2 END)OR(rt1.c1)))AND(CAST(rt1.c4 AS BLOB)))) ORDER BY (+ (rt1.c4)) COLLATE BINARY COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(CASE 'ꥀY-v'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((LOWER(v0.c0), (- (v0.c0)), CAST(v0.c0 AS INTEGER)))=((NULL, (((NULL))<=((v0.c0))), (v0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)&(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(CASE 'ꥀY-v'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((LOWER(v0.c0), (- (v0.c0)), CAST(v0.c0 AS INTEGER)))==((NULL, (((NULL))<=((v0.c0))), (v0.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(CASE 'ꥀY-v'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((LOWER(v0.c0), (- (v0.c0)), CAST(v0.c0 AS INTEGER)))=((NULL, (((NULL))<=((v0.c0))), (v0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)&(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(CASE 'ꥀY-v'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((LOWER(v0.c0), (- (v0.c0)), CAST(v0.c0 AS INTEGER)))==((NULL, (((NULL))<=((v0.c0))), (v0.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(CASE 'ꥀY-v'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((LOWER(v0.c0), (- (v0.c0)), CAST(v0.c0 AS INTEGER)))=((NULL, (((NULL))<=((v0.c0))), (v0.c0 IN ())))) ASC;
SELECT COUNT(*) FROM rt60, rt1, vt0, v0, t0 WHERE (CASE ((((((((rt1.c1)AND(rt60.c0)))AND(vt0.c1)))AND(rt1.c4)))OR(vt0.c2))  WHEN UNLIKELY(DISTINCT rt1.c3) THEN ((t0.c87)IS NOT(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN t0.c32 WHEN t0.c39 THEN rt1.c2 WHEN rt60.c2 THEN rt1.c0 END THEN ((rt1.c3)-(rt1.c3)) WHEN ((t0.c32) BETWEEN (t0.c49) AND (t0.c49)) THEN (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt1.c1)AND(rt60.c0)))AND(vt0.c1)))AND(rt1.c4)))OR(vt0.c2))  WHEN UNLIKELY(DISTINCT rt1.c3) THEN ((t0.c87)IS NOT(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN t0.c32 WHEN t0.c39 THEN rt1.c2 WHEN rt60.c2 THEN rt1.c0 END THEN ((rt1.c3)-(rt1.c3)) WHEN ((t0.c32) BETWEEN (t0.c49) AND (t0.c49)) THEN (~ (NULL)) END) IS TRUE)  as count FROM rt60, rt1, vt0, v0, t0);
SELECT COUNT(*) FROM rt60, rt1, vt0, v0, t0 WHERE (CASE ((((((((rt1.c1)AND(rt60.c0)))AND(vt0.c1)))AND(rt1.c4)))OR(vt0.c2))  WHEN UNLIKELY(DISTINCT rt1.c3) THEN ((t0.c87)IS NOT(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN t0.c32 WHEN t0.c39 THEN rt1.c2 WHEN rt60.c2 THEN rt1.c0 END THEN ((rt1.c3)-(rt1.c3)) WHEN ((t0.c32) BETWEEN (t0.c49) AND (t0.c49)) THEN (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt1.c1)AND(rt60.c0)))AND(vt0.c1)))AND(rt1.c4)))OR(vt0.c2))  WHEN UNLIKELY(DISTINCT rt1.c3) THEN ((t0.c87)IS NOT(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN t0.c32 WHEN t0.c39 THEN rt1.c2 WHEN rt60.c2 THEN rt1.c0 END THEN ((rt1.c3)-(rt1.c3)) WHEN ((t0.c32) BETWEEN (t0.c49) AND (t0.c49)) THEN (~ (NULL)) END) IS TRUE)  as count FROM rt60, rt1, vt0, v0, t0);
SELECT COUNT(*) FROM rt60, rt1, vt0, v0, t0 WHERE (CASE ((((((((rt1.c1)AND(rt60.c0)))AND(vt0.c1)))AND(rt1.c4)))OR(vt0.c2))  WHEN UNLIKELY(DISTINCT rt1.c3) THEN ((t0.c87)IS NOT(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN t0.c32 WHEN t0.c39 THEN rt1.c2 WHEN rt60.c2 THEN rt1.c0 END THEN ((rt1.c3)-(rt1.c3)) WHEN ((t0.c32) BETWEEN (t0.c49) AND (t0.c49)) THEN (~ (NULL)) END);
SELECT ALL * FROM rt60 WHERE ((((rt60.c2 IN (rt60.c0)))=((rt60.c1 IN ())))) ORDER BY ((CASE rt60.c0  WHEN rt60.c0 THEN rt60.c2 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt60.c2 IN (rt60.c0)))=((rt60.c1 IN ())))) IS TRUE)  as count FROM rt60 ORDER BY ((CASE rt60.c0  WHEN rt60.c0 THEN rt60.c2 END) IS FALSE));
SELECT ALL * FROM rt60 WHERE ((((rt60.c2 IN (rt60.c0)))=((rt60.c1 IN ())))) ORDER BY ((CASE rt60.c0  WHEN rt60.c0 THEN rt60.c2 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt60.c2 IN (rt60.c0)))=((rt60.c1 IN ())))) IS TRUE)  as count FROM rt60 ORDER BY ((CASE rt60.c0  WHEN rt60.c0 THEN rt60.c2 END) IS FALSE));
SELECT ALL * FROM rt60 WHERE ((((rt60.c2 IN (rt60.c0)))=((rt60.c1 IN ())))) ORDER BY ((CASE rt60.c0  WHEN rt60.c0 THEN rt60.c2 END) IS FALSE);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, v0, rt60 WHERE (((CAST(rt1.c2 AS REAL))AND(((rt60.c1)GLOB(t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL))AND(((rt60.c1)GLOB(t0.c87))))) IS TRUE)  as count FROM t0, vt0, rt1, v0, rt60);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, v0, rt60 WHERE (((CAST(rt1.c2 AS REAL))AND(((rt60.c1)GLOB(t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL))AND(((rt60.c1)GLOB(t0.c87))))) IS TRUE)  as count FROM t0, vt0, rt1, v0, rt60);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, v0, rt60 WHERE (((CAST(rt1.c2 AS REAL))AND(((rt60.c1)GLOB(t0.c87)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((ABS(v0.c0)))<>((vt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((ABS(v0.c0)))!=((vt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((ABS(v0.c0)))<>((vt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((ABS(v0.c0)))!=((vt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((ABS(v0.c0)))<>((vt0.c2 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((- ((rt1.c2 IN (t0.c49)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c2 IN (t0.c49))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((- ((rt1.c2 IN (t0.c49)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c2 IN (t0.c49))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((- ((rt1.c2 IN (t0.c49)))));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c1, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)), rt1.c3 COLLATE RTRIM))>=((QUOTE(t0.c39), rt1.c4 COLLATE RTRIM, rt1.c4 COLLATE RTRIM))) RIGHT OUTER JOIN rt60 ON ((t0.c39) NOT BETWEEN (vt0.c1) AND (rt60.c2)) COLLATE NOCASE COLLATE BINARY INNER JOIN t0 ON CAST(CASE rt1.c3  WHEN v0.c0 THEN t0.c49 ELSE rt60.c1 END AS REAL) WHERE (((((((((((v0.c0) ISNULL))OR(rt1.c2)))OR(((t0.c49)+(0x233ebd24)))))AND(CAST(vt0.c1 AS INTEGER))))OR(CASE vt0.c2  WHEN t0.c39 THEN rt1.c3 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) ISNULL))OR(rt1.c2)))OR(((t0.c49)+(0x233ebd24)))))AND(CAST(vt0.c1 AS INTEGER))))OR(CASE vt0.c2  WHEN t0.c39 THEN rt1.c3 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c1, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)), rt1.c3 COLLATE RTRIM))>=((QUOTE(t0.c39), rt1.c4 COLLATE RTRIM, rt1.c4 COLLATE RTRIM))) RIGHT OUTER JOIN rt60 ON ((t0.c39) NOT BETWEEN (vt0.c1) AND (rt60.c2)) COLLATE NOCASE COLLATE BINARY INNER JOIN t0 ON CAST(CASE rt1.c3  WHEN v0.c0 THEN t0.c49 ELSE rt60.c1 END AS REAL));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c1, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)), rt1.c3 COLLATE RTRIM))>=((QUOTE(t0.c39), rt1.c4 COLLATE RTRIM, rt1.c4 COLLATE RTRIM))) RIGHT OUTER JOIN rt60 ON ((t0.c39) NOT BETWEEN (vt0.c1) AND (rt60.c2)) COLLATE NOCASE COLLATE BINARY INNER JOIN t0 ON CAST(CASE rt1.c3  WHEN v0.c0 THEN t0.c49 ELSE rt60.c1 END AS REAL) WHERE (((((((((((v0.c0) ISNULL))OR(rt1.c2)))OR(((t0.c49)+(0x233ebd24)))))AND(CAST(vt0.c1 AS INTEGER))))OR(CASE vt0.c2  WHEN t0.c39 THEN rt1.c3 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) ISNULL))OR(rt1.c2)))OR(((t0.c49)+(0x233ebd24)))))AND(CAST(vt0.c1 AS INTEGER))))OR(CASE vt0.c2  WHEN t0.c39 THEN rt1.c3 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c1, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)), rt1.c3 COLLATE RTRIM))>=((QUOTE(t0.c39), rt1.c4 COLLATE RTRIM, rt1.c4 COLLATE RTRIM))) RIGHT OUTER JOIN rt60 ON ((t0.c39) NOT BETWEEN (vt0.c1) AND (rt60.c2)) COLLATE NOCASE COLLATE BINARY INNER JOIN t0 ON CAST(CASE rt1.c3  WHEN v0.c0 THEN t0.c49 ELSE rt60.c1 END AS REAL));
SELECT COUNT(*) FROM rt1, vt0, t0, v0, rt60 WHERE (CAST(t0.c39 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c39 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, t0, v0, rt60);
SELECT COUNT(*) FROM rt1, vt0, t0, v0, rt60 WHERE (CAST(t0.c39 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c39 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, t0, v0, rt60);
SELECT COUNT(*) FROM rt1, vt0, t0, v0, rt60 WHERE (CAST(t0.c39 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ((t0.c32) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ((t0.c32) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c32);
SELECT ALL * FROM rt60 NOT INDEXED, rt1, t0, vt0, v0 WHERE (CASE 'k'  WHEN ((v0.c0)GLOB(rt1.c3)) THEN CAST(rt1.c0 AS INTEGER) WHEN UPPER(NULL) THEN rt60.c2 WHEN ((rt1.c4) IS TRUE) THEN x'7a68' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'k'  WHEN ((v0.c0)GLOB(rt1.c3)) THEN CAST(rt1.c0 AS INTEGER) WHEN UPPER(NULL) THEN rt60.c2 WHEN ((rt1.c4) IS TRUE) THEN x'7a68' END) IS TRUE)  as count FROM rt60, rt1, t0, vt0, v0);
SELECT ALL * FROM rt60 NOT INDEXED, rt1, t0, vt0, v0 WHERE (CASE 'k'  WHEN ((v0.c0)GLOB(rt1.c3)) THEN CAST(rt1.c0 AS INTEGER) WHEN UPPER(NULL) THEN rt60.c2 WHEN ((rt1.c4) IS TRUE) THEN x'7a68' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'k'  WHEN ((v0.c0)GLOB(rt1.c3)) THEN CAST(rt1.c0 AS INTEGER) WHEN UPPER(NULL) THEN rt60.c2 WHEN ((rt1.c4) IS TRUE) THEN x'7a68' END) IS TRUE)  as count FROM rt60, rt1, t0, vt0, v0);
SELECT ALL * FROM rt60 NOT INDEXED, rt1, t0, vt0, v0 WHERE (CASE 'k'  WHEN ((v0.c0)GLOB(rt1.c3)) THEN CAST(rt1.c0 AS INTEGER) WHEN UPPER(NULL) THEN rt60.c2 WHEN ((rt1.c4) IS TRUE) THEN x'7a68' END);
SELECT * FROM vt0, rt1, v0 WHERE (((((0.8391596991536929, vt0.c1, rt1.c2))>=((vt0.c1, rt1.c1, vt0.c0))) IN ())) ORDER BY (((rt1.c1 IN ()))IS(x''));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8391596991536929, vt0.c1, rt1.c2))>=((vt0.c1, rt1.c1, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY (((rt1.c1 IN ()))IS(x'')));
SELECT * FROM vt0, rt1, v0 WHERE (((((0.8391596991536929, vt0.c1, rt1.c2))>=((vt0.c1, rt1.c1, vt0.c0))) IN ())) ORDER BY (((rt1.c1 IN ()))IS(x''));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8391596991536929, vt0.c1, rt1.c2))>=((vt0.c1, rt1.c1, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY (((rt1.c1 IN ()))IS(x'')));
SELECT * FROM vt0, rt1, v0 WHERE (((((0.8391596991536929, vt0.c1, rt1.c2))>=((vt0.c1, rt1.c1, vt0.c0))) IN ())) ORDER BY (((rt1.c1 IN ()))IS(x''));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(((rt1.c2) BETWEEN (NULL) AND (rt1.c0)) AS BLOB)) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (NULL) AND (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(((rt1.c2) BETWEEN (NULL) AND (rt1.c0)) AS BLOB)) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (NULL) AND (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(((rt1.c2) BETWEEN (NULL) AND (rt1.c0)) AS BLOB)) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, rt60, v0, rt1 WHERE (NULL) ORDER BY (((((rt1.c0)OR(t0.c87)))OR(rt60.c0)) IN ()) DESC, CASE rt60.c1  WHEN (((rt1.c0))<=((t0.c49))) THEN CASE rt60.c2  WHEN t0.c32 THEN rt60.c0 WHEN t0.c32 THEN rt1.c2 WHEN rt1.c0 THEN rt60.c2 END END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, rt60, v0, rt1 ORDER BY (((((rt1.c0)OR(t0.c87)))OR(rt60.c0)) IN ()) DESC, CASE rt60.c1  WHEN (((rt1.c0))<=((t0.c49))) THEN CASE rt60.c2  WHEN t0.c32 THEN rt60.c0 WHEN t0.c32 THEN rt1.c2 WHEN rt1.c0 THEN rt60.c2 END END);
SELECT ALL COUNT(*) FROM vt0, t0, rt60, v0, rt1 WHERE (NULL) ORDER BY (((((rt1.c0)OR(t0.c87)))OR(rt60.c0)) IN ()) DESC, CASE rt60.c1  WHEN (((rt1.c0))<=((t0.c49))) THEN CASE rt60.c2  WHEN t0.c32 THEN rt60.c0 WHEN t0.c32 THEN rt1.c2 WHEN rt1.c0 THEN rt60.c2 END END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, rt60, v0, rt1 ORDER BY (((((rt1.c0)OR(t0.c87)))OR(rt60.c0)) IN ()) DESC, CASE rt60.c1  WHEN (((rt1.c0))<=((t0.c49))) THEN CASE rt60.c2  WHEN t0.c32 THEN rt60.c0 WHEN t0.c32 THEN rt1.c2 WHEN rt1.c0 THEN rt60.c2 END END);
SELECT ALL COUNT(*) FROM vt0, t0, rt60, v0, rt1 WHERE (NULL) ORDER BY (((((rt1.c0)OR(t0.c87)))OR(rt60.c0)) IN ()) DESC, CASE rt60.c1  WHEN (((rt1.c0))<=((t0.c49))) THEN CASE rt60.c2  WHEN t0.c32 THEN rt60.c0 WHEN t0.c32 THEN rt1.c2 WHEN rt1.c0 THEN rt60.c2 END END;
SELECT ALL * FROM t0, rt60 WHERE ((((t0.c87, rt60.c2, rt60.c2, x'ee77', t0.c87)) BETWEEN ((((rt60.c0) NOT BETWEEN (t0.c32) AND (t0.c87)), ((rt60.c1) NOTNULL), (((t0.c49, t0.c32, t0.c39)) BETWEEN ((NULL, rt60.c0, rt60.c2)) AND ((rt60.c0, rt60.c2, t0.c87))), ((((t0.c49)AND(t0.c49)))OR(t0.c87)), 0.9579757821977377)) AND ((rt60.c0 COLLATE BINARY, (t0.c87 IN ()), (t0.c87 IN ()), CASE WHEN rt60.c0 THEN t0.c87 WHEN rt60.c2 THEN rt60.c2 WHEN rt60.c0 THEN t0.c49 END, CASE t0.c32  WHEN t0.c49 THEN rt60.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87, rt60.c2, rt60.c2, x'ee77', t0.c87)) BETWEEN ((((rt60.c0) NOT BETWEEN (t0.c32) AND (t0.c87)), ((rt60.c1) NOTNULL), (((t0.c49, t0.c32, t0.c39)) BETWEEN ((NULL, rt60.c0, rt60.c2)) AND ((rt60.c0, rt60.c2, t0.c87))), ((((t0.c49)AND(t0.c49)))OR(t0.c87)), 0.9579757821977377)) AND ((rt60.c0 COLLATE BINARY, (t0.c87 IN ()), (t0.c87 IN ()), CASE WHEN rt60.c0 THEN t0.c87 WHEN rt60.c2 THEN rt60.c2 WHEN rt60.c0 THEN t0.c49 END, CASE t0.c32  WHEN t0.c49 THEN rt60.c1 END)))) IS TRUE)  as count FROM t0, rt60);
SELECT ALL * FROM t0, rt60 WHERE ((((t0.c87, rt60.c2, rt60.c2, x'ee77', t0.c87)) BETWEEN ((((rt60.c0) NOT BETWEEN (t0.c32) AND (t0.c87)), ((rt60.c1) NOTNULL), (((t0.c49, t0.c32, t0.c39)) BETWEEN ((NULL, rt60.c0, rt60.c2)) AND ((rt60.c0, rt60.c2, t0.c87))), ((((t0.c49)AND(t0.c49)))OR(t0.c87)), 0.9579757821977377)) AND ((rt60.c0 COLLATE BINARY, (t0.c87 IN ()), (t0.c87 IN ()), CASE WHEN rt60.c0 THEN t0.c87 WHEN rt60.c2 THEN rt60.c2 WHEN rt60.c0 THEN t0.c49 END, CASE t0.c32  WHEN t0.c49 THEN rt60.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87, rt60.c2, rt60.c2, x'ee77', t0.c87)) BETWEEN ((((rt60.c0) NOT BETWEEN (t0.c32) AND (t0.c87)), ((rt60.c1) NOTNULL), (((t0.c49, t0.c32, t0.c39)) BETWEEN ((NULL, rt60.c0, rt60.c2)) AND ((rt60.c0, rt60.c2, t0.c87))), ((((t0.c49)AND(t0.c49)))OR(t0.c87)), 0.9579757821977377)) AND ((rt60.c0 COLLATE BINARY, (t0.c87 IN ()), (t0.c87 IN ()), CASE WHEN rt60.c0 THEN t0.c87 WHEN rt60.c2 THEN rt60.c2 WHEN rt60.c0 THEN t0.c49 END, CASE t0.c32  WHEN t0.c49 THEN rt60.c1 END)))) IS TRUE)  as count FROM t0, rt60);
SELECT ALL * FROM t0, rt60 WHERE ((((t0.c87, rt60.c2, rt60.c2, x'ee77', t0.c87)) BETWEEN ((((rt60.c0) NOT BETWEEN (t0.c32) AND (t0.c87)), ((rt60.c1) NOTNULL), (((t0.c49, t0.c32, t0.c39)) BETWEEN ((NULL, rt60.c0, rt60.c2)) AND ((rt60.c0, rt60.c2, t0.c87))), ((((t0.c49)AND(t0.c49)))OR(t0.c87)), 0.9579757821977377)) AND ((rt60.c0 COLLATE BINARY, (t0.c87 IN ()), (t0.c87 IN ()), CASE WHEN rt60.c0 THEN t0.c87 WHEN rt60.c2 THEN rt60.c2 WHEN rt60.c0 THEN t0.c49 END, CASE t0.c32  WHEN t0.c49 THEN rt60.c1 END))));
SELECT ALL * FROM rt60 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) FULL OUTER JOIN rt1 ON (((rt60.c1 IN ())) NOT BETWEEN ((~ (rt60.c0))) AND ((rt1.c0 IN (rt1.c2)))) WHERE ((((rt1.c2)+(rt1.c1)) IN ())) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt60.c1 END)+(((rt60.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)+(rt1.c1)) IN ())) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) FULL OUTER JOIN rt1 ON (((rt60.c1 IN ())) NOT BETWEEN ((~ (rt60.c0))) AND ((rt1.c0 IN (rt1.c2)))) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt60.c1 END)+(((rt60.c0) NOT NULL))) ASC);
SELECT ALL * FROM rt60 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) FULL OUTER JOIN rt1 ON (((rt60.c1 IN ())) NOT BETWEEN ((~ (rt60.c0))) AND ((rt1.c0 IN (rt1.c2)))) WHERE ((((rt1.c2)+(rt1.c1)) IN ())) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt60.c1 END)+(((rt60.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)+(rt1.c1)) IN ())) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) FULL OUTER JOIN rt1 ON (((rt60.c1 IN ())) NOT BETWEEN ((~ (rt60.c0))) AND ((rt1.c0 IN (rt1.c2)))) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt60.c1 END)+(((rt60.c0) NOT NULL))) ASC);
SELECT ALL * FROM v0, rt60 FULL OUTER JOIN t0 ON ((((vt0.c1)&(t0.c39)))|(3.7677768E7)) LEFT OUTER JOIN vt0 ON ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND ((((vt0.c2, v0.c0, t0.c87)) NOT BETWEEN ((vt0.c0, t0.c49, vt0.c0)) AND ((NULL, NULL, rt1.c3))))) INNER JOIN rt1 ON (+ (((0.1805434508734075)<>(vt0.c1)))) WHERE (CAST('-537311520' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('-537311520' AS BLOB)) IS TRUE)  as count FROM v0, rt60 FULL OUTER JOIN t0 ON ((((vt0.c1)&(t0.c39)))|(3.7677768E7)) LEFT OUTER JOIN vt0 ON ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND ((((vt0.c2, v0.c0, t0.c87)) NOT BETWEEN ((vt0.c0, t0.c49, vt0.c0)) AND ((NULL, NULL, rt1.c3))))) INNER JOIN rt1 ON (+ (((0.1805434508734075)!=(vt0.c1)))));
SELECT ALL * FROM v0, rt60 FULL OUTER JOIN t0 ON ((((vt0.c1)&(t0.c39)))|(3.7677768E7)) LEFT OUTER JOIN vt0 ON ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND ((((vt0.c2, v0.c0, t0.c87)) NOT BETWEEN ((vt0.c0, t0.c49, vt0.c0)) AND ((NULL, NULL, rt1.c3))))) INNER JOIN rt1 ON (+ (((0.1805434508734075)<>(vt0.c1)))) WHERE (CAST('-537311520' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('-537311520' AS BLOB)) IS TRUE)  as count FROM v0, rt60 FULL OUTER JOIN t0 ON ((((vt0.c1)&(t0.c39)))|(3.7677768E7)) LEFT OUTER JOIN vt0 ON ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND ((((vt0.c2, v0.c0, t0.c87)) NOT BETWEEN ((vt0.c0, t0.c49, vt0.c0)) AND ((NULL, NULL, rt1.c3))))) INNER JOIN rt1 ON (+ (((0.1805434508734075)!=(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0X448f6c9c)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))GLOB((((vt0.c2))<=((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((0X448f6c9c)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))GLOB((((vt0.c2))<=((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0X448f6c9c)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))GLOB((((vt0.c2))<=((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((0X448f6c9c)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))GLOB((((vt0.c2))<=((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0X448f6c9c)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))GLOB((((vt0.c2))<=((vt0.c2))))));
SELECT ALL * FROM rt60 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) COLLATE BINARY CROSS JOIN rt1 ON (~ (CASE t0.c49  WHEN rt60.c1 THEN rt1.c3 WHEN vt0.c2 THEN t0.c32 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN vt0 ON (((((rt1.c3)AND(vt0.c0)))AND(vt0.c0)) IN (((rt60.c1)%(t0.c49)), ((vt0.c1)-(825039702)))) WHERE (CASE ((rt1.c4)<>(rt60.c2))  WHEN rt60.c1 THEN CASE WHEN t0.c87 THEN rt1.c4 END ELSE CAST(0.04606271184810473 AS NUMERIC) END) ORDER BY ((((('0.04798963651027055'))<=((vt0.c1))))AND(((t0.c87) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c4)<>(rt60.c2))  WHEN rt60.c1 THEN CASE WHEN t0.c87 THEN rt1.c4 END ELSE CAST(0.04606271184810473 AS NUMERIC) END) IS TRUE)  as count FROM rt60 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) COLLATE BINARY CROSS JOIN rt1 ON (~ (CASE t0.c49  WHEN rt60.c1 THEN rt1.c3 WHEN vt0.c2 THEN t0.c32 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN vt0 ON (((((rt1.c3)AND(vt0.c0)))AND(vt0.c0)) IN (((rt60.c1)%(t0.c49)), ((vt0.c1)-(825039702)))) ORDER BY ((((('0.04798963651027055'))<=((vt0.c1))))AND(((t0.c87) NOT NULL))));
SELECT ALL * FROM rt60 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) COLLATE BINARY CROSS JOIN rt1 ON (~ (CASE t0.c49  WHEN rt60.c1 THEN rt1.c3 WHEN vt0.c2 THEN t0.c32 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN vt0 ON (((((rt1.c3)AND(vt0.c0)))AND(vt0.c0)) IN (((rt60.c1)%(t0.c49)), ((vt0.c1)-(825039702)))) WHERE (CASE ((rt1.c4)<>(rt60.c2))  WHEN rt60.c1 THEN CASE WHEN t0.c87 THEN rt1.c4 END ELSE CAST(0.04606271184810473 AS NUMERIC) END) ORDER BY ((((('0.04798963651027055'))<=((vt0.c1))))AND(((t0.c87) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c4)<>(rt60.c2))  WHEN rt60.c1 THEN CASE WHEN t0.c87 THEN rt1.c4 END ELSE CAST(0.04606271184810473 AS NUMERIC) END) IS TRUE)  as count FROM rt60 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) COLLATE BINARY CROSS JOIN rt1 ON (~ (CASE t0.c49  WHEN rt60.c1 THEN rt1.c3 WHEN vt0.c2 THEN t0.c32 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN vt0 ON (((((rt1.c3)AND(vt0.c0)))AND(vt0.c0)) IN (((rt60.c1)%(t0.c49)), ((vt0.c1)-(825039702)))) ORDER BY ((((('0.04798963651027055'))<=((vt0.c1))))AND(((t0.c87) NOT NULL))));
SELECT * FROM rt60 LEFT OUTER JOIN t0 ON (((t0.c32)) BETWEEN (((~ (1.76995987E9)))) AND ((rt1.c1))) LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt60.c1 WHERE (((IFNULL(rt1.c3, rt1.c3))%(((((((((0.7886228490037184)OR(rt1.c0)))AND(t0.c32)))OR(t0.c87)))AND(rt1.c0))))) ORDER BY rt60.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt1.c3, rt1.c3))%(((((((((0.7886228490037184)OR(rt1.c0)))AND(t0.c32)))OR(t0.c87)))AND(rt1.c0))))) IS TRUE)  as count FROM rt60 LEFT OUTER JOIN t0 ON (((t0.c32)) BETWEEN (((~ (1.76995987E9)))) AND ((rt1.c1))) LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt60.c1 ORDER BY rt60.c2 ASC  NULLS FIRST);
SELECT * FROM rt60 LEFT OUTER JOIN t0 ON (((t0.c32)) BETWEEN (((~ (1.76995987E9)))) AND ((rt1.c1))) LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt60.c1 WHERE (((IFNULL(rt1.c3, rt1.c3))%(((((((((0.7886228490037184)OR(rt1.c0)))AND(t0.c32)))OR(t0.c87)))AND(rt1.c0))))) ORDER BY rt60.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt1.c3, rt1.c3))%(((((((((0.7886228490037184)OR(rt1.c0)))AND(t0.c32)))OR(t0.c87)))AND(rt1.c0))))) IS TRUE)  as count FROM rt60 LEFT OUTER JOIN t0 ON (((t0.c32)) BETWEEN (((~ (1.76995987E9)))) AND ((rt1.c1))) LEFT OUTER JOIN rt1 ON ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt60.c1 ORDER BY rt60.c2 ASC  NULLS FIRST);
SELECT * FROM t0, rt60, vt0, rt1 WHERE (CAST(t0.c87 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c87 AS NUMERIC)) IS TRUE)  as count FROM t0, rt60, vt0, rt1);
SELECT * FROM t0, rt60, vt0, rt1 WHERE (CAST(t0.c87 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c87 AS NUMERIC)) IS TRUE)  as count FROM t0, rt60, vt0, rt1);
SELECT * FROM t0, rt60, vt0, rt1 WHERE (CAST(t0.c87 AS NUMERIC));
SELECT COUNT(*) FROM rt1, rt60 RIGHT OUTER JOIN vt0 ON t0.c49 COLLATE RTRIM COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((vt0.c1)<((rt1.c0 IN (rt1.c3)))) WHERE (NULL) ORDER BY ((((- (rt1.c3))))<=(((- (t0.c87))))), ((t0.c39)/(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt60 RIGHT OUTER JOIN vt0 ON t0.c49 COLLATE RTRIM COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((vt0.c1)<((rt1.c0 IN (rt1.c3)))) ORDER BY ((((- (rt1.c3))))<=(((- (t0.c87))))), ((t0.c39)/(rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt60 RIGHT OUTER JOIN vt0 ON t0.c49 COLLATE RTRIM COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((vt0.c1)<((rt1.c0 IN (rt1.c3)))) WHERE (NULL) ORDER BY ((((- (rt1.c3))))<=(((- (t0.c87))))), ((t0.c39)/(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt60 RIGHT OUTER JOIN vt0 ON t0.c49 COLLATE RTRIM COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((vt0.c1)<((rt1.c0 IN (rt1.c3)))) ORDER BY ((((- (rt1.c3))))<=(((- (t0.c87))))), ((t0.c39)/(rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ()) WHERE (((rt1.c3)=(rt1.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY '|DC芎N1U2*'  NULLS FIRST, ((((rt1.c3))>=((rt1.c1))) IN ());
SELECT SUM(count) FROM (SELECT ((((rt1.c3)==(rt1.c2)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ()) ORDER BY '|DC芎N1U2*'  NULLS FIRST, ((((rt1.c3))>=((rt1.c1))) IN ()));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ()) WHERE (((rt1.c3)=(rt1.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY '|DC芎N1U2*'  NULLS FIRST, ((((rt1.c3))>=((rt1.c1))) IN ());
SELECT SUM(count) FROM (SELECT ((((rt1.c3)==(rt1.c2)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ()) ORDER BY '|DC芎N1U2*'  NULLS FIRST, ((((rt1.c3))>=((rt1.c1))) IN ()));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ()) WHERE (((rt1.c3)=(rt1.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY '|DC芎N1U2*'  NULLS FIRST, ((((rt1.c3))>=((rt1.c1))) IN ());
SELECT * FROM vt0, rt1, t0 LEFT OUTER JOIN v0 ON ((t0.c32) NOT BETWEEN (vt0.c1) AND (rt1.c4)) COLLATE RTRIM LEFT OUTER JOIN rt60 ON CAST(CASE vt0.c0  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END AS NUMERIC) WHERE (CAST(rt1.c4 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, rt1, t0 LEFT OUTER JOIN v0 ON ((t0.c32) NOT BETWEEN (vt0.c1) AND (rt1.c4)) COLLATE RTRIM LEFT OUTER JOIN rt60 ON CAST(CASE vt0.c0  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END AS NUMERIC));
SELECT * FROM vt0, rt1, t0 LEFT OUTER JOIN v0 ON ((t0.c32) NOT BETWEEN (vt0.c1) AND (rt1.c4)) COLLATE RTRIM LEFT OUTER JOIN rt60 ON CAST(CASE vt0.c0  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END AS NUMERIC) WHERE (CAST(rt1.c4 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, rt1, t0 LEFT OUTER JOIN v0 ON ((t0.c32) NOT BETWEEN (vt0.c1) AND (rt1.c4)) COLLATE RTRIM LEFT OUTER JOIN rt60 ON CAST(CASE vt0.c0  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END AS NUMERIC));
SELECT * FROM vt0, rt1, t0 LEFT OUTER JOIN v0 ON ((t0.c32) NOT BETWEEN (vt0.c1) AND (rt1.c4)) COLLATE RTRIM LEFT OUTER JOIN rt60 ON CAST(CASE vt0.c0  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END AS NUMERIC) WHERE (CAST(rt1.c4 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM rt1, rt60, vt0, t0, v0 WHERE ((((('0.12756732118045055')OR((('967482973')=(rt1.c2)))))OR(CAST(t0.c39 AS REAL)))) ORDER BY (((rt60.c2 IN ()))&(((x'f4d9') NOT BETWEEN (t0.c49) AND (t0.c32))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('0.12756732118045055')OR((('967482973')=(rt1.c2)))))OR(CAST(t0.c39 AS REAL)))) IS TRUE)  as count FROM rt1, rt60, vt0, t0, v0 ORDER BY (((rt60.c2 IN ()))&(((x'f4d9') NOT BETWEEN (t0.c49) AND (t0.c32))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt60, vt0, t0, v0 WHERE ((((('0.12756732118045055')OR((('967482973')=(rt1.c2)))))OR(CAST(t0.c39 AS REAL)))) ORDER BY (((rt60.c2 IN ()))&(((x'f4d9') NOT BETWEEN (t0.c49) AND (t0.c32))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('0.12756732118045055')OR((('967482973')=(rt1.c2)))))OR(CAST(t0.c39 AS REAL)))) IS TRUE)  as count FROM rt1, rt60, vt0, t0, v0 ORDER BY (((rt60.c2 IN ()))&(((x'f4d9') NOT BETWEEN (t0.c49) AND (t0.c32))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt60, vt0, t0, v0 WHERE ((((('0.12756732118045055')OR((('967482973')=(rt1.c2)))))OR(CAST(t0.c39 AS REAL)))) ORDER BY (((rt60.c2 IN ()))&(((x'f4d9') NOT BETWEEN (t0.c49) AND (t0.c32))))  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (((COALESCE(vt0.c2, vt0.c1))<(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c2, vt0.c1))<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((COALESCE(vt0.c2, vt0.c1))<(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c2, vt0.c1))<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((COALESCE(vt0.c2, vt0.c1))<(vt0.c0 COLLATE BINARY)));
SELECT * FROM rt1 INNER JOIN rt60 ON rt1.c0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM rt1 INNER JOIN rt60 ON rt1.c0);
SELECT * FROM rt1 INNER JOIN rt60 ON rt1.c0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM rt1 INNER JOIN rt60 ON rt1.c0);
SELECT * FROM rt1 INNER JOIN rt60 ON rt1.c0 WHERE ((NOT (x'')));
SELECT COUNT(*) FROM vt0, rt60 WHERE (((rt60.c0)>(rt60.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt60.c0)>(rt60.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt60);
SELECT COUNT(*) FROM vt0, rt60 WHERE (((rt60.c0)>(rt60.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt60.c0)>(rt60.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt60);
SELECT COUNT(*) FROM vt0, rt60 WHERE (((rt60.c0)>(rt60.c1)) COLLATE NOCASE);
SELECT * FROM rt1, v0, rt60, vt0, t0 WHERE (0.5640359871198752) ORDER BY (((x'')) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND (((~ (''))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5640359871198752) IS TRUE)  as count FROM rt1, v0, rt60, vt0, t0 ORDER BY (((x'')) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND (((~ (''))))) DESC  NULLS LAST);
SELECT * FROM rt1, v0, rt60, vt0, t0 WHERE (0.5640359871198752) ORDER BY (((x'')) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND (((~ (''))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5640359871198752) IS TRUE)  as count FROM rt1, v0, rt60, vt0, t0 ORDER BY (((x'')) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND (((~ (''))))) DESC  NULLS LAST);
SELECT * FROM rt1, v0, rt60, vt0, t0 WHERE (0.5640359871198752) ORDER BY (((x'')) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND (((~ (''))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, v0, rt60, vt0, t0 WHERE (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt60.c2)) COLLATE RTRIM) ORDER BY '13615275'  NULLS LAST, (~ (((rt60.c1) BETWEEN (t0.c39) AND (t0.c39)))) ASC, ((rt1.c0)>>((((('-1662348329')AND(t0.c87)))OR(t0.c87)))) ASC  NULLS FIRST, CASE WHEN TYPEOF(rt1.c1) THEN (- ('~W')) WHEN (- (v0.c0)) THEN (x'501601e7' IN (t0.c49, rt60.c2)) WHEN ((rt1.c4)AND(t0.c87)) THEN NULL COLLATE NOCASE WHEN ((rt1.c1)<(rt1.c0)) THEN '' WHEN (((t0.c32, rt1.c4, t0.c32)) BETWEEN ((rt1.c0, rt1.c1, x'8259f128')) AND ((t0.c49, rt1.c3, rt1.c2))) THEN vt0.c2 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt60.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, rt60, vt0, t0 ORDER BY '13615275'  NULLS LAST, (~ (((rt60.c1) BETWEEN (t0.c39) AND (t0.c39)))) ASC, ((rt1.c0)>>((((('-1662348329')AND(t0.c87)))OR(t0.c87)))) ASC  NULLS FIRST, CASE WHEN TYPEOF(rt1.c1) THEN (- ('~W')) WHEN (- (v0.c0)) THEN (x'501601e7' IN (t0.c49, rt60.c2)) WHEN ((rt1.c4)AND(t0.c87)) THEN NULL COLLATE NOCASE WHEN ((rt1.c1)<(rt1.c0)) THEN '' WHEN (((t0.c32, rt1.c4, t0.c32)) BETWEEN ((rt1.c0, rt1.c1, x'8259f128')) AND ((t0.c49, rt1.c3, rt1.c2))) THEN vt0.c2 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt1, v0, rt60, vt0, t0 WHERE (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt60.c2)) COLLATE RTRIM) ORDER BY '13615275'  NULLS LAST, (~ (((rt60.c1) BETWEEN (t0.c39) AND (t0.c39)))) ASC, ((rt1.c0)>>((((('-1662348329')AND(t0.c87)))OR(t0.c87)))) ASC  NULLS FIRST, CASE WHEN TYPEOF(rt1.c1) THEN (- ('~W')) WHEN (- (v0.c0)) THEN (x'501601e7' IN (t0.c49, rt60.c2)) WHEN ((rt1.c4)AND(t0.c87)) THEN NULL COLLATE NOCASE WHEN ((rt1.c1)<(rt1.c0)) THEN '' WHEN (((t0.c32, rt1.c4, t0.c32)) BETWEEN ((rt1.c0, rt1.c1, x'8259f128')) AND ((t0.c49, rt1.c3, rt1.c2))) THEN vt0.c2 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt60.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, rt60, vt0, t0 ORDER BY '13615275'  NULLS LAST, (~ (((rt60.c1) BETWEEN (t0.c39) AND (t0.c39)))) ASC, ((rt1.c0)>>((((('-1662348329')AND(t0.c87)))OR(t0.c87)))) ASC  NULLS FIRST, CASE WHEN TYPEOF(rt1.c1) THEN (- ('~W')) WHEN (- (v0.c0)) THEN (x'501601e7' IN (t0.c49, rt60.c2)) WHEN ((rt1.c4)AND(t0.c87)) THEN NULL COLLATE NOCASE WHEN ((rt1.c1)<(rt1.c0)) THEN '' WHEN (((t0.c32, rt1.c4, t0.c32)) BETWEEN ((rt1.c0, rt1.c1, x'8259f128')) AND ((t0.c49, rt1.c3, rt1.c2))) THEN vt0.c2 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt1, v0, rt60, vt0, t0 WHERE (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt60.c2)) COLLATE RTRIM) ORDER BY '13615275'  NULLS LAST, (~ (((rt60.c1) BETWEEN (t0.c39) AND (t0.c39)))) ASC, ((rt1.c0)>>((((('-1662348329')AND(t0.c87)))OR(t0.c87)))) ASC  NULLS FIRST, CASE WHEN TYPEOF(rt1.c1) THEN (- ('~W')) WHEN (- (v0.c0)) THEN (x'501601e7' IN (t0.c49, rt60.c2)) WHEN ((rt1.c4)AND(t0.c87)) THEN NULL COLLATE NOCASE WHEN ((rt1.c1)<(rt1.c0)) THEN '' WHEN (((t0.c32, rt1.c4, t0.c32)) BETWEEN ((rt1.c0, rt1.c1, x'8259f128')) AND ((t0.c49, rt1.c3, rt1.c2))) THEN vt0.c2 COLLATE RTRIM END;
SELECT * FROM rt60, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(vt0.c1) IN ())) ORDER BY ((UPPER(rt60.c2))*((~ (rt60.c0)))), ((((vt0.c1) NOT NULL))>>(((rt60.c2)%(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((SQLITE_COMPILEOPTION_GET(vt0.c1) IN ())) IS TRUE)  as count FROM rt60, vt0 ORDER BY ((UPPER(rt60.c2))*((~ (rt60.c0)))), ((((vt0.c1) NOT NULL))>>(((rt60.c2)%(rt60.c0))))  NULLS FIRST);
SELECT * FROM rt60, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(vt0.c1) IN ())) ORDER BY ((UPPER(rt60.c2))*((~ (rt60.c0)))), ((((vt0.c1) NOT NULL))>>(((rt60.c2)%(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((SQLITE_COMPILEOPTION_GET(vt0.c1) IN ())) IS TRUE)  as count FROM rt60, vt0 ORDER BY ((UPPER(rt60.c2))*((~ (rt60.c0)))), ((((vt0.c1) NOT NULL))>>(((rt60.c2)%(rt60.c0))))  NULLS FIRST);
SELECT * FROM rt60, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(vt0.c1) IN ())) ORDER BY ((UPPER(rt60.c2))*((~ (rt60.c0)))), ((((vt0.c1) NOT NULL))>>(((rt60.c2)%(rt60.c0))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((v0.c0)<>(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)!=(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)<>(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)!=(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)<>(v0.c0)) IN ()));
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c32 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (((((~ (vt0.c1)))AND(v0.c0)))AND(((((t0.c39)OR(t0.c87)))AND(t0.c32)))) DESC  NULLS FIRST, ((((((((((((vt0.c2)AND(((vt0.c2) IS TRUE))))AND('jkK껡)*殄C')))AND((((t0.c32))<((t0.c87))))))AND((vt0.c0 IN ()))))OR((((t0.c49))<=((t0.c87))))))AND(NULL)), ((json_insert(v0.c0, v0.c0, t0.c87, v0.c0, vt0.c1))*(((t0.c32) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c32 ORDER BY (((((~ (vt0.c1)))AND(v0.c0)))AND(((((t0.c39)OR(t0.c87)))AND(t0.c32)))) DESC  NULLS FIRST, ((((((((((((vt0.c2)AND(((vt0.c2) IS TRUE))))AND('jkK껡)*殄C')))AND((((t0.c32))<((t0.c87))))))AND((vt0.c0 IN ()))))OR((((t0.c49))<=((t0.c87))))))AND(NULL)), ((json_insert(v0.c0, v0.c0, t0.c87, v0.c0, vt0.c1))*(((t0.c32) IS TRUE))) DESC);
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c32 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (((((~ (vt0.c1)))AND(v0.c0)))AND(((((t0.c39)OR(t0.c87)))AND(t0.c32)))) DESC  NULLS FIRST, ((((((((((((vt0.c2)AND(((vt0.c2) IS TRUE))))AND('jkK껡)*殄C')))AND((((t0.c32))<((t0.c87))))))AND((vt0.c0 IN ()))))OR((((t0.c49))<=((t0.c87))))))AND(NULL)), ((json_insert(v0.c0, v0.c0, t0.c87, v0.c0, vt0.c1))*(((t0.c32) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c32 ORDER BY (((((~ (vt0.c1)))AND(v0.c0)))AND(((((t0.c39)OR(t0.c87)))AND(t0.c32)))) DESC  NULLS FIRST, ((((((((((((vt0.c2)AND(((vt0.c2) IS TRUE))))AND('jkK껡)*殄C')))AND((((t0.c32))<((t0.c87))))))AND((vt0.c0 IN ()))))OR((((t0.c49))<=((t0.c87))))))AND(NULL)), ((json_insert(v0.c0, v0.c0, t0.c87, v0.c0, vt0.c1))*(((t0.c32) IS TRUE))) DESC);
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c32 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (((((~ (vt0.c1)))AND(v0.c0)))AND(((((t0.c39)OR(t0.c87)))AND(t0.c32)))) DESC  NULLS FIRST, ((((((((((((vt0.c2)AND(((vt0.c2) IS TRUE))))AND('jkK껡)*殄C')))AND((((t0.c32))<((t0.c87))))))AND((vt0.c0 IN ()))))OR((((t0.c49))<=((t0.c87))))))AND(NULL)), ((json_insert(v0.c0, v0.c0, t0.c87, v0.c0, vt0.c1))*(((t0.c32) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('1099936895') ORDER BY (- (CASE v0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL (('1099936895') IS TRUE)  as count FROM rt1, v0 ORDER BY (- (CASE v0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('1099936895') ORDER BY (- (CASE v0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL (('1099936895') IS TRUE)  as count FROM rt1, v0 ORDER BY (- (CASE v0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('1099936895') ORDER BY (- (CASE v0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END));
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((x'') IS TRUE)))=((((rt1.c4)!=(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((x'') IS TRUE)))==((((rt1.c4)!=(rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((x'') IS TRUE)))=((((rt1.c4)!=(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((x'') IS TRUE)))==((((rt1.c4)!=(rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1, t0 WHERE ((((((x'') IS TRUE)))=((((rt1.c4)!=(rt1.c2))))));
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((TRIM(rt1.c4))IS NOT(CASE WHEN x'5d6f' THEN rt60.c2 ELSE rt1.c0 END)) LEFT OUTER JOIN rt60 ON CAST(((rt60.c1) IS FALSE) AS INTEGER) LEFT OUTER JOIN v0 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c0)||(rt60.c0)) THEN (rt1.c4 IN ()) ELSE ((rt1.c3)%(v0.c0)) END WHERE (((x'')>=(((((rt1.c1)AND(rt1.c2)))OR(rt60.c1))))) ORDER BY ((rt60.c0)-(rt60.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>=(((((rt1.c1)AND(rt1.c2)))OR(rt60.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((TRIM(rt1.c4))IS NOT(CASE WHEN x'5d6f' THEN rt60.c2 ELSE rt1.c0 END)) LEFT OUTER JOIN rt60 ON CAST(((rt60.c1) IS FALSE) AS INTEGER) LEFT OUTER JOIN v0 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c0)||(rt60.c0)) THEN (rt1.c4 IN ()) ELSE ((rt1.c3)%(v0.c0)) END ORDER BY ((rt60.c0)-(rt60.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((TRIM(rt1.c4))IS NOT(CASE WHEN x'5d6f' THEN rt60.c2 ELSE rt1.c0 END)) LEFT OUTER JOIN rt60 ON CAST(((rt60.c1) IS FALSE) AS INTEGER) LEFT OUTER JOIN v0 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c0)||(rt60.c0)) THEN (rt1.c4 IN ()) ELSE ((rt1.c3)%(v0.c0)) END WHERE (((x'')>=(((((rt1.c1)AND(rt1.c2)))OR(rt60.c1))))) ORDER BY ((rt60.c0)-(rt60.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>=(((((rt1.c1)AND(rt1.c2)))OR(rt60.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((TRIM(rt1.c4))IS NOT(CASE WHEN x'5d6f' THEN rt60.c2 ELSE rt1.c0 END)) LEFT OUTER JOIN rt60 ON CAST(((rt60.c1) IS FALSE) AS INTEGER) LEFT OUTER JOIN v0 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c0)||(rt60.c0)) THEN (rt1.c4 IN ()) ELSE ((rt1.c3)%(v0.c0)) END ORDER BY ((rt60.c0)-(rt60.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt60, v0, vt0, t0 WHERE ((((vt0.c2 IN (vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN (vt0.c2))) ISNULL)) IS TRUE)  as count FROM rt1, rt60, v0, vt0, t0);
SELECT ALL * FROM rt1, rt60, v0, vt0, t0 WHERE ((((vt0.c2 IN (vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN (vt0.c2))) ISNULL)) IS TRUE)  as count FROM rt1, rt60, v0, vt0, t0);
SELECT ALL * FROM rt1, rt60, v0, vt0, t0 WHERE ((((vt0.c2 IN (vt0.c2))) ISNULL));
SELECT ALL * FROM rt60, vt0, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))<<(((t0.c87) ISNULL))) WHERE ((((t0.c49, t0.c87, t0.c49)) NOT BETWEEN ((x'', CAST(0xffffffff86b9f893 AS REAL), ((t0.c87) BETWEEN (rt1.c2) AND (rt1.c3)))) AND ((((vt0.c0)%(t0.c87)), (('-689585351') NOT BETWEEN (vt0.c2) AND (vt0.c0)), ((rt60.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c49, t0.c87, t0.c49)) NOT BETWEEN ((x'', CAST(0xffffffff86b9f893 AS REAL), ((t0.c87) BETWEEN (rt1.c2) AND (rt1.c3)))) AND ((((vt0.c0)%(t0.c87)), (('-689585351') NOT BETWEEN (vt0.c2) AND (vt0.c0)), ((rt60.c1) IS FALSE))))) IS TRUE)  as count FROM rt60, vt0, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))<<(((t0.c87) ISNULL))));
SELECT ALL * FROM rt60, vt0, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))<<(((t0.c87) ISNULL))) WHERE ((((t0.c49, t0.c87, t0.c49)) NOT BETWEEN ((x'', CAST(0xffffffff86b9f893 AS REAL), ((t0.c87) BETWEEN (rt1.c2) AND (rt1.c3)))) AND ((((vt0.c0)%(t0.c87)), (('-689585351') NOT BETWEEN (vt0.c2) AND (vt0.c0)), ((rt60.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c49, t0.c87, t0.c49)) NOT BETWEEN ((x'', CAST(0xffffffff86b9f893 AS REAL), ((t0.c87) BETWEEN (rt1.c2) AND (rt1.c3)))) AND ((((vt0.c0)%(t0.c87)), (('-689585351') NOT BETWEEN (vt0.c2) AND (vt0.c0)), ((rt60.c1) IS FALSE))))) IS TRUE)  as count FROM rt60, vt0, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))<<(((t0.c87) ISNULL))));
SELECT ALL * FROM rt60, vt0, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))<<(((t0.c87) ISNULL))) WHERE ((((t0.c49, t0.c87, t0.c49)) NOT BETWEEN ((x'', CAST(0xffffffff86b9f893 AS REAL), ((t0.c87) BETWEEN (rt1.c2) AND (rt1.c3)))) AND ((((vt0.c0)%(t0.c87)), (('-689585351') NOT BETWEEN (vt0.c2) AND (vt0.c0)), ((rt60.c1) IS FALSE)))));
SELECT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c1)), (vt0.c0 IN ()), ((vt0.c1)IS NOT(NULL))))!=((((vt0.c0)-(vt0.c2)), ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)), ((x'b35e')GLOB(vt0.c2)))))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN '' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE '-1993878751' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN (vt0.c1)), (vt0.c0 IN ()), ((vt0.c1)IS NOT(NULL))))!=((((vt0.c0)-(vt0.c2)), ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)), ((x'b35e')GLOB(vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN '' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE '-1993878751' END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c1)), (vt0.c0 IN ()), ((vt0.c1)IS NOT(NULL))))!=((((vt0.c0)-(vt0.c2)), ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)), ((x'b35e')GLOB(vt0.c2)))))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN '' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE '-1993878751' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN (vt0.c1)), (vt0.c0 IN ()), ((vt0.c1)IS NOT(NULL))))!=((((vt0.c0)-(vt0.c2)), ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)), ((x'b35e')GLOB(vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN '' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE '-1993878751' END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c1)), (vt0.c0 IN ()), ((vt0.c1)IS NOT(NULL))))!=((((vt0.c0)-(vt0.c2)), ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)), ((x'b35e')GLOB(vt0.c2)))))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))  WHEN '' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE '-1993878751' END DESC;
SELECT ALL COUNT(*) FROM rt60 WHERE (((rt60.c0 COLLATE BINARY) BETWEEN (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))) AND (((rt60.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt60.c0 COLLATE BINARY) BETWEEN (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))) AND (((rt60.c0) ISNULL)))) IS TRUE)  as count FROM rt60);
SELECT ALL COUNT(*) FROM rt60 WHERE (((rt60.c0 COLLATE BINARY) BETWEEN (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))) AND (((rt60.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt60.c0 COLLATE BINARY) BETWEEN (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))) AND (((rt60.c0) ISNULL)))) IS TRUE)  as count FROM rt60);
SELECT ALL COUNT(*) FROM rt60 WHERE (((rt60.c0 COLLATE BINARY) BETWEEN (((((rt60.c1)AND(rt60.c1)))AND(rt60.c0))) AND (((rt60.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON json_array_length(UNLIKELY(rt1.c1)) INNER JOIN rt1 ON (((vt0.c2 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c2)!=(vt0.c2)))) WHERE (((0.6584958846952397 COLLATE NOCASE)GLOB(((rt1.c3) BETWEEN (vt0.c2) AND (v0.c0))))) ORDER BY CAST((rt1.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.6584958846952397 COLLATE NOCASE)GLOB(((rt1.c3) BETWEEN (vt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON json_array_length(UNLIKELY(rt1.c1)) INNER JOIN rt1 ON (((vt0.c2 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c2)<>(vt0.c2)))) ORDER BY CAST((rt1.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON json_array_length(UNLIKELY(rt1.c1)) INNER JOIN rt1 ON (((vt0.c2 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c2)!=(vt0.c2)))) WHERE (((0.6584958846952397 COLLATE NOCASE)GLOB(((rt1.c3) BETWEEN (vt0.c2) AND (v0.c0))))) ORDER BY CAST((rt1.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.6584958846952397 COLLATE NOCASE)GLOB(((rt1.c3) BETWEEN (vt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON json_array_length(UNLIKELY(rt1.c1)) INNER JOIN rt1 ON (((vt0.c2 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c2)<>(vt0.c2)))) ORDER BY CAST((rt1.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE ((v0.c0)/(v0.c0))  WHEN 'BO' THEN 'k2]t*7+\' COLLATE RTRIM WHEN (v0.c0 IN ()) THEN (((v0.c0))>=((v0.c0))) WHEN RTRIM(v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)/(v0.c0))  WHEN 'BO' THEN 'k2]t*7+\' COLLATE RTRIM WHEN (v0.c0 IN ()) THEN (((v0.c0))>=((v0.c0))) WHEN RTRIM(v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c0)/(v0.c0))  WHEN 'BO' THEN 'k2]t*7+\' COLLATE RTRIM WHEN (v0.c0 IN ()) THEN (((v0.c0))>=((v0.c0))) WHEN RTRIM(v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)/(v0.c0))  WHEN 'BO' THEN 'k2]t*7+\' COLLATE RTRIM WHEN (v0.c0 IN ()) THEN (((v0.c0))>=((v0.c0))) WHEN RTRIM(v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c0)/(v0.c0))  WHEN 'BO' THEN 'k2]t*7+\' COLLATE RTRIM WHEN (v0.c0 IN ()) THEN (((v0.c0))>=((v0.c0))) WHEN RTRIM(v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT ALL * FROM v0, rt60 WHERE ((((((rt60.c0))==((rt60.c1))))<>(((rt60.c0)GLOB(rt60.c0))))) ORDER BY (rt60.c2 IN (v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt60.c0))=((rt60.c1))))<>(((rt60.c0)GLOB(rt60.c0))))) IS TRUE)  as count FROM v0, rt60 ORDER BY (rt60.c2 IN (v0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0, rt60 WHERE ((((((rt60.c0))==((rt60.c1))))<>(((rt60.c0)GLOB(rt60.c0))))) ORDER BY (rt60.c2 IN (v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt60.c0))=((rt60.c1))))<>(((rt60.c0)GLOB(rt60.c0))))) IS TRUE)  as count FROM v0, rt60 ORDER BY (rt60.c2 IN (v0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0, rt60 WHERE ((((((rt60.c0))==((rt60.c1))))<>(((rt60.c0)GLOB(rt60.c0))))) ORDER BY (rt60.c2 IN (v0.c0)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt60 ON ((rt60.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt1 ON (((vt0.c1 IN ())) NOT BETWEEN (CASE WHEN rt60.c0 THEN t0.c87 END) AND (CAST(rt60.c2 AS TEXT))) INNER JOIN t0 ON ((((t0.c87)IS NOT(vt0.c1)))<(load_extension(rt1.c0))) WHERE (((((((((((rt1.c0)=(vt0.c2)))OR(((((rt1.c2)OR(rt1.c0)))OR(NULL)))))OR(rt60.c0 COLLATE NOCASE)))AND('1335618155')))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)==(vt0.c2)))OR(((((rt1.c2)OR(rt1.c0)))OR(NULL)))))OR(rt60.c0 COLLATE NOCASE)))AND('1335618155')))OR(rt1.c2))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt60 ON ((rt60.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt1 ON (((vt0.c1 IN ())) NOT BETWEEN (CASE WHEN rt60.c0 THEN t0.c87 END) AND (CAST(rt60.c2 AS TEXT))) INNER JOIN t0 ON ((((t0.c87)IS NOT(vt0.c1)))<(load_extension(rt1.c0))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt60 ON ((rt60.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt1 ON (((vt0.c1 IN ())) NOT BETWEEN (CASE WHEN rt60.c0 THEN t0.c87 END) AND (CAST(rt60.c2 AS TEXT))) INNER JOIN t0 ON ((((t0.c87)IS NOT(vt0.c1)))<(load_extension(rt1.c0))) WHERE (((((((((((rt1.c0)=(vt0.c2)))OR(((((rt1.c2)OR(rt1.c0)))OR(NULL)))))OR(rt60.c0 COLLATE NOCASE)))AND('1335618155')))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)==(vt0.c2)))OR(((((rt1.c2)OR(rt1.c0)))OR(NULL)))))OR(rt60.c0 COLLATE NOCASE)))AND('1335618155')))OR(rt1.c2))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt60 ON ((rt60.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt1 ON (((vt0.c1 IN ())) NOT BETWEEN (CASE WHEN rt60.c0 THEN t0.c87 END) AND (CAST(rt60.c2 AS TEXT))) INNER JOIN t0 ON ((((t0.c87)IS NOT(vt0.c1)))<(load_extension(rt1.c0))));
SELECT COUNT(*) FROM rt60, v0, vt0 WHERE (CASE WHEN ABS(DISTINCT v0.c0) THEN rt60.c0 WHEN LOWER(rt60.c2) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN (((rt60.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))) END) ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (rt60.c2 COLLATE NOCASE) AND (((rt60.c1)>=(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(DISTINCT v0.c0) THEN rt60.c0 WHEN LOWER(rt60.c2) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN (((rt60.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))) END) IS TRUE)  as count FROM rt60, v0, vt0 ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (rt60.c2 COLLATE NOCASE) AND (((rt60.c1)>=(rt60.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt60, v0, vt0 WHERE (CASE WHEN ABS(DISTINCT v0.c0) THEN rt60.c0 WHEN LOWER(rt60.c2) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN (((rt60.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))) END) ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (rt60.c2 COLLATE NOCASE) AND (((rt60.c1)>=(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(DISTINCT v0.c0) THEN rt60.c0 WHEN LOWER(rt60.c2) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN (((rt60.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))) END) IS TRUE)  as count FROM rt60, v0, vt0 ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (rt60.c2 COLLATE NOCASE) AND (((rt60.c1)>=(rt60.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt60, v0, vt0 WHERE (CASE WHEN ABS(DISTINCT v0.c0) THEN rt60.c0 WHEN LOWER(rt60.c2) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN (((rt60.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt60.c0))) END) ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (rt60.c2 COLLATE NOCASE) AND (((rt60.c1)>=(rt60.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, vt0, rt60 WHERE (CAST(t0.c49 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c49 AS REAL)) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, vt0, rt60);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, rt60 WHERE (CAST(t0.c49 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c49 AS REAL)) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, vt0, rt60);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, rt60 WHERE (CAST(t0.c49 AS REAL));
SELECT ALL * FROM v0, rt60, rt1 WHERE ((NOT (((rt60.c0) BETWEEN (rt60.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt60.c0) BETWEEN (rt60.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt60, rt1);
SELECT ALL * FROM v0, rt60, rt1 WHERE ((NOT (((rt60.c0) BETWEEN (rt60.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt60.c0) BETWEEN (rt60.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt60, rt1);
SELECT ALL * FROM v0, rt60, rt1 WHERE ((NOT (((rt60.c0) BETWEEN (rt60.c2) AND (v0.c0)))));
SELECT * FROM rt1, t0, v0, vt0 WHERE ((((- (vt0.c1)))&((NOT (t0.c39)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1)))&((NOT (t0.c39))))) IS TRUE)  as count FROM rt1, t0, v0, vt0);
SELECT * FROM rt1, t0, v0, vt0 WHERE ((((- (vt0.c1)))&((NOT (t0.c39)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1)))&((NOT (t0.c39))))) IS TRUE)  as count FROM rt1, t0, v0, vt0);
SELECT * FROM rt1, t0, v0, vt0 WHERE ((((- (vt0.c1)))&((NOT (t0.c39)))));
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt60 WHERE (((0X2fc3444)>=(((v0.c0) IS FALSE)))) ORDER BY ((((((((((v0.c0)OR(t0.c32)))AND(rt60.c0)))AND(t0.c87)))AND(vt0.c0)))|(((rt60.c1)<=(rt60.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0x2fc3444)>=(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, v0, rt60 ORDER BY ((((((((((v0.c0)OR(t0.c32)))AND(rt60.c0)))AND(t0.c87)))AND(vt0.c0)))|(((rt60.c1)<=(rt60.c1)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt60 WHERE (((0X2fc3444)>=(((v0.c0) IS FALSE)))) ORDER BY ((((((((((v0.c0)OR(t0.c32)))AND(rt60.c0)))AND(t0.c87)))AND(vt0.c0)))|(((rt60.c1)<=(rt60.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0x2fc3444)>=(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, v0, rt60 ORDER BY ((((((((((v0.c0)OR(t0.c32)))AND(rt60.c0)))AND(t0.c87)))AND(vt0.c0)))|(((rt60.c1)<=(rt60.c1)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt60 WHERE (((0X2fc3444)>=(((v0.c0) IS FALSE)))) ORDER BY ((((((((((v0.c0)OR(t0.c32)))AND(rt60.c0)))AND(t0.c87)))AND(vt0.c0)))|(((rt60.c1)<=(rt60.c1)))) ASC;
SELECT ALL * FROM vt0, t0, rt1, rt60 WHERE (((CASE vt0.c0  WHEN t0.c32 THEN rt60.c0 ELSE t0.c49 END) NOT NULL)) ORDER BY ((t0.c87) BETWEEN (t0.c32) AND (((rt1.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c32 THEN rt60.c0 ELSE t0.c49 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt1, rt60 ORDER BY ((t0.c87) BETWEEN (t0.c32) AND (((rt1.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt1, rt60 WHERE (((CASE vt0.c0  WHEN t0.c32 THEN rt60.c0 ELSE t0.c49 END) NOT NULL)) ORDER BY ((t0.c87) BETWEEN (t0.c32) AND (((rt1.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c32 THEN rt60.c0 ELSE t0.c49 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt1, rt60 ORDER BY ((t0.c87) BETWEEN (t0.c32) AND (((rt1.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt1, rt60 WHERE (((CASE vt0.c0  WHEN t0.c32 THEN rt60.c0 ELSE t0.c49 END) NOT NULL)) ORDER BY ((t0.c87) BETWEEN (t0.c32) AND (((rt1.c0) IS TRUE)))  NULLS FIRST;
SELECT * FROM t0, rt60 WHERE (((NULL)=(((((t0.c32)OR(rt60.c1)))AND(t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(((((t0.c32)OR(rt60.c1)))AND(t0.c87))))) IS TRUE)  as count FROM t0, rt60);
SELECT * FROM t0, rt60 WHERE (((NULL)=(((((t0.c32)OR(rt60.c1)))AND(t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(((((t0.c32)OR(rt60.c1)))AND(t0.c87))))) IS TRUE)  as count FROM t0, rt60);
SELECT * FROM t0, rt60 WHERE (((NULL)=(((((t0.c32)OR(rt60.c1)))AND(t0.c87)))));
SELECT ALL COUNT(*) FROM rt60, t0, vt0 WHERE ('691618937');
SELECT SUM(count) FROM (SELECT (('691618937') IS TRUE)  as count FROM rt60, t0, vt0);
SELECT ALL COUNT(*) FROM rt60, t0, vt0 WHERE ('691618937');
SELECT SUM(count) FROM (SELECT (('691618937') IS TRUE)  as count FROM rt60, t0, vt0);
SELECT ALL COUNT(*) FROM rt60, t0, vt0 WHERE ('691618937');
SELECT COUNT(*) FROM v0, rt60, vt0 WHERE (((((vt0.c0)/(rt60.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(rt60.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt60, vt0);
SELECT COUNT(*) FROM v0, rt60, vt0 WHERE (((((vt0.c0)/(rt60.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(rt60.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt60, vt0);
SELECT COUNT(*) FROM v0, rt60, vt0 WHERE (((((vt0.c0)/(rt60.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (LIKELY(NULL));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(NULL)) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (LIKELY(NULL));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(NULL)) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (LIKELY(NULL));
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt1, rt60 WHERE (rt1.c1) ORDER BY ((((rt1.c2)%(rt1.c3)))>>(CASE rt1.c1  WHEN rt60.c2 THEN t0.c87 END)), ((CHANGES()) ISNULL) DESC  NULLS FIRST, ((((t0.c87) NOT NULL))+(NULL));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, v0, t0, rt1, rt60 ORDER BY ((((rt1.c2)%(rt1.c3)))>>(CASE rt1.c1  WHEN rt60.c2 THEN t0.c87 END)), ((CHANGES()) ISNULL) DESC  NULLS FIRST, ((((t0.c87) NOT NULL))+(NULL)));
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt1, rt60 WHERE (rt1.c1) ORDER BY ((((rt1.c2)%(rt1.c3)))>>(CASE rt1.c1  WHEN rt60.c2 THEN t0.c87 END)), ((CHANGES()) ISNULL) DESC  NULLS FIRST, ((((t0.c87) NOT NULL))+(NULL));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, v0, t0, rt1, rt60 ORDER BY ((((rt1.c2)%(rt1.c3)))>>(CASE rt1.c1  WHEN rt60.c2 THEN t0.c87 END)), ((CHANGES()) ISNULL) DESC  NULLS FIRST, ((((t0.c87) NOT NULL))+(NULL)));
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt1, rt60 WHERE (rt1.c1) ORDER BY ((((rt1.c2)%(rt1.c3)))>>(CASE rt1.c1  WHEN rt60.c2 THEN t0.c87 END)), ((CHANGES()) ISNULL) DESC  NULLS FIRST, ((((t0.c87) NOT NULL))+(NULL));
SELECT ALL * FROM rt60 RIGHT OUTER JOIN v0 ON ((((rt60.c2) ISNULL))>=(rt60.c0 COLLATE RTRIM)) WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY ((((v0.c0)AND(rt60.c2)))OR(rt60.c1)) COLLATE BINARY  NULLS LAST, ((('VhMvC>I('))>=((MAX(rt60.c1, rt60.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN v0 ON ((((rt60.c2) ISNULL))>=(rt60.c0 COLLATE RTRIM)) ORDER BY ((((v0.c0)AND(rt60.c2)))OR(rt60.c1)) COLLATE BINARY  NULLS LAST, ((('VhMvC>I('))>=((MAX(rt60.c1, rt60.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt60 RIGHT OUTER JOIN v0 ON ((((rt60.c2) ISNULL))>=(rt60.c0 COLLATE RTRIM)) WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY ((((v0.c0)AND(rt60.c2)))OR(rt60.c1)) COLLATE BINARY  NULLS LAST, ((('VhMvC>I('))>=((MAX(rt60.c1, rt60.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt60 RIGHT OUTER JOIN v0 ON ((((rt60.c2) ISNULL))>=(rt60.c0 COLLATE RTRIM)) ORDER BY ((((v0.c0)AND(rt60.c2)))OR(rt60.c1)) COLLATE BINARY  NULLS LAST, ((('VhMvC>I('))>=((MAX(rt60.c1, rt60.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt60 RIGHT OUTER JOIN v0 ON ((((rt60.c2) ISNULL))>=(rt60.c0 COLLATE RTRIM)) WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY ((((v0.c0)AND(rt60.c2)))OR(rt60.c1)) COLLATE BINARY  NULLS LAST, ((('VhMvC>I('))>=((MAX(rt60.c1, rt60.c0)))) DESC  NULLS LAST;
SELECT * FROM t0, rt1, v0, vt0, rt60 WHERE (CAST(CASE WHEN rt60.c1 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt60.c1 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM t0, rt1, v0, vt0, rt60);
SELECT * FROM t0, rt1, v0, vt0, rt60 WHERE (CAST(CASE WHEN rt60.c1 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt60.c1 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM t0, rt1, v0, vt0, rt60);
SELECT * FROM t0, rt1, v0, vt0, rt60 WHERE (CAST(CASE WHEN rt60.c1 THEN vt0.c0 END AS REAL));
SELECT COUNT(*) FROM rt1, rt60, vt0, v0 WHERE ((((CHAR(vt0.c1)))<=(((('37677768') IS TRUE))))) ORDER BY (((((((((+ (rt1.c1)))OR(((vt0.c1) NOT BETWEEN (rt1.c3) AND (x'4196')))))AND((+ (rt1.c2)))))AND(vt0.c1)))AND(CASE WHEN vt0.c2 THEN rt1.c4 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CHAR(vt0.c1)))<=(((('37677768') IS TRUE))))) IS TRUE)  as count FROM rt1, rt60, vt0, v0 ORDER BY (((((((((+ (rt1.c1)))OR(((vt0.c1) NOT BETWEEN (rt1.c3) AND (x'4196')))))AND((+ (rt1.c2)))))AND(vt0.c1)))AND(CASE WHEN vt0.c2 THEN rt1.c4 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt60, vt0, v0 WHERE ((((CHAR(vt0.c1)))<=(((('37677768') IS TRUE))))) ORDER BY (((((((((+ (rt1.c1)))OR(((vt0.c1) NOT BETWEEN (rt1.c3) AND (x'4196')))))AND((+ (rt1.c2)))))AND(vt0.c1)))AND(CASE WHEN vt0.c2 THEN rt1.c4 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CHAR(vt0.c1)))<=(((('37677768') IS TRUE))))) IS TRUE)  as count FROM rt1, rt60, vt0, v0 ORDER BY (((((((((+ (rt1.c1)))OR(((vt0.c1) NOT BETWEEN (rt1.c3) AND (x'4196')))))AND((+ (rt1.c2)))))AND(vt0.c1)))AND(CASE WHEN vt0.c2 THEN rt1.c4 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt60, vt0, v0 WHERE ((((CHAR(vt0.c1)))<=(((('37677768') IS TRUE))))) ORDER BY (((((((((+ (rt1.c1)))OR(((vt0.c1) NOT BETWEEN (rt1.c3) AND (x'4196')))))AND((+ (rt1.c2)))))AND(vt0.c1)))AND(CASE WHEN vt0.c2 THEN rt1.c4 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)) THEN x'159e' WHEN NULL THEN vt0.c1 COLLATE NOCASE WHEN (('-2143270673') ISNULL) THEN ((vt0.c0)OR(x'')) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c2 AS REAL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)) THEN x'159e' WHEN NULL THEN vt0.c1 COLLATE NOCASE WHEN (('-2143270673') ISNULL) THEN ((vt0.c0)OR(x'')) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c2 AS REAL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)) THEN x'159e' WHEN NULL THEN vt0.c1 COLLATE NOCASE WHEN (('-2143270673') ISNULL) THEN ((vt0.c0)OR(x'')) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c2 AS REAL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)) THEN x'159e' WHEN NULL THEN vt0.c1 COLLATE NOCASE WHEN (('-2143270673') ISNULL) THEN ((vt0.c0)OR(x'')) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c2 AS REAL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)) THEN x'159e' WHEN NULL THEN vt0.c1 COLLATE NOCASE WHEN (('-2143270673') ISNULL) THEN ((vt0.c0)OR(x'')) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c2 AS REAL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM rt60, rt1, v0 INNER JOIN t0 ON ((((rt60.c1)OR((vt0.c2 IN (vt0.c2)))))AND(CASE WHEN t0.c87 THEN rt1.c4 ELSE t0.c49 END)) LEFT OUTER JOIN vt0 ON (((((t0.c39) NOTNULL), ((rt60.c2)-(v0.c0)), (t0.c32 IN (rt60.c1)), t0.c39, ((vt0.c1) IS TRUE)))<=((rt1.c3, (rt60.c2 IN ()), (NOT (t0.c32)), ((t0.c49)AND(rt1.c2)), ((rt1.c2) IS FALSE)))) WHERE (((t0.c32) ISNULL)) ORDER BY (((((((((('-1189823949')OR(t0.c49)))OR(rt1.c1)))OR(t0.c32)))OR(vt0.c1)))<(UPPER(rt1.c4))), (('1239630715')>=(((rt1.c1) NOTNULL)))  NULLS FIRST, CAST((vt0.c2 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((t0.c32) ISNULL)) IS TRUE)  as count FROM rt60, rt1, v0 INNER JOIN t0 ON ((((rt60.c1)OR((vt0.c2 IN (vt0.c2)))))AND(CASE WHEN t0.c87 THEN rt1.c4 ELSE t0.c49 END)) LEFT OUTER JOIN vt0 ON (((((t0.c39) NOTNULL), ((rt60.c2)-(v0.c0)), (t0.c32 IN (rt60.c1)), t0.c39, ((vt0.c1) IS TRUE)))<=((rt1.c3, (rt60.c2 IN ()), (NOT (t0.c32)), ((t0.c49)AND(rt1.c2)), ((rt1.c2) IS FALSE)))) ORDER BY (((((((((('-1189823949')OR(t0.c49)))OR(rt1.c1)))OR(t0.c32)))OR(vt0.c1)))<(UPPER(rt1.c4))), (('1239630715')>=(((rt1.c1) NOTNULL)))  NULLS FIRST, CAST((vt0.c2 IN ()) AS BLOB));
SELECT * FROM rt60, rt1, v0 INNER JOIN t0 ON ((((rt60.c1)OR((vt0.c2 IN (vt0.c2)))))AND(CASE WHEN t0.c87 THEN rt1.c4 ELSE t0.c49 END)) LEFT OUTER JOIN vt0 ON (((((t0.c39) NOTNULL), ((rt60.c2)-(v0.c0)), (t0.c32 IN (rt60.c1)), t0.c39, ((vt0.c1) IS TRUE)))<=((rt1.c3, (rt60.c2 IN ()), (NOT (t0.c32)), ((t0.c49)AND(rt1.c2)), ((rt1.c2) IS FALSE)))) WHERE (((t0.c32) ISNULL)) ORDER BY (((((((((('-1189823949')OR(t0.c49)))OR(rt1.c1)))OR(t0.c32)))OR(vt0.c1)))<(UPPER(rt1.c4))), (('1239630715')>=(((rt1.c1) NOTNULL)))  NULLS FIRST, CAST((vt0.c2 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((t0.c32) ISNULL)) IS TRUE)  as count FROM rt60, rt1, v0 INNER JOIN t0 ON ((((rt60.c1)OR((vt0.c2 IN (vt0.c2)))))AND(CASE WHEN t0.c87 THEN rt1.c4 ELSE t0.c49 END)) LEFT OUTER JOIN vt0 ON (((((t0.c39) NOTNULL), ((rt60.c2)-(v0.c0)), (t0.c32 IN (rt60.c1)), t0.c39, ((vt0.c1) IS TRUE)))<=((rt1.c3, (rt60.c2 IN ()), (NOT (t0.c32)), ((t0.c49)AND(rt1.c2)), ((rt1.c2) IS FALSE)))) ORDER BY (((((((((('-1189823949')OR(t0.c49)))OR(rt1.c1)))OR(t0.c32)))OR(vt0.c1)))<(UPPER(rt1.c4))), (('1239630715')>=(((rt1.c1) NOTNULL)))  NULLS FIRST, CAST((vt0.c2 IN ()) AS BLOB));
SELECT * FROM rt60, rt1, v0 INNER JOIN t0 ON ((((rt60.c1)OR((vt0.c2 IN (vt0.c2)))))AND(CASE WHEN t0.c87 THEN rt1.c4 ELSE t0.c49 END)) LEFT OUTER JOIN vt0 ON (((((t0.c39) NOTNULL), ((rt60.c2)-(v0.c0)), (t0.c32 IN (rt60.c1)), t0.c39, ((vt0.c1) IS TRUE)))<=((rt1.c3, (rt60.c2 IN ()), (NOT (t0.c32)), ((t0.c49)AND(rt1.c2)), ((rt1.c2) IS FALSE)))) WHERE (((t0.c32) ISNULL)) ORDER BY (((((((((('-1189823949')OR(t0.c49)))OR(rt1.c1)))OR(t0.c32)))OR(vt0.c1)))<(UPPER(rt1.c4))), (('1239630715')>=(((rt1.c1) NOTNULL)))  NULLS FIRST, CAST((vt0.c2 IN ()) AS BLOB);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('_DnW*qx#}') ORDER BY ((((t0.c39) NOT BETWEEN (vt0.c1) AND (t0.c49))) IS FALSE);
SELECT SUM(count) FROM (SELECT (('_DnW*qx#}') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c39) NOT BETWEEN (vt0.c1) AND (t0.c49))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('_DnW*qx#}') ORDER BY ((((t0.c39) NOT BETWEEN (vt0.c1) AND (t0.c49))) IS FALSE);
SELECT SUM(count) FROM (SELECT (('_DnW*qx#}') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c39) NOT BETWEEN (vt0.c1) AND (t0.c49))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('_DnW*qx#}') ORDER BY ((((t0.c39) NOT BETWEEN (vt0.c1) AND (t0.c49))) IS FALSE);
SELECT * FROM rt60 WHERE (CAST(rt60.c2 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt60.c2 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt60);
SELECT * FROM rt60 WHERE (CAST(rt60.c2 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt60.c2 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt60);
SELECT * FROM rt60 WHERE (CAST(rt60.c2 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM rt60, t0, rt1, v0 RIGHT OUTER JOIN vt0 ON (((('Rqfu믙JlSU')OR('275559670' COLLATE NOCASE)))AND(((rt60.c2)<(rt1.c1)))) WHERE ((((NOT (rt1.c1))) BETWEEN (((((rt1.c3)AND(0.14874098571161398)))AND(rt1.c0))) AND (((vt0.c2) BETWEEN (t0.c32) AND (t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1))) BETWEEN (((((rt1.c3)AND(0.14874098571161398)))AND(rt1.c0))) AND (((vt0.c2) BETWEEN (t0.c32) AND (t0.c87))))) IS TRUE)  as count FROM rt60, t0, rt1, v0 RIGHT OUTER JOIN vt0 ON (((('Rqfu믙JlSU')OR('275559670' COLLATE NOCASE)))AND(((rt60.c2)<(rt1.c1)))));
SELECT COUNT(*) FROM rt60, t0, rt1, v0 RIGHT OUTER JOIN vt0 ON (((('Rqfu믙JlSU')OR('275559670' COLLATE NOCASE)))AND(((rt60.c2)<(rt1.c1)))) WHERE ((((NOT (rt1.c1))) BETWEEN (((((rt1.c3)AND(0.14874098571161398)))AND(rt1.c0))) AND (((vt0.c2) BETWEEN (t0.c32) AND (t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1))) BETWEEN (((((rt1.c3)AND(0.14874098571161398)))AND(rt1.c0))) AND (((vt0.c2) BETWEEN (t0.c32) AND (t0.c87))))) IS TRUE)  as count FROM rt60, t0, rt1, v0 RIGHT OUTER JOIN vt0 ON (((('Rqfu믙JlSU')OR('275559670' COLLATE NOCASE)))AND(((rt60.c2)<(rt1.c1)))));
SELECT COUNT(*) FROM rt60, t0, rt1, v0 RIGHT OUTER JOIN vt0 ON (((('Rqfu믙JlSU')OR('275559670' COLLATE NOCASE)))AND(((rt60.c2)<(rt1.c1)))) WHERE ((((NOT (rt1.c1))) BETWEEN (((((rt1.c3)AND(0.14874098571161398)))AND(rt1.c0))) AND (((vt0.c2) BETWEEN (t0.c32) AND (t0.c87)))));
SELECT ALL * FROM vt0, t0, v0, rt1 WHERE ((((((((((~ (rt1.c4)))OR(CASE rt1.c0  WHEN t0.c87 THEN t0.c87 WHEN vt0.c0 THEN t0.c87 WHEN rt1.c4 THEN rt1.c0 END)))OR(CAST(rt1.c2 AS TEXT))))OR((t0.c49 IN ()))))OR(LIKELY(DISTINCT vt0.c0)))) ORDER BY ((t0.c87 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (((((((((0.7113410822321168)OR(rt1.c3)))AND(t0.c49)))AND(rt1.c4)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt1.c4)))OR(CASE rt1.c0  WHEN t0.c87 THEN t0.c87 WHEN vt0.c0 THEN t0.c87 WHEN rt1.c4 THEN rt1.c0 END)))OR(CAST(rt1.c2 AS TEXT))))OR((t0.c49 IN ()))))OR(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t0, v0, rt1 ORDER BY ((t0.c87 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (((((((((0.7113410822321168)OR(rt1.c3)))AND(t0.c49)))AND(rt1.c4)))AND(rt1.c1)))));
SELECT ALL * FROM vt0, t0, v0, rt1 WHERE ((((((((((~ (rt1.c4)))OR(CASE rt1.c0  WHEN t0.c87 THEN t0.c87 WHEN vt0.c0 THEN t0.c87 WHEN rt1.c4 THEN rt1.c0 END)))OR(CAST(rt1.c2 AS TEXT))))OR((t0.c49 IN ()))))OR(LIKELY(DISTINCT vt0.c0)))) ORDER BY ((t0.c87 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (((((((((0.7113410822321168)OR(rt1.c3)))AND(t0.c49)))AND(rt1.c4)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt1.c4)))OR(CASE rt1.c0  WHEN t0.c87 THEN t0.c87 WHEN vt0.c0 THEN t0.c87 WHEN rt1.c4 THEN rt1.c0 END)))OR(CAST(rt1.c2 AS TEXT))))OR((t0.c49 IN ()))))OR(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t0, v0, rt1 ORDER BY ((t0.c87 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (((((((((0.7113410822321168)OR(rt1.c3)))AND(t0.c49)))AND(rt1.c4)))AND(rt1.c1)))));
SELECT ALL * FROM vt0, t0, v0, rt1 WHERE ((((((((((~ (rt1.c4)))OR(CASE rt1.c0  WHEN t0.c87 THEN t0.c87 WHEN vt0.c0 THEN t0.c87 WHEN rt1.c4 THEN rt1.c0 END)))OR(CAST(rt1.c2 AS TEXT))))OR((t0.c49 IN ()))))OR(LIKELY(DISTINCT vt0.c0)))) ORDER BY ((t0.c87 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c0))) AND (((((((((0.7113410822321168)OR(rt1.c3)))AND(t0.c49)))AND(rt1.c4)))AND(rt1.c1))));
SELECT * FROM rt60, vt0, t0 NATURAL JOIN v0 WHERE (((((((-521277798)) NOT BETWEEN ((rt60.c0)) AND ((v0.c0)))))==((((t0.c87) BETWEEN (t0.c32) AND (rt60.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((-521277798)) NOT BETWEEN ((rt60.c0)) AND ((v0.c0)))))==((((t0.c87) BETWEEN (t0.c32) AND (rt60.c0)))))) IS TRUE)  as count FROM rt60, vt0, t0 NATURAL JOIN v0);
SELECT * FROM rt60, vt0, t0 NATURAL JOIN v0 WHERE (((((((-521277798)) NOT BETWEEN ((rt60.c0)) AND ((v0.c0)))))==((((t0.c87) BETWEEN (t0.c32) AND (rt60.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((-521277798)) NOT BETWEEN ((rt60.c0)) AND ((v0.c0)))))==((((t0.c87) BETWEEN (t0.c32) AND (rt60.c0)))))) IS TRUE)  as count FROM rt60, vt0, t0 NATURAL JOIN v0);
SELECT * FROM rt60, vt0, t0 NATURAL JOIN v0 WHERE (((((((-521277798)) NOT BETWEEN ((rt60.c0)) AND ((v0.c0)))))==((((t0.c87) BETWEEN (t0.c32) AND (rt60.c0))))));
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CASE WHEN ((rt1.c0)OR(v0.c0)) THEN CASE rt60.c0  WHEN rt60.c2 THEN rt60.c0 ELSE rt1.c2 END END INNER JOIN rt60 ON 0Xffffffffb2784d4e WHERE (((CAST(rt1.c1 AS NUMERIC))%((((rt60.c0))!=((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC))%((((rt60.c0))!=((rt1.c3)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CASE WHEN ((rt1.c0)OR(v0.c0)) THEN CASE rt60.c0  WHEN rt60.c2 THEN rt60.c0 ELSE rt1.c2 END END INNER JOIN rt60 ON 0Xffffffffb2784d4e);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CASE WHEN ((rt1.c0)OR(v0.c0)) THEN CASE rt60.c0  WHEN rt60.c2 THEN rt60.c0 ELSE rt1.c2 END END INNER JOIN rt60 ON 0Xffffffffb2784d4e WHERE (((CAST(rt1.c1 AS NUMERIC))%((((rt60.c0))!=((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC))%((((rt60.c0))!=((rt1.c3)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CASE WHEN ((rt1.c0)OR(v0.c0)) THEN CASE rt60.c0  WHEN rt60.c2 THEN rt60.c0 ELSE rt1.c2 END END INNER JOIN rt60 ON 0Xffffffffb2784d4e);
SELECT COUNT(*) FROM vt0 WHERE (((((((((json(vt0.c2))OR((vt0.c1 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c2 THEN vt0.c0 END))) ORDER BY ((CAST(vt0.c2 AS NUMERIC))IS NOT(((vt0.c1) BETWEEN ('!,') AND (vt0.c0)))) DESC  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN 0x7e2bc6de WHEN '[]' THEN vt0.c1 END COLLATE BINARY  NULLS LAST, (((((vt0.c0))<=((vt0.c2))))||(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((json(vt0.c2))OR((vt0.c1 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS NUMERIC))IS NOT(((vt0.c1) BETWEEN ('!,') AND (vt0.c0)))) DESC  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN 0x7e2bc6de WHEN '[]' THEN vt0.c1 END COLLATE BINARY  NULLS LAST, (((((vt0.c0))<=((vt0.c2))))||(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((json(vt0.c2))OR((vt0.c1 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c2 THEN vt0.c0 END))) ORDER BY ((CAST(vt0.c2 AS NUMERIC))IS NOT(((vt0.c1) BETWEEN ('!,') AND (vt0.c0)))) DESC  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN 0x7e2bc6de WHEN '[]' THEN vt0.c1 END COLLATE BINARY  NULLS LAST, (((((vt0.c0))<=((vt0.c2))))||(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((json(vt0.c2))OR((vt0.c1 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS NUMERIC))IS NOT(((vt0.c1) BETWEEN ('!,') AND (vt0.c0)))) DESC  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN 0x7e2bc6de WHEN '[]' THEN vt0.c1 END COLLATE BINARY  NULLS LAST, (((((vt0.c0))<=((vt0.c2))))||(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CAST(SUBSTR(t0.c39, rt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(SUBSTR(t0.c39, rt1.c0) AS REAL)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CAST(SUBSTR(t0.c39, rt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(SUBSTR(t0.c39, rt1.c0) AS REAL)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CAST(SUBSTR(t0.c39, rt1.c0) AS REAL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (('Z{')!=(((vt0.c2)>>(t0.c87)))) CROSS JOIN rt60 ON CASE ((rt60.c0)=(rt60.c1))  WHEN rt60.c0 THEN (rt60.c0 IN ()) WHEN ((rt1.c0)%(rt1.c4)) THEN CAST(rt60.c1 AS REAL) WHEN '1081507424' THEN NULL ELSE ((0.3285771280323514)IS(t0.c49)) END INNER JOIN t0 ON rt60.c0 FULL OUTER JOIN rt1 ON (('1137080587')%(rt60.c0)) COLLATE RTRIM WHERE (rt1.c3) ORDER BY (NOT (IFNULL(t0.c32, rt1.c0)));
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (('Z{')<>(((vt0.c2)>>(t0.c87)))) CROSS JOIN rt60 ON CASE ((rt60.c0)=(rt60.c1))  WHEN rt60.c0 THEN (rt60.c0 IN ()) WHEN ((rt1.c0)%(rt1.c4)) THEN CAST(rt60.c1 AS REAL) WHEN '1081507424' THEN NULL ELSE ((0.3285771280323514)IS(t0.c49)) END INNER JOIN t0 ON rt60.c0 FULL OUTER JOIN rt1 ON (('1137080587')%(rt60.c0)) COLLATE RTRIM ORDER BY (NOT (IFNULL(t0.c32, rt1.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (('Z{')!=(((vt0.c2)>>(t0.c87)))) CROSS JOIN rt60 ON CASE ((rt60.c0)=(rt60.c1))  WHEN rt60.c0 THEN (rt60.c0 IN ()) WHEN ((rt1.c0)%(rt1.c4)) THEN CAST(rt60.c1 AS REAL) WHEN '1081507424' THEN NULL ELSE ((0.3285771280323514)IS(t0.c49)) END INNER JOIN t0 ON rt60.c0 FULL OUTER JOIN rt1 ON (('1137080587')%(rt60.c0)) COLLATE RTRIM WHERE (rt1.c3) ORDER BY (NOT (IFNULL(t0.c32, rt1.c0)));
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (('Z{')<>(((vt0.c2)>>(t0.c87)))) CROSS JOIN rt60 ON CASE ((rt60.c0)=(rt60.c1))  WHEN rt60.c0 THEN (rt60.c0 IN ()) WHEN ((rt1.c0)%(rt1.c4)) THEN CAST(rt60.c1 AS REAL) WHEN '1081507424' THEN NULL ELSE ((0.3285771280323514)IS(t0.c49)) END INNER JOIN t0 ON rt60.c0 FULL OUTER JOIN rt1 ON (('1137080587')%(rt60.c0)) COLLATE RTRIM ORDER BY (NOT (IFNULL(t0.c32, rt1.c0))));
SELECT * FROM v0, vt0, rt1, t0, rt60 WHERE (((rt1.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt1, t0, rt60);
SELECT * FROM v0, vt0, rt1, t0, rt60 WHERE (((rt1.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt1, t0, rt60);
SELECT * FROM v0, vt0, rt1, t0, rt60 WHERE (((rt1.c3) IS TRUE));
SELECT ALL * FROM v0, vt0, t0 WHERE (((((t0.c39, v0.c0, vt0.c0)) BETWEEN ((t0.c49, t0.c39, t0.c39)) AND ((v0.c0, t0.c49, t0.c39))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39, v0.c0, vt0.c0)) BETWEEN ((t0.c49, t0.c39, t0.c39)) AND ((v0.c0, t0.c49, t0.c39))) IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((t0.c39, v0.c0, vt0.c0)) BETWEEN ((t0.c49, t0.c39, t0.c39)) AND ((v0.c0, t0.c49, t0.c39))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39, v0.c0, vt0.c0)) BETWEEN ((t0.c49, t0.c39, t0.c39)) AND ((v0.c0, t0.c49, t0.c39))) IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((t0.c39, v0.c0, vt0.c0)) BETWEEN ((t0.c49, t0.c39, t0.c39)) AND ((v0.c0, t0.c49, t0.c39))) IN ()));
SELECT COUNT(*) FROM t0, v0, rt1, rt60 WHERE (CAST(((rt60.c1)OR(t0.c32)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt60.c1)OR(t0.c32)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt1, rt60);
SELECT COUNT(*) FROM t0, v0, rt1, rt60 WHERE (CAST(((rt60.c1)OR(t0.c32)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt60.c1)OR(t0.c32)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt1, rt60);
SELECT COUNT(*) FROM t0, v0, rt1, rt60 WHERE (CAST(((rt60.c1)OR(t0.c32)) AS NUMERIC));
SELECT * FROM v0 WHERE (LIKELY(DISTINCT ((v0.c0) NOTNULL))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))), TRIM(DISTINCT v0.c0, ((v0.c0)||(v0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))), TRIM(DISTINCT v0.c0, ((v0.c0)||(v0.c0))));
SELECT * FROM v0 WHERE (LIKELY(DISTINCT ((v0.c0) NOTNULL))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))), TRIM(DISTINCT v0.c0, ((v0.c0)||(v0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))), TRIM(DISTINCT v0.c0, ((v0.c0)||(v0.c0))));
SELECT * FROM v0 WHERE (LIKELY(DISTINCT ((v0.c0) NOTNULL))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))), TRIM(DISTINCT v0.c0, ((v0.c0)||(v0.c0)));
SELECT ALL COUNT(*) FROM rt1, t0, vt0, v0, rt60 WHERE ((((CAST(rt60.c1 AS TEXT), ((rt1.c2)-(vt0.c1)), ((rt1.c3) NOTNULL)))>=(((('-1993737635') IS FALSE), ((vt0.c1)LIKE(vt0.c0)), rt60.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt60.c1 AS TEXT), ((rt1.c2)-(vt0.c1)), ((rt1.c3) NOTNULL)))>=(((('-1993737635') IS FALSE), ((vt0.c1)LIKE(vt0.c0)), rt60.c2)))) IS TRUE)  as count FROM rt1, t0, vt0, v0, rt60);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, v0, rt60 WHERE ((((CAST(rt60.c1 AS TEXT), ((rt1.c2)-(vt0.c1)), ((rt1.c3) NOTNULL)))>=(((('-1993737635') IS FALSE), ((vt0.c1)LIKE(vt0.c0)), rt60.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt60.c1 AS TEXT), ((rt1.c2)-(vt0.c1)), ((rt1.c3) NOTNULL)))>=(((('-1993737635') IS FALSE), ((vt0.c1)LIKE(vt0.c0)), rt60.c2)))) IS TRUE)  as count FROM rt1, t0, vt0, v0, rt60);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, v0, rt60 WHERE ((((CAST(rt60.c1 AS TEXT), ((rt1.c2)-(vt0.c1)), ((rt1.c3) NOTNULL)))>=(((('-1993737635') IS FALSE), ((vt0.c1)LIKE(vt0.c0)), rt60.c2))));
SELECT ALL * FROM vt0, v0, t0, rt60, rt1 WHERE (CASE (NOT (rt1.c4))  WHEN ((rt60.c0)IS(t0.c87)) THEN rt1.c3 COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN t0.c32 END END) ORDER BY ((((rt60.c2) ISNULL))>>(rt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt1.c4))  WHEN ((rt60.c0)IS(t0.c87)) THEN rt1.c3 COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN t0.c32 END END) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, t0, rt60, rt1 ORDER BY ((((rt60.c2) ISNULL))>>(rt1.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t0, rt60, rt1 WHERE (CASE (NOT (rt1.c4))  WHEN ((rt60.c0)IS(t0.c87)) THEN rt1.c3 COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN t0.c32 END END) ORDER BY ((((rt60.c2) ISNULL))>>(rt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt1.c4))  WHEN ((rt60.c0)IS(t0.c87)) THEN rt1.c3 COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN t0.c32 END END) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, t0, rt60, rt1 ORDER BY ((((rt60.c2) ISNULL))>>(rt1.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t0, rt60, rt1 WHERE (CASE (NOT (rt1.c4))  WHEN ((rt60.c0)IS(t0.c87)) THEN rt1.c3 COLLATE RTRIM ELSE CASE WHEN rt1.c2 THEN t0.c32 END END) ORDER BY ((((rt60.c2) ISNULL))>>(rt1.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, v0, rt60, t0 WHERE (CAST(ABS(t0.c39) AS REAL)) ORDER BY INSTR((rt60.c0 IN (t0.c87)), (rt1.c0 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(t0.c39) AS REAL)) IS TRUE)  as count FROM vt0, rt1, v0, rt60, t0 ORDER BY INSTR((rt60.c0 IN (t0.c87)), (rt1.c0 IN ())) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, rt60, t0 WHERE (CAST(ABS(t0.c39) AS REAL)) ORDER BY INSTR((rt60.c0 IN (t0.c87)), (rt1.c0 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(t0.c39) AS REAL)) IS TRUE)  as count FROM vt0, rt1, v0, rt60, t0 ORDER BY INSTR((rt60.c0 IN (t0.c87)), (rt1.c0 IN ())) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, rt60, t0 WHERE (CAST(ABS(t0.c39) AS REAL)) ORDER BY INSTR((rt60.c0 IN (t0.c87)), (rt1.c0 IN ())) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt60, t0, rt1, vt0 WHERE (((CASE WHEN t0.c39 THEN t0.c49 END)<>(CAST(rt1.c1 AS REAL)))) ORDER BY ((((((((((v0.c0) IS FALSE))OR(((rt1.c2)%(rt60.c1)))))AND(HEX(DISTINCT vt0.c1))))AND((((0.0012627067482532395)) BETWEEN ((x'')) AND ((rt1.c4))))))AND((v0.c0 IN ())))  NULLS FIRST, ((((t0.c39) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c4))) AND (((rt1.c0) BETWEEN (rt60.c2) AND (t0.c87)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c39 THEN t0.c49 END)!=(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM v0 NOT INDEXED, rt60, t0, rt1, vt0 ORDER BY ((((((((((v0.c0) IS FALSE))OR(((rt1.c2)%(rt60.c1)))))AND(HEX(DISTINCT vt0.c1))))AND((((0.0012627067482532395)) BETWEEN ((x'')) AND ((rt1.c4))))))AND((v0.c0 IN ())))  NULLS FIRST, ((((t0.c39) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c4))) AND (((rt1.c0) BETWEEN (rt60.c2) AND (t0.c87)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt60, t0, rt1, vt0 WHERE (((CASE WHEN t0.c39 THEN t0.c49 END)<>(CAST(rt1.c1 AS REAL)))) ORDER BY ((((((((((v0.c0) IS FALSE))OR(((rt1.c2)%(rt60.c1)))))AND(HEX(DISTINCT vt0.c1))))AND((((0.0012627067482532395)) BETWEEN ((x'')) AND ((rt1.c4))))))AND((v0.c0 IN ())))  NULLS FIRST, ((((t0.c39) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c4))) AND (((rt1.c0) BETWEEN (rt60.c2) AND (t0.c87)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c39 THEN t0.c49 END)!=(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM v0 NOT INDEXED, rt60, t0, rt1, vt0 ORDER BY ((((((((((v0.c0) IS FALSE))OR(((rt1.c2)%(rt60.c1)))))AND(HEX(DISTINCT vt0.c1))))AND((((0.0012627067482532395)) BETWEEN ((x'')) AND ((rt1.c4))))))AND((v0.c0 IN ())))  NULLS FIRST, ((((t0.c39) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c4))) AND (((rt1.c0) BETWEEN (rt60.c2) AND (t0.c87)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c32 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c32 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c32 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c32 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c32 COLLATE BINARY) NOT NULL));
SELECT * FROM v0, rt1, rt60, vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))AND(((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c2)))))OR(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))>=((vt0.c0))))AND(((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c2)))))OR(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM v0, rt1, rt60, vt0);
SELECT * FROM v0, rt1, rt60, vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))AND(((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c2)))))OR(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))>=((vt0.c0))))AND(((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c2)))))OR(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM v0, rt1, rt60, vt0);
SELECT * FROM v0, rt1, rt60, vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))AND(((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c2)))))OR(((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM rt60, v0 WHERE (CAST((((rt60.c0))<((rt60.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((rt60.c0))<((rt60.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt60, v0);
SELECT * FROM rt60, v0 WHERE (CAST((((rt60.c0))<((rt60.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((rt60.c0))<((rt60.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt60, v0);
SELECT * FROM rt60, v0 WHERE (CAST((((rt60.c0))<((rt60.c0))) AS NUMERIC));
SELECT * FROM vt0, t0 WHERE (ROUND(((t0.c32) IS FALSE), (((t0.c49))==((t0.c39)))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((t0.c32) IS FALSE), (((t0.c49))=((t0.c39))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (ROUND(((t0.c32) IS FALSE), (((t0.c49))==((t0.c39)))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((t0.c32) IS FALSE), (((t0.c49))=((t0.c39))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (ROUND(((t0.c32) IS FALSE), (((t0.c49))==((t0.c39)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM rt1, v0, rt60 WHERE (((x'')<(rt60.c1)));
SELECT SUM(count) FROM (SELECT ((((x'')<(rt60.c1))) IS TRUE)  as count FROM rt1, v0, rt60);
SELECT ALL * FROM rt1, v0, rt60 WHERE (((x'')<(rt60.c1)));
SELECT SUM(count) FROM (SELECT ((((x'')<(rt60.c1))) IS TRUE)  as count FROM rt1, v0, rt60);
SELECT ALL * FROM rt1, v0, rt60 WHERE (((x'')<(rt60.c1)));
SELECT COUNT(*) FROM rt60, v0, t0 WHERE ('-1115989762') ORDER BY ((rt60.c0)LIKE(((t0.c49)<<(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1115989762') IS TRUE)  as count FROM rt60, v0, t0 ORDER BY ((rt60.c0)LIKE(((t0.c49)<<(rt60.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt60, v0, t0 WHERE ('-1115989762') ORDER BY ((rt60.c0)LIKE(((t0.c49)<<(rt60.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1115989762') IS TRUE)  as count FROM rt60, v0, t0 ORDER BY ((rt60.c0)LIKE(((t0.c49)<<(rt60.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt60, v0, t0 WHERE ('-1115989762') ORDER BY ((rt60.c0)LIKE(((t0.c49)<<(rt60.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (((((vt0.c2)AND('-1039528103')))AND((t0.c87 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)AND('-1039528103')))AND((t0.c87 IN (rt1.c0))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (((((vt0.c2)AND('-1039528103')))AND((t0.c87 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)AND('-1039528103')))AND((t0.c87 IN (rt1.c0))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE (((((vt0.c2)AND('-1039528103')))AND((t0.c87 IN (rt1.c0)))));
SELECT COUNT(*) FROM rt60 NOT INDEXED, v0, rt1, t0 WHERE ((((((((((((((((((- (t0.c87)))OR(IFNULL(DISTINCT rt1.c0, rt1.c0))))AND(CASE WHEN rt60.c0 THEN rt1.c1 ELSE rt1.c2 END)))AND(((t0.c49) ISNULL))))AND(((((rt60.c1)AND(rt1.c3)))OR(t0.c87)))))OR(((x'')<(t0.c39)))))OR(rt60.c2)))AND(((((((((t0.c32)OR(NULL)))OR(rt1.c3)))OR(rt1.c2)))AND(t0.c49)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c39)))))) ORDER BY ((rt1.c0) NOT NULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((- (t0.c87)))OR(IFNULL(DISTINCT rt1.c0, rt1.c0))))AND(CASE WHEN rt60.c0 THEN rt1.c1 ELSE rt1.c2 END)))AND(((t0.c49) ISNULL))))AND(((((rt60.c1)AND(rt1.c3)))OR(t0.c87)))))OR(((x'')<(t0.c39)))))OR(rt60.c2)))AND(((((((((t0.c32)OR(NULL)))OR(rt1.c3)))OR(rt1.c2)))AND(t0.c49)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c39)))))) IS TRUE)  as count FROM rt60, v0, rt1, t0 ORDER BY ((rt1.c0) NOT NULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt60 NOT INDEXED, v0, rt1, t0 WHERE ((((((((((((((((((- (t0.c87)))OR(IFNULL(DISTINCT rt1.c0, rt1.c0))))AND(CASE WHEN rt60.c0 THEN rt1.c1 ELSE rt1.c2 END)))AND(((t0.c49) ISNULL))))AND(((((rt60.c1)AND(rt1.c3)))OR(t0.c87)))))OR(((x'')<(t0.c39)))))OR(rt60.c2)))AND(((((((((t0.c32)OR(NULL)))OR(rt1.c3)))OR(rt1.c2)))AND(t0.c49)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c39)))))) ORDER BY ((rt1.c0) NOT NULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((- (t0.c87)))OR(IFNULL(DISTINCT rt1.c0, rt1.c0))))AND(CASE WHEN rt60.c0 THEN rt1.c1 ELSE rt1.c2 END)))AND(((t0.c49) ISNULL))))AND(((((rt60.c1)AND(rt1.c3)))OR(t0.c87)))))OR(((x'')<(t0.c39)))))OR(rt60.c2)))AND(((((((((t0.c32)OR(NULL)))OR(rt1.c3)))OR(rt1.c2)))AND(t0.c49)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c39)))))) IS TRUE)  as count FROM rt60, v0, rt1, t0 ORDER BY ((rt1.c0) NOT NULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt60 NOT INDEXED, v0, rt1, t0 WHERE ((((((((((((((((((- (t0.c87)))OR(IFNULL(DISTINCT rt1.c0, rt1.c0))))AND(CASE WHEN rt60.c0 THEN rt1.c1 ELSE rt1.c2 END)))AND(((t0.c49) ISNULL))))AND(((((rt60.c1)AND(rt1.c3)))OR(t0.c87)))))OR(((x'')<(t0.c39)))))OR(rt60.c2)))AND(((((((((t0.c32)OR(NULL)))OR(rt1.c3)))OR(rt1.c2)))AND(t0.c49)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c39)))))) ORDER BY ((rt1.c0) NOT NULL) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (ROUND((vt0.c2 IN ()), ((rt1.c4)IS NOT(rt1.c4)))) ORDER BY ((NULL) NOTNULL);
SELECT SUM(count) FROM (SELECT ((ROUND((vt0.c2 IN ()), ((rt1.c4)IS NOT(rt1.c4)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (ROUND((vt0.c2 IN ()), ((rt1.c4)IS NOT(rt1.c4)))) ORDER BY ((NULL) NOTNULL);
SELECT SUM(count) FROM (SELECT ((ROUND((vt0.c2 IN ()), ((rt1.c4)IS NOT(rt1.c4)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (ROUND((vt0.c2 IN ()), ((rt1.c4)IS NOT(rt1.c4)))) ORDER BY ((NULL) NOTNULL);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0) NOT NULL) COLLATE BINARY) ORDER BY 0.9382808503500532 DESC  NULLS LAST, (((+ (rt1.c0)))OR(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY 0.9382808503500532 DESC  NULLS LAST, (((+ (rt1.c0)))OR(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0) NOT NULL) COLLATE BINARY) ORDER BY 0.9382808503500532 DESC  NULLS LAST, (((+ (rt1.c0)))OR(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY 0.9382808503500532 DESC  NULLS LAST, (((+ (rt1.c0)))OR(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0) NOT NULL) COLLATE BINARY) ORDER BY 0.9382808503500532 DESC  NULLS LAST, (((+ (rt1.c0)))OR(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, v0, vt0, rt60, t0 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c87 WHEN rt60.c2 THEN vt0.c0 ELSE ')飌' END THEN ((rt60.c0) NOT BETWEEN (t0.c49) AND (v0.c0)) WHEN t0.c87 COLLATE BINARY THEN vt0.c0 WHEN ((((((((((((rt1.c3)AND(0.5231533941001273)))OR(t0.c87)))AND(rt1.c2)))OR(vt0.c0)))OR(rt60.c1)))AND(t0.c49)) THEN ((v0.c0)GLOB(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c87 WHEN rt60.c2 THEN vt0.c0 ELSE ')飌' END THEN ((rt60.c0) NOT BETWEEN (t0.c49) AND (v0.c0)) WHEN t0.c87 COLLATE BINARY THEN vt0.c0 WHEN ((((((((((((rt1.c3)AND(0.5231533941001273)))OR(t0.c87)))AND(rt1.c2)))OR(vt0.c0)))OR(rt60.c1)))AND(t0.c49)) THEN ((v0.c0)GLOB(rt1.c1)) END) IS TRUE)  as count FROM rt1, v0, vt0, rt60, t0);
SELECT COUNT(*) FROM rt1, v0, vt0, rt60, t0 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c87 WHEN rt60.c2 THEN vt0.c0 ELSE ')飌' END THEN ((rt60.c0) NOT BETWEEN (t0.c49) AND (v0.c0)) WHEN t0.c87 COLLATE BINARY THEN vt0.c0 WHEN ((((((((((((rt1.c3)AND(0.5231533941001273)))OR(t0.c87)))AND(rt1.c2)))OR(vt0.c0)))OR(rt60.c1)))AND(t0.c49)) THEN ((v0.c0)GLOB(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c87 WHEN rt60.c2 THEN vt0.c0 ELSE ')飌' END THEN ((rt60.c0) NOT BETWEEN (t0.c49) AND (v0.c0)) WHEN t0.c87 COLLATE BINARY THEN vt0.c0 WHEN ((((((((((((rt1.c3)AND(0.5231533941001273)))OR(t0.c87)))AND(rt1.c2)))OR(vt0.c0)))OR(rt60.c1)))AND(t0.c49)) THEN ((v0.c0)GLOB(rt1.c1)) END) IS TRUE)  as count FROM rt1, v0, vt0, rt60, t0);
SELECT COUNT(*) FROM rt1, v0, vt0, rt60, t0 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c87 WHEN rt60.c2 THEN vt0.c0 ELSE ')飌' END THEN ((rt60.c0) NOT BETWEEN (t0.c49) AND (v0.c0)) WHEN t0.c87 COLLATE BINARY THEN vt0.c0 WHEN ((((((((((((rt1.c3)AND(0.5231533941001273)))OR(t0.c87)))AND(rt1.c2)))OR(vt0.c0)))OR(rt60.c1)))AND(t0.c49)) THEN ((v0.c0)GLOB(rt1.c1)) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c39) BETWEEN (t0.c87) AND (x'ac35')))||(((((vt0.c0)OR(t0.c49)))OR(t0.c87))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c39) BETWEEN (t0.c87) AND (x'ac35')))||(((((vt0.c0)OR(t0.c49)))OR(t0.c87))))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c39) BETWEEN (t0.c87) AND (x'ac35')))||(((((vt0.c0)OR(t0.c49)))OR(t0.c87))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c39) BETWEEN (t0.c87) AND (x'ac35')))||(((((vt0.c0)OR(t0.c49)))OR(t0.c87))))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c39) BETWEEN (t0.c87) AND (x'ac35')))||(((((vt0.c0)OR(t0.c49)))OR(t0.c87))))) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c39) ISNULL)) IS TRUE)) ORDER BY ((NULL)%((~ (t0.c87)))) DESC  NULLS FIRST, ((((((t0.c32)AND(t0.c39)))OR(t0.c49)))IS NOT(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c39) ISNULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULL)%((~ (t0.c87)))) DESC  NULLS FIRST, ((((((t0.c32)AND(t0.c39)))OR(t0.c49)))IS NOT(NULL)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c39) ISNULL)) IS TRUE)) ORDER BY ((NULL)%((~ (t0.c87)))) DESC  NULLS FIRST, ((((((t0.c32)AND(t0.c39)))OR(t0.c49)))IS NOT(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c39) ISNULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULL)%((~ (t0.c87)))) DESC  NULLS FIRST, ((((((t0.c32)AND(t0.c39)))OR(t0.c49)))IS NOT(NULL)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c39) ISNULL)) IS TRUE)) ORDER BY ((NULL)%((~ (t0.c87)))) DESC  NULLS FIRST, ((((((t0.c32)AND(t0.c39)))OR(t0.c49)))IS NOT(NULL)) DESC;
SELECT ALL * FROM v0, vt0, rt1, t0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM v0, vt0, rt1, t0);
SELECT ALL * FROM v0, vt0, rt1, t0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM v0, vt0, rt1, t0);
SELECT ALL * FROM v0, vt0, rt1, t0 WHERE (((x'') ISNULL));
SELECT COUNT(*) FROM rt60, vt0, rt1, t0, v0 WHERE (CAST(rt60.c1 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt60.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt60, vt0, rt1, t0, v0);
SELECT COUNT(*) FROM rt60, vt0, rt1, t0, v0 WHERE (CAST(rt60.c1 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt60.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt60, vt0, rt1, t0, v0);
SELECT COUNT(*) FROM rt60, vt0, rt1, t0, v0 WHERE (CAST(rt60.c1 AS NUMERIC) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt1 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (((x'')) BETWEEN (((rt1.c3 IN ()))) AND ((((((((((rt1.c4)OR(t0.c32)))AND(rt1.c0)))AND(v0.c0)))AND(t0.c87))))) DESC  NULLS LAST, ((load_extension(t0.c49, rt1.c1)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, v0, rt1 ORDER BY (((x'')) BETWEEN (((rt1.c3 IN ()))) AND ((((((((((rt1.c4)OR(t0.c32)))AND(rt1.c0)))AND(v0.c0)))AND(t0.c87))))) DESC  NULLS LAST, ((load_extension(t0.c49, rt1.c1)) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt1 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (((x'')) BETWEEN (((rt1.c3 IN ()))) AND ((((((((((rt1.c4)OR(t0.c32)))AND(rt1.c0)))AND(v0.c0)))AND(t0.c87))))) DESC  NULLS LAST, ((load_extension(t0.c49, rt1.c1)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, v0, rt1 ORDER BY (((x'')) BETWEEN (((rt1.c3 IN ()))) AND ((((((((((rt1.c4)OR(t0.c32)))AND(rt1.c0)))AND(v0.c0)))AND(t0.c87))))) DESC  NULLS LAST, ((load_extension(t0.c49, rt1.c1)) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt1 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (((x'')) BETWEEN (((rt1.c3 IN ()))) AND ((((((((((rt1.c4)OR(t0.c32)))AND(rt1.c0)))AND(v0.c0)))AND(t0.c87))))) DESC  NULLS LAST, ((load_extension(t0.c49, rt1.c1)) IS FALSE) DESC  NULLS LAST;
SELECT * FROM rt1, t0, rt60 LEFT OUTER JOIN vt0 ON (((rt60.c2)) BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((rt60.c1) NOT BETWEEN (vt0.c0) AND (t0.c32))))) WHERE (CASE WHEN ((rt60.c1)AND('275559670')) THEN NULL WHEN t0.c39 COLLATE BINARY THEN (~ (t0.c39)) WHEN (~ (rt1.c0)) THEN TRIM(DISTINCT 0.15931173272294907) END) ORDER BY CASE MAX(t0.c49, rt1.c2, rt1.c2, 2015112527)  WHEN ((('', vt0.c0, vt0.c2, t0.c49, t0.c87))<=((rt60.c0, rt1.c2, t0.c32, rt1.c1, x''))) THEN (((vt0.c2, t0.c32, rt1.c4))==((vt0.c0, vt0.c2, NULL))) ELSE ((((t0.c32)OR(x'')))OR(t0.c39)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt60.c1)AND('275559670')) THEN NULL WHEN t0.c39 COLLATE BINARY THEN (~ (t0.c39)) WHEN (~ (rt1.c0)) THEN TRIM(DISTINCT 0.15931173272294907) END) IS TRUE)  as count FROM rt1, t0, rt60 LEFT OUTER JOIN vt0 ON (((rt60.c2)) BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((rt60.c1) NOT BETWEEN (vt0.c0) AND (t0.c32))))) ORDER BY CASE MAX(t0.c49, rt1.c2, rt1.c2, 2015112527)  WHEN ((('', vt0.c0, vt0.c2, t0.c49, t0.c87))<=((rt60.c0, rt1.c2, t0.c32, rt1.c1, x''))) THEN (((vt0.c2, t0.c32, rt1.c4))=((vt0.c0, vt0.c2, NULL))) ELSE ((((t0.c32)OR(x'')))OR(t0.c39)) END DESC  NULLS LAST);
SELECT * FROM rt1, t0, rt60 LEFT OUTER JOIN vt0 ON (((rt60.c2)) BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((rt60.c1) NOT BETWEEN (vt0.c0) AND (t0.c32))))) WHERE (CASE WHEN ((rt60.c1)AND('275559670')) THEN NULL WHEN t0.c39 COLLATE BINARY THEN (~ (t0.c39)) WHEN (~ (rt1.c0)) THEN TRIM(DISTINCT 0.15931173272294907) END) ORDER BY CASE MAX(t0.c49, rt1.c2, rt1.c2, 2015112527)  WHEN ((('', vt0.c0, vt0.c2, t0.c49, t0.c87))<=((rt60.c0, rt1.c2, t0.c32, rt1.c1, x''))) THEN (((vt0.c2, t0.c32, rt1.c4))==((vt0.c0, vt0.c2, NULL))) ELSE ((((t0.c32)OR(x'')))OR(t0.c39)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt60.c1)AND('275559670')) THEN NULL WHEN t0.c39 COLLATE BINARY THEN (~ (t0.c39)) WHEN (~ (rt1.c0)) THEN TRIM(DISTINCT 0.15931173272294907) END) IS TRUE)  as count FROM rt1, t0, rt60 LEFT OUTER JOIN vt0 ON (((rt60.c2)) BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((rt60.c1) NOT BETWEEN (vt0.c0) AND (t0.c32))))) ORDER BY CASE MAX(t0.c49, rt1.c2, rt1.c2, 2015112527)  WHEN ((('', vt0.c0, vt0.c2, t0.c49, t0.c87))<=((rt60.c0, rt1.c2, t0.c32, rt1.c1, x''))) THEN (((vt0.c2, t0.c32, rt1.c4))=((vt0.c0, vt0.c2, NULL))) ELSE ((((t0.c32)OR(x'')))OR(t0.c39)) END DESC  NULLS LAST);
SELECT * FROM rt1, t0, rt60 LEFT OUTER JOIN vt0 ON (((rt60.c2)) BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((rt60.c1) NOT BETWEEN (vt0.c0) AND (t0.c32))))) WHERE (CASE WHEN ((rt60.c1)AND('275559670')) THEN NULL WHEN t0.c39 COLLATE BINARY THEN (~ (t0.c39)) WHEN (~ (rt1.c0)) THEN TRIM(DISTINCT 0.15931173272294907) END) ORDER BY CASE MAX(t0.c49, rt1.c2, rt1.c2, 2015112527)  WHEN ((('', vt0.c0, vt0.c2, t0.c49, t0.c87))<=((rt60.c0, rt1.c2, t0.c32, rt1.c1, x''))) THEN (((vt0.c2, t0.c32, rt1.c4))==((vt0.c0, vt0.c2, NULL))) ELSE ((((t0.c32)OR(x'')))OR(t0.c39)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, rt60, v0, vt0 WHERE ((- (LIKELIHOOD(t0.c32, 0.004252964028972461)))) ORDER BY CASE WHEN (rt60.c1 IN (t0.c87)) THEN HEX(rt1.c4) WHEN rt60.c0 THEN CASE WHEN t0.c39 THEN '>a_\n(&E' WHEN rt1.c4 THEN t0.c39 WHEN rt60.c0 THEN rt1.c1 ELSE t0.c49 END WHEN SQLITE_VERSION() THEN (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t0.c32, 0.004252964028972461)))) IS TRUE)  as count FROM rt1, t0, rt60, v0 NOT INDEXED, vt0 ORDER BY CASE WHEN (rt60.c1 IN (t0.c87)) THEN HEX(rt1.c4) WHEN rt60.c0 THEN CASE WHEN t0.c39 THEN '>a_\n(&E' WHEN rt1.c4 THEN t0.c39 WHEN rt60.c0 THEN rt1.c1 ELSE t0.c49 END WHEN SQLITE_VERSION() THEN (vt0.c0 IN ()) END DESC);
SELECT COUNT(*) FROM rt1, t0, rt60, v0, vt0 WHERE ((- (LIKELIHOOD(t0.c32, 0.004252964028972461)))) ORDER BY CASE WHEN (rt60.c1 IN (t0.c87)) THEN HEX(rt1.c4) WHEN rt60.c0 THEN CASE WHEN t0.c39 THEN '>a_\n(&E' WHEN rt1.c4 THEN t0.c39 WHEN rt60.c0 THEN rt1.c1 ELSE t0.c49 END WHEN SQLITE_VERSION() THEN (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t0.c32, 0.004252964028972461)))) IS TRUE)  as count FROM rt1, t0, rt60, v0 NOT INDEXED, vt0 ORDER BY CASE WHEN (rt60.c1 IN (t0.c87)) THEN HEX(rt1.c4) WHEN rt60.c0 THEN CASE WHEN t0.c39 THEN '>a_\n(&E' WHEN rt1.c4 THEN t0.c39 WHEN rt60.c0 THEN rt1.c1 ELSE t0.c49 END WHEN SQLITE_VERSION() THEN (vt0.c0 IN ()) END DESC);
SELECT COUNT(*) FROM rt1, t0, rt60, v0, vt0 WHERE ((- (LIKELIHOOD(t0.c32, 0.004252964028972461)))) ORDER BY CASE WHEN (rt60.c1 IN (t0.c87)) THEN HEX(rt1.c4) WHEN rt60.c0 THEN CASE WHEN t0.c39 THEN '>a_\n(&E' WHEN rt1.c4 THEN t0.c39 WHEN rt60.c0 THEN rt1.c1 ELSE t0.c49 END WHEN SQLITE_VERSION() THEN (vt0.c0 IN ()) END DESC;
SELECT COUNT(*) FROM rt1, rt60, t0, vt0, v0 WHERE (((((((((CAST(rt1.c1 AS NUMERIC))AND(((vt0.c2)LIKE(t0.c87)))))AND(x'')))AND(((rt1.c4) IS FALSE))))OR(t0.c39)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c1 AS NUMERIC))AND(((vt0.c2)LIKE(t0.c87)))))AND(x'')))AND(((rt1.c4) IS FALSE))))OR(t0.c39))) IS TRUE)  as count FROM rt1, rt60, t0, vt0, v0);
SELECT COUNT(*) FROM rt1, rt60, t0, vt0, v0 WHERE (((((((((CAST(rt1.c1 AS NUMERIC))AND(((vt0.c2)LIKE(t0.c87)))))AND(x'')))AND(((rt1.c4) IS FALSE))))OR(t0.c39)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c1 AS NUMERIC))AND(((vt0.c2)LIKE(t0.c87)))))AND(x'')))AND(((rt1.c4) IS FALSE))))OR(t0.c39))) IS TRUE)  as count FROM rt1, rt60, t0, vt0, v0);
SELECT COUNT(*) FROM rt1, rt60, t0, vt0, v0 WHERE (((((((((CAST(rt1.c1 AS NUMERIC))AND(((vt0.c2)LIKE(t0.c87)))))AND(x'')))AND(((rt1.c4) IS FALSE))))OR(t0.c39)));
SELECT ALL * FROM rt60, t0 LEFT OUTER JOIN rt1 ON (~ (((rt60.c2) NOT BETWEEN (rt1.c2) AND ('0.9299624164721251')))) FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON CASE WHEN ((((t0.c32)AND(t0.c49)))OR(rt60.c0)) THEN (- (t0.c87)) ELSE rt60.c0 END WHERE (((((rt1.c3)<<(rt1.c2)))OR(CASE WHEN vt0.c1 THEN t0.c49 END))) ORDER BY (((((t0.c32)) BETWEEN ((rt1.c4)) AND ((rt60.c1)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)<<(rt1.c2)))OR(CASE WHEN vt0.c1 THEN t0.c49 END))) IS TRUE)  as count FROM rt60, t0 LEFT OUTER JOIN rt1 ON (~ (((rt60.c2) NOT BETWEEN (rt1.c2) AND ('0.9299624164721251')))) FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON CASE WHEN ((((t0.c32)AND(t0.c49)))OR(rt60.c0)) THEN (- (t0.c87)) ELSE rt60.c0 END ORDER BY (((((t0.c32)) BETWEEN ((rt1.c4)) AND ((rt60.c1)))) IS FALSE));
SELECT ALL * FROM rt60, t0 LEFT OUTER JOIN rt1 ON (~ (((rt60.c2) NOT BETWEEN (rt1.c2) AND ('0.9299624164721251')))) FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON CASE WHEN ((((t0.c32)AND(t0.c49)))OR(rt60.c0)) THEN (- (t0.c87)) ELSE rt60.c0 END WHERE (((((rt1.c3)<<(rt1.c2)))OR(CASE WHEN vt0.c1 THEN t0.c49 END))) ORDER BY (((((t0.c32)) BETWEEN ((rt1.c4)) AND ((rt60.c1)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)<<(rt1.c2)))OR(CASE WHEN vt0.c1 THEN t0.c49 END))) IS TRUE)  as count FROM rt60, t0 LEFT OUTER JOIN rt1 ON (~ (((rt60.c2) NOT BETWEEN (rt1.c2) AND ('0.9299624164721251')))) FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON CASE WHEN ((((t0.c32)AND(t0.c49)))OR(rt60.c0)) THEN (- (t0.c87)) ELSE rt60.c0 END ORDER BY (((((t0.c32)) BETWEEN ((rt1.c4)) AND ((rt60.c1)))) IS FALSE));
SELECT ALL * FROM rt60, t0 LEFT OUTER JOIN rt1 ON (~ (((rt60.c2) NOT BETWEEN (rt1.c2) AND ('0.9299624164721251')))) FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON CASE WHEN ((((t0.c32)AND(t0.c49)))OR(rt60.c0)) THEN (- (t0.c87)) ELSE rt60.c0 END WHERE (((((rt1.c3)<<(rt1.c2)))OR(CASE WHEN vt0.c1 THEN t0.c49 END))) ORDER BY (((((t0.c32)) BETWEEN ((rt1.c4)) AND ((rt60.c1)))) IS FALSE);
SELECT ALL * FROM vt0, rt1, rt60, t0 WHERE (((0.1416703701329166)GLOB(COALESCE(0.6479720025232489, rt60.c1)))) ORDER BY JULIANDAY(((rt1.c4)*(vt0.c2)), CAST(t0.c49 AS REAL), (((vt0.c2))!=((rt60.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.1416703701329166)GLOB(COALESCE(0.6479720025232489, rt60.c1)))) IS TRUE)  as count FROM vt0, rt1, rt60, t0 ORDER BY JULIANDAY(((rt1.c4)*(vt0.c2)), CAST(t0.c49 AS REAL), (((vt0.c2))<>((rt60.c0)))) ASC);
SELECT ALL * FROM vt0, rt1, rt60, t0 WHERE (((0.1416703701329166)GLOB(COALESCE(0.6479720025232489, rt60.c1)))) ORDER BY JULIANDAY(((rt1.c4)*(vt0.c2)), CAST(t0.c49 AS REAL), (((vt0.c2))!=((rt60.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.1416703701329166)GLOB(COALESCE(0.6479720025232489, rt60.c1)))) IS TRUE)  as count FROM vt0, rt1, rt60, t0 ORDER BY JULIANDAY(((rt1.c4)*(vt0.c2)), CAST(t0.c49 AS REAL), (((vt0.c2))<>((rt60.c0)))) ASC);
SELECT ALL * FROM vt0, rt1, rt60, t0 WHERE (((0.1416703701329166)GLOB(COALESCE(0.6479720025232489, rt60.c1)))) ORDER BY JULIANDAY(((rt1.c4)*(vt0.c2)), CAST(t0.c49 AS REAL), (((vt0.c2))!=((rt60.c0)))) ASC;
SELECT COUNT(*) FROM v0, rt1, rt60, t0, vt0 WHERE (CAST(CASE rt60.c0  WHEN 0.6756063563938546 THEN t0.c49 WHEN rt60.c1 THEN rt60.c1 WHEN t0.c39 THEN '' ELSE rt1.c4 END AS INTEGER)) ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), ((NULL)<(rt60.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt60.c0  WHEN 0.6756063563938546 THEN t0.c49 WHEN rt60.c1 THEN rt60.c1 WHEN t0.c39 THEN '' ELSE rt1.c4 END AS INTEGER)) IS TRUE)  as count FROM v0, rt1, rt60, t0, vt0 ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), ((NULL)<(rt60.c2))) ASC);
SELECT COUNT(*) FROM v0, rt1, rt60, t0, vt0 WHERE (CAST(CASE rt60.c0  WHEN 0.6756063563938546 THEN t0.c49 WHEN rt60.c1 THEN rt60.c1 WHEN t0.c39 THEN '' ELSE rt1.c4 END AS INTEGER)) ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), ((NULL)<(rt60.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt60.c0  WHEN 0.6756063563938546 THEN t0.c49 WHEN rt60.c1 THEN rt60.c1 WHEN t0.c39 THEN '' ELSE rt1.c4 END AS INTEGER)) IS TRUE)  as count FROM v0, rt1, rt60, t0, vt0 ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), ((NULL)<(rt60.c2))) ASC);
SELECT COUNT(*) FROM v0, rt1, rt60, t0, vt0 WHERE (CAST(CASE rt60.c0  WHEN 0.6756063563938546 THEN t0.c49 WHEN rt60.c1 THEN rt60.c1 WHEN t0.c39 THEN '' ELSE rt1.c4 END AS INTEGER)) ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), ((NULL)<(rt60.c2))) ASC;
SELECT COUNT(*) FROM vt0, rt60, rt1, v0 WHERE ((((vt0.c2) BETWEEN (NULL) AND (v0.c0)) IN ())) ORDER BY ((((((rt60.c2)AND(vt0.c2)))AND(vt0.c2))) NOT BETWEEN (x'' COLLATE RTRIM) AND ((('') IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2) BETWEEN (NULL) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt60, rt1, v0 ORDER BY ((((((rt60.c2)AND(vt0.c2)))AND(vt0.c2))) NOT BETWEEN (x'' COLLATE RTRIM) AND ((('') IS TRUE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt60, rt1, v0 WHERE ((((vt0.c2) BETWEEN (NULL) AND (v0.c0)) IN ())) ORDER BY ((((((rt60.c2)AND(vt0.c2)))AND(vt0.c2))) NOT BETWEEN (x'' COLLATE RTRIM) AND ((('') IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2) BETWEEN (NULL) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt60, rt1, v0 ORDER BY ((((((rt60.c2)AND(vt0.c2)))AND(vt0.c2))) NOT BETWEEN (x'' COLLATE RTRIM) AND ((('') IS TRUE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt60, rt1, v0 WHERE ((((vt0.c2) BETWEEN (NULL) AND (v0.c0)) IN ())) ORDER BY ((((((rt60.c2)AND(vt0.c2)))AND(vt0.c2))) NOT BETWEEN (x'' COLLATE RTRIM) AND ((('') IS TRUE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt60 INNER JOIN t0 ON (CASE rt60.c2  WHEN rt60.c0 THEN 0xffffffffea99b04d END IN ()) INNER JOIN v0 ON (((((rt60.c0)AND(rt60.c2)))AND(rt60.c2)) IN ()) WHERE ((CASE t0.c49  WHEN t0.c39 THEN 0.7021636517506646 WHEN NULL THEN t0.c87 WHEN rt60.c1 THEN t0.c39 ELSE t0.c49 END IN ())) ORDER BY (((((vt0.c2)GLOB(t0.c32))))!=((((vt0.c1) BETWEEN (v0.c0) AND (t0.c49))))) ASC  NULLS FIRST, rt60.c1 ASC;
SELECT SUM(count) FROM (SELECT (((CASE t0.c49  WHEN t0.c39 THEN 0.7021636517506646 WHEN NULL THEN t0.c87 WHEN rt60.c1 THEN t0.c39 ELSE t0.c49 END IN ())) IS TRUE)  as count FROM vt0, rt60 INNER JOIN t0 ON (CASE rt60.c2  WHEN rt60.c0 THEN 0xffffffffea99b04d END IN ()) INNER JOIN v0 ON (((((rt60.c0)AND(rt60.c2)))AND(rt60.c2)) IN ()) ORDER BY (((((vt0.c2)GLOB(t0.c32))))!=((((vt0.c1) BETWEEN (v0.c0) AND (t0.c49))))) ASC  NULLS FIRST, rt60.c1 ASC);
SELECT COUNT(*) FROM vt0, rt60 INNER JOIN t0 ON (CASE rt60.c2  WHEN rt60.c0 THEN 0xffffffffea99b04d END IN ()) INNER JOIN v0 ON (((((rt60.c0)AND(rt60.c2)))AND(rt60.c2)) IN ()) WHERE ((CASE t0.c49  WHEN t0.c39 THEN 0.7021636517506646 WHEN NULL THEN t0.c87 WHEN rt60.c1 THEN t0.c39 ELSE t0.c49 END IN ())) ORDER BY (((((vt0.c2)GLOB(t0.c32))))!=((((vt0.c1) BETWEEN (v0.c0) AND (t0.c49))))) ASC  NULLS FIRST, rt60.c1 ASC;
SELECT SUM(count) FROM (SELECT (((CASE t0.c49  WHEN t0.c39 THEN 0.7021636517506646 WHEN NULL THEN t0.c87 WHEN rt60.c1 THEN t0.c39 ELSE t0.c49 END IN ())) IS TRUE)  as count FROM vt0, rt60 INNER JOIN t0 ON (CASE rt60.c2  WHEN rt60.c0 THEN 0xffffffffea99b04d END IN ()) INNER JOIN v0 ON (((((rt60.c0)AND(rt60.c2)))AND(rt60.c2)) IN ()) ORDER BY (((((vt0.c2)GLOB(t0.c32))))!=((((vt0.c1) BETWEEN (v0.c0) AND (t0.c49))))) ASC  NULLS FIRST, rt60.c1 ASC);
SELECT COUNT(*) FROM vt0, rt60 INNER JOIN t0 ON (CASE rt60.c2  WHEN rt60.c0 THEN 0xffffffffea99b04d END IN ()) INNER JOIN v0 ON (((((rt60.c0)AND(rt60.c2)))AND(rt60.c2)) IN ()) WHERE ((CASE t0.c49  WHEN t0.c39 THEN 0.7021636517506646 WHEN NULL THEN t0.c87 WHEN rt60.c1 THEN t0.c39 ELSE t0.c49 END IN ())) ORDER BY (((((vt0.c2)GLOB(t0.c32))))!=((((vt0.c1) BETWEEN (v0.c0) AND (t0.c49))))) ASC  NULLS FIRST, rt60.c1 ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt60 ON ((rt60.c2 COLLATE NOCASE)>>((((rt60.c1))!=((vt0.c2))))) WHERE ((((vt0.c0, rt60.c1, rt1.c2)) NOT BETWEEN (((((vt0.c2, rt60.c0, rt1.c1))!=((vt0.c0, rt60.c2, rt60.c2))), ((rt1.c4)|(rt60.c1)), x'')) AND ((((rt60.c2) NOTNULL), CASE WHEN vt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt60.c2 WHEN 0.30544184005913333 THEN rt60.c2 ELSE rt60.c1 END, ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY ((0.5718605436821628)%(((rt1.c0)>=(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt60.c1, rt1.c2)) NOT BETWEEN (((((vt0.c2, rt60.c0, rt1.c1))!=((vt0.c0, rt60.c2, rt60.c2))), ((rt1.c4)|(rt60.c1)), x'')) AND ((((rt60.c2) NOTNULL), CASE WHEN vt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt60.c2 WHEN 0.30544184005913333 THEN rt60.c2 ELSE rt60.c1 END, ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN rt60 ON ((rt60.c2 COLLATE NOCASE)>>((((rt60.c1))!=((vt0.c2))))) ORDER BY ((0.5718605436821628)%(((rt1.c0)>=(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt60 ON ((rt60.c2 COLLATE NOCASE)>>((((rt60.c1))!=((vt0.c2))))) WHERE ((((vt0.c0, rt60.c1, rt1.c2)) NOT BETWEEN (((((vt0.c2, rt60.c0, rt1.c1))!=((vt0.c0, rt60.c2, rt60.c2))), ((rt1.c4)|(rt60.c1)), x'')) AND ((((rt60.c2) NOTNULL), CASE WHEN vt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt60.c2 WHEN 0.30544184005913333 THEN rt60.c2 ELSE rt60.c1 END, ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY ((0.5718605436821628)%(((rt1.c0)>=(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt60.c1, rt1.c2)) NOT BETWEEN (((((vt0.c2, rt60.c0, rt1.c1))!=((vt0.c0, rt60.c2, rt60.c2))), ((rt1.c4)|(rt60.c1)), x'')) AND ((((rt60.c2) NOTNULL), CASE WHEN vt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt60.c2 WHEN 0.30544184005913333 THEN rt60.c2 ELSE rt60.c1 END, ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN rt60 ON ((rt60.c2 COLLATE NOCASE)>>((((rt60.c1))!=((vt0.c2))))) ORDER BY ((0.5718605436821628)%(((rt1.c0)>=(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt60 ON ((rt60.c2 COLLATE NOCASE)>>((((rt60.c1))!=((vt0.c2))))) WHERE ((((vt0.c0, rt60.c1, rt1.c2)) NOT BETWEEN (((((vt0.c2, rt60.c0, rt1.c1))!=((vt0.c0, rt60.c2, rt60.c2))), ((rt1.c4)|(rt60.c1)), x'')) AND ((((rt60.c2) NOTNULL), CASE WHEN vt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt60.c2 WHEN 0.30544184005913333 THEN rt60.c2 ELSE rt60.c1 END, ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY ((0.5718605436821628)%(((rt1.c0)>=(rt1.c0)))) DESC;
SELECT ALL * FROM v0, t0, rt1 WHERE ((((t0.c87 IN (rt1.c1)))IS NOT(((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87 IN (rt1.c1)))IS NOT(((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c32))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL * FROM v0, t0, rt1 WHERE ((((t0.c87 IN (rt1.c1)))IS NOT(((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87 IN (rt1.c1)))IS NOT(((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c32))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL * FROM v0, t0, rt1 WHERE ((((t0.c87 IN (rt1.c1)))IS NOT(((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c32)))));
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN NULL THEN v0.c0 ELSE (v0.c0 IN (v0.c0, v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN NULL THEN v0.c0 ELSE (v0.c0 IN (v0.c0, v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN NULL THEN v0.c0 ELSE (v0.c0 IN (v0.c0, v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN NULL THEN v0.c0 ELSE (v0.c0 IN (v0.c0, v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN NULL THEN v0.c0 ELSE (v0.c0 IN (v0.c0, v0.c0)) END);
SELECT COUNT(*) FROM v0, t0, rt1, vt0, rt60 WHERE ((~ (CASE rt1.c2  WHEN vt0.c2 THEN x'' END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt1.c2  WHEN vt0.c2 THEN x'' END))) IS TRUE)  as count FROM v0, t0, rt1, vt0, rt60);
SELECT COUNT(*) FROM v0, t0, rt1, vt0, rt60 WHERE ((~ (CASE rt1.c2  WHEN vt0.c2 THEN x'' END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt1.c2  WHEN vt0.c2 THEN x'' END))) IS TRUE)  as count FROM v0, t0, rt1, vt0, rt60);
SELECT COUNT(*) FROM v0, t0, rt1, vt0, rt60 WHERE ((~ (CASE rt1.c2  WHEN vt0.c2 THEN x'' END)));
SELECT ALL COUNT(*) FROM vt0, t0, rt1, v0, rt60 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN (NULL) AND (((((rt60.c0)AND(t0.c49)))AND(t0.c39))))) ORDER BY MAX(NULL, t0.c49 COLLATE RTRIM, ((rt1.c3)<(rt1.c2)), CAST(x'8e53' AS NUMERIC))  NULLS FIRST, 846642725 DESC, (((t0.c39)) BETWEEN (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((rt60.c1))))) AND ((-1922409890))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT)) BETWEEN (NULL) AND (((((rt60.c0)AND(t0.c49)))AND(t0.c39))))) IS TRUE)  as count FROM vt0, t0, rt1, v0, rt60 ORDER BY MAX(NULL, t0.c49 COLLATE RTRIM, ((rt1.c3)<(rt1.c2)), CAST(x'8e53' AS NUMERIC))  NULLS FIRST, 846642725 DESC, (((t0.c39)) BETWEEN (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((rt60.c1))))) AND ((-1922409890))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt1, v0, rt60 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN (NULL) AND (((((rt60.c0)AND(t0.c49)))AND(t0.c39))))) ORDER BY MAX(NULL, t0.c49 COLLATE RTRIM, ((rt1.c3)<(rt1.c2)), CAST(x'8e53' AS NUMERIC))  NULLS FIRST, 846642725 DESC, (((t0.c39)) BETWEEN (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((rt60.c1))))) AND ((-1922409890))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT)) BETWEEN (NULL) AND (((((rt60.c0)AND(t0.c49)))AND(t0.c39))))) IS TRUE)  as count FROM vt0, t0, rt1, v0, rt60 ORDER BY MAX(NULL, t0.c49 COLLATE RTRIM, ((rt1.c3)<(rt1.c2)), CAST(x'8e53' AS NUMERIC))  NULLS FIRST, 846642725 DESC, (((t0.c39)) BETWEEN (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((rt60.c1))))) AND ((-1922409890))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, t0 WHERE (CASE WHEN CASE '2116798174'  WHEN rt1.c2 THEN 0x19fefe1f END THEN (vt0.c1 IN ()) END) ORDER BY ((1724939808 COLLATE BINARY) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE '2116798174'  WHEN rt1.c2 THEN 0X19fefe1f END THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt1, v0, t0 ORDER BY ((1724939808 COLLATE BINARY) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, t0 WHERE (CASE WHEN CASE '2116798174'  WHEN rt1.c2 THEN 0x19fefe1f END THEN (vt0.c1 IN ()) END) ORDER BY ((1724939808 COLLATE BINARY) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE '2116798174'  WHEN rt1.c2 THEN 0X19fefe1f END THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt1, v0, t0 ORDER BY ((1724939808 COLLATE BINARY) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, t0 WHERE (CASE WHEN CASE '2116798174'  WHEN rt1.c2 THEN 0x19fefe1f END THEN (vt0.c1 IN ()) END) ORDER BY ((1724939808 COLLATE BINARY) NOTNULL) ASC;
SELECT * FROM v0, rt60, t0, rt1, vt0 WHERE (CAST(TYPEOF(t0.c32) AS TEXT)) ORDER BY (((((NOT (rt1.c3)))AND('86976877')))AND(((rt1.c3)!=(x'')))) DESC  NULLS LAST, CASE WHEN (((t0.c87, rt1.c4, vt0.c0, rt1.c2, 0.642906343173378))!=((t0.c39, rt1.c0, rt60.c2, v0.c0, x''))) THEN (((v0.c0)) NOT BETWEEN ((t0.c49)) AND ((v0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(t0.c32) AS TEXT)) IS TRUE)  as count FROM v0, rt60, t0, rt1, vt0 ORDER BY (((((NOT (rt1.c3)))AND('86976877')))AND(((rt1.c3)<>(x'')))) DESC  NULLS LAST, CASE WHEN (((t0.c87, rt1.c4, vt0.c0, rt1.c2, 0.642906343173378))!=((t0.c39, rt1.c0, rt60.c2, v0.c0, x''))) THEN (((v0.c0)) NOT BETWEEN ((t0.c49)) AND ((v0.c0))) END ASC);
SELECT * FROM v0, rt60, t0, rt1, vt0 WHERE (CAST(TYPEOF(t0.c32) AS TEXT)) ORDER BY (((((NOT (rt1.c3)))AND('86976877')))AND(((rt1.c3)!=(x'')))) DESC  NULLS LAST, CASE WHEN (((t0.c87, rt1.c4, vt0.c0, rt1.c2, 0.642906343173378))!=((t0.c39, rt1.c0, rt60.c2, v0.c0, x''))) THEN (((v0.c0)) NOT BETWEEN ((t0.c49)) AND ((v0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(t0.c32) AS TEXT)) IS TRUE)  as count FROM v0, rt60, t0, rt1, vt0 ORDER BY (((((NOT (rt1.c3)))AND('86976877')))AND(((rt1.c3)<>(x'')))) DESC  NULLS LAST, CASE WHEN (((t0.c87, rt1.c4, vt0.c0, rt1.c2, 0.642906343173378))!=((t0.c39, rt1.c0, rt60.c2, v0.c0, x''))) THEN (((v0.c0)) NOT BETWEEN ((t0.c49)) AND ((v0.c0))) END ASC);
SELECT * FROM v0, rt60, t0, rt1, vt0 WHERE (CAST(TYPEOF(t0.c32) AS TEXT)) ORDER BY (((((NOT (rt1.c3)))AND('86976877')))AND(((rt1.c3)!=(x'')))) DESC  NULLS LAST, CASE WHEN (((t0.c87, rt1.c4, vt0.c0, rt1.c2, 0.642906343173378))!=((t0.c39, rt1.c0, rt60.c2, v0.c0, x''))) THEN (((v0.c0)) NOT BETWEEN ((t0.c49)) AND ((v0.c0))) END ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c2 THEN rt1.c0 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END) NOTNULL)) ORDER BY LIKE(vt0.c2 COLLATE BINARY, x'4c033bb8') ASC  NULLS LAST, ((((((((((rt1.c2)>>(vt0.c0)))OR((NOT (rt1.c4)))))AND(CAST(rt1.c0 AS BLOB))))AND((rt1.c3 IN ()))))AND(UPPER(DISTINCT rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN rt1.c0 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY LIKE(vt0.c2 COLLATE BINARY, x'4c033bb8') ASC  NULLS LAST, ((((((((((rt1.c2)>>(vt0.c0)))OR((NOT (rt1.c4)))))AND(CAST(rt1.c0 AS BLOB))))AND((rt1.c3 IN ()))))AND(UPPER(DISTINCT rt1.c1))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c2 THEN rt1.c0 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END) NOTNULL)) ORDER BY LIKE(vt0.c2 COLLATE BINARY, x'4c033bb8') ASC  NULLS LAST, ((((((((((rt1.c2)>>(vt0.c0)))OR((NOT (rt1.c4)))))AND(CAST(rt1.c0 AS BLOB))))AND((rt1.c3 IN ()))))AND(UPPER(DISTINCT rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN rt1.c0 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY LIKE(vt0.c2 COLLATE BINARY, x'4c033bb8') ASC  NULLS LAST, ((((((((((rt1.c2)>>(vt0.c0)))OR((NOT (rt1.c4)))))AND(CAST(rt1.c0 AS BLOB))))AND((rt1.c3 IN ()))))AND(UPPER(DISTINCT rt1.c1))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) CROSS JOIN v0 ON CASE WHEN vt0.c1 THEN rt1.c1 END COLLATE RTRIM WHERE (CAST(((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c0)) AS TEXT)) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c2 ELSE rt1.c4 END)|(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) CROSS JOIN v0 ON CASE WHEN vt0.c1 THEN rt1.c1 END COLLATE RTRIM ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c2 ELSE rt1.c4 END)|(''))  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) CROSS JOIN v0 ON CASE WHEN vt0.c1 THEN rt1.c1 END COLLATE RTRIM WHERE (CAST(((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c0)) AS TEXT)) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c2 ELSE rt1.c4 END)|(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) CROSS JOIN v0 ON CASE WHEN vt0.c1 THEN rt1.c1 END COLLATE RTRIM ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c2 ELSE rt1.c4 END)|(''))  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) CROSS JOIN v0 ON CASE WHEN vt0.c1 THEN rt1.c1 END COLLATE RTRIM WHERE (CAST(((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c0)) AS TEXT)) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.c2 ELSE rt1.c4 END)|(''))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((('-128379123')AND(t0.c32)))AND(vt0.c1))  WHEN (((NULL)) NOT BETWEEN ((t0.c49)) AND ((vt0.c2))) THEN vt0.c2 COLLATE NOCASE WHEN 0.9946223913088363 COLLATE RTRIM THEN 416208002 WHEN (((t0.c87))>=((t0.c87))) THEN t0.c49 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((('-128379123')AND(t0.c32)))AND(vt0.c1))  WHEN (((NULL)) NOT BETWEEN ((t0.c49)) AND ((vt0.c2))) THEN vt0.c2 COLLATE NOCASE WHEN 0.9946223913088363 COLLATE RTRIM THEN 416208002 WHEN (((t0.c87))>=((t0.c87))) THEN t0.c49 END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((('-128379123')AND(t0.c32)))AND(vt0.c1))  WHEN (((NULL)) NOT BETWEEN ((t0.c49)) AND ((vt0.c2))) THEN vt0.c2 COLLATE NOCASE WHEN 0.9946223913088363 COLLATE RTRIM THEN 416208002 WHEN (((t0.c87))>=((t0.c87))) THEN t0.c49 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((('-128379123')AND(t0.c32)))AND(vt0.c1))  WHEN (((NULL)) NOT BETWEEN ((t0.c49)) AND ((vt0.c2))) THEN vt0.c2 COLLATE NOCASE WHEN 0.9946223913088363 COLLATE RTRIM THEN 416208002 WHEN (((t0.c87))>=((t0.c87))) THEN t0.c49 END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((('-128379123')AND(t0.c32)))AND(vt0.c1))  WHEN (((NULL)) NOT BETWEEN ((t0.c49)) AND ((vt0.c2))) THEN vt0.c2 COLLATE NOCASE WHEN 0.9946223913088363 COLLATE RTRIM THEN 416208002 WHEN (((t0.c87))>=((t0.c87))) THEN t0.c49 END);
SELECT ALL * FROM rt1, vt0, v0, rt60 WHERE (0.48639062388213783);
SELECT SUM(count) FROM (SELECT ((0.48639062388213783) IS TRUE)  as count FROM rt1, vt0, v0, rt60);
SELECT ALL * FROM rt1, vt0, v0, rt60 WHERE (0.48639062388213783);
SELECT SUM(count) FROM (SELECT ((0.48639062388213783) IS TRUE)  as count FROM rt1, vt0, v0, rt60);
SELECT ALL * FROM rt1, vt0, v0, rt60 WHERE (0.48639062388213783);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON UPPER(rt60.c2 COLLATE BINARY) LEFT OUTER JOIN v0 ON t0.c87 INNER JOIN t0 ON CAST((('') IS TRUE) AS INTEGER) INNER JOIN rt60 ON ((((((((rt1.c2)OR(rt60.c1)))AND(t0.c87)))OR((((rt1.c3))<=((t0.c32))))))OR(((rt1.c3) NOT NULL))) WHERE (CASE WHEN 0.5354233381038603 THEN json_remove(rt1.c2, t0.c87, rt1.c1, x'', rt1.c0, rt1.c0) WHEN CASE WHEN rt60.c2 THEN -122967907 END THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CAST('' AS BLOB) THEN t0.c32 COLLATE RTRIM ELSE (- (t0.c39)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.5354233381038603 THEN json_remove(rt1.c2, t0.c87, rt1.c1, x'', rt1.c0, rt1.c0) WHEN CASE WHEN rt60.c2 THEN -122967907 END THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CAST('' AS BLOB) THEN t0.c32 COLLATE RTRIM ELSE (- (t0.c39)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON UPPER(rt60.c2 COLLATE BINARY) LEFT OUTER JOIN v0 ON t0.c87 INNER JOIN t0 ON CAST((('') IS TRUE) AS INTEGER) INNER JOIN rt60 ON ((((((((rt1.c2)OR(rt60.c1)))AND(t0.c87)))OR((((rt1.c3))<=((t0.c32))))))OR(((rt1.c3) NOT NULL))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON UPPER(rt60.c2 COLLATE BINARY) LEFT OUTER JOIN v0 ON t0.c87 INNER JOIN t0 ON CAST((('') IS TRUE) AS INTEGER) INNER JOIN rt60 ON ((((((((rt1.c2)OR(rt60.c1)))AND(t0.c87)))OR((((rt1.c3))<=((t0.c32))))))OR(((rt1.c3) NOT NULL))) WHERE (CASE WHEN 0.5354233381038603 THEN json_remove(rt1.c2, t0.c87, rt1.c1, x'', rt1.c0, rt1.c0) WHEN CASE WHEN rt60.c2 THEN -122967907 END THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CAST('' AS BLOB) THEN t0.c32 COLLATE RTRIM ELSE (- (t0.c39)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.5354233381038603 THEN json_remove(rt1.c2, t0.c87, rt1.c1, x'', rt1.c0, rt1.c0) WHEN CASE WHEN rt60.c2 THEN -122967907 END THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CAST('' AS BLOB) THEN t0.c32 COLLATE RTRIM ELSE (- (t0.c39)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON UPPER(rt60.c2 COLLATE BINARY) LEFT OUTER JOIN v0 ON t0.c87 INNER JOIN t0 ON CAST((('') IS TRUE) AS INTEGER) INNER JOIN rt60 ON ((((((((rt1.c2)OR(rt60.c1)))AND(t0.c87)))OR((((rt1.c3))<=((t0.c32))))))OR(((rt1.c3) NOT NULL))));
SELECT ALL * FROM rt1, t0 NATURAL JOIN vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN vt0);
SELECT ALL * FROM rt1, t0 NATURAL JOIN vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN vt0);
SELECT ALL * FROM rt1, t0 NATURAL JOIN vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM v0, t0, rt1, vt0 WHERE (((CAST(rt1.c4 AS INTEGER)) BETWEEN ((t0.c49 IN ())) AND (CASE WHEN t0.c39 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 WHEN rt1.c4 THEN v0.c0 WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS INTEGER)) BETWEEN ((t0.c49 IN ())) AND (CASE WHEN t0.c39 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 WHEN rt1.c4 THEN v0.c0 WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END))) IS TRUE)  as count FROM v0, t0, rt1, vt0);
SELECT COUNT(*) FROM v0, t0, rt1, vt0 WHERE (((CAST(rt1.c4 AS INTEGER)) BETWEEN ((t0.c49 IN ())) AND (CASE WHEN t0.c39 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 WHEN rt1.c4 THEN v0.c0 WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS INTEGER)) BETWEEN ((t0.c49 IN ())) AND (CASE WHEN t0.c39 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 WHEN rt1.c4 THEN v0.c0 WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END))) IS TRUE)  as count FROM v0, t0, rt1, vt0);
SELECT COUNT(*) FROM v0, t0, rt1, vt0 WHERE (((CAST(rt1.c4 AS INTEGER)) BETWEEN ((t0.c49 IN ())) AND (CASE WHEN t0.c39 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 WHEN rt1.c4 THEN v0.c0 WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (('(p')OR(((vt0.c0)IS(vt0.c1)))) INNER JOIN rt60 ON ((((rt60.c0) BETWEEN (rt60.c1) AND (vt0.c0))) NOT BETWEEN ('') AND ((vt0.c1 IN ()))) WHERE (((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c2)))||((((x'', rt60.c0, rt60.c2))=((vt0.c2, rt60.c2, vt0.c2)))))) ORDER BY CASE WHEN (- (rt60.c0)) THEN ((vt0.c1)==(rt60.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c2)))||((((x'', rt60.c0, rt60.c2))=((vt0.c2, rt60.c2, vt0.c2)))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (('(p')OR(((vt0.c0)IS(vt0.c1)))) INNER JOIN rt60 ON ((((rt60.c0) BETWEEN (rt60.c1) AND (vt0.c0))) NOT BETWEEN ('') AND ((vt0.c1 IN ()))) ORDER BY CASE WHEN (- (rt60.c0)) THEN ((vt0.c1)=(rt60.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (('(p')OR(((vt0.c0)IS(vt0.c1)))) INNER JOIN rt60 ON ((((rt60.c0) BETWEEN (rt60.c1) AND (vt0.c0))) NOT BETWEEN ('') AND ((vt0.c1 IN ()))) WHERE (((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c2)))||((((x'', rt60.c0, rt60.c2))=((vt0.c2, rt60.c2, vt0.c2)))))) ORDER BY CASE WHEN (- (rt60.c0)) THEN ((vt0.c1)==(rt60.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c2)))||((((x'', rt60.c0, rt60.c2))=((vt0.c2, rt60.c2, vt0.c2)))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (('(p')OR(((vt0.c0)IS(vt0.c1)))) INNER JOIN rt60 ON ((((rt60.c0) BETWEEN (rt60.c1) AND (vt0.c0))) NOT BETWEEN ('') AND ((vt0.c1 IN ()))) ORDER BY CASE WHEN (- (rt60.c0)) THEN ((vt0.c1)=(rt60.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (('(p')OR(((vt0.c0)IS(vt0.c1)))) INNER JOIN rt60 ON ((((rt60.c0) BETWEEN (rt60.c1) AND (vt0.c0))) NOT BETWEEN ('') AND ((vt0.c1 IN ()))) WHERE (((((rt60.c1) BETWEEN (rt60.c2) AND (rt60.c2)))||((((x'', rt60.c0, rt60.c2))=((vt0.c2, rt60.c2, vt0.c2)))))) ORDER BY CASE WHEN (- (rt60.c0)) THEN ((vt0.c1)==(rt60.c1)) END  NULLS FIRST;
SELECT ALL * FROM vt0, t0, v0, rt60 WHERE ((((rt60.c2)<=(rt60.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt60.c2)<=(rt60.c1)) IN ())) IS TRUE)  as count FROM vt0, t0, v0, rt60);
SELECT ALL * FROM vt0, t0, v0, rt60 WHERE ((((rt60.c2)<=(rt60.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt60.c2)<=(rt60.c1)) IN ())) IS TRUE)  as count FROM vt0, t0, v0, rt60);
SELECT ALL * FROM vt0, t0, v0, rt60 WHERE ((((rt60.c2)<=(rt60.c1)) IN ()));
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (' s') ORDER BY CASE WHEN rt1.c4 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) ELSE ((rt1.c3)|(rt1.c4)) END;
SELECT SUM(count) FROM (SELECT ((' s') IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY CASE WHEN rt1.c4 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) ELSE ((rt1.c3)|(rt1.c4)) END);
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (' s') ORDER BY CASE WHEN rt1.c4 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) ELSE ((rt1.c3)|(rt1.c4)) END;
SELECT SUM(count) FROM (SELECT ((' s') IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY CASE WHEN rt1.c4 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) ELSE ((rt1.c3)|(rt1.c4)) END);
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (' s') ORDER BY CASE WHEN rt1.c4 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) ELSE ((rt1.c3)|(rt1.c4)) END;
SELECT COUNT(*) FROM t0, vt0, rt60 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0, rt60);
SELECT COUNT(*) FROM t0, vt0, rt60 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0, rt60);
SELECT COUNT(*) FROM t0, vt0, rt60 WHERE (vt0.c2);
SELECT COUNT(*) FROM v0, rt1 WHERE ((((rt1.c1)<(rt1.c2)) IN (((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)<(rt1.c2)) IN (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((((rt1.c1)<(rt1.c2)) IN (((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)<(rt1.c2)) IN (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((((rt1.c1)<(rt1.c2)) IN (((rt1.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt60, vt0, t0, v0, rt1 WHERE (((((((vt0.c2) BETWEEN (v0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((t0.c32) BETWEEN (rt60.c1) AND (rt1.c3))))) ORDER BY CAST(CAST(t0.c39 AS TEXT) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2) BETWEEN (v0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((t0.c32) BETWEEN (rt60.c1) AND (rt1.c3))))) IS TRUE)  as count FROM rt60, vt0, t0, v0, rt1 ORDER BY CAST(CAST(t0.c39 AS TEXT) AS REAL));
SELECT ALL COUNT(*) FROM rt60, vt0, t0, v0, rt1 WHERE (((((((vt0.c2) BETWEEN (v0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((t0.c32) BETWEEN (rt60.c1) AND (rt1.c3))))) ORDER BY CAST(CAST(t0.c39 AS TEXT) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2) BETWEEN (v0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((t0.c32) BETWEEN (rt60.c1) AND (rt1.c3))))) IS TRUE)  as count FROM rt60, vt0, t0, v0, rt1 ORDER BY CAST(CAST(t0.c39 AS TEXT) AS REAL));
SELECT ALL COUNT(*) FROM rt60, vt0, t0, v0, rt1 WHERE (((((((vt0.c2) BETWEEN (v0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((t0.c32) BETWEEN (rt60.c1) AND (rt1.c3))))) ORDER BY CAST(CAST(t0.c39 AS TEXT) AS REAL);
SELECT ALL COUNT(*) FROM vt0, t0, rt60, rt1 WHERE (CHAR(CAST(rt1.c3 AS BLOB), ((rt1.c2)||(rt60.c1)), ((((((((x'6ba73b71')OR(rt60.c2)))AND(rt1.c4)))OR(rt1.c2)))AND(t0.c39))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CAST(rt1.c3 AS BLOB), ((rt1.c2)||(rt60.c1)), ((((((((x'6ba73b71')OR(rt60.c2)))AND(rt1.c4)))OR(rt1.c2)))AND(t0.c39)))) IS TRUE)  as count FROM vt0, t0, rt60, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt60, rt1 WHERE (CHAR(CAST(rt1.c3 AS BLOB), ((rt1.c2)||(rt60.c1)), ((((((((x'6ba73b71')OR(rt60.c2)))AND(rt1.c4)))OR(rt1.c2)))AND(t0.c39))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CAST(rt1.c3 AS BLOB), ((rt1.c2)||(rt60.c1)), ((((((((x'6ba73b71')OR(rt60.c2)))AND(rt1.c4)))OR(rt1.c2)))AND(t0.c39)))) IS TRUE)  as count FROM vt0, t0, rt60, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt60, rt1 WHERE (CHAR(CAST(rt1.c3 AS BLOB), ((rt1.c2)||(rt60.c1)), ((((((((x'6ba73b71')OR(rt60.c2)))AND(rt1.c4)))OR(rt1.c2)))AND(t0.c39))));
SELECT COUNT(*) FROM rt1, rt60, vt0, t0, v0 WHERE ((((NULL)>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)>(vt0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt60, vt0, t0, v0);
SELECT COUNT(*) FROM rt1, rt60, vt0, t0, v0 WHERE ((((NULL)>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)>(vt0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt60, vt0, t0, v0);
SELECT COUNT(*) FROM rt1, rt60, vt0, t0, v0 WHERE ((((NULL)>(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt1, rt60 WHERE (CAST(t0.c87 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c87 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0, rt1, rt60);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt1, rt60 WHERE (CAST(t0.c87 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c87 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0, rt1, rt60);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt1, rt60 WHERE (CAST(t0.c87 AS NUMERIC) COLLATE RTRIM);
SELECT * FROM rt1, vt0, rt60, t0 NOT INDEXED, v0 WHERE ((((~ (rt60.c0)))!=(rtreenode(vt0.c1, t0.c49))));
SELECT SUM(count) FROM (SELECT (((((~ (rt60.c0)))!=(rtreenode(vt0.c1, t0.c49)))) IS TRUE)  as count FROM rt1, vt0, rt60, t0, v0);
SELECT * FROM rt1, vt0, rt60, t0 NOT INDEXED, v0 WHERE ((((~ (rt60.c0)))!=(rtreenode(vt0.c1, t0.c49))));
SELECT SUM(count) FROM (SELECT (((((~ (rt60.c0)))!=(rtreenode(vt0.c1, t0.c49)))) IS TRUE)  as count FROM rt1, vt0, rt60, t0, v0);
SELECT * FROM rt1, vt0, rt60, t0 NOT INDEXED, v0 WHERE ((((~ (rt60.c0)))!=(rtreenode(vt0.c1, t0.c49))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (~ ((rt1.c3 IN (rt1.c2)))) LEFT OUTER JOIN v0 ON ((((t0.c39)&(rt1.c0)))%((NOT (rt1.c2)))) WHERE (HEX(DISTINCT ((rt1.c2)=(rt1.c2)))) ORDER BY 0.49112857928708487 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt1.c2)=(rt1.c2)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (~ ((rt1.c3 IN (rt1.c2)))) LEFT OUTER JOIN v0 ON ((((t0.c39)&(rt1.c0)))%((NOT (rt1.c2)))) ORDER BY 0.49112857928708487 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (~ ((rt1.c3 IN (rt1.c2)))) LEFT OUTER JOIN v0 ON ((((t0.c39)&(rt1.c0)))%((NOT (rt1.c2)))) WHERE (HEX(DISTINCT ((rt1.c2)=(rt1.c2)))) ORDER BY 0.49112857928708487 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt1.c2)=(rt1.c2)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (~ ((rt1.c3 IN (rt1.c2)))) LEFT OUTER JOIN v0 ON ((((t0.c39)&(rt1.c0)))%((NOT (rt1.c2)))) ORDER BY 0.49112857928708487 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (~ ((rt1.c3 IN (rt1.c2)))) LEFT OUTER JOIN v0 ON ((((t0.c39)&(rt1.c0)))%((NOT (rt1.c2)))) WHERE (HEX(DISTINCT ((rt1.c2)=(rt1.c2)))) ORDER BY 0.49112857928708487 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.30560312481022966) ORDER BY vt0.c1, ((vt0.c2)IS NOT(vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((0.30560312481022966) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1, ((vt0.c2)IS NOT(vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.30560312481022966) ORDER BY vt0.c1, ((vt0.c2)IS NOT(vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((0.30560312481022966) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1, ((vt0.c2)IS NOT(vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.30560312481022966) ORDER BY vt0.c1, ((vt0.c2)IS NOT(vt0.c1)) COLLATE RTRIM;
SELECT * FROM vt0 WHERE ((((((vt0.c1)||(vt0.c1))))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ('711938625')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)||(vt0.c1))))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ('711938625')) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)||(vt0.c1))))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ('711938625')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)||(vt0.c1))))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ('711938625')) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)||(vt0.c1))))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ('711938625')) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0, rt1 CROSS JOIN vt0 ON (((((rt1.c1) IS TRUE)))!=((((rt1.c4) NOTNULL)))) WHERE ((((rt1.c2)) BETWEEN ((((t0.c49)>=(vt0.c2)))) AND (((((NULL))>((rt1.c4))))))) ORDER BY ((((vt0.c1, vt0.c2, rt1.c0)) BETWEEN ((rt1.c4, rt1.c3, x'1952')) AND ((rt1.c3, vt0.c1, vt0.c2))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((t0.c49)>=(vt0.c2)))) AND (((((NULL))>((rt1.c4))))))) IS TRUE)  as count FROM v0, t0, rt1 CROSS JOIN vt0 ON (((((rt1.c1) IS TRUE)))<>((((rt1.c4) NOTNULL)))) ORDER BY ((((vt0.c1, vt0.c2, rt1.c0)) BETWEEN ((rt1.c4, rt1.c3, x'1952')) AND ((rt1.c3, vt0.c1, vt0.c2))) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt1 CROSS JOIN vt0 ON (((((rt1.c1) IS TRUE)))!=((((rt1.c4) NOTNULL)))) WHERE ((((rt1.c2)) BETWEEN ((((t0.c49)>=(vt0.c2)))) AND (((((NULL))>((rt1.c4))))))) ORDER BY ((((vt0.c1, vt0.c2, rt1.c0)) BETWEEN ((rt1.c4, rt1.c3, x'1952')) AND ((rt1.c3, vt0.c1, vt0.c2))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((t0.c49)>=(vt0.c2)))) AND (((((NULL))>((rt1.c4))))))) IS TRUE)  as count FROM v0, t0, rt1 CROSS JOIN vt0 ON (((((rt1.c1) IS TRUE)))<>((((rt1.c4) NOTNULL)))) ORDER BY ((((vt0.c1, vt0.c2, rt1.c0)) BETWEEN ((rt1.c4, rt1.c3, x'1952')) AND ((rt1.c3, vt0.c1, vt0.c2))) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt1 CROSS JOIN vt0 ON (((((rt1.c1) IS TRUE)))!=((((rt1.c4) NOTNULL)))) WHERE ((((rt1.c2)) BETWEEN ((((t0.c49)>=(vt0.c2)))) AND (((((NULL))>((rt1.c4))))))) ORDER BY ((((vt0.c1, vt0.c2, rt1.c0)) BETWEEN ((rt1.c4, rt1.c3, x'1952')) AND ((rt1.c3, vt0.c1, vt0.c2))) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON ((((((((((t0.c39)+(rt1.c1)))OR(TRIM(DISTINCT t0.c87))))AND(((rt1.c3)%(t0.c39)))))OR(((t0.c32)!=(rt1.c2)))))AND(CASE rt1.c1  WHEN t0.c87 THEN rt1.c4 END)) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c49)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c49)) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((((((((((t0.c39)+(rt1.c1)))OR(TRIM(DISTINCT t0.c87))))AND(((rt1.c3)%(t0.c39)))))OR(((t0.c32)<>(rt1.c2)))))AND(CASE rt1.c1  WHEN t0.c87 THEN rt1.c4 END)));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON ((((((((((t0.c39)+(rt1.c1)))OR(TRIM(DISTINCT t0.c87))))AND(((rt1.c3)%(t0.c39)))))OR(((t0.c32)!=(rt1.c2)))))AND(CASE rt1.c1  WHEN t0.c87 THEN rt1.c4 END)) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c49)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c49)) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((((((((((t0.c39)+(rt1.c1)))OR(TRIM(DISTINCT t0.c87))))AND(((rt1.c3)%(t0.c39)))))OR(((t0.c32)<>(rt1.c2)))))AND(CASE rt1.c1  WHEN t0.c87 THEN rt1.c4 END)));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON ((((((((((t0.c39)+(rt1.c1)))OR(TRIM(DISTINCT t0.c87))))AND(((rt1.c3)%(t0.c39)))))OR(((t0.c32)!=(rt1.c2)))))AND(CASE rt1.c1  WHEN t0.c87 THEN rt1.c4 END)) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c49)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt1, v0, t0, rt60 WHERE (((((((rt1.c1)OR(v0.c0)))OR(t0.c32))) NOT BETWEEN (t0.c32 COLLATE BINARY) AND ((~ (t0.c49))))) ORDER BY (~ ((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(v0.c0)))OR(t0.c32))) NOT BETWEEN (t0.c32 COLLATE BINARY) AND ((~ (t0.c49))))) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt60 ORDER BY (~ ((rt1.c2 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, t0, rt60 WHERE (((((((rt1.c1)OR(v0.c0)))OR(t0.c32))) NOT BETWEEN (t0.c32 COLLATE BINARY) AND ((~ (t0.c49))))) ORDER BY (~ ((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(v0.c0)))OR(t0.c32))) NOT BETWEEN (t0.c32 COLLATE BINARY) AND ((~ (t0.c49))))) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt60 ORDER BY (~ ((rt1.c2 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, t0, rt60 WHERE (((((((rt1.c1)OR(v0.c0)))OR(t0.c32))) NOT BETWEEN (t0.c32 COLLATE BINARY) AND ((~ (t0.c49))))) ORDER BY (~ ((rt1.c2 IN ())))  NULLS FIRST;
SELECT ALL * FROM t0, rt1, vt0 WHERE ((NOT (t0.c32)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c32))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL * FROM t0, rt1, vt0 WHERE ((NOT (t0.c32)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c32))) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT ALL * FROM t0, rt1, vt0 WHERE ((NOT (t0.c32)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c0)))GLOB(((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<(vt0.c0)))GLOB(((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c0)))GLOB(((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<(vt0.c0)))GLOB(((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c0)))GLOB(((vt0.c2) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (json_object(((vt0.c1)/(-375784759)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ORDER BY ((TYPEOF(vt0.c1))>(CAST(vt0.c0 AS INTEGER))) DESC, (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) ISNULL), (((NULL))=(((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((vt0.c1)/(-375784759)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c1))>(CAST(vt0.c0 AS INTEGER))) DESC, (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) ISNULL), (((NULL))==(((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (json_object(((vt0.c1)/(-375784759)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ORDER BY ((TYPEOF(vt0.c1))>(CAST(vt0.c0 AS INTEGER))) DESC, (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) ISNULL), (((NULL))=(((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((vt0.c1)/(-375784759)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c1))>(CAST(vt0.c0 AS INTEGER))) DESC, (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) ISNULL), (((NULL))==(((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c2)%(vt0.c2)))OR(((('1335618155')) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(CASE WHEN 'adiy\r\r' THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)%(vt0.c2)))OR(((('1335618155')) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(CASE WHEN 'adiy\r\r' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c2)%(vt0.c2)))OR(((('1335618155')) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(CASE WHEN 'adiy\r\r' THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)%(vt0.c2)))OR(((('1335618155')) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(CASE WHEN 'adiy\r\r' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c2)%(vt0.c2)))OR(((('1335618155')) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(CASE WHEN 'adiy\r\r' THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)/(((x'') BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((((vt0.c1)>=(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (vt0.c2)) DESC  NULLS LAST, CAST(vt0.c2 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)/(((x'') BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)>=(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (vt0.c2)) DESC  NULLS LAST, CAST(vt0.c2 AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)/(((x'') BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((((vt0.c1)>=(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (vt0.c2)) DESC  NULLS LAST, CAST(vt0.c2 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)/(((x'') BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)>=(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (vt0.c2)) DESC  NULLS LAST, CAST(vt0.c2 AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)/(((x'') BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((((vt0.c1)>=(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (vt0.c2)) DESC  NULLS LAST, CAST(vt0.c2 AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN vt0 ON x'' CROSS JOIN v0 ON ((CAST(rt1.c1 AS INTEGER)) ISNULL) INNER JOIN t0 ON ((((vt0.c2)<<(rt1.c0)))*(((v0.c0) IS TRUE))) WHERE (((((TYPEOF(DISTINCT rt1.c0))OR(SQLITE_COMPILEOPTION_GET(rt1.c1))))OR(((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT rt1.c0))OR(SQLITE_COMPILEOPTION_GET(rt1.c1))))OR(((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON x'' CROSS JOIN v0 ON ((CAST(rt1.c1 AS INTEGER)) ISNULL) INNER JOIN t0 ON ((((vt0.c2)<<(rt1.c0)))*(((v0.c0) IS TRUE))));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON x'' CROSS JOIN v0 ON ((CAST(rt1.c1 AS INTEGER)) ISNULL) INNER JOIN t0 ON ((((vt0.c2)<<(rt1.c0)))*(((v0.c0) IS TRUE))) WHERE (((((TYPEOF(DISTINCT rt1.c0))OR(SQLITE_COMPILEOPTION_GET(rt1.c1))))OR(((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT rt1.c0))OR(SQLITE_COMPILEOPTION_GET(rt1.c1))))OR(((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON x'' CROSS JOIN v0 ON ((CAST(rt1.c1 AS INTEGER)) ISNULL) INNER JOIN t0 ON ((((vt0.c2)<<(rt1.c0)))*(((v0.c0) IS TRUE))));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON x'' CROSS JOIN v0 ON ((CAST(rt1.c1 AS INTEGER)) ISNULL) INNER JOIN t0 ON ((((vt0.c2)<<(rt1.c0)))*(((v0.c0) IS TRUE))) WHERE (((((TYPEOF(DISTINCT rt1.c0))OR(SQLITE_COMPILEOPTION_GET(rt1.c1))))OR(((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2)))));
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN (v0.c0 IN ()) THEN ((v0.c0) IS TRUE) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 'X' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN (v0.c0 IN ()) THEN ((v0.c0) IS TRUE) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 'X' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN (v0.c0 IN ()) THEN ((v0.c0) IS TRUE) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 'X' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN (v0.c0 IN ()) THEN ((v0.c0) IS TRUE) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 'X' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN (v0.c0 IN ()) THEN ((v0.c0) IS TRUE) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 'X' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT ALL COUNT(*) FROM t0, rt60, rt1 WHERE (((x'') NOT BETWEEN (rt1.c2) AND (LIKE('-238340675', t0.c49)))) ORDER BY ((((x'9ad9')AND(rt1.c4 COLLATE NOCASE)))OR('TZ0n' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (rt1.c2) AND (LIKE('-238340675', t0.c49)))) IS TRUE)  as count FROM t0, rt60, rt1 ORDER BY ((((x'9ad9')AND(rt1.c4 COLLATE NOCASE)))OR('TZ0n' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt60, rt1 WHERE (((x'') NOT BETWEEN (rt1.c2) AND (LIKE('-238340675', t0.c49)))) ORDER BY ((((x'9ad9')AND(rt1.c4 COLLATE NOCASE)))OR('TZ0n' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (rt1.c2) AND (LIKE('-238340675', t0.c49)))) IS TRUE)  as count FROM t0, rt60, rt1 ORDER BY ((((x'9ad9')AND(rt1.c4 COLLATE NOCASE)))OR('TZ0n' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt60, rt1 WHERE (((x'') NOT BETWEEN (rt1.c2) AND (LIKE('-238340675', t0.c49)))) ORDER BY ((((x'9ad9')AND(rt1.c4 COLLATE NOCASE)))OR('TZ0n' COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, rt1, rt60 WHERE ((- (((rt1.c0)GLOB(0x697f71be)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)GLOB(0x697f71be))))) IS TRUE)  as count FROM vt0, rt1, rt60);
SELECT ALL COUNT(*) FROM vt0, rt1, rt60 WHERE ((- (((rt1.c0)GLOB(0x697f71be)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)GLOB(0x697f71be))))) IS TRUE)  as count FROM vt0, rt1, rt60);
SELECT ALL COUNT(*) FROM vt0, rt1, rt60 WHERE ((- (((rt1.c0)GLOB(0x697f71be)))));
SELECT * FROM rt60, vt0 RIGHT OUTER JOIN rt1 ON (((((t0.c32) BETWEEN (0.5761090600661584) AND (vt0.c2)), IFNULL(v0.c0, vt0.c0), (rt60.c0 IN (t0.c39))))!=(((rt60.c1 IN (rt1.c4)), (((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), ((((vt0.c1)OR(rt1.c2)))AND(rt1.c4))))) FULL OUTER JOIN v0 ON (- (rt1.c3)) CROSS JOIN t0 ON ((0.22062982229930073) ISNULL) WHERE (x'726b' COLLATE NOCASE) ORDER BY ((((0.60817685365141)GLOB(rt1.c4))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'726b' COLLATE NOCASE) IS TRUE)  as count FROM rt60, vt0 RIGHT OUTER JOIN rt1 ON (((((t0.c32) BETWEEN (0.5761090600661584) AND (vt0.c2)), IFNULL(v0.c0, vt0.c0), (rt60.c0 IN (t0.c39))))!=(((rt60.c1 IN (rt1.c4)), (((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), ((((vt0.c1)OR(rt1.c2)))AND(rt1.c4))))) FULL OUTER JOIN v0 ON (- (rt1.c3)) CROSS JOIN t0 ON ((0.22062982229930073) ISNULL) ORDER BY ((((0.60817685365141)GLOB(rt1.c4))) IS TRUE)  NULLS FIRST);
SELECT * FROM rt60, vt0 RIGHT OUTER JOIN rt1 ON (((((t0.c32) BETWEEN (0.5761090600661584) AND (vt0.c2)), IFNULL(v0.c0, vt0.c0), (rt60.c0 IN (t0.c39))))!=(((rt60.c1 IN (rt1.c4)), (((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), ((((vt0.c1)OR(rt1.c2)))AND(rt1.c4))))) FULL OUTER JOIN v0 ON (- (rt1.c3)) CROSS JOIN t0 ON ((0.22062982229930073) ISNULL) WHERE (x'726b' COLLATE NOCASE) ORDER BY ((((0.60817685365141)GLOB(rt1.c4))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'726b' COLLATE NOCASE) IS TRUE)  as count FROM rt60, vt0 RIGHT OUTER JOIN rt1 ON (((((t0.c32) BETWEEN (0.5761090600661584) AND (vt0.c2)), IFNULL(v0.c0, vt0.c0), (rt60.c0 IN (t0.c39))))!=(((rt60.c1 IN (rt1.c4)), (((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), ((((vt0.c1)OR(rt1.c2)))AND(rt1.c4))))) FULL OUTER JOIN v0 ON (- (rt1.c3)) CROSS JOIN t0 ON ((0.22062982229930073) ISNULL) ORDER BY ((((0.60817685365141)GLOB(rt1.c4))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 CROSS JOIN v0 ON CASE rt1.c2  WHEN ((rt1.c0) IS TRUE) THEN (v0.c0 IN ()) ELSE -1424283083 END WHERE (CASE rt1.c3  WHEN ((((v0.c0)AND(t0.c87)))OR(rt1.c3)) THEN ((((((((rt1.c0)OR(t0.c32)))AND(t0.c32)))AND(rt1.c0)))OR(v0.c0)) ELSE ((rt1.c1)&(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN ((((v0.c0)AND(t0.c87)))OR(rt1.c3)) THEN ((((((((rt1.c0)OR(t0.c32)))AND(t0.c32)))AND(rt1.c0)))OR(v0.c0)) ELSE ((rt1.c1)&(rt1.c0)) END) IS TRUE)  as count FROM t0, rt1 CROSS JOIN v0 ON CASE rt1.c2  WHEN ((rt1.c0) IS TRUE) THEN (v0.c0 IN ()) ELSE -1424283083 END);
SELECT COUNT(*) FROM t0, rt1 CROSS JOIN v0 ON CASE rt1.c2  WHEN ((rt1.c0) IS TRUE) THEN (v0.c0 IN ()) ELSE -1424283083 END WHERE (CASE rt1.c3  WHEN ((((v0.c0)AND(t0.c87)))OR(rt1.c3)) THEN ((((((((rt1.c0)OR(t0.c32)))AND(t0.c32)))AND(rt1.c0)))OR(v0.c0)) ELSE ((rt1.c1)&(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN ((((v0.c0)AND(t0.c87)))OR(rt1.c3)) THEN ((((((((rt1.c0)OR(t0.c32)))AND(t0.c32)))AND(rt1.c0)))OR(v0.c0)) ELSE ((rt1.c1)&(rt1.c0)) END) IS TRUE)  as count FROM t0, rt1 CROSS JOIN v0 ON CASE rt1.c2  WHEN ((rt1.c0) IS TRUE) THEN (v0.c0 IN ()) ELSE -1424283083 END);
SELECT COUNT(*) FROM t0, rt1 CROSS JOIN v0 ON CASE rt1.c2  WHEN ((rt1.c0) IS TRUE) THEN (v0.c0 IN ()) ELSE -1424283083 END WHERE (CASE rt1.c3  WHEN ((((v0.c0)AND(t0.c87)))OR(rt1.c3)) THEN ((((((((rt1.c0)OR(t0.c32)))AND(t0.c32)))AND(rt1.c0)))OR(v0.c0)) ELSE ((rt1.c1)&(rt1.c0)) END);
SELECT ALL * FROM v0, rt60, t0, rt1, vt0 WHERE (((CASE v0.c0  WHEN t0.c32 THEN t0.c49 ELSE t0.c39 END)GLOB(((((t0.c39)OR(rt60.c1)))AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN t0.c32 THEN t0.c49 ELSE t0.c39 END)GLOB(((((t0.c39)OR(rt60.c1)))AND(rt1.c4))))) IS TRUE)  as count FROM v0, rt60, t0, rt1, vt0);
SELECT ALL * FROM v0, rt60, t0, rt1, vt0 WHERE (((CASE v0.c0  WHEN t0.c32 THEN t0.c49 ELSE t0.c39 END)GLOB(((((t0.c39)OR(rt60.c1)))AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN t0.c32 THEN t0.c49 ELSE t0.c39 END)GLOB(((((t0.c39)OR(rt60.c1)))AND(rt1.c4))))) IS TRUE)  as count FROM v0, rt60, t0, rt1, vt0);
SELECT ALL * FROM v0, rt60, t0, rt1, vt0 WHERE (((CASE v0.c0  WHEN t0.c32 THEN t0.c49 ELSE t0.c39 END)GLOB(((((t0.c39)OR(rt60.c1)))AND(rt1.c4)))));
SELECT COUNT(*) FROM v0, vt0, t0, rt60, rt1 WHERE (((((((rt60.c2)AND(vt0.c2)))OR(rt60.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt60.c2)AND(vt0.c2)))OR(rt60.c1))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, t0, rt60, rt1);
SELECT COUNT(*) FROM v0, vt0, t0, rt60, rt1 WHERE (((((((rt60.c2)AND(vt0.c2)))OR(rt60.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt60.c2)AND(vt0.c2)))OR(rt60.c1))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, t0, rt60, rt1);
SELECT COUNT(*) FROM v0, vt0, t0, rt60, rt1 WHERE (((((((rt60.c2)AND(vt0.c2)))OR(rt60.c1))) IS TRUE));
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) IS TRUE));
SELECT * FROM t0, rt1 WHERE (CAST(((t0.c49)GLOB(rt1.c1)) AS REAL)) ORDER BY (rt1.c1 IN ()) COLLATE RTRIM  NULLS FIRST, ((CASE t0.c39  WHEN rt1.c1 THEN t0.c32 WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE rt1.c3 END)/(((rt1.c1)>(x'7a77')))) DESC, ((((((((rt1.c0)AND(t0.c87)))AND(t0.c32)))OR(((((t0.c49)OR(rt1.c0)))OR(-2015548930)))))AND((~ (rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c49)GLOB(rt1.c1)) AS REAL)) IS TRUE)  as count FROM t0, rt1 ORDER BY (rt1.c1 IN ()) COLLATE RTRIM  NULLS FIRST, ((CASE t0.c39  WHEN rt1.c1 THEN t0.c32 WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE rt1.c3 END)/(((rt1.c1)>(x'7a77')))) DESC, ((((((((rt1.c0)AND(t0.c87)))AND(t0.c32)))OR(((((t0.c49)OR(rt1.c0)))OR(-2015548930)))))AND((~ (rt1.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, rt1 WHERE (CAST(((t0.c49)GLOB(rt1.c1)) AS REAL)) ORDER BY (rt1.c1 IN ()) COLLATE RTRIM  NULLS FIRST, ((CASE t0.c39  WHEN rt1.c1 THEN t0.c32 WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE rt1.c3 END)/(((rt1.c1)>(x'7a77')))) DESC, ((((((((rt1.c0)AND(t0.c87)))AND(t0.c32)))OR(((((t0.c49)OR(rt1.c0)))OR(-2015548930)))))AND((~ (rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c49)GLOB(rt1.c1)) AS REAL)) IS TRUE)  as count FROM t0, rt1 ORDER BY (rt1.c1 IN ()) COLLATE RTRIM  NULLS FIRST, ((CASE t0.c39  WHEN rt1.c1 THEN t0.c32 WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE rt1.c3 END)/(((rt1.c1)>(x'7a77')))) DESC, ((((((((rt1.c0)AND(t0.c87)))AND(t0.c32)))OR(((((t0.c49)OR(rt1.c0)))OR(-2015548930)))))AND((~ (rt1.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, rt1 WHERE (CAST(((t0.c49)GLOB(rt1.c1)) AS REAL)) ORDER BY (rt1.c1 IN ()) COLLATE RTRIM  NULLS FIRST, ((CASE t0.c39  WHEN rt1.c1 THEN t0.c32 WHEN t0.c39 THEN t0.c87 WHEN t0.c87 THEN t0.c32 ELSE rt1.c3 END)/(((rt1.c1)>(x'7a77')))) DESC, ((((((((rt1.c0)AND(t0.c87)))AND(t0.c32)))OR(((((t0.c49)OR(rt1.c0)))OR(-2015548930)))))AND((~ (rt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON ((rtreenode(vt0.c2, rt1.c0))-(rt1.c1 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((vt0.c1) IS FALSE)) ISNULL) WHERE (((((rt1.c2)<=(rt1.c0)))||(t0.c49 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(rt1.c0)))||(t0.c49 COLLATE BINARY))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((rtreenode(vt0.c2, rt1.c0))-(rt1.c1 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((vt0.c1) IS FALSE)) ISNULL));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON ((rtreenode(vt0.c2, rt1.c0))-(rt1.c1 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((vt0.c1) IS FALSE)) ISNULL) WHERE (((((rt1.c2)<=(rt1.c0)))||(t0.c49 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(rt1.c0)))||(t0.c49 COLLATE BINARY))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((rtreenode(vt0.c2, rt1.c0))-(rt1.c1 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((vt0.c1) IS FALSE)) ISNULL));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON ((rtreenode(vt0.c2, rt1.c0))-(rt1.c1 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((vt0.c1) IS FALSE)) ISNULL) WHERE (((((rt1.c2)<=(rt1.c0)))||(t0.c49 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1, rt60, t0, vt0, v0 WHERE (((t0.c39) BETWEEN (((vt0.c1)&(vt0.c2))) AND (CASE rt1.c2  WHEN rt1.c4 THEN t0.c49 END))) ORDER BY CASE WHEN (rt60.c2 IN ()) THEN vt0.c2 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c39) BETWEEN (((vt0.c1)&(vt0.c2))) AND (CASE rt1.c2  WHEN rt1.c4 THEN t0.c49 END))) IS TRUE)  as count FROM rt1, rt60, t0, vt0, v0 ORDER BY CASE WHEN (rt60.c2 IN ()) THEN vt0.c2 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt60, t0, vt0, v0 WHERE (((t0.c39) BETWEEN (((vt0.c1)&(vt0.c2))) AND (CASE rt1.c2  WHEN rt1.c4 THEN t0.c49 END))) ORDER BY CASE WHEN (rt60.c2 IN ()) THEN vt0.c2 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c39) BETWEEN (((vt0.c1)&(vt0.c2))) AND (CASE rt1.c2  WHEN rt1.c4 THEN t0.c49 END))) IS TRUE)  as count FROM rt1, rt60, t0, vt0, v0 ORDER BY CASE WHEN (rt60.c2 IN ()) THEN vt0.c2 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt60, t0, vt0, v0 WHERE (((t0.c39) BETWEEN (((vt0.c1)&(vt0.c2))) AND (CASE rt1.c2  WHEN rt1.c4 THEN t0.c49 END))) ORDER BY CASE WHEN (rt60.c2 IN ()) THEN vt0.c2 END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt60, vt0, rt1, v0 WHERE ((((- (rt1.c1))) NOT BETWEEN ((~ (rt60.c0))) AND (((((rt1.c3)OR(rt60.c0)))AND(rt1.c4))))) ORDER BY (NOT (3.17936615E8)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1))) NOT BETWEEN ((~ (rt60.c0))) AND (((((rt1.c3)OR(rt60.c0)))AND(rt1.c4))))) IS TRUE)  as count FROM t0, rt60, vt0, rt1, v0 ORDER BY (NOT (3.17936615E8)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt60, vt0, rt1, v0 WHERE ((((- (rt1.c1))) NOT BETWEEN ((~ (rt60.c0))) AND (((((rt1.c3)OR(rt60.c0)))AND(rt1.c4))))) ORDER BY (NOT (3.17936615E8)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1))) NOT BETWEEN ((~ (rt60.c0))) AND (((((rt1.c3)OR(rt60.c0)))AND(rt1.c4))))) IS TRUE)  as count FROM t0, rt60, vt0, rt1, v0 ORDER BY (NOT (3.17936615E8)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt60, vt0, rt1, v0 WHERE ((((- (rt1.c1))) NOT BETWEEN ((~ (rt60.c0))) AND (((((rt1.c3)OR(rt60.c0)))AND(rt1.c4))))) ORDER BY (NOT (3.17936615E8)) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt60, rt1, vt0, v0 WHERE ((((t0.c39)<(rt1.c0)) IN ())) ORDER BY (((0.3874168050818517) NOT BETWEEN (rt60.c0) AND (t0.c87)) IN (CASE t0.c87  WHEN v0.c0 THEN vt0.c0 ELSE rt1.c1 END))  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c39)<(rt1.c0)) IN ())) IS TRUE)  as count FROM t0, rt60, rt1, vt0, v0 ORDER BY (((0.3874168050818517) NOT BETWEEN (rt60.c0) AND (t0.c87)) IN (CASE t0.c87  WHEN v0.c0 THEN vt0.c0 ELSE rt1.c1 END))  NULLS LAST, x''  NULLS LAST);
SELECT ALL * FROM t0, rt60, rt1, vt0, v0 WHERE ((((t0.c39)<(rt1.c0)) IN ())) ORDER BY (((0.3874168050818517) NOT BETWEEN (rt60.c0) AND (t0.c87)) IN (CASE t0.c87  WHEN v0.c0 THEN vt0.c0 ELSE rt1.c1 END))  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c39)<(rt1.c0)) IN ())) IS TRUE)  as count FROM t0, rt60, rt1, vt0, v0 ORDER BY (((0.3874168050818517) NOT BETWEEN (rt60.c0) AND (t0.c87)) IN (CASE t0.c87  WHEN v0.c0 THEN vt0.c0 ELSE rt1.c1 END))  NULLS LAST, x''  NULLS LAST);
SELECT ALL * FROM t0, rt60, rt1, vt0, v0 WHERE ((((t0.c39)<(rt1.c0)) IN ())) ORDER BY (((0.3874168050818517) NOT BETWEEN (rt60.c0) AND (t0.c87)) IN (CASE t0.c87  WHEN v0.c0 THEN vt0.c0 ELSE rt1.c1 END))  NULLS LAST, x''  NULLS LAST;
SELECT COUNT(*) FROM rt60, rt1, v0, t0, vt0 WHERE (CAST((((rt60.c2))<=((rt1.c1))) AS TEXT)) ORDER BY ((((COALESCE(t0.c39, rt1.c2, rt1.c1, rt1.c2))OR(((0.47778622873685095) IS FALSE))))AND(((((((((t0.c39)OR(rt60.c1)))OR(rt1.c3)))AND(rt60.c1)))AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt60.c2))<=((rt1.c1))) AS TEXT)) IS TRUE)  as count FROM rt60, rt1, v0, t0, vt0 ORDER BY ((((COALESCE(t0.c39, rt1.c2, rt1.c1, rt1.c2))OR(((0.47778622873685095) IS FALSE))))AND(((((((((t0.c39)OR(rt60.c1)))OR(rt1.c3)))AND(rt60.c1)))AND(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt60, rt1, v0, t0, vt0 WHERE (CAST((((rt60.c2))<=((rt1.c1))) AS TEXT)) ORDER BY ((((COALESCE(t0.c39, rt1.c2, rt1.c1, rt1.c2))OR(((0.47778622873685095) IS FALSE))))AND(((((((((t0.c39)OR(rt60.c1)))OR(rt1.c3)))AND(rt60.c1)))AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt60.c2))<=((rt1.c1))) AS TEXT)) IS TRUE)  as count FROM rt60, rt1, v0, t0, vt0 ORDER BY ((((COALESCE(t0.c39, rt1.c2, rt1.c1, rt1.c2))OR(((0.47778622873685095) IS FALSE))))AND(((((((((t0.c39)OR(rt60.c1)))OR(rt1.c3)))AND(rt60.c1)))AND(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt60, rt1, v0, t0, vt0 WHERE (CAST((((rt60.c2))<=((rt1.c1))) AS TEXT)) ORDER BY ((((COALESCE(t0.c39, rt1.c2, rt1.c1, rt1.c2))OR(((0.47778622873685095) IS FALSE))))AND(((((((((t0.c39)OR(rt60.c1)))OR(rt1.c3)))AND(rt60.c1)))AND(rt1.c2))))  NULLS FIRST;
SELECT ALL * FROM rt60, vt0 INNER JOIN t0 ON ((rt60.c1) IS FALSE) WHERE (LIKELY(vt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt60, vt0 INNER JOIN t0 ON ((rt60.c1) IS FALSE));
SELECT ALL * FROM rt60, vt0 INNER JOIN t0 ON ((rt60.c1) IS FALSE) WHERE (LIKELY(vt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt60, vt0 INNER JOIN t0 ON ((rt60.c1) IS FALSE));
SELECT ALL * FROM rt60, vt0 INNER JOIN t0 ON ((rt60.c1) IS FALSE) WHERE (LIKELY(vt0.c2 COLLATE RTRIM));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt60 ON 0.6736371659030284 INNER JOIN vt0 ON CAST((((vt0.c2))<=((vt0.c1))) AS TEXT) WHERE ((~ (((((vt0.c2)AND('')))AND(x'')))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c2)AND('')))AND(x''))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt60 ON 0.6736371659030284 INNER JOIN vt0 ON CAST((((vt0.c2))<=((vt0.c1))) AS TEXT));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt60 ON 0.6736371659030284 INNER JOIN vt0 ON CAST((((vt0.c2))<=((vt0.c1))) AS TEXT) WHERE ((~ (((((vt0.c2)AND('')))AND(x'')))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c2)AND('')))AND(x''))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt60 ON 0.6736371659030284 INNER JOIN vt0 ON CAST((((vt0.c2))<=((vt0.c1))) AS TEXT));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt60 ON 0.6736371659030284 INNER JOIN vt0 ON CAST((((vt0.c2))<=((vt0.c1))) AS TEXT) WHERE ((~ (((((vt0.c2)AND('')))AND(x'')))));
SELECT ALL COUNT(*) FROM vt0, rt1, t0, v0 WHERE (((((GLOB(rt1.c3, t0.c32))AND(((t0.c87)/(t0.c32)))))AND((((rt1.c2))=((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((GLOB(rt1.c3, t0.c32))AND(((t0.c87)/(t0.c32)))))AND((((rt1.c2))==((rt1.c3)))))) IS TRUE)  as count FROM vt0, rt1, t0, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0, v0 WHERE (((((GLOB(rt1.c3, t0.c32))AND(((t0.c87)/(t0.c32)))))AND((((rt1.c2))=((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((GLOB(rt1.c3, t0.c32))AND(((t0.c87)/(t0.c32)))))AND((((rt1.c2))==((rt1.c3)))))) IS TRUE)  as count FROM vt0, rt1, t0, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0, v0 WHERE (((((GLOB(rt1.c3, t0.c32))AND(((t0.c87)/(t0.c32)))))AND((((rt1.c2))=((rt1.c3))))));
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0 WHERE (CASE WHEN ((rt1.c3) NOT NULL) THEN CAST(t0.c49 AS NUMERIC) WHEN rt1.c2 THEN (t0.c32 IN ()) WHEN rt1.c0 COLLATE NOCASE THEN LOWER(t0.c32) END) ORDER BY (CAST(t0.c32 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3) NOT NULL) THEN CAST(t0.c49 AS NUMERIC) WHEN rt1.c2 THEN (t0.c32 IN ()) WHEN rt1.c0 COLLATE NOCASE THEN LOWER(t0.c32) END) IS TRUE)  as count FROM rt1, vt0, v0, t0 ORDER BY (CAST(t0.c32 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0 WHERE (CASE WHEN ((rt1.c3) NOT NULL) THEN CAST(t0.c49 AS NUMERIC) WHEN rt1.c2 THEN (t0.c32 IN ()) WHEN rt1.c0 COLLATE NOCASE THEN LOWER(t0.c32) END) ORDER BY (CAST(t0.c32 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3) NOT NULL) THEN CAST(t0.c49 AS NUMERIC) WHEN rt1.c2 THEN (t0.c32 IN ()) WHEN rt1.c0 COLLATE NOCASE THEN LOWER(t0.c32) END) IS TRUE)  as count FROM rt1, vt0, v0, t0 ORDER BY (CAST(t0.c32 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0 WHERE (CASE WHEN ((rt1.c3) NOT NULL) THEN CAST(t0.c49 AS NUMERIC) WHEN rt1.c2 THEN (t0.c32 IN ()) WHEN rt1.c0 COLLATE NOCASE THEN LOWER(t0.c32) END) ORDER BY (CAST(t0.c32 AS NUMERIC) IN ());
SELECT COUNT(*) FROM rt60, t0, v0, rt1, vt0 WHERE ((((((rt1.c3))>((vt0.c2))))>>(((t0.c32)|(t0.c39)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3))>((vt0.c2))))>>(((t0.c32)|(t0.c39))))) IS TRUE)  as count FROM rt60, t0, v0, rt1, vt0);
SELECT COUNT(*) FROM rt60, t0, v0, rt1, vt0 WHERE ((((((rt1.c3))>((vt0.c2))))>>(((t0.c32)|(t0.c39)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3))>((vt0.c2))))>>(((t0.c32)|(t0.c39))))) IS TRUE)  as count FROM rt60, t0, v0, rt1, vt0);
SELECT COUNT(*) FROM rt60, t0, v0, rt1, vt0 WHERE ((((((rt1.c3))>((vt0.c2))))>>(((t0.c32)|(t0.c39)))));
SELECT COUNT(*) FROM rt60, v0 CROSS JOIN t0 ON HEX(DISTINCT t0.c32 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON json_array_length(((t0.c32)%(t0.c32)), CASE WHEN rt60.c0 THEN vt0.c0 END) WHERE (((((t0.c87) BETWEEN (v0.c0) AND (t0.c87)))<>(CAST(t0.c49 AS TEXT)))) ORDER BY ((rt60.c2)*(v0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c87) BETWEEN (v0.c0) AND (t0.c87)))<>(CAST(t0.c49 AS TEXT)))) IS TRUE)  as count FROM rt60, v0 CROSS JOIN t0 ON HEX(DISTINCT t0.c32 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON json_array_length(((t0.c32)%(t0.c32)), CASE WHEN rt60.c0 THEN vt0.c0 END) ORDER BY ((rt60.c2)*(v0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt60, v0 CROSS JOIN t0 ON HEX(DISTINCT t0.c32 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON json_array_length(((t0.c32)%(t0.c32)), CASE WHEN rt60.c0 THEN vt0.c0 END) WHERE (((((t0.c87) BETWEEN (v0.c0) AND (t0.c87)))<>(CAST(t0.c49 AS TEXT)))) ORDER BY ((rt60.c2)*(v0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c87) BETWEEN (v0.c0) AND (t0.c87)))<>(CAST(t0.c49 AS TEXT)))) IS TRUE)  as count FROM rt60, v0 CROSS JOIN t0 ON HEX(DISTINCT t0.c32 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON json_array_length(((t0.c32)%(t0.c32)), CASE WHEN rt60.c0 THEN vt0.c0 END) ORDER BY ((rt60.c2)*(v0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt60, v0 CROSS JOIN t0 ON HEX(DISTINCT t0.c32 COLLATE RTRIM) LEFT OUTER JOIN vt0 ON json_array_length(((t0.c32)%(t0.c32)), CASE WHEN rt60.c0 THEN vt0.c0 END) WHERE (((((t0.c87) BETWEEN (v0.c0) AND (t0.c87)))<>(CAST(t0.c49 AS TEXT)))) ORDER BY ((rt60.c2)*(v0.c0)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM v0, rt60, rt1, t0 WHERE ((((x'')IS NOT(t0.c49)) IN (((t0.c32)-(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')IS NOT(t0.c49)) IN (((t0.c32)-(rt1.c3))))) IS TRUE)  as count FROM v0, rt60, rt1, t0);
SELECT COUNT(*) FROM v0, rt60, rt1, t0 WHERE ((((x'')IS NOT(t0.c49)) IN (((t0.c32)-(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')IS NOT(t0.c49)) IN (((t0.c32)-(rt1.c3))))) IS TRUE)  as count FROM v0, rt60, rt1, t0);
SELECT COUNT(*) FROM v0, rt60, rt1, t0 WHERE ((((x'')IS NOT(t0.c49)) IN (((t0.c32)-(rt1.c3)))));
SELECT COUNT(*) FROM rt1, vt0, v0, rt60, t0 WHERE ((- (((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TRIM(DISTINCT v0.c0, v0.c0))), CASE WHEN CASE t0.c49  WHEN rt60.c2 THEN rt1.c1 END THEN ((t0.c32) IS FALSE) ELSE ((((rt60.c1)OR(rt1.c1)))AND(rt1.c0)) END DESC, ((((rt1.c0 COLLATE NOCASE)OR((NOT (t0.c49)))))OR((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, vt0, v0, rt60, t0 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TRIM(DISTINCT v0.c0, v0.c0))), CASE WHEN CASE t0.c49  WHEN rt60.c2 THEN rt1.c1 END THEN ((t0.c32) IS FALSE) ELSE ((((rt60.c1)OR(rt1.c1)))AND(rt1.c0)) END DESC, ((((rt1.c0 COLLATE NOCASE)OR((NOT (t0.c49)))))OR((rt1.c2 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, v0, rt60, t0 WHERE ((- (((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TRIM(DISTINCT v0.c0, v0.c0))), CASE WHEN CASE t0.c49  WHEN rt60.c2 THEN rt1.c1 END THEN ((t0.c32) IS FALSE) ELSE ((((rt60.c1)OR(rt1.c1)))AND(rt1.c0)) END DESC, ((((rt1.c0 COLLATE NOCASE)OR((NOT (t0.c49)))))OR((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, vt0, v0, rt60, t0 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TRIM(DISTINCT v0.c0, v0.c0))), CASE WHEN CASE t0.c49  WHEN rt60.c2 THEN rt1.c1 END THEN ((t0.c32) IS FALSE) ELSE ((((rt60.c1)OR(rt1.c1)))AND(rt1.c0)) END DESC, ((((rt1.c0 COLLATE NOCASE)OR((NOT (t0.c49)))))OR((rt1.c2 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, v0, rt60, t0 WHERE ((- (((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TRIM(DISTINCT v0.c0, v0.c0))), CASE WHEN CASE t0.c49  WHEN rt60.c2 THEN rt1.c1 END THEN ((t0.c32) IS FALSE) ELSE ((((rt60.c1)OR(rt1.c1)))AND(rt1.c0)) END DESC, ((((rt1.c0 COLLATE NOCASE)OR((NOT (t0.c49)))))OR((rt1.c2 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c49)) COLLATE BINARY) ORDER BY ((((((t0.c32)OR(t0.c87)))AND(t0.c87)))/(CASE t0.c39  WHEN t0.c39 THEN 'Bt}oy}' WHEN t0.c39 THEN t0.c39 WHEN t0.c32 THEN t0.c39 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c49)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c32)OR(t0.c87)))AND(t0.c87)))/(CASE t0.c39  WHEN t0.c39 THEN 'Bt}oy}' WHEN t0.c39 THEN t0.c39 WHEN t0.c32 THEN t0.c39 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c49)) COLLATE BINARY) ORDER BY ((((((t0.c32)OR(t0.c87)))AND(t0.c87)))/(CASE t0.c39  WHEN t0.c39 THEN 'Bt}oy}' WHEN t0.c39 THEN t0.c39 WHEN t0.c32 THEN t0.c39 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c49)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c32)OR(t0.c87)))AND(t0.c87)))/(CASE t0.c39  WHEN t0.c39 THEN 'Bt}oy}' WHEN t0.c39 THEN t0.c39 WHEN t0.c32 THEN t0.c39 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c49)) COLLATE BINARY) ORDER BY ((((((t0.c32)OR(t0.c87)))AND(t0.c87)))/(CASE t0.c39  WHEN t0.c39 THEN 'Bt}oy}' WHEN t0.c39 THEN t0.c39 WHEN t0.c32 THEN t0.c39 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END)))AND(((rt1.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END)))AND(((rt1.c2) NOTNULL))));
SELECT COUNT(*) FROM rt1 WHERE ((~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END)))AND(((rt1.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END)))AND(((rt1.c2) NOTNULL))));
SELECT COUNT(*) FROM rt1 WHERE ((~ (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END)))AND(((rt1.c2) NOTNULL)));
SELECT COUNT(*) FROM vt0, rt1, v0, rt60, t0 WHERE (((((rt60.c1)<(rt60.c0)))-(t0.c87))) ORDER BY (((t0.c87 COLLATE NOCASE))>=((NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt60.c1)<(rt60.c0)))-(t0.c87))) IS TRUE)  as count FROM vt0, rt1, v0, rt60, t0 ORDER BY (((t0.c87 COLLATE NOCASE))>=((NULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, v0, rt60, t0 WHERE (((((rt60.c1)<(rt60.c0)))-(t0.c87))) ORDER BY (((t0.c87 COLLATE NOCASE))>=((NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt60.c1)<(rt60.c0)))-(t0.c87))) IS TRUE)  as count FROM vt0, rt1, v0, rt60, t0 ORDER BY (((t0.c87 COLLATE NOCASE))>=((NULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, v0, rt60, t0 WHERE (((((rt60.c1)<(rt60.c0)))-(t0.c87))) ORDER BY (((t0.c87 COLLATE NOCASE))>=((NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt60 CROSS JOIN v0 ON (((t0.c49, rt1.c3, rt1.c4)) NOT BETWEEN ((((((t0.c49)OR(rt60.c1)))OR(rt1.c4)), ((('1270541930'))>=((-699514563))), CASE WHEN t0.c32 THEN NULL ELSE rt1.c1 END)) AND ((((((rt1.c0)OR(t0.c49)))AND(rt60.c2)), (rt60.c0 IN ()), ((((rt1.c1)AND(NULL)))AND(vt0.c1))))) RIGHT OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS NUMERIC) WHERE (((CASE WHEN vt0.c1 THEN rt60.c1 WHEN vt0.c1 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c1 END)IS NOT(((rt1.c0)AND(t0.c49))))) ORDER BY t0.c39;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN rt60.c1 WHEN vt0.c1 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c1 END)IS NOT(((rt1.c0)AND(t0.c49))))) IS TRUE)  as count FROM vt0, t0, rt60 CROSS JOIN v0 ON (((t0.c49, rt1.c3, rt1.c4)) NOT BETWEEN ((((((t0.c49)OR(rt60.c1)))OR(rt1.c4)), ((('1270541930'))>=((-699514563))), CASE WHEN t0.c32 THEN NULL ELSE rt1.c1 END)) AND ((((((rt1.c0)OR(t0.c49)))AND(rt60.c2)), (rt60.c0 IN ()), ((((rt1.c1)AND(NULL)))AND(vt0.c1))))) RIGHT OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS NUMERIC) ORDER BY t0.c39);
SELECT ALL COUNT(*) FROM vt0, t0, rt60 CROSS JOIN v0 ON (((t0.c49, rt1.c3, rt1.c4)) NOT BETWEEN ((((((t0.c49)OR(rt60.c1)))OR(rt1.c4)), ((('1270541930'))>=((-699514563))), CASE WHEN t0.c32 THEN NULL ELSE rt1.c1 END)) AND ((((((rt1.c0)OR(t0.c49)))AND(rt60.c2)), (rt60.c0 IN ()), ((((rt1.c1)AND(NULL)))AND(vt0.c1))))) RIGHT OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS NUMERIC) WHERE (((CASE WHEN vt0.c1 THEN rt60.c1 WHEN vt0.c1 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c1 END)IS NOT(((rt1.c0)AND(t0.c49))))) ORDER BY t0.c39;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN rt60.c1 WHEN vt0.c1 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c1 END)IS NOT(((rt1.c0)AND(t0.c49))))) IS TRUE)  as count FROM vt0, t0, rt60 CROSS JOIN v0 ON (((t0.c49, rt1.c3, rt1.c4)) NOT BETWEEN ((((((t0.c49)OR(rt60.c1)))OR(rt1.c4)), ((('1270541930'))>=((-699514563))), CASE WHEN t0.c32 THEN NULL ELSE rt1.c1 END)) AND ((((((rt1.c0)OR(t0.c49)))AND(rt60.c2)), (rt60.c0 IN ()), ((((rt1.c1)AND(NULL)))AND(vt0.c1))))) RIGHT OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS NUMERIC) ORDER BY t0.c39);
SELECT * FROM vt0 INNER JOIN v0 ON json_array((((rt1.c1, vt0.c2, rt1.c3)) BETWEEN ((t0.c32, rt1.c2, rt1.c2)) AND ((-1424283083, x'', v0.c0))), t0.c87 COLLATE BINARY) FULL OUTER JOIN rt1 ON (((rt1.c3)) BETWEEN ((DATETIME(vt0.c1, t0.c32, t0.c32))) AND ((((t0.c87) BETWEEN (rt1.c4) AND (t0.c87))))) LEFT OUTER JOIN t0 ON ((((((rt1.c2)OR(t0.c39)))OR(vt0.c2))) IS FALSE) WHERE ((~ (vt0.c2)) COLLATE NOCASE) ORDER BY (- (CASE vt0.c1  WHEN rt1.c3 THEN 0xffffffff8687ff06 WHEN v0.c0 THEN t0.c32 WHEN vt0.c0 THEN rt1.c2 WHEN t0.c49 THEN t0.c87 WHEN t0.c39 THEN t0.c32 WHEN rt1.c1 THEN t0.c49 WHEN vt0.c0 THEN t0.c32 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON json_array((((rt1.c1, vt0.c2, rt1.c3)) BETWEEN ((t0.c32, rt1.c2, rt1.c2)) AND ((-1424283083, x'', v0.c0))), t0.c87 COLLATE BINARY) FULL OUTER JOIN rt1 ON (((rt1.c3)) BETWEEN ((DATETIME(vt0.c1, t0.c32, t0.c32))) AND ((((t0.c87) BETWEEN (rt1.c4) AND (t0.c87))))) LEFT OUTER JOIN t0 ON ((((((rt1.c2)OR(t0.c39)))OR(vt0.c2))) IS FALSE) ORDER BY (- (CASE vt0.c1  WHEN rt1.c3 THEN 0xffffffff8687ff06 WHEN v0.c0 THEN t0.c32 WHEN vt0.c0 THEN rt1.c2 WHEN t0.c49 THEN t0.c87 WHEN t0.c39 THEN t0.c32 WHEN rt1.c1 THEN t0.c49 WHEN vt0.c0 THEN t0.c32 END))  NULLS LAST);
SELECT * FROM vt0 INNER JOIN v0 ON json_array((((rt1.c1, vt0.c2, rt1.c3)) BETWEEN ((t0.c32, rt1.c2, rt1.c2)) AND ((-1424283083, x'', v0.c0))), t0.c87 COLLATE BINARY) FULL OUTER JOIN rt1 ON (((rt1.c3)) BETWEEN ((DATETIME(vt0.c1, t0.c32, t0.c32))) AND ((((t0.c87) BETWEEN (rt1.c4) AND (t0.c87))))) LEFT OUTER JOIN t0 ON ((((((rt1.c2)OR(t0.c39)))OR(vt0.c2))) IS FALSE) WHERE ((~ (vt0.c2)) COLLATE NOCASE) ORDER BY (- (CASE vt0.c1  WHEN rt1.c3 THEN 0xffffffff8687ff06 WHEN v0.c0 THEN t0.c32 WHEN vt0.c0 THEN rt1.c2 WHEN t0.c49 THEN t0.c87 WHEN t0.c39 THEN t0.c32 WHEN rt1.c1 THEN t0.c49 WHEN vt0.c0 THEN t0.c32 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON json_array((((rt1.c1, vt0.c2, rt1.c3)) BETWEEN ((t0.c32, rt1.c2, rt1.c2)) AND ((-1424283083, x'', v0.c0))), t0.c87 COLLATE BINARY) FULL OUTER JOIN rt1 ON (((rt1.c3)) BETWEEN ((DATETIME(vt0.c1, t0.c32, t0.c32))) AND ((((t0.c87) BETWEEN (rt1.c4) AND (t0.c87))))) LEFT OUTER JOIN t0 ON ((((((rt1.c2)OR(t0.c39)))OR(vt0.c2))) IS FALSE) ORDER BY (- (CASE vt0.c1  WHEN rt1.c3 THEN 0xffffffff8687ff06 WHEN v0.c0 THEN t0.c32 WHEN vt0.c0 THEN rt1.c2 WHEN t0.c49 THEN t0.c87 WHEN t0.c39 THEN t0.c32 WHEN rt1.c1 THEN t0.c49 WHEN vt0.c0 THEN t0.c32 END))  NULLS LAST);
SELECT COUNT(*) FROM rt60, vt0, t0 CROSS JOIN v0 ON (((vt0.c2)) BETWEEN ((((rt60.c0) IS FALSE))) AND ((CASE '^?'  WHEN vt0.c0 THEN vt0.c1 ELSE -166094377 END))) WHERE (t0.c32) ORDER BY ((t0.c49) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM rt60, vt0, t0 CROSS JOIN v0 ON (((vt0.c2)) BETWEEN ((((rt60.c0) IS FALSE))) AND ((CASE '^?'  WHEN vt0.c0 THEN vt0.c1 ELSE -166094377 END))) ORDER BY ((t0.c49) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt60, vt0, t0 CROSS JOIN v0 ON (((vt0.c2)) BETWEEN ((((rt60.c0) IS FALSE))) AND ((CASE '^?'  WHEN vt0.c0 THEN vt0.c1 ELSE -166094377 END))) WHERE (t0.c32) ORDER BY ((t0.c49) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM rt60, vt0, t0 CROSS JOIN v0 ON (((vt0.c2)) BETWEEN ((((rt60.c0) IS FALSE))) AND ((CASE '^?'  WHEN vt0.c0 THEN vt0.c1 ELSE -166094377 END))) ORDER BY ((t0.c49) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt60, vt0, t0 CROSS JOIN v0 ON (((vt0.c2)) BETWEEN ((((rt60.c0) IS FALSE))) AND ((CASE '^?'  WHEN vt0.c0 THEN vt0.c1 ELSE -166094377 END))) WHERE (t0.c32) ORDER BY ((t0.c49) IS TRUE) DESC  NULLS LAST;
SELECT * FROM t0, rt60 RIGHT OUTER JOIN v0 ON CAST(CAST(rt60.c2 AS INTEGER) AS BLOB) WHERE (CAST(((rt60.c2) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt60.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM t0, rt60 RIGHT OUTER JOIN v0 ON CAST(CAST(rt60.c2 AS INTEGER) AS BLOB));
SELECT * FROM t0, rt60 RIGHT OUTER JOIN v0 ON CAST(CAST(rt60.c2 AS INTEGER) AS BLOB) WHERE (CAST(((rt60.c2) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt60.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM t0, rt60 RIGHT OUTER JOIN v0 ON CAST(CAST(rt60.c2 AS INTEGER) AS BLOB));
SELECT * FROM t0, rt60 RIGHT OUTER JOIN v0 ON CAST(CAST(rt60.c2 AS INTEGER) AS BLOB) WHERE (CAST(((rt60.c2) IS TRUE) AS TEXT));
SELECT ALL COUNT(*) FROM rt60, vt0, rt1, v0 WHERE ((((HEX(DISTINCT rt1.c2)))<=((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(DISTINCT rt1.c2)))<=((NULL)))) IS TRUE)  as count FROM rt60, vt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt60, vt0, rt1, v0 WHERE ((((HEX(DISTINCT rt1.c2)))<=((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(DISTINCT rt1.c2)))<=((NULL)))) IS TRUE)  as count FROM rt60, vt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt60, vt0, rt1, v0 WHERE ((((HEX(DISTINCT rt1.c2)))<=((NULL))));
SELECT ALL COUNT(*) FROM rt60, vt0, rt1, t0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((t0.c32)) AND ((rt1.c0))))IS(((rt1.c3)<<(t0.c49)))) WHERE (((((rt1.c3)OR(t0.c49)))AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)OR(t0.c49)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt60, vt0, rt1, t0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((t0.c32)) AND ((rt1.c0))))IS(((rt1.c3)<<(t0.c49)))));
SELECT ALL COUNT(*) FROM rt60, vt0, rt1, t0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((t0.c32)) AND ((rt1.c0))))IS(((rt1.c3)<<(t0.c49)))) WHERE (((((rt1.c3)OR(t0.c49)))AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)OR(t0.c49)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt60, vt0, rt1, t0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((t0.c32)) AND ((rt1.c0))))IS(((rt1.c3)<<(t0.c49)))));
SELECT ALL COUNT(*) FROM rt60, vt0, rt1, t0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((t0.c32)) AND ((rt1.c0))))IS(((rt1.c3)<<(t0.c49)))) WHERE (((((rt1.c3)OR(t0.c49)))AND(vt0.c0)) COLLATE BINARY);
SELECT * FROM rt60, v0 WHERE ((((((((rt60.c1, v0.c0, v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c2, v0.c0, rt60.c2, rt60.c2, rt60.c0)) AND ((rt60.c2, x'6b04', rt60.c2, rt60.c0, rt60.c0))))AND(v0.c0 COLLATE RTRIM)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((rt60.c1, v0.c0, v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c2, v0.c0, rt60.c2, rt60.c2, rt60.c0)) AND ((rt60.c2, x'6b04', rt60.c2, rt60.c0, rt60.c0))))AND(v0.c0 COLLATE RTRIM)))AND(v0.c0))) IS TRUE)  as count FROM rt60, v0);
SELECT * FROM rt60, v0 WHERE ((((((((rt60.c1, v0.c0, v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c2, v0.c0, rt60.c2, rt60.c2, rt60.c0)) AND ((rt60.c2, x'6b04', rt60.c2, rt60.c0, rt60.c0))))AND(v0.c0 COLLATE RTRIM)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((rt60.c1, v0.c0, v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c2, v0.c0, rt60.c2, rt60.c2, rt60.c0)) AND ((rt60.c2, x'6b04', rt60.c2, rt60.c0, rt60.c0))))AND(v0.c0 COLLATE RTRIM)))AND(v0.c0))) IS TRUE)  as count FROM rt60, v0);
SELECT * FROM rt60, v0 WHERE ((((((((rt60.c1, v0.c0, v0.c0, rt60.c2, rt60.c1)) NOT BETWEEN ((rt60.c2, v0.c0, rt60.c2, rt60.c2, rt60.c0)) AND ((rt60.c2, x'6b04', rt60.c2, rt60.c0, rt60.c0))))AND(v0.c0 COLLATE RTRIM)))AND(v0.c0)));
SELECT COUNT(*) FROM rt60, v0, t0, vt0, rt1 WHERE (CASE WHEN (((vt0.c2))>((vt0.c1))) THEN ((rt1.c3)>>(rt60.c2)) ELSE ((((vt0.c1)AND(t0.c32)))AND(t0.c49)) END) ORDER BY (((vt0.c0 IN (rt1.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c2))>((vt0.c1))) THEN ((rt1.c3)>>(rt60.c2)) ELSE ((((vt0.c1)AND(t0.c32)))AND(t0.c49)) END) IS TRUE)  as count FROM rt60, v0, t0, vt0, rt1 ORDER BY (((vt0.c0 IN (rt1.c1))) NOT NULL) DESC);
SELECT COUNT(*) FROM rt60, v0, t0, vt0, rt1 WHERE (CASE WHEN (((vt0.c2))>((vt0.c1))) THEN ((rt1.c3)>>(rt60.c2)) ELSE ((((vt0.c1)AND(t0.c32)))AND(t0.c49)) END) ORDER BY (((vt0.c0 IN (rt1.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c2))>((vt0.c1))) THEN ((rt1.c3)>>(rt60.c2)) ELSE ((((vt0.c1)AND(t0.c32)))AND(t0.c49)) END) IS TRUE)  as count FROM rt60, v0, t0, vt0, rt1 ORDER BY (((vt0.c0 IN (rt1.c1))) NOT NULL) DESC);
SELECT COUNT(*) FROM rt60, v0, t0, vt0, rt1 WHERE (CASE WHEN (((vt0.c2))>((vt0.c1))) THEN ((rt1.c3)>>(rt60.c2)) ELSE ((((vt0.c1)AND(t0.c32)))AND(t0.c49)) END) ORDER BY (((vt0.c0 IN (rt1.c1))) NOT NULL) DESC;
SELECT ALL * FROM t0 WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c32);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, v0 WHERE (0.24055987089112452) ORDER BY ((((((t0.c49)>=(t0.c39)))OR(vt0.c0)))OR('>YaQQ<''೎%')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.24055987089112452) IS TRUE)  as count FROM rt1, vt0, t0, v0 ORDER BY ((((((t0.c49)>=(t0.c39)))OR(vt0.c0)))OR('>YaQQ<''೎%')) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, v0 WHERE (0.24055987089112452) ORDER BY ((((((t0.c49)>=(t0.c39)))OR(vt0.c0)))OR('>YaQQ<''೎%')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.24055987089112452) IS TRUE)  as count FROM rt1, vt0, t0, v0 ORDER BY ((((((t0.c49)>=(t0.c39)))OR(vt0.c0)))OR('>YaQQ<''೎%')) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, v0 WHERE (0.24055987089112452) ORDER BY ((((((t0.c49)>=(t0.c39)))OR(vt0.c0)))OR('>YaQQ<''೎%')) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) NOT NULL)))<(((+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))<(((+ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) NOT NULL)))<(((+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))<(((+ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) NOT NULL)))<(((+ (v0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0, rt1, rt60 WHERE ((NOT (HEX(rt1.c1)))) ORDER BY ((((rt60.c2) BETWEEN (x'') AND (t0.c32))) NOT NULL) DESC  NULLS LAST, (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c1)) IN (((rt1.c2) ISNULL))) ASC, (t0.c87 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(rt1.c1)))) IS TRUE)  as count FROM t0, vt0, rt1, rt60 ORDER BY ((((rt60.c2) BETWEEN (x'') AND (t0.c32))) NOT NULL) DESC  NULLS LAST, (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c1)) IN (((rt1.c2) ISNULL))) ASC, (t0.c87 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, rt60 WHERE ((NOT (HEX(rt1.c1)))) ORDER BY ((((rt60.c2) BETWEEN (x'') AND (t0.c32))) NOT NULL) DESC  NULLS LAST, (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c1)) IN (((rt1.c2) ISNULL))) ASC, (t0.c87 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(rt1.c1)))) IS TRUE)  as count FROM t0, vt0, rt1, rt60 ORDER BY ((((rt60.c2) BETWEEN (x'') AND (t0.c32))) NOT NULL) DESC  NULLS LAST, (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c1)) IN (((rt1.c2) ISNULL))) ASC, (t0.c87 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, rt60 WHERE ((NOT (HEX(rt1.c1)))) ORDER BY ((((rt60.c2) BETWEEN (x'') AND (t0.c32))) NOT NULL) DESC  NULLS LAST, (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c1)) IN (((rt1.c2) ISNULL))) ASC, (t0.c87 IN ()) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c3 THEN rt1.c1 END IN ())) ORDER BY ((CAST(rt1.c4 AS NUMERIC))/(CASE WHEN x'5ddf' THEN rt1.c3 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c3 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c4 AS NUMERIC))/(CASE WHEN x'5ddf' THEN rt1.c3 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c3 THEN rt1.c1 END IN ())) ORDER BY ((CAST(rt1.c4 AS NUMERIC))/(CASE WHEN x'5ddf' THEN rt1.c3 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c3 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c4 AS NUMERIC))/(CASE WHEN x'5ddf' THEN rt1.c3 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c3 THEN rt1.c1 END IN ())) ORDER BY ((CAST(rt1.c4 AS NUMERIC))/(CASE WHEN x'5ddf' THEN rt1.c3 ELSE rt1.c2 END));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((vt0.c1 COLLATE RTRIM)-('')) INNER JOIN t0 ON CAST(t0.c87 COLLATE NOCASE AS INTEGER) CROSS JOIN v0 ON ((((rt1.c2)||(rt1.c1)))|((((v0.c0))>=((rt1.c1))))) WHERE (LIKELIHOOD(DISTINCT (('h|F') NOT NULL), 0.6267989000125996)) ORDER BY ((((((rt1.c3)OR(vt0.c0)))AND(t0.c32))) BETWEEN (((t0.c49)IS(rt1.c0))) AND (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c2 THEN vt0.c1 WHEN rt1.c2 THEN t0.c39 ELSE rt1.c0 END)) ASC  NULLS LAST, CASE WHEN ((rt1.c0)AND(vt0.c1)) THEN x'' WHEN ((rt1.c3)/(rt1.c2)) THEN ((((vt0.c1)AND(rt1.c0)))AND(vt0.c1)) WHEN (NOT (t0.c87)) THEN IFNULL(t0.c32, vt0.c0) ELSE 'o\n' END ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (('h|F') NOT NULL), 0.6267989000125996)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((vt0.c1 COLLATE RTRIM)-('')) INNER JOIN t0 ON CAST(t0.c87 COLLATE NOCASE AS INTEGER) CROSS JOIN v0 ON ((((rt1.c2)||(rt1.c1)))|((((v0.c0))>=((rt1.c1))))) ORDER BY ((((((rt1.c3)OR(vt0.c0)))AND(t0.c32))) BETWEEN (((t0.c49)IS(rt1.c0))) AND (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c2 THEN vt0.c1 WHEN rt1.c2 THEN t0.c39 ELSE rt1.c0 END)) ASC  NULLS LAST, CASE WHEN ((rt1.c0)AND(vt0.c1)) THEN x'' WHEN ((rt1.c3)/(rt1.c2)) THEN ((((vt0.c1)AND(rt1.c0)))AND(vt0.c1)) WHEN (NOT (t0.c87)) THEN IFNULL(t0.c32, vt0.c0) ELSE 'o\n' END ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((vt0.c1 COLLATE RTRIM)-('')) INNER JOIN t0 ON CAST(t0.c87 COLLATE NOCASE AS INTEGER) CROSS JOIN v0 ON ((((rt1.c2)||(rt1.c1)))|((((v0.c0))>=((rt1.c1))))) WHERE (LIKELIHOOD(DISTINCT (('h|F') NOT NULL), 0.6267989000125996)) ORDER BY ((((((rt1.c3)OR(vt0.c0)))AND(t0.c32))) BETWEEN (((t0.c49)IS(rt1.c0))) AND (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c2 THEN vt0.c1 WHEN rt1.c2 THEN t0.c39 ELSE rt1.c0 END)) ASC  NULLS LAST, CASE WHEN ((rt1.c0)AND(vt0.c1)) THEN x'' WHEN ((rt1.c3)/(rt1.c2)) THEN ((((vt0.c1)AND(rt1.c0)))AND(vt0.c1)) WHEN (NOT (t0.c87)) THEN IFNULL(t0.c32, vt0.c0) ELSE 'o\n' END ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (('h|F') NOT NULL), 0.6267989000125996)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((vt0.c1 COLLATE RTRIM)-('')) INNER JOIN t0 ON CAST(t0.c87 COLLATE NOCASE AS INTEGER) CROSS JOIN v0 ON ((((rt1.c2)||(rt1.c1)))|((((v0.c0))>=((rt1.c1))))) ORDER BY ((((((rt1.c3)OR(vt0.c0)))AND(t0.c32))) BETWEEN (((t0.c49)IS(rt1.c0))) AND (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c2 THEN vt0.c1 WHEN rt1.c2 THEN t0.c39 ELSE rt1.c0 END)) ASC  NULLS LAST, CASE WHEN ((rt1.c0)AND(vt0.c1)) THEN x'' WHEN ((rt1.c3)/(rt1.c2)) THEN ((((vt0.c1)AND(rt1.c0)))AND(vt0.c1)) WHEN (NOT (t0.c87)) THEN IFNULL(t0.c32, vt0.c0) ELSE 'o\n' END ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((vt0.c1 COLLATE RTRIM)-('')) INNER JOIN t0 ON CAST(t0.c87 COLLATE NOCASE AS INTEGER) CROSS JOIN v0 ON ((((rt1.c2)||(rt1.c1)))|((((v0.c0))>=((rt1.c1))))) WHERE (LIKELIHOOD(DISTINCT (('h|F') NOT NULL), 0.6267989000125996)) ORDER BY ((((((rt1.c3)OR(vt0.c0)))AND(t0.c32))) BETWEEN (((t0.c49)IS(rt1.c0))) AND (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c2 THEN vt0.c1 WHEN rt1.c2 THEN t0.c39 ELSE rt1.c0 END)) ASC  NULLS LAST, CASE WHEN ((rt1.c0)AND(vt0.c1)) THEN x'' WHEN ((rt1.c3)/(rt1.c2)) THEN ((((vt0.c1)AND(rt1.c0)))AND(vt0.c1)) WHEN (NOT (t0.c87)) THEN IFNULL(t0.c32, vt0.c0) ELSE 'o\n' END ASC;
SELECT ALL COUNT(*) FROM rt60, t0, vt0, v0 WHERE (0.6981575543930051);
SELECT SUM(count) FROM (SELECT ((0.6981575543930051) IS TRUE)  as count FROM rt60, t0, vt0, v0);
SELECT ALL COUNT(*) FROM rt60, t0, vt0, v0 WHERE (0.6981575543930051);
SELECT SUM(count) FROM (SELECT ((0.6981575543930051) IS TRUE)  as count FROM rt60, t0, vt0, v0);
SELECT ALL COUNT(*) FROM rt60, t0, vt0, v0 WHERE (0.6981575543930051);
SELECT ALL * FROM rt60 WHERE ((~ (((rt60.c2)&(NULL)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt60.c2)&(NULL))))) IS TRUE)  as count FROM rt60);
SELECT ALL * FROM rt60 WHERE ((~ (((rt60.c2)&(NULL)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt60.c2)&(NULL))))) IS TRUE)  as count FROM rt60);
SELECT ALL * FROM rt60 WHERE ((~ (((rt60.c2)&(NULL)))));
SELECT * FROM rt60, v0, rt1, vt0 WHERE (CAST(CASE WHEN rt1.c3 THEN vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c3 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt60, v0, rt1, vt0);
SELECT * FROM rt60, v0, rt1, vt0 WHERE (CAST(CASE WHEN rt1.c3 THEN vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c3 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt60, v0, rt1, vt0);
SELECT * FROM rt60, v0, rt1, vt0 WHERE (CAST(CASE WHEN rt1.c3 THEN vt0.c0 END AS INTEGER));
SELECT ALL * FROM v0, rt1, vt0, rt60 WHERE (((rt1.c1)|(((vt0.c2)||(rt60.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)|(((vt0.c2)||(rt60.c2))))) IS TRUE)  as count FROM v0, rt1, vt0, rt60);
SELECT ALL * FROM v0, rt1, vt0, rt60 WHERE (((rt1.c1)|(((vt0.c2)||(rt60.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)|(((vt0.c2)||(rt60.c2))))) IS TRUE)  as count FROM v0, rt1, vt0, rt60);
SELECT ALL * FROM v0, rt1, vt0, rt60 WHERE (((rt1.c1)|(((vt0.c2)||(rt60.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (0.2976646979367683)) IN (vt0.c2))) ORDER BY CAST(((vt0.c1)<<(vt0.c2)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (0.2976646979367683)) IN (vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)<<(vt0.c2)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (0.2976646979367683)) IN (vt0.c2))) ORDER BY CAST(((vt0.c1)<<(vt0.c2)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (0.2976646979367683)) IN (vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)<<(vt0.c2)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (0.2976646979367683)) IN (vt0.c2))) ORDER BY CAST(((vt0.c1)<<(vt0.c2)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt60, vt0 WHERE (((((((rt60.c1)>=(vt0.c2)))OR(((vt0.c1) IS FALSE))))AND(rt60.c2 COLLATE NOCASE))) ORDER BY (((rt60.c2 IN (vt0.c1, rt60.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt60.c1)>=(vt0.c2)))OR(((vt0.c1) IS FALSE))))AND(rt60.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt60, vt0 ORDER BY (((rt60.c2 IN (vt0.c1, rt60.c1))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt60, vt0 WHERE (((((((rt60.c1)>=(vt0.c2)))OR(((vt0.c1) IS FALSE))))AND(rt60.c2 COLLATE NOCASE))) ORDER BY (((rt60.c2 IN (vt0.c1, rt60.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt60.c1)>=(vt0.c2)))OR(((vt0.c1) IS FALSE))))AND(rt60.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt60, vt0 ORDER BY (((rt60.c2 IN (vt0.c1, rt60.c1))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt60, vt0 WHERE (((((((rt60.c1)>=(vt0.c2)))OR(((vt0.c1) IS FALSE))))AND(rt60.c2 COLLATE NOCASE))) ORDER BY (((rt60.c2 IN (vt0.c1, rt60.c1))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM v0, t0, rt60, rt1, vt0 WHERE (((((((((vt0.c1 COLLATE RTRIM)OR(((((((((((((vt0.c1)AND(t0.c39)))OR(rt1.c2)))AND(rt60.c1)))OR(t0.c49)))AND(t0.c32)))AND(t0.c49)))))AND(ROUND(rt60.c0, rt1.c2))))OR((((rt1.c1, t0.c32, t0.c87)) BETWEEN ((rt1.c1, rt60.c2, vt0.c2)) AND ((t0.c39, rt1.c4, rt1.c2))))))AND(((t0.c87) BETWEEN (t0.c87) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE RTRIM)OR(((((((((((((vt0.c1)AND(t0.c39)))OR(rt1.c2)))AND(rt60.c1)))OR(t0.c49)))AND(t0.c32)))AND(t0.c49)))))AND(ROUND(rt60.c0, rt1.c2))))OR((((rt1.c1, t0.c32, t0.c87)) BETWEEN ((rt1.c1, rt60.c2, vt0.c2)) AND ((t0.c39, rt1.c4, rt1.c2))))))AND(((t0.c87) BETWEEN (t0.c87) AND (rt1.c1))))) IS TRUE)  as count FROM v0, t0, rt60, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, t0, rt60, rt1, vt0 WHERE (((((((((vt0.c1 COLLATE RTRIM)OR(((((((((((((vt0.c1)AND(t0.c39)))OR(rt1.c2)))AND(rt60.c1)))OR(t0.c49)))AND(t0.c32)))AND(t0.c49)))))AND(ROUND(rt60.c0, rt1.c2))))OR((((rt1.c1, t0.c32, t0.c87)) BETWEEN ((rt1.c1, rt60.c2, vt0.c2)) AND ((t0.c39, rt1.c4, rt1.c2))))))AND(((t0.c87) BETWEEN (t0.c87) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE RTRIM)OR(((((((((((((vt0.c1)AND(t0.c39)))OR(rt1.c2)))AND(rt60.c1)))OR(t0.c49)))AND(t0.c32)))AND(t0.c49)))))AND(ROUND(rt60.c0, rt1.c2))))OR((((rt1.c1, t0.c32, t0.c87)) BETWEEN ((rt1.c1, rt60.c2, vt0.c2)) AND ((t0.c39, rt1.c4, rt1.c2))))))AND(((t0.c87) BETWEEN (t0.c87) AND (rt1.c1))))) IS TRUE)  as count FROM v0, t0, rt60, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, t0, rt60, rt1, vt0 WHERE (((((((((vt0.c1 COLLATE RTRIM)OR(((((((((((((vt0.c1)AND(t0.c39)))OR(rt1.c2)))AND(rt60.c1)))OR(t0.c49)))AND(t0.c32)))AND(t0.c49)))))AND(ROUND(rt60.c0, rt1.c2))))OR((((rt1.c1, t0.c32, t0.c87)) BETWEEN ((rt1.c1, rt60.c2, vt0.c2)) AND ((t0.c39, rt1.c4, rt1.c2))))))AND(((t0.c87) BETWEEN (t0.c87) AND (rt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE (LOWER((((t0.c32))<>((t0.c39)))));
SELECT SUM(count) FROM (SELECT ((LOWER((((t0.c32))!=((t0.c39))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LOWER((((t0.c32))<>((t0.c39)))));
SELECT SUM(count) FROM (SELECT ((LOWER((((t0.c32))!=((t0.c39))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LOWER((((t0.c32))<>((t0.c39)))));
SELECT ALL * FROM v0, rt1, rt60, vt0 WHERE (LIKELY(rt1.c4)) ORDER BY (CAST(rt1.c3 AS BLOB) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(rt1.c4)) IS TRUE)  as count FROM v0, rt1, rt60, vt0 ORDER BY (CAST(rt1.c3 AS BLOB) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt1, rt60, vt0 WHERE (LIKELY(rt1.c4)) ORDER BY (CAST(rt1.c3 AS BLOB) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(rt1.c4)) IS TRUE)  as count FROM v0, rt1, rt60, vt0 ORDER BY (CAST(rt1.c3 AS BLOB) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt1, rt60, vt0 WHERE (LIKELY(rt1.c4)) ORDER BY (CAST(rt1.c3 AS BLOB) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt60, t0, vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c1 COLLATE NOCASE IN (((t0.c39) NOTNULL), ((((t0.c87)OR(v0.c0)))OR(rt60.c1))))  NULLS LAST, ((((((((CASE t0.c87  WHEN vt0.c0 THEN rt60.c1 ELSE rt60.c1 END)OR(CASE rt60.c2  WHEN vt0.c0 THEN x'' END)))OR(CAST(v0.c0 AS NUMERIC))))OR(CASE WHEN t0.c39 THEN NULL ELSE vt0.c2 END)))OR(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt60, t0, vt0, v0 ORDER BY (vt0.c1 COLLATE NOCASE IN (((t0.c39) NOTNULL), ((((t0.c87)OR(v0.c0)))OR(rt60.c1))))  NULLS LAST, ((((((((CASE t0.c87  WHEN vt0.c0 THEN rt60.c1 ELSE rt60.c1 END)OR(CASE rt60.c2  WHEN vt0.c0 THEN x'' END)))OR(CAST(v0.c0 AS NUMERIC))))OR(CASE WHEN t0.c39 THEN NULL ELSE vt0.c2 END)))OR(NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM rt60, t0, vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c1 COLLATE NOCASE IN (((t0.c39) NOTNULL), ((((t0.c87)OR(v0.c0)))OR(rt60.c1))))  NULLS LAST, ((((((((CASE t0.c87  WHEN vt0.c0 THEN rt60.c1 ELSE rt60.c1 END)OR(CASE rt60.c2  WHEN vt0.c0 THEN x'' END)))OR(CAST(v0.c0 AS NUMERIC))))OR(CASE WHEN t0.c39 THEN NULL ELSE vt0.c2 END)))OR(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt60, t0, vt0, v0 ORDER BY (vt0.c1 COLLATE NOCASE IN (((t0.c39) NOTNULL), ((((t0.c87)OR(v0.c0)))OR(rt60.c1))))  NULLS LAST, ((((((((CASE t0.c87  WHEN vt0.c0 THEN rt60.c1 ELSE rt60.c1 END)OR(CASE rt60.c2  WHEN vt0.c0 THEN x'' END)))OR(CAST(v0.c0 AS NUMERIC))))OR(CASE WHEN t0.c39 THEN NULL ELSE vt0.c2 END)))OR(NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM rt60, t0, vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c1 COLLATE NOCASE IN (((t0.c39) NOTNULL), ((((t0.c87)OR(v0.c0)))OR(rt60.c1))))  NULLS LAST, ((((((((CASE t0.c87  WHEN vt0.c0 THEN rt60.c1 ELSE rt60.c1 END)OR(CASE rt60.c2  WHEN vt0.c0 THEN x'' END)))OR(CAST(v0.c0 AS NUMERIC))))OR(CASE WHEN t0.c39 THEN NULL ELSE vt0.c2 END)))OR(NULL)) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE (NOT (rt1.c2))  WHEN CAST('' AS NUMERIC) THEN ((rt1.c0)>=(rt1.c3)) WHEN ((rt1.c1) ISNULL) THEN ((rt1.c4) IS FALSE) WHEN (rt1.c1 IN ()) THEN (rt1.c2 IN ()) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c4)) THEN rt1.c0 WHEN (rt1.c4 IN ()) THEN (((rt1.c3))<=((rt1.c3))) ELSE ((rt1.c0) NOT NULL) END) ORDER BY ((rt1.c3 IN (rt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c2))  WHEN CAST('' AS NUMERIC) THEN ((rt1.c0)>=(rt1.c3)) WHEN ((rt1.c1) ISNULL) THEN ((rt1.c4) IS FALSE) WHEN (rt1.c1 IN ()) THEN (rt1.c2 IN ()) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c4)) THEN rt1.c0 WHEN (rt1.c4 IN ()) THEN (((rt1.c3))<=((rt1.c3))) ELSE ((rt1.c0) NOT NULL) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3 IN (rt1.c0)) IN ())  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE (NOT (rt1.c2))  WHEN CAST('' AS NUMERIC) THEN ((rt1.c0)>=(rt1.c3)) WHEN ((rt1.c1) ISNULL) THEN ((rt1.c4) IS FALSE) WHEN (rt1.c1 IN ()) THEN (rt1.c2 IN ()) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c4)) THEN rt1.c0 WHEN (rt1.c4 IN ()) THEN (((rt1.c3))<=((rt1.c3))) ELSE ((rt1.c0) NOT NULL) END) ORDER BY ((rt1.c3 IN (rt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c2))  WHEN CAST('' AS NUMERIC) THEN ((rt1.c0)>=(rt1.c3)) WHEN ((rt1.c1) ISNULL) THEN ((rt1.c4) IS FALSE) WHEN (rt1.c1 IN ()) THEN (rt1.c2 IN ()) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c4)) THEN rt1.c0 WHEN (rt1.c4 IN ()) THEN (((rt1.c3))<=((rt1.c3))) ELSE ((rt1.c0) NOT NULL) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3 IN (rt1.c0)) IN ())  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE (NOT (rt1.c2))  WHEN CAST('' AS NUMERIC) THEN ((rt1.c0)>=(rt1.c3)) WHEN ((rt1.c1) ISNULL) THEN ((rt1.c4) IS FALSE) WHEN (rt1.c1 IN ()) THEN (rt1.c2 IN ()) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c4)) THEN rt1.c0 WHEN (rt1.c4 IN ()) THEN (((rt1.c3))<=((rt1.c3))) ELSE ((rt1.c0) NOT NULL) END) ORDER BY ((rt1.c3 IN (rt1.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM t0, v0 CROSS JOIN rt1 ON (0.4328526038757803 IN (rt1.c1 COLLATE NOCASE, (((t0.c39)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))) WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN (- (rt1.c4)) END) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 COLLATE BINARY THEN (- (rt1.c4)) END) IS TRUE)  as count FROM t0 NOT INDEXED, v0 CROSS JOIN rt1 ON (0.4328526038757803 IN (rt1.c1 COLLATE NOCASE, (((t0.c39)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))) ORDER BY CHANGES() DESC);
SELECT ALL * FROM t0, v0 CROSS JOIN rt1 ON (0.4328526038757803 IN (rt1.c1 COLLATE NOCASE, (((t0.c39)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))) WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN (- (rt1.c4)) END) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 COLLATE BINARY THEN (- (rt1.c4)) END) IS TRUE)  as count FROM t0 NOT INDEXED, v0 CROSS JOIN rt1 ON (0.4328526038757803 IN (rt1.c1 COLLATE NOCASE, (((t0.c39)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))) ORDER BY CHANGES() DESC);
SELECT ALL * FROM t0, v0 CROSS JOIN rt1 ON (0.4328526038757803 IN (rt1.c1 COLLATE NOCASE, (((t0.c39)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))) WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN (- (rt1.c4)) END) ORDER BY CHANGES() DESC;
SELECT ALL COUNT(*) FROM v0, rt60, vt0, t0 WHERE ((((+ (vt0.c1)))IS(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))IS(vt0.c1))) IS TRUE)  as count FROM v0, rt60, vt0, t0);
SELECT ALL COUNT(*) FROM v0, rt60, vt0, t0 WHERE ((((+ (vt0.c1)))IS(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))IS(vt0.c1))) IS TRUE)  as count FROM v0, rt60, vt0, t0);
SELECT ALL COUNT(*) FROM v0, rt60, vt0, t0 WHERE ((((+ (vt0.c1)))IS(vt0.c1)));
SELECT ALL * FROM rt1 WHERE ((- (rt1.c3))) ORDER BY HEX(DISTINCT rt1.c1) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY HEX(DISTINCT rt1.c1) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((- (rt1.c3))) ORDER BY HEX(DISTINCT rt1.c1) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY HEX(DISTINCT rt1.c1) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((- (rt1.c3))) ORDER BY HEX(DISTINCT rt1.c1) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, rt60, vt0, t0 WHERE ((((((((rt60.c0))==((rt60.c2))))OR((vt0.c0 IN (vt0.c2)))))AND(t0.c32 COLLATE NOCASE))) ORDER BY t0.c39;
SELECT SUM(count) FROM (SELECT (((((((((rt60.c0))==((rt60.c2))))OR((vt0.c0 IN (vt0.c2)))))AND(t0.c32 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt1, rt60, vt0, t0 ORDER BY t0.c39);
SELECT ALL COUNT(*) FROM v0, rt1, rt60, vt0, t0 WHERE ((((((((rt60.c0))==((rt60.c2))))OR((vt0.c0 IN (vt0.c2)))))AND(t0.c32 COLLATE NOCASE))) ORDER BY t0.c39;
SELECT SUM(count) FROM (SELECT (((((((((rt60.c0))==((rt60.c2))))OR((vt0.c0 IN (vt0.c2)))))AND(t0.c32 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt1, rt60, vt0, t0 ORDER BY t0.c39);
SELECT ALL COUNT(*) FROM v0, rt1, rt60, vt0, t0 WHERE ((((((((rt60.c0))==((rt60.c2))))OR((vt0.c0 IN (vt0.c2)))))AND(t0.c32 COLLATE NOCASE))) ORDER BY t0.c39;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt60, rt1 WHERE (CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt60.c2))) THEN ((rt1.c4)GLOB(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt60.c2))) THEN ((rt1.c4)GLOB(rt1.c3)) END) IS TRUE)  as count FROM vt0, rt60, rt1);
SELECT ALL COUNT(*) FROM vt0, rt60, rt1 WHERE (CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt60.c2))) THEN ((rt1.c4)GLOB(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt60.c2))) THEN ((rt1.c4)GLOB(rt1.c3)) END) IS TRUE)  as count FROM vt0, rt60, rt1);
SELECT ALL COUNT(*) FROM vt0, rt60, rt1 WHERE (CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt60.c2))) THEN ((rt1.c4)GLOB(rt1.c3)) END);
SELECT ALL COUNT(*) FROM vt0, v0, rt60, t0, rt1 WHERE ((((x'')) NOT BETWEEN ((((rt1.c0) BETWEEN (rt60.c0) AND (0.21424350979209106)))) AND (((('0.688329793806704')<(t0.c49)))))) ORDER BY ((((((t0.c87)-(v0.c0)))OR(((t0.c32) BETWEEN (rt1.c0) AND (t0.c39)))))AND(CASE rt1.c4  WHEN v0.c0 THEN rt60.c2 ELSE rt60.c1 END))  NULLS LAST, (((rt1.c3)=(t0.c32)) IN ()) ASC, (((rt60.c1 IN ()))OR(rt60.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN ((((rt1.c0) BETWEEN (rt60.c0) AND (0.21424350979209106)))) AND (((('0.688329793806704')<(t0.c49)))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt60, t0, rt1 ORDER BY ((((((t0.c87)-(v0.c0)))OR(((t0.c32) BETWEEN (rt1.c0) AND (t0.c39)))))AND(CASE rt1.c4  WHEN v0.c0 THEN rt60.c2 ELSE rt60.c1 END))  NULLS LAST, (((rt1.c3)==(t0.c32)) IN ()) ASC, (((rt60.c1 IN ()))OR(rt60.c2 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt60, t0, rt1 WHERE ((((x'')) NOT BETWEEN ((((rt1.c0) BETWEEN (rt60.c0) AND (0.21424350979209106)))) AND (((('0.688329793806704')<(t0.c49)))))) ORDER BY ((((((t0.c87)-(v0.c0)))OR(((t0.c32) BETWEEN (rt1.c0) AND (t0.c39)))))AND(CASE rt1.c4  WHEN v0.c0 THEN rt60.c2 ELSE rt60.c1 END))  NULLS LAST, (((rt1.c3)=(t0.c32)) IN ()) ASC, (((rt60.c1 IN ()))OR(rt60.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN ((((rt1.c0) BETWEEN (rt60.c0) AND (0.21424350979209106)))) AND (((('0.688329793806704')<(t0.c49)))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt60, t0, rt1 ORDER BY ((((((t0.c87)-(v0.c0)))OR(((t0.c32) BETWEEN (rt1.c0) AND (t0.c39)))))AND(CASE rt1.c4  WHEN v0.c0 THEN rt60.c2 ELSE rt60.c1 END))  NULLS LAST, (((rt1.c3)==(t0.c32)) IN ()) ASC, (((rt60.c1 IN ()))OR(rt60.c2 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt60, t0, rt1 WHERE ((((x'')) NOT BETWEEN ((((rt1.c0) BETWEEN (rt60.c0) AND (0.21424350979209106)))) AND (((('0.688329793806704')<(t0.c49)))))) ORDER BY ((((((t0.c87)-(v0.c0)))OR(((t0.c32) BETWEEN (rt1.c0) AND (t0.c39)))))AND(CASE rt1.c4  WHEN v0.c0 THEN rt60.c2 ELSE rt60.c1 END))  NULLS LAST, (((rt1.c3)=(t0.c32)) IN ()) ASC, (((rt60.c1 IN ()))OR(rt60.c2 COLLATE NOCASE)) DESC;
SELECT * FROM rt60, vt0, v0, t0, rt1 WHERE ((((((rt1.c1 IN ()))OR(CAST(v0.c0 AS BLOB))))OR(LOWER(DISTINCT '-1466662088')))) ORDER BY 0.6434663205564347;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1 IN ()))OR(CAST(v0.c0 AS BLOB))))OR(LOWER(DISTINCT '-1466662088')))) IS TRUE)  as count FROM rt60, vt0, v0, t0, rt1 ORDER BY 0.6434663205564347);
SELECT * FROM rt60, vt0, v0, t0, rt1 WHERE ((((((rt1.c1 IN ()))OR(CAST(v0.c0 AS BLOB))))OR(LOWER(DISTINCT '-1466662088')))) ORDER BY 0.6434663205564347;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1 IN ()))OR(CAST(v0.c0 AS BLOB))))OR(LOWER(DISTINCT '-1466662088')))) IS TRUE)  as count FROM rt60, vt0, v0, t0, rt1 ORDER BY 0.6434663205564347);
SELECT * FROM rt60, vt0, v0, t0, rt1 WHERE ((((((rt1.c1 IN ()))OR(CAST(v0.c0 AS BLOB))))OR(LOWER(DISTINCT '-1466662088')))) ORDER BY 0.6434663205564347;
SELECT * FROM rt60, v0, vt0, t0 WHERE (((((TRIM(DISTINCT rt60.c0))AND(t0.c32)))OR(((rt60.c1) BETWEEN (t0.c39) AND (0X2653e56c)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT rt60.c0))AND(t0.c32)))OR(((rt60.c1) BETWEEN (t0.c39) AND (0X2653e56c))))) IS TRUE)  as count FROM rt60, v0, vt0, t0);
SELECT * FROM rt60, v0, vt0, t0 WHERE (((((TRIM(DISTINCT rt60.c0))AND(t0.c32)))OR(((rt60.c1) BETWEEN (t0.c39) AND (0X2653e56c)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT rt60.c0))AND(t0.c32)))OR(((rt60.c1) BETWEEN (t0.c39) AND (0X2653e56c))))) IS TRUE)  as count FROM rt60, v0, vt0, t0);
SELECT * FROM rt60, v0, vt0, t0 WHERE (((((TRIM(DISTINCT rt60.c0))AND(t0.c32)))OR(((rt60.c1) BETWEEN (t0.c39) AND (0X2653e56c)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(v0.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(v0.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(v0.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE ((((t0.c87, t0.c32, t0.c32)) NOT BETWEEN (((~ (t0.c39)), CAST(v0.c0 AS INTEGER), CAST(t0.c87 AS TEXT))) AND (((~ (t0.c87)), NULL, NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c87, t0.c32, t0.c32)) NOT BETWEEN (((~ (t0.c39)), CAST(v0.c0 AS INTEGER), CAST(t0.c87 AS TEXT))) AND (((~ (t0.c87)), NULL, NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((t0.c87, t0.c32, t0.c32)) NOT BETWEEN (((~ (t0.c39)), CAST(v0.c0 AS INTEGER), CAST(t0.c87 AS TEXT))) AND (((~ (t0.c87)), NULL, NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c87, t0.c32, t0.c32)) NOT BETWEEN (((~ (t0.c39)), CAST(v0.c0 AS INTEGER), CAST(t0.c87 AS TEXT))) AND (((~ (t0.c87)), NULL, NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((t0.c87, t0.c32, t0.c32)) NOT BETWEEN (((~ (t0.c39)), CAST(v0.c0 AS INTEGER), CAST(t0.c87 AS TEXT))) AND (((~ (t0.c87)), NULL, NULL))));
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt60 ON ((CAST(v0.c0 AS INTEGER))>>(CAST(NULL AS INTEGER))) WHERE ((((((rt60.c1)>>(vt0.c2))))>=((((rt60.c0)<<(rt60.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt60.c1)>>(vt0.c2))))>=((((rt60.c0)<<(rt60.c2)))))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt60 ON ((CAST(v0.c0 AS INTEGER))>>(CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt60 ON ((CAST(v0.c0 AS INTEGER))>>(CAST(NULL AS INTEGER))) WHERE ((((((rt60.c1)>>(vt0.c2))))>=((((rt60.c0)<<(rt60.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt60.c1)>>(vt0.c2))))>=((((rt60.c0)<<(rt60.c2)))))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt60 ON ((CAST(v0.c0 AS INTEGER))>>(CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt60 ON ((CAST(v0.c0 AS INTEGER))>>(CAST(NULL AS INTEGER))) WHERE ((((((rt60.c1)>>(vt0.c2))))>=((((rt60.c0)<<(rt60.c2))))));
SELECT ALL * FROM rt1, t0, vt0 WHERE (((json_array(rt1.c0, t0.c87)) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt1.c3)IS(vt0.c2)) THEN (((('-1510174261')OR(rt1.c3)))AND(0.17097285994859768)) WHEN (((t0.c49)) BETWEEN ((vt0.c0)) AND ((rt1.c1))) THEN CAST(t0.c32 AS INTEGER) WHEN UNLIKELY(rt1.c0) THEN (NOT (1.097196435E9)) ELSE ((rt1.c2) NOT BETWEEN (t0.c49) AND ('yZ,a')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(rt1.c0, t0.c87)) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY CASE WHEN ((rt1.c3)IS(vt0.c2)) THEN (((('-1510174261')OR(rt1.c3)))AND(0.17097285994859768)) WHEN (((t0.c49)) BETWEEN ((vt0.c0)) AND ((rt1.c1))) THEN CAST(t0.c32 AS INTEGER) WHEN UNLIKELY(rt1.c0) THEN (NOT (1.097196435E9)) ELSE ((rt1.c2) NOT BETWEEN (t0.c49) AND ('yZ,a')) END  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0 WHERE (((json_array(rt1.c0, t0.c87)) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt1.c3)IS(vt0.c2)) THEN (((('-1510174261')OR(rt1.c3)))AND(0.17097285994859768)) WHEN (((t0.c49)) BETWEEN ((vt0.c0)) AND ((rt1.c1))) THEN CAST(t0.c32 AS INTEGER) WHEN UNLIKELY(rt1.c0) THEN (NOT (1.097196435E9)) ELSE ((rt1.c2) NOT BETWEEN (t0.c49) AND ('yZ,a')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(rt1.c0, t0.c87)) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY CASE WHEN ((rt1.c3)IS(vt0.c2)) THEN (((('-1510174261')OR(rt1.c3)))AND(0.17097285994859768)) WHEN (((t0.c49)) BETWEEN ((vt0.c0)) AND ((rt1.c1))) THEN CAST(t0.c32 AS INTEGER) WHEN UNLIKELY(rt1.c0) THEN (NOT (1.097196435E9)) ELSE ((rt1.c2) NOT BETWEEN (t0.c49) AND ('yZ,a')) END  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0 WHERE (((json_array(rt1.c0, t0.c87)) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt1.c3)IS(vt0.c2)) THEN (((('-1510174261')OR(rt1.c3)))AND(0.17097285994859768)) WHEN (((t0.c49)) BETWEEN ((vt0.c0)) AND ((rt1.c1))) THEN CAST(t0.c32 AS INTEGER) WHEN UNLIKELY(rt1.c0) THEN (NOT (1.097196435E9)) ELSE ((rt1.c2) NOT BETWEEN (t0.c49) AND ('yZ,a')) END  NULLS FIRST;
SELECT ALL * FROM v0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) THEN 0.1056252260051137 ELSE ((v0.c0)/(rt1.c3)) END) ORDER BY ((rt1.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) THEN 0.1056252260051137 ELSE ((v0.c0)/(rt1.c3)) END) IS TRUE)  as count FROM v0, rt1 ORDER BY ((rt1.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) THEN 0.1056252260051137 ELSE ((v0.c0)/(rt1.c3)) END) ORDER BY ((rt1.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) THEN 0.1056252260051137 ELSE ((v0.c0)/(rt1.c3)) END) IS TRUE)  as count FROM v0, rt1 ORDER BY ((rt1.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)) THEN 0.1056252260051137 ELSE ((v0.c0)/(rt1.c3)) END) ORDER BY ((rt1.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt60 WHERE ('-111744689') ORDER BY ((((rt60.c2)&(rt60.c0)))-((((rt60.c2)) BETWEEN ((rt60.c0)) AND ((rt60.c2)))));
SELECT SUM(count) FROM (SELECT (('-111744689') IS TRUE)  as count FROM v0, rt60 ORDER BY ((((rt60.c2)&(rt60.c0)))-((((rt60.c2)) BETWEEN ((rt60.c0)) AND ((rt60.c2))))));
SELECT COUNT(*) FROM v0, rt60 WHERE ('-111744689') ORDER BY ((((rt60.c2)&(rt60.c0)))-((((rt60.c2)) BETWEEN ((rt60.c0)) AND ((rt60.c2)))));
SELECT SUM(count) FROM (SELECT (('-111744689') IS TRUE)  as count FROM v0, rt60 ORDER BY ((((rt60.c2)&(rt60.c0)))-((((rt60.c2)) BETWEEN ((rt60.c0)) AND ((rt60.c2))))));
SELECT COUNT(*) FROM v0, rt60 WHERE ('-111744689') ORDER BY ((((rt60.c2)&(rt60.c0)))-((((rt60.c2)) BETWEEN ((rt60.c0)) AND ((rt60.c2)))));
SELECT * FROM t0, vt0, rt1, v0 WHERE ((((+ (rt1.c1))) IS TRUE)) ORDER BY ((rt1.c0)=(t0.c49)) COLLATE NOCASE ASC, COALESCE(DISTINCT (rt1.c3 IN (rt1.c3, rt1.c0)), rt1.c0 COLLATE NOCASE, rt1.c1, UNLIKELY(DISTINCT rt1.c1))  NULLS LAST, (((t0.c39, rt1.c2, rt1.c4)) NOT BETWEEN ((((vt0.c1)=(rt1.c3)), CAST(vt0.c2 AS BLOB), ((t0.c39)>>(t0.c39)))) AND (((0.3026890969606284 IN ()), ((rt1.c2)=(vt0.c0)), ((t0.c39)*(rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY ((rt1.c0)==(t0.c49)) COLLATE NOCASE ASC, COALESCE(DISTINCT (rt1.c3 IN (rt1.c3, rt1.c0)), rt1.c0 COLLATE NOCASE, rt1.c1, UNLIKELY(DISTINCT rt1.c1))  NULLS LAST, (((t0.c39, rt1.c2, rt1.c4)) NOT BETWEEN ((((vt0.c1)=(rt1.c3)), CAST(vt0.c2 AS BLOB), ((t0.c39)>>(t0.c39)))) AND (((0.3026890969606284 IN ()), ((rt1.c2)==(vt0.c0)), ((t0.c39)*(rt1.c2))))) ASC);
SELECT * FROM t0, vt0, rt1, v0 WHERE ((((+ (rt1.c1))) IS TRUE)) ORDER BY ((rt1.c0)=(t0.c49)) COLLATE NOCASE ASC, COALESCE(DISTINCT (rt1.c3 IN (rt1.c3, rt1.c0)), rt1.c0 COLLATE NOCASE, rt1.c1, UNLIKELY(DISTINCT rt1.c1))  NULLS LAST, (((t0.c39, rt1.c2, rt1.c4)) NOT BETWEEN ((((vt0.c1)=(rt1.c3)), CAST(vt0.c2 AS BLOB), ((t0.c39)>>(t0.c39)))) AND (((0.3026890969606284 IN ()), ((rt1.c2)=(vt0.c0)), ((t0.c39)*(rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY ((rt1.c0)==(t0.c49)) COLLATE NOCASE ASC, COALESCE(DISTINCT (rt1.c3 IN (rt1.c3, rt1.c0)), rt1.c0 COLLATE NOCASE, rt1.c1, UNLIKELY(DISTINCT rt1.c1))  NULLS LAST, (((t0.c39, rt1.c2, rt1.c4)) NOT BETWEEN ((((vt0.c1)=(rt1.c3)), CAST(vt0.c2 AS BLOB), ((t0.c39)>>(t0.c39)))) AND (((0.3026890969606284 IN ()), ((rt1.c2)==(vt0.c0)), ((t0.c39)*(rt1.c2))))) ASC);
SELECT * FROM t0, vt0, rt1, v0 WHERE ((((+ (rt1.c1))) IS TRUE)) ORDER BY ((rt1.c0)=(t0.c49)) COLLATE NOCASE ASC, COALESCE(DISTINCT (rt1.c3 IN (rt1.c3, rt1.c0)), rt1.c0 COLLATE NOCASE, rt1.c1, UNLIKELY(DISTINCT rt1.c1))  NULLS LAST, (((t0.c39, rt1.c2, rt1.c4)) NOT BETWEEN ((((vt0.c1)=(rt1.c3)), CAST(vt0.c2 AS BLOB), ((t0.c39)>>(t0.c39)))) AND (((0.3026890969606284 IN ()), ((rt1.c2)=(vt0.c0)), ((t0.c39)*(rt1.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0, 'ﰪO68\n', rt1.c3)) BETWEEN (((((rt1.c4))<>((rt1.c2))), rt1.c4 COLLATE BINARY, ((rt1.c4) IS TRUE))) AND ((rt1.c1 COLLATE RTRIM, rt1.c2, CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) ORDER BY (((rt1.c3)IS(rt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, 'ﰪO68\n', rt1.c3)) BETWEEN (((((rt1.c4))<>((rt1.c2))), rt1.c4 COLLATE BINARY, ((rt1.c4) IS TRUE))) AND ((rt1.c1 COLLATE RTRIM, rt1.c2, CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)IS(rt1.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0, 'ﰪO68\n', rt1.c3)) BETWEEN (((((rt1.c4))<>((rt1.c2))), rt1.c4 COLLATE BINARY, ((rt1.c4) IS TRUE))) AND ((rt1.c1 COLLATE RTRIM, rt1.c2, CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) ORDER BY (((rt1.c3)IS(rt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, 'ﰪO68\n', rt1.c3)) BETWEEN (((((rt1.c4))<>((rt1.c2))), rt1.c4 COLLATE BINARY, ((rt1.c4) IS TRUE))) AND ((rt1.c1 COLLATE RTRIM, rt1.c2, CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)IS(rt1.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0, 'ﰪO68\n', rt1.c3)) BETWEEN (((((rt1.c4))<>((rt1.c2))), rt1.c4 COLLATE BINARY, ((rt1.c4) IS TRUE))) AND ((rt1.c1 COLLATE RTRIM, rt1.c2, CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))) ORDER BY (((rt1.c3)IS(rt1.c1)) IN ()) ASC;
