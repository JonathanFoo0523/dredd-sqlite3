-- Time: 2024/06/09 23:54:49
-- Database: database91
-- Database version: 3.40.0
-- seed value: 4207558891
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
UPDATE rt0 SET (c2)=(x'') WHERE (- (CAST(rt0.c2 AS REAL))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='1119685782' WHERE ((rt0.c0)LIKE(rt0.c1)) COLLATE RTRIM; -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
UPDATE rt0 SET c2='-971330469' WHERE ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (0.4538395902362994)); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0X1238eb55, '-112476340'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'750a') WHERE (((- (rt0.c2))) NOT NULL); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE ((CAST(0.20282393111854546 AS INTEGER)) IS TRUE); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('5Ly'); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('1417564987'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (x'cd57'); -- 0ms;
PRAGMA application_id = -1194049405717844221; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, '0.20282393111854546'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), ('p]'), (0x1eca0484); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, NULL), ('', NULL, NULL), (0.46104660603232994, x'9e5a', x'f6db'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
PRAGMA wal_autocheckpoint = 671005947360079744; -- 0ms;
VACUUM; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0xffffffff947f833e, c2='0.46104660603232994' WHERE CAST((NOT (rt0.c1)) AS REAL); -- 1ms;
REINDEX RTRIM; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT GROUP_CONCAT((rt0.c0 IN ())) FROM rt0 WHERE (0.8945696597394941); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (x''); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR REPLACE rt0 SET c1=0xffffffff9dcf0ff0; -- 4ms;
END; -- 0ms;
PRAGMA journal_mode; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (x'', '1973703180', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0x547e533b, '958568117', x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0.4437295555680114, 0.2890155916571725, '-1647374352'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('958568117'); -- 5ms;
ANALYZE; -- 1ms;
UPDATE OR REPLACE rt0 SET c1=NULL WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.7207869414387674))))<=(((rt0.c0) ISNULL))); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.2858847640300791, '', 0.2778152808951506); -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 0ms;
PRAGMA mmap_size = 4753733286041394636; -- 0ms;
PRAGMA journal_mode; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (0.2890155916571725, '-1494203651'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (''); -- 0ms;
UPDATE rt0 SET (c1, c2, c1)=(x'', x'', ''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES ('H0'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE (- (rt0.c0)) COLLATE NOCASE; -- 3ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('1196618396'), ('-971330469'), (1119685782); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2) VALUES ('', x''), (0.18890550664118888, NULL), (0.5274230052918838, 0.8853087886874103); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=1924946999'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (x'', '-379856574', x''), (0.7104060454582461, '', 'P,'), (NULL, '305720149', 1.119685782E9); -- 4ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.8249245577165311), ('h0'), (''); -- 0ms;
PRAGMA application_id = -8318212640962906194; -- 1ms;
UPDATE OR ABORT rt0 SET (c0, c2)=(-250368877, x'') WHERE MAX(((rt0.c1)-(rt0.c1)), ((rt0.c2)OR(rt0.c1)), ((rt0.c1) BETWEEN (NULL) AND (rt0.c1)), rtreenode(rt0.c1, rt0.c1)); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, NULL), ('0.2890155916571725', x''), (x'', x'9c952f9f'); -- 1ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES ('516555908', '1887648226', '290872036'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c0) VALUES ('{#', 0.3943163884377483, '-1803582658'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES ('', 'pC\rbv]잞\n', 's^'), (NULL, NULL, NULL), (NULL, '-55432481', x''); -- 0ms;
ANALYZE main; -- 1ms;
ANALYZE; -- 2ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES (NULL, x''); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('-1647374352'), (0.5274230052918838), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
ANALYZE; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=(x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0)OR(LIKELIHOOD(rt0.c1, 0.38827041457112244))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)OR(LIKELIHOOD(rt0.c1, 0.38827041457112244)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0)OR(LIKELIHOOD(rt0.c1, 0.38827041457112244))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)OR(LIKELIHOOD(rt0.c1, 0.38827041457112244)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0)OR(LIKELIHOOD(rt0.c1, 0.38827041457112244))));
SELECT * FROM rt0, v0 WHERE (x'21ed');
SELECT SUM(count) FROM (SELECT ((x'21ed') IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (x'21ed');
SELECT SUM(count) FROM (SELECT ((x'21ed') IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (x'21ed');
SELECT ALL * FROM rt0, v0 WHERE (((((871987618)-(rt0.c0))) BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END) AND (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((871987618)-(rt0.c0))) BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((871987618)-(rt0.c0))) BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END) AND (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((871987618)-(rt0.c0))) BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((871987618)-(rt0.c0))) BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END) AND (NULL COLLATE NOCASE)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)<<(CAST(rt0.c0 AS NUMERIC))) WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((' V')>(((x'fdf6')IS NOT(rt0.c0)))) DESC, '' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)<<(CAST(rt0.c0 AS NUMERIC))) ORDER BY ((' V')>(((x'fdf6')IS NOT(rt0.c0)))) DESC, '' COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)<<(CAST(rt0.c0 AS NUMERIC))) WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((' V')>(((x'fdf6')IS NOT(rt0.c0)))) DESC, '' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)<<(CAST(rt0.c0 AS NUMERIC))) ORDER BY ((' V')>(((x'fdf6')IS NOT(rt0.c0)))) DESC, '' COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)<<(CAST(rt0.c0 AS NUMERIC))) WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((' V')>(((x'fdf6')IS NOT(rt0.c0)))) DESC, '' COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))|((((v0.c0))=(('Z[,P庀\na҄v'))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))|((((v0.c0))=(('Z[,P庀\na҄v')))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))|((((v0.c0))=(('Z[,P庀\na҄v'))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))|((((v0.c0))=(('Z[,P庀\na҄v')))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))|((((v0.c0))=(('Z[,P庀\na҄v'))))));
SELECT * FROM v0, rt0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY (NOT (((x'f196')<<(v0.c0)))), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((x'f196')<<(v0.c0)))), NULL DESC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY (NOT (((x'f196')<<(v0.c0)))), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((x'f196')<<(v0.c0)))), NULL DESC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY (NOT (((x'f196')<<(v0.c0)))), NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((('0.18890550664118888')IS((('885691205')>>(x'')))));
SELECT SUM(count) FROM (SELECT (((('0.18890550664118888')IS((('885691205')>>(x''))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((('0.18890550664118888')IS((('885691205')>>(x'')))));
SELECT SUM(count) FROM (SELECT (((('0.18890550664118888')IS((('885691205')>>(x''))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((('0.18890550664118888')IS((('885691205')>>(x'')))));
SELECT * FROM v0, rt0 WHERE ((CAST(v0.c0 AS INTEGER) IN ())) ORDER BY 0X34ca9345  NULLS FIRST, ((((CAST(rt0.c0 AS REAL))OR(LIKE(rt0.c1, v0.c0))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.2089395529279292))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY 0x34ca9345  NULLS FIRST, ((((CAST(rt0.c0 AS REAL))OR(LIKE(rt0.c1, v0.c0))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.2089395529279292))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((CAST(v0.c0 AS INTEGER) IN ())) ORDER BY 0X34ca9345  NULLS FIRST, ((((CAST(rt0.c0 AS REAL))OR(LIKE(rt0.c1, v0.c0))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.2089395529279292))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY 0x34ca9345  NULLS FIRST, ((((CAST(rt0.c0 AS REAL))OR(LIKE(rt0.c1, v0.c0))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.2089395529279292))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((((0xfffffffff113ac93) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0xfffffffff113ac93) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((0xfffffffff113ac93) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0xfffffffff113ac93) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((0xfffffffff113ac93) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(NULL)));
SELECT * FROM v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)<(((x'')=(rt0.c2))))) ORDER BY x'', CASE rt0.c1  WHEN rt0.c1 THEN ((v0.c0) NOT NULL) END  NULLS FIRST, CAST((~ (v0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)<(((x'')=(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'', CASE rt0.c1  WHEN rt0.c1 THEN ((v0.c0) NOT NULL) END  NULLS FIRST, CAST((~ (v0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)<(((x'')=(rt0.c2))))) ORDER BY x'', CASE rt0.c1  WHEN rt0.c1 THEN ((v0.c0) NOT NULL) END  NULLS FIRST, CAST((~ (v0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)<(((x'')=(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'', CASE rt0.c1  WHEN rt0.c1 THEN ((v0.c0) NOT NULL) END  NULLS FIRST, CAST((~ (v0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)<(((x'')=(rt0.c2))))) ORDER BY x'', CASE rt0.c1  WHEN rt0.c1 THEN ((v0.c0) NOT NULL) END  NULLS FIRST, CAST((~ (v0.c0)) AS REAL) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN (('' IN (rt0.c0, rt0.c0)), json_type(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN (('' IN (rt0.c0, rt0.c0)), json_type(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN (('' IN (rt0.c0, rt0.c0)), json_type(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN (('' IN (rt0.c0, rt0.c0)), json_type(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN (('' IN (rt0.c0, rt0.c0)), json_type(rt0.c1))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)GLOB(rt0.c2)))AND(((rt0.c1)>>(rt0.c1)))))AND(json_quote(rt0.c2))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)GLOB(rt0.c2)))AND(((rt0.c1)>>(rt0.c1)))))AND(json_quote(rt0.c2))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)GLOB(rt0.c2)))AND(((rt0.c1)>>(rt0.c1)))))AND(json_quote(rt0.c2))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)GLOB(rt0.c2)))AND(((rt0.c1)>>(rt0.c1)))))AND(json_quote(rt0.c2))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)GLOB(rt0.c2)))AND(((rt0.c1)>>(rt0.c1)))))AND(json_quote(rt0.c2))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c2)));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM v0, rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (+ (rt0.c2)) END);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c0))) AND (((rt0.c2)==(rt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))%(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c0))) AND (((rt0.c2)=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))%(rt0.c1))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c0))) AND (((rt0.c2)==(rt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))%(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c0))) AND (((rt0.c2)=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))%(rt0.c1))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c0))) AND (((rt0.c2)==(rt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))%(rt0.c1))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c1 IN ()))IS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))IS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c1 IN ()))IS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))IS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c1 IN ()))IS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((((9.58568117E8 IN ()))LIKE((((v0.c0))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((9.58568117E8 IN ()))LIKE((((v0.c0))<((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((9.58568117E8 IN ()))LIKE((((v0.c0))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((9.58568117E8 IN ()))LIKE((((v0.c0))<((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((9.58568117E8 IN ()))LIKE((((v0.c0))<((rt0.c2))))));
SELECT ALL * FROM v0, rt0 WHERE ('-130760680') ORDER BY ((((0.2659457453421311)<=('s^')))<<(((rt0.c1)||(rt0.c1))));
SELECT SUM(count) FROM (SELECT (('-130760680') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((0.2659457453421311)<=('s^')))<<(((rt0.c1)||(rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE ('-130760680') ORDER BY ((((0.2659457453421311)<=('s^')))<<(((rt0.c1)||(rt0.c1))));
SELECT SUM(count) FROM (SELECT (('-130760680') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((0.2659457453421311)<=('s^')))<<(((rt0.c1)||(rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE ('-130760680') ORDER BY ((((0.2659457453421311)<=('s^')))<<(((rt0.c1)||(rt0.c1))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((x'' COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((x'' COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((x'' COLLATE RTRIM IN ()));
SELECT ALL * FROM v0 WHERE (0.20282393111854546) ORDER BY 'K|7mW' DESC  NULLS LAST, ((((((((v0.c0)OR((+ (v0.c0)))))OR((NOT (v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.20282393111854546) IS TRUE)  as count FROM v0 ORDER BY 'K|7mW' DESC  NULLS LAST, ((((((((v0.c0)OR((+ (v0.c0)))))OR((NOT (v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (0.20282393111854546) ORDER BY 'K|7mW' DESC  NULLS LAST, ((((((((v0.c0)OR((+ (v0.c0)))))OR((NOT (v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.20282393111854546) IS TRUE)  as count FROM v0 ORDER BY 'K|7mW' DESC  NULLS LAST, ((((((((v0.c0)OR((+ (v0.c0)))))OR((NOT (v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (0.20282393111854546) ORDER BY 'K|7mW' DESC  NULLS LAST, ((((((((v0.c0)OR((+ (v0.c0)))))OR((NOT (v0.c0)))))OR(((v0.c0)*(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)+(rt0.c1))))=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND ((rt0.c0 IN (rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)+(rt0.c1))))==((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c0)==(rt0.c2))) AND ((rt0.c0 IN (rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)+(rt0.c1))))=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND ((rt0.c0 IN (rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)+(rt0.c1))))==((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c0)==(rt0.c2))) AND ((rt0.c0 IN (rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)+(rt0.c1))))=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND ((rt0.c0 IN (rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))>(load_extension(rt0.c2)))) ORDER BY CAST(CASE x''  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))>(load_extension(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE x''  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))>(load_extension(rt0.c2)))) ORDER BY CAST(CASE x''  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))>(load_extension(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE x''  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c0 IN (rt0.c1, rt0.c2))))) ORDER BY UNICODE(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c0 IN (rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY UNICODE(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c0 IN (rt0.c1, rt0.c2))))) ORDER BY UNICODE(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c0 IN (rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY UNICODE(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c0 IN (rt0.c1, rt0.c2))))) ORDER BY UNICODE(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((rt0.c0) BETWEEN (((NULL)<(rt0.c0))) AND ((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c0) BETWEEN (((NULL)<(rt0.c0))) AND ((rt0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((rt0.c0) BETWEEN (((NULL)<(rt0.c0))) AND ((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c0) BETWEEN (((NULL)<(rt0.c0))) AND ((rt0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((rt0.c0) BETWEEN (((NULL)<(rt0.c0))) AND ((rt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((rt0.c1)))) NOT BETWEEN (((((x'')OR(v0.c0)))AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE ((CAST(rt0.c2 AS BLOB) IN ())) ORDER BY (NOT (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((rt0.c1)))) NOT BETWEEN (((((x'')OR(v0.c0)))AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY (NOT (v0.c0)) DESC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((rt0.c1)))) NOT BETWEEN (((((x'')OR(v0.c0)))AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE ((CAST(rt0.c2 AS BLOB) IN ())) ORDER BY (NOT (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((rt0.c1)))) NOT BETWEEN (((((x'')OR(v0.c0)))AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY (NOT (v0.c0)) DESC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((rt0.c1)))) NOT BETWEEN (((((x'')OR(v0.c0)))AND(v0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE ((CAST(rt0.c2 AS BLOB) IN ())) ORDER BY (NOT (v0.c0)) DESC;
SELECT ALL * FROM v0 WHERE ((NOT (x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (x'' COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (x'' COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (x'' COLLATE RTRIM)));
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'ce38e67b')) AND (((- (v0.c0)))))) ORDER BY (- ((+ (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((x'ce38e67b')) AND (((- (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (- ((+ (v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'ce38e67b')) AND (((- (v0.c0)))))) ORDER BY (- ((+ (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((x'ce38e67b')) AND (((- (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (- ((+ (v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'ce38e67b')) AND (((- (v0.c0)))))) ORDER BY (- ((+ (v0.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((ABS(DISTINCT rt0.c2))AND((((rt0.c1))<=((rt0.c0)))))) ORDER BY ((((rt0.c0)||(rt0.c1))) IS FALSE) ASC, LOWER((NOT (rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT rt0.c2))AND((((rt0.c1))<=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)||(rt0.c1))) IS FALSE) ASC, LOWER((NOT (rt0.c1))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((ABS(DISTINCT rt0.c2))AND((((rt0.c1))<=((rt0.c0)))))) ORDER BY ((((rt0.c0)||(rt0.c1))) IS FALSE) ASC, LOWER((NOT (rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT rt0.c2))AND((((rt0.c1))<=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)||(rt0.c1))) IS FALSE) ASC, LOWER((NOT (rt0.c1))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((ABS(DISTINCT rt0.c2))AND((((rt0.c1))<=((rt0.c0)))))) ORDER BY ((((rt0.c0)||(rt0.c1))) IS FALSE) ASC, LOWER((NOT (rt0.c1))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))AND(v0.c0))) IS FALSE) WHERE (CASE (+ (rt0.c2))  WHEN (+ (rt0.c0)) THEN ('0.7207869414387674' IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((((((rt0.c2)AND(rt0.c1)))AND(0.7647012854390836)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) ELSE CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c2))  WHEN (+ (rt0.c0)) THEN ('0.7207869414387674' IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((((((rt0.c2)AND(rt0.c1)))AND(0.7647012854390836)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) ELSE CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c2 END END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))AND(v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))AND(v0.c0))) IS FALSE) WHERE (CASE (+ (rt0.c2))  WHEN (+ (rt0.c0)) THEN ('0.7207869414387674' IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((((((rt0.c2)AND(rt0.c1)))AND(0.7647012854390836)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) ELSE CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c2))  WHEN (+ (rt0.c0)) THEN ('0.7207869414387674' IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((((((rt0.c2)AND(rt0.c1)))AND(0.7647012854390836)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) ELSE CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c2 END END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))AND(v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))AND(v0.c0))) IS FALSE) WHERE (CASE (+ (rt0.c2))  WHEN (+ (rt0.c0)) THEN ('0.7207869414387674' IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((((((rt0.c2)AND(rt0.c1)))AND(0.7647012854390836)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) ELSE CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c2 END END);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0) NOTNULL))OR(0xffffffffc207cafb)))OR(TYPEOF(v0.c0))), ((v0.c0) NOT NULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOTNULL))OR(0xffffffffc207cafb)))OR(TYPEOF(v0.c0))), ((v0.c0) NOT NULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0) NOTNULL))OR(0xffffffffc207cafb)))OR(TYPEOF(v0.c0))), ((v0.c0) NOT NULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOTNULL))OR(0xffffffffc207cafb)))OR(TYPEOF(v0.c0))), ((v0.c0) NOT NULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0) NOTNULL))OR(0xffffffffc207cafb)))OR(TYPEOF(v0.c0))), ((v0.c0) NOT NULL) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0) NOTNULL) IN ()) WHERE (((((rt0.c0)%(v0.c0))) BETWEEN (((((x'668d')OR('g9{g0|Ol%')))OR(rt0.c0))) AND ((((v0.c0, rt0.c2, rt0.c1))<=((v0.c0, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(v0.c0))) BETWEEN (((((x'668d')OR('g9{g0|Ol%')))OR(rt0.c0))) AND ((((v0.c0, rt0.c2, rt0.c1))<=((v0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0) NOTNULL) IN ()) WHERE (((((rt0.c0)%(v0.c0))) BETWEEN (((((x'668d')OR('g9{g0|Ol%')))OR(rt0.c0))) AND ((((v0.c0, rt0.c2, rt0.c1))<=((v0.c0, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(v0.c0))) BETWEEN (((((x'668d')OR('g9{g0|Ol%')))OR(rt0.c0))) AND ((((v0.c0, rt0.c2, rt0.c1))<=((v0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0) NOTNULL) IN ()) WHERE (((((rt0.c0)%(v0.c0))) BETWEEN (((((x'668d')OR('g9{g0|Ol%')))OR(rt0.c0))) AND ((((v0.c0, rt0.c2, rt0.c1))<=((v0.c0, rt0.c0, rt0.c2))))));
SELECT ALL * FROM rt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ('');
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CAST(v0.c0 AS BLOB)))) ORDER BY '-379856574' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY '-379856574' DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CAST(v0.c0 AS BLOB)))) ORDER BY '-379856574' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY '-379856574' DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CAST(v0.c0 AS BLOB)))) ORDER BY '-379856574' DESC;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((rt0.c0 IN ())))) WHERE ((+ ((((rt0.c0, v0.c0, v0.c0))<((rt0.c2, rt0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c0, v0.c0, v0.c0))<((rt0.c2, rt0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((rt0.c0 IN ())))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((rt0.c0 IN ())))) WHERE ((+ ((((rt0.c0, v0.c0, v0.c0))<((rt0.c2, rt0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c0, v0.c0, v0.c0))<((rt0.c2, rt0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((rt0.c0 IN ())))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((rt0.c0 IN ())))) WHERE ((+ ((((rt0.c0, v0.c0, v0.c0))<((rt0.c2, rt0.c0, v0.c0))))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) ORDER BY '290872036' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY '290872036' DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) ORDER BY '290872036' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY '290872036' DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) ORDER BY '290872036' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY 'j' DESC  NULLS FIRST, (rt0.c2 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY 'j' DESC  NULLS FIRST, (rt0.c2 IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY 'j' DESC  NULLS FIRST, (rt0.c2 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY 'j' DESC  NULLS FIRST, (rt0.c2 IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY 'j' DESC  NULLS FIRST, (rt0.c2 IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0Xffffffff947f833e))) IS TRUE)  NULLS FIRST, ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((NOT (v0.c0)))))AND(((v0.c0)IS NOT(v0.c0)))))OR(NULL))  NULLS FIRST, IFNULL(DISTINCT ROUND('-1647374352', v0.c0), v0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0Xffffffff947f833e))) IS TRUE)  NULLS FIRST, ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((NOT (v0.c0)))))AND(((v0.c0)IS NOT(v0.c0)))))OR(NULL))  NULLS FIRST, IFNULL(DISTINCT ROUND('-1647374352', v0.c0), v0.c0 COLLATE NOCASE) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0Xffffffff947f833e))) IS TRUE)  NULLS FIRST, ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((NOT (v0.c0)))))AND(((v0.c0)IS NOT(v0.c0)))))OR(NULL))  NULLS FIRST, IFNULL(DISTINCT ROUND('-1647374352', v0.c0), v0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0Xffffffff947f833e))) IS TRUE)  NULLS FIRST, ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((NOT (v0.c0)))))AND(((v0.c0)IS NOT(v0.c0)))))OR(NULL))  NULLS FIRST, IFNULL(DISTINCT ROUND('-1647374352', v0.c0), v0.c0 COLLATE NOCASE) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0Xffffffff947f833e))) IS TRUE)  NULLS FIRST, ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((NOT (v0.c0)))))AND(((v0.c0)IS NOT(v0.c0)))))OR(NULL))  NULLS FIRST, IFNULL(DISTINCT ROUND('-1647374352', v0.c0), v0.c0 COLLATE NOCASE) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY)+(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)) WHERE (((((((((((rt0.c1)<>(rt0.c2)))AND(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)))OR('0.4538395902362994')))OR((((rt0.c1))=((rt0.c1))))))OR(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)!=(rt0.c2)))AND(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)))OR('0.4538395902362994')))OR((((rt0.c1))==((rt0.c1))))))OR(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY)+(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY)+(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)) WHERE (((((((((((rt0.c1)<>(rt0.c2)))AND(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)))OR('0.4538395902362994')))OR((((rt0.c1))=((rt0.c1))))))OR(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)!=(rt0.c2)))AND(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)))OR('0.4538395902362994')))OR((((rt0.c1))==((rt0.c1))))))OR(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY)+(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY)+(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)) WHERE (((((((((((rt0.c1)<>(rt0.c2)))AND(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)))OR('0.4538395902362994')))OR((((rt0.c1))=((rt0.c1))))))OR(((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT))||((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))||((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT))||((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))||((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT))||((~ (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN '' THEN rt0.c0 END COLLATE BINARY) ORDER BY (((x''))=(((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN '' THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((x''))==(((rt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN '' THEN rt0.c0 END COLLATE BINARY) ORDER BY (((x''))=(((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN '' THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((x''))==(((rt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN '' THEN rt0.c0 END COLLATE BINARY) ORDER BY (((x''))=(((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((v0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR('1887648226')))AND(rt0.c1)) END) ORDER BY (0x36deff07 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS REAL)  WHEN ((((v0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR('1887648226')))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (0X36deff07 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((v0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR('1887648226')))AND(rt0.c1)) END) ORDER BY (0x36deff07 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS REAL)  WHEN ((((v0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR('1887648226')))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (0X36deff07 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((v0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR('1887648226')))AND(rt0.c1)) END) ORDER BY (0x36deff07 IN ()) DESC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (CASE ((((NULL)AND(v0.c0)))OR(v0.c0))  WHEN ((rt0.c2)<>(rt0.c2)) THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 COLLATE NOCASE WHEN (~ ('-1647374352')) THEN CASE rt0.c2  WHEN '-500142368' THEN v0.c0 END END) ORDER BY (((rt0.c1 IN ()))!=(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((NULL)AND(v0.c0)))OR(v0.c0))  WHEN ((rt0.c2)!=(rt0.c2)) THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 COLLATE NOCASE WHEN (~ ('-1647374352')) THEN CASE rt0.c2  WHEN '-500142368' THEN v0.c0 END END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1 IN ()))!=(rt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CASE ((((NULL)AND(v0.c0)))OR(v0.c0))  WHEN ((rt0.c2)<>(rt0.c2)) THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 COLLATE NOCASE WHEN (~ ('-1647374352')) THEN CASE rt0.c2  WHEN '-500142368' THEN v0.c0 END END) ORDER BY (((rt0.c1 IN ()))!=(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((NULL)AND(v0.c0)))OR(v0.c0))  WHEN ((rt0.c2)!=(rt0.c2)) THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 COLLATE NOCASE WHEN (~ ('-1647374352')) THEN CASE rt0.c2  WHEN '-500142368' THEN v0.c0 END END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1 IN ()))!=(rt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CASE ((((NULL)AND(v0.c0)))OR(v0.c0))  WHEN ((rt0.c2)<>(rt0.c2)) THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 COLLATE NOCASE WHEN (~ ('-1647374352')) THEN CASE rt0.c2  WHEN '-500142368' THEN v0.c0 END END) ORDER BY (((rt0.c1 IN ()))!=(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (LIKELY(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)) ORDER BY (((((v0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))))%(((((v0.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))))%(((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT * FROM v0, rt0 WHERE (LIKELY(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)) ORDER BY (((((v0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))))%(((((v0.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))))%(((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT * FROM v0, rt0 WHERE (LIKELY(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)) ORDER BY (((((v0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))))%(((((v0.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM v0, rt0 WHERE ((((- (v0.c0)))IS NOT(((v0.c0)-(v0.c0))))) ORDER BY ((SQLITE_VERSION()) IS FALSE)  NULLS FIRST, ((((rt0.c2)IS(rt0.c1)))LIKE(((v0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS NOT(((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((SQLITE_VERSION()) IS FALSE)  NULLS FIRST, ((((rt0.c2)IS(rt0.c1)))LIKE(((v0.c0) NOTNULL))) DESC);
SELECT * FROM v0, rt0 WHERE ((((- (v0.c0)))IS NOT(((v0.c0)-(v0.c0))))) ORDER BY ((SQLITE_VERSION()) IS FALSE)  NULLS FIRST, ((((rt0.c2)IS(rt0.c1)))LIKE(((v0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS NOT(((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((SQLITE_VERSION()) IS FALSE)  NULLS FIRST, ((((rt0.c2)IS(rt0.c1)))LIKE(((v0.c0) NOTNULL))) DESC);
SELECT * FROM v0, rt0 WHERE ((((- (v0.c0)))IS NOT(((v0.c0)-(v0.c0))))) ORDER BY ((SQLITE_VERSION()) IS FALSE)  NULLS FIRST, ((((rt0.c2)IS(rt0.c1)))LIKE(((v0.c0) NOTNULL))) DESC;
SELECT * FROM v0 WHERE ((- (TRIM(v0.c0, v0.c0)))) ORDER BY JULIANDAY(CAST(NULL AS NUMERIC), v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC  NULLS FIRST, (NOT ((- (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (TRIM(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY JULIANDAY(CAST(NULL AS NUMERIC), v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC  NULLS FIRST, (NOT ((- (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((- (TRIM(v0.c0, v0.c0)))) ORDER BY JULIANDAY(CAST(NULL AS NUMERIC), v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC  NULLS FIRST, (NOT ((- (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (TRIM(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY JULIANDAY(CAST(NULL AS NUMERIC), v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC  NULLS FIRST, (NOT ((- (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((- (TRIM(v0.c0, v0.c0)))) ORDER BY JULIANDAY(CAST(NULL AS NUMERIC), v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC  NULLS FIRST, (NOT ((- (v0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(x'')))AND(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(x'')))AND(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(x'')))AND(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(x'')))AND(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(x'')))AND(CAST(NULL AS INTEGER))));
SELECT * FROM v0, rt0 WHERE (TOTAL_CHANGES()) ORDER BY CASE v0.c0  WHEN rt0.c2 THEN '-130760680' ELSE v0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE v0.c0  WHEN rt0.c2 THEN '-130760680' ELSE v0.c0 END COLLATE BINARY);
SELECT * FROM v0, rt0 WHERE (TOTAL_CHANGES()) ORDER BY CASE v0.c0  WHEN rt0.c2 THEN '-130760680' ELSE v0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE v0.c0  WHEN rt0.c2 THEN '-130760680' ELSE v0.c0 END COLLATE BINARY);
SELECT * FROM v0, rt0 WHERE (TOTAL_CHANGES()) ORDER BY CASE v0.c0  WHEN rt0.c2 THEN '-130760680' ELSE v0.c0 END COLLATE BINARY;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c0)/(v0.c0))) AND (v0.c0 COLLATE NOCASE)) WHERE (((((rt0.c1)AND('0.2890155916571725')))AND(((rt0.c1)>(rt0.c2))))) ORDER BY NULLIF(CASE rt0.c1  WHEN v0.c0 THEN '_833' END, ((v0.c0) IS TRUE)), (~ ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND('0.2890155916571725')))AND(((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c0)/(v0.c0))) AND (v0.c0 COLLATE NOCASE)) ORDER BY NULLIF(CASE rt0.c1  WHEN v0.c0 THEN '_833' END, ((v0.c0) IS TRUE)), (~ ((v0.c0 IN ()))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c0)/(v0.c0))) AND (v0.c0 COLLATE NOCASE)) WHERE (((((rt0.c1)AND('0.2890155916571725')))AND(((rt0.c1)>(rt0.c2))))) ORDER BY NULLIF(CASE rt0.c1  WHEN v0.c0 THEN '_833' END, ((v0.c0) IS TRUE)), (~ ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND('0.2890155916571725')))AND(((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c0)/(v0.c0))) AND (v0.c0 COLLATE NOCASE)) ORDER BY NULLIF(CASE rt0.c1  WHEN v0.c0 THEN '_833' END, ((v0.c0) IS TRUE)), (~ ((v0.c0 IN ()))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c0)/(v0.c0))) AND (v0.c0 COLLATE NOCASE)) WHERE (((((rt0.c1)AND('0.2890155916571725')))AND(((rt0.c1)>(rt0.c2))))) ORDER BY NULLIF(CASE rt0.c1  WHEN v0.c0 THEN '_833' END, ((v0.c0) IS TRUE)), (~ ((v0.c0 IN ())));
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)IS NOT(json(rt0.c2)))) ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)))AND((NOT (rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN ('-1507145826') AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)IS NOT(json(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)))AND((NOT (rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN ('-1507145826') AND (rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)IS NOT(json(rt0.c2)))) ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)))AND((NOT (rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN ('-1507145826') AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)IS NOT(json(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)))AND((NOT (rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN ('-1507145826') AND (rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)IS NOT(json(rt0.c2)))) ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)))AND((NOT (rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN ('-1507145826') AND (rt0.c2)))) ASC;
SELECT * FROM v0 WHERE (SQLITE_COMPILEOPTION_USED(TRIM(v0.c0, v0.c0))) ORDER BY LIKELIHOOD(LIKELY(DISTINCT v0.c0), 0.6083823415838275), (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(TRIM(v0.c0, v0.c0))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(LIKELY(DISTINCT v0.c0), 0.6083823415838275), (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (SQLITE_COMPILEOPTION_USED(TRIM(v0.c0, v0.c0))) ORDER BY LIKELIHOOD(LIKELY(DISTINCT v0.c0), 0.6083823415838275), (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(TRIM(v0.c0, v0.c0))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(LIKELY(DISTINCT v0.c0), 0.6083823415838275), (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (SQLITE_COMPILEOPTION_USED(TRIM(v0.c0, v0.c0))) ORDER BY LIKELIHOOD(LIKELY(DISTINCT v0.c0), 0.6083823415838275), (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (x'') AND (v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (x'') AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (x'') AND (v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (x'') AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (x'') AND (v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c0)>>(v0.c0)))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((((rt0.c2))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>>(v0.c0)))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((((rt0.c2))<=((rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c0)>>(v0.c0)))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((((rt0.c2))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>>(v0.c0)))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((((rt0.c2))<=((rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c0)>>(v0.c0)))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((((rt0.c2))<=((rt0.c1))))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, NULL))<((v0.c0, v0.c0, v0.c0))))/(((v0.c0)%(v0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE), (((((v0.c0)+(v0.c0))))>=((CAST('0.2890155916571725' AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, NULL))<((v0.c0, v0.c0, v0.c0))))/(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE), (((((v0.c0)+(v0.c0))))>=((CAST('0.2890155916571725' AS REAL))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, NULL))<((v0.c0, v0.c0, v0.c0))))/(((v0.c0)%(v0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE), (((((v0.c0)+(v0.c0))))>=((CAST('0.2890155916571725' AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, NULL))<((v0.c0, v0.c0, v0.c0))))/(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE), (((((v0.c0)+(v0.c0))))>=((CAST('0.2890155916571725' AS REAL))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, NULL))<((v0.c0, v0.c0, v0.c0))))/(((v0.c0)%(v0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE), (((((v0.c0)+(v0.c0))))>=((CAST('0.2890155916571725' AS REAL))))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (x'');
SELECT * FROM v0 WHERE (TYPEOF(((((NULL)AND(v0.c0)))OR(v0.c0)))) ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'' ELSE (+ (v0.c0)) END  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((NULL)AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'' ELSE (+ (v0.c0)) END  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) ISNULL) DESC);
SELECT * FROM v0 WHERE (TYPEOF(((((NULL)AND(v0.c0)))OR(v0.c0)))) ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'' ELSE (+ (v0.c0)) END  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((NULL)AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'' ELSE (+ (v0.c0)) END  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) ISNULL) DESC);
SELECT * FROM v0 WHERE (TYPEOF(((((NULL)AND(v0.c0)))OR(v0.c0)))) ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'' ELSE (+ (v0.c0)) END  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) ISNULL) DESC;
SELECT * FROM rt0, v0 WHERE ((('1843713061')>=(((rt0.c0)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('1843713061')>=(((rt0.c0)==(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((('1843713061')>=(((rt0.c0)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('1843713061')>=(((rt0.c0)==(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((('1843713061')>=(((rt0.c0)=(rt0.c1)))));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, ((v0.c0) NOT NULL)))<=(((v0.c0 IN ()), (+ (v0.c0)), v0.c0)))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, ((v0.c0) NOT NULL)))<=(((v0.c0 IN ()), (+ (v0.c0)), v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, ((v0.c0) NOT NULL)))<=(((v0.c0 IN ()), (+ (v0.c0)), v0.c0)))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, ((v0.c0) NOT NULL)))<=(((v0.c0 IN ()), (+ (v0.c0)), v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, ((v0.c0) NOT NULL)))<=(((v0.c0 IN ()), (+ (v0.c0)), v0.c0)))) ORDER BY v0.c0 DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<((rt0.c1))) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY CAST(rt0.c0 AS NUMERIC) DESC  NULLS LAST, (((rt0.c2 IN ()))<<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<((rt0.c1))) ELSE CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) DESC  NULLS LAST, (((rt0.c2 IN ()))<<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<((rt0.c1))) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY CAST(rt0.c0 AS NUMERIC) DESC  NULLS LAST, (((rt0.c2 IN ()))<<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<((rt0.c1))) ELSE CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) DESC  NULLS LAST, (((rt0.c2 IN ()))<<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<((rt0.c1))) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY CAST(rt0.c0 AS NUMERIC) DESC  NULLS LAST, (((rt0.c2 IN ()))<<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (rt0.c2) ORDER BY CAST(v0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CAST(v0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (rt0.c2) ORDER BY CAST(v0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CAST(v0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (rt0.c2) ORDER BY CAST(v0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY (NOT (((rt0.c1)<(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)<(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY (NOT (((rt0.c1)<(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)<(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY (NOT (((rt0.c1)<(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (load_extension(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (load_extension(rt0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (load_extension(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (load_extension(rt0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN (rt0.c2, rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (rt0.c2, rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN (rt0.c2, rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (rt0.c2, rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN (rt0.c2, rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (MAX('', (((v0.c0, '', v0.c0))>=((v0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((MAX('', (((v0.c0, '', v0.c0))>=((v0.c0, v0.c0, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (MAX('', (((v0.c0, '', v0.c0))>=((v0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((MAX('', (((v0.c0, '', v0.c0))>=((v0.c0, v0.c0, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (MAX('', (((v0.c0, '', v0.c0))>=((v0.c0, v0.c0, v0.c0)))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT NULL)  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT NULL)  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0) NOT NULL)  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1) NOT NULL) WHERE (((0.6278276152891095) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6278276152891095) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1) NOT NULL) ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1) NOT NULL) WHERE (((0.6278276152891095) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6278276152891095) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1) NOT NULL) ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1) NOT NULL) WHERE (((0.6278276152891095) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((rt0.c1)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((rt0.c1)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((rt0.c1)*(rt0.c2)))));
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((LOWER(0.5828371730638398) IN ())) ORDER BY (((v0.c0)<(rt0.c1)) IN ()), MAX(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END, (v0.c0 IN (rt0.c1))) DESC, ((CAST(rt0.c1 AS NUMERIC))<=(((0xffffffffe2306ee0)+(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LOWER(0.5828371730638398) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0)<(rt0.c1)) IN ()), MAX(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END, (v0.c0 IN (rt0.c1))) DESC, ((CAST(rt0.c1 AS NUMERIC))<=(((0xffffffffe2306ee0)+(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((LOWER(0.5828371730638398) IN ())) ORDER BY (((v0.c0)<(rt0.c1)) IN ()), MAX(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END, (v0.c0 IN (rt0.c1))) DESC, ((CAST(rt0.c1 AS NUMERIC))<=(((0xffffffffe2306ee0)+(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LOWER(0.5828371730638398) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0)<(rt0.c1)) IN ()), MAX(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END, (v0.c0 IN (rt0.c1))) DESC, ((CAST(rt0.c1 AS NUMERIC))<=(((0xffffffffe2306ee0)+(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((LOWER(0.5828371730638398) IN ())) ORDER BY (((v0.c0)<(rt0.c1)) IN ()), MAX(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END, (v0.c0 IN (rt0.c1))) DESC, ((CAST(rt0.c1 AS NUMERIC))<=(((0xffffffffe2306ee0)+(rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))));
SELECT * FROM v0 WHERE ((NOT ((~ (v0.c0))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT * FROM v0 WHERE ((NOT ((~ (v0.c0))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT * FROM v0 WHERE ((NOT ((~ (v0.c0))))) ORDER BY v0.c0 ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 IN (rt0.c1)) IN (((((((((rt0.c2)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN (rt0.c1)) IN (((((((((rt0.c2)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 IN (rt0.c1)) IN (((((((((rt0.c2)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN (rt0.c1)) IN (((((((((rt0.c2)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 IN (rt0.c1)) IN (((((((((rt0.c2)OR(rt0.c1)))OR(x'')))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(rt0.c0)))IS(CASE rt0.c2  WHEN '-2024191401' THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(rt0.c0)))IS(CASE rt0.c2  WHEN '-2024191401' THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(rt0.c0)))IS(CASE rt0.c2  WHEN '-2024191401' THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(rt0.c0)))IS(CASE rt0.c2  WHEN '-2024191401' THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(rt0.c0)))IS(CASE rt0.c2  WHEN '-2024191401' THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c1)) IN (((rt0.c0)<>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)*(rt0.c1)) IN (((rt0.c0)!=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c1)) IN (((rt0.c0)<>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)*(rt0.c1)) IN (((rt0.c0)!=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c1)) IN (((rt0.c0)<>(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKELIHOOD(((rt0.c2)!=(rt0.c2)), 0.6542302489160912) ASC, ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((rt0.c2)!=(rt0.c2)), 0.6542302489160912) ASC, ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKELIHOOD(((rt0.c2)!=(rt0.c2)), 0.6542302489160912) ASC, ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((rt0.c2)!=(rt0.c2)), 0.6542302489160912) ASC, ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKELIHOOD(((rt0.c2)!=(rt0.c2)), 0.6542302489160912) ASC, ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2))=((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))=((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2))=((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))=((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2))=((v0.c0)))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (CASE WHEN x'' THEN ((rt0.c2) ISNULL) END) ORDER BY (((((((rt0.c2)AND(x'')))AND(rt0.c2))))>((CASE WHEN rt0.c0 THEN '233451783' ELSE '0.7207869414387674' END))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((((rt0.c0))<((rt0.c1)))) AND (COALESCE(rt0.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2)AND(x'')))AND(rt0.c2))))>((CASE WHEN rt0.c0 THEN '233451783' ELSE '0.7207869414387674' END))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((((rt0.c0))<((rt0.c1)))) AND (COALESCE(rt0.c0, rt0.c2))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN x'' THEN ((rt0.c2) ISNULL) END) ORDER BY (((((((rt0.c2)AND(x'')))AND(rt0.c2))))>((CASE WHEN rt0.c0 THEN '233451783' ELSE '0.7207869414387674' END))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((((rt0.c0))<((rt0.c1)))) AND (COALESCE(rt0.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2)AND(x'')))AND(rt0.c2))))>((CASE WHEN rt0.c0 THEN '233451783' ELSE '0.7207869414387674' END))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((((rt0.c0))<((rt0.c1)))) AND (COALESCE(rt0.c0, rt0.c2))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN x'' THEN ((rt0.c2) ISNULL) END) ORDER BY (((((((rt0.c2)AND(x'')))AND(rt0.c2))))>((CASE WHEN rt0.c0 THEN '233451783' ELSE '0.7207869414387674' END))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((((rt0.c0))<((rt0.c1)))) AND (COALESCE(rt0.c0, rt0.c2)));
SELECT * FROM rt0 WHERE (((((0.038520693485394664) NOT BETWEEN (rt0.c0) AND (rt0.c2)))<(((rt0.c1) IS FALSE)))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)IS(rt0.c1)) WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.038520693485394664) NOT BETWEEN (rt0.c0) AND (rt0.c2)))<(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)IS(rt0.c1)) WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((0.038520693485394664) NOT BETWEEN (rt0.c0) AND (rt0.c2)))<(((rt0.c1) IS FALSE)))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)IS(rt0.c1)) WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.038520693485394664) NOT BETWEEN (rt0.c0) AND (rt0.c2)))<(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)IS(rt0.c1)) WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((0.038520693485394664) NOT BETWEEN (rt0.c0) AND (rt0.c2)))<(((rt0.c1) IS FALSE)))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)IS(rt0.c1)) WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((v0.c0, rt0.c0, v0.c0)))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE '290872036'  WHEN rt0.c1 THEN v0.c0 ELSE x'17c6' END)), ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c1) IS FALSE))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((v0.c0, rt0.c0, v0.c0)))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE '290872036'  WHEN rt0.c1 THEN v0.c0 ELSE x'17c6' END)), ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c1) IS FALSE))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((v0.c0, rt0.c0, v0.c0)))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE '290872036'  WHEN rt0.c1 THEN v0.c0 ELSE x'17c6' END)), ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c1) IS FALSE))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((v0.c0, rt0.c0, v0.c0)))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE '290872036'  WHEN rt0.c1 THEN v0.c0 ELSE x'17c6' END)), ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c1) IS FALSE))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((v0.c0, rt0.c0, v0.c0)))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE '290872036'  WHEN rt0.c1 THEN v0.c0 ELSE x'17c6' END)), ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c1) IS FALSE))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (TYPEOF((+ (v0.c0)))) ORDER BY CAST((+ (v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((+ (v0.c0)) AS BLOB));
SELECT COUNT(*) FROM v0, rt0 WHERE (TYPEOF((+ (v0.c0)))) ORDER BY CAST((+ (v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((+ (v0.c0)) AS BLOB));
SELECT COUNT(*) FROM v0, rt0 WHERE (TYPEOF((+ (v0.c0)))) ORDER BY CAST((+ (v0.c0)) AS BLOB);
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c0)OR(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c0)OR(rt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c0)OR(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c0)OR(rt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c0)OR(rt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (NOT (rt0.c1)) ELSE ROUND(rt0.c1, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (NOT (rt0.c1)) ELSE ROUND(rt0.c1, rt0.c1) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (NOT (rt0.c1)) ELSE ROUND(rt0.c1, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (NOT (rt0.c1)) ELSE ROUND(rt0.c1, rt0.c1) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (NOT (rt0.c1)) ELSE ROUND(rt0.c1, rt0.c1) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (0.8444699481788783) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT BETWEEN (0.8444699481788783) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (0.8444699481788783) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT BETWEEN (0.8444699481788783) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (0.8444699481788783) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) END);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)&(rt0.c0)))<(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY ((((v0.c0)LIKE(v0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(rt0.c0)))<(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)LIKE(v0.c0))) IS TRUE));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)&(rt0.c0)))<(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY ((((v0.c0)LIKE(v0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(rt0.c0)))<(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)LIKE(v0.c0))) IS TRUE));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)&(rt0.c0)))<(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY ((((v0.c0)LIKE(v0.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (IFNULL(DISTINCT rt0.c1, v0.c0))) WHERE (v0.c0) ORDER BY LIKELY((~ (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (IFNULL(DISTINCT rt0.c1, v0.c0))) ORDER BY LIKELY((~ (v0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (IFNULL(DISTINCT rt0.c1, v0.c0))) WHERE (v0.c0) ORDER BY LIKELY((~ (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (IFNULL(DISTINCT rt0.c1, v0.c0))) ORDER BY LIKELY((~ (v0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (IFNULL(DISTINCT rt0.c1, v0.c0))) WHERE (v0.c0) ORDER BY LIKELY((~ (v0.c0))) DESC;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(9.58568117E8))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))AND(9.58568117E8))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(9.58568117E8))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))AND(9.58568117E8))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(9.58568117E8))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c2))) ISNULL)) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c2))) ISNULL)) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c2))) ISNULL)) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((rt0.c2))) ASC;
SELECT * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) END);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)*(rt0.c2)) END) ORDER BY 0.6280733198431757 ASC  NULLS FIRST, ((((json_object(rt0.c1, 1140750311, rt0.c2, rt0.c0))OR((- (rt0.c1)))))AND(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)*(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.6280733198431757 ASC  NULLS FIRST, ((((json_object(rt0.c1, 1140750311, rt0.c2, rt0.c0))OR((- (rt0.c1)))))AND(x'')) DESC);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)*(rt0.c2)) END) ORDER BY 0.6280733198431757 ASC  NULLS FIRST, ((((json_object(rt0.c1, 1140750311, rt0.c2, rt0.c0))OR((- (rt0.c1)))))AND(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)*(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.6280733198431757 ASC  NULLS FIRST, ((((json_object(rt0.c1, 1140750311, rt0.c2, rt0.c0))OR((- (rt0.c1)))))AND(x'')) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((('wvᏕ퐥h矧ol')==(rt0.c1)))AND(((rt0.c0) IS FALSE))))OR(x'ceff')));
SELECT SUM(count) FROM (SELECT (((((((('wvᏕ퐥h矧ol')=(rt0.c1)))AND(((rt0.c0) IS FALSE))))OR(x'ceff'))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((('wvᏕ퐥h矧ol')==(rt0.c1)))AND(((rt0.c0) IS FALSE))))OR(x'ceff')));
SELECT SUM(count) FROM (SELECT (((((((('wvᏕ퐥h矧ol')=(rt0.c1)))AND(((rt0.c0) IS FALSE))))OR(x'ceff'))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((('wvᏕ퐥h矧ol')==(rt0.c1)))AND(((rt0.c0) IS FALSE))))OR(x'ceff')));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 END)IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 END)IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (CASE WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c2)) THEN ((rt0.c0)==(rt0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END THEN ((rt0.c2)<(v0.c0)) WHEN ((rt0.c2)>>(x'')) THEN ((((rt0.c1)OR('-112476340')))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c2)) THEN ((rt0.c0)=(rt0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END THEN ((rt0.c2)<(v0.c0)) WHEN ((rt0.c2)>>(x'')) THEN ((((rt0.c1)OR('-112476340')))OR(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (CASE WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c2)) THEN ((rt0.c0)==(rt0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END THEN ((rt0.c2)<(v0.c0)) WHEN ((rt0.c2)>>(x'')) THEN ((((rt0.c1)OR('-112476340')))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c2)) THEN ((rt0.c0)=(rt0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END THEN ((rt0.c2)<(v0.c0)) WHEN ((rt0.c2)>>(x'')) THEN ((((rt0.c1)OR('-112476340')))OR(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (CASE WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c2)) THEN ((rt0.c0)==(rt0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END THEN ((rt0.c2)<(v0.c0)) WHEN ((rt0.c2)>>(x'')) THEN ((((rt0.c1)OR('-112476340')))OR(rt0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 WHERE (json_valid(v0.c0)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 END)*(((v0.c0)IS(rt0.c2)))), (+ (((rt0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(v0.c0)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 END)*(((v0.c0)IS(rt0.c2)))), (+ (((rt0.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (json_valid(v0.c0)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 END)*(((v0.c0)IS(rt0.c2)))), (+ (((rt0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(v0.c0)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 END)*(((v0.c0)IS(rt0.c2)))), (+ (((rt0.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (json_valid(v0.c0)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 END)*(((v0.c0)IS(rt0.c2)))), (+ (((rt0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((((CAST(rt0.c2 AS TEXT))OR(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE)))) ORDER BY ((((rt0.c0)<=(rt0.c2)))-(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS TEXT))OR(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0)<=(rt0.c2)))-(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((CAST(rt0.c2 AS TEXT))OR(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE)))) ORDER BY ((((rt0.c0)<=(rt0.c2)))-(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS TEXT))OR(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0)<=(rt0.c2)))-(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((CAST(rt0.c2 AS TEXT))OR(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE)))) ORDER BY ((((rt0.c0)<=(rt0.c2)))-(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)&(rt0.c0)) COLLATE NOCASE COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)&(rt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)&(rt0.c0)) COLLATE NOCASE COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)&(rt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)&(rt0.c0)) COLLATE NOCASE COLLATE RTRIM WHERE (x'');
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((+ (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))) WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((+ (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((+ (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))) WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((+ (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((+ (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))) WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE BINARY) ORDER BY 0.897553619809654;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.897553619809654);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE BINARY) ORDER BY 0.897553619809654;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.897553619809654);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE BINARY) ORDER BY 0.897553619809654;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0, NULL, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0, NULL, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0, NULL, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0, NULL, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0, NULL, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ()));
SELECT * FROM v0, rt0 NOT INDEXED WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.033651206604259354 WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.033651206604259354 WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 NOT INDEXED WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.033651206604259354 WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.033651206604259354 WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 NOT INDEXED WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.033651206604259354 WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((~ (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((~ (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((~ (rt0.c1))) NOT NULL));
SELECT * FROM v0 WHERE (json_extract(((v0.c0)IS(v0.c0)), ((v0.c0) IS TRUE))) ORDER BY (- (x'4d08'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_extract(((v0.c0)IS(v0.c0)), ((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY (- (x'4d08'))  NULLS FIRST);
SELECT * FROM v0 WHERE (json_extract(((v0.c0)IS(v0.c0)), ((v0.c0) IS TRUE))) ORDER BY (- (x'4d08'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_extract(((v0.c0)IS(v0.c0)), ((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY (- (x'4d08'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((PRINTF(rt0.c2))OR(((((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END))) ORDER BY -9.71330469E8;
SELECT SUM(count) FROM (SELECT ((((((PRINTF(rt0.c2))OR(((((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY -9.71330469E8);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((PRINTF(rt0.c2))OR(((((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END))) ORDER BY -9.71330469E8;
SELECT SUM(count) FROM (SELECT ((((((PRINTF(rt0.c2))OR(((((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY -9.71330469E8);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((PRINTF(rt0.c2))OR(((((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END))) ORDER BY -9.71330469E8;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON LOWER(DISTINCT (((('')AND(rt0.c2)))AND(rt0.c2))) WHERE (CASE ((rt0.c1) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(2.90872036E8 AS INTEGER) THEN ((rt0.c0)+(v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (v0.c0 IN (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(2.90872036E8 AS INTEGER) THEN ((rt0.c0)+(v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (v0.c0 IN (rt0.c0)) END) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON LOWER(DISTINCT (((('')AND(rt0.c2)))AND(rt0.c2))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON LOWER(DISTINCT (((('')AND(rt0.c2)))AND(rt0.c2))) WHERE (CASE ((rt0.c1) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(2.90872036E8 AS INTEGER) THEN ((rt0.c0)+(v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (v0.c0 IN (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(2.90872036E8 AS INTEGER) THEN ((rt0.c0)+(v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (v0.c0 IN (rt0.c0)) END) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON LOWER(DISTINCT (((('')AND(rt0.c2)))AND(rt0.c2))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON LOWER(DISTINCT (((('')AND(rt0.c2)))AND(rt0.c2))) WHERE (CASE ((rt0.c1) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(2.90872036E8 AS INTEGER) THEN ((rt0.c0)+(v0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (v0.c0 IN (rt0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1)/(x'0612')) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)/(x'0612')) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1)/(x'0612')) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)/(x'0612')) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1)/(x'0612')) IN ()));
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((rt0.c1) IS TRUE))));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 INNER JOIN v0 ON (((((rt0.c0))>((v0.c0)))) IS FALSE) WHERE (x'84a2c4c8') ORDER BY CASE WHEN (((rt0.c1))=((rt0.c0))) THEN x'' END ASC, TRIM(DISTINCT CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END, LIKELY(rt0.c1)) DESC  NULLS LAST, 'u./J' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'84a2c4c8') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((rt0.c0))>((v0.c0)))) IS FALSE) ORDER BY CASE WHEN (((rt0.c1))==((rt0.c0))) THEN x'' END ASC, TRIM(DISTINCT CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END, LIKELY(rt0.c1)) DESC  NULLS LAST, 'u./J' DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON (((((rt0.c0))>((v0.c0)))) IS FALSE) WHERE (x'84a2c4c8') ORDER BY CASE WHEN (((rt0.c1))=((rt0.c0))) THEN x'' END ASC, TRIM(DISTINCT CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END, LIKELY(rt0.c1)) DESC  NULLS LAST, 'u./J' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'84a2c4c8') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((rt0.c0))>((v0.c0)))) IS FALSE) ORDER BY CASE WHEN (((rt0.c1))==((rt0.c0))) THEN x'' END ASC, TRIM(DISTINCT CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END, LIKELY(rt0.c1)) DESC  NULLS LAST, 'u./J' DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON (((((rt0.c0))>((v0.c0)))) IS FALSE) WHERE (x'84a2c4c8') ORDER BY CASE WHEN (((rt0.c1))=((rt0.c0))) THEN x'' END ASC, TRIM(DISTINCT CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END, LIKELY(rt0.c1)) DESC  NULLS LAST, 'u./J' DESC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY (((((((((((rt0.c1))<>((rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, rt0.c1))))))AND(((rt0.c2)>=(v0.c0)))))AND((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((-1.1247634E8, rt0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() ORDER BY (((((((((((rt0.c1))<>((rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, rt0.c1))))))AND(((rt0.c2)>=(v0.c0)))))AND((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((-1.1247634E8, rt0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0)))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY (((((((((((rt0.c1))<>((rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, rt0.c1))))))AND(((rt0.c2)>=(v0.c0)))))AND((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((-1.1247634E8, rt0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() ORDER BY (((((((((((rt0.c1))<>((rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, rt0.c1))))))AND(((rt0.c2)>=(v0.c0)))))AND((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((-1.1247634E8, rt0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0)))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON LAST_INSERT_ROWID() WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY (((((((((((rt0.c1))<>((rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, rt0.c1))))))AND(((rt0.c2)>=(v0.c0)))))AND((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((-1.1247634E8, rt0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0)))))  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST((- (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c0);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST((- (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c0);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST((- (rt0.c1)) AS TEXT));
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c1))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((rt0.c2)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((rt0.c2)IS NOT(NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c1))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((rt0.c2)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((rt0.c2)IS NOT(NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c1))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((rt0.c2)IS NOT(NULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER));
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY ((((rt0.c1)IS(rt0.c2)))=(((v0.c0)*(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1)IS(rt0.c2)))=(((v0.c0)*(rt0.c0)))));
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY ((((rt0.c1)IS(rt0.c2)))=(((v0.c0)*(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1)IS(rt0.c2)))=(((v0.c0)*(rt0.c0)))));
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY ((((rt0.c1)IS(rt0.c2)))=(((v0.c0)*(rt0.c0))));
SELECT * FROM rt0 WHERE (('' IN ())) ORDER BY rt0.c2 COLLATE RTRIM COLLATE NOCASE ASC, CAST(UNLIKELY(rt0.c0) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM COLLATE NOCASE ASC, CAST(UNLIKELY(rt0.c0) AS REAL)  NULLS FIRST);
SELECT * FROM rt0 WHERE (('' IN ())) ORDER BY rt0.c2 COLLATE RTRIM COLLATE NOCASE ASC, CAST(UNLIKELY(rt0.c0) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM COLLATE NOCASE ASC, CAST(UNLIKELY(rt0.c0) AS REAL)  NULLS FIRST);
SELECT * FROM rt0 WHERE (('' IN ())) ORDER BY rt0.c2 COLLATE RTRIM COLLATE NOCASE ASC, CAST(UNLIKELY(rt0.c0) AS REAL)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (load_extension(v0.c0) COLLATE NOCASE) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (RTRIM(v0.c0)) AND (TYPEOF(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ((load_extension(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (RTRIM(v0.c0)) AND (TYPEOF(DISTINCT v0.c0))));
SELECT ALL * FROM v0 WHERE (load_extension(v0.c0) COLLATE NOCASE) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (RTRIM(v0.c0)) AND (TYPEOF(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ((load_extension(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (RTRIM(v0.c0)) AND (TYPEOF(DISTINCT v0.c0))));
SELECT COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON CAST(CAST(NULL AS INTEGER) AS REAL) WHERE (((((rt0.c2)-(rt0.c2))) NOT BETWEEN ((((v0.c0))>=((rt0.c1)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(rt0.c2))) NOT BETWEEN ((((v0.c0))>=((rt0.c1)))) AND (rt0.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(NULL AS INTEGER) AS REAL));
SELECT COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON CAST(CAST(NULL AS INTEGER) AS REAL) WHERE (((((rt0.c2)-(rt0.c2))) NOT BETWEEN ((((v0.c0))>=((rt0.c1)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(rt0.c2))) NOT BETWEEN ((((v0.c0))>=((rt0.c1)))) AND (rt0.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(NULL AS INTEGER) AS REAL));
SELECT COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON CAST(CAST(NULL AS INTEGER) AS REAL) WHERE (((((rt0.c2)-(rt0.c2))) NOT BETWEEN ((((v0.c0))>=((rt0.c1)))) AND (rt0.c0)));
SELECT ALL * FROM v0 WHERE (0.1940692755310396);
SELECT SUM(count) FROM (SELECT ALL ((0.1940692755310396) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.1940692755310396);
SELECT SUM(count) FROM (SELECT ALL ((0.1940692755310396) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.1940692755310396);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)OR('-130760680'))))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)OR('-130760680'))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)OR('-130760680'))))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)OR('-130760680'))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)OR('-130760680'))))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((v0.c0))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c1)IS(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (((- (rt0.c1)) IN ())) ORDER BY (((((((((((x'', rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR('-1507145826')))AND(((rt0.c1)*(rt0.c0)))))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((x'', rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR('-1507145826')))AND(((rt0.c1)*(rt0.c0)))))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (((- (rt0.c1)) IN ())) ORDER BY (((((((((((x'', rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR('-1507145826')))AND(((rt0.c1)*(rt0.c0)))))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((x'', rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR('-1507145826')))AND(((rt0.c1)*(rt0.c0)))))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (((- (rt0.c1)) IN ())) ORDER BY (((((((((((x'', rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR('-1507145826')))AND(((rt0.c1)*(rt0.c0)))))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC;
SELECT * FROM rt0, v0 WHERE ((((((((((NOT (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))))AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0)%(rt0.c0))))) ORDER BY ((CASE rt0.c1  WHEN '-1803582658' THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)OR(0x33f979a2)) DESC  NULLS LAST, ((rt0.c0)*(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))))AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE rt0.c1  WHEN '-1803582658' THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)OR(0X33f979a2)) DESC  NULLS LAST, ((rt0.c0)*(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((((((((NOT (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))))AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0)%(rt0.c0))))) ORDER BY ((CASE rt0.c1  WHEN '-1803582658' THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)OR(0x33f979a2)) DESC  NULLS LAST, ((rt0.c0)*(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))))AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE rt0.c1  WHEN '-1803582658' THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)OR(0X33f979a2)) DESC  NULLS LAST, ((rt0.c0)*(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((((((((NOT (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))))AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0)%(rt0.c0))))) ORDER BY ((CASE rt0.c1  WHEN '-1803582658' THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)OR(0x33f979a2)) DESC  NULLS LAST, ((rt0.c0)*(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (rt0.c2) AND (((NULL)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (rt0.c2) AND (((NULL)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (rt0.c2) AND (((NULL)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (rt0.c2) AND (((NULL)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (rt0.c2) AND (((NULL)IS NOT(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT * FROM rt0, v0 WHERE ((~ (((rt0.c0)/(rt0.c2))))) ORDER BY CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0)/(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END DESC);
SELECT * FROM rt0, v0 WHERE ((~ (((rt0.c0)/(rt0.c2))))) ORDER BY CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0)/(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END DESC);
SELECT * FROM rt0, v0 WHERE ((~ (((rt0.c0)/(rt0.c2))))) ORDER BY CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END DESC;
SELECT * FROM v0 WHERE (SQLITE_VERSION()) ORDER BY (NOT (NULL));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0 ORDER BY (NOT (NULL)));
SELECT * FROM v0 WHERE (SQLITE_VERSION()) ORDER BY (NOT (NULL));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0 ORDER BY (NOT (NULL)));
SELECT * FROM v0 WHERE (SQLITE_VERSION()) ORDER BY (NOT (NULL));
SELECT ALL * FROM rt0 WHERE (((rt0.c2)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) DESC  NULLS LAST, (- (x''))  NULLS FIRST, (~ ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) DESC  NULLS LAST, (- (x''))  NULLS FIRST, (~ ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) DESC  NULLS LAST, (- (x''))  NULLS FIRST, (~ ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) DESC  NULLS LAST, (- (x''))  NULLS FIRST, (~ ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) DESC  NULLS LAST, (- (x''))  NULLS FIRST, (~ ((rt0.c2 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((IFNULL(v0.c0, rt0.c0))OR(((((rt0.c1)AND(x'5a00')))OR(rt0.c2)))))AND((((((((('-659123853')OR(v0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((IFNULL(v0.c0, rt0.c0))OR(((((rt0.c1)AND(x'5a00')))OR(rt0.c2)))))AND((((((((('-659123853')OR(v0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((IFNULL(v0.c0, rt0.c0))OR(((((rt0.c1)AND(x'5a00')))OR(rt0.c2)))))AND((((((((('-659123853')OR(v0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((IFNULL(v0.c0, rt0.c0))OR(((((rt0.c1)AND(x'5a00')))OR(rt0.c2)))))AND((((((((('-659123853')OR(v0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((IFNULL(v0.c0, rt0.c0))OR(((((rt0.c1)AND(x'5a00')))OR(rt0.c2)))))AND((((((((('-659123853')OR(v0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE RTRIM);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((((((rt0.c1))<=((rt0.c1)))) IS TRUE)) ORDER BY (+ (TYPEOF(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE ORDER BY (+ (TYPEOF(rt0.c0))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((((((rt0.c1))<=((rt0.c1)))) IS TRUE)) ORDER BY (+ (TYPEOF(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE ORDER BY (+ (TYPEOF(rt0.c0))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((((((rt0.c1))<=((rt0.c1)))) IS TRUE)) ORDER BY (+ (TYPEOF(rt0.c0)));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN (rt0.c0)))*(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0)))*(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN (rt0.c0)))*(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0)))*(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN (rt0.c0)))*(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)GLOB(rt0.c1)))=(((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c1)))=(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)GLOB(rt0.c1)))=(((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c1)))=(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)GLOB(rt0.c1)))=(((v0.c0)%(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE CASE WHEN v0.c0 THEN 0.27546510493153575 END  WHEN (~ (v0.c0)) THEN x'' END) ORDER BY ((((((0.11139733098874594)AND(rt0.c0)))AND(v0.c0)))/((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN 0.27546510493153575 END  WHEN (~ (v0.c0)) THEN x'' END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((0.11139733098874594)AND(rt0.c0)))AND(v0.c0)))/((rt0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE CASE WHEN v0.c0 THEN 0.27546510493153575 END  WHEN (~ (v0.c0)) THEN x'' END) ORDER BY ((((((0.11139733098874594)AND(rt0.c0)))AND(v0.c0)))/((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN 0.27546510493153575 END  WHEN (~ (v0.c0)) THEN x'' END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((0.11139733098874594)AND(rt0.c0)))AND(v0.c0)))/((rt0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE CASE WHEN v0.c0 THEN 0.27546510493153575 END  WHEN (~ (v0.c0)) THEN x'' END) ORDER BY ((((((0.11139733098874594)AND(rt0.c0)))AND(v0.c0)))/((rt0.c1 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT * FROM rt0, v0 WHERE (LIKELY(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY TRIM(rt0.c2) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM(rt0.c2) ASC, NULL  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (LIKELY(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY TRIM(rt0.c2) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM(rt0.c2) ASC, NULL  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (LIKELY(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY TRIM(rt0.c2) ASC, NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0)*(((rt0.c0) IS TRUE)))) ORDER BY ((COALESCE(v0.c0, v0.c0, 0Xffffffff8a6a9bb2, '-1860829672')) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ('-971330469'));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((COALESCE(v0.c0, v0.c0, 0Xffffffff8a6a9bb2, '-1860829672')) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ('-971330469')));
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0)*(((rt0.c0) IS TRUE)))) ORDER BY ((COALESCE(v0.c0, v0.c0, 0Xffffffff8a6a9bb2, '-1860829672')) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ('-971330469'));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((COALESCE(v0.c0, v0.c0, 0Xffffffff8a6a9bb2, '-1860829672')) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ('-971330469')));
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0)*(((rt0.c0) IS TRUE)))) ORDER BY ((COALESCE(v0.c0, v0.c0, 0Xffffffff8a6a9bb2, '-1860829672')) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ('-971330469'));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)AND(CAST(v0.c0 AS NUMERIC))))AND(LIKELIHOOD(rt0.c0, 0.6906106153832879))) WHERE ((((((rt0.c1, rt0.c0, rt0.c1))==((rt0.c2, rt0.c0, rt0.c2))))/((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c0, rt0.c1))==((rt0.c2, rt0.c0, rt0.c2))))/((rt0.c0 IN ())))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)AND(CAST(v0.c0 AS NUMERIC))))AND(LIKELIHOOD(rt0.c0, 0.6906106153832879))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)AND(CAST(v0.c0 AS NUMERIC))))AND(LIKELIHOOD(rt0.c0, 0.6906106153832879))) WHERE ((((((rt0.c1, rt0.c0, rt0.c1))==((rt0.c2, rt0.c0, rt0.c2))))/((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c0, rt0.c1))==((rt0.c2, rt0.c0, rt0.c2))))/((rt0.c0 IN ())))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)AND(CAST(v0.c0 AS NUMERIC))))AND(LIKELIHOOD(rt0.c0, 0.6906106153832879))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)AND(CAST(v0.c0 AS NUMERIC))))AND(LIKELIHOOD(rt0.c0, 0.6906106153832879))) WHERE ((((((rt0.c1, rt0.c0, rt0.c1))==((rt0.c2, rt0.c0, rt0.c2))))/((rt0.c0 IN ()))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('-250368877'))), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END, rt0.c2 COLLATE NOCASE))==((CAST(rt0.c1 AS INTEGER), CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END, CAST(rt0.c2 AS REAL)))) WHERE (((json_object('', rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((v0.c0, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) ORDER BY (('201710045')LIKE(((rt0.c2) BETWEEN ('-130760680') AND (rt0.c1)))), CASE v0.c0  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_object('', rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((v0.c0, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('-250368877'))), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END, rt0.c2 COLLATE NOCASE))=((CAST(rt0.c1 AS INTEGER), CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END, CAST(rt0.c2 AS REAL)))) ORDER BY (('201710045')LIKE(((rt0.c2) BETWEEN ('-130760680') AND (rt0.c1)))), CASE v0.c0  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('-250368877'))), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END, rt0.c2 COLLATE NOCASE))==((CAST(rt0.c1 AS INTEGER), CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END, CAST(rt0.c2 AS REAL)))) WHERE (((json_object('', rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((v0.c0, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) ORDER BY (('201710045')LIKE(((rt0.c2) BETWEEN ('-130760680') AND (rt0.c1)))), CASE v0.c0  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_object('', rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((v0.c0, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('-250368877'))), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END, rt0.c2 COLLATE NOCASE))=((CAST(rt0.c1 AS INTEGER), CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END, CAST(rt0.c2 AS REAL)))) ORDER BY (('201710045')LIKE(((rt0.c2) BETWEEN ('-130760680') AND (rt0.c1)))), CASE v0.c0  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('-250368877'))), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END, rt0.c2 COLLATE NOCASE))==((CAST(rt0.c1 AS INTEGER), CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END, CAST(rt0.c2 AS REAL)))) WHERE (((json_object('', rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((v0.c0, rt0.c1, v0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) ORDER BY (('201710045')LIKE(((rt0.c2) BETWEEN ('-130760680') AND (rt0.c1)))), CASE v0.c0  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) NOT NULL)) NOTNULL));
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE (~ (rt0.c0))  WHEN ((v0.c0)&(-1622582200)) THEN ((rt0.c1) NOT NULL) ELSE CASE v0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END END WHERE (((rt0.c0)&(v0.c0 COLLATE BINARY))) ORDER BY ((rt0.c1)<>(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)&(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE (~ (rt0.c0))  WHEN ((v0.c0)&(-1622582200)) THEN ((rt0.c1) NOT NULL) ELSE CASE v0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END END ORDER BY ((rt0.c1)<>(rt0.c1)) COLLATE RTRIM);
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE (~ (rt0.c0))  WHEN ((v0.c0)&(-1622582200)) THEN ((rt0.c1) NOT NULL) ELSE CASE v0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END END WHERE (((rt0.c0)&(v0.c0 COLLATE BINARY))) ORDER BY ((rt0.c1)<>(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)&(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE (~ (rt0.c0))  WHEN ((v0.c0)&(-1622582200)) THEN ((rt0.c1) NOT NULL) ELSE CASE v0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END END ORDER BY ((rt0.c1)<>(rt0.c1)) COLLATE RTRIM);
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE (~ (rt0.c0))  WHEN ((v0.c0)&(-1622582200)) THEN ((rt0.c1) NOT NULL) ELSE CASE v0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END END WHERE (((rt0.c0)&(v0.c0 COLLATE BINARY))) ORDER BY ((rt0.c1)<>(rt0.c1)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0)))OR(((v0.c0)<=(v0.c0))))) ORDER BY v0.c0 ASC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))OR(v0.c0)))OR(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC, v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0)))OR(((v0.c0)<=(v0.c0))))) ORDER BY v0.c0 ASC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))OR(v0.c0)))OR(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC, v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0)))OR(((v0.c0)<=(v0.c0))))) ORDER BY v0.c0 ASC, v0.c0 DESC;
SELECT ALL * FROM rt0, v0 WHERE ((((- (x''))) BETWEEN (LOWER(rt0.c0)) AND (0.4823827857486923))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (x''))) BETWEEN (LOWER(rt0.c0)) AND (0.4823827857486923))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((- (x''))) BETWEEN (LOWER(rt0.c0)) AND (0.4823827857486923))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (x''))) BETWEEN (LOWER(rt0.c0)) AND (0.4823827857486923))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((- (x''))) BETWEEN (LOWER(rt0.c0)) AND (0.4823827857486923))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) AS INTEGER) WHERE (CASE ((((rt0.c0)AND(rt0.c0)))OR(v0.c0))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)AND(rt0.c0)))OR(v0.c0))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) AS INTEGER) WHERE (CASE ((((rt0.c0)AND(rt0.c0)))OR(v0.c0))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)AND(rt0.c0)))OR(v0.c0))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) AS INTEGER) WHERE (CASE ((((rt0.c0)AND(rt0.c0)))OR(v0.c0))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1) IS FALSE) END);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((438460032, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((438460032, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((438460032, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((438460032, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((438460032, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) ORDER BY x'dca7' DESC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'dca7' DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) ORDER BY x'dca7' DESC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'dca7' DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) ORDER BY x'dca7' DESC;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN TYPEOF(DISTINCT v0.c0) THEN (('pC\rbv]잞\n') ISNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((x'')IS NOT(rt0.c1)) WHEN (- (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) ELSE CASE WHEN rt0.c0 THEN '832377813' WHEN rt0.c0 THEN v0.c0 WHEN 0.12523505286126313 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c0 END END) ORDER BY rt0.c2, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(x''))) AND ((rt0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(DISTINCT v0.c0) THEN (('pC\rbv]잞\n') ISNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((x'')IS NOT(rt0.c1)) WHEN (- (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) ELSE CASE WHEN rt0.c0 THEN '832377813' WHEN rt0.c0 THEN v0.c0 WHEN 0.12523505286126313 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(x''))) AND ((rt0.c2 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN TYPEOF(DISTINCT v0.c0) THEN (('pC\rbv]잞\n') ISNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((x'')IS NOT(rt0.c1)) WHEN (- (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) ELSE CASE WHEN rt0.c0 THEN '832377813' WHEN rt0.c0 THEN v0.c0 WHEN 0.12523505286126313 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c0 END END) ORDER BY rt0.c2, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(x''))) AND ((rt0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(DISTINCT v0.c0) THEN (('pC\rbv]잞\n') ISNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((x'')IS NOT(rt0.c1)) WHEN (- (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) ELSE CASE WHEN rt0.c0 THEN '832377813' WHEN rt0.c0 THEN v0.c0 WHEN 0.12523505286126313 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(x''))) AND ((rt0.c2 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN TYPEOF(DISTINCT v0.c0) THEN (('pC\rbv]잞\n') ISNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((x'')IS NOT(rt0.c1)) WHEN (- (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) ELSE CASE WHEN rt0.c0 THEN '832377813' WHEN rt0.c0 THEN v0.c0 WHEN 0.12523505286126313 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c0 END END) ORDER BY rt0.c2, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(x''))) AND ((rt0.c2 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ('.h');
SELECT SUM(count) FROM (SELECT (('.h') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('.h');
SELECT SUM(count) FROM (SELECT (('.h') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('.h');
SELECT COUNT(*) FROM rt0 WHERE (CASE x''  WHEN ((rt0.c0)<=(rt0.c0)) THEN 0.5851375287883948 ELSE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(0.05653022743091651)) END) ORDER BY ((0.5371159654474659) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN ((rt0.c0)<=(rt0.c0)) THEN 0.5851375287883948 ELSE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(0.05653022743091651)) END) IS TRUE)  as count FROM rt0 ORDER BY ((0.5371159654474659) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE x''  WHEN ((rt0.c0)<=(rt0.c0)) THEN 0.5851375287883948 ELSE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(0.05653022743091651)) END) ORDER BY ((0.5371159654474659) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN ((rt0.c0)<=(rt0.c0)) THEN 0.5851375287883948 ELSE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(0.05653022743091651)) END) IS TRUE)  as count FROM rt0 ORDER BY ((0.5371159654474659) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE x''  WHEN ((rt0.c0)<=(rt0.c0)) THEN 0.5851375287883948 ELSE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(0.05653022743091651)) END) ORDER BY ((0.5371159654474659) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY (((((rt0.c0 IN ()))AND(((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))AND(((v0.c0)AND(rt0.c0)))), GLOB((rt0.c2 IN (rt0.c2)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))), (- ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c0 IN ()))AND(((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))AND(((v0.c0)AND(rt0.c0)))), GLOB((rt0.c2 IN (rt0.c2)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))), (- ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY (((((rt0.c0 IN ()))AND(((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))AND(((v0.c0)AND(rt0.c0)))), GLOB((rt0.c2 IN (rt0.c2)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))), (- ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c0 IN ()))AND(((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))AND(((v0.c0)AND(rt0.c0)))), GLOB((rt0.c2 IN (rt0.c2)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))), (- ((rt0.c1 IN ()))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)) AS INTEGER) WHERE (((CAST(rt0.c1 AS BLOB))|((v0.c0 IN ())))) ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))|((v0.c0 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)) AS INTEGER) ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)) AS INTEGER) WHERE (((CAST(rt0.c1 AS BLOB))|((v0.c0 IN ())))) ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))|((v0.c0 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)) AS INTEGER) ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)) AS INTEGER) WHERE (((CAST(rt0.c1 AS BLOB))|((v0.c0 IN ())))) ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY ((LOWER(DISTINCT v0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((LOWER(DISTINCT v0.c0)) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY ((LOWER(DISTINCT v0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((LOWER(DISTINCT v0.c0)) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY ((LOWER(DISTINCT v0.c0)) ISNULL) DESC;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL) DESC  NULLS FIRST, (((NOT (rt0.c1)))IS(((rt0.c0)/(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL) DESC  NULLS FIRST, (((NOT (rt0.c1)))IS(((rt0.c0)/(rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL) DESC  NULLS FIRST, (((NOT (rt0.c1)))IS(((rt0.c0)/(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL) DESC  NULLS FIRST, (((NOT (rt0.c1)))IS(((rt0.c0)/(rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL) DESC  NULLS FIRST, (((NOT (rt0.c1)))IS(((rt0.c0)/(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((((v0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, v0.c0, v0.c0))))>=(NULL))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, v0.c0, v0.c0))))>=(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC);
SELECT * FROM v0, rt0 WHERE ((((((v0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, v0.c0, v0.c0))))>=(NULL))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, v0.c0, v0.c0))))>=(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC);
SELECT * FROM v0, rt0 WHERE ((((((v0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, v0.c0, v0.c0))))>=(NULL))) ORDER BY rt0.c1 DESC;
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))<((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))<((- (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))<((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))<((- (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))<((- (rt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST('jb' AS BLOB)) ORDER BY PRINTF((((rt0.c1))>=((rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('jb' AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY PRINTF((((rt0.c1))>=((rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST('jb' AS BLOB)) ORDER BY PRINTF((((rt0.c1))>=((rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('jb' AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY PRINTF((((rt0.c1))>=((rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST('jb' AS BLOB)) ORDER BY PRINTF((((rt0.c1))>=((rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) ISNULL) AS REAL)) ORDER BY 0.7152337559793727  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY 0.7152337559793727  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) ISNULL) AS REAL)) ORDER BY 0.7152337559793727  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY 0.7152337559793727  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) ISNULL) AS REAL)) ORDER BY 0.7152337559793727  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((9.58568117E8)OR(((rt0.c1) NOTNULL))))AND(((rt0.c0) NOT NULL))) WHERE ('0.8853087886874103') ORDER BY json_valid(0.410672576816563);
SELECT SUM(count) FROM (SELECT ALL (('0.8853087886874103') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((9.58568117E8)OR(((rt0.c1) NOTNULL))))AND(((rt0.c0) NOT NULL))) ORDER BY json_valid(0.410672576816563));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((9.58568117E8)OR(((rt0.c1) NOTNULL))))AND(((rt0.c0) NOT NULL))) WHERE ('0.8853087886874103') ORDER BY json_valid(0.410672576816563);
SELECT SUM(count) FROM (SELECT ALL (('0.8853087886874103') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((9.58568117E8)OR(((rt0.c1) NOTNULL))))AND(((rt0.c0) NOT NULL))) ORDER BY json_valid(0.410672576816563));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((9.58568117E8)OR(((rt0.c1) NOTNULL))))AND(((rt0.c0) NOT NULL))) WHERE ('0.8853087886874103') ORDER BY json_valid(0.410672576816563);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE BINARY) ORDER BY ((0.7482203131251763)=((~ (0.4634645819895291)))) DESC  NULLS LAST, ((((rt0.c0)<=(rt0.c2))) ISNULL)  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((0.7482203131251763)==((~ (0.4634645819895291)))) DESC  NULLS LAST, ((((rt0.c0)<=(rt0.c2))) ISNULL)  NULLS FIRST, NULL DESC);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE BINARY) ORDER BY ((0.7482203131251763)=((~ (0.4634645819895291)))) DESC  NULLS LAST, ((((rt0.c0)<=(rt0.c2))) ISNULL)  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((0.7482203131251763)==((~ (0.4634645819895291)))) DESC  NULLS LAST, ((((rt0.c0)<=(rt0.c2))) ISNULL)  NULLS FIRST, NULL DESC);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE BINARY) ORDER BY ((0.7482203131251763)=((~ (0.4634645819895291)))) DESC  NULLS LAST, ((((rt0.c0)<=(rt0.c2))) ISNULL)  NULLS FIRST, NULL DESC;
SELECT * FROM rt0, v0 WHERE ((((((~ (v0.c0)))OR('')))AND(RTRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))OR('')))AND(RTRIM(rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((~ (v0.c0)))OR('')))AND(RTRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))OR('')))AND(RTRIM(rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((~ (v0.c0)))OR('')))AND(RTRIM(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY CAST((((rt0.c2, rt0.c2, v0.c0))<((rt0.c2, rt0.c0, 0.5889858346836035))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((((rt0.c2, rt0.c2, v0.c0))<((rt0.c2, rt0.c0, 0.5889858346836035))) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY CAST((((rt0.c2, rt0.c2, v0.c0))<((rt0.c2, rt0.c0, 0.5889858346836035))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((((rt0.c2, rt0.c2, v0.c0))<((rt0.c2, rt0.c0, 0.5889858346836035))) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY CAST((((rt0.c2, rt0.c2, v0.c0))<((rt0.c2, rt0.c0, 0.5889858346836035))) AS NUMERIC);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN CAST(v0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN CAST(v0.c0 AS INTEGER) END);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN CAST(v0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN CAST(v0.c0 AS INTEGER) END);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN CAST(v0.c0 AS INTEGER) END;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((rt0.c2))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((((((v0.c0))>=((x''))))OR(CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)))OR(((rt0.c2) NOTNULL))))AND(((v0.c0) NOT BETWEEN (1351926697) AND (rt0.c2)))))OR((rt0.c2 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0))>=((x''))))OR(CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)))OR(((rt0.c2) NOTNULL))))AND(((v0.c0) NOT BETWEEN (1351926697) AND (rt0.c2)))))OR((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((((((v0.c0))>=((x''))))OR(CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)))OR(((rt0.c2) NOTNULL))))AND(((v0.c0) NOT BETWEEN (1351926697) AND (rt0.c2)))))OR((rt0.c2 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0))>=((x''))))OR(CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)))OR(((rt0.c2) NOTNULL))))AND(((v0.c0) NOT BETWEEN (1351926697) AND (rt0.c2)))))OR((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((((((v0.c0))>=((x''))))OR(CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)))OR(((rt0.c2) NOTNULL))))AND(((v0.c0) NOT BETWEEN (1351926697) AND (rt0.c2)))))OR((rt0.c2 IN (rt0.c1)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON x'c33d' WHERE ('') ORDER BY ((((((((((v0.c0)AND(rt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c0)))/(((v0.c0)IS NOT(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON x'c33d' ORDER BY ((((((((((v0.c0)AND(rt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c0)))/(((v0.c0)IS NOT(rt0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON x'c33d' WHERE ('') ORDER BY ((((((((((v0.c0)AND(rt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c0)))/(((v0.c0)IS NOT(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON x'c33d' ORDER BY ((((((((((v0.c0)AND(rt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c0)))/(((v0.c0)IS NOT(rt0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON x'c33d' WHERE ('') ORDER BY ((((((((((v0.c0)AND(rt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c0)))/(((v0.c0)IS NOT(rt0.c0))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE (('') NOT NULL)  WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c2 ELSE NULLIF(DISTINCT rt0.c2, rt0.c2) END) ORDER BY ((rt0.c2)>>(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CASE (('') NOT NULL)  WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c2 ELSE NULLIF(DISTINCT rt0.c2, rt0.c2) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2)>>(CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE (('') NOT NULL)  WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c2 ELSE NULLIF(DISTINCT rt0.c2, rt0.c2) END) ORDER BY ((rt0.c2)>>(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CASE (('') NOT NULL)  WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c2 ELSE NULLIF(DISTINCT rt0.c2, rt0.c2) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2)>>(CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE (('') NOT NULL)  WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c2 ELSE NULLIF(DISTINCT rt0.c2, rt0.c2) END) ORDER BY ((rt0.c2)>>(CAST(v0.c0 AS INTEGER)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) ORDER BY (+ ((((v0.c0, rt0.c2, rt0.c2))!=((x'', v0.c0, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS INTEGER) IN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ ((((v0.c0, rt0.c2, rt0.c2))<>((x'', v0.c0, rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) ORDER BY (+ ((((v0.c0, rt0.c2, rt0.c2))!=((x'', v0.c0, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS INTEGER) IN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ ((((v0.c0, rt0.c2, rt0.c2))<>((x'', v0.c0, rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))) ORDER BY (+ ((((v0.c0, rt0.c2, rt0.c2))!=((x'', v0.c0, rt0.c1))))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) ISNULL)) ORDER BY (((((rt0.c2) NOT NULL)))<=((CAST(rt0.c2 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) NOT NULL)))<=((CAST(rt0.c2 AS REAL))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) ISNULL)) ORDER BY (((((rt0.c2) NOT NULL)))<=((CAST(rt0.c2 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) NOT NULL)))<=((CAST(rt0.c2 AS REAL))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c0))<((rt0.c2, rt0.c0, rt0.c0)))) ISNULL)) ORDER BY (((((rt0.c2) NOT NULL)))<=((CAST(rt0.c2 AS REAL))))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((rt0.c1) NOTNULL)))) ORDER BY ((((v0.c0)&(rt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)&(rt0.c0))) ISNULL)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((rt0.c1) NOTNULL)))) ORDER BY ((((v0.c0)&(rt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)&(rt0.c0))) ISNULL)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((rt0.c1) NOTNULL)))) ORDER BY ((((v0.c0)&(rt0.c0))) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0))==((v0.c0))))GLOB(rt0.c0)) WHERE ('wvᏕ퐥h矧ol');
SELECT SUM(count) FROM (SELECT ALL (('wvᏕ퐥h矧ol') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0))=((v0.c0))))GLOB(rt0.c0)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0))==((v0.c0))))GLOB(rt0.c0)) WHERE ('wvᏕ퐥h矧ol');
SELECT SUM(count) FROM (SELECT ALL (('wvᏕ퐥h矧ol') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0))=((v0.c0))))GLOB(rt0.c0)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0))==((v0.c0))))GLOB(rt0.c0)) WHERE ('wvᏕ퐥h矧ol');
SELECT ALL * FROM rt0 WHERE (((((((((((((STRFTIME(rt0.c1, NULL, rt0.c0, rt0.c2, rt0.c2))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0) IS FALSE))))AND((((rt0.c1))>((rt0.c1))))))AND(((rt0.c1)>=(rt0.c0)))))OR((rt0.c0 IN ()))))OR(((rt0.c0) NOTNULL)))) ORDER BY ((CAST(rt0.c0 AS INTEGER))+((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((STRFTIME(rt0.c1, NULL, rt0.c0, rt0.c2, rt0.c2))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0) IS FALSE))))AND((((rt0.c1))>((rt0.c1))))))AND(((rt0.c1)>=(rt0.c0)))))OR((rt0.c0 IN ()))))OR(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER))+((x'' IN ()))));
SELECT ALL * FROM rt0 WHERE (((((((((((((STRFTIME(rt0.c1, NULL, rt0.c0, rt0.c2, rt0.c2))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0) IS FALSE))))AND((((rt0.c1))>((rt0.c1))))))AND(((rt0.c1)>=(rt0.c0)))))OR((rt0.c0 IN ()))))OR(((rt0.c0) NOTNULL)))) ORDER BY ((CAST(rt0.c0 AS INTEGER))+((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((STRFTIME(rt0.c1, NULL, rt0.c0, rt0.c2, rt0.c2))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0) IS FALSE))))AND((((rt0.c1))>((rt0.c1))))))AND(((rt0.c1)>=(rt0.c0)))))OR((rt0.c0 IN ()))))OR(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER))+((x'' IN ()))));
SELECT ALL * FROM rt0 WHERE (((((((((((((STRFTIME(rt0.c1, NULL, rt0.c0, rt0.c2, rt0.c2))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0) IS FALSE))))AND((((rt0.c1))>((rt0.c1))))))AND(((rt0.c1)>=(rt0.c0)))))OR((rt0.c0 IN ()))))OR(((rt0.c0) NOTNULL)))) ORDER BY ((CAST(rt0.c0 AS INTEGER))+((x'' IN ())));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((80368516 IN ()))==((- (rt0.c1)))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((80368516 IN ()))=((- (rt0.c1)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((80368516 IN ()))==((- (rt0.c1)))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((80368516 IN ()))=((- (rt0.c1)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((80368516 IN ()))==((- (rt0.c1)))) WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.5530238178033886) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (NULL) AND (((rt0.c1)>=(rt0.c1))))) ORDER BY NULL, rt0.c2 ASC  NULLS LAST, (((rt0.c1) NOT BETWEEN (0.9972182322911444) AND (x'7fc4')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5530238178033886) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (NULL) AND (((rt0.c1)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULL, rt0.c2 ASC  NULLS LAST, (((rt0.c1) NOT BETWEEN (0.9972182322911444) AND (x'7fc4')) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.5530238178033886) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (NULL) AND (((rt0.c1)>=(rt0.c1))))) ORDER BY NULL, rt0.c2 ASC  NULLS LAST, (((rt0.c1) NOT BETWEEN (0.9972182322911444) AND (x'7fc4')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5530238178033886) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (NULL) AND (((rt0.c1)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULL, rt0.c2 ASC  NULLS LAST, (((rt0.c1) NOT BETWEEN (0.9972182322911444) AND (x'7fc4')) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.5530238178033886) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (NULL) AND (((rt0.c1)>=(rt0.c1))))) ORDER BY NULL, rt0.c2 ASC  NULLS LAST, (((rt0.c1) NOT BETWEEN (0.9972182322911444) AND (x'7fc4')) IN ()) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) ORDER BY ((x'' COLLATE NOCASE) BETWEEN (((rt0.c0)=(rt0.c2))) AND (rtreenode(rt0.c0, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'' COLLATE NOCASE) BETWEEN (((rt0.c0)=(rt0.c2))) AND (rtreenode(rt0.c0, rt0.c0))) DESC);
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) ORDER BY ((x'' COLLATE NOCASE) BETWEEN (((rt0.c0)=(rt0.c2))) AND (rtreenode(rt0.c0, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'' COLLATE NOCASE) BETWEEN (((rt0.c0)=(rt0.c2))) AND (rtreenode(rt0.c0, rt0.c0))) DESC);
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) ORDER BY ((x'' COLLATE NOCASE) BETWEEN (((rt0.c0)=(rt0.c2))) AND (rtreenode(rt0.c0, rt0.c0))) DESC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT (+ (rt0.c1))) WHERE ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT (+ (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT (+ (rt0.c1))) WHERE ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT (+ (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT (+ (rt0.c1))) WHERE ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((((rt0.c0)<>(x'70a1')))))) ORDER BY (~ (SQLITE_VERSION())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((((rt0.c0)!=(x'70a1')))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (SQLITE_VERSION())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((((rt0.c0)<>(x'70a1')))))) ORDER BY (~ (SQLITE_VERSION())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((((rt0.c0)!=(x'70a1')))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (SQLITE_VERSION())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((((rt0.c0)<>(x'70a1')))))) ORDER BY (~ (SQLITE_VERSION())) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<(x'')) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<(x'')) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(x'')) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)&(rt0.c0))) AND (CAST('290872036' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((rt0.c2)&(rt0.c0))) AND (CAST('290872036' AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)&(rt0.c0))) AND (CAST('290872036' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((rt0.c2)&(rt0.c0))) AND (CAST('290872036' AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)&(rt0.c0))) AND (CAST('290872036' AS NUMERIC))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c2)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)<(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c2)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)<(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c2)<(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1.860829672E9 THEN rt0.c2 END)) AND (((v0.c0 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1.860829672E9 THEN rt0.c2 END)) AND (((v0.c0 IN (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1.860829672E9 THEN rt0.c2 END)) AND (((v0.c0 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1.860829672E9 THEN rt0.c2 END)) AND (((v0.c0 IN (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1.860829672E9 THEN rt0.c2 END)) AND (((v0.c0 IN (rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE ((x'' IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((x'' IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((x'' IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (((TRIM(v0.c0))=(v0.c0))) ORDER BY IFNULL(((v0.c0)||(v0.c0)), ((v0.c0)<=(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(v0.c0))==(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(((v0.c0)||(v0.c0)), ((v0.c0)<=(v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((TRIM(v0.c0))=(v0.c0))) ORDER BY IFNULL(((v0.c0)||(v0.c0)), ((v0.c0)<=(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(v0.c0))==(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(((v0.c0)||(v0.c0)), ((v0.c0)<=(v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((TRIM(v0.c0))=(v0.c0))) ORDER BY IFNULL(((v0.c0)||(v0.c0)), ((v0.c0)<=(v0.c0))) DESC;
SELECT COUNT(*) FROM v0 WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((x'' IN ()) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((x'' IN ()) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT ALL * FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN x'3cb4' WHEN rt0.c0 THEN rt0.c0 WHEN x'39a8e80e' THEN rt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN x'3cb4' WHEN rt0.c0 THEN rt0.c0 WHEN x'39a8e80e' THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN x'3cb4' WHEN rt0.c0 THEN rt0.c0 WHEN x'39a8e80e' THEN rt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN x'3cb4' WHEN rt0.c0 THEN rt0.c0 WHEN x'39a8e80e' THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN x'3cb4' WHEN rt0.c0 THEN rt0.c0 WHEN x'39a8e80e' THEN rt0.c0 END AS TEXT));
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, v0 WHERE (COALESCE(('0.9972182322911444' IN ()), ((((rt0.c2)OR(v0.c0)))AND(v0.c0)), ((rt0.c2) NOT BETWEEN (-454550171) AND (v0.c0)), HEX(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(('0.9972182322911444' IN ()), ((((rt0.c2)OR(v0.c0)))AND(v0.c0)), ((rt0.c2) NOT BETWEEN (-454550171) AND (v0.c0)), HEX(rt0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (COALESCE(('0.9972182322911444' IN ()), ((((rt0.c2)OR(v0.c0)))AND(v0.c0)), ((rt0.c2) NOT BETWEEN (-454550171) AND (v0.c0)), HEX(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(('0.9972182322911444' IN ()), ((((rt0.c2)OR(v0.c0)))AND(v0.c0)), ((rt0.c2) NOT BETWEEN (-454550171) AND (v0.c0)), HEX(rt0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (COALESCE(('0.9972182322911444' IN ()), ((((rt0.c2)OR(v0.c0)))AND(v0.c0)), ((rt0.c2) NOT BETWEEN (-454550171) AND (v0.c0)), HEX(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(0.4808078808393069)))+(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) NOT NULL))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(0.4808078808393069)))+(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT NULL))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(0.4808078808393069)))+(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) NOT NULL))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(0.4808078808393069)))+(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT NULL))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(0.4808078808393069)))+(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) NOT NULL))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.3452986203311247)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((NOT (rt0.c0)) IN ('*' COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0.3452986203311247)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((NOT (rt0.c0)) IN ('*' COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.3452986203311247)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((NOT (rt0.c0)) IN ('*' COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0.3452986203311247)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((NOT (rt0.c0)) IN ('*' COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.3452986203311247)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((NOT (rt0.c0)) IN ('*' COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ',-w]r{!' THEN rt0.c2 WHEN ((x'')>=(rt0.c0)) THEN LOWER(DISTINCT rt0.c2) WHEN CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END) ORDER BY (rt0.c1 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ',-w]r{!' THEN rt0.c2 WHEN ((x'')>=(rt0.c0)) THEN LOWER(DISTINCT rt0.c2) WHEN CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE BINARY IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ',-w]r{!' THEN rt0.c2 WHEN ((x'')>=(rt0.c0)) THEN LOWER(DISTINCT rt0.c2) WHEN CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END) ORDER BY (rt0.c1 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ',-w]r{!' THEN rt0.c2 WHEN ((x'')>=(rt0.c0)) THEN LOWER(DISTINCT rt0.c2) WHEN CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE BINARY IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ',-w]r{!' THEN rt0.c2 WHEN ((x'')>=(rt0.c0)) THEN LOWER(DISTINCT rt0.c2) WHEN CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END) ORDER BY (rt0.c1 COLLATE BINARY IN ()) ASC;
SELECT ALL * FROM rt0, v0 WHERE ((((((NOT (rt0.c1)))OR((rt0.c2 IN (rt0.c2)))))AND((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))OR((rt0.c2 IN (rt0.c2)))))AND((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((NOT (rt0.c1)))OR((rt0.c2 IN (rt0.c2)))))AND((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))OR((rt0.c2 IN (rt0.c2)))))AND((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((NOT (rt0.c1)))OR((rt0.c2 IN (rt0.c2)))))AND((~ (rt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB)) ORDER BY ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB)) ORDER BY ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB)) ORDER BY ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)*(rt0.c0)) IN (rt0.c2 COLLATE BINARY))) ORDER BY '233451783'  NULLS FIRST, rt0.c2, (((rt0.c2) ISNULL) IN (((rt0.c2)==(rt0.c1)), NULLIF(DISTINCT rt0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)*(rt0.c0)) IN (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY '233451783'  NULLS FIRST, rt0.c2, (((rt0.c2) ISNULL) IN (((rt0.c2)=(rt0.c1)), NULLIF(DISTINCT rt0.c2, rt0.c1))) ASC);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)*(rt0.c0)) IN (rt0.c2 COLLATE BINARY))) ORDER BY '233451783'  NULLS FIRST, rt0.c2, (((rt0.c2) ISNULL) IN (((rt0.c2)==(rt0.c1)), NULLIF(DISTINCT rt0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)*(rt0.c0)) IN (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY '233451783'  NULLS FIRST, rt0.c2, (((rt0.c2) ISNULL) IN (((rt0.c2)=(rt0.c1)), NULLIF(DISTINCT rt0.c2, rt0.c1))) ASC);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)*(rt0.c0)) IN (rt0.c2 COLLATE BINARY))) ORDER BY '233451783'  NULLS FIRST, rt0.c2, (((rt0.c2) ISNULL) IN (((rt0.c2)==(rt0.c1)), NULLIF(DISTINCT rt0.c2, rt0.c1))) ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY rt0.c0, v0.c0  NULLS FIRST, CAST(v0.c0 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0, v0.c0  NULLS FIRST, CAST(v0.c0 AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY rt0.c0, v0.c0  NULLS FIRST, CAST(v0.c0 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0, v0.c0  NULLS FIRST, CAST(v0.c0 AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY rt0.c0, v0.c0  NULLS FIRST, CAST(v0.c0 AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER));
SELECT * FROM v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)));
SELECT * FROM v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)));
SELECT * FROM v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0));
SELECT ALL * FROM v0, rt0 WHERE ((((((((((((((((rt0.c1, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND (('832377813', v0.c0, rt0.c0))))OR(v0.c0)))OR(v0.c0)))OR(((rt0.c2)>>(NULL)))))OR(((v0.c0) NOT NULL))))AND(((rt0.c1)||(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c1, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND (('832377813', v0.c0, rt0.c0))))OR(v0.c0)))OR(v0.c0)))OR(((rt0.c2)>>(NULL)))))OR(((v0.c0) NOT NULL))))AND(((rt0.c1)||(rt0.c2)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((((((((((((rt0.c1, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND (('832377813', v0.c0, rt0.c0))))OR(v0.c0)))OR(v0.c0)))OR(((rt0.c2)>>(NULL)))))OR(((v0.c0) NOT NULL))))AND(((rt0.c1)||(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c1, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND (('832377813', v0.c0, rt0.c0))))OR(v0.c0)))OR(v0.c0)))OR(((rt0.c2)>>(NULL)))))OR(((v0.c0) NOT NULL))))AND(((rt0.c1)||(rt0.c2)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((((((((((((rt0.c1, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND (('832377813', v0.c0, rt0.c0))))OR(v0.c0)))OR(v0.c0)))OR(((rt0.c2)>>(NULL)))))OR(((v0.c0) NOT NULL))))AND(((rt0.c1)||(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT * FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END IN ()));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) ORDER BY ((x'') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((- (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) ORDER BY ((x'') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((- (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) ORDER BY ((x'') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST(((v0.c0)GLOB(v0.c0)) AS INTEGER)) ORDER BY CASE LIKELIHOOD(x'', 0.5498532914595988)  WHEN (v0.c0 IN (v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) ELSE (('⚏L!\nS|0') NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)GLOB(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE LIKELIHOOD(x'', 0.5498532914595988)  WHEN (v0.c0 IN (v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) ELSE (('⚏L!\nS|0') NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM v0 WHERE (CAST(((v0.c0)GLOB(v0.c0)) AS INTEGER)) ORDER BY CASE LIKELIHOOD(x'', 0.5498532914595988)  WHEN (v0.c0 IN (v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) ELSE (('⚏L!\nS|0') NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)GLOB(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE LIKELIHOOD(x'', 0.5498532914595988)  WHEN (v0.c0 IN (v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) ELSE (('⚏L!\nS|0') NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM v0 WHERE (CAST(((v0.c0)GLOB(v0.c0)) AS INTEGER)) ORDER BY CASE LIKELIHOOD(x'', 0.5498532914595988)  WHEN (v0.c0 IN (v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) ELSE (('⚏L!\nS|0') NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC;
SELECT ALL * FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(rt0.c2)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(rt0.c2)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c2));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (x'') AND (COALESCE(DISTINCT rt0.c1, NULL)))) ORDER BY rtreenode(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (- (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (x'') AND (COALESCE(DISTINCT rt0.c1, NULL)))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (- (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (x'') AND (COALESCE(DISTINCT rt0.c1, NULL)))) ORDER BY rtreenode(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (- (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (x'') AND (COALESCE(DISTINCT rt0.c1, NULL)))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (- (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (x'') AND (COALESCE(DISTINCT rt0.c1, NULL)))) ORDER BY rtreenode(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (- (rt0.c1)));
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c0) NOT NULL)))) ORDER BY (- ((((rt0.c1))!=((rt0.c0))))) ASC, ((CASE x''  WHEN '-250368877' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<=(((rt0.c0)||(rt0.c0)))), (~ (-1946665288)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c1))!=((rt0.c0))))) ASC, ((CASE x''  WHEN '-250368877' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<=(((rt0.c0)||(rt0.c0)))), (~ (-1946665288)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c0) NOT NULL)))) ORDER BY (- ((((rt0.c1))!=((rt0.c0))))) ASC, ((CASE x''  WHEN '-250368877' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<=(((rt0.c0)||(rt0.c0)))), (~ (-1946665288)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c1))!=((rt0.c0))))) ASC, ((CASE x''  WHEN '-250368877' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<=(((rt0.c0)||(rt0.c0)))), (~ (-1946665288)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c0) NOT NULL)))) ORDER BY (- ((((rt0.c1))!=((rt0.c0))))) ASC, ((CASE x''  WHEN '-250368877' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<=(((rt0.c0)||(rt0.c0)))), (~ (-1946665288)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((0.4334520862549829)) BETWEEN (('-271676700')) AND ((rt0.c0))))-(NULL))) ORDER BY CAST((((v0.c0))<((rt0.c0))) AS TEXT), (((v0.c0) BETWEEN (0.10764576828503858) AND (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((0.4334520862549829)) BETWEEN (('-271676700')) AND ((rt0.c0))))-(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((v0.c0))<((rt0.c0))) AS TEXT), (((v0.c0) BETWEEN (0.10764576828503858) AND (rt0.c1)) IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((0.4334520862549829)) BETWEEN (('-271676700')) AND ((rt0.c0))))-(NULL))) ORDER BY CAST((((v0.c0))<((rt0.c0))) AS TEXT), (((v0.c0) BETWEEN (0.10764576828503858) AND (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((0.4334520862549829)) BETWEEN (('-271676700')) AND ((rt0.c0))))-(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((v0.c0))<((rt0.c0))) AS TEXT), (((v0.c0) BETWEEN (0.10764576828503858) AND (rt0.c1)) IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((0.4334520862549829)) BETWEEN (('-271676700')) AND ((rt0.c0))))-(NULL))) ORDER BY CAST((((v0.c0))<((rt0.c0))) AS TEXT), (((v0.c0) BETWEEN (0.10764576828503858) AND (rt0.c1)) IN ());
SELECT * FROM v0, rt0 WHERE (rt0.c2) ORDER BY JULIANDAY(rt0.c2 COLLATE NOCASE, (- (rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0))), '0.5828371730638398' DESC  NULLS LAST, (+ (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY JULIANDAY(rt0.c2 COLLATE NOCASE, (- (rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0))), '0.5828371730638398' DESC  NULLS LAST, (+ (rt0.c1))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (rt0.c2) ORDER BY JULIANDAY(rt0.c2 COLLATE NOCASE, (- (rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0))), '0.5828371730638398' DESC  NULLS LAST, (+ (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY JULIANDAY(rt0.c2 COLLATE NOCASE, (- (rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0))), '0.5828371730638398' DESC  NULLS LAST, (+ (rt0.c1))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (rt0.c2) ORDER BY JULIANDAY(rt0.c2 COLLATE NOCASE, (- (rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0))), '0.5828371730638398' DESC  NULLS LAST, (+ (rt0.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((NOT (rt0.c0))))) ORDER BY (((CAST(rt0.c0 AS TEXT), ((rt0.c1)/(rt0.c0)), ((rt0.c0)-(rt0.c1))))>=((rt0.c1 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), NULLIF(rt0.c1, rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c0 AS TEXT), ((rt0.c1)/(rt0.c0)), ((rt0.c0)-(rt0.c1))))>=((rt0.c1 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), NULLIF(rt0.c1, rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((NOT (rt0.c0))))) ORDER BY (((CAST(rt0.c0 AS TEXT), ((rt0.c1)/(rt0.c0)), ((rt0.c0)-(rt0.c1))))>=((rt0.c1 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), NULLIF(rt0.c1, rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c0 AS TEXT), ((rt0.c1)/(rt0.c0)), ((rt0.c0)-(rt0.c1))))>=((rt0.c1 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), NULLIF(rt0.c1, rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((NOT (rt0.c0))))) ORDER BY (((CAST(rt0.c0 AS TEXT), ((rt0.c1)/(rt0.c0)), ((rt0.c0)-(rt0.c1))))>=((rt0.c1 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), NULLIF(rt0.c1, rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(516555908 AS BLOB)) ORDER BY ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(516555908 AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(516555908 AS BLOB)) ORDER BY ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(516555908 AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(516555908 AS BLOB)) ORDER BY ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (rt0.c2 COLLATE BINARY IN ()) ASC  NULLS LAST, ((rt0.c2)/(((((rt0.c1)OR(x'')))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c2 COLLATE BINARY IN ()) ASC  NULLS LAST, ((rt0.c2)/(((((rt0.c1)OR(x'')))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (rt0.c2 COLLATE BINARY IN ()) ASC  NULLS LAST, ((rt0.c2)/(((((rt0.c1)OR(x'')))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c2 COLLATE BINARY IN ()) ASC  NULLS LAST, ((rt0.c2)/(((((rt0.c1)OR(x'')))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (rt0.c2 COLLATE BINARY IN ()) ASC  NULLS LAST, ((rt0.c2)/(((((rt0.c1)OR(x'')))AND(rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)&(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)&(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)&(rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (+ ((('-1408315878')<>(rt0.c1)))) WHERE ((((rt0.c0 IN ()))LIKE(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))LIKE(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ ((('-1408315878')!=(rt0.c1)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (+ ((('-1408315878')<>(rt0.c1)))) WHERE ((((rt0.c0 IN ()))LIKE(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))LIKE(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ ((('-1408315878')!=(rt0.c1)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (+ ((('-1408315878')<>(rt0.c1)))) WHERE ((((rt0.c0 IN ()))LIKE(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT * FROM rt0 WHERE (UPPER(((rt0.c1)IS NOT(rt0.c0)))) ORDER BY rt0.c2  NULLS LAST, (NOT (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt0.c1)IS NOT(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST, (NOT (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT * FROM rt0 WHERE (UPPER(((rt0.c1)IS NOT(rt0.c0)))) ORDER BY rt0.c2  NULLS LAST, (NOT (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt0.c1)IS NOT(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST, (NOT (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT * FROM rt0 WHERE (UPPER(((rt0.c1)IS NOT(rt0.c0)))) ORDER BY rt0.c2  NULLS LAST, (NOT (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)==(rt0.c2))) IS FALSE)) ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('rNU&G,CW'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)=(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('rNU&G,CW'))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)==(rt0.c2))) IS FALSE)) ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('rNU&G,CW'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)=(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('rNU&G,CW'))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)==(rt0.c2))) IS FALSE)) ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('rNU&G,CW'))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE (((v0.c0, v0.c0, v0.c0))!=((v0.c0, 1.97370318E9, rt0.c2)))  WHEN ((rt0.c0)AND(v0.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (NOT (rt0.c2)) THEN rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0, v0.c0, v0.c0))<>((v0.c0, 1.97370318E9, rt0.c2)))  WHEN ((rt0.c0)AND(v0.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (NOT (rt0.c2)) THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE (((v0.c0, v0.c0, v0.c0))!=((v0.c0, 1.97370318E9, rt0.c2)))  WHEN ((rt0.c0)AND(v0.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (NOT (rt0.c2)) THEN rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0, v0.c0, v0.c0))<>((v0.c0, 1.97370318E9, rt0.c2)))  WHEN ((rt0.c0)AND(v0.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (NOT (rt0.c2)) THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE (((v0.c0, v0.c0, v0.c0))!=((v0.c0, 1.97370318E9, rt0.c2)))  WHEN ((rt0.c0)AND(v0.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (NOT (rt0.c2)) THEN rt0.c2 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) ISNULL)))) ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) ISNULL)))) ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) ISNULL)))) ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1890');
SELECT SUM(count) FROM (SELECT ((x'1890') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1890');
SELECT SUM(count) FROM (SELECT ((x'1890') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1890');
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))<(((rt0.c1)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))<(((rt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))<(((rt0.c1)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))<(((rt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))<(((rt0.c1)GLOB(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(INSTR(rt0.c2, rt0.c0), rt0.c1));
SELECT SUM(count) FROM (SELECT ((json_array(INSTR(rt0.c2, rt0.c0), rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(INSTR(rt0.c2, rt0.c0), rt0.c1));
SELECT SUM(count) FROM (SELECT ((json_array(INSTR(rt0.c2, rt0.c0), rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(INSTR(rt0.c2, rt0.c0), rt0.c1));
SELECT * FROM v0, rt0 WHERE (((rt0.c2)<=((rt0.c0 IN ())))) ORDER BY ((rt0.c2) ISNULL) DESC, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<=((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2) ISNULL) DESC, rt0.c0 DESC);
SELECT * FROM v0, rt0 WHERE (((rt0.c2)<=((rt0.c0 IN ())))) ORDER BY ((rt0.c2) ISNULL) DESC, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<=((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2) ISNULL) DESC, rt0.c0 DESC);
SELECT * FROM v0, rt0 WHERE (((rt0.c2)<=((rt0.c0 IN ())))) ORDER BY ((rt0.c2) ISNULL) DESC, rt0.c0 DESC;
SELECT * FROM rt0 WHERE (0.517866677357056) ORDER BY CASE (- (rt0.c1))  WHEN rt0.c0 THEN (- (rt0.c1)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.517866677357056) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c1))  WHEN rt0.c0 THEN (- (rt0.c1)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (0.517866677357056) ORDER BY CASE (- (rt0.c1))  WHEN rt0.c0 THEN (- (rt0.c1)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.517866677357056) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c1))  WHEN rt0.c0 THEN (- (rt0.c1)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (0.517866677357056) ORDER BY CASE (- (rt0.c1))  WHEN rt0.c0 THEN (- (rt0.c1)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0)OR(v0.c0)) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN 'Pr' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END END) ORDER BY CAST(((rt0.c0)<(v0.c0)) AS INTEGER), CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN 0.13886056309644346 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)OR(v0.c0)) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN 'Pr' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END END) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c0)<(v0.c0)) AS INTEGER), CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN 0.13886056309644346 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0)OR(v0.c0)) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN 'Pr' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END END) ORDER BY CAST(((rt0.c0)<(v0.c0)) AS INTEGER), CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN 0.13886056309644346 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)OR(v0.c0)) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN 'Pr' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END END) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c0)<(v0.c0)) AS INTEGER), CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN 0.13886056309644346 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0)OR(v0.c0)) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN 'Pr' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END END) ORDER BY CAST(((rt0.c0)<(v0.c0)) AS INTEGER), CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN 0.13886056309644346 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)&(rt0.c2)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE NOCASE)>=(rt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0 COLLATE NOCASE)>=(rt0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE NOCASE)>=(rt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0 COLLATE NOCASE)>=(rt0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE NOCASE)>=(rt0.c0 COLLATE NOCASE)) ASC;
SELECT ALL * FROM v0 WHERE (((v0.c0)>(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)>(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)>(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c1))<((v0.c0)))))) ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE RTRIM DESC, (~ (TYPEOF(DISTINCT v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c1))<((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE RTRIM DESC, (~ (TYPEOF(DISTINCT v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c1))<((v0.c0)))))) ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE RTRIM DESC, (~ (TYPEOF(DISTINCT v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c1))<((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE RTRIM DESC, (~ (TYPEOF(DISTINCT v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c1))<((v0.c0)))))) ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE RTRIM DESC, (~ (TYPEOF(DISTINCT v0.c0)))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY ((((rt0.c0)<=(rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0)<=(rt0.c1))) IS TRUE));
SELECT * FROM rt0, v0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY ((((rt0.c0)<=(rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0)<=(rt0.c1))) IS TRUE));
SELECT * FROM rt0, v0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY ((((rt0.c0)<=(rt0.c1))) IS TRUE);
SELECT ALL * FROM v0 WHERE (((438460032 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((438460032 IN ()) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((438460032 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((438460032 IN ()) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((438460032 IN ()) IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c2)||(x''))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)||(x''))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c2)||(x''))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)||(x''))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c2)||(x''))))) ORDER BY rt0.c2 DESC;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c1)==(rt0.c1))) ORDER BY '5Ly' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)==(rt0.c1))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY '5Ly' DESC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c1)==(rt0.c1))) ORDER BY '5Ly' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)==(rt0.c1))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY '5Ly' DESC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c1)==(rt0.c1))) ORDER BY '5Ly' DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))>=(((v0.c0)/('1144378089')))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))>=(((v0.c0)/('1144378089'))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))>=(((v0.c0)/('1144378089')))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))>=(((v0.c0)/('1144378089'))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))>=(((v0.c0)/('1144378089')))));
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((rt0.c0) NOTNULL)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) BETWEEN (((rt0.c0) NOTNULL)) AND (x''))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((rt0.c0) NOTNULL)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) BETWEEN (((rt0.c0) NOTNULL)) AND (x''))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((rt0.c0) NOTNULL)) AND (x'')));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c2) IS TRUE))) WHERE (((((rt0.c1) ISNULL)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) AND (('g9{g0|ol%' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) AND (('g9{g0|ol%' IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c2) IS TRUE))) WHERE (((((rt0.c1) ISNULL)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) AND (('g9{g0|ol%' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) AND (('g9{g0|ol%' IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c2) IS TRUE))) WHERE (((((rt0.c1) ISNULL)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) AND (('g9{g0|ol%' IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)OR(((rt0.c1)<(rt0.c2)))))AND(CASE 1.351926697E9  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((rt0.c1)<(rt0.c2)))))AND(CASE 1.351926697E9  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)OR(((rt0.c1)<(rt0.c2)))))AND(CASE 1.351926697E9  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((rt0.c1)<(rt0.c2)))))AND(CASE 1.351926697E9  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)OR(((rt0.c1)<(rt0.c2)))))AND(CASE 1.351926697E9  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)=(rt0.c2)) COLLATE BINARY WHERE ((((NULL)) BETWEEN ((((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER))IS(rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (rt0.c2 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)=(rt0.c2)) COLLATE BINARY ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER))IS(rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (rt0.c2 IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)=(rt0.c2)) COLLATE BINARY WHERE ((((NULL)) BETWEEN ((((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER))IS(rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (rt0.c2 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)=(rt0.c2)) COLLATE BINARY ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER))IS(rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (rt0.c2 IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)=(rt0.c2)) COLLATE BINARY WHERE ((((NULL)) BETWEEN ((((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER))IS(rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (rt0.c2 IN ()) DESC;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON '(<v?FD]' WHERE ((((v0.c0 IN ()))+((rt0.c1 IN (rt0.c2))))) ORDER BY 1985796913 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))+((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON '(<v?FD]' ORDER BY 1985796913 ASC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON '(<v?FD]' WHERE ((((v0.c0 IN ()))+((rt0.c1 IN (rt0.c2))))) ORDER BY 1985796913 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))+((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON '(<v?FD]' ORDER BY 1985796913 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (~ (v0.c0)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (~ (v0.c0)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (~ (v0.c0)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (~ (v0.c0)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (~ (v0.c0)) WHERE (rt0.c0);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (('-948309110')-(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('1839250324')))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (('-948309110')-(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('1839250324')))) ASC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (('-948309110')-(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('1839250324')))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (('-948309110')-(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('1839250324')))) ASC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (('-948309110')-(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR('1839250324')))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LOWER(DISTINCT ((-862737311)IS(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((-862737311)IS(rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LOWER(DISTINCT ((-862737311)IS(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((-862737311)IS(rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LOWER(DISTINCT ((-862737311)IS(rt0.c1))));
SELECT * FROM v0 WHERE (((v0.c0)LIKE((+ (v0.c0))))) ORDER BY ((((v0.c0 IN (v0.c0))))<=((NULL)))  NULLS LAST, ((((v0.c0)IS NOT(v0.c0)))IS NOT((v0.c0 IN ()))) DESC, (- ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 IN (v0.c0))))<=((NULL)))  NULLS LAST, ((((v0.c0)IS NOT(v0.c0)))IS NOT((v0.c0 IN ()))) DESC, (- ((v0.c0 IN ())))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0)LIKE((+ (v0.c0))))) ORDER BY ((((v0.c0 IN (v0.c0))))<=((NULL)))  NULLS LAST, ((((v0.c0)IS NOT(v0.c0)))IS NOT((v0.c0 IN ()))) DESC, (- ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 IN (v0.c0))))<=((NULL)))  NULLS LAST, ((((v0.c0)IS NOT(v0.c0)))IS NOT((v0.c0 IN ()))) DESC, (- ((v0.c0 IN ())))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0)LIKE((+ (v0.c0))))) ORDER BY ((((v0.c0 IN (v0.c0))))<=((NULL)))  NULLS LAST, ((((v0.c0)IS NOT(v0.c0)))IS NOT((v0.c0 IN ()))) DESC, (- ((v0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)||(x'')))OR((rt0.c1 IN ()))))AND(((0xffffffffb5bf2231) NOT BETWEEN (rt0.c1) AND (NULL))))) ORDER BY rt0.c1 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)||(x'')))OR((rt0.c1 IN ()))))AND(((0xffffffffb5bf2231) NOT BETWEEN (rt0.c1) AND (NULL))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)||(x'')))OR((rt0.c1 IN ()))))AND(((0xffffffffb5bf2231) NOT BETWEEN (rt0.c1) AND (NULL))))) ORDER BY rt0.c1 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)||(x'')))OR((rt0.c1 IN ()))))AND(((0xffffffffb5bf2231) NOT BETWEEN (rt0.c1) AND (NULL))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)||(x'')))OR((rt0.c1 IN ()))))AND(((0xffffffffb5bf2231) NOT BETWEEN (rt0.c1) AND (NULL))))) ORDER BY rt0.c1 COLLATE BINARY DESC;
SELECT * FROM v0 WHERE (((('-1280259370', v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC), CAST(v0.c0 AS TEXT))) AND (((+ (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((('-1280259370', v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC), CAST(v0.c0 AS TEXT))) AND (((+ (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((('-1280259370', v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC), CAST(v0.c0 AS TEXT))) AND (((+ (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((('-1280259370', v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC), CAST(v0.c0 AS TEXT))) AND (((+ (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((('-1280259370', v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC), CAST(v0.c0 AS TEXT))) AND (((+ (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE NOCASE))));
SELECT ALL * FROM rt0, v0 WHERE ((((((- (rt0.c1)))AND((- (rt0.c0)))))OR((rt0.c1 IN (rt0.c0))))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))AND((- (rt0.c0)))))OR((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((((- (rt0.c1)))AND((- (rt0.c0)))))OR((rt0.c1 IN (rt0.c0))))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))AND((- (rt0.c0)))))OR((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((((- (rt0.c1)))AND((- (rt0.c0)))))OR((rt0.c1 IN (rt0.c0))))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, '-1647374352', x'', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, '-1647374352', x'', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, '-1647374352', x'', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, '-1647374352', x'', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, '-1647374352', x'', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1))))));
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN (v0.c0, ((v0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS TEXT) IN (v0.c0, ((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN (v0.c0, ((v0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS TEXT) IN (v0.c0, ((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN (v0.c0, ((v0.c0)||(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) WHERE (((-1507145826) BETWEEN (rt0.c1) AND ('M!H*v')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((-1507145826) BETWEEN (rt0.c1) AND ('M!H*v')) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) WHERE (((-1507145826) BETWEEN (rt0.c1) AND ('M!H*v')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((-1507145826) BETWEEN (rt0.c1) AND ('M!H*v')) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) WHERE (((-1507145826) BETWEEN (rt0.c1) AND ('M!H*v')) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (-800878117) AND (rt0.c0)) THEN rt0.c2 WHEN 9.58568117E8 THEN ((rt0.c1)IS NOT(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2))>=((rt0.c0))) END) ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) IN (CAST(rt0.c2 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) BETWEEN (-800878117) AND (rt0.c0)) THEN rt0.c2 WHEN 9.58568117E8 THEN ((rt0.c1)IS NOT(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2))>=((rt0.c0))) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) IN (CAST(rt0.c2 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (-800878117) AND (rt0.c0)) THEN rt0.c2 WHEN 9.58568117E8 THEN ((rt0.c1)IS NOT(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2))>=((rt0.c0))) END) ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) IN (CAST(rt0.c2 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) BETWEEN (-800878117) AND (rt0.c0)) THEN rt0.c2 WHEN 9.58568117E8 THEN ((rt0.c1)IS NOT(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2))>=((rt0.c0))) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) IN (CAST(rt0.c2 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (-800878117) AND (rt0.c0)) THEN rt0.c2 WHEN 9.58568117E8 THEN ((rt0.c1)IS NOT(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2))>=((rt0.c0))) END) ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) IN (CAST(rt0.c2 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS BLOB) WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END ELSE ((rt0.c1) NOT NULL) END) ORDER BY rt0.c1 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END ELSE ((rt0.c1) NOT NULL) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS BLOB) ORDER BY rt0.c1 COLLATE BINARY ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS BLOB) WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END ELSE ((rt0.c1) NOT NULL) END) ORDER BY rt0.c1 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END ELSE ((rt0.c1) NOT NULL) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS BLOB) ORDER BY rt0.c1 COLLATE BINARY ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS BLOB) WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END ELSE ((rt0.c1) NOT NULL) END) ORDER BY rt0.c1 COLLATE BINARY ASC;
SELECT COUNT(*) FROM v0 WHERE (((((LOWER(DISTINCT v0.c0))AND(LOWER(v0.c0))))OR(((v0.c0) NOT NULL)))) ORDER BY (json_extract(v0.c0, v0.c0) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(DISTINCT v0.c0))AND(LOWER(v0.c0))))OR(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY (json_extract(v0.c0, v0.c0) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((LOWER(DISTINCT v0.c0))AND(LOWER(v0.c0))))OR(((v0.c0) NOT NULL)))) ORDER BY (json_extract(v0.c0, v0.c0) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(DISTINCT v0.c0))AND(LOWER(v0.c0))))OR(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY (json_extract(v0.c0, v0.c0) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((LOWER(DISTINCT v0.c0))AND(LOWER(v0.c0))))OR(((v0.c0) NOT NULL)))) ORDER BY (json_extract(v0.c0, v0.c0) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, v0.c0))*(load_extension(v0.c0)))) ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT v0.c0, v0.c0))*(load_extension(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) ISNULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, v0.c0))*(load_extension(v0.c0)))) ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT v0.c0, v0.c0))*(load_extension(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) ISNULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<<(v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<<(v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<<(v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((NOT (NULL))) ORDER BY LTRIM((v0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM v0 ORDER BY LTRIM((v0.c0 IN ())) DESC);
SELECT COUNT(*) FROM v0 WHERE ((NOT (NULL))) ORDER BY LTRIM((v0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM v0 ORDER BY LTRIM((v0.c0 IN ())) DESC);
SELECT COUNT(*) FROM v0 WHERE ((NOT (NULL))) ORDER BY LTRIM((v0.c0 IN ())) DESC;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0) IS FALSE), (~ (rt0.c0)), ((NULL)<>(rt0.c0))))<=((-9.71330469E8, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((v0.c0)>=(v0.c0))))) WHERE (((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c0)|(rt0.c2))))) ORDER BY ((TRIM(rt0.c0)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0) IS FALSE), (~ (rt0.c0)), ((NULL)!=(rt0.c0))))<=((-9.71330469E8, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((v0.c0)>=(v0.c0))))) ORDER BY ((TRIM(rt0.c0)) IS TRUE)  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0) IS FALSE), (~ (rt0.c0)), ((NULL)<>(rt0.c0))))<=((-9.71330469E8, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((v0.c0)>=(v0.c0))))) WHERE (((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c0)|(rt0.c2))))) ORDER BY ((TRIM(rt0.c0)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0) IS FALSE), (~ (rt0.c0)), ((NULL)!=(rt0.c0))))<=((-9.71330469E8, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((v0.c0)>=(v0.c0))))) ORDER BY ((TRIM(rt0.c0)) IS TRUE)  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0) IS FALSE), (~ (rt0.c0)), ((NULL)<>(rt0.c0))))<=((-9.71330469E8, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((v0.c0)>=(v0.c0))))) WHERE (((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c0)|(rt0.c2))))) ORDER BY ((TRIM(rt0.c0)) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c0)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c0)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c0)) ISNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE NOCASE WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE NOCASE WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE NOCASE WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (~ (rt0.c2)) COLLATE NOCASE WHERE (CAST(rt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (~ (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (~ (rt0.c2)) COLLATE NOCASE WHERE (CAST(rt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (~ (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (~ (rt0.c2)) COLLATE NOCASE WHERE (CAST(rt0.c1 AS TEXT));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY (+ (((v0.c0)&(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (((v0.c0)&(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY (+ (((v0.c0)&(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (((v0.c0)&(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY (+ (((v0.c0)&(rt0.c0))))  NULLS FIRST;
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2)||(NULL)) THEN (~ (rt0.c1)) END WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE (NOT (rt0.c0)) END) ORDER BY 0.7458496648060772  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2)||(NULL)) THEN (~ (rt0.c1)) END ORDER BY 0.7458496648060772  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2)||(NULL)) THEN (~ (rt0.c1)) END WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE (NOT (rt0.c0)) END) ORDER BY 0.7458496648060772  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2)||(NULL)) THEN (~ (rt0.c1)) END ORDER BY 0.7458496648060772  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2)||(NULL)) THEN (~ (rt0.c1)) END WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE (NOT (rt0.c0)) END) ORDER BY 0.7458496648060772  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((- (NULL)) IN ())  NULLS LAST, CAST('O' AS TEXT) DESC  NULLS FIRST, ((json_array('0.12523505286126313', rt0.c2, rt0.c0, rt0.c2))>>(((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((- (NULL)) IN ())  NULLS LAST, CAST('O' AS TEXT) DESC  NULLS FIRST, ((json_array('0.12523505286126313', rt0.c2, rt0.c0, rt0.c2))>>(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((- (NULL)) IN ())  NULLS LAST, CAST('O' AS TEXT) DESC  NULLS FIRST, ((json_array('0.12523505286126313', rt0.c2, rt0.c0, rt0.c2))>>(((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((- (NULL)) IN ())  NULLS LAST, CAST('O' AS TEXT) DESC  NULLS FIRST, ((json_array('0.12523505286126313', rt0.c2, rt0.c0, rt0.c2))>>(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((- (NULL)) IN ())  NULLS LAST, CAST('O' AS TEXT) DESC  NULLS FIRST, ((json_array('0.12523505286126313', rt0.c2, rt0.c0, rt0.c2))>>(((rt0.c1) IS FALSE)));
SELECT * FROM rt0 INNER JOIN v0 ON (NOT (((v0.c0)IS NOT(0.6280733198431757)))) WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (CAST(rt0.c1 AS REAL)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '.}ZK' END)||((((rt0.c2, rt0.c1, rt0.c1))>((rt0.c2, rt0.c1, v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (NOT (((v0.c0)IS NOT(0.6280733198431757)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '.}ZK' END)||((((rt0.c2, rt0.c1, rt0.c1))>((rt0.c2, rt0.c1, v0.c0)))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON (NOT (((v0.c0)IS NOT(0.6280733198431757)))) WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (CAST(rt0.c1 AS REAL)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '.}ZK' END)||((((rt0.c2, rt0.c1, rt0.c1))>((rt0.c2, rt0.c1, v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (NOT (((v0.c0)IS NOT(0.6280733198431757)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '.}ZK' END)||((((rt0.c2, rt0.c1, rt0.c1))>((rt0.c2, rt0.c1, v0.c0)))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON (NOT (((v0.c0)IS NOT(0.6280733198431757)))) WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (CAST(rt0.c1 AS REAL)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '.}ZK' END)||((((rt0.c2, rt0.c1, rt0.c1))>((rt0.c2, rt0.c1, v0.c0)))))  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN NULL THEN (((rt0.c1))<((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (((rt0.c1))<((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN NULL THEN (((rt0.c1))<((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (((rt0.c1))<((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN NULL THEN (((rt0.c1))<((rt0.c0))) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY x'726158f0e29d' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY x'726158f0e29d' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY x'726158f0e29d' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY x'726158f0e29d' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY x'726158f0e29d' ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((rt0.c1)>>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CAST(((rt0.c1)==(rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1)=(rt0.c1)) AS REAL) ASC);
SELECT * FROM rt0, v0 WHERE (((rt0.c1)>>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CAST(((rt0.c1)==(rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1)=(rt0.c1)) AS REAL) ASC);
SELECT * FROM rt0, v0 WHERE (((rt0.c1)>>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CAST(((rt0.c1)==(rt0.c1)) AS REAL) ASC;
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))  WHEN ((v0.c0) ISNULL) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) END) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))  WHEN ((v0.c0) ISNULL) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))));
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))  WHEN ((v0.c0) ISNULL) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) END) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))  WHEN ((v0.c0) ISNULL) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))));
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))  WHEN ((v0.c0) ISNULL) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) END) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1)))));
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT (((rt0.c0))<(('r*h.''>7('))), 0.591944695388908));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((rt0.c0))<(('r*h.''>7('))), 0.591944695388908)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT (((rt0.c0))<(('r*h.''>7('))), 0.591944695388908));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((rt0.c0))<(('r*h.''>7('))), 0.591944695388908)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT (((rt0.c0))<(('r*h.''>7('))), 0.591944695388908));
SELECT COUNT(*) FROM v0, rt0 WHERE ('RA') ORDER BY CASE WHEN -1647374352 THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL (('RA') IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN -1647374352 THEN NULL END);
SELECT COUNT(*) FROM v0, rt0 WHERE ('RA') ORDER BY CASE WHEN -1647374352 THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL (('RA') IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN -1647374352 THEN NULL END);
SELECT COUNT(*) FROM v0, rt0 WHERE ('RA') ORDER BY CASE WHEN -1647374352 THEN NULL END;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0, v0 WHERE (UNLIKELY(DISTINCT ((NULL)IS(rt0.c0)))) ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN (v0.c0 IN ()) END, ((x'')>>(((rt0.c1)%(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((NULL)IS(rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN (v0.c0 IN ()) END, ((x'')>>(((rt0.c1)%(v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (UNLIKELY(DISTINCT ((NULL)IS(rt0.c0)))) ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN (v0.c0 IN ()) END, ((x'')>>(((rt0.c1)%(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((NULL)IS(rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN (v0.c0 IN ()) END, ((x'')>>(((rt0.c1)%(v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (UNLIKELY(DISTINCT ((NULL)IS(rt0.c0)))) ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN (v0.c0 IN ()) END, ((x'')>>(((rt0.c1)%(v0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(((rt0.c2) ISNULL))))AND(((((rt0.c2)OR(rt0.c1)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(((rt0.c2) ISNULL))))AND(((((rt0.c2)OR(rt0.c1)))AND(NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(((rt0.c2) ISNULL))))AND(((((rt0.c2)OR(rt0.c1)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(((rt0.c2) ISNULL))))AND(((((rt0.c2)OR(rt0.c1)))AND(NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(((rt0.c2) ISNULL))))AND(((((rt0.c2)OR(rt0.c1)))AND(NULL)))));
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)>(v0.c0)))));
SELECT * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '~V9\rP' END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '~V9\rP' END AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '~V9\rP' END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '~V9\rP' END AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '~V9\rP' END AS BLOB));
SELECT * FROM rt0 WHERE (((((rt0.c0)&(0.3409389920572061))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (((rt0.c0)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)&(0.3409389920572061))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (((rt0.c0)==(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)&(0.3409389920572061))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (((rt0.c0)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)&(0.3409389920572061))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (((rt0.c0)==(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)&(0.3409389920572061))) BETWEEN (((rt0.c2)<(rt0.c2))) AND (((rt0.c0)==(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c0))) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(v0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1) NOT NULL))) WHERE ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(v0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1) NOT NULL))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(v0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1) NOT NULL))) WHERE ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(v0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1) NOT NULL))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1)AND(v0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1) NOT NULL))) WHERE ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)<=(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c0)))-((((v0.c0, v0.c0, x'2565'))!=((v0.c0, v0.c0, x''))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(x'')))OR(v0.c0)))-((((v0.c0, v0.c0, x'2565'))!=((v0.c0, v0.c0, x'')))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c0)))-((((v0.c0, v0.c0, x'2565'))!=((v0.c0, v0.c0, x''))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(x'')))OR(v0.c0)))-((((v0.c0, v0.c0, x'2565'))!=((v0.c0, v0.c0, x'')))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c0)))-((((v0.c0, v0.c0, x'2565'))!=((v0.c0, v0.c0, x''))))));
SELECT * FROM rt0 WHERE ((((LIKE(rt0.c2, 0.31398958230901786)))>(((+ (rt0.c0)))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((LIKE(rt0.c2, 0.31398958230901786)))>(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY x'');
SELECT * FROM rt0 WHERE ((((LIKE(rt0.c2, 0.31398958230901786)))>(((+ (rt0.c0)))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((LIKE(rt0.c2, 0.31398958230901786)))>(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY x'');
SELECT * FROM rt0 WHERE ((((LIKE(rt0.c2, 0.31398958230901786)))>(((+ (rt0.c0)))))) ORDER BY x'';
SELECT ALL * FROM rt0, v0 WHERE ((NOT (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((NOT (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((NOT (rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(v0.c0 COLLATE RTRIM)) WHERE (rt0.c1) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((rt0.c2)<=(rt0.c0)), ((v0.c0) NOT NULL), (('') ISNULL)))!=((CAST(v0.c0 AS BLOB), LIKELIHOOD(DISTINCT rt0.c0, 0.5965088354358528), (- ('0.20282393111854546'))))), x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(v0.c0 COLLATE RTRIM)) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((rt0.c2)<=(rt0.c0)), ((v0.c0) NOT NULL), (('') ISNULL)))!=((CAST(v0.c0 AS BLOB), LIKELIHOOD(DISTINCT rt0.c0, 0.5965088354358528), (- ('0.20282393111854546'))))), x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(v0.c0 COLLATE RTRIM)) WHERE (rt0.c1) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((rt0.c2)<=(rt0.c0)), ((v0.c0) NOT NULL), (('') ISNULL)))!=((CAST(v0.c0 AS BLOB), LIKELIHOOD(DISTINCT rt0.c0, 0.5965088354358528), (- ('0.20282393111854546'))))), x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(v0.c0 COLLATE RTRIM)) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((rt0.c2)<=(rt0.c0)), ((v0.c0) NOT NULL), (('') ISNULL)))!=((CAST(v0.c0 AS BLOB), LIKELIHOOD(DISTINCT rt0.c0, 0.5965088354358528), (- ('0.20282393111854546'))))), x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(v0.c0 COLLATE RTRIM)) WHERE (rt0.c1) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE  NULLS LAST, (((((rt0.c2)<=(rt0.c0)), ((v0.c0) NOT NULL), (('') ISNULL)))!=((CAST(v0.c0 AS BLOB), LIKELIHOOD(DISTINCT rt0.c0, 0.5965088354358528), (- ('0.20282393111854546'))))), x'' ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)<>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)!=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)<>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)!=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)<>(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN '_DvK' THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN rt0.c0 THEN 0.15594015737689748 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT NULL)  WHEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN '_DvK' THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN rt0.c0 THEN 0.15594015737689748 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN '_DvK' THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN rt0.c0 THEN 0.15594015737689748 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT NULL)  WHEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN '_DvK' THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN rt0.c0 THEN 0.15594015737689748 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN '_DvK' THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN rt0.c0 THEN 0.15594015737689748 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE))OR(CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE ((rt0.c0)>>(rt0.c1))  WHEN ((rt0.c0)>>(rt0.c1)) THEN (~ (x'')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULL WHEN ((rt0.c2)*(x'')) THEN (rt0.c1 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))OR(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)>>(rt0.c1))  WHEN ((rt0.c0)>>(rt0.c1)) THEN (~ (x'')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULL WHEN ((rt0.c2)*(x'')) THEN (rt0.c1 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE))OR(CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE ((rt0.c0)>>(rt0.c1))  WHEN ((rt0.c0)>>(rt0.c1)) THEN (~ (x'')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULL WHEN ((rt0.c2)*(x'')) THEN (rt0.c1 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))OR(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)>>(rt0.c1))  WHEN ((rt0.c0)>>(rt0.c1)) THEN (~ (x'')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULL WHEN ((rt0.c2)*(x'')) THEN (rt0.c1 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE))OR(CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE ((rt0.c0)>>(rt0.c1))  WHEN ((rt0.c0)>>(rt0.c1)) THEN (~ (x'')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULL WHEN ((rt0.c2)*(x'')) THEN (rt0.c1 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1) NOTNULL))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1) NOTNULL))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1) NOTNULL))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>=(((v0.c0)<(v0.c0))))) ORDER BY highlight((~ (v0.c0)), ((v0.c0)AND(v0.c0)), ((v0.c0)GLOB(v0.c0)), CAST(v0.c0 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>=(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY highlight((~ (v0.c0)), ((v0.c0)AND(v0.c0)), ((v0.c0)GLOB(v0.c0)), CAST(v0.c0 AS REAL))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>=(((v0.c0)<(v0.c0))))) ORDER BY highlight((~ (v0.c0)), ((v0.c0)AND(v0.c0)), ((v0.c0)GLOB(v0.c0)), CAST(v0.c0 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>=(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY highlight((~ (v0.c0)), ((v0.c0)AND(v0.c0)), ((v0.c0)GLOB(v0.c0)), CAST(v0.c0 AS REAL))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((((json_quote(NULL))OR(x'')))OR(((rt0.c1) IS FALSE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((rt0.c2 IN ())))) ORDER BY CASE ((rt0.c0) BETWEEN (NULL) AND (0.3686289414281331))  WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((json_quote(NULL))OR(x'')))OR(((rt0.c1) IS FALSE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) BETWEEN (NULL) AND (0.3686289414281331))  WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END END  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((json_quote(NULL))OR(x'')))OR(((rt0.c1) IS FALSE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((rt0.c2 IN ())))) ORDER BY CASE ((rt0.c0) BETWEEN (NULL) AND (0.3686289414281331))  WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((json_quote(NULL))OR(x'')))OR(((rt0.c1) IS FALSE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) BETWEEN (NULL) AND (0.3686289414281331))  WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END END  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((json_quote(NULL))OR(x'')))OR(((rt0.c1) IS FALSE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((rt0.c2 IN ())))) ORDER BY CASE ((rt0.c0) BETWEEN (NULL) AND (0.3686289414281331))  WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END END  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c0, 'V\r', rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0, v0.c0, rt0.c1))))==((((-687199112, rt0.c1, rt0.c2))>((rt0.c1, '', NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c0, 'V\r', rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0, v0.c0, rt0.c1))))=((((-687199112, rt0.c1, rt0.c2))>((rt0.c1, '', NULL)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c0, 'V\r', rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0, v0.c0, rt0.c1))))==((((-687199112, rt0.c1, rt0.c2))>((rt0.c1, '', NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c0, 'V\r', rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0, v0.c0, rt0.c1))))=((((-687199112, rt0.c1, rt0.c2))>((rt0.c1, '', NULL)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c0, 'V\r', rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0, v0.c0, rt0.c1))))==((((-687199112, rt0.c1, rt0.c2))>((rt0.c1, '', NULL))))));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC)))) ASC);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC)))) ASC);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) DESC, (((v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC)))) ASC;
SELECT * FROM v0 WHERE (((((v0.c0) NOT NULL)) NOT NULL)) ORDER BY CAST((+ (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT NULL)) NOT NULL)) ORDER BY CAST((+ (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT NULL)) NOT NULL)) ORDER BY CAST((+ (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((0.5371159654474659 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.5371159654474659 IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((0.5371159654474659 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.5371159654474659 IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((0.5371159654474659 IN ()));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c2)))*((('1283043677')*(1239622929))))) ORDER BY UPPER(DISTINCT ((((0.5948418842591869)AND(rt0.c2)))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(rt0.c2)))*((('1283043677')*(1239622929))))) IS TRUE)  as count FROM rt0 ORDER BY UPPER(DISTINCT ((((0.5948418842591869)AND(rt0.c2)))AND(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c2)))*((('1283043677')*(1239622929))))) ORDER BY UPPER(DISTINCT ((((0.5948418842591869)AND(rt0.c2)))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(rt0.c2)))*((('1283043677')*(1239622929))))) IS TRUE)  as count FROM rt0 ORDER BY UPPER(DISTINCT ((((0.5948418842591869)AND(rt0.c2)))AND(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c2)))*((('1283043677')*(1239622929))))) ORDER BY UPPER(DISTINCT ((((0.5948418842591869)AND(rt0.c2)))AND(rt0.c2)));
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY (NOT (((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((v0.c0) NOT NULL))) ASC);
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY (NOT (((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((v0.c0) NOT NULL))) ASC);
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY (NOT (((v0.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 WHERE (HEX(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (HEX(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (HEX(CAST(rt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1) IS FALSE)) AND (1.7976931348623157E308)) WHERE (((rt0.c0)%(rt0.c2)) COLLATE NOCASE) ORDER BY ((((((((((((((((rt0.c1)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)))AND(((v0.c0)%(rt0.c0)))))OR(v0.c0)))OR((v0.c0 IN (rt0.c1)))) DESC, x'';
SELECT SUM(count) FROM (SELECT ((((rt0.c0)%(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1) IS FALSE)) AND (1.7976931348623157E308)) ORDER BY ((((((((((((((((rt0.c1)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)))AND(((v0.c0)%(rt0.c0)))))OR(v0.c0)))OR((v0.c0 IN (rt0.c1)))) DESC, x'');
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1) IS FALSE)) AND (1.7976931348623157E308)) WHERE (((rt0.c0)%(rt0.c2)) COLLATE NOCASE) ORDER BY ((((((((((((((((rt0.c1)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)))AND(((v0.c0)%(rt0.c0)))))OR(v0.c0)))OR((v0.c0 IN (rt0.c1)))) DESC, x'';
SELECT SUM(count) FROM (SELECT ((((rt0.c0)%(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1) IS FALSE)) AND (1.7976931348623157E308)) ORDER BY ((((((((((((((((rt0.c1)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)))AND(((v0.c0)%(rt0.c0)))))OR(v0.c0)))OR((v0.c0 IN (rt0.c1)))) DESC, x'');
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1) IS FALSE)) AND (1.7976931348623157E308)) WHERE (((rt0.c0)%(rt0.c2)) COLLATE NOCASE) ORDER BY ((((((((((((((((rt0.c1)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)))AND(((v0.c0)%(rt0.c0)))))OR(v0.c0)))OR((v0.c0 IN (rt0.c1)))) DESC, x'';
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) ASC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) ASC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) ASC;
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)LIKE(rt0.c1)))AND(((rt0.c0)/(rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)LIKE(rt0.c1)))AND(((rt0.c0)/(rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)LIKE(rt0.c1)))AND(((rt0.c0)/(rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)LIKE(rt0.c1)))AND(((rt0.c0)/(rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)LIKE(rt0.c1)))AND(((rt0.c0)/(rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))));
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((((x'')LIKE(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((((x'')LIKE(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((((x'')LIKE(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((((x'')LIKE(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((((x'')LIKE(v0.c0))))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)+(rt0.c1)) AS REAL) WHERE (CASE WHEN (((rt0.c2))>=((rt0.c1))) THEN CAST(v0.c0 AS TEXT) END) ORDER BY rt0.c2 DESC  NULLS LAST, ((((CASE WHEN rt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT BETWEEN (0.7104060454582461) AND (x'')))), ((((('-862737311', rt0.c1, '#2诎.c6뉠KU'))<((0.5773605973162327, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)==(v0.c0))) AND ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))>=((rt0.c1))) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)+(rt0.c1)) AS REAL) ORDER BY rt0.c2 DESC  NULLS LAST, ((((CASE WHEN rt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT BETWEEN (0.7104060454582461) AND (x'')))), ((((('-862737311', rt0.c1, '#2诎.c6뉠KU'))<((0.5773605973162327, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)=(v0.c0))) AND ((rt0.c0 IN ()))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)+(rt0.c1)) AS REAL) WHERE (CASE WHEN (((rt0.c2))>=((rt0.c1))) THEN CAST(v0.c0 AS TEXT) END) ORDER BY rt0.c2 DESC  NULLS LAST, ((((CASE WHEN rt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT BETWEEN (0.7104060454582461) AND (x'')))), ((((('-862737311', rt0.c1, '#2诎.c6뉠KU'))<((0.5773605973162327, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)==(v0.c0))) AND ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))>=((rt0.c1))) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)+(rt0.c1)) AS REAL) ORDER BY rt0.c2 DESC  NULLS LAST, ((((CASE WHEN rt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT BETWEEN (0.7104060454582461) AND (x'')))), ((((('-862737311', rt0.c1, '#2诎.c6뉠KU'))<((0.5773605973162327, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)=(v0.c0))) AND ((rt0.c0 IN ()))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c0)+(rt0.c1)) AS REAL) WHERE (CASE WHEN (((rt0.c2))>=((rt0.c1))) THEN CAST(v0.c0 AS TEXT) END) ORDER BY rt0.c2 DESC  NULLS LAST, ((((CASE WHEN rt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT BETWEEN (0.7104060454582461) AND (x'')))), ((((('-862737311', rt0.c1, '#2诎.c6뉠KU'))<((0.5773605973162327, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)==(v0.c0))) AND ((rt0.c0 IN ())));
SELECT ALL * FROM v0 WHERE ((+ ((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c0)|('')) THEN (- (v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c0)|('')) THEN (- (v0.c0)) END);
SELECT ALL * FROM v0 WHERE ((+ ((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c0)|('')) THEN (- (v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c0)|('')) THEN (- (v0.c0)) END);
SELECT ALL * FROM v0 WHERE ((+ ((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c0)|('')) THEN (- (v0.c0)) END;
SELECT * FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c2))))>=(((rt0.c0)LIKE(rt0.c2))))) ORDER BY (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN (('-97287341', rt0.c1, rt0.c2)) AND ((rt0.c2, NULL, rt0.c2)))) BETWEEN (0xffffffffc71f8bce) AND (((rt0.c1) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((rt0.c2))))>=(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN (('-97287341', rt0.c1, rt0.c2)) AND ((rt0.c2, NULL, rt0.c2)))) BETWEEN (0xffffffffc71f8bce) AND (((rt0.c1) NOTNULL))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c2))))>=(((rt0.c0)LIKE(rt0.c2))))) ORDER BY (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN (('-97287341', rt0.c1, rt0.c2)) AND ((rt0.c2, NULL, rt0.c2)))) BETWEEN (0xffffffffc71f8bce) AND (((rt0.c1) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((rt0.c2))))>=(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN (('-97287341', rt0.c1, rt0.c2)) AND ((rt0.c2, NULL, rt0.c2)))) BETWEEN (0xffffffffc71f8bce) AND (((rt0.c1) NOTNULL))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c2))))>=(((rt0.c0)LIKE(rt0.c2))))) ORDER BY (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN (('-97287341', rt0.c1, rt0.c2)) AND ((rt0.c2, NULL, rt0.c2)))) BETWEEN (0xffffffffc71f8bce) AND (((rt0.c1) NOTNULL))) ASC;
SELECT * FROM rt0, v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN NULL ELSE rt0.c2 END) AND (((rt0.c1)>=(rt0.c2))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))) THEN ((rt0.c0)>>(rt0.c1)) ELSE ((rt0.c2)>(v0.c0)) END  NULLS LAST, (~ ((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN NULL ELSE rt0.c2 END) AND (((rt0.c1)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))) THEN ((rt0.c0)>>(rt0.c1)) ELSE ((rt0.c2)>(v0.c0)) END  NULLS LAST, (~ ((rt0.c0 IN ()))) DESC);
SELECT * FROM rt0, v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN NULL ELSE rt0.c2 END) AND (((rt0.c1)>=(rt0.c2))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))) THEN ((rt0.c0)>>(rt0.c1)) ELSE ((rt0.c2)>(v0.c0)) END  NULLS LAST, (~ ((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN NULL ELSE rt0.c2 END) AND (((rt0.c1)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))) THEN ((rt0.c0)>>(rt0.c1)) ELSE ((rt0.c2)>(v0.c0)) END  NULLS LAST, (~ ((rt0.c0 IN ()))) DESC);
SELECT * FROM rt0, v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN NULL ELSE rt0.c2 END) AND (((rt0.c1)>=(rt0.c2))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))) THEN ((rt0.c0)>>(rt0.c1)) ELSE ((rt0.c2)>(v0.c0)) END  NULLS LAST, (~ ((rt0.c0 IN ()))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)||(rt0.c1)))IS NOT(((rt0.c1)>=(rt0.c0))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(CHAR(rt0.c1))))OR((0.4437295555680114 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)||(rt0.c1)))IS NOT(((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(CHAR(rt0.c1))))OR((0.4437295555680114 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)||(rt0.c1)))IS NOT(((rt0.c1)>=(rt0.c0))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(CHAR(rt0.c1))))OR((0.4437295555680114 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)||(rt0.c1)))IS NOT(((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(CHAR(rt0.c1))))OR((0.4437295555680114 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)||(rt0.c1)))IS NOT(((rt0.c1)>=(rt0.c0))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(CHAR(rt0.c1))))OR((0.4437295555680114 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE v0.c0  WHEN v0.c0 THEN 0.7152337559793727 ELSE rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN 0.7152337559793727 ELSE rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE v0.c0  WHEN v0.c0 THEN 0.7152337559793727 ELSE rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN 0.7152337559793727 ELSE rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE v0.c0  WHEN v0.c0 THEN 0.7152337559793727 ELSE rt0.c2 END COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND (0x5ebd3fbf))) ORDER BY (rt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND (0x5ebd3fbf))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c1 IN ()));
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND (0x5ebd3fbf))) ORDER BY (rt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND (0x5ebd3fbf))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c1 IN ()));
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND (0x5ebd3fbf))) ORDER BY (rt0.c1 IN ());
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<=((v0.c0, -971696397, v0.c0)))) ISNULL)) ORDER BY (v0.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0))<=((v0.c0, -971696397, v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<=((v0.c0, -971696397, v0.c0)))) ISNULL)) ORDER BY (v0.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0))<=((v0.c0, -971696397, v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<=((v0.c0, -971696397, v0.c0)))) ISNULL)) ORDER BY (v0.c0 IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CASE ('-1494203651' IN ())  WHEN (rt0.c0 IN (rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((NULL)OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ('-1494203651' IN ())  WHEN (rt0.c0 IN (rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((NULL)OR(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE ('-1494203651' IN ())  WHEN (rt0.c0 IN (rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((NULL)OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ('-1494203651' IN ())  WHEN (rt0.c0 IN (rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((NULL)OR(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE ('-1494203651' IN ())  WHEN (rt0.c0 IN (rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((NULL)OR(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)OR(x'4518')))OR((rt0.c2 IN ())))) ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)OR(x'4518')))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)OR(x'4518')))OR((rt0.c2 IN ())))) ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)OR(x'4518')))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)OR(x'4518')))OR((rt0.c2 IN ())))) ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((((((((((CAST(rt0.c1 AS INTEGER))AND((rt0.c1 IN ()))))AND(HEX(DISTINCT rt0.c2))))OR(((rt0.c1)IS(rt0.c1)))))AND((- (rt0.c1)))))OR(((rt0.c1)*(rt0.c1)))))OR((NOT (rt0.c2)))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((((CAST(rt0.c1 AS INTEGER))AND((rt0.c1 IN ()))))AND(HEX(DISTINCT rt0.c2))))OR(((rt0.c1)IS(rt0.c1)))))AND((- (rt0.c1)))))OR(((rt0.c1)*(rt0.c1)))))OR((NOT (rt0.c2)))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((((((((((CAST(rt0.c1 AS INTEGER))AND((rt0.c1 IN ()))))AND(HEX(DISTINCT rt0.c2))))OR(((rt0.c1)IS(rt0.c1)))))AND((- (rt0.c1)))))OR(((rt0.c1)*(rt0.c1)))))OR((NOT (rt0.c2)))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((((CAST(rt0.c1 AS INTEGER))AND((rt0.c1 IN ()))))AND(HEX(DISTINCT rt0.c2))))OR(((rt0.c1)IS(rt0.c1)))))AND((- (rt0.c1)))))OR(((rt0.c1)*(rt0.c1)))))OR((NOT (rt0.c2)))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((((((((((CAST(rt0.c1 AS INTEGER))AND((rt0.c1 IN ()))))AND(HEX(DISTINCT rt0.c2))))OR(((rt0.c1)IS(rt0.c1)))))AND((- (rt0.c1)))))OR(((rt0.c1)*(rt0.c1)))))OR((NOT (rt0.c2)))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))||(CASE WHEN rt0.c1 THEN rt0.c1 ELSE x'4c7d' END))) ORDER BY ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))||((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))||(CASE WHEN rt0.c1 THEN rt0.c1 ELSE x'4c7d' END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))||((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))||(CASE WHEN rt0.c1 THEN rt0.c1 ELSE x'4c7d' END))) ORDER BY ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))||((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))||(CASE WHEN rt0.c1 THEN rt0.c1 ELSE x'4c7d' END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))||((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))||(CASE WHEN rt0.c1 THEN rt0.c1 ELSE x'4c7d' END))) ORDER BY ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))||((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))) ASC;
SELECT ALL * FROM rt0 INNER JOIN v0 ON (NOT ((- (v0.c0)))) WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (NOT ((- (v0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (NOT ((- (v0.c0)))) WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (NOT ((- (v0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (NOT ((- (v0.c0)))) WHERE ((- (v0.c0)));
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c0)))<(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((((rt0.c1)<=(rt0.c2))) NOT NULL), (CAST(x'd93d' AS BLOB) IN ()) ASC  NULLS LAST, (((TYPEOF(DISTINCT rt0.c2)))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(rt0.c0)))<(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c2))) NOT NULL), (CAST(x'd93d' AS BLOB) IN ()) ASC  NULLS LAST, (((TYPEOF(DISTINCT rt0.c2)))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))))));
SELECT * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c0)))<(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((((rt0.c1)<=(rt0.c2))) NOT NULL), (CAST(x'd93d' AS BLOB) IN ()) ASC  NULLS LAST, (((TYPEOF(DISTINCT rt0.c2)))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(rt0.c0)))<(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c2))) NOT NULL), (CAST(x'd93d' AS BLOB) IN ()) ASC  NULLS LAST, (((TYPEOF(DISTINCT rt0.c2)))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))))));
SELECT * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c0)))<(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((((rt0.c1)<=(rt0.c2))) NOT NULL), (CAST(x'd93d' AS BLOB) IN ()) ASC  NULLS LAST, (((TYPEOF(DISTINCT rt0.c2)))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(x'')))AND((NULL IN (v0.c0)))))AND(((v0.c0)IS NOT(x'')))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((v0.c0 IN ())))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(v0.c0)))OR(x'')))AND((NULL IN (v0.c0)))))AND(((v0.c0)IS NOT(x'')))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(x'')))AND((NULL IN (v0.c0)))))AND(((v0.c0)IS NOT(x'')))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((v0.c0 IN ())))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(v0.c0)))OR(x'')))AND((NULL IN (v0.c0)))))AND(((v0.c0)IS NOT(x'')))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(x'')))AND((NULL IN (v0.c0)))))AND(((v0.c0)IS NOT(x'')))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((v0.c0 IN ())))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY ((((v0.c0)<(v0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<(v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY ((((v0.c0)<(v0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<(v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY ((((v0.c0)<(v0.c0))) NOT NULL);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((NULL)AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))))))OR(x'8bfc')))OR(((rt0.c1) ISNULL))))AND((- (rt0.c1))))) ORDER BY ((((((rt0.c0) NOT NULL))AND((rt0.c0 IN (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))))))OR(x'8bfc')))OR(((rt0.c1) ISNULL))))AND((- (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c0) NOT NULL))AND((rt0.c0 IN (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((NULL)AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))))))OR(x'8bfc')))OR(((rt0.c1) ISNULL))))AND((- (rt0.c1))))) ORDER BY ((((((rt0.c0) NOT NULL))AND((rt0.c0 IN (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))))))OR(x'8bfc')))OR(((rt0.c1) ISNULL))))AND((- (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c0) NOT NULL))AND((rt0.c0 IN (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((NULL)AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))))))OR(x'8bfc')))OR(((rt0.c1) ISNULL))))AND((- (rt0.c1))))) ORDER BY ((((((rt0.c0) NOT NULL))AND((rt0.c0 IN (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()) WHERE (x'');
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT * FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) IS TRUE));
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)||(rt0.c0))))) ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) DESC, (NOT (((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) DESC, (NOT (((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)||(rt0.c0))))) ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) DESC, (NOT (((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) DESC, (NOT (((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)||(rt0.c0))))) ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) DESC, (NOT (((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c2))) ISNULL)) ORDER BY ((rt0.c2 COLLATE NOCASE)*((NULL IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c2))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)*((NULL IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c2))) ISNULL)) ORDER BY ((rt0.c2 COLLATE NOCASE)*((NULL IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c2))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)*((NULL IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c2))) ISNULL)) ORDER BY ((rt0.c2 COLLATE NOCASE)*((NULL IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) WHERE (0Xffffffffc61aac5b);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffc61aac5b) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB));
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) WHERE (0Xffffffffc61aac5b);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffc61aac5b) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB));
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) WHERE (0Xffffffffc61aac5b);
SELECT * FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR('233451783')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR('233451783')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR('233451783')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR('233451783')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR('233451783')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND (((rt0.c1 IN (rt0.c2)))))) ORDER BY ((rt0.c2) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (rt0.c2)) ASC, (((NOT (rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((((x'')AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST, (('|\') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0)=(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND (((rt0.c1 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (rt0.c2)) ASC, (((NOT (rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((((x'')AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST, (('|\') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0)==(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND (((rt0.c1 IN (rt0.c2)))))) ORDER BY ((rt0.c2) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (rt0.c2)) ASC, (((NOT (rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((((x'')AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST, (('|\') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0)=(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND (((rt0.c1 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (rt0.c2)) ASC, (((NOT (rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((((x'')AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST, (('|\') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0)==(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND (((rt0.c1 IN (rt0.c2)))))) ORDER BY ((rt0.c2) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (rt0.c2)) ASC, (((NOT (rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((((x'')AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST, (('|\') NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0)=(rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (highlight(((rt0.c1)<(rt0.c2)), x'' COLLATE BINARY, (rt0.c0 IN ()), ((v0.c0) IS TRUE))) ORDER BY ((((CAST(v0.c0 AS BLOB))AND(rt0.c1)))AND((((v0.c0, rt0.c2, x'adbd'))<((v0.c0, rt0.c1, rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt0.c1)<(rt0.c2)), x'' COLLATE BINARY, (rt0.c0 IN ()), ((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CAST(v0.c0 AS BLOB))AND(rt0.c1)))AND((((v0.c0, rt0.c2, x'adbd'))<((v0.c0, rt0.c1, rt0.c2))))) DESC);
SELECT * FROM v0, rt0 WHERE (highlight(((rt0.c1)<(rt0.c2)), x'' COLLATE BINARY, (rt0.c0 IN ()), ((v0.c0) IS TRUE))) ORDER BY ((((CAST(v0.c0 AS BLOB))AND(rt0.c1)))AND((((v0.c0, rt0.c2, x'adbd'))<((v0.c0, rt0.c1, rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt0.c1)<(rt0.c2)), x'' COLLATE BINARY, (rt0.c0 IN ()), ((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CAST(v0.c0 AS BLOB))AND(rt0.c1)))AND((((v0.c0, rt0.c2, x'adbd'))<((v0.c0, rt0.c1, rt0.c2))))) DESC);
SELECT * FROM v0 WHERE (((((v0.c0)=(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (IFNULL(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)=(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (IFNULL(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)=(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (IFNULL(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)=(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (IFNULL(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)=(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (IFNULL(DISTINCT v0.c0, v0.c0))));
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2) IS FALSE))OR(((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))OR((~ (-659078229))))) ORDER BY CASE WHEN 0.050948215443391565 THEN CAST(rt0.c0 AS BLOB) ELSE (~ (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) IS FALSE))OR(((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))OR((~ (-659078229))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN 0.050948215443391565 THEN CAST(rt0.c0 AS BLOB) ELSE (~ (rt0.c0)) END ASC);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2) IS FALSE))OR(((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))OR((~ (-659078229))))) ORDER BY CASE WHEN 0.050948215443391565 THEN CAST(rt0.c0 AS BLOB) ELSE (~ (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) IS FALSE))OR(((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))OR((~ (-659078229))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN 0.050948215443391565 THEN CAST(rt0.c0 AS BLOB) ELSE (~ (rt0.c0)) END ASC);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2) IS FALSE))OR(((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))OR((~ (-659078229))))) ORDER BY CASE WHEN 0.050948215443391565 THEN CAST(rt0.c0 AS BLOB) ELSE (~ (rt0.c0)) END ASC;
SELECT * FROM v0, rt0 NOT INDEXED WHERE ('75568753') ORDER BY CAST((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('75568753') IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) AS REAL)  NULLS FIRST);
SELECT * FROM v0, rt0 NOT INDEXED WHERE ('75568753') ORDER BY CAST((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('75568753') IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) AS REAL)  NULLS FIRST);
SELECT * FROM v0, rt0 NOT INDEXED WHERE ('75568753') ORDER BY CAST((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) AS REAL)  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((rt0.c0)==(v0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c1 AS INTEGER), (((((rt0.c0))>=((v0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)=(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c1 AS INTEGER), (((((rt0.c0))>=((v0.c0)))) NOT NULL));
SELECT * FROM rt0, v0 WHERE (((rt0.c0)==(v0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c1 AS INTEGER), (((((rt0.c0))>=((v0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)=(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c1 AS INTEGER), (((((rt0.c0))>=((v0.c0)))) NOT NULL));
SELECT * FROM rt0, v0 WHERE (((rt0.c0)==(v0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c1 AS INTEGER), (((((rt0.c0))>=((v0.c0)))) NOT NULL);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0, 0.5274230052918838, rt0.c2)) BETWEEN ((GLOB(rt0.c0, 0.839945237840349), json_patch(v0.c0, rt0.c0), ((v0.c0)>(rt0.c0)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(v0.c0)), (rt0.c0 IN (rt0.c2, v0.c0)), ((rt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, 0.5274230052918838, rt0.c2)) BETWEEN ((GLOB(rt0.c0, 0.839945237840349), json_patch(v0.c0, rt0.c0), ((v0.c0)>(rt0.c0)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(v0.c0)), (rt0.c0 IN (rt0.c2, v0.c0)), ((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0, 0.5274230052918838, rt0.c2)) BETWEEN ((GLOB(rt0.c0, 0.839945237840349), json_patch(v0.c0, rt0.c0), ((v0.c0)>(rt0.c0)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(v0.c0)), (rt0.c0 IN (rt0.c2, v0.c0)), ((rt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, 0.5274230052918838, rt0.c2)) BETWEEN ((GLOB(rt0.c0, 0.839945237840349), json_patch(v0.c0, rt0.c0), ((v0.c0)>(rt0.c0)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(v0.c0)), (rt0.c0 IN (rt0.c2, v0.c0)), ((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0, 0.5274230052918838, rt0.c2)) BETWEEN ((GLOB(rt0.c0, 0.839945237840349), json_patch(v0.c0, rt0.c0), ((v0.c0)>(rt0.c0)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(v0.c0)), (rt0.c0 IN (rt0.c2, v0.c0)), ((rt0.c1) IS FALSE)))));
SELECT ALL * FROM v0, rt0 NOT INDEXED WHERE (((((~ (rt0.c2))))>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2))))>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 NOT INDEXED WHERE (((((~ (rt0.c2))))>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2))))>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 NOT INDEXED WHERE (((((~ (rt0.c2))))>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT * FROM v0, rt0 WHERE (((rt0.c2 COLLATE BINARY)LIKE(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)LIKE(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((rt0.c2 COLLATE BINARY)LIKE(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)LIKE(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((rt0.c2 COLLATE BINARY)LIKE(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) WHERE ((((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)) ORDER BY ((((x'')AND(((rt0.c2)OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) ORDER BY ((((x'')AND(((rt0.c2)OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) WHERE ((((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)) ORDER BY ((((x'')AND(((rt0.c2)OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) ORDER BY ((((x'')AND(((rt0.c2)OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) WHERE ((((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)) ORDER BY ((((x'')AND(((rt0.c2)OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN (rt0.c0 IN (rt0.c0)) ELSE (((rt0.c1, rt0.c2, x'')) BETWEEN ((0.5476712431099251, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) IS TRUE) THEN (rt0.c0 IN (rt0.c0)) ELSE (((rt0.c1, rt0.c2, x'')) BETWEEN ((0.5476712431099251, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN (rt0.c0 IN (rt0.c0)) ELSE (((rt0.c1, rt0.c2, x'')) BETWEEN ((0.5476712431099251, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) IS TRUE) THEN (rt0.c0 IN (rt0.c0)) ELSE (((rt0.c1, rt0.c2, x'')) BETWEEN ((0.5476712431099251, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN (rt0.c0 IN (rt0.c0)) ELSE (((rt0.c1, rt0.c2, x'')) BETWEEN ((0.5476712431099251, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) END);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN (NULL)));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN (NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN (NULL)));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN (NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN (NULL)));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))IS NOT((rt0.c0 IN (v0.c0))))) ORDER BY ((v0.c0)|(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))IS NOT((rt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)|(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))IS NOT((rt0.c0 IN (v0.c0))))) ORDER BY ((v0.c0)|(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))IS NOT((rt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)|(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))IS NOT((rt0.c0 IN (v0.c0))))) ORDER BY ((v0.c0)|(rt0.c2)) COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)-(rt0.c2)) COLLATE NOCASE) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)-(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)-(rt0.c2)) COLLATE NOCASE) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)-(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)-(rt0.c2)) COLLATE NOCASE) ORDER BY NULL;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT * FROM v0, rt0 WHERE ('-1222871017');
SELECT SUM(count) FROM (SELECT ALL (('-1222871017') IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('-1222871017');
SELECT SUM(count) FROM (SELECT ALL (('-1222871017') IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('-1222871017');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, ((rt0.c1) ISNULL)))!=((LOWER(DISTINCT rt0.c1), rt0.c2 COLLATE NOCASE, rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, ((rt0.c1) ISNULL)))!=((LOWER(DISTINCT rt0.c1), rt0.c2 COLLATE NOCASE, rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, ((rt0.c1) ISNULL)))!=((LOWER(DISTINCT rt0.c1), rt0.c2 COLLATE NOCASE, rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, ((rt0.c1) ISNULL)))!=((LOWER(DISTINCT rt0.c1), rt0.c2 COLLATE NOCASE, rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, ((rt0.c1) ISNULL)))!=((LOWER(DISTINCT rt0.c1), rt0.c2 COLLATE NOCASE, rt0.c1 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((rt0.c0) BETWEEN ('-1646027487') AND (v0.c0))) WHERE ((((rt0.c0 COLLATE NOCASE))<=((LIKE(v0.c0, v0.c0, 'p'))))) ORDER BY ((((v0.c0)AND(rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN '0.8945696597394941' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, CAST(((v0.c0)<<(v0.c0)) AS BLOB), (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c1)AND(rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE NOCASE))<=((LIKE(v0.c0, v0.c0, 'p'))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((rt0.c0) BETWEEN ('-1646027487') AND (v0.c0))) ORDER BY ((((v0.c0)AND(rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN '0.8945696597394941' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, CAST(((v0.c0)<<(v0.c0)) AS BLOB), (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c1)AND(rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((rt0.c0) BETWEEN ('-1646027487') AND (v0.c0))) WHERE ((((rt0.c0 COLLATE NOCASE))<=((LIKE(v0.c0, v0.c0, 'p'))))) ORDER BY ((((v0.c0)AND(rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN '0.8945696597394941' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, CAST(((v0.c0)<<(v0.c0)) AS BLOB), (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c1)AND(rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE NOCASE))<=((LIKE(v0.c0, v0.c0, 'p'))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((rt0.c0) BETWEEN ('-1646027487') AND (v0.c0))) ORDER BY ((((v0.c0)AND(rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN '0.8945696597394941' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, CAST(((v0.c0)<<(v0.c0)) AS BLOB), (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c1)AND(rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((rt0.c0) BETWEEN ('-1646027487') AND (v0.c0))) WHERE ((((rt0.c0 COLLATE NOCASE))<=((LIKE(v0.c0, v0.c0, 'p'))))) ORDER BY ((((v0.c0)AND(rt0.c2)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN '0.8945696597394941' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS FIRST, CAST(((v0.c0)<<(v0.c0)) AS BLOB), (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c1)AND(rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0))) BETWEEN (CASE '1884954495'  WHEN v0.c0 THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE))) ORDER BY CASE CASE WHEN v0.c0 THEN 0.7408794130627291 END  WHEN (v0.c0 IN ()) THEN (+ (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(v0.c0))) BETWEEN (CASE '1884954495'  WHEN v0.c0 THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c0 THEN 0.7408794130627291 END  WHEN (v0.c0 IN ()) THEN (+ (v0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0))) BETWEEN (CASE '1884954495'  WHEN v0.c0 THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE))) ORDER BY CASE CASE WHEN v0.c0 THEN 0.7408794130627291 END  WHEN (v0.c0 IN ()) THEN (+ (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(v0.c0))) BETWEEN (CASE '1884954495'  WHEN v0.c0 THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c0 THEN 0.7408794130627291 END  WHEN (v0.c0 IN ()) THEN (+ (v0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0))) BETWEEN (CASE '1884954495'  WHEN v0.c0 THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE))) ORDER BY CASE CASE WHEN v0.c0 THEN 0.7408794130627291 END  WHEN (v0.c0 IN ()) THEN (+ (v0.c0)) END;
SELECT * FROM v0 WHERE (CAST(0.685348099447818 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.685348099447818 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(0.685348099447818 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.685348099447818 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(0.685348099447818 AS TEXT));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((rt0.c1) BETWEEN (((rt0.c2)>>(v0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) BETWEEN (((rt0.c2)>>(v0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((rt0.c1) BETWEEN (((rt0.c2)>>(v0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) BETWEEN (((rt0.c2)>>(v0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((rt0.c1) BETWEEN (((rt0.c2)>>(v0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- ((rt0.c2 IN ())))) ORDER BY CAST('MG3H︙' AS TEXT) ASC, 0X6d82d183;
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST('MG3H︙' AS TEXT) ASC, 0x6d82d183);
SELECT * FROM rt0 WHERE ((- ((rt0.c2 IN ())))) ORDER BY CAST('MG3H︙' AS TEXT) ASC, 0X6d82d183;
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST('MG3H︙' AS TEXT) ASC, 0x6d82d183);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c1))) NOT NULL)) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)<=(((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>>(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)<=(((rt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c1))) NOT NULL)) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)<=(((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>>(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)<=(((rt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c1))) NOT NULL)) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)<=(((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT * FROM v0 WHERE (((0x319d13d5 COLLATE BINARY) IS FALSE)) ORDER BY (((((v0.c0, v0.c0, 1.239622929E9)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((0x319d13d5 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, 1.239622929E9)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL));
SELECT * FROM v0 WHERE (((0x319d13d5 COLLATE BINARY) IS FALSE)) ORDER BY (((((v0.c0, v0.c0, 1.239622929E9)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((0x319d13d5 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, 1.239622929E9)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL));
SELECT * FROM v0 WHERE (((0x319d13d5 COLLATE BINARY) IS FALSE)) ORDER BY (((((v0.c0, v0.c0, 1.239622929E9)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((('-1358430870', rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, 'jh', rt0.c2))))AND(rt0.c1)))AND(ROUND(0xffffffffe5efed9a, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((('-1358430870', rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, 'jh', rt0.c2))))AND(rt0.c1)))AND(ROUND(0Xffffffffe5efed9a, rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((('-1358430870', rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, 'jh', rt0.c2))))AND(rt0.c1)))AND(ROUND(0xffffffffe5efed9a, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((('-1358430870', rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, 'jh', rt0.c2))))AND(rt0.c1)))AND(ROUND(0Xffffffffe5efed9a, rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((('-1358430870', rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, 'jh', rt0.c2))))AND(rt0.c1)))AND(ROUND(0xffffffffe5efed9a, rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))))<=((HEX(0.685348099447818))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))))<=((HEX(0.685348099447818))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))))<=((HEX(0.685348099447818))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))))<=((HEX(0.685348099447818))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))))<=((HEX(0.685348099447818))))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0, CAST(v0.c0 AS REAL), CASE 'x+'  WHEN rt0.c1 THEN rt0.c2 END))!=(((+ ('k+')), CASE WHEN 0.4064595012780283 THEN rt0.c2 END, CAST(rt0.c1 AS BLOB))))) ORDER BY ((((rt0.c2)|(rt0.c0)))AND(0Xffffffff88db381f));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, CAST(v0.c0 AS REAL), CASE 'x+'  WHEN rt0.c1 THEN rt0.c2 END))<>(((+ ('k+')), CASE WHEN 0.4064595012780283 THEN rt0.c2 END, CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)|(rt0.c0)))AND(0Xffffffff88db381f)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0, CAST(v0.c0 AS REAL), CASE 'x+'  WHEN rt0.c1 THEN rt0.c2 END))!=(((+ ('k+')), CASE WHEN 0.4064595012780283 THEN rt0.c2 END, CAST(rt0.c1 AS BLOB))))) ORDER BY ((((rt0.c2)|(rt0.c0)))AND(0Xffffffff88db381f));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, CAST(v0.c0 AS REAL), CASE 'x+'  WHEN rt0.c1 THEN rt0.c2 END))<>(((+ ('k+')), CASE WHEN 0.4064595012780283 THEN rt0.c2 END, CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)|(rt0.c0)))AND(0Xffffffff88db381f)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0, CAST(v0.c0 AS REAL), CASE 'x+'  WHEN rt0.c1 THEN rt0.c2 END))!=(((+ ('k+')), CASE WHEN 0.4064595012780283 THEN rt0.c2 END, CAST(rt0.c1 AS BLOB))))) ORDER BY ((((rt0.c2)|(rt0.c0)))AND(0Xffffffff88db381f));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((0.36820860657126797)AND(rt0.c2)))AND(rt0.c2))))>((CAST(rt0.c1 AS INTEGER))))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((((0.36820860657126797)AND(rt0.c2)))AND(rt0.c2))))>((CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, rt0.c2 ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((0.36820860657126797)AND(rt0.c2)))AND(rt0.c2))))>((CAST(rt0.c1 AS INTEGER))))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((((0.36820860657126797)AND(rt0.c2)))AND(rt0.c2))))>((CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, rt0.c2 ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((0.36820860657126797)AND(rt0.c2)))AND(rt0.c2))))>((CAST(rt0.c1 AS INTEGER))))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, rt0.c2 ASC;
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM v0 CROSS JOIN rt0 ON ((CAST(NULL AS REAL)) NOT BETWEEN (v0.c0) AND (CAST(rt0.c2 AS REAL))) WHERE ((((((rt0.c0)OR(rt0.c1))))<=((((NULL)=(rt0.c0)))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c1))))<=((((NULL)==(rt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((CAST(NULL AS REAL)) NOT BETWEEN (v0.c0) AND (CAST(rt0.c2 AS REAL))) ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN rt0 ON ((CAST(NULL AS REAL)) NOT BETWEEN (v0.c0) AND (CAST(rt0.c2 AS REAL))) WHERE ((((((rt0.c0)OR(rt0.c1))))<=((((NULL)=(rt0.c0)))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c1))))<=((((NULL)==(rt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((CAST(NULL AS REAL)) NOT BETWEEN (v0.c0) AND (CAST(rt0.c2 AS REAL))) ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN rt0 ON ((CAST(NULL AS REAL)) NOT BETWEEN (v0.c0) AND (CAST(rt0.c2 AS REAL))) WHERE ((((((rt0.c0)OR(rt0.c1))))<=((((NULL)=(rt0.c0)))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('1839250324');
SELECT SUM(count) FROM (SELECT ALL (('1839250324') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1839250324');
SELECT SUM(count) FROM (SELECT ALL (('1839250324') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1839250324');
SELECT ALL * FROM v0 WHERE ((((((v0.c0))<=((v0.c0))))AND((- (v0.c0))))) ORDER BY ((v0.c0) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((v0.c0))))AND((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))<=((v0.c0))))AND((- (v0.c0))))) ORDER BY ((v0.c0) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((v0.c0))))AND((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))<=((v0.c0))))AND((- (v0.c0))))) ORDER BY ((v0.c0) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<=(x''))) NOT BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) AND (0x17f9ac0a COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(x''))) NOT BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) AND (0x17f9ac0a COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<=(x''))) NOT BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) AND (0x17f9ac0a COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(x''))) NOT BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) AND (0x17f9ac0a COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<=(x''))) NOT BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) AND (0x17f9ac0a COLLATE BINARY)));
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END IN (ABS(x''))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END IN (ABS(x'')))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END IN (ABS(x''))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END IN (ABS(x'')))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END IN (ABS(x''))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS INTEGER));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE ((((rt0.c2, NULL, '885691205')) NOT BETWEEN ((((('-1646027487', rt0.c0, rt0.c2, 0.5828371730638398, v0.c0)) BETWEEN ((rt0.c1, rt0.c2, v0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0, rt0.c1, rt0.c1))), rt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((v0.c0)GLOB(rt0.c2)), ((v0.c0) ISNULL), rt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, NULL, '885691205')) NOT BETWEEN ((((('-1646027487', rt0.c0, rt0.c2, 0.5828371730638398, v0.c0)) BETWEEN ((rt0.c1, rt0.c2, v0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0, rt0.c1, rt0.c1))), rt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((v0.c0)GLOB(rt0.c2)), ((v0.c0) ISNULL), rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE ((((rt0.c2, NULL, '885691205')) NOT BETWEEN ((((('-1646027487', rt0.c0, rt0.c2, 0.5828371730638398, v0.c0)) BETWEEN ((rt0.c1, rt0.c2, v0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0, rt0.c1, rt0.c1))), rt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((v0.c0)GLOB(rt0.c2)), ((v0.c0) ISNULL), rt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, NULL, '885691205')) NOT BETWEEN ((((('-1646027487', rt0.c0, rt0.c2, 0.5828371730638398, v0.c0)) BETWEEN ((rt0.c1, rt0.c2, v0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0, rt0.c1, rt0.c1))), rt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((v0.c0)GLOB(rt0.c2)), ((v0.c0) ISNULL), rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE ((((rt0.c2, NULL, '885691205')) NOT BETWEEN ((((('-1646027487', rt0.c0, rt0.c2, 0.5828371730638398, v0.c0)) BETWEEN ((rt0.c1, rt0.c2, v0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0, rt0.c1, rt0.c1))), rt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((v0.c0)GLOB(rt0.c2)), ((v0.c0) ISNULL), rt0.c1 COLLATE NOCASE))));
SELECT * FROM rt0, v0 WHERE (LIKE(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END, CHAR(rt0.c2), '-')) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END, CHAR(rt0.c2), '-')) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL DESC);
SELECT * FROM rt0, v0 WHERE (LIKE(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END, CHAR(rt0.c2), '-')) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END, CHAR(rt0.c2), '-')) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL DESC);
SELECT * FROM rt0, v0 WHERE (LIKE(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END, CHAR(rt0.c2), '-')) ORDER BY NULL DESC;
SELECT * FROM rt0 WHERE (((rt0.c2 IN (rt0.c1)) IN (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN (rt0.c1)) IN (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 IN (rt0.c1)) IN (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN (rt0.c1)) IN (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 IN (rt0.c1)) IN (((rt0.c1) ISNULL))));
SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))OR((+ (v0.c0)))))OR(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR((+ (v0.c0)))))OR(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))OR((+ (v0.c0)))))OR(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR((+ (v0.c0)))))OR(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))OR((+ (v0.c0)))))OR(CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY 0.3452986203311247  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.3452986203311247  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY 0.3452986203311247  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.3452986203311247  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY 0.3452986203311247  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((0.38388365237898037) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END) AND ((~ (rt0.c1)))) WHERE (CAST(LIKELIHOOD(v0.c0, 0.9596500074229102) AS INTEGER)) ORDER BY (((((((((rt0.c1 IN ()))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))OR(LIKELIHOOD(rt0.c0, 0.9155840232554503))))OR(((rt0.c0) IS TRUE))) DESC, TYPEOF(DISTINCT v0.c0 COLLATE RTRIM), 0.017926601206060933  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(v0.c0, 0.9596500074229102) AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((0.38388365237898037) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END) AND ((~ (rt0.c1)))) ORDER BY (((((((((rt0.c1 IN ()))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))OR(LIKELIHOOD(rt0.c0, 0.9155840232554503))))OR(((rt0.c0) IS TRUE))) DESC, TYPEOF(DISTINCT v0.c0 COLLATE RTRIM), 0.017926601206060933  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((0.38388365237898037) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END) AND ((~ (rt0.c1)))) WHERE (CAST(LIKELIHOOD(v0.c0, 0.9596500074229102) AS INTEGER)) ORDER BY (((((((((rt0.c1 IN ()))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))OR(LIKELIHOOD(rt0.c0, 0.9155840232554503))))OR(((rt0.c0) IS TRUE))) DESC, TYPEOF(DISTINCT v0.c0 COLLATE RTRIM), 0.017926601206060933  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(v0.c0, 0.9596500074229102) AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((0.38388365237898037) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END) AND ((~ (rt0.c1)))) ORDER BY (((((((((rt0.c1 IN ()))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))OR(LIKELIHOOD(rt0.c0, 0.9155840232554503))))OR(((rt0.c0) IS TRUE))) DESC, TYPEOF(DISTINCT v0.c0 COLLATE RTRIM), 0.017926601206060933  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((0.38388365237898037) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END) AND ((~ (rt0.c1)))) WHERE (CAST(LIKELIHOOD(v0.c0, 0.9596500074229102) AS INTEGER)) ORDER BY (((((((((rt0.c1 IN ()))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))OR(LIKELIHOOD(rt0.c0, 0.9155840232554503))))OR(((rt0.c0) IS TRUE))) DESC, TYPEOF(DISTINCT v0.c0 COLLATE RTRIM), 0.017926601206060933  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ('1187848545') ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1187848545') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('1187848545') ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1187848545') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('1187848545') ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((((((((+ (rt0.c2)))AND(COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c0, v0.c0))))AND(0.10430395749860621)))OR(((rt0.c1)<=(rt0.c1)))))AND(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c2)))AND(COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c0, v0.c0))))AND(0.10430395749860621)))OR(((rt0.c1)<=(rt0.c1)))))AND(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((((((+ (rt0.c2)))AND(COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c0, v0.c0))))AND(0.10430395749860621)))OR(((rt0.c1)<=(rt0.c1)))))AND(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c2)))AND(COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c0, v0.c0))))AND(0.10430395749860621)))OR(((rt0.c1)<=(rt0.c1)))))AND(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((((((+ (rt0.c2)))AND(COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c0, v0.c0))))AND(0.10430395749860621)))OR(((rt0.c1)<=(rt0.c1)))))AND(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (+ (rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))OR(0.23872563178858985)))AND(rt0.c2)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(rt0.c0)) WHEN rt0.c1 THEN json_array_length(v0.c0, rt0.c0) END) ORDER BY (((rt0.c1)>=(NULL)) IN (1.839250324E9))  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt0.c2)) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN v0.c0 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))OR(0.23872563178858985)))AND(rt0.c2)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(rt0.c0)) WHEN rt0.c1 THEN json_array_length(v0.c0, rt0.c0) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1)>=(NULL)) IN (1.839250324E9))  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt0.c2)) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN v0.c0 THEN rt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (+ (rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))OR(0.23872563178858985)))AND(rt0.c2)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(rt0.c0)) WHEN rt0.c1 THEN json_array_length(v0.c0, rt0.c0) END) ORDER BY (((rt0.c1)>=(NULL)) IN (1.839250324E9))  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt0.c2)) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN v0.c0 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))OR(0.23872563178858985)))AND(rt0.c2)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(rt0.c0)) WHEN rt0.c1 THEN json_array_length(v0.c0, rt0.c0) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1)>=(NULL)) IN (1.839250324E9))  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt0.c2)) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN v0.c0 THEN rt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (+ (rt0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))OR(0.23872563178858985)))AND(rt0.c2)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(rt0.c0)) WHEN rt0.c1 THEN json_array_length(v0.c0, rt0.c0) END) ORDER BY (((rt0.c1)>=(NULL)) IN (1.839250324E9))  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(rt0.c2)) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN v0.c0 THEN rt0.c1 END))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ (IFNULL(rt0.c0, 'HꡫcU4XoZ'))));
SELECT SUM(count) FROM (SELECT (((+ (IFNULL(rt0.c0, 'HꡫcU4XoZ')))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (IFNULL(rt0.c0, 'HꡫcU4XoZ'))));
SELECT SUM(count) FROM (SELECT (((+ (IFNULL(rt0.c0, 'HꡫcU4XoZ')))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (IFNULL(rt0.c0, 'HꡫcU4XoZ'))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) END);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((((((' Jr')OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) WHERE (((CAST(rt0.c2 AS TEXT))<<(((0.884369089612465)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))<<(((0.884369089612465)%(rt0.c2))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((((((' Jr')OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((((((' Jr')OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) WHERE (((CAST(rt0.c2 AS TEXT))<<(((0.884369089612465)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))<<(((0.884369089612465)%(rt0.c2))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((((((' Jr')OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((((((' Jr')OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) WHERE (((CAST(rt0.c2 AS TEXT))<<(((0.884369089612465)%(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, rt0.c2)))) ORDER BY (((((((((rt0.c0 IN ()))AND(x'32e2')))AND(((v0.c0) IS FALSE))))AND(((rt0.c2)&(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((((rt0.c0 IN ()))AND(x'32e2')))AND(((v0.c0) IS FALSE))))AND(((rt0.c2)&(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, rt0.c2)))) ORDER BY (((((((((rt0.c0 IN ()))AND(x'32e2')))AND(((v0.c0) IS FALSE))))AND(((rt0.c2)&(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((((rt0.c0 IN ()))AND(x'32e2')))AND(((v0.c0) IS FALSE))))AND(((rt0.c2)&(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, rt0.c2)))) ORDER BY (((((((((rt0.c0 IN ()))AND(x'32e2')))AND(((v0.c0) IS FALSE))))AND(((rt0.c2)&(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC))LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY GLOB(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) IS TRUE)) ASC, CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c0)) ELSE '832377813' END ASC, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY GLOB(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) IS TRUE)) ASC, CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c0)) ELSE '832377813' END ASC, rt0.c1 ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC))LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY GLOB(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) IS TRUE)) ASC, CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c0)) ELSE '832377813' END ASC, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY GLOB(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) IS TRUE)) ASC, CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c0)) ELSE '832377813' END ASC, rt0.c1 ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC))LIKE((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY GLOB(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) IS TRUE)) ASC, CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c0)) ELSE '832377813' END ASC, rt0.c1 ASC;
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CAST(((((0xffffffffa6f042fd)OR(v0.c0)))AND(v0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY CAST(((((0Xffffffffa6f042fd)OR(v0.c0)))AND(v0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CAST(((((0xffffffffa6f042fd)OR(v0.c0)))AND(v0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY CAST(((((0Xffffffffa6f042fd)OR(v0.c0)))AND(v0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CAST(((((0xffffffffa6f042fd)OR(v0.c0)))AND(v0.c0)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)<=(((rt0.c0) ISNULL))) WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)<=(((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)<=(((rt0.c0) ISNULL))) WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)<=(((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)<=(((rt0.c0) ISNULL))) WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))OR(TRIM(rt0.c1, v0.c0)))) ORDER BY CASE WHEN 0.5595524874462092 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))OR(TRIM(rt0.c1, v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN 0.5595524874462092 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))OR(TRIM(rt0.c1, v0.c0)))) ORDER BY CASE WHEN 0.5595524874462092 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))OR(TRIM(rt0.c1, v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN 0.5595524874462092 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))OR(TRIM(rt0.c1, v0.c0)))) ORDER BY CASE WHEN 0.5595524874462092 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, v0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c1))>((rt0.c2))), v0.c0, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND (((rt0.c0 IN (v0.c0)), ((rt0.c0) NOT NULL), rt0.c2 COLLATE RTRIM)))) ORDER BY (((rt0.c0 IN ()))OR(((rt0.c2)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, v0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c1))>((rt0.c2))), v0.c0, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND (((rt0.c0 IN (v0.c0)), ((rt0.c0) NOT NULL), rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0 IN ()))OR(((rt0.c2)>>(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, v0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c1))>((rt0.c2))), v0.c0, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND (((rt0.c0 IN (v0.c0)), ((rt0.c0) NOT NULL), rt0.c2 COLLATE RTRIM)))) ORDER BY (((rt0.c0 IN ()))OR(((rt0.c2)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, v0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c1))>((rt0.c2))), v0.c0, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND (((rt0.c0 IN (v0.c0)), ((rt0.c0) NOT NULL), rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0 IN ()))OR(((rt0.c2)>>(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, v0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c1))>((rt0.c2))), v0.c0, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND (((rt0.c0 IN (v0.c0)), ((rt0.c0) NOT NULL), rt0.c2 COLLATE RTRIM)))) ORDER BY (((rt0.c0 IN ()))OR(((rt0.c2)>>(rt0.c1))));
SELECT ALL * FROM rt0, v0 WHERE (((MAX(rt0.c1, rt0.c1)) BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (CAST('of诎<' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((MAX(rt0.c1, rt0.c1)) BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (CAST('of诎<' AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((MAX(rt0.c1, rt0.c1)) BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (CAST('of诎<' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((MAX(rt0.c1, rt0.c1)) BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (CAST('of诎<' AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((MAX(rt0.c1, rt0.c1)) BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (CAST('of诎<' AS INTEGER))));
SELECT * FROM rt0, v0 WHERE ((TYPEOF(rt0.c0) IN ())) ORDER BY ((((v0.c0)<=(rt0.c2)))IS NOT(x'')) DESC  NULLS FIRST, (((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END))>=((CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(rt0.c0) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)<=(rt0.c2)))IS NOT(x'')) DESC  NULLS FIRST, (((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END))>=((CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((TYPEOF(rt0.c0) IN ())) ORDER BY ((((v0.c0)<=(rt0.c2)))IS NOT(x'')) DESC  NULLS FIRST, (((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END))>=((CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(rt0.c0) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)<=(rt0.c2)))IS NOT(x'')) DESC  NULLS FIRST, (((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END))>=((CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((TYPEOF(rt0.c0) IN ())) ORDER BY ((((v0.c0)<=(rt0.c2)))IS NOT(x'')) DESC  NULLS FIRST, (((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END))>=((CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((NOT (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((NOT (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((NOT (rt0.c1)) AS TEXT));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (~ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'3a1c')))) WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (~ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'3a1c')))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (~ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'3a1c')))) WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (~ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'3a1c')))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (~ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'3a1c')))) WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL));
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2)))))) ORDER BY CAST(json_valid('0.23872563178858985') AS REAL), (+ (((rt0.c1)IS NOT(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(json_valid('0.23872563178858985') AS REAL), (+ (((rt0.c1)IS NOT(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2)))))) ORDER BY CAST(json_valid('0.23872563178858985') AS REAL), (+ (((rt0.c1)IS NOT(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(json_valid('0.23872563178858985') AS REAL), (+ (((rt0.c1)IS NOT(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2)))))) ORDER BY CAST(json_valid('0.23872563178858985') AS REAL), (+ (((rt0.c1)IS NOT(rt0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT x'4cad', (v0.c0 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT x'4cad', (v0.c0 IN (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT x'4cad', (v0.c0 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT x'4cad', (v0.c0 IN (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT x'4cad', (v0.c0 IN (v0.c0))));
SELECT * FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<>(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)!=(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<>(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)!=(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<>(v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((UPPER(rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((UPPER(rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((UPPER(rt0.c0)) IS TRUE));
SELECT ALL * FROM v0 WHERE (CASE WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 ELSE ((v0.c0) ISNULL) END) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 ELSE ((v0.c0) ISNULL) END) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 ELSE ((v0.c0) ISNULL) END) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))) ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'pA' WHEN v0.c0 THEN v0.c0 END)AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'pA' WHEN v0.c0 THEN v0.c0 END)AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))) ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'pA' WHEN v0.c0 THEN v0.c0 END)AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'pA' WHEN v0.c0 THEN v0.c0 END)AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))) ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'pA' WHEN v0.c0 THEN v0.c0 END)AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(v0.c0));
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (v0.c0))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c0) AND (v0.c0))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (v0.c0))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c0) AND (v0.c0))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (v0.c0))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS REAL)  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS REAL)  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT * FROM v0 WHERE (UNLIKELY(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UNLIKELY(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UNLIKELY(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT * FROM v0 WHERE (0xffffffffd8b743ab);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffd8b743ab) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0xffffffffd8b743ab);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffd8b743ab) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0xffffffffd8b743ab);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c0 THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) ELSE (+ (rt0.c2)) END) ORDER BY (rt0.c1 IN ())  NULLS LAST, (((v0.c0, rt0.c1, rt0.c0))>=((rt0.c2, v0.c0, rt0.c2))) COLLATE BINARY  NULLS FIRST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c1 IN ())  NULLS LAST, (((v0.c0, rt0.c1, rt0.c0))>=((rt0.c2, v0.c0, rt0.c2))) COLLATE BINARY  NULLS FIRST, rt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c0 THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) ELSE (+ (rt0.c2)) END) ORDER BY (rt0.c1 IN ())  NULLS LAST, (((v0.c0, rt0.c1, rt0.c0))>=((rt0.c2, v0.c0, rt0.c2))) COLLATE BINARY  NULLS FIRST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c1 IN ())  NULLS LAST, (((v0.c0, rt0.c1, rt0.c0))>=((rt0.c2, v0.c0, rt0.c2))) COLLATE BINARY  NULLS FIRST, rt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c0 THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) ELSE (+ (rt0.c2)) END) ORDER BY (rt0.c1 IN ())  NULLS LAST, (((v0.c0, rt0.c1, rt0.c0))>=((rt0.c2, v0.c0, rt0.c2))) COLLATE BINARY  NULLS FIRST, rt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0) IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(CAST('E?rb' AS REAL)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(CAST('E?rb' AS REAL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0) IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(CAST('E?rb' AS REAL)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(CAST('E?rb' AS REAL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0) IS FALSE))AND(CAST(rt0.c2 AS TEXT))))OR(CAST('E?rb' AS REAL)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY 215841088 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY 215841088 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY 215841088 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY 215841088 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOTNULL), ((((rt0.c2)AND(NULL)))AND(rt0.c0))))>((((rt0.c0)>(rt0.c2)), HEX(rt0.c1), ((rt0.c1) IS TRUE))))) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((rt0.c0 IN (rt0.c0)))), (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 8.32377813E8 END))<>((((rt0.c2)<>(rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOTNULL), ((((rt0.c2)AND(NULL)))AND(rt0.c0))))>((((rt0.c0)>(rt0.c2)), HEX(rt0.c1), ((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((rt0.c0 IN (rt0.c0)))), (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 8.32377813E8 END))<>((((rt0.c2)<>(rt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOTNULL), ((((rt0.c2)AND(NULL)))AND(rt0.c0))))>((((rt0.c0)>(rt0.c2)), HEX(rt0.c1), ((rt0.c1) IS TRUE))))) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((rt0.c0 IN (rt0.c0)))), (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 8.32377813E8 END))<>((((rt0.c2)<>(rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOTNULL), ((((rt0.c2)AND(NULL)))AND(rt0.c0))))>((((rt0.c0)>(rt0.c2)), HEX(rt0.c1), ((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((rt0.c0 IN (rt0.c0)))), (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 8.32377813E8 END))<>((((rt0.c2)<>(rt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOTNULL), ((((rt0.c2)AND(NULL)))AND(rt0.c0))))>((((rt0.c0)>(rt0.c2)), HEX(rt0.c1), ((rt0.c1) IS TRUE))))) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((rt0.c0 IN (rt0.c0)))), (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 8.32377813E8 END))<>((((rt0.c2)<>(rt0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((v0.c0 IN (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (- (((NULL) BETWEEN (rt0.c0) AND (0.08741175407859603))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((NULL) BETWEEN (rt0.c0) AND (0.08741175407859603)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((v0.c0 IN (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (- (((NULL) BETWEEN (rt0.c0) AND (0.08741175407859603))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((NULL) BETWEEN (rt0.c0) AND (0.08741175407859603)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((v0.c0 IN (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (- (((NULL) BETWEEN (rt0.c0) AND (0.08741175407859603))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM)>>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE v0.c0  WHEN '-274426799' THEN 0.9100034113197251 WHEN (('kfN6')AND(rt0.c1)) THEN CASE WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c2, rt0.c1) THEN rt0.c2 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)>>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE v0.c0  WHEN '-274426799' THEN 0.9100034113197251 WHEN (('kfN6')AND(rt0.c1)) THEN CASE WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c2, rt0.c1) THEN rt0.c2 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM)>>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE v0.c0  WHEN '-274426799' THEN 0.9100034113197251 WHEN (('kfN6')AND(rt0.c1)) THEN CASE WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c2, rt0.c1) THEN rt0.c2 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)>>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE v0.c0  WHEN '-274426799' THEN 0.9100034113197251 WHEN (('kfN6')AND(rt0.c1)) THEN CASE WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c2, rt0.c1) THEN rt0.c2 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM)>>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE v0.c0  WHEN '-274426799' THEN 0.9100034113197251 WHEN (('kfN6')AND(rt0.c1)) THEN CASE WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c2, rt0.c1) THEN rt0.c2 END ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) ISNULL) END);
SELECT ALL * FROM rt0, v0 WHERE ('-379856574') ORDER BY (~ ((rt0.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-379856574') IS TRUE)  as count FROM rt0, v0 ORDER BY (~ ((rt0.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ('-379856574') ORDER BY (~ ((rt0.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-379856574') IS TRUE)  as count FROM rt0, v0 ORDER BY (~ ((rt0.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ('-379856574') ORDER BY (~ ((rt0.c1 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((((((((CASE 'Q](z6T#医'  WHEN rt0.c0 THEN 184166031 END)OR(((('''{V?I')) BETWEEN ((rt0.c0)) AND ((x'55ebc4f6'))))))AND(NULL)))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c0)-(v0.c0))))) ORDER BY ((- (rt0.c1)) IN ()), (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE 'Q](z6T#医'  WHEN rt0.c0 THEN 184166031 END)OR(((('''{V?I')) BETWEEN ((rt0.c0)) AND ((x'55ebc4f6'))))))AND(NULL)))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c0)-(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((- (rt0.c1)) IN ()), (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((((((CASE 'Q](z6T#医'  WHEN rt0.c0 THEN 184166031 END)OR(((('''{V?I')) BETWEEN ((rt0.c0)) AND ((x'55ebc4f6'))))))AND(NULL)))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c0)-(v0.c0))))) ORDER BY ((- (rt0.c1)) IN ()), (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE 'Q](z6T#医'  WHEN rt0.c0 THEN 184166031 END)OR(((('''{V?I')) BETWEEN ((rt0.c0)) AND ((x'55ebc4f6'))))))AND(NULL)))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c0)-(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((- (rt0.c1)) IN ()), (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((((((CASE 'Q](z6T#医'  WHEN rt0.c0 THEN 184166031 END)OR(((('''{V?I')) BETWEEN ((rt0.c0)) AND ((x'55ebc4f6'))))))AND(NULL)))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c0)-(v0.c0))))) ORDER BY ((- (rt0.c1)) IN ()), (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((((((('379201327')AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))&(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((((('379201327')AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))&(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((((((('379201327')AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))&(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((((('379201327')AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))&(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((((((('379201327')AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))&(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c1)))/(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c1)))/(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c1)))/(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c1)))/(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c1)))/(((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE((rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0.19457821967511235 END, '3')) ORDER BY CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE((rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0.19457821967511235 END, '3')) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE((rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0.19457821967511235 END, '3')) ORDER BY CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE((rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0.19457821967511235 END, '3')) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE((rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0.19457821967511235 END, '3')) ORDER BY CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL))*(CASE WHEN 'gL' THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))*(CASE WHEN 'gL' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL))*(CASE WHEN 'gL' THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))*(CASE WHEN 'gL' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL))*(CASE WHEN 'gL' THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM rt0, v0 WHERE (CAST('' AS INTEGER)) ORDER BY ((((((((((((0.0725486668850639)AND(0xffffffffeb53e605)))AND(rt0.c1)))OR(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))AND(HEX(DISTINCT v0.c0))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND((rt0.c2 IN ()))) DESC, (~ (CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, CASE WHEN v0.c0 THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN CHANGES() WHEN rt0.c2 COLLATE BINARY THEN (('-1280259370')>=(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((0.0725486668850639)AND(0Xffffffffeb53e605)))AND(rt0.c1)))OR(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))AND(HEX(DISTINCT v0.c0))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND((rt0.c2 IN ()))) DESC, (~ (CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, CASE WHEN v0.c0 THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN CHANGES() WHEN rt0.c2 COLLATE BINARY THEN (('-1280259370')>=(rt0.c0)) END ASC);
SELECT * FROM rt0, v0 WHERE (CAST('' AS INTEGER)) ORDER BY ((((((((((((0.0725486668850639)AND(0xffffffffeb53e605)))AND(rt0.c1)))OR(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))AND(HEX(DISTINCT v0.c0))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND((rt0.c2 IN ()))) DESC, (~ (CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, CASE WHEN v0.c0 THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN CHANGES() WHEN rt0.c2 COLLATE BINARY THEN (('-1280259370')>=(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((0.0725486668850639)AND(0Xffffffffeb53e605)))AND(rt0.c1)))OR(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))AND(HEX(DISTINCT v0.c0))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND((rt0.c2 IN ()))) DESC, (~ (CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, CASE WHEN v0.c0 THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN CHANGES() WHEN rt0.c2 COLLATE BINARY THEN (('-1280259370')>=(rt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((v0.c0))>=((rt0.c2))) WHEN v0.c0 COLLATE NOCASE THEN ((((0xffffffffa8d951d2)AND(rt0.c2)))AND(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c1)OR(rt0.c0)) WHEN (+ (v0.c0)) THEN ((((rt0.c1)AND(v0.c0)))OR(v0.c0)) ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((v0.c0))>=((rt0.c2))) WHEN v0.c0 COLLATE NOCASE THEN ((((0Xffffffffa8d951d2)AND(rt0.c2)))AND(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c1)OR(rt0.c0)) WHEN (+ (v0.c0)) THEN ((((rt0.c1)AND(v0.c0)))OR(v0.c0)) ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((v0.c0))>=((rt0.c2))) WHEN v0.c0 COLLATE NOCASE THEN ((((0xffffffffa8d951d2)AND(rt0.c2)))AND(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c1)OR(rt0.c0)) WHEN (+ (v0.c0)) THEN ((((rt0.c1)AND(v0.c0)))OR(v0.c0)) ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((v0.c0))>=((rt0.c2))) WHEN v0.c0 COLLATE NOCASE THEN ((((0Xffffffffa8d951d2)AND(rt0.c2)))AND(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c1)OR(rt0.c0)) WHEN (+ (v0.c0)) THEN ((((rt0.c1)AND(v0.c0)))OR(v0.c0)) ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((v0.c0))>=((rt0.c2))) WHEN v0.c0 COLLATE NOCASE THEN ((((0xffffffffa8d951d2)AND(rt0.c2)))AND(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c1)OR(rt0.c0)) WHEN (+ (v0.c0)) THEN ((((rt0.c1)AND(v0.c0)))OR(v0.c0)) ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (rt0.c0 IN ()) WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (rt0.c0 IN ()));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (rt0.c0 IN ()) WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (rt0.c0 IN ()));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (rt0.c0 IN ()) WHERE (CAST(((rt0.c2) NOT NULL) AS BLOB));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND (((((rt0.c0, rt0.c1, rt0.c2))=((rt0.c0, rt0.c0, 139013517)))))) WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN 0x58db76d7 THEN rt0.c1 ELSE rt0.c0 END WHEN (((NULL)) NOT BETWEEN ((0.8823995475791948)) AND ((rt0.c2))) THEN (rt0.c1 IN (NULL)) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN 0X58db76d7 THEN rt0.c1 ELSE rt0.c0 END WHEN (((NULL)) NOT BETWEEN ((0.8823995475791948)) AND ((rt0.c2))) THEN (rt0.c1 IN (NULL)) ELSE rt0.c0 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND (((((rt0.c0, rt0.c1, rt0.c2))==((rt0.c0, rt0.c0, 139013517)))))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND (((((rt0.c0, rt0.c1, rt0.c2))=((rt0.c0, rt0.c0, 139013517)))))) WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN 0x58db76d7 THEN rt0.c1 ELSE rt0.c0 END WHEN (((NULL)) NOT BETWEEN ((0.8823995475791948)) AND ((rt0.c2))) THEN (rt0.c1 IN (NULL)) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN 0X58db76d7 THEN rt0.c1 ELSE rt0.c0 END WHEN (((NULL)) NOT BETWEEN ((0.8823995475791948)) AND ((rt0.c2))) THEN (rt0.c1 IN (NULL)) ELSE rt0.c0 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND (((((rt0.c0, rt0.c1, rt0.c2))==((rt0.c0, rt0.c0, 139013517)))))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND (((((rt0.c0, rt0.c1, rt0.c2))=((rt0.c0, rt0.c0, 139013517)))))) WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN CASE WHEN 0x58db76d7 THEN rt0.c1 ELSE rt0.c0 END WHEN (((NULL)) NOT BETWEEN ((0.8823995475791948)) AND ((rt0.c2))) THEN (rt0.c1 IN (NULL)) ELSE rt0.c0 END);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) ISNULL) WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))%(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))%(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) ISNULL) WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))%(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))%(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) ISNULL) WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))%(((rt0.c0) IS FALSE))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN (('-954233906', CAST(v0.c0 AS NUMERIC), CASE v0.c0  WHEN '0.7104060454582461' THEN v0.c0 ELSE v0.c0 END)) AND ((CAST(v0.c0 AS TEXT), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN (('-954233906', CAST(v0.c0 AS NUMERIC), CASE v0.c0  WHEN '0.7104060454582461' THEN v0.c0 ELSE v0.c0 END)) AND ((CAST(v0.c0 AS TEXT), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS BLOB)))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN (('-954233906', CAST(v0.c0 AS NUMERIC), CASE v0.c0  WHEN '0.7104060454582461' THEN v0.c0 ELSE v0.c0 END)) AND ((CAST(v0.c0 AS TEXT), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN (('-954233906', CAST(v0.c0 AS NUMERIC), CASE v0.c0  WHEN '0.7104060454582461' THEN v0.c0 ELSE v0.c0 END)) AND ((CAST(v0.c0 AS TEXT), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS BLOB)))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN (('-954233906', CAST(v0.c0 AS NUMERIC), CASE v0.c0  WHEN '0.7104060454582461' THEN v0.c0 ELSE v0.c0 END)) AND ((CAST(v0.c0 AS TEXT), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ABS(DISTINCT v0.c0 COLLATE NOCASE), (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ABS(DISTINCT v0.c0 COLLATE NOCASE), (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ABS(DISTINCT v0.c0 COLLATE NOCASE), (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ABS(DISTINCT v0.c0 COLLATE NOCASE), (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ABS(DISTINCT v0.c0 COLLATE NOCASE), (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((((((((CAST(rt0.c0 AS INTEGER))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))))AND(((rt0.c2)&(rt0.c1)))))OR(CASE WHEN v0.c0 THEN NULL ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS INTEGER))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))))AND(((rt0.c2)&(rt0.c1)))))OR(CASE WHEN v0.c0 THEN NULL ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((CAST(rt0.c0 AS INTEGER))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))))AND(((rt0.c2)&(rt0.c1)))))OR(CASE WHEN v0.c0 THEN NULL ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS INTEGER))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))))AND(((rt0.c2)&(rt0.c1)))))OR(CASE WHEN v0.c0 THEN NULL ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((CAST(rt0.c0 AS INTEGER))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))))AND(((rt0.c2)&(rt0.c1)))))OR(CASE WHEN v0.c0 THEN NULL ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))>=((((rt0.c2)>=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((x''))>=((((rt0.c2)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))>=((((rt0.c2)>=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((x''))>=((((rt0.c2)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))>=((((rt0.c2)>=(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c2 END IN ((((rt0.c1))<((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c2 END IN ((((rt0.c1))<((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c2 END IN ((((rt0.c1))<((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c2 END IN ((((rt0.c1))<((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c2 END IN ((((rt0.c1))<((rt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)GLOB((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)GLOB((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)GLOB((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)GLOB((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)GLOB((~ (rt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((x'')*(((rt0.c2) NOT NULL))) WHERE ('-437260902');
SELECT SUM(count) FROM (SELECT (('-437260902') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((x'')*(((rt0.c2) NOT NULL))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((x'')*(((rt0.c2) NOT NULL))) WHERE ('-437260902');
SELECT SUM(count) FROM (SELECT (('-437260902') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((x'')*(((rt0.c2) NOT NULL))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((x'')*(((rt0.c2) NOT NULL))) WHERE ('-437260902');
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>(x'415f')))>>((NOT (v0.c0))))) ORDER BY TRIM((v0.c0 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>(x'415f')))>>((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TRIM((v0.c0 IN ())) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>(x'415f')))>>((NOT (v0.c0))))) ORDER BY TRIM((v0.c0 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>(x'415f')))>>((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TRIM((v0.c0 IN ())) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>(x'415f')))>>((NOT (v0.c0))))) ORDER BY TRIM((v0.c0 IN ())) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((NULL) BETWEEN (v0.c0) AND ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((NULL) BETWEEN (v0.c0) AND ((x'' IN ()))));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((NULL) BETWEEN (v0.c0) AND ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((NULL) BETWEEN (v0.c0) AND ((x'' IN ()))));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((NULL) BETWEEN (v0.c0) AND ((x'' IN ())));
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0)=(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (NOT (v0.c0)) THEN ((((x'')AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)==(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (NOT (v0.c0)) THEN ((((x'')AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0)=(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (NOT (v0.c0)) THEN ((((x'')AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)==(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (NOT (v0.c0)) THEN ((((x'')AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0)=(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (NOT (v0.c0)) THEN ((((x'')AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) WHERE (((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(v0.c0)))OR('1144378089')))))AND(GLOB(rt0.c0, rt0.c0))))OR(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)))AND(v0.c0))) ORDER BY ((0X270dd7f6 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1)|(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(v0.c0)))OR('1144378089')))))AND(GLOB(rt0.c0, rt0.c0))))OR(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)))AND(v0.c0))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) ORDER BY ((0x270dd7f6 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1)|(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) WHERE (((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(v0.c0)))OR('1144378089')))))AND(GLOB(rt0.c0, rt0.c0))))OR(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)))AND(v0.c0))) ORDER BY ((0X270dd7f6 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1)|(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(v0.c0)))OR('1144378089')))))AND(GLOB(rt0.c0, rt0.c0))))OR(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)))AND(v0.c0))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) ORDER BY ((0x270dd7f6 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1)|(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) WHERE (((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(v0.c0)))OR('1144378089')))))AND(GLOB(rt0.c0, rt0.c0))))OR(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)))AND(v0.c0))) ORDER BY ((0X270dd7f6 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1)|(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY CASE (- ('鮲%K}'))  WHEN 0.5773605973162327 THEN CASE WHEN '*qhjS<l^' THEN '1417564987' END END ASC  NULLS LAST, ((((rt0.c0)%(rt0.c0))) IS FALSE) ASC  NULLS LAST, ((((rt0.c1) IS FALSE))%(CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (- ('鮲%K}'))  WHEN 0.5773605973162327 THEN CASE WHEN '*qhjS<l^' THEN '1417564987' END END ASC  NULLS LAST, ((((rt0.c0)%(rt0.c0))) IS FALSE) ASC  NULLS LAST, ((((rt0.c1) IS FALSE))%(CHANGES())));
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY CASE (- ('鮲%K}'))  WHEN 0.5773605973162327 THEN CASE WHEN '*qhjS<l^' THEN '1417564987' END END ASC  NULLS LAST, ((((rt0.c0)%(rt0.c0))) IS FALSE) ASC  NULLS LAST, ((((rt0.c1) IS FALSE))%(CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (- ('鮲%K}'))  WHEN 0.5773605973162327 THEN CASE WHEN '*qhjS<l^' THEN '1417564987' END END ASC  NULLS LAST, ((((rt0.c0)%(rt0.c0))) IS FALSE) ASC  NULLS LAST, ((((rt0.c1) IS FALSE))%(CHANGES())));
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY CASE (- ('鮲%K}'))  WHEN 0.5773605973162327 THEN CASE WHEN '*qhjS<l^' THEN '1417564987' END END ASC  NULLS LAST, ((((rt0.c0)%(rt0.c0))) IS FALSE) ASC  NULLS LAST, ((((rt0.c1) IS FALSE))%(CHANGES()));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c2 IN (rt0.c1)))OR(x'')))AND(((((rt0.c2)AND(v0.c0)))AND(x'3027')))) WHERE (((TYPEOF(rt0.c2)) IS FALSE)) ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))-(v0.c0)) ASC, ((NULLIF(rt0.c1, rt0.c1))IS NOT(json(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c2)) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c2 IN (rt0.c1)))OR(x'')))AND(((((rt0.c2)AND(v0.c0)))AND(x'3027')))) ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))-(v0.c0)) ASC, ((NULLIF(rt0.c1, rt0.c1))IS NOT(json(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c2 IN (rt0.c1)))OR(x'')))AND(((((rt0.c2)AND(v0.c0)))AND(x'3027')))) WHERE (((TYPEOF(rt0.c2)) IS FALSE)) ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))-(v0.c0)) ASC, ((NULLIF(rt0.c1, rt0.c1))IS NOT(json(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c2)) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c2 IN (rt0.c1)))OR(x'')))AND(((((rt0.c2)AND(v0.c0)))AND(x'3027')))) ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))-(v0.c0)) ASC, ((NULLIF(rt0.c1, rt0.c1))IS NOT(json(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c2 IN (rt0.c1)))OR(x'')))AND(((((rt0.c2)AND(v0.c0)))AND(x'3027')))) WHERE (((TYPEOF(rt0.c2)) IS FALSE)) ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))-(v0.c0)) ASC, ((NULLIF(rt0.c1, rt0.c1))IS NOT(json(v0.c0))) DESC;
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)|(0.2367088689869794))) BETWEEN (CASE WHEN rt0.c1 THEN v0.c0 END) AND (x'cde5')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(0.2367088689869794))) BETWEEN (CASE WHEN rt0.c1 THEN v0.c0 END) AND (x'cde5'))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)|(0.2367088689869794))) BETWEEN (CASE WHEN rt0.c1 THEN v0.c0 END) AND (x'cde5')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(0.2367088689869794))) BETWEEN (CASE WHEN rt0.c1 THEN v0.c0 END) AND (x'cde5'))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)|(0.2367088689869794))) BETWEEN (CASE WHEN rt0.c1 THEN v0.c0 END) AND (x'cde5')));
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT (NOT (rt0.c0))));
SELECT ALL * FROM v0 WHERE ((NOT ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT ((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN ()));
SELECT * FROM rt0 WHERE ((- ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)<>(v0.c0)))!=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)!=(v0.c0)))<>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)<>(v0.c0)))!=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)!=(v0.c0)))<>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)<>(v0.c0)))!=((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS FALSE)) ORDER BY ((((rt0.c1)*(rt0.c1)))|(((((rt0.c1)AND(rt0.c2)))OR(0xffffffffb22fc0da))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)*(rt0.c1)))|(((((rt0.c1)AND(rt0.c2)))OR(0xffffffffb22fc0da)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS FALSE)) ORDER BY ((((rt0.c1)*(rt0.c1)))|(((((rt0.c1)AND(rt0.c2)))OR(0xffffffffb22fc0da))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)*(rt0.c1)))|(((((rt0.c1)AND(rt0.c2)))OR(0xffffffffb22fc0da)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS FALSE)) ORDER BY ((((rt0.c1)*(rt0.c1)))|(((((rt0.c1)AND(rt0.c2)))OR(0xffffffffb22fc0da))));
SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((((NULL) NOT NULL))OR(ABS(rt0.c1))))OR(LOWER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((NULL) NOT NULL))OR(ABS(rt0.c1))))OR(LOWER(DISTINCT v0.c0))));
SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((((NULL) NOT NULL))OR(ABS(rt0.c1))))OR(LOWER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((NULL) NOT NULL))OR(ABS(rt0.c1))))OR(LOWER(DISTINCT v0.c0))));
SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((((NULL) NOT NULL))OR(ABS(rt0.c1))))OR(LOWER(DISTINCT v0.c0)));
SELECT * FROM rt0 WHERE ((json_array(rt0.c2, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_array(rt0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((json_array(rt0.c2, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_array(rt0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((json_array(rt0.c2, rt0.c2) IN ()));
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1))==((v0.c0))))IS NOT(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))==((v0.c0))))IS NOT(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1))==((v0.c0))))IS NOT(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))==((v0.c0))))IS NOT(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1))==((v0.c0))))IS NOT(((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ((rt0.c2 IN (v0.c0)))) WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN ((((v0.c0))<>((v0.c0)))) AND (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) NOT BETWEEN ((((v0.c0))<>((v0.c0)))) AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ((rt0.c2 IN (v0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ((rt0.c2 IN (v0.c0)))) WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN ((((v0.c0))<>((v0.c0)))) AND (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) NOT BETWEEN ((((v0.c0))<>((v0.c0)))) AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ((rt0.c2 IN (v0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (rt0.c1 COLLATE NOCASE IN ((rt0.c2 IN (v0.c0)))) WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN ((((v0.c0))<>((v0.c0)))) AND (CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.21510832050042816 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((- (v0.c0)))))) ORDER BY ((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0)==(v0.c0))) AND ((v0.c0 IN (v0.c0, v0.c0))))  NULLS LAST, (((((v0.c0))>=(('-421546391')))) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.21510832050042816 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((- (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0)=(v0.c0))) AND ((v0.c0 IN (v0.c0, v0.c0))))  NULLS LAST, (((((v0.c0))>=(('-421546391')))) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.21510832050042816 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((- (v0.c0)))))) ORDER BY ((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0)==(v0.c0))) AND ((v0.c0 IN (v0.c0, v0.c0))))  NULLS LAST, (((((v0.c0))>=(('-421546391')))) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.21510832050042816 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((- (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0)=(v0.c0))) AND ((v0.c0 IN (v0.c0, v0.c0))))  NULLS LAST, (((((v0.c0))>=(('-421546391')))) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.21510832050042816 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((- (v0.c0)))))) ORDER BY ((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0)==(v0.c0))) AND ((v0.c0 IN (v0.c0, v0.c0))))  NULLS LAST, (((((v0.c0))>=(('-421546391')))) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))  NULLS LAST, NULLIF(CASE WHEN v0.c0 THEN v0.c0 WHEN '1717936922' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))  NULLS LAST, NULLIF(CASE WHEN v0.c0 THEN v0.c0 WHEN '1717936922' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))  NULLS LAST, NULLIF(CASE WHEN v0.c0 THEN v0.c0 WHEN '1717936922' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))  NULLS LAST, NULLIF(CASE WHEN v0.c0 THEN v0.c0 WHEN '1717936922' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))  NULLS LAST, NULLIF(CASE WHEN v0.c0 THEN v0.c0 WHEN '1717936922' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0))) DESC;
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE ((((rt0.c0)OR('o0m2')))OR(''))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN (- (v0.c0)) WHEN ((x'')%(rt0.c1)) THEN (- (rt0.c1)) WHEN CAST(v0.c0 AS NUMERIC) THEN (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0))) END WHERE (((('438460032' IN (rt0.c0, rt0.c0)))LIKE(((0.19592015156200782)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((('438460032' IN (rt0.c0, rt0.c0)))LIKE(((0.19592015156200782)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE ((((rt0.c0)OR('o0m2')))OR(''))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN (- (v0.c0)) WHEN ((x'')%(rt0.c1)) THEN (- (rt0.c1)) WHEN CAST(v0.c0 AS NUMERIC) THEN (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0))) END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE ((((rt0.c0)OR('o0m2')))OR(''))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN (- (v0.c0)) WHEN ((x'')%(rt0.c1)) THEN (- (rt0.c1)) WHEN CAST(v0.c0 AS NUMERIC) THEN (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0))) END WHERE (((('438460032' IN (rt0.c0, rt0.c0)))LIKE(((0.19592015156200782)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((('438460032' IN (rt0.c0, rt0.c0)))LIKE(((0.19592015156200782)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE ((((rt0.c0)OR('o0m2')))OR(''))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN (- (v0.c0)) WHEN ((x'')%(rt0.c1)) THEN (- (rt0.c1)) WHEN CAST(v0.c0 AS NUMERIC) THEN (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0))) END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE ((((rt0.c0)OR('o0m2')))OR(''))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN (- (v0.c0)) WHEN ((x'')%(rt0.c1)) THEN (- (rt0.c1)) WHEN CAST(v0.c0 AS NUMERIC) THEN (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, v0.c0))) END WHERE (((('438460032' IN (rt0.c0, rt0.c0)))LIKE(((0.19592015156200782)>=(rt0.c1)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY IFNULL(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c0)  NULLS FIRST, (NOT ('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY IFNULL(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c0)  NULLS FIRST, (NOT ('')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY IFNULL(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c0)  NULLS FIRST, (NOT ('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY IFNULL(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c0)  NULLS FIRST, (NOT ('')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY IFNULL(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c0)  NULLS FIRST, (NOT ('')) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)%(rt0.c2))))>=((((rt0.c2)>=(rt0.c1)))))) ORDER BY ((((rt0.c1)&(rt0.c0))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)%(rt0.c2))))>=((((rt0.c2)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&(rt0.c0))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) NOT NULL))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)%(rt0.c2))))>=((((rt0.c2)>=(rt0.c1)))))) ORDER BY ((((rt0.c1)&(rt0.c0))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)%(rt0.c2))))>=((((rt0.c2)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&(rt0.c0))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) NOT NULL))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)%(rt0.c2))))>=((((rt0.c2)>=(rt0.c1)))))) ORDER BY ((((rt0.c1)&(rt0.c0))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) NOT NULL))) DESC;
SELECT ALL * FROM rt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'' COLLATE NOCASE);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 END)LIKE(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))>(((NULL)AND(rt0.c0))))) ORDER BY ((((((rt0.c2)&(v0.c0)))OR((~ (rt0.c2)))))OR(NULL)) DESC  NULLS FIRST, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))>(((NULL)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 END)LIKE(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY ((((((rt0.c2)&(v0.c0)))OR((~ (rt0.c2)))))OR(NULL)) DESC  NULLS FIRST, rt0.c1 DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 END)LIKE(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))>(((NULL)AND(rt0.c0))))) ORDER BY ((((((rt0.c2)&(v0.c0)))OR((~ (rt0.c2)))))OR(NULL)) DESC  NULLS FIRST, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))>(((NULL)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 END)LIKE(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY ((((((rt0.c2)&(v0.c0)))OR((~ (rt0.c2)))))OR(NULL)) DESC  NULLS FIRST, rt0.c1 DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 END)LIKE(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))>(((NULL)AND(rt0.c0))))) ORDER BY ((((((rt0.c2)&(v0.c0)))OR((~ (rt0.c2)))))OR(NULL)) DESC  NULLS FIRST, rt0.c1 DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN STRFTIME(v0.c0, v0.c0, 0x1d354733) THEN (v0.c0 IN ()) END) ORDER BY v0.c0 DESC, (((((v0.c0)OR(0.9348880326019947)))AND(v0.c0)) IN (((v0.c0)GLOB(v0.c0)), v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN STRFTIME(v0.c0, v0.c0, 0x1d354733) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, (((((v0.c0)OR(0.9348880326019947)))AND(v0.c0)) IN (((v0.c0)GLOB(v0.c0)), v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN STRFTIME(v0.c0, v0.c0, 0x1d354733) THEN (v0.c0 IN ()) END) ORDER BY v0.c0 DESC, (((((v0.c0)OR(0.9348880326019947)))AND(v0.c0)) IN (((v0.c0)GLOB(v0.c0)), v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN STRFTIME(v0.c0, v0.c0, 0x1d354733) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, (((((v0.c0)OR(0.9348880326019947)))AND(v0.c0)) IN (((v0.c0)GLOB(v0.c0)), v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN STRFTIME(v0.c0, v0.c0, 0x1d354733) THEN (v0.c0 IN ()) END) ORDER BY v0.c0 DESC, (((((v0.c0)OR(0.9348880326019947)))AND(v0.c0)) IN (((v0.c0)GLOB(v0.c0)), v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY NULLIF(DISTINCT 'k+', ''), CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT 'k+', ''), CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY NULLIF(DISTINCT 'k+', ''), CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT 'k+', ''), CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY NULLIF(DISTINCT 'k+', ''), CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((NULL)<=(CASE WHEN rt0.c0 THEN -1.972724814E9 END))) ORDER BY (((('')OR(v0.c0)))<=(((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(CASE WHEN rt0.c0 THEN -1.972724814E9 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((('')OR(v0.c0)))<=(((rt0.c2) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((NULL)<=(CASE WHEN rt0.c0 THEN -1.972724814E9 END))) ORDER BY (((('')OR(v0.c0)))<=(((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(CASE WHEN rt0.c0 THEN -1.972724814E9 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((('')OR(v0.c0)))<=(((rt0.c2) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((NULL)<=(CASE WHEN rt0.c0 THEN -1.972724814E9 END))) ORDER BY (((('')OR(v0.c0)))<=(((rt0.c2) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((+ ((v0.c0 IN (v0.c0))))) ORDER BY ((((v0.c0) NOT NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((('/''ଊ')IS NOT(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((('/''ଊ')IS NOT(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((+ ((v0.c0 IN (v0.c0))))) ORDER BY ((((v0.c0) NOT NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((('/''ଊ')IS NOT(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((('/''ଊ')IS NOT(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((+ ((v0.c0 IN (v0.c0))))) ORDER BY ((((v0.c0) NOT NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((('/''ଊ')IS NOT(v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)>=(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>=(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)>=(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>=(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)>=(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((v0.c0)OR(v0.c0)) COLLATE NOCASE) ORDER BY ((((x'')-(v0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((x'')-(v0.c0))) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((v0.c0)OR(v0.c0)) COLLATE NOCASE) ORDER BY ((((x'')-(v0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((x'')-(v0.c0))) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((v0.c0)OR(v0.c0)) COLLATE NOCASE) ORDER BY ((((x'')-(v0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (load_extension((((v0.c0)) NOT BETWEEN ((1839229877)) AND ((v0.c0))), ('틩fEk' IN ()))) ORDER BY (((((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-659078229))))OR(((('kNm{c[U/', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))))AND(TRIM(DISTINCT v0.c0))))OR(CAST(v0.c0 AS TEXT))))OR((((v0.c0))>=((v0.c0))))) ASC  NULLS FIRST, (((NOT (v0.c0)))GLOB(((v0.c0) NOT BETWEEN ('S㛛zz4av%%Hf') AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension((((v0.c0)) NOT BETWEEN ((1839229877)) AND ((v0.c0))), ('틩fEk' IN ()))) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-659078229))))OR(((('kNm{c[U/', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))))AND(TRIM(DISTINCT v0.c0))))OR(CAST(v0.c0 AS TEXT))))OR((((v0.c0))>=((v0.c0))))) ASC  NULLS FIRST, (((NOT (v0.c0)))GLOB(((v0.c0) NOT BETWEEN ('S㛛zz4av%%Hf') AND (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (load_extension((((v0.c0)) NOT BETWEEN ((1839229877)) AND ((v0.c0))), ('틩fEk' IN ()))) ORDER BY (((((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-659078229))))OR(((('kNm{c[U/', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))))AND(TRIM(DISTINCT v0.c0))))OR(CAST(v0.c0 AS TEXT))))OR((((v0.c0))>=((v0.c0))))) ASC  NULLS FIRST, (((NOT (v0.c0)))GLOB(((v0.c0) NOT BETWEEN ('S㛛zz4av%%Hf') AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension((((v0.c0)) NOT BETWEEN ((1839229877)) AND ((v0.c0))), ('틩fEk' IN ()))) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-659078229))))OR(((('kNm{c[U/', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))))AND(TRIM(DISTINCT v0.c0))))OR(CAST(v0.c0 AS TEXT))))OR((((v0.c0))>=((v0.c0))))) ASC  NULLS FIRST, (((NOT (v0.c0)))GLOB(((v0.c0) NOT BETWEEN ('S㛛zz4av%%Hf') AND (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0  NULLS LAST, (+ ((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, (+ ((v0.c0 IN ()))) DESC);
SELECT * FROM v0 WHERE ((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0  NULLS LAST, (+ ((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, (+ ((v0.c0 IN ()))) DESC);
SELECT * FROM v0 WHERE ((((- (v0.c0)))+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0  NULLS LAST, (+ ((v0.c0 IN ()))) DESC;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (- (((v0.c0) IS FALSE))) WHERE ((((((rt0.c0) ISNULL)))==((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))) ORDER BY ((((((((((0.08932522425101486)OR(rt0.c0)))AND(rt0.c0)))AND(0.596030050807469)))AND(rt0.c0))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND (((rt0.c2) BETWEEN ('o2fz*.p') AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) ISNULL)))==((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (- (((v0.c0) IS FALSE))) ORDER BY ((((((((((0.08932522425101486)OR(rt0.c0)))AND(rt0.c0)))AND(0.596030050807469)))AND(rt0.c0))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND (((rt0.c2) BETWEEN ('o2fz*.p') AND (rt0.c1)))) ASC);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (- (((v0.c0) IS FALSE))) WHERE ((((((rt0.c0) ISNULL)))==((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))) ORDER BY ((((((((((0.08932522425101486)OR(rt0.c0)))AND(rt0.c0)))AND(0.596030050807469)))AND(rt0.c0))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND (((rt0.c2) BETWEEN ('o2fz*.p') AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) ISNULL)))==((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (- (((v0.c0) IS FALSE))) ORDER BY ((((((((((0.08932522425101486)OR(rt0.c0)))AND(rt0.c0)))AND(0.596030050807469)))AND(rt0.c0))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND (((rt0.c2) BETWEEN ('o2fz*.p') AND (rt0.c1)))) ASC);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (- (((v0.c0) IS FALSE))) WHERE ((((((rt0.c0) ISNULL)))==((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))) ORDER BY ((((((((((0.08932522425101486)OR(rt0.c0)))AND(rt0.c0)))AND(0.596030050807469)))AND(rt0.c0))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND (((rt0.c2) BETWEEN ('o2fz*.p') AND (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 ELSE rt0.c2 COLLATE NOCASE END) ORDER BY (NOT (rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 ELSE rt0.c2 COLLATE NOCASE END) ORDER BY (NOT (rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 ELSE rt0.c2 COLLATE NOCASE END) ORDER BY (NOT (rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CHAR(CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CHAR(CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CHAR(CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CHAR(CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CHAR(CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (0.25268164197187004 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.25268164197187004 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.25268164197187004 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.25268164197187004 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.25268164197187004 COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKELY(rt0.c0) THEN (~ (rt0.c0)) WHEN (v0.c0 IN ()) THEN ((((rt0.c0)AND(NULL)))OR(rt0.c2)) WHEN ((rt0.c0)>>(NULL)) THEN rt0.c1 END) ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE x'ea92'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END ELSE ((v0.c0) NOTNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(rt0.c0) THEN (~ (rt0.c0)) WHEN (v0.c0 IN ()) THEN ((((rt0.c0)AND(NULL)))OR(rt0.c2)) WHEN ((rt0.c0)>>(NULL)) THEN rt0.c1 END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE x'ea92'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END ELSE ((v0.c0) NOTNULL) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKELY(rt0.c0) THEN (~ (rt0.c0)) WHEN (v0.c0 IN ()) THEN ((((rt0.c0)AND(NULL)))OR(rt0.c2)) WHEN ((rt0.c0)>>(NULL)) THEN rt0.c1 END) ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE x'ea92'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END ELSE ((v0.c0) NOTNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(rt0.c0) THEN (~ (rt0.c0)) WHEN (v0.c0 IN ()) THEN ((((rt0.c0)AND(NULL)))OR(rt0.c2)) WHEN ((rt0.c0)>>(NULL)) THEN rt0.c1 END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE x'ea92'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END ELSE ((v0.c0) NOTNULL) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKELY(rt0.c0) THEN (~ (rt0.c0)) WHEN (v0.c0 IN ()) THEN ((((rt0.c0)AND(NULL)))OR(rt0.c2)) WHEN ((rt0.c0)>>(NULL)) THEN rt0.c1 END) ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE x'ea92'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END ELSE ((v0.c0) NOTNULL) END ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE ((((v0.c0)OR(NULL)))AND(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE '0.897553619809654' END WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE ((((v0.c0)OR(NULL)))AND(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE '0.897553619809654' END);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE ((((v0.c0)OR(NULL)))AND(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE '0.897553619809654' END WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE ((((v0.c0)OR(NULL)))AND(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE '0.897553619809654' END);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE ((((v0.c0)OR(NULL)))AND(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE '0.897553619809654' END WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY (((('-379856574', rt0.c0, rt0.c0, rt0.c1, rt0.c2))<=((rt0.c0, rt0.c2, NULL, 2.15841088E8, rt0.c1))) IN (((v0.c0)|(rt0.c2)), '0.4064595012780283'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY (((('-379856574', rt0.c0, rt0.c0, rt0.c1, rt0.c2))<=((rt0.c0, rt0.c2, NULL, 2.15841088E8, rt0.c1))) IN (((v0.c0)|(rt0.c2)), '0.4064595012780283'))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY (((('-379856574', rt0.c0, rt0.c0, rt0.c1, rt0.c2))<=((rt0.c0, rt0.c2, NULL, 2.15841088E8, rt0.c1))) IN (((v0.c0)|(rt0.c2)), '0.4064595012780283'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY (((('-379856574', rt0.c0, rt0.c0, rt0.c1, rt0.c2))<=((rt0.c0, rt0.c2, NULL, 2.15841088E8, rt0.c1))) IN (((v0.c0)|(rt0.c2)), '0.4064595012780283'))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY (((('-379856574', rt0.c0, rt0.c0, rt0.c1, rt0.c2))<=((rt0.c0, rt0.c2, NULL, 2.15841088E8, rt0.c1))) IN (((v0.c0)|(rt0.c2)), '0.4064595012780283'))  NULLS LAST;
SELECT * FROM rt0 WHERE ((((+ (0X25f89a53))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c0))>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0x25f89a53))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c0))>((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (0X25f89a53))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c0))>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0x25f89a53))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c0))>((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (0X25f89a53))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c0))>((rt0.c1))))));
SELECT ALL * FROM v0 WHERE (CASE WHEN ((-1899006005) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((-1899006005) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) ELSE NULL END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((-1899006005) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((-1899006005) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) ELSE NULL END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((-1899006005) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) ELSE NULL END);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN v0.c0 END  WHEN (~ (v0.c0)) THEN v0.c0 WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END WHEN CASE WHEN v0.c0 THEN rt0.c1 END THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) WHEN rt0.c0 THEN ((rt0.c0) NOTNULL) WHEN (((-769019336)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN v0.c0 END) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c0 THEN v0.c0 END  WHEN (~ (v0.c0)) THEN v0.c0 WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END WHEN CASE WHEN v0.c0 THEN rt0.c1 END THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) WHEN rt0.c0 THEN ((rt0.c0) NOTNULL) WHEN (((-769019336)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN v0.c0 END) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN v0.c0 END  WHEN (~ (v0.c0)) THEN v0.c0 WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END WHEN CASE WHEN v0.c0 THEN rt0.c1 END THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) WHEN rt0.c0 THEN ((rt0.c0) NOTNULL) WHEN (((-769019336)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN v0.c0 END) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c0 THEN v0.c0 END  WHEN (~ (v0.c0)) THEN v0.c0 WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END WHEN CASE WHEN v0.c0 THEN rt0.c1 END THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) WHEN rt0.c0 THEN ((rt0.c0) NOTNULL) WHEN (((-769019336)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN v0.c0 END) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN v0.c0 END  WHEN (~ (v0.c0)) THEN v0.c0 WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END WHEN CASE WHEN v0.c0 THEN rt0.c1 END THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) WHEN rt0.c0 THEN ((rt0.c0) NOTNULL) WHEN (((-769019336)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN v0.c0 END) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(NULL)))AND('(<V?FD]')))OR(v0.c0)))AND(rt0.c2)))<<(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(NULL)))AND('(<V?FD]')))OR(v0.c0)))AND(rt0.c2)))<<(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(NULL)))AND('(<V?FD]')))OR(v0.c0)))AND(rt0.c2)))<<(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(NULL)))AND('(<V?FD]')))OR(v0.c0)))AND(rt0.c2)))<<(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(NULL)))AND('(<V?FD]')))OR(v0.c0)))AND(rt0.c2)))<<(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((ABS(DISTINCT v0.c0) IN (((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT v0.c0) IN (((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((ABS(DISTINCT v0.c0) IN (((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT v0.c0) IN (((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((ABS(DISTINCT v0.c0) IN (((rt0.c2)LIKE(rt0.c2)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0))!=((rt0.c2))) COLLATE RTRIM) ORDER BY (((((+ (rt0.c0)))OR(((v0.c0) IS TRUE))))OR(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))!=((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((+ (rt0.c0)))OR(((v0.c0) IS TRUE))))OR(rt0.c1)) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0))!=((rt0.c2))) COLLATE RTRIM) ORDER BY (((((+ (rt0.c0)))OR(((v0.c0) IS TRUE))))OR(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))!=((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((+ (rt0.c0)))OR(((v0.c0) IS TRUE))))OR(rt0.c1)) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0))!=((rt0.c2))) COLLATE RTRIM) ORDER BY (((((+ (rt0.c0)))OR(((v0.c0) IS TRUE))))OR(rt0.c1)) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULLIF(CAST(rt0.c2 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(rt0.c2 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULLIF(CAST(rt0.c2 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(rt0.c2 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULLIF(CAST(rt0.c2 AS NUMERIC), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((v0.c0 IN (x'dcd6')))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c0 AS REAL))))AND((NOT (x'')))))AND(x''))) ORDER BY ((LIKELIHOOD(v0.c0, 0.9393505774236746)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((v0.c0 IN (x'dcd6')))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c0 AS REAL))))AND((NOT (x'')))))AND(x''))) IS TRUE)  as count FROM v0 ORDER BY ((LIKELIHOOD(v0.c0, 0.9393505774236746)) NOTNULL) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((v0.c0 IN (x'dcd6')))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c0 AS REAL))))AND((NOT (x'')))))AND(x''))) ORDER BY ((LIKELIHOOD(v0.c0, 0.9393505774236746)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((v0.c0 IN (x'dcd6')))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c0 AS REAL))))AND((NOT (x'')))))AND(x''))) IS TRUE)  as count FROM v0 ORDER BY ((LIKELIHOOD(v0.c0, 0.9393505774236746)) NOTNULL) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((v0.c0 IN (x'dcd6')))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c0 AS REAL))))AND((NOT (x'')))))AND(x''))) ORDER BY ((LIKELIHOOD(v0.c0, 0.9393505774236746)) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0)-(rt0.c1)))))OR(json_array(rt0.c1, rt0.c1)))) ORDER BY ((json_valid(rt0.c1))GLOB((rt0.c2 IN (rt0.c2)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN (~ (rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0)-(rt0.c1)))))OR(json_array(rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((json_valid(rt0.c1))GLOB((rt0.c2 IN (rt0.c2)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN (~ (rt0.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0)-(rt0.c1)))))OR(json_array(rt0.c1, rt0.c1)))) ORDER BY ((json_valid(rt0.c1))GLOB((rt0.c2 IN (rt0.c2)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN (~ (rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0)-(rt0.c1)))))OR(json_array(rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((json_valid(rt0.c1))GLOB((rt0.c2 IN (rt0.c2)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN (~ (rt0.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0)-(rt0.c1)))))OR(json_array(rt0.c1, rt0.c1)))) ORDER BY ((json_valid(rt0.c1))GLOB((rt0.c2 IN (rt0.c2)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN (~ (rt0.c1)) END  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((((((((((('tB{w]z1ᕍ')AND(v0.c0)))OR(v0.c0)))AND((- (v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)))AND(v0.c0 COLLATE RTRIM)) ASC, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN CAST(v0.c0 AS TEXT) THEN UNLIKELY(v0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY (((((((((((('tB{w]z1ᕍ')AND(v0.c0)))OR(v0.c0)))AND((- (v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)))AND(v0.c0 COLLATE RTRIM)) ASC, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN CAST(v0.c0 AS TEXT) THEN UNLIKELY(v0.c0) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((((((((((('tB{w]z1ᕍ')AND(v0.c0)))OR(v0.c0)))AND((- (v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)))AND(v0.c0 COLLATE RTRIM)) ASC, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN CAST(v0.c0 AS TEXT) THEN UNLIKELY(v0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY (((((((((((('tB{w]z1ᕍ')AND(v0.c0)))OR(v0.c0)))AND((- (v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)))AND(v0.c0 COLLATE RTRIM)) ASC, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN CAST(v0.c0 AS TEXT) THEN UNLIKELY(v0.c0) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((((((((((('tB{w]z1ᕍ')AND(v0.c0)))OR(v0.c0)))AND((- (v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)))AND(v0.c0 COLLATE RTRIM)) ASC, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN CAST(v0.c0 AS TEXT) THEN UNLIKELY(v0.c0) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2))==((NULL, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))<<(CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2))==((NULL, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))<<(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2))==((NULL, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))<<(CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2))==((NULL, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))<<(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2))==((NULL, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))<<(CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN v0.c0 END AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN v0.c0 END AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 END AS REAL));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (0.46104660603232994)))<(rt0.c0 COLLATE NOCASE)) WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (0.46104660603232994)))<(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (0.46104660603232994)))<(rt0.c0 COLLATE NOCASE)) WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (0.46104660603232994)))<(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (0.46104660603232994)))<(rt0.c0 COLLATE NOCASE)) WHERE ((NOT (rt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (0.35228448656985845);
SELECT SUM(count) FROM (SELECT ALL ((0.35228448656985845) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.35228448656985845);
SELECT SUM(count) FROM (SELECT ALL ((0.35228448656985845) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.35228448656985845);
SELECT * FROM rt0 WHERE ((((rt0.c0))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(0.4437295555680114)))))) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC, (((+ (rt0.c2)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(0.4437295555680114)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC, (((+ (rt0.c2)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC, rt0.c1 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(0.4437295555680114)))))) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC, (((+ (rt0.c2)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(0.4437295555680114)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC, (((+ (rt0.c2)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC, rt0.c1 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(0.4437295555680114)))))) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC, (((+ (rt0.c2)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC, rt0.c1 ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, 2.90872036E8, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)), CAST(v0.c0 AS BLOB), ((-659123853)>=(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((UNLIKELY(v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL), ((v0.c0) IS FALSE))))) ORDER BY ((((((((((v0.c0)<=(v0.c0)))AND(((v0.c0)!=(v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (-1.489309338E9)))))AND((NULL IN (v0.c0)))))OR(((v0.c0)IS NOT(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, 2.90872036E8, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)), CAST(v0.c0 AS BLOB), ((-659123853)>=(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((UNLIKELY(v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL), ((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)<=(v0.c0)))AND(((v0.c0)<>(v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (-1.489309338E9)))))AND((NULL IN (v0.c0)))))OR(((v0.c0)IS NOT(v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, 2.90872036E8, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)), CAST(v0.c0 AS BLOB), ((-659123853)>=(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((UNLIKELY(v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL), ((v0.c0) IS FALSE))))) ORDER BY ((((((((((v0.c0)<=(v0.c0)))AND(((v0.c0)!=(v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (-1.489309338E9)))))AND((NULL IN (v0.c0)))))OR(((v0.c0)IS NOT(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, 2.90872036E8, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)), CAST(v0.c0 AS BLOB), ((-659123853)>=(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((UNLIKELY(v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL), ((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)<=(v0.c0)))AND(((v0.c0)<>(v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (-1.489309338E9)))))AND((NULL IN (v0.c0)))))OR(((v0.c0)IS NOT(v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, 2.90872036E8, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)), CAST(v0.c0 AS BLOB), ((-659123853)>=(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((UNLIKELY(v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL), ((v0.c0) IS FALSE))))) ORDER BY ((((((((((v0.c0)<=(v0.c0)))AND(((v0.c0)!=(v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (-1.489309338E9)))))AND((NULL IN (v0.c0)))))OR(((v0.c0)IS NOT(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL)) ORDER BY ((('1M', rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c2)OR(rt0.c1)))) AND (((~ (NULL)), load_extension(rt0.c2), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ASC  NULLS LAST, CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c0 AS REAL) THEN COALESCE(rt0.c1, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((('1M', rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c2)OR(rt0.c1)))) AND (((~ (NULL)), load_extension(rt0.c2), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ASC  NULLS LAST, CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c0 AS REAL) THEN COALESCE(rt0.c1, rt0.c1) END);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL)) ORDER BY ((('1M', rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c2)OR(rt0.c1)))) AND (((~ (NULL)), load_extension(rt0.c2), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ASC  NULLS LAST, CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c0 AS REAL) THEN COALESCE(rt0.c1, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((('1M', rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c2)OR(rt0.c1)))) AND (((~ (NULL)), load_extension(rt0.c2), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ASC  NULLS LAST, CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c0 AS REAL) THEN COALESCE(rt0.c1, rt0.c1) END);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL)) ORDER BY ((('1M', rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c2)OR(rt0.c1)))) AND (((~ (NULL)), load_extension(rt0.c2), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ASC  NULLS LAST, CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c0 AS REAL) THEN COALESCE(rt0.c1, rt0.c1) END;
SELECT * FROM v0 WHERE (LAST_INSERT_ROWID() COLLATE RTRIM) ORDER BY LIKELY(DISTINCT (v0.c0 IN ())) ASC, ((1.119685782E9 COLLATE BINARY) ISNULL)  NULLS FIRST, (x'' IN (v0.c0 COLLATE BINARY, v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID() COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT (v0.c0 IN ())) ASC, ((1.119685782E9 COLLATE BINARY) ISNULL)  NULLS FIRST, (x'' IN (v0.c0 COLLATE BINARY, v0.c0)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (LAST_INSERT_ROWID() COLLATE RTRIM) ORDER BY LIKELY(DISTINCT (v0.c0 IN ())) ASC, ((1.119685782E9 COLLATE BINARY) ISNULL)  NULLS FIRST, (x'' IN (v0.c0 COLLATE BINARY, v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID() COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT (v0.c0 IN ())) ASC, ((1.119685782E9 COLLATE BINARY) ISNULL)  NULLS FIRST, (x'' IN (v0.c0 COLLATE BINARY, v0.c0)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (LAST_INSERT_ROWID() COLLATE RTRIM) ORDER BY LIKELY(DISTINCT (v0.c0 IN ())) ASC, ((1.119685782E9 COLLATE BINARY) ISNULL)  NULLS FIRST, (x'' IN (v0.c0 COLLATE BINARY, v0.c0)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (CASE v0.c0  WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN CASE WHEN rt0.c2 THEN v0.c0 END THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN ((v0.c0)LIKE(rt0.c2)) ELSE json_type('\n_') END) ORDER BY ((rt0.c2)=(rt0.c1)) COLLATE RTRIM, CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN CASE WHEN rt0.c2 THEN v0.c0 END THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN ((v0.c0)LIKE(rt0.c2)) ELSE json_type('\n_') END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2)=(rt0.c1)) COLLATE RTRIM, CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC);
SELECT ALL * FROM rt0, v0 WHERE (CASE v0.c0  WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN CASE WHEN rt0.c2 THEN v0.c0 END THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN ((v0.c0)LIKE(rt0.c2)) ELSE json_type('\n_') END) ORDER BY ((rt0.c2)=(rt0.c1)) COLLATE RTRIM, CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN CASE WHEN rt0.c2 THEN v0.c0 END THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN ((v0.c0)LIKE(rt0.c2)) ELSE json_type('\n_') END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2)=(rt0.c1)) COLLATE RTRIM, CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC);
SELECT ALL * FROM rt0, v0 WHERE (CASE v0.c0  WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN CASE WHEN rt0.c2 THEN v0.c0 END THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN ((v0.c0)LIKE(rt0.c2)) ELSE json_type('\n_') END) ORDER BY ((rt0.c2)=(rt0.c1)) COLLATE RTRIM, CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) IS TRUE));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((NULL) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)-(v0.c0)))), ((v0.c0 COLLATE BINARY)!=((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST, ((((v0.c0)<(v0.c0)))!=('-867219580')) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((v0.c0)/(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((NULL) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)-(v0.c0)))), ((v0.c0 COLLATE BINARY)!=((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST, ((((v0.c0)<(v0.c0)))!=('-867219580')) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((v0.c0)/(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((NULL) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)-(v0.c0)))), ((v0.c0 COLLATE BINARY)!=((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST, ((((v0.c0)<(v0.c0)))!=('-867219580')) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((v0.c0)/(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((NULL) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)-(v0.c0)))), ((v0.c0 COLLATE BINARY)!=((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST, ((((v0.c0)<(v0.c0)))!=('-867219580')) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((v0.c0)/(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((NULL) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)-(v0.c0)))), ((v0.c0 COLLATE BINARY)!=((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST, ((((v0.c0)<(v0.c0)))!=('-867219580')) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((v0.c0)/(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS LAST;
SELECT * FROM v0 WHERE (((((((v0.c0)OR('t')))AND(v0.c0)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR('t')))AND(v0.c0)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)OR('t')))AND(v0.c0)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR('t')))AND(v0.c0)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)OR('t')))AND(v0.c0)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT * FROM v0, rt0 WHERE (json_object(UNLIKELY(v0.c0), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((json_object(UNLIKELY(v0.c0), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (json_object(UNLIKELY(v0.c0), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((json_object(UNLIKELY(v0.c0), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (json_object(UNLIKELY(v0.c0), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (CAST(rt0.c2 AS INTEGER))));
