-- Time: 2024/06/09 00:36:24
-- Database: database37
-- Database version: 3.40.0
-- seed value: 3372554737
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, tokenize = "unicode61 remove_diacritics 0", prefix = 986); -- 1ms;
UPDATE OR FAIL vt0 SET (c0, c0, c0)=('-754644900', -7.546449E8, -7.546449E8); -- 0ms;
COMMIT; -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('-2093255050') WHERE ((((NULL) BETWEEN (vt0.c0) AND (NULL))) NOT NULL); -- 0ms;
PRAGMA incremental_vacuum(175225802); -- 0ms;
PRAGMA application_id = -1106812793126553711; -- 1ms;
PRAGMA cell_size_check = true; -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1334362675 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1732846771'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-754644900' AS NUMERIC) IN (((-1.7976931348623157E308) BETWEEN (x'8b01') AND (-101158205)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 175225802'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=1334362675 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-754644900 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')OR(-7.546449E8)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')LIKE('0')))AND((((0x3c1a56d0)) NOT BETWEEN ((0.2478027232631551)) AND ((NULL))))))AND('MZmx')))AND((((NULL)) BETWEEN ((x'')) AND ((619030127))))))AND(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS NOT(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((QUOTE(NULL)) BETWEEN (((((0.6968396209628401)AND(NULL)))AND(NULL))) AND (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1334362675 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1041204893'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((677453518) NOT BETWEEN (NULL) AND (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1961849803 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN highlight(NULL, NULL, '677453518', x'') THEN CASE NULL  WHEN x'1c3183b7' THEN 'vP' ELSE '248102492' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1495801241 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_type(NULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '677453518 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1603899920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1539921619 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-20130692 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1041204893 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((- (x'')))) AND ((CASE WHEN 0.6736181651239318 THEN NULL ELSE NULL END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=598106813 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1008359120 IN ()))AND(0.3144325074645453 COLLATE RTRIM)))OR((+ ('2033021866')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1732846771')*('248102492')), IFNULL(0X74ef73cb, x''), (('-185624394') IS TRUE)))=((0Xffffffffa8abea4f, NULL COLLATE NOCASE, ((965520497)<(0.5078267600318199))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1294734337'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('8S') ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1323732131 -185624394 sz=1103450406 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1814832730 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.9142554319577255 COLLATE RTRIM THEN (('-890372637')!=(0.6104715578114508)) WHEN NULL COLLATE NOCASE THEN '-1623219381' COLLATE RTRIM WHEN CASE WHEN x'cb84' THEN '1961849803' END THEN ((x'') ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=965520497 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=505191610 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-502047086' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1329601541 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-754644900 sz=732369877 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=732369877 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-764275307 2033021866 sz=-550942977'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1772810619 sz=-810536713 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.43753937166592516)/(NULL)))==((312840848 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1329601541 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=598106813 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1772810619 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1130236621 sz=1603899920'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=965520497 unordered noskipscan'); -- 7ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (+ (0.6091557928229105))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1103450406 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7621724877294744) BETWEEN (0.7409849288511118) AND ('-1623219381')))OR('U\ne*2c[' COLLATE RTRIM)))OR(((0.9278577192146645)+(-53898124)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1436849578 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1872147506 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-839360473 sz=1149068494'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 -919033262 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('175730546')LIKE('*lr閪NF')) IN ((((NULL)) BETWEEN ((0.3144325074645453)) AND ((NULL))), ((0Xffffffffdd4b6e08)*(5.98106813E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('1495801241')IS('a䃻쇙hw8p')))IS((('1981933418') NOTNULL))); -- 7ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((0.38359652250621834)<<(x'')), 0.33972711222518637); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=647586881 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1981933418 sz=592269852'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-10575705 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (-5.50942977E8)))<(('oc~\n' IN (x'8e178e92')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-287927788 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-287927788 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x59281d99, 0.8560753302746271, x''))>((x'', '', x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1814832730')|('X'))) NOT BETWEEN (TRIM(DISTINCT '', NULL)) AND (((((NULL)AND(0Xffffffffa436a92d)))AND('潲')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1041204893'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('|T')%(x'f5d9')) IN (((0.9605122686195876)IS NOT(0.7229913447976357)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS REAL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-582259192 sz=-550942977'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((((0.2340101190382743)) BETWEEN (('')) AND (('e*{8')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '431575087 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.8089364204243316) NOT BETWEEN ('-1830567463') AND ('TD&0'))  WHEN ((((((((0.3979390397505872)AND(x'6179')))AND('')))OR('-1465128369')))OR(0x28ca6755)) THEN (('#[袥)zg') BETWEEN (0.6736181651239318) AND ('x -RlLl>')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))<<((('fbP{6|?FQ') NOT BETWEEN (x'') AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1994859817 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -497974727 sz=-1369597429 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1539921619 -502047086 sz=-919033262 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-10575705 sz=-1872147506 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=774998823 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1329601541 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3278437886806542) BETWEEN (-1625413429) AND (x'')))+((0x4a6031da IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(DISTINCT NULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1586632263 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1981933418 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1793489934 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('qTv')>=((((('')OR(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)LIKE((((x'ade2', '0.5929457077189416', NULL, x'', x'')) BETWEEN ((x'', 0.5929457077189416, '''EM!H()Y', NULL, '1405528553')) AND (('1334362675', x'021b', 0xffffffffb0f2e0d7, 0.8476005962703841, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=963354903'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-802549979'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1814832730'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1015963149'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1872147506 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1636481131 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(2.033021866E9 AS TEXT) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ((0xffffffffea15bcb1 IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF((x'' IN ()), 0.757960250474758 COLLATE NOCASE, ((-1.7976931348623157E308) ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1336327658) NOT BETWEEN (NULL) AND (1.405528553E9))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1943074253'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(DATE(0.6334574588729334, 0.2339521748604182, x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5831277687370808)AND(0.9554212885084483)))OR('rᣣf<')))&(((0x2a6a58a1) BETWEEN (-1.623219381E9) AND (x'159a')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2024767674')) BETWEEN (((~ (0.5336795774080045)))) AND ((COALESCE(DISTINCT x'74cc', '')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(((NULL)AND(1.75225802E8))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(x'', '*LR閪NF') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1183926987'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.757960250474758') NOT NULL); -- 6ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, '', '-810536713'))<((0.2478027232631551, -1.539921619E9, '-1943074253'))))OR(((x'')GLOB(x'5f2d')))))AND(1247213569 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=38440601'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-764275307 1357566194 sz=-730557071 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2017504884 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1539921619 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1605678102 sz=965520497 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1741598733 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-2077296837'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.1835441060290821)LIKE('8~')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1386769180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER(x'') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-607253085'  WHEN '' THEN '' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2077296837 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=1606145525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((NULL)%('v')), NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1355233593 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((((0X74b39a86)) NOT BETWEEN ((-2.12079065E8)) AND ((x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('{r^{d庒>}bs'))>=((NULL))))<(CAST('1263178296' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1693553156 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-428310156 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)) NOT BETWEEN (('')) AND ((x''))), 0X104ba2e9, ((0.5480197539099368) ISNULL)))>(((('1336327658')-(0.810045596811331)), ('-834925146' IN ('-675641179')), ((x'516aa2ed') NOT BETWEEN (0.9089981681677134) AND (0.5336795774080045))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-802549979'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1957927558 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=18969151 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('')))GLOB('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1879285881'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=619030127 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((+ (0xa777954))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1435272690 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=505191610'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('676759955') NOT NULL)) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote((('E*{8') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-919033262 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=816340900 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1164484826 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, '''㈚', NULL)) NOT BETWEEN ((x'', x'', '/엔-櫝')) AND ((0Xffffffffffffffff, 0.18432355318646043, '|t'))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '598106813'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-311962128'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-615175011 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1620224227 sz=175730546 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(NULL)))IS NOT(((NULL) NOT BETWEEN (0.9089981681677134) AND (0.9422737802720826)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -2053186918 sz=-343277850 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1814832730 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.1835441060290821)))*(((38440601)IS NOT('u\ne*2c[')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=342705123 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.28800711322300077 COLLATE NOCASE) BETWEEN ((('')-('1357566194'))) AND ((((NULL)) BETWEEN ((x'76a0')) AND ((0Xffffffffa2890bc8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=-1466487041 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('282556726', -8.34925146E8, NULL)) NOT BETWEEN ((0x2d2f1872 COLLATE NOCASE, LOWER(DISTINCT '''EM!H()Y'), '' COLLATE NOCASE)) AND ((CAST(1.183926987E9 AS REAL), ((NULL)<<(0.22176849487474537)), (((-582259192))<((NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-497974727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-779282380 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1357566194 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '175225802 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=107397656 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=248102492 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((0Xffffffff8048ea25) BETWEEN (0.636475434727495) AND (0xffffffffa8429ed0))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((- (0.3979390397505872)))) AND ((CAST('-1386769180' AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c206') IS FALSE)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'')) BETWEEN (('-754644900')) AND ((NULL)))  WHEN 0.30906286165483887 COLLATE BINARY THEN (('-2064739431') NOT BETWEEN (0.5329086475172006) AND (x'')) ELSE (((NULL)) BETWEEN (('')) AND ((''))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-430467127 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1454555122 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=565863083 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=337601359'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('뷪ur') NOT BETWEEN (x'') AND (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1093180666 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('?#p	0䒃KZ')OR('-428310156')))OR(x'')))AND(x'')))AND(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1265056327 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=556518698 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((x'97aa43d2' IN (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(x'2c6b'))AND(CAST('-1757256225' AS BLOB))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '?#P	0䒃KZ' THEN -775788210 WHEN 0.6181200758977282 THEN x'' WHEN x'' THEN NULL ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'a5b7'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.4231141460589716  WHEN CASE '598106813'  WHEN '-1084520217' THEN 175730546 END THEN CASE WHEN '춇rBJ' THEN '1405528553' ELSE 0.6561675587192183 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1352439053 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN ((((((((0.9047731317001189)AND('MZmx')))OR(NULL)))OR('6%qq]')))AND(']-M')) THEN ((NULL)+(NULL)) WHEN ((((0.5777187078357998)AND(0.5883194946137726)))AND(NULL)) THEN ((((0.7185766245039351)AND('')))AND(0.6785576263619102)) WHEN (NOT (x'')) THEN (('')AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1603899920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-965705090) NOT BETWEEN (4.31575087E8) AND (NULL)) IN (CASE 0.02247132799712781  WHEN '-315822104' THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '312840848 sz=-260349308 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('jFrF03鲺', x'802ce6d5', '0')) BETWEEN ((0x435e0acd, '9223372036854775807', 0.09545143606867124)) AND (('l鷐Q41-glU', NULL, 0.9881660025438296))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-834925146 sz=-2013766062 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8609853220726915; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-70736005 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN '1334362675' THEN '' WHEN 1495801241 THEN x'' WHEN NULL THEN x'' END)OR(TRIM(DISTINCT 1638429005, 'ha'))))AND((((NULL, x'c17ddd7b', NULL))<>(('-1968935117', 0x71893240, 0x59281d99))))))AND(0.44125433561882943)))OR(((x'')GLOB(0.5831277687370808)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-810536713 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1193481489'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-367674191 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) BETWEEN (CASE WHEN NULL THEN 0.32322939655657823 WHEN x'' THEN 0.5343120489352178 WHEN '28342642' THEN '-1181791156' ELSE x'f938' END) AND (0.21479770533319276)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1183926987 0 sz=-1539921619'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -502018961 sz=1793489934 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=549558446'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(1.60389992E9))+((NOT ('1603899920')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1732846771 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5248806611373179; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '668363542 2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7621724877294744)AND('910766158')))OR(0.901364625481862)))IS NOT((0.5480197539099368 IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-714312343 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 905352211 sz=1606145525 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9349495000917155)) NOT BETWEEN ((((x'157ddd4d')%(x'')))) AND ((((('-1623219381', '8s', 0x7d76347c))==((x'', '', 0.03522558567682621)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((1445342722) NOT BETWEEN ('-367674191') AND (0.9901535511367151)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1846120878' COLLATE NOCASE)AND('''㤞b' COLLATE RTRIM)))AND(((x'8b0b') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((NULL)AND(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1041204893 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.31965965934140184)AND(0.518875010863685)))AND(x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=320633316'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2017504884 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'1a05'))>((2.73392361E8))))=(((0.31965965934140184)OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-839360473 -1625413429 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1326260009'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-819867492 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (SQLITE_SOURCE_ID())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=243978040'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-43270557 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-141261576 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1326260009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.18432355318646043' IN ())) NOT BETWEEN (CAST(0.7564074599739019 AS BLOB)) AND (CAST(0.30979549444353205 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.6450770996940827 THEN 0Xffffffff877448d0 END)AND(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1823889644 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1326260009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-926374491 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-994946677 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=619030127 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CAST('1254454415' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'ae7a'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((0x1babc16)|('0.2340101190382743')), CAST(NULL AS BLOB), ((x'44b4') BETWEEN (0.3327093192790387) AND (222341634)), (('*lr閪NF') NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1329601541 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-849626121 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-428310156 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1575418804 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1848724235'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((SQLITE_COMPILEOPTION_GET(x''))AND(CASE 0.9595074017283797  WHEN 0.2339521748604182 THEN x'' END)))OR(((((((((0.9120852883935535)AND(NULL)))AND('-1386769180')))AND(296869760)))OR(0.4359601606294061)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=1008359120 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-1654275236 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (DATETIME(0Xffffffffaedd2b58, NULL, 1.693553156E9, x'', '_K9䯉', '', 'e(ꨂ_/qa') IN (NULL COLLATE BINARY, ((((x'')OR(x'0e7c')))AND(0.9046130702997169)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE '-731318818'  WHEN 0.4063125490538997 THEN '647586881' END THEN (+ (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE NOCASE)OR(0.9621680975714715 COLLATE NOCASE)))AND(JULIANDAY(x'', 0.6104715578114508, NULL, '963354903', 0.1357960606053914))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '684353365 2119631097 sz=696982545 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1991165135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('rtl_')) NOT BETWEEN ((0.555813762712095)) AND (('1183926987')))))<((IFNULL(DISTINCT '0.5480197539099368', x'747c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1994859817 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1123263402 -1294734337 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1058544611'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1589744280 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'2ae4' THEN x'fe7d' ELSE 0.9120852883935535 END AS REAL); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7719068244670574) BETWEEN ('-426042695') AND (NULL)))-((((x''))<((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'u%擎.'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 sz=301036147 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN 0 THEN 0.4713794089641893 WHEN NULL THEN x'' WHEN NULL THEN 0x234bb41a END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1329601541'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=774998823'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-839360473)%(0.4713794089641893)))IS NOT(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1766143719 sz=-497974727 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1890327811 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1735661267 0 sz=1436849578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1340725145 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((x'' IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=684353365 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1793489934'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2066487523 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'25d5' AS NUMERIC) THEN (('-675641179')%(NULL)) WHEN (~ (NULL)) THEN ((NULL)OR('')) WHEN LIKE(NULL, 0x77bc0914, '6') THEN CAST(0.8440970948212887 AS NUMERIC) ELSE (('-669321194') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.9046130702997169 COLLATE RTRIM THEN (+ (-1226982101)) ELSE CAST(1195213406 AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7441812321179629)) NOT BETWEEN (('0.1357960606053914')) AND ((NULL)))))!=((INSTR(NULL, 0.9849210450706424)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-520426877 0 sz=684353365 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1832831280 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-720164193 sz=582679940 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '1247213569' ELSE x'8f0a' END)&(((0X104ba2e9)|(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-611927850 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1029725518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1134742987'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-1037732630 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.08486782591066422 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1709572665'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1495801241 1819847565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffffc5a803; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1300292267'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-730557071 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-121893431 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) IS TRUE), ((0.2575856502737188)&(x'')), (NOT ('3|')), x'' COLLATE BINARY, (+ (0X62a03038))))>=(((('')<>(-834925146)), (x'' IN (NULL)), LIKE(x'7688', 0.15667520472225005, 'Q'), NULL COLLATE BINARY, (('5W') BETWEEN ('-281216501') AND ('뷪0'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -53898124 sz=-1395734894 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-619223768 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE NULL  WHEN NULL THEN -1112396167 END)) AND ((0xffffffffaee1328c))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -551638025 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1467481386 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=965520497 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-82621843'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1853250757 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 598106813 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')LIKE('-1974564734')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-802549979')+((('ef') BETWEEN (0.9808137116224768) AND (0.7888087036882265)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1305006945 sz=592269852 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1769132530 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-212079065')) BETWEEN ((0.7807520006033766)) AND ((0.8397890683320706))))|(((('18969151'))<=(('1149068494'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('9223372036854775807', 'E07DP1x袥(', -2.12079065E8))<=(('^w', x'', '')))))>(((('1606145525')%(2071830947))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE 'QP~	<'  WHEN '' THEN 0.8358622351114304 WHEN x'' THEN 1689392000 WHEN 'z0uJM)K' THEN 0.5746750466514824 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((('-2017504884')) BETWEEN (('2066487523')) AND ((0.13709573224421112))))) AND (((((NULL)) NOT BETWEEN (('441939401')) AND ((x'')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1436849578'))=(('0.7409849288511118')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1465128369 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1949117646 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-728838640 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1449021078 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))<(NULLIF(DISTINCT x'', '-9223372036854775808'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(0.9839283034725412))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((('332958739')LIKE(x'c3bc')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CASE '-1326260009'  WHEN 0.555813762712095 THEN NULL ELSE NULL END, ((x'') NOT BETWEEN (NULL) AND (0.13215885635431424))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '732369877 sz=296869760 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS NOT('1263178296')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('b(') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8009121303409774; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE '18969151'  WHEN 0.032475960595924946 THEN '1994859817' ELSE 0.6683755780201236 END))>((((-795570597)|(-1.465128369E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=909764048 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=-798343609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1906667879 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=448522511 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-2085687743 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1943074253 sz=-1725156581 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1519392619 sz=-1418441806 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-536955419 sz=437270038'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.703098611686748; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.65520497E8) NOT BETWEEN ('u~\q	⼔Y E') AND (0xffffffffab52acdf)))>=(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-675641179 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6975706290496828; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (x''))  WHEN CAST(NULL AS TEXT) THEN (((((((('684353365')OR(NULL)))OR(-1329601541)))AND('-1041204893')))OR(x'')) ELSE ((1405528553)&(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1332934517 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 505323934; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1297157327 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-837928884 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-840778460 1693553156 sz=1289817232'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-728205003 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('rᣣf<' IN (x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('+*.C#f閪' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '749226232 sz=8143099 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1199995300'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1904632984 175730546 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1278979992 sz=-359950271 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8468728019280747) BETWEEN (0.03503194569837009) AND ('-1830567463')))OR(CASE 2.73392361E8  WHEN 0.9173973712112646 THEN NULL ELSE NULL END)))AND(CASE 'U\ne*2c['  WHEN NULL THEN 0x74ef73cb ELSE '774998823' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1247818202'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')<>('312840848'))))<((highlight('1130236621', '641695315', NULL, '1643950012')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1386769180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM(DISTINCT 0.297042636170029) THEN ((-1.0575705E7)<=(NULL)) ELSE (NOT (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=505191610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2017504884 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=8143099 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1455602859) NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2078382005 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-10575705 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'a䃻쇙hw8p' THEN '357212705' END COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-582259192 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1089083909 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1760788006'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-292997479 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1067885283'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((986645280 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')||('w躙E''')))AND(CASE -2.0130692E7  WHEN '0.6785576263619102' THEN x'' END)))OR((- (x'2bf8')))))OR('/Sc]2A>')))OR((((0X7b2c18e3))>=((492817363))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-512403026 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=637496227 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '505191610' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-932353588 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=787912094 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-6.07253085E8 AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=555668132 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'8053')>=('1419793799')) IN (0.26074344677012107 COLLATE RTRIM, (NOT ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((((0.22412732616155062)) NOT BETWEEN (('x -RlLl>')) AND ((-2.077296837E9))))) AND (((((((((('-335592413')OR(0xffffffffd02a0f25)))OR(NULL)))OR('t- ^FG|')))AND(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=606016991 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=2035856229 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1621766526'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=2146297406 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1636481131'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-497974727 sz=-1213326802 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))!=(('WlS)U'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-854182719 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (-1.625413429E9) AND ('_p')))||(((x'')%(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.06694950104480668)LIKE(x'85e0')) THEN -8.34925146E8 COLLATE RTRIM ELSE CASE '+{Qo'  WHEN 0.6847493875058497 THEN x'c64c' ELSE '-1221546931' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-3.67674191E8, '641875700', x'')) BETWEEN ((0x7fcafac6, 1.75730546E8, 'r!%x')) AND ((0x2a6a58a1, 0Xffffffffe6e2f54e, '-1158919426')))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))OR(CAST('#C' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '711612577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('L/S''\n*%' IN (0.6119677941339184)))&(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')AND(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-406521535 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=691133897'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -142100785 sz=-306825935 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-733823444 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1263178296 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1939517063 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('431575087')=('丳7')))<=(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=619030127 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-725146296 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=759765645 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.697217986334906 AS BLOB) THEN ('-287927788' IN ()) ELSE (('/*') BETWEEN (0.7467762629018967) AND (0xfffffffface6f47d)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-529415997 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=21925697 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'7a32') IS FALSE) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=312840848'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-386776173'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-367674191 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE WHEN x'' THEN 0.32322939655657823 ELSE 0X7ab50454 END)) AND ((TRIM(DISTINCT 0X14cefe7e)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.18432355318646043  WHEN x'' THEN NULL ELSE NULL END)<=((NOT ('0.6104715578114508')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((x'' IN ()))) AND ((0.6379622776400573))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (x''))  WHEN 0.33932759032927917 COLLATE RTRIM THEN ((((0.9499592960938167)AND(' 羨燒XD䦯')))OR(-1950894777)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1633177384'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=228085195'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'427f' AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('\m')==('-1818545688')))AND(CAST('-367674191' AS BLOB))))OR((0.7360249811664461 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT TYPEOF(DISTINCT x'5fb4')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(0.8269847529579116)))OR('')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1405528553'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '963354903 sz=1021568423 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=2114734587'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1229193077; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.8009121303409774  WHEN (('-575949265') NOT BETWEEN (NULL) AND (NULL)) THEN ((x'')*(x'a0b8')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2053468241 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.824463964928708) NOTNULL))AND(('1981933418' IN ()))))OR(x'')))AND(((NULL)OR(x'')))))OR(NULLIF(DISTINCT 0.18689256303839052, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '505191610 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKE(NULL, 1772362257), (NULL IN ()), x'4391'))>((((NULL) IS TRUE), (('-2112427235') NOT BETWEEN (x'') AND (0xffffffffe2135e92)), 'K᧟KdCa0' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1336327658 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1095364365 sz=1336405834 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.830567463E9)OR(((-2.0130692E7)LIKE(963354903)))))OR(json_array_length(-1.625413429E9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9138754606402133 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1613681929 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((NULL)<=('cA	1Dyawl')), ((((NULL)OR('')))AND(x'0d6e')), ((')j') BETWEEN ('175225802') AND (0xfffffffffcc99474)), CASE WHEN x'' THEN 0.13830476583877127 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-764275307 -734826047 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x65d5cbc4) NOTNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=643548892'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.01158205E8)) BETWEEN (((((x''))>=(('bB'))))) AND (((('-1636481131') BETWEEN (x'') AND (0.1307124524056259))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1704757630 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-754644900 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffdf2946ff) NOT NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1840646656'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=305132129'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1266748761 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1130236621 sz=490776094 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-764275307 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 4ms;
DELETE FROM sqlite_stat1 WHERE (('GE')/((('<9Z#ꔲwb?') NOT BETWEEN (-6.07253085E8) AND ('-890372637')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-873570229 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1123575636'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=428472828 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS INTEGER) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-484539180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) BETWEEN (NULL) AND ('vK')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-511465096 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 222341634 sz=812935745 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-78982708'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4660293387219552)||(1183926987))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1781210358'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1107382136 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(load_extension('-907066406'), x'' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1957927558 0 sz=-1045876842 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 -1141551057 sz=1917775839'); -- 20ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELY(NULL)  WHEN ((NULL)==(0xffffffff95abd873)) THEN (('O?')=(NULL)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((x'185d' COLLATE NOCASE)) AND (((((0.7191649767003201))>((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE BINARY  WHEN x'' THEN ((0.4864281108085119) ISNULL) WHEN (- (NULL)) THEN ((NULL) ISNULL) WHEN (0.6846300240631141 IN (0.9089981681677134)) THEN (('AE') NOT BETWEEN (0.5746750466514824) AND (x'')) ELSE (('LQ') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1484010520'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1583349469 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1605678102 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-157079381'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-630093972 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1179755586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1821004708 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-696676549 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1353141385 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9748069416711505) NOT BETWEEN (NULL) AND (-7.64275307E8)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=8143099 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-455377877 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-212079065 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=914270861 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(((0.3548385908786478) BETWEEN (NULL) AND ('-1432490577'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) BETWEEN ((('1357566194')>('1512102989'))) AND (((' pVU2㔖{Y')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 1610860480 sz=-675641179 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)%(CASE WHEN -1586632263 THEN NULL WHEN 0.33433806183610904 THEN x'' WHEN '锄QrY[U5' THEN 'x}_In' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-900389766 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1667546453 sz=-319285616 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7278695462762208) NOT BETWEEN (0.9454336116986155) AND (NULL))) NOT BETWEEN ((~ (0.2779997376524892))) AND ((('-1041204893') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-502047086 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN ('2033021866') AND ('74097862')))OR((0.2852618367695563 IN ()))))AND((('1') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-185624394 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((RTRIM('''EM!H()Y'))OR((('Q]GjPms') NOT BETWEEN (x'078e') AND (0.9182463387100511)))))OR(((NULL)/('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1795538132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'036e' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1263917264'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=254382635'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-205510626 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')+('')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6477571088760393 COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1182577064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X48103b02)AND('389589281')))OR('/KWxl>'))) NOT BETWEEN (HEX(NULL)) AND (((x'')/(x'4a3a')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1291849957'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-817997581 2 sz=-1578498926 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-488221302 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-675641179 sz=-33480931 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-2083805908'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((ABS(DISTINCT 0Xffffffffb0bfe3fb))AND(((('-957145203', 0.7520102125491596, -9223372036854775808)) NOT BETWEEN (('2R\ng-F}', x'', x'')) AND ((18969151, x'', 0.8456704930852497))))))AND(((NULL) BETWEEN (0.7111742672413012) AND ('1793489934')))))AND('-89986416' COLLATE BINARY)))OR(((x'') BETWEEN (NULL) AND ('L')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.066739758838532; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8233436202407011) BETWEEN ('-1410295239') AND (NULL))) BETWEEN (((x'')LIKE(NULL))) AND ((((-1.586632263E9)) NOT BETWEEN ((-350151299)) AND ((0x7621e76a))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((' 9' IN ())) NOT BETWEEN (((NULL)=('㙤u'))) AND ((('-810536713') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (NULL))  WHEN ((x'8247') IS TRUE) THEN (('H[]{fSZm')AND(x'')) ELSE CASE '963354903'  WHEN 1253696838 THEN '' ELSE x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 1477522178  WHEN 0.6040276248534496 THEN x'' ELSE x'f1e9' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1606145525 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '535841428 sz=-1966725767 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2047566266 sz=-1301671314 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS INTEGER))AND(CAST(0.5954869174595383 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (''))))<(((x'' IN ('PL'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))AND(((((0.9349495000917155)OR('-428310156')))OR('-65425239')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')) BETWEEN ((NULL)) AND (('B'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(0.08636048086102555, -5.82259192E8))>=(((x'')>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1957927558 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('598106813', '', '>'))==((NULL, NULL, x''))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('毹pXi~B')/('1940773024')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-66939087 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-166655841 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.7394014726771957) IS FALSE) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('1236996680'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))*(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=265380843 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT NULL))|(((((NULL)OR(0x75c2024e)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=963354903 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-730557071'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('' AS NUMERIC) THEN (('684353365') NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1814832730 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1679823674 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1342052823 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'a5e4') AND ('-834925146'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1867798583 sz=-1636481131'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=1247213569 unordered noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE '''EM!H()Y'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (NULL))  WHEN ((x'') NOT BETWEEN ('221480204') AND (-592089980)) THEN CAST(1.149068494E9 AS NUMERIC) ELSE TRIM(DISTINCT 'W', '1247818202') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1678190709 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1247818202 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1661854862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE x''  WHEN x'' THEN 0.031225992418162818 WHEN -8.34925146E8 THEN 0X7a1e93f3 WHEN x'' THEN '㲅z' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (''))) NOT BETWEEN ((((0.9278577192146645)) NOT BETWEEN ((x'')) AND ((x'')))) AND ((('5Z퀘Z3')=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=975459293 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (x'60996950')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=505191610'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5600080331920926) NOT BETWEEN (-1355233593) AND ('-314126315')))||(('499762021' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN x'16d66fb0' THEN 'K9' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-920319412 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.0852641269802894) NOT NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_array_length(2073155674, '[ss	') AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('*J ,dQ' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1321025304')<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-549704685 sz=-259935388'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-843065594 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1005217561 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-617732561 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=583431559 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1989949331 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((-8.90372637E8)<('0.08486782591066422')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1334362675 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'35c7' AS NUMERIC); -- 0ms;
REINDEX; -- 0ms;
UPDATE vt0 SET (c0)=(x'8d1fa73596e0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='-2111113324', c0=x'', c0=x'' WHERE ((((((((CAST(vt0.c0 AS BLOB))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((0.17720782139883295) IS FALSE))))AND(5.92269852E8 COLLATE NOCASE)); -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA journal_size_limit = 7401830330969973414; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1654384742); -- 0ms;
UPDATE vt0 SET (c0)=('543980775'); -- 0ms;
REINDEX BINARY; -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((x'' IN ()))); -- 0ms;
UPDATE vt0 SET c0=0.2867283934093484 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END)>(NULL)); -- 1ms;
REINDEX; -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
UPDATE vt0 SET c0=-1.732846771E9; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59073'); -- 6ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-834925146,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=0.3032018678494798; -- 0ms;
UPDATE OR FAIL vt0 SET c0=x'afe9', c0='-919033262' WHERE ((CAST(vt0.c0 AS REAL))<>(((vt0.c0)>('175225802')))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 571609338); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM vt0 WHERE LOWER((- (vt0.c0))); -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1078275504); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.6831785345819786); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=1933572888; -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 5ms;
UPDATE vt0 SET (c0)=(1.693553156E9); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18309'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ('?*EUU' COLLATE BINARY IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(0.9607670507935633)))OR(vt0.c0)))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA incremental_vacuum(-928912512); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX; -- 1ms;
PRAGMA temp.shrink_memory; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=NULL; -- 0ms;
UPDATE vt0 SET c0=0.1327133074764748, c0='-1789015227', c0='1603899920' WHERE (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS INTEGER), '-754644900')) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL), '5\n'))); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11014'); -- 8ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'804a', NULL) WHERE SQLITE_COMPILEOPTION_USED(((vt0.c0) IS TRUE)); -- 1ms;
UPDATE vt0 SET c0=1179997465, c0='M~slJ{7ᶏe' WHERE LIKELY(vt0.c0); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.6617433429638953); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 259341380); -- 1ms;
END; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=x'a96f4d49c3c5'; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1442648479', c0=NULL WHERE ((((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(((((x'')AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)OR(0.7621724877294744)))); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('175225802') WHERE CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(0X5576f741)))OR(vt0.c0))) NOTNULL)) ORDER BY -1.85624394E8 DESC, LTRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.30432790188407244 WHEN vt0.c0 THEN 0.6546479444510831 ELSE vt0.c0 END, (NULL IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0x5576f741)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY -1.85624394E8 DESC, LTRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.30432790188407244 WHEN vt0.c0 THEN 0.6546479444510831 ELSE vt0.c0 END, (NULL IN ())) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(0X5576f741)))OR(vt0.c0))) NOTNULL)) ORDER BY -1.85624394E8 DESC, LTRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.30432790188407244 WHEN vt0.c0 THEN 0.6546479444510831 ELSE vt0.c0 END, (NULL IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0x5576f741)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY -1.85624394E8 DESC, LTRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.30432790188407244 WHEN vt0.c0 THEN 0.6546479444510831 ELSE vt0.c0 END, (NULL IN ())) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(0X5576f741)))OR(vt0.c0))) NOTNULL)) ORDER BY -1.85624394E8 DESC, LTRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.30432790188407244 WHEN vt0.c0 THEN 0.6546479444510831 ELSE vt0.c0 END, (NULL IN ())) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0)<<(vt0.c0)))) ORDER BY LOWER(DISTINCT vt0.c0) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT vt0.c0) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0)<<(vt0.c0)))) ORDER BY LOWER(DISTINCT vt0.c0) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT vt0.c0) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0)<<(vt0.c0)))) ORDER BY LOWER(DISTINCT vt0.c0) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))==(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))==(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((- ((+ ('1957927558')))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ ('1957927558'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((+ ('1957927558')))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ ('1957927558'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((+ ('1957927558')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.3889785317273894)AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((0.3889785317273894)AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.3889785317273894)AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((0.3889785317273894)AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.3889785317273894)AND(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))OR(MAX(vt0.c0, vt0.c0))))AND(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>>(vt0.c0)))OR(MAX(vt0.c0, vt0.c0))))AND(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))OR(MAX(vt0.c0, vt0.c0))))AND(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>>(vt0.c0)))OR(MAX(vt0.c0, vt0.c0))))AND(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))OR(MAX(vt0.c0, vt0.c0))))AND(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (0xffffffff8c2f0a33 COLLATE BINARY))) ORDER BY ((((vt0.c0)>(x''))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((LOWER(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (0Xffffffff8c2f0a33 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(x''))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((LOWER(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (0xffffffff8c2f0a33 COLLATE BINARY))) ORDER BY ((((vt0.c0)>(x''))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((LOWER(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (0Xffffffff8c2f0a33 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(x''))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((LOWER(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (0xffffffff8c2f0a33 COLLATE BINARY))) ORDER BY ((((vt0.c0)>(x''))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((LOWER(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x''))<=(((((vt0.c0))<=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))<=(((((vt0.c0))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x''))<=(((((vt0.c0))<=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))<=(((((vt0.c0))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x''))<=(((((vt0.c0))<=((vt0.c0)))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6247347168735988)%(((vt0.c0)&(vt0.c0))))) ORDER BY (~ (NULL)) DESC  NULLS LAST, (NOT (((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.6247347168735988)%(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (NULL)) DESC  NULLS LAST, (NOT (((vt0.c0) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6247347168735988)%(((vt0.c0)&(vt0.c0))))) ORDER BY (~ (NULL)) DESC  NULLS LAST, (NOT (((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.6247347168735988)%(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (NULL)) DESC  NULLS LAST, (NOT (((vt0.c0) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6247347168735988)%(((vt0.c0)&(vt0.c0))))) ORDER BY (~ (NULL)) DESC  NULLS LAST, (NOT (((vt0.c0) NOTNULL))) ASC;
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((((vt0.c0) ISNULL)))!=((LIKELY('_k9䯉')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))<>((LIKELY('_k9䯉')))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((((vt0.c0) ISNULL)))!=((LIKELY('_k9䯉')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))<>((LIKELY('_k9䯉')))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((((vt0.c0) ISNULL)))!=((LIKELY('_k9䯉')))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (LIKE(((vt0.c0) IS FALSE), vt0.c0, 'e')) ORDER BY (((((0.9359031818791691, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))&((NOT (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0 IN ()))-(((vt0.c0) NOT NULL))) ASC, ((vt0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((vt0.c0) IS FALSE), vt0.c0, 'e')) IS TRUE)  as count FROM vt0 ORDER BY (((((0.9359031818791691, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))&((NOT (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0 IN ()))-(((vt0.c0) NOT NULL))) ASC, ((vt0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LIKE(((vt0.c0) IS FALSE), vt0.c0, 'e')) ORDER BY (((((0.9359031818791691, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))&((NOT (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0 IN ()))-(((vt0.c0) NOT NULL))) ASC, ((vt0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((vt0.c0) IS FALSE), vt0.c0, 'e')) IS TRUE)  as count FROM vt0 ORDER BY (((((0.9359031818791691, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))&((NOT (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0 IN ()))-(((vt0.c0) NOT NULL))) ASC, ((vt0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LIKE(((vt0.c0) IS FALSE), vt0.c0, 'e')) ORDER BY (((((0.9359031818791691, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))&((NOT (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0 IN ()))-(((vt0.c0) NOT NULL))) ASC, ((vt0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((0.5220559419514869 COLLATE BINARY) BETWEEN (((0.3721963989094478) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.5220559419514869 COLLATE BINARY) BETWEEN (((0.3721963989094478) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((0.5220559419514869 COLLATE BINARY) BETWEEN (((0.3721963989094478) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.5220559419514869 COLLATE BINARY) BETWEEN (((0.3721963989094478) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR((~ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((0.5220559419514869 COLLATE BINARY) BETWEEN (((0.3721963989094478) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9885111560018137) ORDER BY CASE vt0.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)AND(NULL)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9885111560018137) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CASE vt0.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)AND(NULL)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9885111560018137) ORDER BY CASE vt0.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)AND(NULL)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9885111560018137) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CASE vt0.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)AND(NULL)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9885111560018137) ORDER BY CASE vt0.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)AND(NULL)) END ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (((1.605678102E9)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((1.605678102E9)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (((1.605678102E9)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((1.605678102E9)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (((1.605678102E9)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT * FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS TEXT)) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR((vt0.c0 IN (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS TEXT)) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR((vt0.c0 IN (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS TEXT)) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR((vt0.c0 IN (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0 COLLATE BINARY)))OR(ABS(vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, NULLIF(((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))IS(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0 COLLATE BINARY)))OR(ABS(vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, NULLIF(((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0 COLLATE BINARY)))OR(ABS(vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, NULLIF(((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))IS(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0 COLLATE BINARY)))OR(ABS(vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, NULLIF(((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0 COLLATE BINARY)))OR(ABS(vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, NULLIF(((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT * FROM vt0 WHERE (((x'')AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((x'')AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((x'')AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((NULL)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((((vt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN (((-1732846771)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((((vt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN (((-1732846771)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN '' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((NULL)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((((vt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN (((-1732846771)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((((vt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN (((-1732846771)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN '' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((NULL)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((((vt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN (((-1732846771)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN '' END);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((- ((- (vt0.c0))))) ORDER BY MAX(((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)), (((vt0.c0))<=((vt0.c0))), (vt0.c0 IN ())), ((0.9238988372789433) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY MAX(((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)), (((vt0.c0))<=((vt0.c0))), (vt0.c0 IN ())), ((0.9238988372789433) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)*(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((- ((- (vt0.c0))))) ORDER BY MAX(((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)), (((vt0.c0))<=((vt0.c0))), (vt0.c0 IN ())), ((0.9238988372789433) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY MAX(((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)), (((vt0.c0))<=((vt0.c0))), (vt0.c0 IN ())), ((0.9238988372789433) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)*(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((- ((- (vt0.c0))))) ORDER BY MAX(((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)), (((vt0.c0))<=((vt0.c0))), (vt0.c0 IN ())), ((0.9238988372789433) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)*(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0, ((((vt0.c0)AND(NULL)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(vt0.c0, ((((vt0.c0)AND(NULL)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0, ((((vt0.c0)AND(NULL)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(vt0.c0, ((((vt0.c0)AND(NULL)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0, ((((vt0.c0)AND(NULL)))OR(vt0.c0))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(x'5510')) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)||(x'5510')) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(x'5510')) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)||(x'5510')) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(x'5510')) THEN (~ (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY '1008359120' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY '1008359120' ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY '1008359120' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY '1008359120' ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY '1008359120' ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)IS(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)IS(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0)IS NOT(((vt0.c0)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT(((vt0.c0)=(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0)IS NOT(((vt0.c0)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT(((vt0.c0)=(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0)IS NOT(((vt0.c0)=(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)IS NOT(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0) NOT NULL) IN ()), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_SOURCE_ID()) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0) NOT NULL) IN ()), vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)IS NOT(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0) NOT NULL) IN ()), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_SOURCE_ID()) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0) NOT NULL) IN ()), vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)IS NOT(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0) NOT NULL) IN ()), vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))LIKE((vt0.c0 IN ())))) ORDER BY 0.13709573224421112  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(vt0.c0, vt0.c0))LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY 0.13709573224421112  NULLS LAST);
SELECT * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))LIKE((vt0.c0 IN ())))) ORDER BY 0.13709573224421112  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(vt0.c0, vt0.c0))LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY 0.13709573224421112  NULLS LAST);
SELECT * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))LIKE((vt0.c0 IN ())))) ORDER BY 0.13709573224421112  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)<>(0.8609853220726915)) WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN -2043699091 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN (~ (vt0.c0)) WHEN '623409916' THEN 0.13215885635431424 END) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)!=(0.8609853220726915)) WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN -2043699091 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN (~ (vt0.c0)) WHEN '623409916' THEN 0.13215885635431424 END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)<>(0.8609853220726915)) WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN -2043699091 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN (~ (vt0.c0)) WHEN '623409916' THEN 0.13215885635431424 END) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)!=(0.8609853220726915)) WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN -2043699091 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN (~ (vt0.c0)) WHEN '623409916' THEN 0.13215885635431424 END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)<>(0.8609853220726915)) WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN -2043699091 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN (~ (vt0.c0)) WHEN '623409916' THEN 0.13215885635431424 END) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('MC')))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('MC'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('MC')))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('MC'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('MC')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0 WHERE ((UNLIKELY(DISTINCT vt0.c0) IN ())) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 WHERE ((UNLIKELY(DISTINCT vt0.c0) IN ())) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 WHERE ((UNLIKELY(DISTINCT vt0.c0) IN ())) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT ALL * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)<>(0Xffffffffb8701bcb))) AND (vt0.c0))) ORDER BY ((((((vt0.c0) NOTNULL))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)!=(0Xffffffffb8701bcb))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)<>(0Xffffffffb8701bcb))) AND (vt0.c0))) ORDER BY ((((((vt0.c0) NOTNULL))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)!=(0Xffffffffb8701bcb))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)<>(0Xffffffffb8701bcb))) AND (vt0.c0))) ORDER BY ((((((vt0.c0) NOTNULL))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0))  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((NULL) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY '' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY '' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY '' ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE NOCASE) ORDER BY (NOT (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE NOCASE) ORDER BY (NOT (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE NOCASE) ORDER BY (NOT (vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(SQLITE_VERSION()))) ORDER BY ABS(x'eaf2')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0 ORDER BY ABS(x'eaf2')  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(SQLITE_VERSION()))) ORDER BY ABS(x'eaf2')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0 ORDER BY ABS(x'eaf2')  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(SQLITE_VERSION()))) ORDER BY ABS(x'eaf2')  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((+ (vt0.c0))))) ORDER BY (+ (((vt0.c0)/(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)/(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((+ (vt0.c0))))) ORDER BY (+ (((vt0.c0)/(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)/(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((+ (vt0.c0))))) ORDER BY (+ (((vt0.c0)/(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT NULL));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c0)) IS FALSE));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, (((('')AND(vt0.c0)))OR(0.9173973712112646));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, (((('')AND(vt0.c0)))OR(0.9173973712112646)));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, (((('')AND(vt0.c0)))OR(0.9173973712112646));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, (((('')AND(vt0.c0)))OR(0.9173973712112646)));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, (((('')AND(vt0.c0)))OR(0.9173973712112646));
SELECT * FROM vt0 WHERE (CAST(IFNULL(DISTINCT NULL, vt0.c0) AS BLOB)) ORDER BY ((((vt0.c0) IS TRUE))+((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(DISTINCT NULL, vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))+((+ (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(IFNULL(DISTINCT NULL, vt0.c0) AS BLOB)) ORDER BY ((((vt0.c0) IS TRUE))+((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(DISTINCT NULL, vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))+((+ (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(IFNULL(DISTINCT NULL, vt0.c0) AS BLOB)) ORDER BY ((((vt0.c0) IS TRUE))+((+ (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) IS FALSE)) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) IS FALSE)) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) IS FALSE)) ORDER BY NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0))))) ORDER BY CASE WHEN -1465128369 THEN CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN 'nⓇ' WHEN vt0.c0 THEN 0.6159677547603645 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN -1465128369 THEN CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN 'nⓇ' WHEN vt0.c0 THEN 0.6159677547603645 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0))))) ORDER BY CASE WHEN -1465128369 THEN CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN 'nⓇ' WHEN vt0.c0 THEN 0.6159677547603645 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN -1465128369 THEN CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN 'nⓇ' WHEN vt0.c0 THEN 0.6159677547603645 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))IS NOT(((vt0.c0)*(vt0.c0))))) ORDER BY CASE WHEN -1465128369 THEN CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN 'nⓇ' WHEN vt0.c0 THEN 0.6159677547603645 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END;
SELECT * FROM vt0 WHERE (((((vt0.c0)!=(0xfffffffff0ee85bc))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(0xfffffffff0ee85bc))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)!=(0xfffffffff0ee85bc))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(0xfffffffff0ee85bc))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)!=(0xfffffffff0ee85bc))) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((NOT (-631216611)))IS(((vt0.c0) NOTNULL)))) ORDER BY (((NULL)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (-631216611)))IS(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0 COLLATE BINARY))) DESC);
SELECT ALL * FROM vt0 WHERE ((((NOT (-631216611)))IS(((vt0.c0) NOTNULL)))) ORDER BY (((NULL)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (-631216611)))IS(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0 COLLATE BINARY))) DESC);
SELECT ALL * FROM vt0 WHERE ((((NOT (-631216611)))IS(((vt0.c0) NOTNULL)))) ORDER BY (((NULL)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0 COLLATE BINARY))) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE 0.48551007714123773 END) ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (''));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE 0.48551007714123773 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ('')));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE 0.48551007714123773 END) ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (''));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE 0.48551007714123773 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ('')));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE 0.48551007714123773 END) ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (''));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((QUOTE(vt0.c0)) IS FALSE) ASC  NULLS FIRST, CASE WHEN MIN(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((QUOTE(vt0.c0)) IS FALSE) ASC  NULLS FIRST, CASE WHEN MIN(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((QUOTE(vt0.c0)) IS FALSE) ASC  NULLS FIRST, CASE WHEN MIN(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((QUOTE(vt0.c0)) IS FALSE) ASC  NULLS FIRST, CASE WHEN MIN(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((QUOTE(vt0.c0)) IS FALSE) ASC  NULLS FIRST, CASE WHEN MIN(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0)GLOB(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((vt0.c0)IS(vt0.c0)))AND(((vt0.c0)>>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))AND(((vt0.c0)>>(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0)GLOB(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((vt0.c0)IS(vt0.c0)))AND(((vt0.c0)>>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))AND(((vt0.c0)>>(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0)GLOB(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((vt0.c0)IS(vt0.c0)))AND(((vt0.c0)>>(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (json_extract(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((json_extract(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_extract(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((json_extract(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_extract(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE ('qr[');
SELECT SUM(count) FROM (SELECT ALL (('qr[') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('qr[');
SELECT SUM(count) FROM (SELECT ALL (('qr[') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('qr[');
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET((('Gh')GLOB(vt0.c0)))) ORDER BY ((((vt0.c0)||(vt0.c0)))<<(((vt0.c0)==(vt0.c0))))  NULLS LAST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((('Gh')GLOB(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0)))<<(((vt0.c0)==(vt0.c0))))  NULLS LAST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET((('Gh')GLOB(vt0.c0)))) ORDER BY ((((vt0.c0)||(vt0.c0)))<<(((vt0.c0)==(vt0.c0))))  NULLS LAST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((('Gh')GLOB(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0)))<<(((vt0.c0)==(vt0.c0))))  NULLS LAST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET((('Gh')GLOB(vt0.c0)))) ORDER BY ((((vt0.c0)||(vt0.c0)))<<(((vt0.c0)==(vt0.c0))))  NULLS LAST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((6.77453518E8)OR(NULL)))OR(((vt0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR('1994859817')))))AND(((x'fdf4') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((6.77453518E8)OR(NULL)))OR(((vt0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR('1994859817')))))AND(((x'fdf4') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((6.77453518E8)OR(NULL)))OR(((vt0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR('1994859817')))))AND(((x'fdf4') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((6.77453518E8)OR(NULL)))OR(((vt0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR('1994859817')))))AND(((x'fdf4') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((6.77453518E8)OR(NULL)))OR(((vt0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR('1994859817')))))AND(((x'fdf4') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((HEX(DISTINCT vt0.c0))=((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(DISTINCT vt0.c0))==((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((HEX(DISTINCT vt0.c0))=((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(DISTINCT vt0.c0))==((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((HEX(DISTINCT vt0.c0))=((~ (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (LTRIM(vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((LTRIM(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LTRIM(vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((LTRIM(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LTRIM(vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE TOTAL_CHANGES() END) ORDER BY ((vt0.c0)+('#c')) COLLATE BINARY ASC  NULLS FIRST, LIKELY(DISTINCT ((vt0.c0)<=(0X3bb41221)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+('#c')) COLLATE BINARY ASC  NULLS FIRST, LIKELY(DISTINCT ((vt0.c0)<=(0x3bb41221))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE TOTAL_CHANGES() END) ORDER BY ((vt0.c0)+('#c')) COLLATE BINARY ASC  NULLS FIRST, LIKELY(DISTINCT ((vt0.c0)<=(0X3bb41221)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+('#c')) COLLATE BINARY ASC  NULLS FIRST, LIKELY(DISTINCT ((vt0.c0)<=(0x3bb41221))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE TOTAL_CHANGES() END) ORDER BY ((vt0.c0)+('#c')) COLLATE BINARY ASC  NULLS FIRST, LIKELY(DISTINCT ((vt0.c0)<=(0X3bb41221)));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LOWER(DISTINCT vt0.c0))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LOWER(DISTINCT vt0.c0))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LOWER(DISTINCT vt0.c0))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LOWER(DISTINCT vt0.c0))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LOWER(DISTINCT vt0.c0))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<>((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<>((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<>((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<>((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<>((vt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((((((0.03864590445579652)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY 1321362793 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((0.03864590445579652)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 1321362793 ASC);
SELECT ALL * FROM vt0 WHERE (((((((((0.03864590445579652)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY 1321362793 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((0.03864590445579652)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 1321362793 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)OR(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0) NOT NULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)OR(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0) NOT NULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)OR(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0) NOT NULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)OR(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0) NOT NULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)OR(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))AND(((vt0.c0) NOT NULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((0.6472377348604651 COLLATE BINARY)) AND ((x'')))) ORDER BY (((vt0.c0 IN ()))*(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((0.6472377348604651 COLLATE BINARY)) AND ((x'')))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))*(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((0.6472377348604651 COLLATE BINARY)) AND ((x'')))) ORDER BY (((vt0.c0 IN ()))*(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((0.6472377348604651 COLLATE BINARY)) AND ((x'')))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))*(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((0.6472377348604651 COLLATE BINARY)) AND ((x'')))) ORDER BY (((vt0.c0 IN ()))*(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)>>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)>>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)>>(vt0.c0)) END);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((- (x''))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (x''))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (x''))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (x''))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (x''))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 END) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT CAST(vt0.c0 AS REAL)));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 END) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT CAST(vt0.c0 AS REAL)));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 END) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c0 AS REAL));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('-2008492467')))OR(vt0.c0))) NOT NULL)) ORDER BY CAST(((((vt0.c0)OR('175225802')))AND(vt0.c0)) AS TEXT), vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('-2008492467')))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR('175225802')))AND(vt0.c0)) AS TEXT), vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('-2008492467')))OR(vt0.c0))) NOT NULL)) ORDER BY CAST(((((vt0.c0)OR('175225802')))AND(vt0.c0)) AS TEXT), vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('-2008492467')))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR('175225802')))AND(vt0.c0)) AS TEXT), vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('-2008492467')))OR(vt0.c0))) NOT NULL)) ORDER BY CAST(((((vt0.c0)OR('175225802')))AND(vt0.c0)) AS TEXT), vt0.c0;
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(0xffffffffeb88a5ca)))|(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(0xffffffffeb88a5ca)))|(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(0xffffffffeb88a5ca)))|(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(0xffffffffeb88a5ca)))|(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(0xffffffffeb88a5ca)))|(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (rtreenode((('-890372637')*(vt0.c0)), CAST(NULL AS REAL))) ORDER BY (~ ('-227044518' COLLATE NOCASE)), x'1326cccf' DESC;
SELECT SUM(count) FROM (SELECT ((rtreenode((('-890372637')*(vt0.c0)), CAST(NULL AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY (~ ('-227044518' COLLATE NOCASE)), x'1326cccf' DESC);
SELECT ALL * FROM vt0 WHERE (rtreenode((('-890372637')*(vt0.c0)), CAST(NULL AS REAL))) ORDER BY (~ ('-227044518' COLLATE NOCASE)), x'1326cccf' DESC;
SELECT SUM(count) FROM (SELECT ((rtreenode((('-890372637')*(vt0.c0)), CAST(NULL AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY (~ ('-227044518' COLLATE NOCASE)), x'1326cccf' DESC);
SELECT ALL * FROM vt0 WHERE (rtreenode((('-890372637')*(vt0.c0)), CAST(NULL AS REAL))) ORDER BY (~ ('-227044518' COLLATE NOCASE)), x'1326cccf' DESC;
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('aQ-	U^')) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('aQ-	U^')) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('aQ-	U^')) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('aQ-	U^')) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('aQ-	U^')) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.6613764145981886)) AND ((vt0.c0))))=(vt0.c0 COLLATE BINARY))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((0.6613764145981886)) AND ((vt0.c0))))==(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.6613764145981886)) AND ((vt0.c0))))=(vt0.c0 COLLATE BINARY))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((0.6613764145981886)) AND ((vt0.c0))))==(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.6613764145981886)) AND ((vt0.c0))))=(vt0.c0 COLLATE BINARY))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&(x'c275' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&(x'c275' COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&(x'c275' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&(x'c275' COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&(x'c275' COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0) IS FALSE)))<((CAST(vt0.c0 AS TEXT))))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC), ((((((((vt0.c0 COLLATE BINARY)OR(((((vt0.c0)AND(vt0.c0)))AND(x'5ace')))))OR('f幰X')))OR((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)*(vt0.c0)))), CASE WHEN vt0.c0 COLLATE RTRIM THEN ((-2.12079065E8) NOT BETWEEN (vt0.c0) AND ('O?')) ELSE (((vt0.c0))>=((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) IS FALSE)))<((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC), ((((((((vt0.c0 COLLATE BINARY)OR(((((vt0.c0)AND(vt0.c0)))AND(x'5ace')))))OR('f幰X')))OR((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)*(vt0.c0)))), CASE WHEN vt0.c0 COLLATE RTRIM THEN ((-2.12079065E8) NOT BETWEEN (vt0.c0) AND ('O?')) ELSE (((vt0.c0))>=((vt0.c0))) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0) IS FALSE)))<((CAST(vt0.c0 AS TEXT))))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC), ((((((((vt0.c0 COLLATE BINARY)OR(((((vt0.c0)AND(vt0.c0)))AND(x'5ace')))))OR('f幰X')))OR((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)*(vt0.c0)))), CASE WHEN vt0.c0 COLLATE RTRIM THEN ((-2.12079065E8) NOT BETWEEN (vt0.c0) AND ('O?')) ELSE (((vt0.c0))>=((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) IS FALSE)))<((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC), ((((((((vt0.c0 COLLATE BINARY)OR(((((vt0.c0)AND(vt0.c0)))AND(x'5ace')))))OR('f幰X')))OR((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)*(vt0.c0)))), CASE WHEN vt0.c0 COLLATE RTRIM THEN ((-2.12079065E8) NOT BETWEEN (vt0.c0) AND ('O?')) ELSE (((vt0.c0))>=((vt0.c0))) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0) IS FALSE)))<((CAST(vt0.c0 AS TEXT))))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC), ((((((((vt0.c0 COLLATE BINARY)OR(((((vt0.c0)AND(vt0.c0)))AND(x'5ace')))))OR('f幰X')))OR((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)*(vt0.c0)))), CASE WHEN vt0.c0 COLLATE RTRIM THEN ((-2.12079065E8) NOT BETWEEN (vt0.c0) AND ('O?')) ELSE (((vt0.c0))>=((vt0.c0))) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (json(NULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((json(NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (json(NULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((json(NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (json(NULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(DISTINCT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(DISTINCT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(DISTINCT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(DISTINCT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(DISTINCT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END END);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) ISNULL)));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM) ORDER BY -402016825  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY -402016825  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM) ORDER BY -402016825  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY -402016825  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(LIKELY(DISTINCT vt0.c0))))AND(((vt0.c0)%(vt0.c0))))) ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR(LIKELY(DISTINCT vt0.c0))))AND(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(LIKELY(DISTINCT vt0.c0))))AND(((vt0.c0)%(vt0.c0))))) ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR(LIKELY(DISTINCT vt0.c0))))AND(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(LIKELY(DISTINCT vt0.c0))))AND(((vt0.c0)%(vt0.c0))))) ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE RTRIM;
SELECT * FROM vt0 WHERE (((((vt0.c0)+(x'')))>>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0 ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('-1636481131'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(x'')))>>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('-1636481131'))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(x'')))>>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0 ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('-1636481131'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(x'')))>>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('-1636481131'))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(x'')))>>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0 ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('-1636481131'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9401914489178799);
SELECT SUM(count) FROM (SELECT ((0.9401914489178799) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9401914489178799);
SELECT SUM(count) FROM (SELECT ((0.9401914489178799) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9401914489178799);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))  NULLS LAST, STRFTIME(ROUND(vt0.c0, vt0.c0), vt0.c0, vt0.c0)  NULLS FIRST, ((((((((((vt0.c0) NOTNULL))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))  NULLS LAST, STRFTIME(ROUND(vt0.c0, vt0.c0), vt0.c0, vt0.c0)  NULLS FIRST, ((((((((((vt0.c0) NOTNULL))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND(NULL)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))  NULLS LAST, STRFTIME(ROUND(vt0.c0, vt0.c0), vt0.c0, vt0.c0)  NULLS FIRST, ((((((((((vt0.c0) NOTNULL))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))  NULLS LAST, STRFTIME(ROUND(vt0.c0, vt0.c0), vt0.c0, vt0.c0)  NULLS FIRST, ((((((((((vt0.c0) NOTNULL))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND(NULL)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))  NULLS LAST, STRFTIME(ROUND(vt0.c0, vt0.c0), vt0.c0, vt0.c0)  NULLS FIRST, ((((((((((vt0.c0) NOTNULL))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND(NULL)) ASC;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)LIKE(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, x''))>((vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.8609853220726915 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, vt0.c0, x''))>((vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.8609853220726915 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, x''))>((vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.8609853220726915 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, vt0.c0, x''))>((vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.8609853220726915 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, x''))>((vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.8609853220726915 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(NULL)))|((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(NULL)))|((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(NULL)))|((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(NULL)))|((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(NULL)))|((((vt0.c0))==((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)=(''))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)==(''))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)=(''))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)==(''))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)=(''))) AND ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ((vt0.c0 IN ()), TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ((vt0.c0 IN ()), TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ((vt0.c0 IN ()), TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ((vt0.c0 IN ()), TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ((vt0.c0 IN ()), TRIM(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((LTRIM(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((LTRIM(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((LTRIM(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((LTRIM(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((LTRIM(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)>>(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((- (x'')) COLLATE BINARY) ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (x'')) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (x'')) COLLATE BINARY) ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (x'')) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (x'')) COLLATE BINARY) ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('c5');
SELECT SUM(count) FROM (SELECT (('c5') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('c5');
SELECT SUM(count) FROM (SELECT (('c5') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('c5');
SELECT * FROM vt0 WHERE (((0.4475261290456215 COLLATE RTRIM)<(json_array_length(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4475261290456215 COLLATE RTRIM)<(json_array_length(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.4475261290456215 COLLATE RTRIM)<(json_array_length(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4475261290456215 COLLATE RTRIM)<(json_array_length(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.4475261290456215 COLLATE RTRIM)<(json_array_length(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) ORDER BY (NOT (CAST('1528684899' AS BLOB)))  NULLS LAST, ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.4713794089641893)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST('1528684899' AS BLOB)))  NULLS LAST, ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.4713794089641893)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) ORDER BY (NOT (CAST('1528684899' AS BLOB)))  NULLS LAST, ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.4713794089641893)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST('1528684899' AS BLOB)))  NULLS LAST, ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.4713794089641893)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) ORDER BY (NOT (CAST('1528684899' AS BLOB)))  NULLS LAST, ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.4713794089641893)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-591901697)))AND(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-591901697)))AND(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-591901697)))AND(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-591901697)))AND(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-591901697)))AND(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0))<((vt0.c0)))))) ORDER BY ((((vt0.c0)<>(vt0.c0)))AND(((vt0.c0)<>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))AND(((vt0.c0)!=(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0))<((vt0.c0)))))) ORDER BY ((((vt0.c0)<>(vt0.c0)))AND(((vt0.c0)<>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))AND(((vt0.c0)!=(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0))<((vt0.c0)))))) ORDER BY ((((vt0.c0)<>(vt0.c0)))AND(((vt0.c0)<>(vt0.c0)))) DESC;
SELECT * FROM vt0 WHERE ((- ((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((((vt0.c0))>=((vt0.c0))))));
SELECT * FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) NOTNULL))-(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((vt0.c0))<=((vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))-(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((vt0.c0))<=((vt0.c0))) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) NOTNULL))-(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((vt0.c0))<=((vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))-(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((vt0.c0))<=((vt0.c0))) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) NOTNULL))-(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((vt0.c0))<=((vt0.c0))) IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)*(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN load_extension(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN NULLIF(vt0.c0, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)*(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN load_extension(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN NULLIF(vt0.c0, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)*(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN load_extension(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN NULLIF(vt0.c0, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)*(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN load_extension(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN NULLIF(vt0.c0, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)*(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN load_extension(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN NULLIF(vt0.c0, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END;
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) NOTNULL)) ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, '[A' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, '[A' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) NOTNULL)) ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, '[A' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, '[A' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) NOTNULL)) ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, '[A' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)-(((vt0.c0)<=(vt0.c0))))) ORDER BY (((((vt0.c0)*(vt0.c0))))<=((((vt0.c0)>>(vt0.c0))))) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)-(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)*(vt0.c0))))<=((((vt0.c0)>>(vt0.c0))))) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)-(((vt0.c0)<=(vt0.c0))))) ORDER BY (((((vt0.c0)*(vt0.c0))))<=((((vt0.c0)>>(vt0.c0))))) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)-(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)*(vt0.c0))))<=((((vt0.c0)>>(vt0.c0))))) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)-(((vt0.c0)<=(vt0.c0))))) ORDER BY (((((vt0.c0)*(vt0.c0))))<=((((vt0.c0)>>(vt0.c0))))) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c0 IN (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c0 IN (vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c0 IN (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c0 IN (vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c0 IN (vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (0.657798769533322, vt0.c0)))IS NOT(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (0.657798769533322, vt0.c0)))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (0.657798769533322, vt0.c0)))IS NOT(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (0.657798769533322, vt0.c0)))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (0.657798769533322, vt0.c0)))IS NOT(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))<(vt0.c0))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()), ((json_valid(vt0.c0))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()), ((json_valid(vt0.c0))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))<(vt0.c0))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()), ((json_valid(vt0.c0))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()), ((json_valid(vt0.c0))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))<(vt0.c0))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()), ((json_valid(vt0.c0))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((NOT (LOWER(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (LOWER(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (LOWER(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)>(x'a745'))) AND (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)>(x'a745'))) AND (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)>(x'a745'))) AND (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)>(x'a745'))) AND (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)>(x'a745'))) AND (vt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 WHERE (rtreenode((vt0.c0 IN ()), ((vt0.c0)-(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((vt0.c0 IN ()), ((vt0.c0)-(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (rtreenode((vt0.c0 IN ()), ((vt0.c0)-(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((vt0.c0 IN ()), ((vt0.c0)-(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (rtreenode((vt0.c0 IN ()), ((vt0.c0)-(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (NOT (vt0.c0)) DESC, ((((vt0.c0)||(vt0.c0)))OR(CASE 732369877  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) DESC, ((((vt0.c0)||(vt0.c0)))OR(CASE 732369877  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (NOT (vt0.c0)) DESC, ((((vt0.c0)||(vt0.c0)))OR(CASE 732369877  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) DESC, ((((vt0.c0)||(vt0.c0)))OR(CASE 732369877  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (NOT (vt0.c0)) DESC, ((((vt0.c0)||(vt0.c0)))OR(CASE 732369877  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT * FROM vt0 WHERE (LTRIM(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LTRIM(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LTRIM(((vt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.4869366042762002) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4869366042762002) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.4869366042762002) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4869366042762002) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.4869366042762002) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)>=(vt0.c0))))) ASC, CAST(((((vt0.c0)OR(vt0.c0)))OR(NULL)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)>=(vt0.c0))))) ASC, CAST(((((vt0.c0)OR(vt0.c0)))OR(NULL)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)>=(vt0.c0))))) ASC, CAST(((((vt0.c0)OR(vt0.c0)))OR(NULL)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)>=(vt0.c0))))) ASC, CAST(((((vt0.c0)OR(vt0.c0)))OR(NULL)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)>=(vt0.c0))))) ASC, CAST(((((vt0.c0)OR(vt0.c0)))OR(NULL)) AS REAL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN INSTR('i%6', vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN INSTR('i%6', vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN INSTR('i%6', vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN INSTR('i%6', vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN INSTR('i%6', vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((x'4d18' IN ())) AND (ABS(vt0.c0)))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((x'4d18' IN ())) AND (ABS(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((x'4d18' IN ())) AND (ABS(vt0.c0)))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((x'4d18' IN ())) AND (ABS(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((x'4d18' IN ())) AND (ABS(vt0.c0)))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)|(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((NULL) NOT BETWEEN (-1.943074253E9 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (-1.943074253E9 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((NULL) NOT BETWEEN (-1.943074253E9 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (-1.943074253E9 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((NULL) NOT BETWEEN (-1.943074253E9 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST('Ed' AS BLOB)  WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0 IN ())) NOTNULL), ((('2X') NOT BETWEEN (vt0.c0) AND (NULL)) IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST('Ed' AS BLOB)  WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOTNULL), ((('2X') NOT BETWEEN (vt0.c0) AND (NULL)) IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST('Ed' AS BLOB)  WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0 IN ())) NOTNULL), ((('2X') NOT BETWEEN (vt0.c0) AND (NULL)) IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST('Ed' AS BLOB)  WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOTNULL), ((('2X') NOT BETWEEN (vt0.c0) AND (NULL)) IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST('Ed' AS BLOB)  WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0 IN ())) NOTNULL), ((('2X') NOT BETWEEN (vt0.c0) AND (NULL)) IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY SQLITE_SOURCE_ID(), x'c043' ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID(), x'c043' ASC  NULLS FIRST, vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY SQLITE_SOURCE_ID(), x'c043' ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID(), x'c043' ASC  NULLS FIRST, vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY SQLITE_SOURCE_ID(), x'c043' ASC  NULLS FIRST, vt0.c0;
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)) DESC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)) DESC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)) DESC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)) DESC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)) DESC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((LIKELY(DISTINCT vt0.c0)))==(((- (vt0.c0)))))) ORDER BY ((((((((((((vt0.c0)OR(-1632673312)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((LIKELY(DISTINCT vt0.c0)))==(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(-1632673312)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((LIKELY(DISTINCT vt0.c0)))==(((- (vt0.c0)))))) ORDER BY ((((((((((((vt0.c0)OR(-1632673312)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((LIKELY(DISTINCT vt0.c0)))==(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(-1632673312)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((LIKELY(DISTINCT vt0.c0)))==(((- (vt0.c0)))))) ORDER BY ((((((((((((vt0.c0)OR(-1632673312)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) IS FALSE)) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY '');
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) IS FALSE)) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY '');
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) IS FALSE)) ORDER BY '';
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) IS FALSE)));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))==(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))==(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE (LOWER('619030127') COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LOWER('619030127') COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LOWER('619030127') COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LOWER('619030127') COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LOWER('619030127') COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((NULL))=((((vt0.c0) NOT NULL))))) ORDER BY '1533623244', LIKELIHOOD(DISTINCT LENGTH(vt0.c0), 0.942006213529697)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL))=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY '1533623244', LIKELIHOOD(DISTINCT LENGTH(vt0.c0), 0.942006213529697)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((NULL))=((((vt0.c0) NOT NULL))))) ORDER BY '1533623244', LIKELIHOOD(DISTINCT LENGTH(vt0.c0), 0.942006213529697)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL))=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY '1533623244', LIKELIHOOD(DISTINCT LENGTH(vt0.c0), 0.942006213529697)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((NULL))=((((vt0.c0) NOT NULL))))) ORDER BY '1533623244', LIKELIHOOD(DISTINCT LENGTH(vt0.c0), 0.942006213529697)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'683a')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'683a'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'683a')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'683a'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'683a')))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)|(vt0.c0)) END) ORDER BY (+ (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)|(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)|(vt0.c0)) END) ORDER BY (+ (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)|(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)|(vt0.c0)) END) ORDER BY (+ (CAST(vt0.c0 AS REAL)));
SELECT * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0)))>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c0)))>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0)))>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c0)))>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0)))>((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE ((('L	*eL')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))==(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE ((('L	*eL')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))==(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE ((('L	*eL')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))==(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE ((('L	*eL')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))==(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE ((('L	*eL')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))==(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, NULL))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(TYPEOF(DISTINCT vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY (+ (0Xffffffffa1bbd7f3)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TYPEOF(DISTINCT vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (+ (0Xffffffffa1bbd7f3)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(TYPEOF(DISTINCT vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY (+ (0Xffffffffa1bbd7f3)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TYPEOF(DISTINCT vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (+ (0Xffffffffa1bbd7f3)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(TYPEOF(DISTINCT vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY (+ (0Xffffffffa1bbd7f3)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('1336327658')))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) NOTNULL)))) ORDER BY (NOT (((NULL)||(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('1336327658')))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((NULL)||(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('1336327658')))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) NOTNULL)))) ORDER BY (NOT (((NULL)||(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('1336327658')))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((NULL)||(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('1336327658')))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) NOTNULL)))) ORDER BY (NOT (((NULL)||(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((969123948)%(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((969123948)%(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((969123948)%(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((969123948)%(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((969123948)%(vt0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, ''))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((+ (vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, ''))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((+ (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, ''))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((+ (vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, ''))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((+ (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, ''))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((+ (vt0.c0))) AND (vt0.c0)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)!=(vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt0.c0)||(vt0.c0)))!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)!=(vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0)))!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)!=(vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt0.c0)||(vt0.c0)))!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)!=(vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0)))!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)!=(vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt0.c0)||(vt0.c0)))!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((('-85784297') NOT BETWEEN (0.8308640039546393) AND (vt0.c0)))) AND ((('eCjKiw2.' IN ()))))) ORDER BY (((((vt0.c0) NOT NULL)))=((CAST('-434459780' AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((('-85784297') NOT BETWEEN (0.8308640039546393) AND (vt0.c0)))) AND ((('eCjKiw2.' IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT NULL)))=((CAST('-434459780' AS NUMERIC))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((('-85784297') NOT BETWEEN (0.8308640039546393) AND (vt0.c0)))) AND ((('eCjKiw2.' IN ()))))) ORDER BY (((((vt0.c0) NOT NULL)))=((CAST('-434459780' AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((('-85784297') NOT BETWEEN (0.8308640039546393) AND (vt0.c0)))) AND ((('eCjKiw2.' IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT NULL)))=((CAST('-434459780' AS NUMERIC))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((('-85784297') NOT BETWEEN (0.8308640039546393) AND (vt0.c0)))) AND ((('eCjKiw2.' IN ()))))) ORDER BY (((((vt0.c0) NOT NULL)))=((CAST('-434459780' AS NUMERIC))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(NULL)) COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(NULL)) COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(NULL)) COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((HEX(vt0.c0))>((vt0.c0 IN (x'35c5'))))) ORDER BY (((CHAR(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1247818202 THEN vt0.c0 ELSE vt0.c0 END, UPPER(vt0.c0), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)%(vt0.c0)), ((vt0.c0)+(vt0.c0))))) DESC, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0))>((vt0.c0 IN (x'35c5'))))) IS TRUE)  as count FROM vt0 ORDER BY (((CHAR(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1247818202 THEN vt0.c0 ELSE vt0.c0 END, UPPER(vt0.c0), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)%(vt0.c0)), ((vt0.c0)+(vt0.c0))))) DESC, vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((HEX(vt0.c0))>((vt0.c0 IN (x'35c5'))))) ORDER BY (((CHAR(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1247818202 THEN vt0.c0 ELSE vt0.c0 END, UPPER(vt0.c0), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)%(vt0.c0)), ((vt0.c0)+(vt0.c0))))) DESC, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0))>((vt0.c0 IN (x'35c5'))))) IS TRUE)  as count FROM vt0 ORDER BY (((CHAR(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1247818202 THEN vt0.c0 ELSE vt0.c0 END, UPPER(vt0.c0), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)%(vt0.c0)), ((vt0.c0)+(vt0.c0))))) DESC, vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((HEX(vt0.c0))>((vt0.c0 IN (x'35c5'))))) ORDER BY (((CHAR(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1247818202 THEN vt0.c0 ELSE vt0.c0 END, UPPER(vt0.c0), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)%(vt0.c0)), ((vt0.c0)+(vt0.c0))))) DESC, vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (0x468ffd1f);
SELECT SUM(count) FROM (SELECT ALL ((0X468ffd1f) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0x468ffd1f);
SELECT SUM(count) FROM (SELECT ALL ((0X468ffd1f) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0x468ffd1f);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY NULL, vt0.c0 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULL, vt0.c0 COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY NULL, vt0.c0 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULL, vt0.c0 COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY NULL, vt0.c0 COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((0Xffffffffa6f88480)==(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((0.7953771827977442) NOT NULL)) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffa6f88480)=(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.7953771827977442) NOT NULL)) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0Xffffffffa6f88480)==(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((0.7953771827977442) NOT NULL)) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffa6f88480)=(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.7953771827977442) NOT NULL)) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0Xffffffffa6f88480)==(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((0.7953771827977442) NOT NULL)) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((vt0.c0 IN ()))))OR((((vt0.c0))<=((vt0.c0)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((vt0.c0 IN ()))))OR((((vt0.c0))<=((vt0.c0)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((vt0.c0 IN ()))))OR((((vt0.c0))<=((vt0.c0)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((vt0.c0 IN ()))))OR((((vt0.c0))<=((vt0.c0)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((vt0.c0 IN ()))))OR((((vt0.c0))<=((vt0.c0)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL) DESC;
SELECT * FROM vt0 WHERE (0X4e618bb4);
SELECT SUM(count) FROM (SELECT ((0x4e618bb4) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0X4e618bb4);
SELECT SUM(count) FROM (SELECT ((0x4e618bb4) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0X4e618bb4);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CAST(0.9047731317001189 AS BLOB) THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CAST(0.9047731317001189 AS BLOB) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CAST(0.9047731317001189 AS BLOB) THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CAST(0.9047731317001189 AS BLOB) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CAST(0.9047731317001189 AS BLOB) THEN ((vt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>>(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>>(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>>(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CHAR(vt0.c0, vt0.c0, vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(vt0.c0, vt0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CHAR(vt0.c0, vt0.c0, vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(vt0.c0, vt0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CHAR(vt0.c0, vt0.c0, vt0.c0)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))&(vt0.c0 COLLATE NOCASE))) ORDER BY '260234075';
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))&(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY '260234075');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))&(vt0.c0 COLLATE NOCASE))) ORDER BY '260234075';
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))&(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY '260234075');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))&(vt0.c0 COLLATE NOCASE))) ORDER BY '260234075';
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((((vt0.c0)<=(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0))) NOT NULL));
SELECT * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((((vt0.c0)<=(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0))) NOT NULL));
SELECT * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((((vt0.c0)<=(vt0.c0))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (vt0.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOTNULL));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (0.7597017033991603);
SELECT SUM(count) FROM (SELECT ALL ((0.7597017033991603) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7597017033991603);
SELECT SUM(count) FROM (SELECT ALL ((0.7597017033991603) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7597017033991603);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(NULL AS TEXT)) AND (vt0.c0))) ORDER BY (((vt0.c0 IN ()))>=(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND('뀍GR8?e')))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(NULL AS TEXT)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))>=(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND('뀍GR8?e')))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(NULL AS TEXT)) AND (vt0.c0))) ORDER BY (((vt0.c0 IN ()))>=(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND('뀍GR8?e')))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(NULL AS TEXT)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))>=(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND('뀍GR8?e')))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(NULL AS TEXT)) AND (vt0.c0))) ORDER BY (((vt0.c0 IN ()))>=(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND('뀍GR8?e')))) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY x'3b78' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY x'3b78' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY x'3b78' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY x'3b78' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY x'3b78' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))==((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1tW?/UHAB')))))) ORDER BY COALESCE(DISTINCT (((vt0.c0))==((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))==((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1tW?/UHAB')))))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT (((vt0.c0))==((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))==((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1tW?/UHAB')))))) ORDER BY COALESCE(DISTINCT (((vt0.c0))==((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))==((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1tW?/UHAB')))))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT (((vt0.c0))==((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))==((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1tW?/UHAB')))))) ORDER BY COALESCE(DISTINCT (((vt0.c0))==((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (0.8858766755412161)) THEN x'fc78' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (0.8858766755412161)) THEN x'fc78' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (0.8858766755412161)) THEN x'fc78' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (0.8858766755412161)) THEN x'fc78' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (0.8858766755412161)) THEN x'fc78' END);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'8def5186');
SELECT SUM(count) FROM (SELECT ((x'8def5186') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'8def5186');
SELECT SUM(count) FROM (SELECT ((x'8def5186') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'8def5186');
SELECT * FROM vt0 WHERE (((((((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC);
SELECT * FROM vt0 WHERE (((((((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC);
SELECT * FROM vt0 WHERE (((((((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY '774998823';
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY '774998823');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY '774998823';
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY '774998823');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY '774998823';
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((x'bc1755f66027')||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (~ ('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((x'bc1755f66027')||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (~ ('')) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((x'bc1755f66027')||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (~ ('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((x'bc1755f66027')||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (~ ('')) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((x'bc1755f66027')||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (~ ('')) END);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)||(vt0.c0)) ELSE LIKELY(vt0.c0) END) ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)||(vt0.c0)) ELSE LIKELY(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)||(vt0.c0)) ELSE LIKELY(vt0.c0) END) ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)||(vt0.c0)) ELSE LIKELY(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)||(vt0.c0)) ELSE LIKELY(vt0.c0) END) ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<(((vt0.c0)OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0)!=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0)<>(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0)!=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0)<>(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0)!=(vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE ((('M*')LIKE(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((('M*')LIKE(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('M*')LIKE(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((('M*')LIKE(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('M*')LIKE(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ())))));
SELECT COUNT(*) FROM vt0 WHERE (((-1636481131)<<(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((-1636481131)<<(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-1636481131)<<(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((-1636481131)<<(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-1636481131)<<(((vt0.c0)>>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN NULL THEN NULL ELSE vt0.c0 END  WHEN (+ (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN load_extension(vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN NULL THEN NULL ELSE vt0.c0 END  WHEN (+ (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN load_extension(vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN NULL THEN NULL ELSE vt0.c0 END  WHEN (+ (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN load_extension(vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN NULL THEN NULL ELSE vt0.c0 END  WHEN (+ (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN load_extension(vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN NULL THEN NULL ELSE vt0.c0 END  WHEN (+ (vt0.c0)) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN load_extension(vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), (vt0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((vt0.c0 COLLATE BINARY, ((NULL)%('1497646332')), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), (vt0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((vt0.c0 COLLATE BINARY, ((NULL)%('1497646332')), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), (vt0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((vt0.c0 COLLATE BINARY, ((NULL)%('1497646332')), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), (vt0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((vt0.c0 COLLATE BINARY, ((NULL)%('1497646332')), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), (vt0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((vt0.c0 COLLATE BINARY, ((NULL)%('1497646332')), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) ORDER BY '0.9621680975714715';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY '0.9621680975714715');
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) ORDER BY '0.9621680975714715';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY '0.9621680975714715');
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) ORDER BY '0.9621680975714715';
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))AND(json_quote(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))AND(json_quote(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))AND(json_quote(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))AND(json_quote(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))AND(json_quote(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)));
SELECT SUM(count) FROM (SELECT ((((NULL)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)));
SELECT SUM(count) FROM (SELECT ((((NULL)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)));
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((0.5831277687370808 COLLATE BINARY)AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((0.5831277687370808 COLLATE BINARY)AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((0.5831277687370808 COLLATE BINARY)AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((0.5831277687370808 COLLATE BINARY)AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((0.5831277687370808 COLLATE BINARY)AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.01460686169753711) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, 0.4060775589809307, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.01460686169753711) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, 0.4060775589809307, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.01460686169753711) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, 0.4060775589809307, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.01460686169753711) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, 0.4060775589809307, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.01460686169753711) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, 0.4060775589809307, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND((((vt0.c0))<((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (IFNULL(0.47583457122361894, vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((IFNULL(0.47583457122361894, vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(0.47583457122361894, vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((IFNULL(0.47583457122361894, vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(0.47583457122361894, vt0.c0 COLLATE RTRIM));
SELECT * FROM vt0 WHERE (x'') ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST);
SELECT * FROM vt0 WHERE (x'') ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST);
SELECT * FROM vt0 WHERE (x'') ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c0)OR(((0.8609853220726915)IS(vt0.c0)))))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((0.8609853220726915)IS(vt0.c0)))))OR(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c0)OR(((0.8609853220726915)IS(vt0.c0)))))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((0.8609853220726915)IS(vt0.c0)))))OR(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c0)OR(((0.8609853220726915)IS(vt0.c0)))))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)>>(vt0.c0)))<<(((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))<<(((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)>>(vt0.c0)))<<(((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))<<(((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)>>(vt0.c0)))<<(((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (HEX(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((HEX(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (HEX(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((HEX(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (HEX(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM vt0 WHERE ((('-1294734337')&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1294734337')&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC);
SELECT ALL * FROM vt0 WHERE ((('-1294734337')&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1294734337')&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC);
SELECT ALL * FROM vt0 WHERE ((('-1294734337')&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))%(((vt0.c0)OR(x''))))) ORDER BY 0.6793475866923014  NULLS FIRST, CAST('X1xd' AS TEXT) ASC, 0Xffffffffbd4ef413  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))%(((vt0.c0)OR(x''))))) IS TRUE)  as count FROM vt0 ORDER BY 0.6793475866923014  NULLS FIRST, CAST('X1xd' AS TEXT) ASC, 0Xffffffffbd4ef413  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))%(((vt0.c0)OR(x''))))) ORDER BY 0.6793475866923014  NULLS FIRST, CAST('X1xd' AS TEXT) ASC, 0Xffffffffbd4ef413  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))%(((vt0.c0)OR(x''))))) IS TRUE)  as count FROM vt0 ORDER BY 0.6793475866923014  NULLS FIRST, CAST('X1xd' AS TEXT) ASC, 0Xffffffffbd4ef413  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))%(((vt0.c0)OR(x''))))) ORDER BY 0.6793475866923014  NULLS FIRST, CAST('X1xd' AS TEXT) ASC, 0Xffffffffbd4ef413  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CAST(ABS(DISTINCT vt0.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(ABS(DISTINCT vt0.c0) AS BLOB));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CAST(ABS(DISTINCT vt0.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(ABS(DISTINCT vt0.c0) AS BLOB));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CAST(ABS(DISTINCT vt0.c0) AS BLOB);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN (vt0.c0 IN (vt0.c0)) THEN json_quote(vt0.c0) WHEN 0.3382115126498414 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))<((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)/(vt0.c0)) ELSE x'3f07' END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS FALSE)  WHEN (vt0.c0 IN (vt0.c0)) THEN json_quote(vt0.c0) WHEN 0.3382115126498414 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))<((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)/(vt0.c0)) ELSE x'3f07' END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN (vt0.c0 IN (vt0.c0)) THEN json_quote(vt0.c0) WHEN 0.3382115126498414 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))<((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)/(vt0.c0)) ELSE x'3f07' END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS FALSE)  WHEN (vt0.c0 IN (vt0.c0)) THEN json_quote(vt0.c0) WHEN 0.3382115126498414 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))<((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)/(vt0.c0)) ELSE x'3f07' END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN (vt0.c0 IN (vt0.c0)) THEN json_quote(vt0.c0) WHEN 0.3382115126498414 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))<((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)/(vt0.c0)) ELSE x'3f07' END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((NULL, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC)) ORDER BY (+ (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((NULL, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((NULL, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC)) ORDER BY (+ (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((NULL, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((NULL, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC)) ORDER BY (+ (vt0.c0)) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT NULL))>=(CAST(vt0.c0 AS NUMERIC))) ASC, '-1625413429'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))>=(CAST(vt0.c0 AS NUMERIC))) ASC, '-1625413429'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT NULL))>=(CAST(vt0.c0 AS NUMERIC))) ASC, '-1625413429'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))>=(CAST(vt0.c0 AS NUMERIC))) ASC, '-1625413429'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT NULL))>=(CAST(vt0.c0 AS NUMERIC))) ASC, '-1625413429'  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) ORDER BY (((vt0.c0)AND(vt0.c0)) IN ((((0X6dac0837))<((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN ((((0X6dac0837))<((vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) ORDER BY (((vt0.c0)AND(vt0.c0)) IN ((((0X6dac0837))<((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN ((((0X6dac0837))<((vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) ORDER BY (((vt0.c0)AND(vt0.c0)) IN ((((0X6dac0837))<((vt0.c0))))) DESC;
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(0Xffffffffbe4600fb AS BLOB)) ORDER BY json_array_length(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffffbe4600fb AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY json_array_length(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(0Xffffffffbe4600fb AS BLOB)) ORDER BY json_array_length(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffffbe4600fb AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY json_array_length(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(0Xffffffffbe4600fb AS BLOB)) ORDER BY json_array_length(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'', vt0.c0))))==(((vt0.c0) NOTNULL)))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x3ee16852 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'', vt0.c0))))==(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0X3ee16852 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'', vt0.c0))))==(((vt0.c0) NOTNULL)))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x3ee16852 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'', vt0.c0))))==(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0X3ee16852 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'', vt0.c0))))==(((vt0.c0) NOTNULL)))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x3ee16852 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))-(0.7134582810622839)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))-(0.7134582810622839))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))-(0.7134582810622839)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))-(0.7134582810622839))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))-(0.7134582810622839)));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT (vt0.c0 IN ()))) ORDER BY '0.6477571088760393' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY '0.6477571088760393' COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT (vt0.c0 IN ()))) ORDER BY '0.6477571088760393' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY '0.6477571088760393' COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT (vt0.c0 IN ()))) ORDER BY '0.6477571088760393' COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((0.9839283034725412)+(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR('IjVu9'))) ORDER BY (((vt0.c0)=(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((0.9839283034725412)+(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR('IjVu9'))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)=(vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((0.9839283034725412)+(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR('IjVu9'))) ORDER BY (((vt0.c0)=(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((0.9839283034725412)+(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR('IjVu9'))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)=(vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((0.9839283034725412)+(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR('IjVu9'))) ORDER BY (((vt0.c0)=(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0 COLLATE BINARY, vt0.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c0 COLLATE BINARY, vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0 COLLATE BINARY, vt0.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c0 COLLATE BINARY, vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0 COLLATE BINARY, vt0.c0));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, ((NULL) BETWEEN ((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST, (~ (x''));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, ((NULL) BETWEEN ((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST, (~ (x'')));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, ((NULL) BETWEEN ((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST, (~ (x''));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, ((NULL) BETWEEN ((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST, (~ (x'')));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, ((NULL) BETWEEN ((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST, (~ (x''));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0, '655897551')))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0, '655897551'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0, '655897551')))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0, '655897551'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0, '655897551')))));
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('' AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('' AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND('&.')))AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND('&.')))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND('&.')))AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND('&.')))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND('&.')))AND(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY ((((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ())))==((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), GLOB(vt0.c0, vt0.c0), vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ())))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), GLOB(vt0.c0, vt0.c0), vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY ((((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ())))==((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), GLOB(vt0.c0, vt0.c0), vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ())))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), GLOB(vt0.c0, vt0.c0), vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY ((((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ())))==((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), GLOB(vt0.c0, vt0.c0), vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(x'1cd2' COLLATE BINARY)))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0 IN ()))AND(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, 0.396580095249926 COLLATE NOCASE, (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(x'1cd2' COLLATE BINARY)))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))AND(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, 0.396580095249926 COLLATE NOCASE, (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(x'1cd2' COLLATE BINARY)))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0 IN ()))AND(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, 0.396580095249926 COLLATE NOCASE, (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(x'1cd2' COLLATE BINARY)))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))AND(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, 0.396580095249926 COLLATE NOCASE, (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ ('0.8440970948212887')))*(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('0.8440970948212887')))*(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ ('0.8440970948212887')))*(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('0.8440970948212887')))*(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ ('0.8440970948212887')))*(CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>(('-27812974' IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN (((~ ('847704015')))) AND ((((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>(('-27812974' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((~ ('847704015')))) AND ((((vt0.c0)LIKE(vt0.c0))))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>(('-27812974' IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN (((~ ('847704015')))) AND ((((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>(('-27812974' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((~ ('847704015')))) AND ((((vt0.c0)LIKE(vt0.c0))))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>(('-27812974' IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN (((~ ('847704015')))) AND ((((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((('1149068494')-(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('1149068494')-(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('1149068494')-(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('1149068494')-(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('1149068494')-(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, 0.9219128233122978)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, 0.9219128233122978)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, 0.9219128233122978)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, 0.9219128233122978)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, 0.9219128233122978)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN 0.2870969682923322 END));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN 0.2870969682923322 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN 0.2870969682923322 END));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN 0.2870969682923322 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN 0.2870969682923322 END));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((0.9849210450706424) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((0.9849210450706424) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((0.9849210450706424) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((0.9849210450706424) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((0.9849210450706424) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND ((0xffffffffe0ff1f33 IN (-8.39360473E8)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND ((0xffffffffe0ff1f33 IN (-8.39360473E8))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND ((0xffffffffe0ff1f33 IN (-8.39360473E8)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND ((0xffffffffe0ff1f33 IN (-8.39360473E8))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND ((0xffffffffe0ff1f33 IN (-8.39360473E8)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))>=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT NULL)))>=((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))>=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT NULL)))>=((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))>=((vt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))+((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))+((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))+((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))+((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))+((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) ORDER BY NULL;
SELECT ALL * FROM vt0 WHERE (RTRIM((- (vt0.c0)))) ORDER BY load_extension(((((NULL)AND(vt0.c0)))OR(NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(((((NULL)AND(vt0.c0)))OR(NULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (RTRIM((- (vt0.c0)))) ORDER BY load_extension(((((NULL)AND(vt0.c0)))OR(NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(((((NULL)AND(vt0.c0)))OR(NULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (RTRIM((- (vt0.c0)))) ORDER BY load_extension(((((NULL)AND(vt0.c0)))OR(NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((NULLIF(vt0.c0, vt0.c0))OR(((vt0.c0)<>(vt0.c0)))))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(vt0.c0, vt0.c0))OR(((vt0.c0)<>(vt0.c0)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULLIF(vt0.c0, vt0.c0))OR(((vt0.c0)<>(vt0.c0)))))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(vt0.c0, vt0.c0))OR(((vt0.c0)<>(vt0.c0)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULLIF(vt0.c0, vt0.c0))OR(((vt0.c0)<>(vt0.c0)))))AND((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE((((vt0.c0))=((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE((((vt0.c0))==((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE((((vt0.c0))=((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE((((vt0.c0))==((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE((((vt0.c0))=((vt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(0.6827418461488282)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(0.6827418461488282)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(0.6827418461488282)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(0.6827418461488282)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(0.6827418461488282)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE -1624150202 END, ((vt0.c0) NOTNULL), (NOT (vt0.c0)), ((((((((vt0.c0)AND('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE -1624150202 END, ((vt0.c0) NOTNULL), (NOT (vt0.c0)), ((((((((vt0.c0)AND('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE -1624150202 END, ((vt0.c0) NOTNULL), (NOT (vt0.c0)), ((((((((vt0.c0)AND('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE -1624150202 END, ((vt0.c0) NOTNULL), (NOT (vt0.c0)), ((((((((vt0.c0)AND('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE -1624150202 END, ((vt0.c0) NOTNULL), (NOT (vt0.c0)), ((((((((vt0.c0)AND('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT * FROM vt0 WHERE (((((NULL)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((NULL)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((NULL)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS INTEGER))));
SELECT * FROM vt0 WHERE (((vt0.c0)&(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)&(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)&(x'')) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT '-1118899181')) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY '608535225', ((((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0)))AND(NULLIF(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT NULL))))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(x'b172'))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT '-1118899181')) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY '608535225', ((((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0)))AND(NULLIF(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT NULL))))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(x'b172')))));
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT '-1118899181')) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY '608535225', ((((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0)))AND(NULLIF(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT NULL))))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(x'b172'))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT '-1118899181')) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY '608535225', ((((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0)))AND(NULLIF(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT NULL))))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(x'b172')))));
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT '-1118899181')) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY '608535225', ((((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0)))AND(NULLIF(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT NULL))))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(x'b172'))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)&(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)&(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(((vt0.c0)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE (((x'') NOT BETWEEN (((((x'')AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (((((x'')AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'') NOT BETWEEN (((((x'')AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (((((x'')AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'') NOT BETWEEN (((((x'')AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<(CASE WHEN ' 羨燒XD䦯' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<(CASE WHEN ' 羨燒XD䦯' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<(CASE WHEN ' 羨燒XD䦯' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<(CASE WHEN ' 羨燒XD䦯' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<(CASE WHEN ' 羨燒XD䦯' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT NULL)) ORDER BY CAST(NULL AS NUMERIC) ASC, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS NUMERIC) ASC, x''  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT NULL)) ORDER BY CAST(NULL AS NUMERIC) ASC, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS NUMERIC) ASC, x''  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT NULL)) ORDER BY CAST(NULL AS NUMERIC) ASC, x''  NULLS FIRST;
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0)|(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0)|(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0)|(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0)|(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0)|(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=('684353365')) THEN TYPEOF(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>=('684353365')) THEN TYPEOF(vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=('684353365')) THEN TYPEOF(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>=('684353365')) THEN TYPEOF(vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=('684353365')) THEN TYPEOF(vt0.c0) END);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CASE NULL  WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE NULL  WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CASE NULL  WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE NULL  WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CASE NULL  WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC)) ORDER BY (((((vt0.c0)+(vt0.c0))))=((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)+(vt0.c0))))=((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC)) ORDER BY (((((vt0.c0)+(vt0.c0))))=((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)+(vt0.c0))))=((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC)) ORDER BY (((((vt0.c0)+(vt0.c0))))=((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY x'' DESC, CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC, CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY x'' DESC, CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC, CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY x'' DESC, CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ''  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<(((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c0)))) ORDER BY ((TRIM(vt0.c0))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<(((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<(((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c0)))) ORDER BY ((TRIM(vt0.c0))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<(((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<(((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c0)))) ORDER BY ((TRIM(vt0.c0))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))<=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) IS TRUE)  NULLS FIRST, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))<=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0))) IS TRUE)  NULLS FIRST, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))<=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) IS TRUE)  NULLS FIRST, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))<=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0))) IS TRUE)  NULLS FIRST, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))<=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) IS TRUE)  NULLS FIRST, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))+((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))+((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))+((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))+((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))+((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==(((vt0.c0)>=(0.8574262282713214))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))=(((vt0.c0)>=(0.8574262282713214))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==(((vt0.c0)>=(0.8574262282713214))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))=(((vt0.c0)>=(0.8574262282713214))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==(((vt0.c0)>=(0.8574262282713214))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT ALL * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4056746774003709)) ELSE ((vt0.c0)>(vt0.c0)) END) ORDER BY ((TRIM(vt0.c0))>(((vt0.c0)|(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4056746774003709)) ELSE ((vt0.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))>(((vt0.c0)|(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4056746774003709)) ELSE ((vt0.c0)>(vt0.c0)) END) ORDER BY ((TRIM(vt0.c0))>(((vt0.c0)|(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4056746774003709)) ELSE ((vt0.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))>(((vt0.c0)|(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4056746774003709)) ELSE ((vt0.c0)>(vt0.c0)) END) ORDER BY ((TRIM(vt0.c0))>(((vt0.c0)|(vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(json_remove(vt0.c0, vt0.c0)))) ORDER BY RTRIM(vt0.c0) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(json_remove(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY RTRIM(vt0.c0) COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(json_remove(vt0.c0, vt0.c0)))) ORDER BY RTRIM(vt0.c0) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(json_remove(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY RTRIM(vt0.c0) COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(json_remove(vt0.c0, vt0.c0)))) ORDER BY RTRIM(vt0.c0) COLLATE BINARY ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY HEX(DISTINCT vt0.c0 COLLATE RTRIM) ASC, '0.08486782591066422' COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT vt0.c0 COLLATE RTRIM) ASC, '0.08486782591066422' COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY HEX(DISTINCT vt0.c0 COLLATE RTRIM) ASC, '0.08486782591066422' COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT vt0.c0 COLLATE RTRIM) ASC, '0.08486782591066422' COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY HEX(DISTINCT vt0.c0 COLLATE RTRIM) ASC, '0.08486782591066422' COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((((vt0.c0))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((((vt0.c0))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((((vt0.c0))=((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN '0.3144325074645453' WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN HEX(vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN '-20130692' WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))==((x''))) THEN ((vt0.c0)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN '0.3144325074645453' WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN HEX(vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN '-20130692' WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))==((x''))) THEN ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN '0.3144325074645453' WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN HEX(vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN '-20130692' WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))==((x''))) THEN ((vt0.c0)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN '0.3144325074645453' WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN HEX(vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN '-20130692' WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))==((x''))) THEN ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN '0.3144325074645453' WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN HEX(vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN '-20130692' WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))==((x''))) THEN ((vt0.c0)>=(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((0.9486987340719963 IN ()), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS FALSE))))) ORDER BY (((('}+') IS TRUE)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((0.9486987340719963 IN ()), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0 ORDER BY (((('}+') IS TRUE)) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((0.9486987340719963 IN ()), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS FALSE))))) ORDER BY (((('}+') IS TRUE)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((0.9486987340719963 IN ()), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0 ORDER BY (((('}+') IS TRUE)) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((0.9486987340719963 IN ()), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS FALSE))))) ORDER BY (((('}+') IS TRUE)) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((('NAh##5A')OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((vt0.c0) ISNULL), ((vt0.c0 COLLATE RTRIM)!=('141608925' COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((('NAh##5A')OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL), ((vt0.c0 COLLATE RTRIM)<>('141608925' COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0 WHERE (((((('NAh##5A')OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((vt0.c0) ISNULL), ((vt0.c0 COLLATE RTRIM)!=('141608925' COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((('NAh##5A')OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL), ((vt0.c0 COLLATE RTRIM)<>('141608925' COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0 WHERE (((((('NAh##5A')OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((vt0.c0) ISNULL), ((vt0.c0 COLLATE RTRIM)!=('141608925' COLLATE RTRIM)) DESC;
SELECT ALL * FROM vt0 WHERE ((((x'') IS TRUE) IN ())) ORDER BY UPPER(((vt0.c0)GLOB(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'') IS TRUE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((vt0.c0)GLOB(vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((x'') IS TRUE) IN ())) ORDER BY UPPER(((vt0.c0)GLOB(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'') IS TRUE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((vt0.c0)GLOB(vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((x'') IS TRUE) IN ())) ORDER BY UPPER(((vt0.c0)GLOB(vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (NULL)), CAST(vt0.c0 AS TEXT)))>((vt0.c0 COLLATE RTRIM, ((((NULL)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (NULL)), CAST(vt0.c0 AS TEXT)))>((vt0.c0 COLLATE RTRIM, ((((NULL)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (NULL)), CAST(vt0.c0 AS TEXT)))>((vt0.c0 COLLATE RTRIM, ((((NULL)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (NULL)), CAST(vt0.c0 AS TEXT)))>((vt0.c0 COLLATE RTRIM, ((((NULL)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (NULL)), CAST(vt0.c0 AS TEXT)))>((vt0.c0 COLLATE RTRIM, ((((NULL)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((PRINTF(vt0.c0) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((PRINTF(vt0.c0) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((PRINTF(vt0.c0) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((PRINTF(vt0.c0) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((PRINTF(vt0.c0) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))>=(((0.18086380673646751) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))>=(((0.18086380673646751) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))>=(((0.18086380673646751) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))>=(((0.18086380673646751) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))>=(((0.18086380673646751) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.6561675587192183 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.6561675587192183 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.6561675587192183 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.6561675587192183 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.6561675587192183 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) ISNULL))));
SELECT * FROM vt0 WHERE ((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) ORDER BY 'j䈯' ASC  NULLS LAST, (vt0.c0 IN (((vt0.c0)OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) IS TRUE)  as count FROM vt0 ORDER BY 'j䈯' ASC  NULLS LAST, (vt0.c0 IN (((vt0.c0)OR(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) ORDER BY 'j䈯' ASC  NULLS LAST, (vt0.c0 IN (((vt0.c0)OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) IS TRUE)  as count FROM vt0 ORDER BY 'j䈯' ASC  NULLS LAST, (vt0.c0 IN (((vt0.c0)OR(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) ORDER BY 'j䈯' ASC  NULLS LAST, (vt0.c0 IN (((vt0.c0)OR(vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN 0.09500277838603266 THEN vt0.c0 ELSE -5.3898124E7 END)OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN 0.09500277838603266 THEN vt0.c0 ELSE -5.3898124E7 END)OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN 0.09500277838603266 THEN vt0.c0 ELSE -5.3898124E7 END)OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN 0.09500277838603266 THEN vt0.c0 ELSE -5.3898124E7 END)OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN 0.09500277838603266 THEN vt0.c0 ELSE -5.3898124E7 END)OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)=(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)=(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)=(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)=(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)=(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ('0.08486782591066422') ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM))) DESC, ((CAST(vt0.c0 AS BLOB)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (('0.08486782591066422') IS TRUE)  as count FROM vt0 ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM))) DESC, ((CAST(vt0.c0 AS BLOB)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ('0.08486782591066422') ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM))) DESC, ((CAST(vt0.c0 AS BLOB)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (('0.08486782591066422') IS TRUE)  as count FROM vt0 ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM))) DESC, ((CAST(vt0.c0 AS BLOB)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ('0.08486782591066422') ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM))) DESC, ((CAST(vt0.c0 AS BLOB)) NOTNULL);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (UNLIKELY(vt0.c0)))) ORDER BY TYPEOF(((vt0.c0)>=(vt0.c0))) ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((vt0.c0)>=(vt0.c0))) ASC  NULLS LAST, NULL  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (UNLIKELY(vt0.c0)))) ORDER BY TYPEOF(((vt0.c0)>=(vt0.c0))) ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((vt0.c0)>=(vt0.c0))) ASC  NULLS LAST, NULL  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (UNLIKELY(vt0.c0)))) ORDER BY TYPEOF(((vt0.c0)>=(vt0.c0))) ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((('8~')|(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('8~')|(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('8~')|(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('8~')|(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('8~')|(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY LTRIM(NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY LTRIM(NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY LTRIM(NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY LTRIM(NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY LTRIM(NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((('')<(LIKELY(vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('')<(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) ASC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((('')<(LIKELY(vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('')<(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) ASC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((('')<(LIKELY(vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%('' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%('' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%('' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%('' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%('' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.03503194569837009) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.03503194569837009) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.03503194569837009) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.03503194569837009) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.03503194569837009) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC)) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC)) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC)) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) ORDER BY ((NULL) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOTNULL));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) ORDER BY ((NULL) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOTNULL));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) ORDER BY ((NULL) NOTNULL);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))>(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))>(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>(((vt0.c0)+(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((('1892198203')LIKE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((('1892198203')LIKE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE ((('1892198203')LIKE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((('1892198203')LIKE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE ((('1892198203')LIKE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-502047086' END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-502047086' END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-502047086' END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-502047086' END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-502047086' END AS TEXT));
SELECT * FROM vt0 WHERE (json_patch((vt0.c0 IN (vt0.c0)), vt0.c0)) ORDER BY ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT ((json_patch((vt0.c0 IN (vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS TRUE));
SELECT * FROM vt0 WHERE (json_patch((vt0.c0 IN (vt0.c0)), vt0.c0)) ORDER BY ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT ((json_patch((vt0.c0 IN (vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS TRUE));
SELECT * FROM vt0 WHERE (json_patch((vt0.c0 IN (vt0.c0)), vt0.c0)) ORDER BY ((NULL) IS TRUE);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (NULL IN ()) THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN (NULL IN ()) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (NULL IN ()) THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN (NULL IN ()) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (NULL IN ()) THEN (- (vt0.c0)) END);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((-367674191)AND(vt0.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((-367674191)AND(vt0.c0)))AND(x''))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((-367674191)AND(vt0.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((-367674191)AND(vt0.c0)))AND(x''))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((-367674191)AND(vt0.c0)))AND(x'')))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0)))) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0)))) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0)))) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND ('464164131')))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (vt0.c0) AND ('464164131'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND ('464164131')))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (vt0.c0) AND ('464164131'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND ('464164131')))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0, vt0.c0, '1405528553'))>=((vt0.c0, vt0.c0, vt0.c0))))|(0.5771000654596963 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, '1405528553'))>=((vt0.c0, vt0.c0, vt0.c0))))|(0.5771000654596963 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0, vt0.c0, '1405528553'))>=((vt0.c0, vt0.c0, vt0.c0))))|(0.5771000654596963 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, '1405528553'))>=((vt0.c0, vt0.c0, vt0.c0))))|(0.5771000654596963 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0, vt0.c0, '1405528553'))>=((vt0.c0, vt0.c0, vt0.c0))))|(0.5771000654596963 COLLATE RTRIM));
SELECT * FROM vt0 WHERE ((('\\') BETWEEN (((vt0.c0)<<(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0) NOTNULL), vt0.c0))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ('0.28800711322300077' IN ()), ((vt0.c0)>=(''))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('\\') BETWEEN (((vt0.c0)<<(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0) NOTNULL), vt0.c0))==((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ('0.28800711322300077' IN ()), ((vt0.c0)>=(''))))) ASC);
SELECT * FROM vt0 WHERE ((('\\') BETWEEN (((vt0.c0)<<(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0) NOTNULL), vt0.c0))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ('0.28800711322300077' IN ()), ((vt0.c0)>=(''))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('\\') BETWEEN (((vt0.c0)<<(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0) NOTNULL), vt0.c0))==((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ('0.28800711322300077' IN ()), ((vt0.c0)>=(''))))) ASC);
SELECT * FROM vt0 WHERE ((('\\') BETWEEN (((vt0.c0)<<(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0) NOTNULL), vt0.c0))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ('0.28800711322300077' IN ()), ((vt0.c0)>=(''))))) ASC;
SELECT ALL * FROM vt0 WHERE (((((((((((((((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0))<((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (((vt0.c0))==((((vt0.c0)%(vt0.c0))))) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>=((vt0.c0 IN (NULL)))) DESC  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0))<((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))=((((vt0.c0)%(vt0.c0))))) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>=((vt0.c0 IN (NULL)))) DESC  NULLS LAST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((((((((((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0))<((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (((vt0.c0))==((((vt0.c0)%(vt0.c0))))) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>=((vt0.c0 IN (NULL)))) DESC  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0))<((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))=((((vt0.c0)%(vt0.c0))))) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>=((vt0.c0 IN (NULL)))) DESC  NULLS LAST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((((((((((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0))<((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (((vt0.c0))==((((vt0.c0)%(vt0.c0))))) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>=((vt0.c0 IN (NULL)))) DESC  NULLS LAST, vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE ((LIKELIHOOD(vt0.c0, 0.6056796199622089) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)  NULLS LAST, CASE (((vt0.c0))!=((vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)>=(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END THEN (- (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'b49d' ELSE vt0.c0 END THEN (+ ('UF')) ELSE vt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(vt0.c0, 0.6056796199622089) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)  NULLS LAST, CASE (((vt0.c0))<>((vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)>=(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END THEN (- (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'b49d' ELSE vt0.c0 END THEN (+ ('UF')) ELSE vt0.c0 COLLATE RTRIM END ASC);
SELECT COUNT(*) FROM vt0 WHERE ((LIKELIHOOD(vt0.c0, 0.6056796199622089) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)  NULLS LAST, CASE (((vt0.c0))!=((vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)>=(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END THEN (- (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'b49d' ELSE vt0.c0 END THEN (+ ('UF')) ELSE vt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(vt0.c0, 0.6056796199622089) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)  NULLS LAST, CASE (((vt0.c0))<>((vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)>=(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END THEN (- (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'b49d' ELSE vt0.c0 END THEN (+ ('UF')) ELSE vt0.c0 COLLATE RTRIM END ASC);
SELECT COUNT(*) FROM vt0 WHERE ((LIKELIHOOD(vt0.c0, 0.6056796199622089) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)  NULLS LAST, CASE (((vt0.c0))!=((vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)>=(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END THEN (- (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'b49d' ELSE vt0.c0 END THEN (+ ('UF')) ELSE vt0.c0 COLLATE RTRIM END ASC;
SELECT * FROM vt0 WHERE ((((((0.9138720025090098))>=((vt0.c0))))<<(LIKELIHOOD(vt0.c0, 0.3447731008545435))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9138720025090098))>=((vt0.c0))))<<(LIKELIHOOD(vt0.c0, 0.3447731008545435)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((0.9138720025090098))>=((vt0.c0))))<<(LIKELIHOOD(vt0.c0, 0.3447731008545435))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9138720025090098))>=((vt0.c0))))<<(LIKELIHOOD(vt0.c0, 0.3447731008545435)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((0.9138720025090098))>=((vt0.c0))))<<(LIKELIHOOD(vt0.c0, 0.3447731008545435))));
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), UPPER(DISTINCT vt0.c0), ((vt0.c0)||(vt0.c0)), vt0.c0))<((vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), UPPER(DISTINCT vt0.c0), ((vt0.c0)||(vt0.c0)), vt0.c0))<((vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), UPPER(DISTINCT vt0.c0), ((vt0.c0)||(vt0.c0)), vt0.c0))<((vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), UPPER(DISTINCT vt0.c0), ((vt0.c0)||(vt0.c0)), vt0.c0))<((vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), UPPER(DISTINCT vt0.c0), ((vt0.c0)||(vt0.c0)), vt0.c0))<((vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'06c671ab')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>((((vt0.c0))=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'06c671ab')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>((((vt0.c0))=((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'06c671ab')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>((((vt0.c0))=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'06c671ab')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>((((vt0.c0))=((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'06c671ab')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>((((vt0.c0))=((vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (0.4119894582532073);
SELECT SUM(count) FROM (SELECT ((0.4119894582532073) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.4119894582532073);
SELECT SUM(count) FROM (SELECT ((0.4119894582532073) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.4119894582532073);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)>>(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>>(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)>>(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>>(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)>>(vt0.c0)) IN ());
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))IS(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))IS(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))IS(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))IS(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))IS(CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((CAST(vt0.c0 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((CAST(vt0.c0 AS INTEGER))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((CAST(vt0.c0 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((CAST(vt0.c0 AS INTEGER))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((CAST(vt0.c0 AS INTEGER))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, LIKELIHOOD(vt0.c0, 0.5918560608911416), (((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0)*(vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((vt0.c0)OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, LIKELIHOOD(vt0.c0, 0.5918560608911416), (((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0)*(vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((vt0.c0)OR(vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, LIKELIHOOD(vt0.c0, 0.5918560608911416), (((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0)*(vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((vt0.c0)OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, LIKELIHOOD(vt0.c0, 0.5918560608911416), (((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0)*(vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((vt0.c0)OR(vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, LIKELIHOOD(vt0.c0, 0.5918560608911416), (((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0)*(vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((vt0.c0)OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0))<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0 COLLATE NOCASE DESC, 0.5680569981432053  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c0, vt0.c0))<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE DESC, 0.5680569981432053  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0))<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0 COLLATE NOCASE DESC, 0.5680569981432053  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c0, vt0.c0))<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE DESC, 0.5680569981432053  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0))<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0 COLLATE NOCASE DESC, 0.5680569981432053  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY 0.5893723545182613 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY 0.5893723545182613 COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY 0.5893723545182613 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY 0.5893723545182613 COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY 0.5893723545182613 COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (0.7052898039045966) ORDER BY (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7052898039045966) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.7052898039045966) ORDER BY (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7052898039045966) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.7052898039045966) ORDER BY (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ('-2000830850', vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ('-2000830850', vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ('-2000830850', vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ('-2000830850', vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ('-2000830850', vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)IS NOT(x'')) THEN (+ (vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((vt0.c0)-((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)IS NOT(x'')) THEN (+ (vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)-((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)IS NOT(x'')) THEN (+ (vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((vt0.c0)-((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)IS NOT(x'')) THEN (+ (vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)-((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)IS NOT(x'')) THEN (+ (vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((vt0.c0)-((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (ABS(DISTINCT NULL) COLLATE NOCASE) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END);
SELECT * FROM vt0 WHERE (ABS(DISTINCT NULL) COLLATE NOCASE) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END);
SELECT * FROM vt0 WHERE (ABS(DISTINCT NULL) COLLATE NOCASE) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))!=((vt0.c0)))) ORDER BY 0.30906286165483887  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.30906286165483887  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))!=((vt0.c0)))) ORDER BY 0.30906286165483887  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.30906286165483887  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))!=((vt0.c0)))) ORDER BY 0.30906286165483887  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (QUOTE(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (QUOTE(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (QUOTE(vt0.c0));
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CASE WHEN NULL THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE WHEN NULL THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CASE WHEN NULL THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE WHEN NULL THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CASE WHEN NULL THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE (((0.8341475372736005) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0.8341475372736005) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.8341475372736005) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0.8341475372736005) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.8341475372736005) IS TRUE));
SELECT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (1247213569))))) ORDER BY LOWER(DISTINCT ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (1247213569))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (1247213569))))) ORDER BY LOWER(DISTINCT ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (1247213569))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (1247213569))))) ORDER BY LOWER(DISTINCT ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (x'') AND (vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (x'') AND (vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (x'') AND (vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (x'') AND (vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (x'') AND (vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(LOWER(vt0.c0)))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (NULL))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(LOWER(vt0.c0)))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (NULL))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(LOWER(vt0.c0)))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (NULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME((((0Xc344e37, vt0.c0, vt0.c0))>((0.9349495000917155, vt0.c0, vt0.c0))), 0Xffffffffdaa2db2e, (((vt0.c0))=(('-583485934')))));
SELECT SUM(count) FROM (SELECT ALL ((TIME((((0Xc344e37, vt0.c0, vt0.c0))>((0.9349495000917155, vt0.c0, vt0.c0))), 0Xffffffffdaa2db2e, (((vt0.c0))=(('-583485934'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME((((0Xc344e37, vt0.c0, vt0.c0))>((0.9349495000917155, vt0.c0, vt0.c0))), 0Xffffffffdaa2db2e, (((vt0.c0))=(('-583485934')))));
SELECT SUM(count) FROM (SELECT ALL ((TIME((((0Xc344e37, vt0.c0, vt0.c0))>((0.9349495000917155, vt0.c0, vt0.c0))), 0Xffffffffdaa2db2e, (((vt0.c0))=(('-583485934'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME((((0Xc344e37, vt0.c0, vt0.c0))>((0.9349495000917155, vt0.c0, vt0.c0))), 0Xffffffffdaa2db2e, (((vt0.c0))=(('-583485934')))));
SELECT * FROM vt0 WHERE (rtreenode(vt0.c0 COLLATE BINARY, NULL));
SELECT SUM(count) FROM (SELECT ((rtreenode(vt0.c0 COLLATE BINARY, NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (rtreenode(vt0.c0 COLLATE BINARY, NULL));
SELECT SUM(count) FROM (SELECT ((rtreenode(vt0.c0 COLLATE BINARY, NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (rtreenode(vt0.c0 COLLATE BINARY, NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((((vt0.c0) BETWEEN (vt0.c0) AND (-10575705)))))) ORDER BY vt0.c0  NULLS FIRST, CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))>((((vt0.c0) BETWEEN (vt0.c0) AND (-10575705)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c0  NULLS FIRST, CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END  NULLS FIRST, vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((((vt0.c0) BETWEEN (vt0.c0) AND (-10575705)))))) ORDER BY vt0.c0  NULLS FIRST, CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))>((((vt0.c0) BETWEEN (vt0.c0) AND (-10575705)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c0  NULLS FIRST, CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END  NULLS FIRST, vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((((vt0.c0) BETWEEN (vt0.c0) AND (-10575705)))))) ORDER BY vt0.c0  NULLS FIRST, CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(x'' AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (('-754644900') ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (('-754644900') ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (('-754644900') ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (('-754644900') ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (('-754644900') ISNULL);
SELECT ALL * FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))IS NOT(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))%(x'cb78'))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))%(x'cb78'))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))%(x'cb78'))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))%(x'cb78'))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))%(x'cb78'))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)>=(vt0.c0)) END) ORDER BY CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC), (~ ((('592269852') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC), (~ ((('592269852') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)>=(vt0.c0)) END) ORDER BY CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC), (~ ((('592269852') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC), (~ ((('592269852') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)>=(vt0.c0)) END) ORDER BY CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC), (~ ((('592269852') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) ISNULL))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) ISNULL))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)=(vt0.c0)) END) ORDER BY json((vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)==(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY json((vt0.c0 IN ()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)=(vt0.c0)) END) ORDER BY json((vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)==(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY json((vt0.c0 IN ()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)=(vt0.c0)) END) ORDER BY json((vt0.c0 IN ()))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((0.05969024573278103) BETWEEN (vt0.c0) AND ('0.2340101190382743')) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN ((0.05969024573278103) BETWEEN (vt0.c0) AND ('0.2340101190382743')) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((0.05969024573278103) BETWEEN (vt0.c0) AND ('0.2340101190382743')) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN ((0.05969024573278103) BETWEEN (vt0.c0) AND ('0.2340101190382743')) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((0.05969024573278103) BETWEEN (vt0.c0) AND ('0.2340101190382743')) THEN vt0.c0 COLLATE NOCASE END);
SELECT * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0))LIKE(0.03888517464375074))) ORDER BY (((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, vt0.c0))LIKE(0.03888517464375074))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0))LIKE(0.03888517464375074))) ORDER BY (((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, vt0.c0))LIKE(0.03888517464375074))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0))LIKE(0.03888517464375074))) ORDER BY (((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c0)) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (TRIM(vt0.c0, vt0.c0)))) ORDER BY (((x'', vt0.c0, vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt0.c0), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((((vt0.c0) IS FALSE), CAST(NULL AS NUMERIC), ((vt0.c0)-(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c0)) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (TRIM(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((x'', vt0.c0, vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt0.c0), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((((vt0.c0) IS FALSE), CAST(NULL AS NUMERIC), ((vt0.c0)-(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c0)) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (TRIM(vt0.c0, vt0.c0)))) ORDER BY (((x'', vt0.c0, vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt0.c0), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((((vt0.c0) IS FALSE), CAST(NULL AS NUMERIC), ((vt0.c0)-(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c0)) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (TRIM(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((x'', vt0.c0, vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt0.c0), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((((vt0.c0) IS FALSE), CAST(NULL AS NUMERIC), ((vt0.c0)-(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c0)) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (TRIM(vt0.c0, vt0.c0)))) ORDER BY (((x'', vt0.c0, vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt0.c0), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((((vt0.c0) IS FALSE), CAST(NULL AS NUMERIC), ((vt0.c0)-(vt0.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY;
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<=(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<=(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<=(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<=(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<=(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR(vt0.c0, vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR(vt0.c0, vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR(vt0.c0, vt0.c0) COLLATE BINARY);
SELECT * FROM vt0 WHERE ('-1181481947') ORDER BY ((('%*g') BETWEEN (vt0.c0) AND (NULL)) IN (UPPER(DISTINCT vt0.c0), 0.4713794089641893)) DESC, ((((((vt0.c0) IS FALSE))AND(vt0.c0)))OR(((vt0.c0)%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('-1181481947') IS TRUE)  as count FROM vt0 ORDER BY ((('%*g') BETWEEN (vt0.c0) AND (NULL)) IN (UPPER(DISTINCT vt0.c0), 0.4713794089641893)) DESC, ((((((vt0.c0) IS FALSE))AND(vt0.c0)))OR(((vt0.c0)%(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ('-1181481947') ORDER BY ((('%*g') BETWEEN (vt0.c0) AND (NULL)) IN (UPPER(DISTINCT vt0.c0), 0.4713794089641893)) DESC, ((((((vt0.c0) IS FALSE))AND(vt0.c0)))OR(((vt0.c0)%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('-1181481947') IS TRUE)  as count FROM vt0 ORDER BY ((('%*g') BETWEEN (vt0.c0) AND (NULL)) IN (UPPER(DISTINCT vt0.c0), 0.4713794089641893)) DESC, ((((((vt0.c0) IS FALSE))AND(vt0.c0)))OR(((vt0.c0)%(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ('-1181481947') ORDER BY ((('%*g') BETWEEN (vt0.c0) AND (NULL)) IN (UPPER(DISTINCT vt0.c0), 0.4713794089641893)) DESC, ((((((vt0.c0) IS FALSE))AND(vt0.c0)))OR(((vt0.c0)%(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.4093420779086757 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.4093420779086757 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.4093420779086757 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.4093420779086757 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.4093420779086757 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffe11f1300);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe11f1300) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffe11f1300);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe11f1300) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffe11f1300);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt0.c0)))) ORDER BY ((UPPER(DISTINCT vt0.c0))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(DISTINCT vt0.c0))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt0.c0)))) ORDER BY ((UPPER(DISTINCT vt0.c0))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(DISTINCT vt0.c0))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt0.c0)))) ORDER BY ((UPPER(DISTINCT vt0.c0))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt0 WHERE ((- (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0)) NOTNULL));
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c0, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c0, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c0, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE (((vt0.c0))==((vt0.c0)))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)!=(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))=((vt0.c0)))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)!=(vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE (((vt0.c0))==((vt0.c0)))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)!=(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))=((vt0.c0)))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)!=(vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE (((vt0.c0))==((vt0.c0)))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)!=(vt0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))>=((((x'') NOT BETWEEN (vt0.c0) AND (0.777583381462471))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))>=((((x'') NOT BETWEEN (vt0.c0) AND (0.777583381462471)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))>=((((x'') NOT BETWEEN (vt0.c0) AND (0.777583381462471))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))>=((((x'') NOT BETWEEN (vt0.c0) AND (0.777583381462471)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))>=((((x'') NOT BETWEEN (vt0.c0) AND (0.777583381462471))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(((vt0.c0)OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND(((vt0.c0)OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(((vt0.c0)OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND(((vt0.c0)OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(((vt0.c0)OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY x'' ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))/((NOT (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(vt0.c0)))/((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))/((NOT (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(vt0.c0)))/((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))/((NOT (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(0.690793153533943 AS INTEGER)) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), (vt0.c0 COLLATE RTRIM IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.690793153533943 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), (vt0.c0 COLLATE RTRIM IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(0.690793153533943 AS INTEGER)) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), (vt0.c0 COLLATE RTRIM IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.690793153533943 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), (vt0.c0 COLLATE RTRIM IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(0.690793153533943 AS INTEGER)) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), (vt0.c0 COLLATE RTRIM IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt0 WHERE (((CAST('-20130692' AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (x'92d1'))) ORDER BY (+ (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-20130692' AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (x'92d1'))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0 WHERE (((CAST('-20130692' AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (x'92d1'))) ORDER BY (+ (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-20130692' AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (x'92d1'))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0 WHERE (((CAST('-20130692' AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (x'92d1'))) ORDER BY (+ (((vt0.c0) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY (~ (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY (~ (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY (~ (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.9093800786621244)) AND ((vt0.c0))))>>(NULL))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((0.9093800786621244)) AND ((vt0.c0))))>>(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.9093800786621244)) AND ((vt0.c0))))>>(NULL))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((0.9093800786621244)) AND ((vt0.c0))))>>(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.9093800786621244)) AND ((vt0.c0))))>>(NULL))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)=(vt0.c0))) IS FALSE)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)=(vt0.c0))) IS FALSE)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)=(vt0.c0))) IS FALSE)) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<(((vt0.c0 IN (vt0.c0)))))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN x'e955' END, 0.42423257528887937);
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<(((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN x'e955' END, 0.42423257528887937));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<(((vt0.c0 IN (vt0.c0)))))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN x'e955' END, 0.42423257528887937);
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<(((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN x'e955' END, 0.42423257528887937));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<(((vt0.c0 IN (vt0.c0)))))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN x'e955' END, 0.42423257528887937);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES()) ORDER BY (NOT (vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES()) ORDER BY (NOT (vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES()) ORDER BY (NOT (vt0.c0 COLLATE BINARY));
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN NULL THEN x'' ELSE vt0.c0 END THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN NULL THEN x'' ELSE vt0.c0 END THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN NULL THEN x'' ELSE vt0.c0 END THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN NULL THEN x'' ELSE vt0.c0 END THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN NULL THEN x'' ELSE vt0.c0 END THEN (vt0.c0 IN ()) END);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)=(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT * FROM vt0 WHERE (((CASE WHEN 0.6204289538313631 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (QUOTE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.6204289538313631 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (QUOTE(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN 0.6204289538313631 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (QUOTE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.6204289538313631 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (QUOTE(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN 0.6204289538313631 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (QUOTE(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((+ (vt0.c0)) IN ()) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(((vt0.c0)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c0)) IN ()) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(((vt0.c0)*(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((+ (vt0.c0)) IN ()) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(((vt0.c0)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c0)) IN ()) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(((vt0.c0)*(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((+ (vt0.c0)) IN ()) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(((vt0.c0)*(vt0.c0)))) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(0X44d8b983)))IS((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(0x44d8b983)))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(0X44d8b983)))IS((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(0x44d8b983)))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(0X44d8b983)))IS((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) DESC;
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TOTAL_CHANGES()))) ORDER BY ((((x'4518') BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)*(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'4518') BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(vt0.c0)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TOTAL_CHANGES()))) ORDER BY ((((x'4518') BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)*(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'4518') BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(vt0.c0)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TOTAL_CHANGES()))) ORDER BY ((((x'4518') BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(vt0.c0));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2666889637391361)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2666889637391361)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2666889637391361)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2666889637391361)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.2666889637391361)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((ABS(x'')) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((ABS(x'')) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((ABS(x'')) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((ABS(x'')) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((ABS(x'')) NOTNULL));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((NULL))))<(((vt0.c0) ISNULL)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1400933871'))))/('햔Q')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((NULL))))<(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1400933871'))))/('햔Q')) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((NULL))))<(((vt0.c0) ISNULL)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1400933871'))))/('햔Q')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((NULL))))<(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1400933871'))))/('햔Q')) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((NULL))))<(((vt0.c0) ISNULL)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1400933871'))))/('햔Q')) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))IS(vt0.c0))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0)LIKE(vt0.c0)), -1e500)) AND (((NOT (vt0.c0)), CASE vt0.c0  WHEN '681851450' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c0))))IS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0)LIKE(vt0.c0)), -1e500)) AND (((NOT (vt0.c0)), CASE vt0.c0  WHEN '681851450' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))IS(vt0.c0))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0)LIKE(vt0.c0)), -1e500)) AND (((NOT (vt0.c0)), CASE vt0.c0  WHEN '681851450' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c0))))IS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0)LIKE(vt0.c0)), -1e500)) AND (((NOT (vt0.c0)), CASE vt0.c0  WHEN '681851450' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))IS(vt0.c0))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0)LIKE(vt0.c0)), -1e500)) AND (((NOT (vt0.c0)), CASE vt0.c0  WHEN '681851450' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (json_quote(vt0.c0)) AND (NULL))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) ELSE 'O5\rl^\r' END ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (json_quote(vt0.c0)) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) ELSE 'O5\rl^\r' END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (json_quote(vt0.c0)) AND (NULL))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) ELSE 'O5\rl^\r' END ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (json_quote(vt0.c0)) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) ELSE 'O5\rl^\r' END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (json_quote(vt0.c0)) AND (NULL))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) ELSE 'O5\rl^\r' END ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), 273392361 COLLATE NOCASE, CASE vt0.c0  WHEN NULL THEN vt0.c0 END))<((CAST(vt0.c0 AS REAL), UNLIKELY(DISTINCT vt0.c0), '컽	1G'))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS FALSE), 273392361 COLLATE NOCASE, CASE vt0.c0  WHEN NULL THEN vt0.c0 END))<((CAST(vt0.c0 AS REAL), UNLIKELY(DISTINCT vt0.c0), '컽	1G')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), 273392361 COLLATE NOCASE, CASE vt0.c0  WHEN NULL THEN vt0.c0 END))<((CAST(vt0.c0 AS REAL), UNLIKELY(DISTINCT vt0.c0), '컽	1G'))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS FALSE), 273392361 COLLATE NOCASE, CASE vt0.c0  WHEN NULL THEN vt0.c0 END))<((CAST(vt0.c0 AS REAL), UNLIKELY(DISTINCT vt0.c0), '컽	1G')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), 273392361 COLLATE NOCASE, CASE vt0.c0  WHEN NULL THEN vt0.c0 END))<((CAST(vt0.c0 AS REAL), UNLIKELY(DISTINCT vt0.c0), '컽	1G'))));
SELECT * FROM vt0 WHERE (((0.7564074599739019)AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((0.7564074599739019)AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.7564074599739019)AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((0.7564074599739019)AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.7564074599739019)AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((((((((((('273392361')AND(vt0.c0)))AND(vt0.c0)))OR('-2103165007')))OR(vt0.c0))))>(((((vt0.c0))<((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('273392361')AND(vt0.c0)))AND(vt0.c0)))OR('-2103165007')))OR(vt0.c0))))>(((((vt0.c0))<((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((('273392361')AND(vt0.c0)))AND(vt0.c0)))OR('-2103165007')))OR(vt0.c0))))>(((((vt0.c0))<((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('273392361')AND(vt0.c0)))AND(vt0.c0)))OR('-2103165007')))OR(vt0.c0))))>(((((vt0.c0))<((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((('273392361')AND(vt0.c0)))AND(vt0.c0)))OR('-2103165007')))OR(vt0.c0))))>(((((vt0.c0))<((vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN NULL THEN ((vt0.c0)<>(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY (((((1.81483273E9))<>((vt0.c0))))*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC, (+ ((~ (NULL))));
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN NULL THEN ((vt0.c0)!=(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((1.81483273E9))!=((vt0.c0))))*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC, (+ ((~ (NULL)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN NULL THEN ((vt0.c0)<>(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY (((((1.81483273E9))<>((vt0.c0))))*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC, (+ ((~ (NULL))));
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN NULL THEN ((vt0.c0)!=(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((1.81483273E9))!=((vt0.c0))))*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC, (+ ((~ (NULL)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN NULL THEN ((vt0.c0)<>(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY (((((1.81483273E9))<>((vt0.c0))))*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC, (+ ((~ (NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(((((vt0.c0)AND('')))OR('-282038030')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND('')))OR('-282038030')) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(((((vt0.c0)AND('')))OR('-282038030')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND('')))OR('-282038030')) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(((((vt0.c0)AND('')))OR('-282038030')) AS INTEGER);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-20130692'))) BETWEEN (((vt0.c0)+('-333606710'))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-20130692'))) BETWEEN (((vt0.c0)+('-333606710'))) AND (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-20130692'))) BETWEEN (((vt0.c0)+('-333606710'))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-20130692'))) BETWEEN (((vt0.c0)+('-333606710'))) AND (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-20130692'))) BETWEEN (((vt0.c0)+('-333606710'))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY (((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))<=((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CASE ((vt0.c0)<>(vt0.c0))  WHEN CASE '+*.C#f閪'  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN (- (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, -817545882, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN x'' THEN vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))<=((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CASE ((vt0.c0)<>(vt0.c0))  WHEN CASE '+*.C#f閪'  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN (- (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, -817545882, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN x'' THEN vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY (((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))<=((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CASE ((vt0.c0)<>(vt0.c0))  WHEN CASE '+*.C#f閪'  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN (- (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, -817545882, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN x'' THEN vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))<=((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CASE ((vt0.c0)<>(vt0.c0))  WHEN CASE '+*.C#f閪'  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN (- (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, -817545882, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN x'' THEN vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY (((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))<=((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CASE ((vt0.c0)<>(vt0.c0))  WHEN CASE '+*.C#f閪'  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN (- (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, -817545882, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN x'' THEN vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0X59a81b2e)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0X59a81b2e)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0X59a81b2e)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0X59a81b2e)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0X59a81b2e)))OR(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0))))OR(((vt0.c0)IS NOT(NULL)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))==((vt0.c0))))OR(((vt0.c0)IS NOT(NULL)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0))))OR(((vt0.c0)IS NOT(NULL)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))==((vt0.c0))))OR(((vt0.c0)IS NOT(NULL)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0))))OR(((vt0.c0)IS NOT(NULL)))))AND((NOT (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (json_patch((- (vt0.c0)), vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_patch((- (vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_patch((- (vt0.c0)), vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_patch((- (vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_patch((- (vt0.c0)), vt0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((vt0.c0 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((vt0.c0 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((vt0.c0 IN ())) ISNULL) DESC;
SELECT ALL * FROM vt0 WHERE ((~ (0.9302642632486108))) ORDER BY (~ ((((vt0.c0))!=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.9302642632486108))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0))!=((vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (0.9302642632486108))) ORDER BY (~ ((((vt0.c0))!=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.9302642632486108))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0))!=((vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (0.9302642632486108))) ORDER BY (~ ((((vt0.c0))!=((vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((('774998823'))>=((QUOTE(vt0.c0))))) ORDER BY ((vt0.c0) NOTNULL)  NULLS LAST, vt0.c0  NULLS FIRST, MAX(0.38122340451395476, vt0.c0) COLLATE RTRIM DESC, (('1741598733')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('774998823'))>=((QUOTE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL)  NULLS LAST, vt0.c0  NULLS FIRST, MAX(0.38122340451395476, vt0.c0) COLLATE RTRIM DESC, (('1741598733')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((('774998823'))>=((QUOTE(vt0.c0))))) ORDER BY ((vt0.c0) NOTNULL)  NULLS LAST, vt0.c0  NULLS FIRST, MAX(0.38122340451395476, vt0.c0) COLLATE RTRIM DESC, (('1741598733')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('774998823'))>=((QUOTE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL)  NULLS LAST, vt0.c0  NULLS FIRST, MAX(0.38122340451395476, vt0.c0) COLLATE RTRIM DESC, (('1741598733')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((('774998823'))>=((QUOTE(vt0.c0))))) ORDER BY ((vt0.c0) NOTNULL)  NULLS LAST, vt0.c0  NULLS FIRST, MAX(0.38122340451395476, vt0.c0) COLLATE RTRIM DESC, (('1741598733')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))<=((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC, (NOT ((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))<=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC, (NOT ((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))<=((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC, (NOT ((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))<=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC, (NOT ((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))<=((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC, (NOT ((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))AND(((vt0.c0) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(UNICODE(vt0.c0)))) ORDER BY 0.2776596689502747  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))AND(((vt0.c0) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(UNICODE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.2776596689502747  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))AND(((vt0.c0) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(UNICODE(vt0.c0)))) ORDER BY 0.2776596689502747  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))AND(((vt0.c0) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(UNICODE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.2776596689502747  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))AND(((vt0.c0) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(UNICODE(vt0.c0)))) ORDER BY 0.2776596689502747  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((((vt0.c0)OR(vt0.c0)))AND(0.8505916404524101)), (+ (0.32543717481452683))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((((vt0.c0)OR(vt0.c0)))AND(0.8505916404524101)), (+ (0.32543717481452683)))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((((vt0.c0)OR(vt0.c0)))AND(0.8505916404524101)), (+ (0.32543717481452683))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((((vt0.c0)OR(vt0.c0)))AND(0.8505916404524101)), (+ (0.32543717481452683)))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((((vt0.c0)OR(vt0.c0)))AND(0.8505916404524101)), (+ (0.32543717481452683))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (json_object(vt0.c0, vt0.c0, vt0.c0, '943235033', vt0.c0, x''))));
SELECT SUM(count) FROM (SELECT ALL (((~ (json_object(vt0.c0, vt0.c0, vt0.c0, '943235033', vt0.c0, x'')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (json_object(vt0.c0, vt0.c0, vt0.c0, '943235033', vt0.c0, x''))));
SELECT SUM(count) FROM (SELECT ALL (((~ (json_object(vt0.c0, vt0.c0, vt0.c0, '943235033', vt0.c0, x'')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (json_object(vt0.c0, vt0.c0, vt0.c0, '943235033', vt0.c0, x''))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0) ISNULL)))) ORDER BY ((0.8796046733950883) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.8796046733950883) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0) ISNULL)))) ORDER BY ((0.8796046733950883) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.8796046733950883) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0) ISNULL)))) ORDER BY ((0.8796046733950883) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((+ (vt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 0.8781011777877687, vt0.c0))) END  NULLS FIRST, LOWER((((vt0.c0))<>((vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 0.8781011777877687, vt0.c0))) END  NULLS FIRST, LOWER((((vt0.c0))!=((vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 0.8781011777877687, vt0.c0))) END  NULLS FIRST, LOWER((((vt0.c0))<>((vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 0.8781011777877687, vt0.c0))) END  NULLS FIRST, LOWER((((vt0.c0))!=((vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 0.8781011777877687, vt0.c0))) END  NULLS FIRST, LOWER((((vt0.c0))<>((vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE ((('cTg}fM')IS NOT(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('cTg}fM')IS NOT(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('cTg}fM')IS NOT(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('cTg}fM')IS NOT(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('cTg}fM')IS NOT(((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)=(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((((((('Nc')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((((((('Nc')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((((((('Nc')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((((((('Nc')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((((TRIM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((((((('Nc')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN -5.50942977E8 ELSE vt0.c0 END)) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN -5.50942977E8 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN -5.50942977E8 ELSE vt0.c0 END)) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN -5.50942977E8 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN -5.50942977E8 ELSE vt0.c0 END)) AND (((vt0.c0 IN ())))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>(((vt0.c0) ISNULL)))) ORDER BY (NULL IN (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE CASE WHEN '|8\' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.8797281534255583) IS FALSE) ELSE (('296869760')IS NOT(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE CASE WHEN '|8\' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.8797281534255583) IS FALSE) ELSE (('296869760')IS NOT(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>(((vt0.c0) ISNULL)))) ORDER BY (NULL IN (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE CASE WHEN '|8\' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.8797281534255583) IS FALSE) ELSE (('296869760')IS NOT(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE CASE WHEN '|8\' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.8797281534255583) IS FALSE) ELSE (('296869760')IS NOT(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>(((vt0.c0) ISNULL)))) ORDER BY (NULL IN (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE CASE WHEN '|8\' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.8797281534255583) IS FALSE) ELSE (('296869760')IS NOT(vt0.c0)) END;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('<M<PbVu')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((vt0.c0)AND('-1264605463')))AND(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((((''))>((vt0.c0))))) AND ((vt0.c0))) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS LAST, LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((('<M<PbVu')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((vt0.c0)AND('-1264605463')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((((''))>((vt0.c0))))) AND ((vt0.c0))) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS LAST, LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('<M<PbVu')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((vt0.c0)AND('-1264605463')))AND(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((((''))>((vt0.c0))))) AND ((vt0.c0))) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS LAST, LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((('<M<PbVu')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((vt0.c0)AND('-1264605463')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((((''))>((vt0.c0))))) AND ((vt0.c0))) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS LAST, LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('<M<PbVu')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((vt0.c0)AND('-1264605463')))AND(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((((''))>((vt0.c0))))) AND ((vt0.c0))) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS LAST, LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0)))==(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0)))==(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0)))==(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0)))==(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0)))==(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((0.5746750466514824 IN ()))GLOB('-2024767674'))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.5746750466514824 IN ()))GLOB('-2024767674'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((0.5746750466514824 IN ()))GLOB('-2024767674'))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.5746750466514824 IN ()))GLOB('-2024767674'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((0.5746750466514824 IN ()))GLOB('-2024767674'))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS INTEGER) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN CAST(vt0.c0 AS REAL) THEN json_patch('', vt0.c0) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC, ((vt0.c0 COLLATE NOCASE)%(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(vt0.c0 AS REAL) THEN json_patch('', vt0.c0) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC, ((vt0.c0 COLLATE NOCASE)%(((vt0.c0)<=(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN CAST(vt0.c0 AS REAL) THEN json_patch('', vt0.c0) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC, ((vt0.c0 COLLATE NOCASE)%(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(vt0.c0 AS REAL) THEN json_patch('', vt0.c0) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC, ((vt0.c0 COLLATE NOCASE)%(((vt0.c0)<=(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN CAST(vt0.c0 AS REAL) THEN json_patch('', vt0.c0) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC, ((vt0.c0 COLLATE NOCASE)%(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))+(LIKELIHOOD(vt0.c0, 0.5324996038813745))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))+(LIKELIHOOD(vt0.c0, 0.5324996038813745)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))+(LIKELIHOOD(vt0.c0, 0.5324996038813745))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))+(LIKELIHOOD(vt0.c0, 0.5324996038813745)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))+(LIKELIHOOD(vt0.c0, 0.5324996038813745))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)LIKE(0.6417155804285916)))))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)LIKE(0.6417155804285916)))))OR(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)LIKE(0.6417155804285916)))))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)LIKE(0.6417155804285916)))))OR(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)LIKE(0.6417155804285916)))))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c0)) WHEN ((vt0.c0)AND(-522414091)) THEN (((vt0.c0, vt0.c0, vt0.c0))<>((NULL, vt0.c0, vt0.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c0)) WHEN ((vt0.c0)AND(-522414091)) THEN (((vt0.c0, vt0.c0, vt0.c0))<>((NULL, vt0.c0, vt0.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c0)) WHEN ((vt0.c0)AND(-522414091)) THEN (((vt0.c0, vt0.c0, vt0.c0))<>((NULL, vt0.c0, vt0.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c0)) WHEN ((vt0.c0)AND(-522414091)) THEN (((vt0.c0, vt0.c0, vt0.c0))<>((NULL, vt0.c0, vt0.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c0)) WHEN ((vt0.c0)AND(-522414091)) THEN (((vt0.c0, vt0.c0, vt0.c0))<>((NULL, vt0.c0, vt0.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN x'9c87' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN x'9c87' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN x'9c87' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN x'9c87' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN x'9c87' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((8143099.0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'oV豄IyX' WHEN -523569692 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)))AND(HEX(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((8143099.0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'oV豄IyX' WHEN -523569692 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)))AND(HEX(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((8143099.0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'oV豄IyX' WHEN -523569692 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)))AND(HEX(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((8143099.0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'oV豄IyX' WHEN -523569692 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)))AND(HEX(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((8143099.0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'oV豄IyX' WHEN -523569692 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)))AND(HEX(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN TRIM(DISTINCT vt0.c0, vt0.c0) ELSE ((((vt0.c0)AND(vt0.c0)))AND('-834925146')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN TRIM(DISTINCT vt0.c0, vt0.c0) ELSE ((((vt0.c0)AND(vt0.c0)))AND('-834925146')) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN TRIM(DISTINCT vt0.c0, vt0.c0) ELSE ((((vt0.c0)AND(vt0.c0)))AND('-834925146')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN TRIM(DISTINCT vt0.c0, vt0.c0) ELSE ((((vt0.c0)AND(vt0.c0)))AND('-834925146')) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN TRIM(DISTINCT vt0.c0, vt0.c0) ELSE ((((vt0.c0)AND(vt0.c0)))AND('-834925146')) END);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffe2135e92)) END) ORDER BY CAST(load_extension(vt0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(vt0.c0))  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0xffffffffe2135e92)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(load_extension(vt0.c0) AS TEXT));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffe2135e92)) END) ORDER BY CAST(load_extension(vt0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(vt0.c0))  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0xffffffffe2135e92)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(load_extension(vt0.c0) AS TEXT));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffe2135e92)) END) ORDER BY CAST(load_extension(vt0.c0) AS TEXT);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) WHEN vt0.c0 THEN CASE WHEN '2124727425' THEN NULL WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (('')/(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) WHEN vt0.c0 THEN CASE WHEN '2124727425' THEN NULL WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (('')/(vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) WHEN vt0.c0 THEN CASE WHEN '2124727425' THEN NULL WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (('')/(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) WHEN vt0.c0 THEN CASE WHEN '2124727425' THEN NULL WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (('')/(vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) WHEN vt0.c0 THEN CASE WHEN '2124727425' THEN NULL WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (('')/(vt0.c0)) END DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((0xffffffffb563918a) ISNULL), GLOB(vt0.c0, '-1386769180')));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((0Xffffffffb563918a) ISNULL), GLOB(vt0.c0, '-1386769180'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((0xffffffffb563918a) ISNULL), GLOB(vt0.c0, '-1386769180')));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((0Xffffffffb563918a) ISNULL), GLOB(vt0.c0, '-1386769180'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((0xffffffffb563918a) ISNULL), GLOB(vt0.c0, '-1386769180')));
