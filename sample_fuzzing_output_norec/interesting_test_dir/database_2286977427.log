-- Time: 2024/06/09 21:40:31
-- Database: database27
-- Database version: 3.40.0
-- seed value: 2286977427
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, matchinfo=fts3, matchinfo=fts3); -- 1ms;
CREATE TEMP TABLE t1 (c0 INT , c1 INT , c2 INTEGER , c3 BLOB , c4 INTEGER , c5 BLOB , c6 INT ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5947321505666258) WHERE ((((vt0.c0) NOT NULL)) BETWEEN (vt0.c1 COLLATE BINARY) AND (x'')); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.4722399908471492); -- 5ms;
INSERT OR IGNORE INTO t1(c2) VALUES (x''); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
ALTER TABLE t1 ADD COLUMN c91 BLOB; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i14 ON t1(((((c1)AND(c0)))+(NULLIF(c2, c91))),((c3 COLLATE BINARY)IS NOT(((c4) ISNULL))) ASC,(((((- (c1)))AND((+ (c6)))))AND(((c91)>>(c3)))) ASC,((((c4, c2, c2)) BETWEEN ((c4, c1, c4)) AND ((c6, c91, c0))) IN ()) ASC,UPPER(DISTINCT ((NULL)<<(c6))) ASC,'!>W' COLLATE RTRIM ASC,((((c1) NOT NULL)) NOT BETWEEN (UPPER(c0)) AND (c6)) COLLATE BINARY,'0.5947321505666258' COLLATE BINARY); -- 0ms;
CREATE INDEX i67 ON t1(CAST('' AS NUMERIC) COLLATE NOCASE,CAST(c4 AS TEXT) COLLATE NOCASE COLLATE NOCASE ASC,((((c0)>(c5)))AND(c1 COLLATE NOCASE)),(((((c4)AND(c5)))OR(c1)) IN ()) DESC,((((c4) BETWEEN (c2) AND (c4))) NOT BETWEEN ((c91 IN ())) AND (c3 COLLATE BINARY)) DESC,CASE WHEN ((c5)%(c2)) THEN ((c3) BETWEEN (c2) AND (c91)) WHEN c3 COLLATE NOCASE THEN ((c6)==(c2)) WHEN ((((c1)OR(c6)))OR(c5)) THEN ((c1) IS FALSE) WHEN (c1 IN ()) THEN ((c4) BETWEEN (c0) AND (c4)) WHEN CAST(c91 AS INTEGER) THEN ((c2)>=(c0)) ELSE CASE c4  WHEN c1 THEN c4 ELSE c6 END END,((CASE WHEN c91 THEN c1 WHEN c1 THEN c6 WHEN '1158634528' THEN c4 END) IS TRUE) ASC,'0.4722399908471492') WHERE c91; -- 0ms;
CREATE UNIQUE INDEX i46 ON t1(((c1) IS TRUE),CASE (c5 IN (c3, c0))  WHEN (((c2))<=((c2))) THEN ((c2) IS TRUE) ELSE ((c0)==(c4)) END DESC,CASE UNLIKELY(c0)  WHEN (((c4))<=((c2))) THEN ((((c5)OR(c2)))OR(c2)) END ASC,((c2 COLLATE NOCASE)OR(((c5) BETWEEN (c3) AND (c1)))) COLLATE RTRIM ASC,'栀W' DESC,NULL COLLATE BINARY,((c91 IN ()) IN ()) COLLATE BINARY,c6 DESC); -- 1ms;
CREATE INDEX IF NOT EXISTS i8 ON t1((NOT (LIKELIHOOD(0xfffffffff663d362, 0.40497738882740675))) COLLATE RTRIM DESC,((((((((c4 COLLATE NOCASE)AND(CASE WHEN c4 THEN c5 END)))OR(((c4)IS NOT(c4)))))OR(COALESCE(c3, c2))))OR(c6)) COLLATE BINARY,(((c1 IN ()))<<((((c5, 1580137598, c4)) BETWEEN ((c4, c0, c1)) AND ((c2, c1, c2))))) ASC,(((c91)) BETWEEN ((c0 COLLATE RTRIM)) AND (((((('栀W')OR(c91)))OR(c0))))) ASC,((((c91, c6, c5))<((c4, c91, c0))) IN ()),((c3 COLLATE NOCASE)IS NOT(((((((((((((c4)OR(c1)))OR(c3)))OR(c0)))AND(c5)))AND(c6)))OR(c6)))),((((c1)OR(c91)))OR(c2)) COLLATE NOCASE COLLATE RTRIM,(((c1)) NOT BETWEEN ((c91)) AND ((c1))) COLLATE BINARY); -- 1ms;
INSERT OR IGNORE INTO t1(c1, c3, c6, c0) VALUES (NULL, 0x5e2efc7e, '(-', x''); -- 0ms;
INSERT OR ABORT INTO t1(c6, c5, c2, c91, c1, c3, c4) VALUES ('-579011871', 0.8068522166553692, '', '742103187', x'', NULL, (((((((742103187)AND(NULL)))OR(NULL))))>((CAST(0.3759160635632768 AS TEXT))))); -- 0ms;
INSERT OR FAIL INTO t1(c3, c5, c1, c0, c91, c6, c4) VALUES (NULL, 'F>', '-382962337', '1158634528', NULL, NULL, NULL); -- 0ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t1 FOR EACH ROW  WHEN (- (((((0.7473394257991293)AND(t1.c5)))OR(t1.c91)))) BEGIN INSERT OR IGNORE INTO vt0(c1) VALUES ('-579011871'), (x'0f71'), (0.16511790704934837), (7.42103187E8), (x'91a1');END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, NULL); -- 0ms;
PRAGMA cache_spill = 2066081052806322120; -- 1ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (0.45590540352135667, 0.6533946690036633); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA secure_delete; -- 0ms;
ROLLBACK TRANSACTION; -- 9ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-679573180,10');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20865'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11731'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56671'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM main; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1911950540); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO t1(c6, c1) VALUES (NULL, '<77&Qj3hT'), (x'', NULL), (0.9447174754706373, 0.9735648129280147); -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
END; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 224041537); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 796931109); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64927'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1890719499,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.cache_spill = -6791609424289672136; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-1890719499, '-679573180'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE INDEX i24 ON t1(((CAST(c1 AS BLOB))>(((c1)%(c0)))) COLLATE RTRIM,(((0.6533946690036633, c0, c4)) BETWEEN ((CASE WHEN c4 THEN c0 WHEN c4 THEN c4 WHEN c4 THEN c4 ELSE c6 END, (((-1710500008))>=((c6))), (NOT (c5)))) AND ((((c5) IS TRUE), ((c6)LIKE(c1)), c4))) COLLATE RTRIM DESC,((((c1)%(c2)))>=(((c6) NOTNULL))) COLLATE BINARY,(((c1)) BETWEEN ((((c5) IS FALSE))) AND ((c6))),((((c6) BETWEEN (c1) AND (c6))) BETWEEN (CASE c0  WHEN c2 THEN c2 WHEN c4 THEN c2 WHEN c2 THEN c5 ELSE c2 END) AND (c1 COLLATE BINARY)) COLLATE BINARY ASC,(x'' IN ()) DESC,CASE WHEN (('-579011871') NOTNULL) THEN '-1664051429' WHEN ((c3)>(c1)) THEN NULL WHEN ((c3)*(c5)) THEN NULL ELSE (((c3, c0, c3)) NOT BETWEEN ((c1, c4, c0)) AND ((c2, 0Xffffffff9a0bd758, c1))) END) WHERE ((CASE WHEN c2 THEN c6 END)<(-5.79011871E8)); -- 0ms;
CREATE UNIQUE INDEX i21 ON t1(NULLIF(c4 COLLATE RTRIM, (('M^!')>>(c5))) DESC,((CAST(c6 AS BLOB))<(((c4)||(c1)))),c4 DESC,(((((c4)) NOT BETWEEN ((c5)) AND ((c4))))OR((((c6)) NOT BETWEEN ((c2)) AND ((c2))))) COLLATE RTRIM ASC,CAST(NULLIF(c3, c2) AS BLOB) ASC,json_type(((c6) BETWEEN (c2) AND (c4))) DESC,((((((((((((CAST(c2 AS BLOB))AND(c5 COLLATE NOCASE)))AND(LOWER(DISTINCT c1))))AND((('-1710500008') BETWEEN (c2) AND (c1)))))OR(((c1)==(c5)))))OR(c4 COLLATE RTRIM)))AND((((c3))>=((c3))))) ASC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0) VALUES ('264630313', x'00447d0c'), (-82358639, x'511f'), (((CASE WHEN '' THEN 0.6151679851881021 END)IS((('q栀b*N') NOT BETWEEN ('赕H') AND ('')))), 0.14290384149446878); -- 1ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
INSERT OR IGNORE INTO t1(c6, c1, c2, c5, c3) VALUES (x'', '{s[z', 0.6269393031830139, 808025762, x''); -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_spill; -- 0ms;
CREATE UNIQUE INDEX i83 ON t1(((CASE c1  WHEN c6 THEN c5 END) NOT BETWEEN (CAST(c4 AS NUMERIC)) AND ((c3 IN ()))) ASC,((((c6, c2, c0))>=((c0, c4, c3))) IN ()) COLLATE BINARY DESC,((((c4) NOT BETWEEN (c6) AND (NULL))) NOT BETWEEN (JULIANDAY(c3, c2, c0, c3, c5)) AND (0.5706830764481136)) COLLATE BINARY,(((((c3)OR(c0)))OR(c0)) IN ()) COLLATE RTRIM ASC,((c6) NOTNULL) COLLATE NOCASE,(NOT ((((c5))=((c5))))) COLLATE RTRIM,(((c6) IS TRUE) IN (x'' COLLATE BINARY, ((NULL) IS FALSE))) ASC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ALTER TABLE t1 ADD COLUMN c40 INTEGER CHECK ( ((t1.c4) IS FALSE)); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.21260938588799738); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DROP INDEX "i83"; -- 0ms;
ALTER TABLE t0 ADD COLUMN c77 BLOB; -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35108'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1957688054); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT vt0 SET (c1)=(0.8725083305079714); -- 0ms;
INSERT OR IGNORE INTO t0(c4, c5, c0) VALUES (8.08025762E8, '-1890719499', 1.158634528E9); -- 0ms;
REINDEX BINARY; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.8179075144555698 WHERE CAST(CAST(vt0.c1 AS REAL) AS REAL); -- 1ms;
PRAGMA cache_spill = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c6 TO c70; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'07b8'), (0.9527387079662023), (''); -- 1ms;
UPDATE OR IGNORE t0 SET c2=x'ecc6', c3=7.42103187E8 WHERE t0.c5; -- 0ms;
UPDATE OR IGNORE t0 SET c4=NULL; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL, 0.08741769986888648); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1); -- 0ms;
CREATE UNIQUE INDEX i68 ON t0(c3 COLLATE NOCASE,c5,(((c5))>=((c70))) COLLATE RTRIM,c70,(((c0)) NOT BETWEEN ((((c70) ISNULL))) AND ((((((c2)OR(c4)))AND(c1))))) COLLATE RTRIM ASC,((((((c3)OR(c5)))OR(c3)))<=((+ (c2)))),CASE WHEN c2 THEN ((c3)IS(c2)) WHEN ((c2)>=(c0)) THEN ((c5)<(c70)) WHEN c5 THEN CASE WHEN c2 THEN c70 WHEN c2 THEN c2 WHEN c2 THEN c3 END END COLLATE NOCASE ASC); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
PRAGMA integrity_check; -- 1ms;
COMMIT; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '12731'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT OR ABORT INTO vt1(c1, c0) VALUES (x'fae592d6', '742103187'), (x'', '-886497278'), (x'5d8e', -8.2358639E7); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('');
SELECT * FROM vt1 WHERE ((((vt1.c1)>=(vt1.c1)) IN (vt1.c0 COLLATE BINARY, CASE vt1.c1  WHEN vt1.c0 THEN '' WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) ORDER BY (((highlight(vt1.c0, vt1.c0, vt1.c1, vt1.c0)))<=(((vt1.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)>=(vt1.c1)) IN (vt1.c0 COLLATE BINARY, CASE vt1.c1  WHEN vt1.c0 THEN '' WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY (((highlight(vt1.c0, vt1.c0, vt1.c1, vt1.c0)))<=(((vt1.c0 IN ())))) ASC);
SELECT * FROM vt1 WHERE ((((vt1.c1)>=(vt1.c1)) IN (vt1.c0 COLLATE BINARY, CASE vt1.c1  WHEN vt1.c0 THEN '' WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) ORDER BY (((highlight(vt1.c0, vt1.c0, vt1.c1, vt1.c0)))<=(((vt1.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)>=(vt1.c1)) IN (vt1.c0 COLLATE BINARY, CASE vt1.c1  WHEN vt1.c0 THEN '' WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY (((highlight(vt1.c0, vt1.c0, vt1.c1, vt1.c0)))<=(((vt1.c0 IN ())))) ASC);
SELECT * FROM t0, vt0, vt1 WHERE (((((0.6715408738286434)*(t0.c0))) NOT NULL)) ORDER BY (- (vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((0.6715408738286434)*(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (vt0.c0)) COLLATE RTRIM ASC);
SELECT * FROM t0, vt0, vt1 WHERE (((((0.6715408738286434)*(t0.c0))) NOT NULL)) ORDER BY (- (vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((0.6715408738286434)*(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (vt0.c0)) COLLATE RTRIM ASC);
SELECT * FROM t0, vt0, vt1 WHERE (((((0.6715408738286434)*(t0.c0))) NOT NULL)) ORDER BY (- (vt0.c0)) COLLATE RTRIM ASC;
SELECT * FROM vt1, t0 WHERE (((((t0.c0)|(t0.c2)))<(vt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(t0.c2)))<(vt1.c1))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((t0.c0)|(t0.c2)))<(vt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(t0.c2)))<(vt1.c1))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((t0.c0)|(t0.c2)))<(vt1.c1)));
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON UPPER(DISTINCT ((vt1.c0)||(vt0.c1))) WHERE (((((((vt1.c1)=(t0.c4)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)==(t0.c4)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND(NULL))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON UPPER(DISTINCT ((vt1.c0)||(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON UPPER(DISTINCT ((vt1.c0)||(vt0.c1))) WHERE (((((((vt1.c1)=(t0.c4)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)==(t0.c4)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND(NULL))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON UPPER(DISTINCT ((vt1.c0)||(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON UPPER(DISTINCT ((vt1.c0)||(vt0.c1))) WHERE (((((((vt1.c1)=(t0.c4)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND(NULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN 'V\rh~r8' END)-(vt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c1 THEN 'V\rh~r8' END)-(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN 'V\rh~r8' END)-(vt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c1 THEN 'V\rh~r8' END)-(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN 'V\rh~r8' END)-(vt1.c1)));
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS INTEGER))<=(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((vt1.c0) IS FALSE))<<(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS INTEGER))<=(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) IS FALSE))<<(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS INTEGER))<=(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((vt1.c0) IS FALSE))<<(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS INTEGER))<=(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) IS FALSE))<<(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS INTEGER))<=(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((vt1.c0) IS FALSE))<<(((vt0.c0) IS TRUE))) DESC;
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)+(vt1.c0)) THEN t0.c5 COLLATE NOCASE ELSE (((t0.c70))>=((vt0.c1))) END WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)+(vt1.c0)) THEN t0.c5 COLLATE NOCASE ELSE (((t0.c70))>=((vt0.c1))) END);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)+(vt1.c0)) THEN t0.c5 COLLATE NOCASE ELSE (((t0.c70))>=((vt0.c1))) END WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)+(vt1.c0)) THEN t0.c5 COLLATE NOCASE ELSE (((t0.c70))>=((vt0.c1))) END);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)+(vt1.c0)) THEN t0.c5 COLLATE NOCASE ELSE (((t0.c70))>=((vt0.c1))) END WHERE ((NOT (NULL)));
SELECT * FROM vt0, t0, vt1 WHERE (json_remove((((t0.c0))<((vt0.c1))), ((t0.c5) IS TRUE), (((t0.c3))<=((t0.c2))), (((t0.c1, vt1.c1, vt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, t0.c0)) AND ((t0.c70, vt1.c1, t0.c2))))) ORDER BY CAST(((t0.c1)<=(vt1.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((t0.c0))<((vt0.c1))), ((t0.c5) IS TRUE), (((t0.c3))<=((t0.c2))), (((t0.c1, vt1.c1, vt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, t0.c0)) AND ((t0.c70, vt1.c1, t0.c2))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(((t0.c1)<=(vt1.c1)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE (json_remove((((t0.c0))<((vt0.c1))), ((t0.c5) IS TRUE), (((t0.c3))<=((t0.c2))), (((t0.c1, vt1.c1, vt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, t0.c0)) AND ((t0.c70, vt1.c1, t0.c2))))) ORDER BY CAST(((t0.c1)<=(vt1.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((t0.c0))<((vt0.c1))), ((t0.c5) IS TRUE), (((t0.c3))<=((t0.c2))), (((t0.c1, vt1.c1, vt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, t0.c0)) AND ((t0.c70, vt1.c1, t0.c2))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(((t0.c1)<=(vt1.c1)) AS BLOB)  NULLS LAST);
SELECT * FROM vt1 INDEXED BY i21 WHERE (((((((-614237350) IS FALSE))OR(TOTAL_CHANGES())))OR((((vt1.c1, 0.3800456202340937, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((-614237350) IS FALSE))OR(TOTAL_CHANGES())))OR((((vt1.c1, 0.3800456202340937, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1 INDEXED BY i21);
SELECT * FROM vt1 INDEXED BY i21 WHERE (((((((-614237350) IS FALSE))OR(TOTAL_CHANGES())))OR((((vt1.c1, 0.3800456202340937, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((-614237350) IS FALSE))OR(TOTAL_CHANGES())))OR((((vt1.c1, 0.3800456202340937, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1 INDEXED BY i21);
SELECT ALL * FROM t0, vt1, vt0 WHERE (TYPEOF((NOT ('v\rh~r8')))) ORDER BY (((t0.c3)&(t0.c70)) IN (((((t0.c2)AND(vt1.c1)))OR(t0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((NOT ('v\rh~r8')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c3)&(t0.c70)) IN (((((t0.c2)AND(vt1.c1)))OR(t0.c3)))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (TYPEOF((NOT ('v\rh~r8')))) ORDER BY (((t0.c3)&(t0.c70)) IN (((((t0.c2)AND(vt1.c1)))OR(t0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((NOT ('v\rh~r8')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c3)&(t0.c70)) IN (((((t0.c2)AND(vt1.c1)))OR(t0.c3)))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (TYPEOF((NOT ('v\rh~r8')))) ORDER BY (((t0.c3)&(t0.c70)) IN (((((t0.c2)AND(vt1.c1)))OR(t0.c3))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c1))) IS FALSE));
SELECT ALL * FROM t0 WHERE ((('-1664051429')|(t0.c5))) ORDER BY (((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c5))) COLLATE BINARY, (- (t0.c70))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1664051429')|(t0.c5))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c5))) COLLATE BINARY, (- (t0.c70))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((('-1664051429')|(t0.c5))) ORDER BY (((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c5))) COLLATE BINARY, (- (t0.c70))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1664051429')|(t0.c5))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c5))) COLLATE BINARY, (- (t0.c70))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((('-1664051429')|(t0.c5))) ORDER BY (((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c5))) COLLATE BINARY, (- (t0.c70))  NULLS FIRST;
SELECT * FROM vt0, t0, vt1 WHERE ((+ (((x'')-(vt1.c1))))) ORDER BY (('M^!' COLLATE RTRIM)||(0.13396123153983563));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')-(vt1.c1))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (('M^!' COLLATE RTRIM)||(0.13396123153983563)));
SELECT * FROM vt0, t0, vt1 WHERE ((+ (((x'')-(vt1.c1))))) ORDER BY (('M^!' COLLATE RTRIM)||(0.13396123153983563));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')-(vt1.c1))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (('M^!' COLLATE RTRIM)||(0.13396123153983563)));
SELECT * FROM vt0, t0, vt1 WHERE ((+ (((x'')-(vt1.c1))))) ORDER BY (('M^!' COLLATE RTRIM)||(0.13396123153983563));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))<<((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))<<((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))<<((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))<<((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))<<((vt0.c1 IN ()))));
SELECT * FROM vt1, t0, vt0 WHERE (NULL) ORDER BY (NOT (((t0.c1)&(t0.c5)))) DESC, vt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (NOT (((t0.c1)&(t0.c5)))) DESC, vt1.c1);
SELECT * FROM vt1, t0, vt0 WHERE (NULL) ORDER BY (NOT (((t0.c1)&(t0.c5)))) DESC, vt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (NOT (((t0.c1)&(t0.c5)))) DESC, vt1.c1);
SELECT * FROM vt1, t0, vt0 WHERE (NULL) ORDER BY (NOT (((t0.c1)&(t0.c5)))) DESC, vt1.c1;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c1)))))OR((- (vt0.c0))))) ORDER BY (((vt0.c0)|(vt1.c0)) IN (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END, ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c1)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)|(vt1.c0)) IN (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END, ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c1)))))OR((- (vt0.c0))))) ORDER BY (((vt0.c0)|(vt1.c0)) IN (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END, ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c1)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)|(vt1.c0)) IN (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END, ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c1)))))OR((- (vt0.c0))))) ORDER BY (((vt0.c0)|(vt1.c0)) IN (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END, ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((CASE WHEN vt0.c1 THEN vt1.c1 END)AND(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR(((vt1.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND((- (vt1.c0)))) WHERE (((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) ORDER BY TRIM(IFNULL(vt0.c0, vt0.c0), 0x7ab2d1a6 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((CASE WHEN vt0.c1 THEN vt1.c1 END)AND(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR(((vt1.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND((- (vt1.c0)))) ORDER BY TRIM(IFNULL(vt0.c0, vt0.c0), 0X7ab2d1a6 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((CASE WHEN vt0.c1 THEN vt1.c1 END)AND(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR(((vt1.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND((- (vt1.c0)))) WHERE (((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) ORDER BY TRIM(IFNULL(vt0.c0, vt0.c0), 0x7ab2d1a6 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((CASE WHEN vt0.c1 THEN vt1.c1 END)AND(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR(((vt1.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND((- (vt1.c0)))) ORDER BY TRIM(IFNULL(vt0.c0, vt0.c0), 0X7ab2d1a6 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((CASE WHEN vt0.c1 THEN vt1.c1 END)AND(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR(((vt1.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND((- (vt1.c0)))) WHERE (((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) ORDER BY TRIM(IFNULL(vt0.c0, vt0.c0), 0x7ab2d1a6 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((('BXo')OR(t0.c2)))AND(t0.c2)) COLLATE NOCASE) ORDER BY (((t0.c1 COLLATE BINARY))==((NULLIF(DISTINCT vt0.c1, t0.c3))));
SELECT SUM(count) FROM (SELECT (((((('BXo')OR(t0.c2)))AND(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((t0.c1 COLLATE BINARY))=((NULLIF(DISTINCT vt0.c1, t0.c3)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((('BXo')OR(t0.c2)))AND(t0.c2)) COLLATE NOCASE) ORDER BY (((t0.c1 COLLATE BINARY))==((NULLIF(DISTINCT vt0.c1, t0.c3))));
SELECT SUM(count) FROM (SELECT (((((('BXo')OR(t0.c2)))AND(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((t0.c1 COLLATE BINARY))=((NULLIF(DISTINCT vt0.c1, t0.c3)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((('BXo')OR(t0.c2)))AND(t0.c2)) COLLATE NOCASE) ORDER BY (((t0.c1 COLLATE BINARY))==((NULLIF(DISTINCT vt0.c1, t0.c3))));
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c5)+(t0.c3)))+(((vt1.c0)<(vt1.c0))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c5)+(t0.c3)))+(((vt1.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c5)+(t0.c3)))+(((vt1.c0)<(vt1.c0))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c5)+(t0.c3)))+(((vt1.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c5)+(t0.c3)))+(((vt1.c0)<(vt1.c0))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN (- (t0.c70)) THEN ((t0.c3)>(vt0.c0)) ELSE ((t0.c70)<=(t0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c70)) THEN ((t0.c3)>(vt0.c0)) ELSE ((t0.c70)<=(t0.c3)) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN (- (t0.c70)) THEN ((t0.c3)>(vt0.c0)) ELSE ((t0.c70)<=(t0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c70)) THEN ((t0.c3)>(vt0.c0)) ELSE ((t0.c70)<=(t0.c3)) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN (- (t0.c70)) THEN ((t0.c3)>(vt0.c0)) ELSE ((t0.c70)<=(t0.c3)) END);
SELECT COUNT(*) FROM vt0 WHERE (0.3872382645367005);
SELECT SUM(count) FROM (SELECT ALL ((0.3872382645367005) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.3872382645367005);
SELECT SUM(count) FROM (SELECT ALL ((0.3872382645367005) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.3872382645367005);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC));
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN (vt1.c1)))));
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c70)<(t0.c0)))AND((((t0.c70))<((t0.c2))))))OR((+ (t0.c70)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c70)<(t0.c0)))AND((((t0.c70))<((t0.c2))))))OR((+ (t0.c70))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c70)<(t0.c0)))AND((((t0.c70))<((t0.c2))))))OR((+ (t0.c70)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c70)<(t0.c0)))AND((((t0.c70))<((t0.c2))))))OR((+ (t0.c70))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c70)<(t0.c0)))AND((((t0.c70))<((t0.c2))))))OR((+ (t0.c70)))));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON DATETIME(t0.c70 COLLATE NOCASE, ((vt1.c0)==(t0.c1)), (- (t0.c3))) WHERE (CAST(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON DATETIME(t0.c70 COLLATE NOCASE, ((vt1.c0)=(t0.c1)), (- (t0.c3))));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON DATETIME(t0.c70 COLLATE NOCASE, ((vt1.c0)==(t0.c1)), (- (t0.c3))) WHERE (CAST(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON DATETIME(t0.c70 COLLATE NOCASE, ((vt1.c0)=(t0.c1)), (- (t0.c3))));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON DATETIME(t0.c70 COLLATE NOCASE, ((vt1.c0)==(t0.c1)), (- (t0.c3))) WHERE (CAST(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1, t0 WHERE (((ABS(t0.c2))%((+ (t0.c70)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(t0.c2))%((+ (t0.c70))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((ABS(t0.c2))%((+ (t0.c70)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(t0.c2))%((+ (t0.c70))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((ABS(t0.c2))%((+ (t0.c70)))));
SELECT * FROM vt0, t0 WHERE (((((((t0.c70) IS FALSE))OR((((t0.c70)) BETWEEN ((t0.c70)) AND ((t0.c3))))))AND(((vt0.c1) BETWEEN (t0.c2) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c70) IS FALSE))OR((((t0.c70)) BETWEEN ((t0.c70)) AND ((t0.c3))))))AND(((vt0.c1) BETWEEN (t0.c2) AND (t0.c3))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((t0.c70) IS FALSE))OR((((t0.c70)) BETWEEN ((t0.c70)) AND ((t0.c3))))))AND(((vt0.c1) BETWEEN (t0.c2) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c70) IS FALSE))OR((((t0.c70)) BETWEEN ((t0.c70)) AND ((t0.c3))))))AND(((vt0.c1) BETWEEN (t0.c2) AND (t0.c3))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((t0.c70) IS FALSE))OR((((t0.c70)) BETWEEN ((t0.c70)) AND ((t0.c3))))))AND(((vt0.c1) BETWEEN (t0.c2) AND (t0.c3)))));
SELECT * FROM vt0 WHERE (IFNULL(vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST, CASE WHEN ((vt0.c1)/(vt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((((((vt0.c1)OR(vt0.c1)))OR(0.6373342262502504)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST, CASE WHEN ((vt0.c1)/(vt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((((((vt0.c1)OR(vt0.c1)))OR(0.6373342262502504)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (IFNULL(vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST, CASE WHEN ((vt0.c1)/(vt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((((((vt0.c1)OR(vt0.c1)))OR(0.6373342262502504)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST, CASE WHEN ((vt0.c1)/(vt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((((((vt0.c1)OR(vt0.c1)))OR(0.6373342262502504)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (IFNULL(vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST, CASE WHEN ((vt0.c1)/(vt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((((((vt0.c1)OR(vt0.c1)))OR(0.6373342262502504)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((((vt0.c0) NOTNULL) IN (((t0.c3) IS TRUE), t0.c5)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN (((t0.c3) IS TRUE), t0.c5))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((((vt0.c0) NOTNULL) IN (((t0.c3) IS TRUE), t0.c5)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN (((t0.c3) IS TRUE), t0.c5))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((((vt0.c0) NOTNULL) IN (((t0.c3) IS TRUE), t0.c5)));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i83, vt0 WHERE ((vt0.c1 IN (vt0.c0, vt1.c0)) COLLATE NOCASE) ORDER BY '742103187';
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (vt0.c0, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 INDEXED BY i83, vt0 ORDER BY '742103187');
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i83, vt0 WHERE ((vt0.c1 IN (vt0.c0, vt1.c0)) COLLATE NOCASE) ORDER BY '742103187';
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (vt0.c0, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 INDEXED BY i83, vt0 ORDER BY '742103187');
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (0.6771375605974578) AND (t0.c3))))) ORDER BY (+ (((t0.c4)=(t0.c5))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) BETWEEN (0.6771375605974578) AND (t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c4)==(t0.c5))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (0.6771375605974578) AND (t0.c3))))) ORDER BY (+ (((t0.c4)=(t0.c5))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) BETWEEN (0.6771375605974578) AND (t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c4)==(t0.c5))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (0.6771375605974578) AND (t0.c3))))) ORDER BY (+ (((t0.c4)=(t0.c5))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))==((t0.c1))))AND(((t0.c1)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))==((t0.c1))))AND(((t0.c1)AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))==((t0.c1))))AND(((t0.c1)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))==((t0.c1))))AND(((t0.c1)AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))==((t0.c1))))AND(((t0.c1)AND(t0.c0)))));
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i21 WHERE (UNLIKELY((- (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((- (t0.c1)))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i21);
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i21 WHERE (UNLIKELY((- (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((- (t0.c1)))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i21);
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i21 WHERE (UNLIKELY((- (t0.c1))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((+ (LIKELIHOOD(DISTINCT t0.c1, 0.5507833841705598))));
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(DISTINCT t0.c1, 0.5507833841705598)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((+ (LIKELIHOOD(DISTINCT t0.c1, 0.5507833841705598))));
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(DISTINCT t0.c1, 0.5507833841705598)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((+ (LIKELIHOOD(DISTINCT t0.c1, 0.5507833841705598))));
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c5) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((t0.c5) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c5) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((t0.c5) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c5) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM;
SELECT ALL * FROM t0 WHERE (((((((t0.c1) NOT NULL))OR(t0.c5 COLLATE NOCASE)))OR(TYPEOF(t0.c1)))) ORDER BY (((t0.c1, t0.c0, t0.c3, t0.c70, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3, t0.c5, t0.c70, '476082555')) AND ((t0.c2, t0.c0, t0.c4, t0.c70, t0.c3))) COLLATE NOCASE, ((((((t0.c1)OR(t0.c5)))OR(t0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOT NULL))OR(t0.c5 COLLATE NOCASE)))OR(TYPEOF(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1, t0.c0, t0.c3, t0.c70, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3, t0.c5, t0.c70, '476082555')) AND ((t0.c2, t0.c0, t0.c4, t0.c70, t0.c3))) COLLATE NOCASE, ((((((t0.c1)OR(t0.c5)))OR(t0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c1) NOT NULL))OR(t0.c5 COLLATE NOCASE)))OR(TYPEOF(t0.c1)))) ORDER BY (((t0.c1, t0.c0, t0.c3, t0.c70, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3, t0.c5, t0.c70, '476082555')) AND ((t0.c2, t0.c0, t0.c4, t0.c70, t0.c3))) COLLATE NOCASE, ((((((t0.c1)OR(t0.c5)))OR(t0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOT NULL))OR(t0.c5 COLLATE NOCASE)))OR(TYPEOF(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1, t0.c0, t0.c3, t0.c70, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3, t0.c5, t0.c70, '476082555')) AND ((t0.c2, t0.c0, t0.c4, t0.c70, t0.c3))) COLLATE NOCASE, ((((((t0.c1)OR(t0.c5)))OR(t0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c1) NOT NULL))OR(t0.c5 COLLATE NOCASE)))OR(TYPEOF(t0.c1)))) ORDER BY (((t0.c1, t0.c0, t0.c3, t0.c70, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3, t0.c5, t0.c70, '476082555')) AND ((t0.c2, t0.c0, t0.c4, t0.c70, t0.c3))) COLLATE NOCASE, ((((((t0.c1)OR(t0.c5)))OR(t0.c2))) ISNULL)  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c1))) COLLATE RTRIM) ORDER BY (json_insert(t0.c4, t0.c3, t0.c0) IN (HEX(DISTINCT t0.c70)))  NULLS FIRST, ((t0.c5 COLLATE RTRIM)IS NOT(((t0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY (json_insert(t0.c4, t0.c3, t0.c0) IN (HEX(DISTINCT t0.c70)))  NULLS FIRST, ((t0.c5 COLLATE RTRIM)IS NOT(((t0.c0) NOTNULL))));
SELECT * FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c1))) COLLATE RTRIM) ORDER BY (json_insert(t0.c4, t0.c3, t0.c0) IN (HEX(DISTINCT t0.c70)))  NULLS FIRST, ((t0.c5 COLLATE RTRIM)IS NOT(((t0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY (json_insert(t0.c4, t0.c3, t0.c0) IN (HEX(DISTINCT t0.c70)))  NULLS FIRST, ((t0.c5 COLLATE RTRIM)IS NOT(((t0.c0) NOTNULL))));
SELECT * FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c1))) COLLATE RTRIM) ORDER BY (json_insert(t0.c4, t0.c3, t0.c0) IN (HEX(DISTINCT t0.c70)))  NULLS FIRST, ((t0.c5 COLLATE RTRIM)IS NOT(((t0.c0) NOTNULL)));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((~ (t0.c2)), ((t0.c5)|(t0.c2)), CAST(t0.c0 AS REAL), (((t0.c5, t0.c3, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY))==((((t0.c3)LIKE(t0.c5)), CASE WHEN t0.c1 THEN t0.c1 END, (((t0.c1, t0.c1, vt1.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2, vt0.c1, '762376429')) AND ((t0.c5, t0.c3, t0.c3, vt1.c1, 0.4551180155627773))), ((((t0.c0)OR(0x375bc523)))OR(t0.c4)), (vt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t0.c2)), ((t0.c5)|(t0.c2)), CAST(t0.c0 AS REAL), (((t0.c5, t0.c3, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY))==((((t0.c3)LIKE(t0.c5)), CASE WHEN t0.c1 THEN t0.c1 END, (((t0.c1, t0.c1, vt1.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2, vt0.c1, '762376429')) AND ((t0.c5, t0.c3, t0.c3, vt1.c1, 0.4551180155627773))), ((((t0.c0)OR(0X375bc523)))OR(t0.c4)), (vt1.c1 IN ()))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((~ (t0.c2)), ((t0.c5)|(t0.c2)), CAST(t0.c0 AS REAL), (((t0.c5, t0.c3, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY))==((((t0.c3)LIKE(t0.c5)), CASE WHEN t0.c1 THEN t0.c1 END, (((t0.c1, t0.c1, vt1.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2, vt0.c1, '762376429')) AND ((t0.c5, t0.c3, t0.c3, vt1.c1, 0.4551180155627773))), ((((t0.c0)OR(0x375bc523)))OR(t0.c4)), (vt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t0.c2)), ((t0.c5)|(t0.c2)), CAST(t0.c0 AS REAL), (((t0.c5, t0.c3, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY))==((((t0.c3)LIKE(t0.c5)), CASE WHEN t0.c1 THEN t0.c1 END, (((t0.c1, t0.c1, vt1.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2, vt0.c1, '762376429')) AND ((t0.c5, t0.c3, t0.c3, vt1.c1, 0.4551180155627773))), ((((t0.c0)OR(0X375bc523)))OR(t0.c4)), (vt1.c1 IN ()))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((~ (t0.c2)), ((t0.c5)|(t0.c2)), CAST(t0.c0 AS REAL), (((t0.c5, t0.c3, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY))==((((t0.c3)LIKE(t0.c5)), CASE WHEN t0.c1 THEN t0.c1 END, (((t0.c1, t0.c1, vt1.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2, vt0.c1, '762376429')) AND ((t0.c5, t0.c3, t0.c3, vt1.c1, 0.4551180155627773))), ((((t0.c0)OR(0x375bc523)))OR(t0.c4)), (vt1.c1 IN ())))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) AND (x'16752a60' COLLATE NOCASE))) ORDER BY (((vt0.c1 IN (vt0.c0)))IS NOT(CAST(vt1.c1 AS NUMERIC))) ASC, 0.3759160635632768 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) AND (x'16752a60' COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1 IN (vt0.c0)))IS NOT(CAST(vt1.c1 AS NUMERIC))) ASC, 0.3759160635632768 ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) AND (x'16752a60' COLLATE NOCASE))) ORDER BY (((vt0.c1 IN (vt0.c0)))IS NOT(CAST(vt1.c1 AS NUMERIC))) ASC, 0.3759160635632768 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) AND (x'16752a60' COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1 IN (vt0.c0)))IS NOT(CAST(vt1.c1 AS NUMERIC))) ASC, 0.3759160635632768 ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) AND (x'16752a60' COLLATE NOCASE))) ORDER BY (((vt0.c1 IN (vt0.c0)))IS NOT(CAST(vt1.c1 AS NUMERIC))) ASC, 0.3759160635632768 ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL COLLATE NOCASE) ORDER BY (((~ (vt0.c1)))-(x'042f')) ASC;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt0.c1)))-(x'042f')) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL COLLATE NOCASE) ORDER BY (((~ (vt0.c1)))-(x'042f')) ASC;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt0.c1)))-(x'042f')) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL COLLATE NOCASE) ORDER BY (((~ (vt0.c1)))-(x'042f')) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c5) AND (t0.c4)))*(((t0.c0)LIKE(t0.c2))))) ORDER BY ((((t0.c5) BETWEEN (t0.c70) AND (t0.c5))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c5) AND (t0.c4)))*(((t0.c0)LIKE(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c5) BETWEEN (t0.c70) AND (t0.c5))) IS TRUE));
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c5) AND (t0.c4)))*(((t0.c0)LIKE(t0.c2))))) ORDER BY ((((t0.c5) BETWEEN (t0.c70) AND (t0.c5))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c5) AND (t0.c4)))*(((t0.c0)LIKE(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c5) BETWEEN (t0.c70) AND (t0.c5))) IS TRUE));
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c5) AND (t0.c4)))*(((t0.c0)LIKE(t0.c2))))) ORDER BY ((((t0.c5) BETWEEN (t0.c70) AND (t0.c5))) IS TRUE);
SELECT * FROM vt1, t0, vt0 WHERE ((0.41397034685651835 COLLATE RTRIM IN ())) ORDER BY ((t0.c4)<<((~ (t0.c70))))  NULLS FIRST, ((CASE t0.c1  WHEN t0.c0 THEN t0.c70 END)%('oW'));
SELECT SUM(count) FROM (SELECT ALL (((0.41397034685651835 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c4)<<((~ (t0.c70))))  NULLS FIRST, ((CASE t0.c1  WHEN t0.c0 THEN t0.c70 END)%('oW')));
SELECT * FROM vt1, t0, vt0 WHERE ((0.41397034685651835 COLLATE RTRIM IN ())) ORDER BY ((t0.c4)<<((~ (t0.c70))))  NULLS FIRST, ((CASE t0.c1  WHEN t0.c0 THEN t0.c70 END)%('oW'));
SELECT SUM(count) FROM (SELECT ALL (((0.41397034685651835 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c4)<<((~ (t0.c70))))  NULLS FIRST, ((CASE t0.c1  WHEN t0.c0 THEN t0.c70 END)%('oW')));
SELECT * FROM vt1, t0, vt0 WHERE ((0.41397034685651835 COLLATE RTRIM IN ())) ORDER BY ((t0.c4)<<((~ (t0.c70))))  NULLS FIRST, ((CASE t0.c1  WHEN t0.c0 THEN t0.c70 END)%('oW'));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CHAR((((-382962337)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN vt0 ON '-700831482' WHERE (UPPER(DISTINCT CASE WHEN vt0.c1 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN vt0.c1 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CHAR((((-382962337)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN vt0 ON '-700831482');
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CHAR((((-382962337)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN vt0 ON '-700831482' WHERE (UPPER(DISTINCT CASE WHEN vt0.c1 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN vt0.c1 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CHAR((((-382962337)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN vt0 ON '-700831482');
SELECT ALL * FROM t0, vt1 WHERE ((((LOWER(t0.c3)))>=((CAST(vt1.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((LOWER(t0.c3)))>=((CAST(vt1.c1 AS TEXT))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((LOWER(t0.c3)))>=((CAST(vt1.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((LOWER(t0.c3)))>=((CAST(vt1.c1 AS TEXT))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((LOWER(t0.c3)))>=((CAST(vt1.c1 AS TEXT)))));
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT ((1182525619)>>(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((1182525619)>>(t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT ((1182525619)>>(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((1182525619)>>(t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT ((1182525619)>>(t0.c2))));
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c5 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c5 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c5 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c5 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c5 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (t0.c70)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (t0.c70)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (t0.c70)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (t0.c70)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c4) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (t0.c70)) END);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1, t0.c1, t0.c70))<=((t0.c4, t0.c70, t0.c2)))) ISNULL)) ORDER BY CAST('tW,HB%ೱy' AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1, t0.c1, t0.c70))<=((t0.c4, t0.c70, t0.c2)))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST('tW,HB%ೱy' AS REAL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1, t0.c1, t0.c70))<=((t0.c4, t0.c70, t0.c2)))) ISNULL)) ORDER BY CAST('tW,HB%ೱy' AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1, t0.c1, t0.c70))<=((t0.c4, t0.c70, t0.c2)))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST('tW,HB%ೱy' AS REAL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1, t0.c1, t0.c70))<=((t0.c4, t0.c70, t0.c2)))) ISNULL)) ORDER BY CAST('tW,HB%ೱy' AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)-(t0.c1)) COLLATE NOCASE WHERE (CASE ((t0.c2) NOTNULL)  WHEN ((t0.c0) NOT NULL) THEN (NOT ('*]QQhF')) END) ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS FIRST, TRIM(CAST(t0.c4 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2) NOTNULL)  WHEN ((t0.c0) NOT NULL) THEN (NOT ('*]QQhF')) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)-(t0.c1)) COLLATE NOCASE ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS FIRST, TRIM(CAST(t0.c4 AS TEXT)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)-(t0.c1)) COLLATE NOCASE WHERE (CASE ((t0.c2) NOTNULL)  WHEN ((t0.c0) NOT NULL) THEN (NOT ('*]QQhF')) END) ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS FIRST, TRIM(CAST(t0.c4 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2) NOTNULL)  WHEN ((t0.c0) NOT NULL) THEN (NOT ('*]QQhF')) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)-(t0.c1)) COLLATE NOCASE ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS FIRST, TRIM(CAST(t0.c4 AS TEXT)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)-(t0.c1)) COLLATE NOCASE WHERE (CASE ((t0.c2) NOTNULL)  WHEN ((t0.c0) NOT NULL) THEN (NOT ('*]QQhF')) END) ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS FIRST, TRIM(CAST(t0.c4 AS TEXT)) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c5)))AND(t0.c70))  WHEN (~ (t0.c2)) THEN t0.c5 COLLATE RTRIM WHEN t0.c4 THEN CAST(t0.c4 AS INTEGER) WHEN t0.c1 THEN (((t0.c5, t0.c5, 0.5747067458578643))<>((t0.c1, t0.c4, t0.c2))) ELSE ((t0.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(t0.c5)))AND(t0.c70))  WHEN (~ (t0.c2)) THEN t0.c5 COLLATE RTRIM WHEN t0.c4 THEN CAST(t0.c4 AS INTEGER) WHEN t0.c1 THEN (((t0.c5, t0.c5, 0.5747067458578643))!=((t0.c1, t0.c4, t0.c2))) ELSE ((t0.c3) ISNULL) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c5)))AND(t0.c70))  WHEN (~ (t0.c2)) THEN t0.c5 COLLATE RTRIM WHEN t0.c4 THEN CAST(t0.c4 AS INTEGER) WHEN t0.c1 THEN (((t0.c5, t0.c5, 0.5747067458578643))<>((t0.c1, t0.c4, t0.c2))) ELSE ((t0.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(t0.c5)))AND(t0.c70))  WHEN (~ (t0.c2)) THEN t0.c5 COLLATE RTRIM WHEN t0.c4 THEN CAST(t0.c4 AS INTEGER) WHEN t0.c1 THEN (((t0.c5, t0.c5, 0.5747067458578643))!=((t0.c1, t0.c4, t0.c2))) ELSE ((t0.c3) ISNULL) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c5)))AND(t0.c70))  WHEN (~ (t0.c2)) THEN t0.c5 COLLATE RTRIM WHEN t0.c4 THEN CAST(t0.c4 AS INTEGER) WHEN t0.c1 THEN (((t0.c5, t0.c5, 0.5747067458578643))<>((t0.c1, t0.c4, t0.c2))) ELSE ((t0.c3) ISNULL) END);
SELECT ALL * FROM t0 WHERE ((((t0.c2)) NOT BETWEEN (((('-679573180')==(t0.c3)))) AND ((((((t0.c1)OR(t0.c4)))OR(t0.c5))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN (((('-679573180')=(t0.c3)))) AND ((((((t0.c1)OR(t0.c4)))OR(t0.c5)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)) NOT BETWEEN (((('-679573180')==(t0.c3)))) AND ((((((t0.c1)OR(t0.c4)))OR(t0.c5))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN (((('-679573180')=(t0.c3)))) AND ((((((t0.c1)OR(t0.c4)))OR(t0.c5)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)) NOT BETWEEN (((('-679573180')==(t0.c3)))) AND ((((((t0.c1)OR(t0.c4)))OR(t0.c5))))));
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((vt0.c1)<<(vt0.c1)))LIKE(((vt1.c0) ISNULL)))  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END)AND((+ (vt0.c1)))))OR(((vt0.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST, CASE WHEN vt0.c1 THEN vt1.c0 COLLATE RTRIM ELSE (((vt0.c1, vt1.c0, vt1.c1))!=((vt1.c1, vt1.c1, vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((vt0.c1)<<(vt0.c1)))LIKE(((vt1.c0) ISNULL)))  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END)AND((+ (vt0.c1)))))OR(((vt0.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST, CASE WHEN vt0.c1 THEN vt1.c0 COLLATE RTRIM ELSE (((vt0.c1, vt1.c0, vt1.c1))!=((vt1.c1, vt1.c1, vt0.c0))) END ASC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((vt0.c1)<<(vt0.c1)))LIKE(((vt1.c0) ISNULL)))  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END)AND((+ (vt0.c1)))))OR(((vt0.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST, CASE WHEN vt0.c1 THEN vt1.c0 COLLATE RTRIM ELSE (((vt0.c1, vt1.c0, vt1.c1))!=((vt1.c1, vt1.c1, vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((vt0.c1)<<(vt0.c1)))LIKE(((vt1.c0) ISNULL)))  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END)AND((+ (vt0.c1)))))OR(((vt0.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST, CASE WHEN vt0.c1 THEN vt1.c0 COLLATE RTRIM ELSE (((vt0.c1, vt1.c0, vt1.c1))!=((vt1.c1, vt1.c1, vt0.c0))) END ASC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((vt0.c1)<<(vt0.c1)))LIKE(((vt1.c0) ISNULL)))  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END)AND((+ (vt0.c1)))))OR(((vt0.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST, CASE WHEN vt0.c1 THEN vt1.c0 COLLATE RTRIM ELSE (((vt0.c1, vt1.c0, vt1.c1))!=((vt1.c1, vt1.c1, vt0.c0))) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.8095548509000587 AS TEXT) LEFT OUTER JOIN t0 ON (- (load_extension(vt1.c0, vt0.c0))) WHERE ((((((((NULL, t0.c2, t0.c4))=((t0.c3, t0.c1, t0.c2))))AND(((((t0.c5)OR(t0.c2)))AND(t0.c3)))))AND(LIKELY(t0.c0)))) ORDER BY (((((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c4))))AND('o{aB{8c')))OR(CAST(x'' AS TEXT))) ASC  NULLS FIRST, (((t0.c3, vt0.c0, t0.c4)) BETWEEN ((x'', ((t0.c70)==(t0.c2)), (((t0.c70))<((t0.c4))))) AND ((((t0.c3)IS(t0.c0)), t0.c2, (t0.c2 IN ())))) ASC, (((t0.c0))<=((vt1.c1))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((NULL, t0.c2, t0.c4))==((t0.c3, t0.c1, t0.c2))))AND(((((t0.c5)OR(t0.c2)))AND(t0.c3)))))AND(LIKELY(t0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.8095548509000587 AS TEXT) LEFT OUTER JOIN t0 ON (- (load_extension(vt1.c0, vt0.c0))) ORDER BY (((((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c4))))AND('o{aB{8c')))OR(CAST(x'' AS TEXT))) ASC  NULLS FIRST, (((t0.c3, vt0.c0, t0.c4)) BETWEEN ((x'', ((t0.c70)=(t0.c2)), (((t0.c70))<((t0.c4))))) AND ((((t0.c3)IS(t0.c0)), t0.c2, (t0.c2 IN ())))) ASC, (((t0.c0))<=((vt1.c1))) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.8095548509000587 AS TEXT) LEFT OUTER JOIN t0 ON (- (load_extension(vt1.c0, vt0.c0))) WHERE ((((((((NULL, t0.c2, t0.c4))=((t0.c3, t0.c1, t0.c2))))AND(((((t0.c5)OR(t0.c2)))AND(t0.c3)))))AND(LIKELY(t0.c0)))) ORDER BY (((((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c4))))AND('o{aB{8c')))OR(CAST(x'' AS TEXT))) ASC  NULLS FIRST, (((t0.c3, vt0.c0, t0.c4)) BETWEEN ((x'', ((t0.c70)==(t0.c2)), (((t0.c70))<((t0.c4))))) AND ((((t0.c3)IS(t0.c0)), t0.c2, (t0.c2 IN ())))) ASC, (((t0.c0))<=((vt1.c1))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((NULL, t0.c2, t0.c4))==((t0.c3, t0.c1, t0.c2))))AND(((((t0.c5)OR(t0.c2)))AND(t0.c3)))))AND(LIKELY(t0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.8095548509000587 AS TEXT) LEFT OUTER JOIN t0 ON (- (load_extension(vt1.c0, vt0.c0))) ORDER BY (((((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c4))))AND('o{aB{8c')))OR(CAST(x'' AS TEXT))) ASC  NULLS FIRST, (((t0.c3, vt0.c0, t0.c4)) BETWEEN ((x'', ((t0.c70)=(t0.c2)), (((t0.c70))<((t0.c4))))) AND ((((t0.c3)IS(t0.c0)), t0.c2, (t0.c2 IN ())))) ASC, (((t0.c0))<=((vt1.c1))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0 WHERE ((- (((((t0.c1)OR(t0.c5)))AND(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c70 END)IS(ABS(t0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c1)OR(t0.c5)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c70 END)IS(ABS(t0.c1))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((- (((((t0.c1)OR(t0.c5)))AND(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c70 END)IS(ABS(t0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c1)OR(t0.c5)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c70 END)IS(ABS(t0.c1))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((- (((((t0.c1)OR(t0.c5)))AND(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c70 END)IS(ABS(t0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c5, t0.c0, t0.c3))>=((t0.c70, '', t0.c70)))) ISNULL)) ORDER BY CASE WHEN t0.c1 THEN CASE WHEN vt0.c0 THEN t0.c1 END ELSE ((t0.c2) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c5, t0.c0, t0.c3))>=((t0.c70, '', t0.c70)))) ISNULL)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY CASE WHEN t0.c1 THEN CASE WHEN vt0.c0 THEN t0.c1 END ELSE ((t0.c2) IS TRUE) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c5, t0.c0, t0.c3))>=((t0.c70, '', t0.c70)))) ISNULL)) ORDER BY CASE WHEN t0.c1 THEN CASE WHEN vt0.c0 THEN t0.c1 END ELSE ((t0.c2) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c5, t0.c0, t0.c3))>=((t0.c70, '', t0.c70)))) ISNULL)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY CASE WHEN t0.c1 THEN CASE WHEN vt0.c0 THEN t0.c1 END ELSE ((t0.c2) IS TRUE) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c5, t0.c0, t0.c3))>=((t0.c70, '', t0.c70)))) ISNULL)) ORDER BY CASE WHEN t0.c1 THEN CASE WHEN vt0.c0 THEN t0.c1 END ELSE ((t0.c2) IS TRUE) END  NULLS FIRST;
SELECT ALL * FROM vt1, t0 WHERE (((t0.c1) NOTNULL)) ORDER BY '', (((((t0.c5))<>((vt1.c0))))<(((t0.c5)<<(vt1.c1)))) DESC  NULLS FIRST, NULLIF((((t0.c0, t0.c1, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3, t0.c4)) AND ((t0.c2, t0.c1, t0.c1))), (~ (t0.c5))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOTNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY '', (((((t0.c5))<>((vt1.c0))))<(((t0.c5)<<(vt1.c1)))) DESC  NULLS FIRST, NULLIF((((t0.c0, t0.c1, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3, t0.c4)) AND ((t0.c2, t0.c1, t0.c1))), (~ (t0.c5))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c1) NOTNULL)) ORDER BY '', (((((t0.c5))<>((vt1.c0))))<(((t0.c5)<<(vt1.c1)))) DESC  NULLS FIRST, NULLIF((((t0.c0, t0.c1, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3, t0.c4)) AND ((t0.c2, t0.c1, t0.c1))), (~ (t0.c5))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOTNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY '', (((((t0.c5))<>((vt1.c0))))<(((t0.c5)<<(vt1.c1)))) DESC  NULLS FIRST, NULLIF((((t0.c0, t0.c1, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3, t0.c4)) AND ((t0.c2, t0.c1, t0.c1))), (~ (t0.c5))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c1) NOTNULL)) ORDER BY '', (((((t0.c5))<>((vt1.c0))))<(((t0.c5)<<(vt1.c1)))) DESC  NULLS FIRST, NULLIF((((t0.c0, t0.c1, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3, t0.c4)) AND ((t0.c2, t0.c1, t0.c1))), (~ (t0.c5))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)<>(t0.c1)) AS NUMERIC) WHERE ((((t0.c1, t0.c3, t0.c3)) NOT BETWEEN ((0x7bfee1e6, (((t0.c1)) BETWEEN ((t0.c5)) AND ((t0.c2))), ((t0.c1)>=('N#')))) AND (((t0.c2 IN ()), ((t0.c5) IS TRUE), 0.2653624739774565)))) ORDER BY (~ (t0.c3)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c3, t0.c3)) NOT BETWEEN ((0X7bfee1e6, (((t0.c1)) BETWEEN ((t0.c5)) AND ((t0.c2))), ((t0.c1)>=('N#')))) AND (((t0.c2 IN ()), ((t0.c5) IS TRUE), 0.2653624739774565)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)<>(t0.c1)) AS NUMERIC) ORDER BY (~ (t0.c3)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)<>(t0.c1)) AS NUMERIC) WHERE ((((t0.c1, t0.c3, t0.c3)) NOT BETWEEN ((0x7bfee1e6, (((t0.c1)) BETWEEN ((t0.c5)) AND ((t0.c2))), ((t0.c1)>=('N#')))) AND (((t0.c2 IN ()), ((t0.c5) IS TRUE), 0.2653624739774565)))) ORDER BY (~ (t0.c3)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c3, t0.c3)) NOT BETWEEN ((0X7bfee1e6, (((t0.c1)) BETWEEN ((t0.c5)) AND ((t0.c2))), ((t0.c1)>=('N#')))) AND (((t0.c2 IN ()), ((t0.c5) IS TRUE), 0.2653624739774565)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)<>(t0.c1)) AS NUMERIC) ORDER BY (~ (t0.c3)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)<>(t0.c1)) AS NUMERIC) WHERE ((((t0.c1, t0.c3, t0.c3)) NOT BETWEEN ((0x7bfee1e6, (((t0.c1)) BETWEEN ((t0.c5)) AND ((t0.c2))), ((t0.c1)>=('N#')))) AND (((t0.c2 IN ()), ((t0.c5) IS TRUE), 0.2653624739774565)))) ORDER BY (~ (t0.c3)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c4 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((t0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c4 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((t0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c4 IN ())) IS FALSE));
SELECT * FROM vt0, vt1 WHERE ((MIN(vt0.c0, vt1.c0) IN ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((MIN(vt0.c0, vt1.c0) IN ((- (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((MIN(vt0.c0, vt1.c0) IN ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((MIN(vt0.c0, vt1.c0) IN ((- (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((MIN(vt0.c0, vt1.c0) IN ((- (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.7497871090233623 THEN vt0.c0 ELSE vt0.c1 END)=(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.7497871090233623 THEN vt0.c0 ELSE vt0.c1 END)=(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.7497871090233623 THEN vt0.c0 ELSE vt0.c1 END)=(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.7497871090233623 THEN vt0.c0 ELSE vt0.c1 END)=(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.7497871090233623 THEN vt0.c0 ELSE vt0.c1 END)=(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c1)LIKE(vt0.c0)))))AND(0Xffffffffb584263f)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c1)LIKE(vt0.c0)))))AND(0Xffffffffb584263f))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c1)LIKE(vt0.c0)))))AND(0Xffffffffb584263f)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c1)LIKE(vt0.c0)))))AND(0Xffffffffb584263f))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c1)LIKE(vt0.c0)))))AND(0Xffffffffb584263f)));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND (((vt1.c0 IN (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND (((vt1.c0 IN (vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND (((vt1.c0 IN (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND (((vt1.c0 IN (vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND (((vt1.c0 IN (vt1.c0))))) ASC;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (x'9ab3') ORDER BY ((((CAST(t0.c2 AS INTEGER))AND(CASE WHEN vt0.c1 THEN t0.c5 ELSE t0.c4 END)))AND(t0.c5 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'9ab3') IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t0 ORDER BY ((((CAST(t0.c2 AS INTEGER))AND(CASE WHEN vt0.c1 THEN t0.c5 ELSE t0.c4 END)))AND(t0.c5 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (x'9ab3') ORDER BY ((((CAST(t0.c2 AS INTEGER))AND(CASE WHEN vt0.c1 THEN t0.c5 ELSE t0.c4 END)))AND(t0.c5 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'9ab3') IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t0 ORDER BY ((((CAST(t0.c2 AS INTEGER))AND(CASE WHEN vt0.c1 THEN t0.c5 ELSE t0.c4 END)))AND(t0.c5 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (x'9ab3') ORDER BY ((((CAST(t0.c2 AS INTEGER))AND(CASE WHEN vt0.c1 THEN t0.c5 ELSE t0.c4 END)))AND(t0.c5 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM vt1 INNER JOIN vt0 ON 0.577866196023313 COLLATE BINARY COLLATE NOCASE FULL OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN t0.c2 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c70 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c1 END COLLATE RTRIM WHERE (((CAST(vt1.c1 AS NUMERIC))/((t0.c4 IN (t0.c70))))) ORDER BY (~ (((t0.c70)IS(2.111442161E9))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS NUMERIC))/((t0.c4 IN (t0.c70))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 0.577866196023313 COLLATE BINARY COLLATE NOCASE FULL OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN t0.c2 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c70 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c1 END COLLATE RTRIM ORDER BY (~ (((t0.c70)IS(2.111442161E9))))  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN vt0 ON 0.577866196023313 COLLATE BINARY COLLATE NOCASE FULL OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN t0.c2 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c70 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c1 END COLLATE RTRIM WHERE (((CAST(vt1.c1 AS NUMERIC))/((t0.c4 IN (t0.c70))))) ORDER BY (~ (((t0.c70)IS(2.111442161E9))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS NUMERIC))/((t0.c4 IN (t0.c70))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 0.577866196023313 COLLATE BINARY COLLATE NOCASE FULL OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN t0.c2 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c70 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c1 END COLLATE RTRIM ORDER BY (~ (((t0.c70)IS(2.111442161E9))))  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN vt0 ON 0.577866196023313 COLLATE BINARY COLLATE NOCASE FULL OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN t0.c2 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c70 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c1 END COLLATE RTRIM WHERE (((CAST(vt1.c1 AS NUMERIC))/((t0.c4 IN (t0.c70))))) ORDER BY (~ (((t0.c70)IS(2.111442161E9))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (LIKE(t0.c0, ((t0.c70) BETWEEN (t0.c0) AND (t0.c1)), ']')) ORDER BY (((((vt0.c1))<((t0.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((LIKE(t0.c0, ((t0.c70) BETWEEN (t0.c0) AND (t0.c1)), ']')) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c1))<((t0.c0)))) ISNULL) ASC);
SELECT ALL * FROM t0, vt0 WHERE (LIKE(t0.c0, ((t0.c70) BETWEEN (t0.c0) AND (t0.c1)), ']')) ORDER BY (((((vt0.c1))<((t0.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((LIKE(t0.c0, ((t0.c70) BETWEEN (t0.c0) AND (t0.c1)), ']')) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c1))<((t0.c0)))) ISNULL) ASC);
SELECT ALL * FROM t0, vt0 WHERE (LIKE(t0.c0, ((t0.c70) BETWEEN (t0.c0) AND (t0.c1)), ']')) ORDER BY (((((vt0.c1))<((t0.c0)))) ISNULL) ASC;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c1) ISNULL)) BETWEEN (359809766) AND ((t0.c70 IN ())))) ORDER BY ((t0.c1)%(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) ISNULL)) BETWEEN (359809766) AND ((t0.c70 IN ())))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c1)%(vt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c1) ISNULL)) BETWEEN (359809766) AND ((t0.c70 IN ())))) ORDER BY ((t0.c1)%(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) ISNULL)) BETWEEN (359809766) AND ((t0.c70 IN ())))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c1)%(vt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c1) ISNULL)) BETWEEN (359809766) AND ((t0.c70 IN ())))) ORDER BY ((t0.c1)%(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((HEX((+ (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((HEX((+ (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX((+ (vt1.c0))));
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c1);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((((t0.c5)AND(t0.c0)))AND(vt1.c1)))AND(((((((((t0.c3)AND(vt1.c0)))OR(0.21654678759817303)))AND(vt0.c0)))OR(t0.c70)))))OR((t0.c3 IN (vt1.c0, vt0.c1))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE t0.c4  WHEN t0.c4 THEN t0.c1 END)) AND ((((((t0.c2)OR(t0.c4)))AND(vt0.c1))))), (((NOT (0X253f1f6a))) BETWEEN (((NULL)%(t0.c1))) AND (((t0.c0) IS TRUE))), (+ ((+ (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c5)AND(t0.c0)))AND(vt1.c1)))AND(((((((((t0.c3)AND(vt1.c0)))OR(0.21654678759817303)))AND(vt0.c0)))OR(t0.c70)))))OR((t0.c3 IN (vt1.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c1)) BETWEEN ((CASE t0.c4  WHEN t0.c4 THEN t0.c1 END)) AND ((((((t0.c2)OR(t0.c4)))AND(vt0.c1))))), (((NOT (0X253f1f6a))) BETWEEN (((NULL)%(t0.c1))) AND (((t0.c0) IS TRUE))), (+ ((+ (vt0.c1)))) DESC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((((t0.c5)AND(t0.c0)))AND(vt1.c1)))AND(((((((((t0.c3)AND(vt1.c0)))OR(0.21654678759817303)))AND(vt0.c0)))OR(t0.c70)))))OR((t0.c3 IN (vt1.c0, vt0.c1))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE t0.c4  WHEN t0.c4 THEN t0.c1 END)) AND ((((((t0.c2)OR(t0.c4)))AND(vt0.c1))))), (((NOT (0X253f1f6a))) BETWEEN (((NULL)%(t0.c1))) AND (((t0.c0) IS TRUE))), (+ ((+ (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c5)AND(t0.c0)))AND(vt1.c1)))AND(((((((((t0.c3)AND(vt1.c0)))OR(0.21654678759817303)))AND(vt0.c0)))OR(t0.c70)))))OR((t0.c3 IN (vt1.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c1)) BETWEEN ((CASE t0.c4  WHEN t0.c4 THEN t0.c1 END)) AND ((((((t0.c2)OR(t0.c4)))AND(vt0.c1))))), (((NOT (0X253f1f6a))) BETWEEN (((NULL)%(t0.c1))) AND (((t0.c0) IS TRUE))), (+ ((+ (vt0.c1)))) DESC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((((t0.c5)AND(t0.c0)))AND(vt1.c1)))AND(((((((((t0.c3)AND(vt1.c0)))OR(0.21654678759817303)))AND(vt0.c0)))OR(t0.c70)))))OR((t0.c3 IN (vt1.c0, vt0.c1))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE t0.c4  WHEN t0.c4 THEN t0.c1 END)) AND ((((((t0.c2)OR(t0.c4)))AND(vt0.c1))))), (((NOT (0X253f1f6a))) BETWEEN (((NULL)%(t0.c1))) AND (((t0.c0) IS TRUE))), (+ ((+ (vt0.c1)))) DESC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE CAST(t0.c3 AS TEXT)  WHEN (((0.21654678759817303)) NOT BETWEEN ((t0.c4)) AND ((vt0.c0))) THEN CASE WHEN t0.c5 THEN t0.c1 WHEN vt1.c1 THEN t0.c4 WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END ELSE MAX(t0.c1, '-765540777') END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c3 AS TEXT)  WHEN (((0.21654678759817303)) NOT BETWEEN ((t0.c4)) AND ((vt0.c0))) THEN CASE WHEN t0.c5 THEN t0.c1 WHEN vt1.c1 THEN t0.c4 WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END ELSE MAX(t0.c1, '-765540777') END) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE CAST(t0.c3 AS TEXT)  WHEN (((0.21654678759817303)) NOT BETWEEN ((t0.c4)) AND ((vt0.c0))) THEN CASE WHEN t0.c5 THEN t0.c1 WHEN vt1.c1 THEN t0.c4 WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END ELSE MAX(t0.c1, '-765540777') END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c3 AS TEXT)  WHEN (((0.21654678759817303)) NOT BETWEEN ((t0.c4)) AND ((vt0.c0))) THEN CASE WHEN t0.c5 THEN t0.c1 WHEN vt1.c1 THEN t0.c4 WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END ELSE MAX(t0.c1, '-765540777') END) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE CAST(t0.c3 AS TEXT)  WHEN (((0.21654678759817303)) NOT BETWEEN ((t0.c4)) AND ((vt0.c0))) THEN CASE WHEN t0.c5 THEN t0.c1 WHEN vt1.c1 THEN t0.c4 WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END ELSE MAX(t0.c1, '-765540777') END);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (LOWER(((t0.c1) NOT NULL))) ORDER BY (CASE t0.c1  WHEN vt0.c0 THEN t0.c70 WHEN t0.c5 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 END IN ()) DESC  NULLS LAST, TRIM(DISTINCT '-614237350');
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c1) NOT NULL))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (CASE t0.c1  WHEN vt0.c0 THEN t0.c70 WHEN t0.c5 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 END IN ()) DESC  NULLS LAST, TRIM(DISTINCT '-614237350'));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (LOWER(((t0.c1) NOT NULL))) ORDER BY (CASE t0.c1  WHEN vt0.c0 THEN t0.c70 WHEN t0.c5 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 END IN ()) DESC  NULLS LAST, TRIM(DISTINCT '-614237350');
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c1) NOT NULL))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (CASE t0.c1  WHEN vt0.c0 THEN t0.c70 WHEN t0.c5 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 END IN ()) DESC  NULLS LAST, TRIM(DISTINCT '-614237350'));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (LOWER(((t0.c1) NOT NULL))) ORDER BY (CASE t0.c1  WHEN vt0.c0 THEN t0.c70 WHEN t0.c5 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 END IN ()) DESC  NULLS LAST, TRIM(DISTINCT '-614237350');
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c1) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c3) AND (t0.c5))) AND (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c3) AND (t0.c5))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c1) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c3) AND (t0.c5))) AND (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c3) AND (t0.c5))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c1) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c3) AND (t0.c5))) AND (CAST(vt1.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((json_object(t0.c5, t0.c2)))<(((('t_X')==(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((json_object(t0.c5, t0.c2)))<(((('t_X')==(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((json_object(t0.c5, t0.c2)))<(((('t_X')==(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((json_object(t0.c5, t0.c2)))<(((('t_X')==(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c4)) BETWEEN ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c4)))) AND ((((t0.c0)*(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c4)) BETWEEN ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c4)))) AND ((((t0.c0)*(vt1.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c4)) BETWEEN ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c4)))) AND ((((t0.c0)*(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c4)) BETWEEN ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c4)))) AND ((((t0.c0)*(vt1.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c4)) BETWEEN ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c4)))) AND ((((t0.c0)*(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-82358639');
SELECT SUM(count) FROM (SELECT ALL (('-82358639') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-82358639');
SELECT SUM(count) FROM (SELECT ALL (('-82358639') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-82358639');
SELECT * FROM t0 WHERE ((((t0.c70)) BETWEEN ((CAST(t0.c5 AS NUMERIC))) AND ((('1696069463' IN (t0.c0, t0.c3)))))) ORDER BY (((- (t0.c4)))==(json_array(t0.c70, t0.c2)));
SELECT SUM(count) FROM (SELECT (((((t0.c70)) BETWEEN ((CAST(t0.c5 AS NUMERIC))) AND ((('1696069463' IN (t0.c0, t0.c3)))))) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c4)))==(json_array(t0.c70, t0.c2))));
SELECT * FROM t0 WHERE ((((t0.c70)) BETWEEN ((CAST(t0.c5 AS NUMERIC))) AND ((('1696069463' IN (t0.c0, t0.c3)))))) ORDER BY (((- (t0.c4)))==(json_array(t0.c70, t0.c2)));
SELECT SUM(count) FROM (SELECT (((((t0.c70)) BETWEEN ((CAST(t0.c5 AS NUMERIC))) AND ((('1696069463' IN (t0.c0, t0.c3)))))) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c4)))==(json_array(t0.c70, t0.c2))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (- (0X157242e6 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((CASE t0.c70  WHEN t0.c1 THEN t0.c4 END)IS(((((t0.c3)OR(t0.c0)))AND(t0.c5)))) WHERE (CAST(t0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((('-1249630657') IS TRUE))!=(CASE t0.c4  WHEN vt1.c0 THEN NULL ELSE t0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (- (0x157242e6 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((CASE t0.c70  WHEN t0.c1 THEN t0.c4 END)IS(((((t0.c3)OR(t0.c0)))AND(t0.c5)))) ORDER BY (((('-1249630657') IS TRUE))<>(CASE t0.c4  WHEN vt1.c0 THEN NULL ELSE t0.c3 END)) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (- (0X157242e6 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((CASE t0.c70  WHEN t0.c1 THEN t0.c4 END)IS(((((t0.c3)OR(t0.c0)))AND(t0.c5)))) WHERE (CAST(t0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((('-1249630657') IS TRUE))!=(CASE t0.c4  WHEN vt1.c0 THEN NULL ELSE t0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (- (0x157242e6 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((CASE t0.c70  WHEN t0.c1 THEN t0.c4 END)IS(((((t0.c3)OR(t0.c0)))AND(t0.c5)))) ORDER BY (((('-1249630657') IS TRUE))<>(CASE t0.c4  WHEN vt1.c0 THEN NULL ELSE t0.c3 END)) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (- (0X157242e6 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((CASE t0.c70  WHEN t0.c1 THEN t0.c4 END)IS(((((t0.c3)OR(t0.c0)))AND(t0.c5)))) WHERE (CAST(t0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((('-1249630657') IS TRUE))!=(CASE t0.c4  WHEN vt1.c0 THEN NULL ELSE t0.c3 END)) ASC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (- (t0.c4)) COLLATE NOCASE WHERE ((NOT (((t0.c5)>(t0.c70)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c5)>(t0.c70))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (- (t0.c4)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (- (t0.c4)) COLLATE NOCASE WHERE ((NOT (((t0.c5)>(t0.c70)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c5)>(t0.c70))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (- (t0.c4)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (- (t0.c4)) COLLATE NOCASE WHERE ((NOT (((t0.c5)>(t0.c70)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))OR(((vt0.c0)GLOB(t0.c3)))) WHERE (((((t0.c0) IS TRUE)) NOTNULL)) ORDER BY ((vt0.c1 IN ()) IN ())  NULLS LAST, ((((((t0.c70)|(t0.c1)))AND(((x'') IS FALSE))))AND((+ (t0.c0)))) DESC, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))OR(((vt0.c0)GLOB(t0.c3)))) ORDER BY ((vt0.c1 IN ()) IN ())  NULLS LAST, ((((((t0.c70)|(t0.c1)))AND(((x'') IS FALSE))))AND((+ (t0.c0)))) DESC, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))OR(((vt0.c0)GLOB(t0.c3)))) WHERE (((((t0.c0) IS TRUE)) NOTNULL)) ORDER BY ((vt0.c1 IN ()) IN ())  NULLS LAST, ((((((t0.c70)|(t0.c1)))AND(((x'') IS FALSE))))AND((+ (t0.c0)))) DESC, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))OR(((vt0.c0)GLOB(t0.c3)))) ORDER BY ((vt0.c1 IN ()) IN ())  NULLS LAST, ((((((t0.c70)|(t0.c1)))AND(((x'') IS FALSE))))AND((+ (t0.c0)))) DESC, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT t0.c0))OR(((vt0.c0)GLOB(t0.c3)))) WHERE (((((t0.c0) IS TRUE)) NOTNULL)) ORDER BY ((vt0.c1 IN ()) IN ())  NULLS LAST, ((((((t0.c70)|(t0.c1)))AND(((x'') IS FALSE))))AND((+ (t0.c0)))) DESC, NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c1))) AND (((t0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c1))) AND (((t0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c1))) AND (((t0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c1))) AND (((t0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c1))) AND (((t0.c3) NOT NULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND((+ (vt1.c1))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND((+ (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND((+ (vt1.c1))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND((+ (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND((+ (vt1.c1))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CHAR(t0.c5))-(t0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CHAR(t0.c5))-(t0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CHAR(t0.c5))-(t0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CHAR(t0.c5))-(t0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CHAR(t0.c5))-(t0.c4 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST((((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (((vt1.c1) BETWEEN (t0.c4) AND (vt0.c1))) AND (((t0.c2)<<(vt0.c1)))) ASC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (((vt1.c1) BETWEEN (t0.c4) AND (vt0.c1))) AND (((t0.c2)<<(vt0.c1)))) ASC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST((((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (((vt1.c1) BETWEEN (t0.c4) AND (vt0.c1))) AND (((t0.c2)<<(vt0.c1)))) ASC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (((vt1.c1) BETWEEN (t0.c4) AND (vt0.c1))) AND (((t0.c2)<<(vt0.c1)))) ASC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST((((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (((vt1.c1) BETWEEN (t0.c4) AND (vt0.c1))) AND (((t0.c2)<<(vt0.c1)))) ASC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (0.4033028229308564);
SELECT SUM(count) FROM (SELECT ((0.4033028229308564) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (0.4033028229308564);
SELECT SUM(count) FROM (SELECT ((0.4033028229308564) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (0.4033028229308564);
SELECT * FROM t0, vt1, vt0 WHERE (CAST((((vt1.c0, t0.c3, x'6c7d')) NOT BETWEEN ((t0.c70, t0.c2, t0.c3)) AND ((t0.c4, t0.c4, t0.c70))) AS TEXT)) ORDER BY (((x'034e' IN (t0.c0)))<>(((((vt1.c1)OR(t0.c70)))OR(vt0.c0)))), (- (((t0.c70)LIKE(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, t0.c3, x'6c7d')) NOT BETWEEN ((t0.c70, t0.c2, t0.c3)) AND ((t0.c4, t0.c4, t0.c70))) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((x'034e' IN (t0.c0)))!=(((((vt1.c1)OR(t0.c70)))OR(vt0.c0)))), (- (((t0.c70)LIKE(vt0.c0))))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (CAST((((vt1.c0, t0.c3, x'6c7d')) NOT BETWEEN ((t0.c70, t0.c2, t0.c3)) AND ((t0.c4, t0.c4, t0.c70))) AS TEXT)) ORDER BY (((x'034e' IN (t0.c0)))<>(((((vt1.c1)OR(t0.c70)))OR(vt0.c0)))), (- (((t0.c70)LIKE(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, t0.c3, x'6c7d')) NOT BETWEEN ((t0.c70, t0.c2, t0.c3)) AND ((t0.c4, t0.c4, t0.c70))) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((x'034e' IN (t0.c0)))!=(((((vt1.c1)OR(t0.c70)))OR(vt0.c0)))), (- (((t0.c70)LIKE(vt0.c0))))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (CAST((((vt1.c0, t0.c3, x'6c7d')) NOT BETWEEN ((t0.c70, t0.c2, t0.c3)) AND ((t0.c4, t0.c4, t0.c70))) AS TEXT)) ORDER BY (((x'034e' IN (t0.c0)))<>(((((vt1.c1)OR(t0.c70)))OR(vt0.c0)))), (- (((t0.c70)LIKE(vt0.c0))))  NULLS LAST;
SELECT * FROM vt0, vt1, t0 WHERE (CASE ((vt0.c1)<>(vt1.c0))  WHEN (x'' IN ()) THEN ((vt1.c1)>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)<>(vt1.c0))  WHEN (x'' IN ()) THEN ((vt1.c1)>(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CASE ((vt0.c1)<>(vt1.c0))  WHEN (x'' IN ()) THEN ((vt1.c1)>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)<>(vt1.c0))  WHEN (x'' IN ()) THEN ((vt1.c1)>(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CASE ((vt0.c1)<>(vt1.c0))  WHEN (x'' IN ()) THEN ((vt1.c1)>(vt0.c1)) END);
SELECT * FROM vt0, t0 WHERE (CAST(NULLIF(t0.c70, vt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(t0.c70, vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(NULLIF(t0.c70, vt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(t0.c70, vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(NULLIF(t0.c70, vt0.c1) AS REAL));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c1 COLLATE NOCASE)<=(t0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE)<=(t0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c1 COLLATE NOCASE)<=(t0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE)<=(t0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c1 COLLATE NOCASE)<=(t0.c3 COLLATE NOCASE)));
SELECT * FROM vt0, t0, vt1 WHERE (((LIKELY(t0.c4))/(PRINTF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(t0.c4))/(PRINTF(vt1.c0)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((LIKELY(t0.c4))/(PRINTF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(t0.c4))/(PRINTF(vt1.c0)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((LIKELY(t0.c4))/(PRINTF(vt1.c0))));
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT * FROM vt0, t0, vt1 WHERE (CAST(CASE vt0.c1  WHEN t0.c1 THEN t0.c4 ELSE x'b6c87a00' END AS TEXT)) ORDER BY ((((t0.c1)>=(vt1.c0)))*((((t0.c70)) NOT BETWEEN ((t0.c1)) AND (('')))))  NULLS FIRST, UNLIKELY(CAST(t0.c1 AS BLOB)) DESC, ((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c70)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN t0.c1 THEN t0.c4 ELSE x'b6c87a00' END AS TEXT)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c1)>=(vt1.c0)))*((((t0.c70)) NOT BETWEEN ((t0.c1)) AND (('')))))  NULLS FIRST, UNLIKELY(CAST(t0.c1 AS BLOB)) DESC, ((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c70)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(CASE vt0.c1  WHEN t0.c1 THEN t0.c4 ELSE x'b6c87a00' END AS TEXT)) ORDER BY ((((t0.c1)>=(vt1.c0)))*((((t0.c70)) NOT BETWEEN ((t0.c1)) AND (('')))))  NULLS FIRST, UNLIKELY(CAST(t0.c1 AS BLOB)) DESC, ((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c70)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN t0.c1 THEN t0.c4 ELSE x'b6c87a00' END AS TEXT)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c1)>=(vt1.c0)))*((((t0.c70)) NOT BETWEEN ((t0.c1)) AND (('')))))  NULLS FIRST, UNLIKELY(CAST(t0.c1 AS BLOB)) DESC, ((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c70)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(CASE vt0.c1  WHEN t0.c1 THEN t0.c4 ELSE x'b6c87a00' END AS TEXT)) ORDER BY ((((t0.c1)>=(vt1.c0)))*((((t0.c70)) NOT BETWEEN ((t0.c1)) AND (('')))))  NULLS FIRST, UNLIKELY(CAST(t0.c1 AS BLOB)) DESC, ((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c70)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END AS NUMERIC)) ORDER BY ((((vt1.c0) IS FALSE))LIKE(vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE))LIKE(vt1.c1)));
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END AS NUMERIC)) ORDER BY ((((vt1.c0) IS FALSE))LIKE(vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE))LIKE(vt1.c1)));
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END AS NUMERIC)) ORDER BY ((((vt1.c0) IS FALSE))LIKE(vt1.c1));
SELECT * FROM vt1, t0 WHERE ((((((+ (t0.c70)))OR(((t0.c1) IS TRUE))))OR((('0.4033028229308564')||('585000805')))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c70)))OR(((t0.c1) IS TRUE))))OR((('0.4033028229308564')||('585000805'))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((((+ (t0.c70)))OR(((t0.c1) IS TRUE))))OR((('0.4033028229308564')||('585000805')))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c70)))OR(((t0.c1) IS TRUE))))OR((('0.4033028229308564')||('585000805'))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((((+ (t0.c70)))OR(((t0.c1) IS TRUE))))OR((('0.4033028229308564')||('585000805')))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)|(vt1.c1))) BETWEEN (((vt1.c1)LIKE(vt1.c1))) AND (((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)|(vt1.c1))) BETWEEN (((vt1.c1)LIKE(vt1.c1))) AND (((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)|(vt1.c1))) BETWEEN (((vt1.c1)LIKE(vt1.c1))) AND (((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)|(vt1.c1))) BETWEEN (((vt1.c1)LIKE(vt1.c1))) AND (((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)|(vt1.c1))) BETWEEN (((vt1.c1)LIKE(vt1.c1))) AND (((vt1.c1) ISNULL))));
SELECT * FROM vt1 WHERE (((((((vt1.c1))<((vt1.c1)))))>(((~ (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1))<((vt1.c1)))))>(((~ (vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c1))<((vt1.c1)))))>(((~ (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1))<((vt1.c1)))))>(((~ (vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c1))<((vt1.c1)))))>(((~ (vt1.c1))))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c4 COLLATE NOCASE)OR(ABS(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c4 COLLATE NOCASE)OR(ABS(vt1.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c4 COLLATE NOCASE)OR(ABS(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c4 COLLATE NOCASE)OR(ABS(vt1.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c4 COLLATE NOCASE)OR(ABS(vt1.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(t0.c4)) ORDER BY (((t0.c4, t0.c3, t0.c2)) BETWEEN ((('542639848' IN ()), ((t0.c3)==(t0.c2)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)))) AND ((CASE WHEN t0.c70 THEN t0.c1 END, ((t0.c3)%(NULL)), ((t0.c4)LIKE(t0.c2))))) DESC  NULLS FIRST, t0.c1 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(t0.c4)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c4, t0.c3, t0.c2)) BETWEEN ((('542639848' IN ()), ((t0.c3)=(t0.c2)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)))) AND ((CASE WHEN t0.c70 THEN t0.c1 END, ((t0.c3)%(NULL)), ((t0.c4)LIKE(t0.c2))))) DESC  NULLS FIRST, t0.c1 COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(t0.c4)) ORDER BY (((t0.c4, t0.c3, t0.c2)) BETWEEN ((('542639848' IN ()), ((t0.c3)==(t0.c2)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)))) AND ((CASE WHEN t0.c70 THEN t0.c1 END, ((t0.c3)%(NULL)), ((t0.c4)LIKE(t0.c2))))) DESC  NULLS FIRST, t0.c1 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(t0.c4)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c4, t0.c3, t0.c2)) BETWEEN ((('542639848' IN ()), ((t0.c3)=(t0.c2)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)))) AND ((CASE WHEN t0.c70 THEN t0.c1 END, ((t0.c3)%(NULL)), ((t0.c4)LIKE(t0.c2))))) DESC  NULLS FIRST, t0.c1 COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(t0.c4)) ORDER BY (((t0.c4, t0.c3, t0.c2)) BETWEEN ((('542639848' IN ()), ((t0.c3)==(t0.c2)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)))) AND ((CASE WHEN t0.c70 THEN t0.c1 END, ((t0.c3)%(NULL)), ((t0.c4)LIKE(t0.c2))))) DESC  NULLS FIRST, t0.c1 COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((t0.c0)) BETWEEN (((((NULL, vt1.c1, t0.c1, vt0.c1, t0.c5, vt1.c1, t0.c2))==((vt0.c0, vt0.c1, t0.c1, t0.c2, vt0.c1, t0.c0, t0.c3))))) AND (((((vt0.c0))<=((t0.c70)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((((NULL, vt1.c1, t0.c1, vt0.c1, t0.c5, vt1.c1, t0.c2))=((vt0.c0, vt0.c1, t0.c1, t0.c2, vt0.c1, t0.c0, t0.c3))))) AND (((((vt0.c0))<=((t0.c70))))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((t0.c0)) BETWEEN (((((NULL, vt1.c1, t0.c1, vt0.c1, t0.c5, vt1.c1, t0.c2))==((vt0.c0, vt0.c1, t0.c1, t0.c2, vt0.c1, t0.c0, t0.c3))))) AND (((((vt0.c0))<=((t0.c70)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((((NULL, vt1.c1, t0.c1, vt0.c1, t0.c5, vt1.c1, t0.c2))=((vt0.c0, vt0.c1, t0.c1, t0.c2, vt0.c1, t0.c0, t0.c3))))) AND (((((vt0.c0))<=((t0.c70))))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((t0.c0)) BETWEEN (((((NULL, vt1.c1, t0.c1, vt0.c1, t0.c5, vt1.c1, t0.c2))==((vt0.c0, vt0.c1, t0.c1, t0.c2, vt0.c1, t0.c0, t0.c3))))) AND (((((vt0.c0))<=((t0.c70)))))));
SELECT ALL * FROM t0, vt1 WHERE ((((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((CAST(t0.c0 AS REAL))))) ORDER BY ((((t0.c4)&(t0.c70))) NOT BETWEEN (((t0.c2)+(t0.c2))) AND (CAST(t0.c5 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c4)&(t0.c70))) NOT BETWEEN (((t0.c2)+(t0.c2))) AND (CAST(t0.c5 AS NUMERIC))) DESC);
SELECT ALL * FROM t0, vt1 WHERE ((((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((CAST(t0.c0 AS REAL))))) ORDER BY ((((t0.c4)&(t0.c70))) NOT BETWEEN (((t0.c2)+(t0.c2))) AND (CAST(t0.c5 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c4)&(t0.c70))) NOT BETWEEN (((t0.c2)+(t0.c2))) AND (CAST(t0.c5 AS NUMERIC))) DESC);
SELECT ALL * FROM t0, vt1 WHERE ((((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((CAST(t0.c0 AS REAL))))) ORDER BY ((((t0.c4)&(t0.c70))) NOT BETWEEN (((t0.c2)+(t0.c2))) AND (CAST(t0.c5 AS NUMERIC))) DESC;
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT * FROM vt0, vt1, t0 WHERE ((((vt1.c1 COLLATE RTRIM))<>(('')))) ORDER BY load_extension(CAST(t0.c0 AS REAL), UNLIKELY(vt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 COLLATE RTRIM))<>(('')))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY load_extension(CAST(t0.c0 AS REAL), UNLIKELY(vt1.c1)));
SELECT * FROM vt0, vt1, t0 WHERE ((((vt1.c1 COLLATE RTRIM))<>(('')))) ORDER BY load_extension(CAST(t0.c0 AS REAL), UNLIKELY(vt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 COLLATE RTRIM))<>(('')))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY load_extension(CAST(t0.c0 AS REAL), UNLIKELY(vt1.c1)));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (TRIM(DISTINCT CAST(t0.c3 AS TEXT))) ORDER BY IFNULL(((vt0.c1)<<(t0.c0)), (((t0.c4, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((t0.c1, t0.c4, t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(t0.c3 AS TEXT))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY IFNULL(((vt0.c1)<<(t0.c0)), (((t0.c4, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((t0.c1, t0.c4, t0.c2)))) DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (TRIM(DISTINCT CAST(t0.c3 AS TEXT))) ORDER BY IFNULL(((vt0.c1)<<(t0.c0)), (((t0.c4, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((t0.c1, t0.c4, t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(t0.c3 AS TEXT))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY IFNULL(((vt0.c1)<<(t0.c0)), (((t0.c4, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((t0.c1, t0.c4, t0.c2)))) DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (TRIM(DISTINCT CAST(t0.c3 AS TEXT))) ORDER BY IFNULL(((vt0.c1)<<(t0.c0)), (((t0.c4, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((t0.c1, t0.c4, t0.c2)))) DESC;
SELECT * FROM t0, vt0, vt1 WHERE ((((t0.c3)) NOT BETWEEN ((((t0.c3)=(t0.c4)))) AND (((vt0.c0 IN ()))))) ORDER BY CASE ((t0.c4)OR(vt0.c0))  WHEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c4)) THEN HEX('0.45590540352135667') END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)) NOT BETWEEN ((((t0.c3)==(t0.c4)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE ((t0.c4)OR(vt0.c0))  WHEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c4)) THEN HEX('0.45590540352135667') END  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE ((((t0.c3)) NOT BETWEEN ((((t0.c3)=(t0.c4)))) AND (((vt0.c0 IN ()))))) ORDER BY CASE ((t0.c4)OR(vt0.c0))  WHEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c4)) THEN HEX('0.45590540352135667') END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)) NOT BETWEEN ((((t0.c3)==(t0.c4)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE ((t0.c4)OR(vt0.c0))  WHEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c4)) THEN HEX('0.45590540352135667') END  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE ((((t0.c3)) NOT BETWEEN ((((t0.c3)=(t0.c4)))) AND (((vt0.c0 IN ()))))) ORDER BY CASE ((t0.c4)OR(vt0.c0))  WHEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c4)) THEN HEX('0.45590540352135667') END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c1) NOT NULL) END) ORDER BY ((vt1.c1)||(CAST(vt1.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)||(CAST(vt1.c1 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c1) NOT NULL) END) ORDER BY ((vt1.c1)||(CAST(vt1.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)||(CAST(vt1.c1 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c1) NOT NULL) END) ORDER BY ((vt1.c1)||(CAST(vt1.c1 AS BLOB)))  NULLS FIRST;
SELECT * FROM t0 WHERE ((- (((t0.c0)*(t0.c4))))) ORDER BY LOWER(DISTINCT CAST(t0.c2 AS REAL)), x''  NULLS LAST, (((+ (0.8187600005945681)))<<(t0.c70));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)*(t0.c4))))) IS TRUE)  as count FROM t0 ORDER BY LOWER(DISTINCT CAST(t0.c2 AS REAL)), x''  NULLS LAST, (((+ (0.8187600005945681)))<<(t0.c70)));
SELECT * FROM t0 WHERE ((- (((t0.c0)*(t0.c4))))) ORDER BY LOWER(DISTINCT CAST(t0.c2 AS REAL)), x''  NULLS LAST, (((+ (0.8187600005945681)))<<(t0.c70));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)*(t0.c4))))) IS TRUE)  as count FROM t0 ORDER BY LOWER(DISTINCT CAST(t0.c2 AS REAL)), x''  NULLS LAST, (((+ (0.8187600005945681)))<<(t0.c70)));
SELECT * FROM t0 WHERE ((- (((t0.c0)*(t0.c4))))) ORDER BY LOWER(DISTINCT CAST(t0.c2 AS REAL)), x''  NULLS LAST, (((+ (0.8187600005945681)))<<(t0.c70));
SELECT COUNT(*) FROM t0 WHERE ((LIKELIHOOD(DISTINCT t0.c2, 0.6824898437958953) IN ())) ORDER BY ((((((((((t0.c1)AND(t0.c0)))AND(t0.c70)))AND(t0.c0)))AND(t0.c1))) IS TRUE) DESC  NULLS LAST, ((((((((t0.c4 COLLATE NOCASE)AND((t0.c0 IN (t0.c1, t0.c5)))))AND((NOT (t0.c5)))))OR(((((t0.c70)AND(t0.c1)))OR(t0.c1)))))OR(UPPER(t0.c4))), CASE ((t0.c2) IS TRUE)  WHEN (((t0.c3, t0.c3, t0.c4)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c2, t0.c5, t0.c0))) THEN ABS(DISTINCT t0.c5) ELSE UPPER(DISTINCT t0.c1) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(DISTINCT t0.c2, 0.6824898437958953) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c1)AND(t0.c0)))AND(t0.c70)))AND(t0.c0)))AND(t0.c1))) IS TRUE) DESC  NULLS LAST, ((((((((t0.c4 COLLATE NOCASE)AND((t0.c0 IN (t0.c1, t0.c5)))))AND((NOT (t0.c5)))))OR(((((t0.c70)AND(t0.c1)))OR(t0.c1)))))OR(UPPER(t0.c4))), CASE ((t0.c2) IS TRUE)  WHEN (((t0.c3, t0.c3, t0.c4)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c2, t0.c5, t0.c0))) THEN ABS(DISTINCT t0.c5) ELSE UPPER(DISTINCT t0.c1) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((LIKELIHOOD(DISTINCT t0.c2, 0.6824898437958953) IN ())) ORDER BY ((((((((((t0.c1)AND(t0.c0)))AND(t0.c70)))AND(t0.c0)))AND(t0.c1))) IS TRUE) DESC  NULLS LAST, ((((((((t0.c4 COLLATE NOCASE)AND((t0.c0 IN (t0.c1, t0.c5)))))AND((NOT (t0.c5)))))OR(((((t0.c70)AND(t0.c1)))OR(t0.c1)))))OR(UPPER(t0.c4))), CASE ((t0.c2) IS TRUE)  WHEN (((t0.c3, t0.c3, t0.c4)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c2, t0.c5, t0.c0))) THEN ABS(DISTINCT t0.c5) ELSE UPPER(DISTINCT t0.c1) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(DISTINCT t0.c2, 0.6824898437958953) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c1)AND(t0.c0)))AND(t0.c70)))AND(t0.c0)))AND(t0.c1))) IS TRUE) DESC  NULLS LAST, ((((((((t0.c4 COLLATE NOCASE)AND((t0.c0 IN (t0.c1, t0.c5)))))AND((NOT (t0.c5)))))OR(((((t0.c70)AND(t0.c1)))OR(t0.c1)))))OR(UPPER(t0.c4))), CASE ((t0.c2) IS TRUE)  WHEN (((t0.c3, t0.c3, t0.c4)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c2, t0.c5, t0.c0))) THEN ABS(DISTINCT t0.c5) ELSE UPPER(DISTINCT t0.c1) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((LIKELIHOOD(DISTINCT t0.c2, 0.6824898437958953) IN ())) ORDER BY ((((((((((t0.c1)AND(t0.c0)))AND(t0.c70)))AND(t0.c0)))AND(t0.c1))) IS TRUE) DESC  NULLS LAST, ((((((((t0.c4 COLLATE NOCASE)AND((t0.c0 IN (t0.c1, t0.c5)))))AND((NOT (t0.c5)))))OR(((((t0.c70)AND(t0.c1)))OR(t0.c1)))))OR(UPPER(t0.c4))), CASE ((t0.c2) IS TRUE)  WHEN (((t0.c3, t0.c3, t0.c4)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c2, t0.c5, t0.c0))) THEN ABS(DISTINCT t0.c5) ELSE UPPER(DISTINCT t0.c1) END ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (HEX(CAST(t0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(t0.c2 AS INTEGER))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (HEX(CAST(t0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(t0.c2 AS INTEGER))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (HEX(CAST(t0.c2 AS INTEGER)));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((t0.c5)AND(t0.c4)) THEN CAST(x'3078' AS REAL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((CASE WHEN t0.c5 THEN t0.c1 END, CAST(vt1.c0 AS REAL), SQLITE_COMPILEOPTION_GET(0xffffffffdd7cfae1)))<>(((vt1.c1 IN (t0.c3, NULL)), TRIM(vt0.c0, 0.28580619312180344), (-7.00831482E8 IN (vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c5)AND(t0.c4)) THEN CAST(x'3078' AS REAL) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((CASE WHEN t0.c5 THEN t0.c1 END, CAST(vt1.c0 AS REAL), SQLITE_COMPILEOPTION_GET(0xffffffffdd7cfae1)))<>(((vt1.c1 IN (t0.c3, NULL)), TRIM(vt0.c0, 0.28580619312180344), (-7.00831482E8 IN (vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((t0.c5)AND(t0.c4)) THEN CAST(x'3078' AS REAL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((CASE WHEN t0.c5 THEN t0.c1 END, CAST(vt1.c0 AS REAL), SQLITE_COMPILEOPTION_GET(0xffffffffdd7cfae1)))<>(((vt1.c1 IN (t0.c3, NULL)), TRIM(vt0.c0, 0.28580619312180344), (-7.00831482E8 IN (vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c5)AND(t0.c4)) THEN CAST(x'3078' AS REAL) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((CASE WHEN t0.c5 THEN t0.c1 END, CAST(vt1.c0 AS REAL), SQLITE_COMPILEOPTION_GET(0xffffffffdd7cfae1)))<>(((vt1.c1 IN (t0.c3, NULL)), TRIM(vt0.c0, 0.28580619312180344), (-7.00831482E8 IN (vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((t0.c5)AND(t0.c4)) THEN CAST(x'3078' AS REAL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((CASE WHEN t0.c5 THEN t0.c1 END, CAST(vt1.c0 AS REAL), SQLITE_COMPILEOPTION_GET(0xffffffffdd7cfae1)))<>(((vt1.c1 IN (t0.c3, NULL)), TRIM(vt0.c0, 0.28580619312180344), (-7.00831482E8 IN (vt0.c1))))) ASC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((((CASE vt0.c1  WHEN t0.c2 THEN t0.c5 END))<((((t0.c5)<=(t0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c1  WHEN t0.c2 THEN t0.c5 END))<((((t0.c5)<=(t0.c4)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((CASE vt0.c1  WHEN t0.c2 THEN t0.c5 END))<((((t0.c5)<=(t0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c1  WHEN t0.c2 THEN t0.c5 END))<((((t0.c5)<=(t0.c4)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((CASE vt0.c1  WHEN t0.c2 THEN t0.c5 END))<((((t0.c5)<=(t0.c4))))));
SELECT * FROM t0, vt1 NATURAL JOIN vt0 WHERE (t0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c3 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT * FROM t0, vt1 NATURAL JOIN vt0 WHERE (t0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c3 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT * FROM t0, vt1 NATURAL JOIN vt0 WHERE (t0.c3 COLLATE NOCASE);
SELECT * FROM vt1, vt0, t0 WHERE (((SQLITE_VERSION()) NOT BETWEEN ('k26') AND ((0.44986357087004236 IN (t0.c0, t0.c4))))) ORDER BY TRIM(((t0.c70)+(t0.c2)), ((vt0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOT BETWEEN ('k26') AND ((0.44986357087004236 IN (t0.c0, t0.c4))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY TRIM(((t0.c70)+(t0.c2)), ((vt0.c1) IS FALSE)));
SELECT * FROM vt1, vt0, t0 WHERE (((SQLITE_VERSION()) NOT BETWEEN ('k26') AND ((0.44986357087004236 IN (t0.c0, t0.c4))))) ORDER BY TRIM(((t0.c70)+(t0.c2)), ((vt0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOT BETWEEN ('k26') AND ((0.44986357087004236 IN (t0.c0, t0.c4))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY TRIM(((t0.c70)+(t0.c2)), ((vt0.c1) IS FALSE)));
SELECT * FROM vt1, vt0, t0 WHERE (((SQLITE_VERSION()) NOT BETWEEN ('k26') AND ((0.44986357087004236 IN (t0.c0, t0.c4))))) ORDER BY TRIM(((t0.c70)+(t0.c2)), ((vt0.c1) IS FALSE));
SELECT * FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0)) ORDER BY ((CAST(vt0.c0 AS TEXT))LIKE(vt0.c0)) DESC  NULLS FIRST, (+ (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(vt0.c0)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS TEXT))LIKE(vt0.c0)) DESC  NULLS FIRST, (+ (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT * FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0)) ORDER BY ((CAST(vt0.c0 AS TEXT))LIKE(vt0.c0)) DESC  NULLS FIRST, (+ (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(vt0.c0)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS TEXT))LIKE(vt0.c0)) DESC  NULLS FIRST, (+ (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT * FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0)) ORDER BY ((CAST(vt0.c0 AS TEXT))LIKE(vt0.c0)) DESC  NULLS FIRST, (+ (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c0)>(vt1.c0))  WHEN ((vt0.c0)>=(vt0.c1)) THEN CASE vt0.c0  WHEN vt1.c0 THEN x'8e7f' WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN vt1.c1 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN ((vt1.c0)*(vt1.c0)) THEN NULL ELSE ((vt0.c1)LIKE(vt0.c1)) END WHERE ('픝q') ORDER BY ((((vt0.c0)IS NOT(vt0.c1)))>=(MIN(vt0.c0, vt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('픝q') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c0)>(vt1.c0))  WHEN ((vt0.c0)>=(vt0.c1)) THEN CASE vt0.c0  WHEN vt1.c0 THEN x'8e7f' WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN vt1.c1 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN ((vt1.c0)*(vt1.c0)) THEN NULL ELSE ((vt0.c1)LIKE(vt0.c1)) END ORDER BY ((((vt0.c0)IS NOT(vt0.c1)))>=(MIN(vt0.c0, vt1.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c0)>(vt1.c0))  WHEN ((vt0.c0)>=(vt0.c1)) THEN CASE vt0.c0  WHEN vt1.c0 THEN x'8e7f' WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN vt1.c1 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN ((vt1.c0)*(vt1.c0)) THEN NULL ELSE ((vt0.c1)LIKE(vt0.c1)) END WHERE ('픝q') ORDER BY ((((vt0.c0)IS NOT(vt0.c1)))>=(MIN(vt0.c0, vt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('픝q') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c0)>(vt1.c0))  WHEN ((vt0.c0)>=(vt0.c1)) THEN CASE vt0.c0  WHEN vt1.c0 THEN x'8e7f' WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN vt1.c1 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN ((vt1.c0)*(vt1.c0)) THEN NULL ELSE ((vt0.c1)LIKE(vt0.c1)) END ORDER BY ((((vt0.c0)IS NOT(vt0.c1)))>=(MIN(vt0.c0, vt1.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c0)>(vt1.c0))  WHEN ((vt0.c0)>=(vt0.c1)) THEN CASE vt0.c0  WHEN vt1.c0 THEN x'8e7f' WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN vt1.c1 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN ((vt1.c0)*(vt1.c0)) THEN NULL ELSE ((vt0.c1)LIKE(vt0.c1)) END WHERE ('픝q') ORDER BY ((((vt0.c0)IS NOT(vt0.c1)))>=(MIN(vt0.c0, vt1.c1)))  NULLS LAST;
SELECT * FROM t0, vt1 WHERE ((+ (((((vt1.c1)AND(0X687b1923)))OR(t0.c4))))) ORDER BY (((t0.c2 IN ()))>(t0.c70)) ASC, ((((t0.c0) ISNULL))=(NULLIF(DISTINCT vt1.c1, 'Rn')))  NULLS LAST, CASE WHEN vt1.c0 THEN t0.c2 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c1)AND(0X687b1923)))OR(t0.c4))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c2 IN ()))>(t0.c70)) ASC, ((((t0.c0) ISNULL))==(NULLIF(DISTINCT vt1.c1, 'Rn')))  NULLS LAST, CASE WHEN vt1.c0 THEN t0.c2 END COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((+ (((((vt1.c1)AND(0X687b1923)))OR(t0.c4))))) ORDER BY (((t0.c2 IN ()))>(t0.c70)) ASC, ((((t0.c0) ISNULL))=(NULLIF(DISTINCT vt1.c1, 'Rn')))  NULLS LAST, CASE WHEN vt1.c0 THEN t0.c2 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c1)AND(0X687b1923)))OR(t0.c4))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c2 IN ()))>(t0.c70)) ASC, ((((t0.c0) ISNULL))==(NULLIF(DISTINCT vt1.c1, 'Rn')))  NULLS LAST, CASE WHEN vt1.c0 THEN t0.c2 END COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((+ (((((vt1.c1)AND(0X687b1923)))OR(t0.c4))))) ORDER BY (((t0.c2 IN ()))>(t0.c70)) ASC, ((((t0.c0) ISNULL))=(NULLIF(DISTINCT vt1.c1, 'Rn')))  NULLS LAST, CASE WHEN vt1.c0 THEN t0.c2 END COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c1)) AS INTEGER)) ORDER BY CASE WHEN CAST(0.7568479831022583 AS BLOB) THEN CAST(vt1.c1 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN ((vt0.c1)<>(vt0.c0)) WHEN (- (vt0.c0)) THEN (+ (vt0.c1)) END, (((vt1.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND ((PRINTF(vt1.c0)))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (+ (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CAST(0.7568479831022583 AS BLOB) THEN CAST(vt1.c1 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN ((vt0.c1)!=(vt0.c0)) WHEN (- (vt0.c0)) THEN (+ (vt0.c1)) END, (((vt1.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND ((PRINTF(vt1.c0)))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (+ (vt0.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c1)) AS INTEGER)) ORDER BY CASE WHEN CAST(0.7568479831022583 AS BLOB) THEN CAST(vt1.c1 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN ((vt0.c1)<>(vt0.c0)) WHEN (- (vt0.c0)) THEN (+ (vt0.c1)) END, (((vt1.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND ((PRINTF(vt1.c0)))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (+ (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CAST(0.7568479831022583 AS BLOB) THEN CAST(vt1.c1 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN ((vt0.c1)!=(vt0.c0)) WHEN (- (vt0.c0)) THEN (+ (vt0.c1)) END, (((vt1.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND ((PRINTF(vt1.c0)))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (+ (vt0.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c1)) AS INTEGER)) ORDER BY CASE WHEN CAST(0.7568479831022583 AS BLOB) THEN CAST(vt1.c1 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN ((vt0.c1)<>(vt0.c0)) WHEN (- (vt0.c0)) THEN (+ (vt0.c1)) END, (((vt1.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND ((PRINTF(vt1.c0)))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (+ (vt0.c0)) END;
SELECT * FROM vt0 INDEXED BY i68 LEFT OUTER JOIN t0 ON ((((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c1)))AND(UNLIKELY(t0.c3))))AND(CAST(t0.c0 AS TEXT))) WHERE ((((t0.c3 IN (vt0.c1)))<<(CAST('来I' AS TEXT)))) ORDER BY ('来I' IN ())  NULLS FIRST, (((t0.c3 IN ()))-(CASE t0.c1  WHEN vt0.c1 THEN t0.c3 WHEN t0.c70 THEN x'728f56ce' WHEN t0.c70 THEN t0.c70 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END)) DESC  NULLS FIRST, CASE (((t0.c1))>((t0.c0)))  WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c2)==(t0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3 IN (vt0.c1)))<<(CAST('来I' AS TEXT)))) IS TRUE)  as count FROM vt0 INDEXED BY i68 LEFT OUTER JOIN t0 ON ((((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c1)))AND(UNLIKELY(t0.c3))))AND(CAST(t0.c0 AS TEXT))) ORDER BY ('来I' IN ())  NULLS FIRST, (((t0.c3 IN ()))-(CASE t0.c1  WHEN vt0.c1 THEN t0.c3 WHEN t0.c70 THEN x'728f56ce' WHEN t0.c70 THEN t0.c70 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END)) DESC  NULLS FIRST, CASE (((t0.c1))>((t0.c0)))  WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c2)==(t0.c1)) END DESC);
SELECT * FROM vt0 INDEXED BY i68 LEFT OUTER JOIN t0 ON ((((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c1)))AND(UNLIKELY(t0.c3))))AND(CAST(t0.c0 AS TEXT))) WHERE ((((t0.c3 IN (vt0.c1)))<<(CAST('来I' AS TEXT)))) ORDER BY ('来I' IN ())  NULLS FIRST, (((t0.c3 IN ()))-(CASE t0.c1  WHEN vt0.c1 THEN t0.c3 WHEN t0.c70 THEN x'728f56ce' WHEN t0.c70 THEN t0.c70 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END)) DESC  NULLS FIRST, CASE (((t0.c1))>((t0.c0)))  WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c2)==(t0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3 IN (vt0.c1)))<<(CAST('来I' AS TEXT)))) IS TRUE)  as count FROM vt0 INDEXED BY i68 LEFT OUTER JOIN t0 ON ((((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c1)))AND(UNLIKELY(t0.c3))))AND(CAST(t0.c0 AS TEXT))) ORDER BY ('来I' IN ())  NULLS FIRST, (((t0.c3 IN ()))-(CASE t0.c1  WHEN vt0.c1 THEN t0.c3 WHEN t0.c70 THEN x'728f56ce' WHEN t0.c70 THEN t0.c70 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END)) DESC  NULLS FIRST, CASE (((t0.c1))>((t0.c0)))  WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c2)==(t0.c1)) END DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (UPPER(DISTINCT ((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt1.c0) IS TRUE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (UPPER(DISTINCT ((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt1.c0) IS TRUE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (UPPER(DISTINCT ((vt1.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c3 AS NUMERIC))<>(CASE t0.c4  WHEN t0.c0 THEN '' END))) ORDER BY ((((((((CAST('938923293' AS TEXT))OR(CAST(t0.c4 AS NUMERIC))))OR((t0.c2 IN ()))))OR((((t0.c0))==((t0.c0))))))OR(t0.c1));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c3 AS NUMERIC))!=(CASE t0.c4  WHEN t0.c0 THEN '' END))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST('938923293' AS TEXT))OR(CAST(t0.c4 AS NUMERIC))))OR((t0.c2 IN ()))))OR((((t0.c0))=((t0.c0))))))OR(t0.c1)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c3 AS NUMERIC))<>(CASE t0.c4  WHEN t0.c0 THEN '' END))) ORDER BY ((((((((CAST('938923293' AS TEXT))OR(CAST(t0.c4 AS NUMERIC))))OR((t0.c2 IN ()))))OR((((t0.c0))==((t0.c0))))))OR(t0.c1));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c3 AS NUMERIC))!=(CASE t0.c4  WHEN t0.c0 THEN '' END))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST('938923293' AS TEXT))OR(CAST(t0.c4 AS NUMERIC))))OR((t0.c2 IN ()))))OR((((t0.c0))=((t0.c0))))))OR(t0.c1)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c3 AS NUMERIC))<>(CASE t0.c4  WHEN t0.c0 THEN '' END))) ORDER BY ((((((((CAST('938923293' AS TEXT))OR(CAST(t0.c4 AS NUMERIC))))OR((t0.c2 IN ()))))OR((((t0.c0))==((t0.c0))))))OR(t0.c1));
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY CAST(NULL AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(NULL AS NUMERIC) DESC);
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY CAST(NULL AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(NULL AS NUMERIC) DESC);
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY CAST(NULL AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c5)==(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c5)==(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c5)==(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c5)==(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c5)==(t0.c0)) COLLATE RTRIM);
SELECT * FROM t0 WHERE ((+ (((0X4ce06d91)-(t0.c0))))) ORDER BY CASE (((t0.c2))>((-161229982)))  WHEN t0.c2 THEN ((((((((t0.c5)OR(t0.c5)))OR(t0.c4)))AND(t0.c4)))AND(NULL)) WHEN ((t0.c3)+(t0.c1)) THEN ((t0.c3) ISNULL) WHEN (- (t0.c5)) THEN ((((((((t0.c70)OR(t0.c4)))OR(t0.c1)))OR(t0.c70)))OR(t0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((0x4ce06d91)-(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c2))>((-161229982)))  WHEN t0.c2 THEN ((((((((t0.c5)OR(t0.c5)))OR(t0.c4)))AND(t0.c4)))AND(NULL)) WHEN ((t0.c3)+(t0.c1)) THEN ((t0.c3) ISNULL) WHEN (- (t0.c5)) THEN ((((((((t0.c70)OR(t0.c4)))OR(t0.c1)))OR(t0.c70)))OR(t0.c0)) END  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (((0X4ce06d91)-(t0.c0))))) ORDER BY CASE (((t0.c2))>((-161229982)))  WHEN t0.c2 THEN ((((((((t0.c5)OR(t0.c5)))OR(t0.c4)))AND(t0.c4)))AND(NULL)) WHEN ((t0.c3)+(t0.c1)) THEN ((t0.c3) ISNULL) WHEN (- (t0.c5)) THEN ((((((((t0.c70)OR(t0.c4)))OR(t0.c1)))OR(t0.c70)))OR(t0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((0x4ce06d91)-(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c2))>((-161229982)))  WHEN t0.c2 THEN ((((((((t0.c5)OR(t0.c5)))OR(t0.c4)))AND(t0.c4)))AND(NULL)) WHEN ((t0.c3)+(t0.c1)) THEN ((t0.c3) ISNULL) WHEN (- (t0.c5)) THEN ((((((((t0.c70)OR(t0.c4)))OR(t0.c1)))OR(t0.c70)))OR(t0.c0)) END  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (((0X4ce06d91)-(t0.c0))))) ORDER BY CASE (((t0.c2))>((-161229982)))  WHEN t0.c2 THEN ((((((((t0.c5)OR(t0.c5)))OR(t0.c4)))AND(t0.c4)))AND(NULL)) WHEN ((t0.c3)+(t0.c1)) THEN ((t0.c3) ISNULL) WHEN (- (t0.c5)) THEN ((((((((t0.c70)OR(t0.c4)))OR(t0.c1)))OR(t0.c70)))OR(t0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (json_extract(((vt1.c1)||('￿wg{')), 0.6465129319095857 COLLATE BINARY)) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) THEN load_extension(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)AND(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt1.c1)||('￿wg{')), 0.6465129319095857 COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) THEN load_extension(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)AND(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC);
SELECT ALL * FROM vt1 WHERE (json_extract(((vt1.c1)||('￿wg{')), 0.6465129319095857 COLLATE BINARY)) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) THEN load_extension(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)AND(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt1.c1)||('￿wg{')), 0.6465129319095857 COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) THEN load_extension(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)AND(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)LIKE(((((t0.c4)AND(t0.c70)))OR(vt1.c0)))) RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT (NOT (vt1.c1))) WHERE (CAST((((NULL, vt0.c0, t0.c3, vt0.c1, t0.c1)) NOT BETWEEN ((0.3872382645367005, vt1.c1, t0.c2, t0.c5, t0.c3)) AND ((t0.c0, 0.402212275943327, t0.c0, vt1.c1, t0.c5))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL, vt0.c0, t0.c3, vt0.c1, t0.c1)) NOT BETWEEN ((0.3872382645367005, vt1.c1, t0.c2, t0.c5, t0.c3)) AND ((t0.c0, 0.402212275943327, t0.c0, vt1.c1, t0.c5))) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)LIKE(((((t0.c4)AND(t0.c70)))OR(vt1.c0)))) RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT (NOT (vt1.c1))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)LIKE(((((t0.c4)AND(t0.c70)))OR(vt1.c0)))) RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT (NOT (vt1.c1))) WHERE (CAST((((NULL, vt0.c0, t0.c3, vt0.c1, t0.c1)) NOT BETWEEN ((0.3872382645367005, vt1.c1, t0.c2, t0.c5, t0.c3)) AND ((t0.c0, 0.402212275943327, t0.c0, vt1.c1, t0.c5))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL, vt0.c0, t0.c3, vt0.c1, t0.c1)) NOT BETWEEN ((0.3872382645367005, vt1.c1, t0.c2, t0.c5, t0.c3)) AND ((t0.c0, 0.402212275943327, t0.c0, vt1.c1, t0.c5))) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)LIKE(((((t0.c4)AND(t0.c70)))OR(vt1.c0)))) RIGHT OUTER JOIN vt1 ON UPPER(DISTINCT (NOT (vt1.c1))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c2)*(t0.c2)))GLOB(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS INTEGER))AND(NULL)))AND((((vt1.c1, vt1.c0, t0.c4)) NOT BETWEEN ((0.19524371294985854, vt1.c1, t0.c5)) AND ((0.41397034685651835, vt1.c1, vt0.c0))))) WHERE (((((vt0.c0)<=(t0.c2)))OR(((t0.c5) IS TRUE)))) ORDER BY NULLIF(IFNULL(vt1.c1, t0.c1), ((t0.c1) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(t0.c2)))OR(((t0.c5) IS TRUE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c2)*(t0.c2)))GLOB(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS INTEGER))AND(NULL)))AND((((vt1.c1, vt1.c0, t0.c4)) NOT BETWEEN ((0.19524371294985854, vt1.c1, t0.c5)) AND ((0.41397034685651835, vt1.c1, vt0.c0))))) ORDER BY NULLIF(IFNULL(vt1.c1, t0.c1), ((t0.c1) ISNULL))  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c2)*(t0.c2)))GLOB(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS INTEGER))AND(NULL)))AND((((vt1.c1, vt1.c0, t0.c4)) NOT BETWEEN ((0.19524371294985854, vt1.c1, t0.c5)) AND ((0.41397034685651835, vt1.c1, vt0.c0))))) WHERE (((((vt0.c0)<=(t0.c2)))OR(((t0.c5) IS TRUE)))) ORDER BY NULLIF(IFNULL(vt1.c1, t0.c1), ((t0.c1) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(t0.c2)))OR(((t0.c5) IS TRUE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c2)*(t0.c2)))GLOB(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS INTEGER))AND(NULL)))AND((((vt1.c1, vt1.c0, t0.c4)) NOT BETWEEN ((0.19524371294985854, vt1.c1, t0.c5)) AND ((0.41397034685651835, vt1.c1, vt0.c0))))) ORDER BY NULLIF(IFNULL(vt1.c1, t0.c1), ((t0.c1) ISNULL))  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c2)*(t0.c2)))GLOB(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((CAST(NULL AS INTEGER))AND(NULL)))AND((((vt1.c1, vt1.c0, t0.c4)) NOT BETWEEN ((0.19524371294985854, vt1.c1, t0.c5)) AND ((0.41397034685651835, vt1.c1, vt0.c0))))) WHERE (((((vt0.c0)<=(t0.c2)))OR(((t0.c5) IS TRUE)))) ORDER BY NULLIF(IFNULL(vt1.c1, t0.c1), ((t0.c1) ISNULL))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN '-886497278' THEN vt0.c1 ELSE vt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '-886497278' THEN vt0.c1 ELSE vt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN '-886497278' THEN vt0.c1 ELSE vt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '-886497278' THEN vt0.c1 ELSE vt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN '-886497278' THEN vt0.c1 ELSE vt0.c1 END AS TEXT));
SELECT COUNT(*) FROM t0, vt1 WHERE ((((x'')) NOT BETWEEN ((vt1.c1)) AND ((CAST(t0.c5 AS BLOB))))) ORDER BY ((((0.40529578962229695) BETWEEN (vt1.c1) AND (vt1.c1)))&(json_insert(vt1.c1, NULL, t0.c70, vt1.c1, t0.c5)));
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN ((vt1.c1)) AND ((CAST(t0.c5 AS BLOB))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((0.40529578962229695) BETWEEN (vt1.c1) AND (vt1.c1)))&(json_insert(vt1.c1, NULL, t0.c70, vt1.c1, t0.c5))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((((x'')) NOT BETWEEN ((vt1.c1)) AND ((CAST(t0.c5 AS BLOB))))) ORDER BY ((((0.40529578962229695) BETWEEN (vt1.c1) AND (vt1.c1)))&(json_insert(vt1.c1, NULL, t0.c70, vt1.c1, t0.c5)));
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN ((vt1.c1)) AND ((CAST(t0.c5 AS BLOB))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((0.40529578962229695) BETWEEN (vt1.c1) AND (vt1.c1)))&(json_insert(vt1.c1, NULL, t0.c70, vt1.c1, t0.c5))));
SELECT * FROM vt0, vt1 INDEXED BY i21 WHERE ((- (CAST(0Xffffffff8ad16800 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(0Xffffffff8ad16800 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i21);
SELECT * FROM vt0, vt1 INDEXED BY i21 WHERE ((- (CAST(0Xffffffff8ad16800 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(0Xffffffff8ad16800 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i21);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c3))) WHERE (((CASE WHEN t0.c2 THEN vt0.c0 END)|(t0.c5 COLLATE BINARY))) ORDER BY x'73fe';
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN vt0.c0 END)|(t0.c5 COLLATE BINARY))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c3))) ORDER BY x'73fe');
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c3))) WHERE (((CASE WHEN t0.c2 THEN vt0.c0 END)|(t0.c5 COLLATE BINARY))) ORDER BY x'73fe';
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN vt0.c0 END)|(t0.c5 COLLATE BINARY))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c3))) ORDER BY x'73fe');
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c3))) WHERE (((CASE WHEN t0.c2 THEN vt0.c0 END)|(t0.c5 COLLATE BINARY))) ORDER BY x'73fe';
SELECT COUNT(*) FROM vt0, t0 WHERE ((((CAST(t0.c5 AS REAL)))<((UPPER(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c5 AS REAL)))<((UPPER(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((CAST(t0.c5 AS REAL)))<((UPPER(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c5 AS REAL)))<((UPPER(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((CAST(t0.c5 AS REAL)))<((UPPER(t0.c0)))));
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE (((((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))-((t0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))-((t0.c4 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))-((t0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))-((t0.c4 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))-((t0.c4 IN ()))));
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (- (t0.c2)) COLLATE NOCASE, (((t0.c3)IS(t0.c2)) IN ((t0.c5 IN (t0.c5, t0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c4) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c2)) COLLATE NOCASE, (((t0.c3)IS(t0.c2)) IN ((t0.c5 IN (t0.c5, t0.c5)))) DESC);
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (- (t0.c2)) COLLATE NOCASE, (((t0.c3)IS(t0.c2)) IN ((t0.c5 IN (t0.c5, t0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c4) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c2)) COLLATE NOCASE, (((t0.c3)IS(t0.c2)) IN ((t0.c5 IN (t0.c5, t0.c5)))) DESC);
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (- (t0.c2)) COLLATE NOCASE, (((t0.c3)IS(t0.c2)) IN ((t0.c5 IN (t0.c5, t0.c5)))) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c1))) NOT BETWEEN (749984285) AND (((t0.c3)>(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(t0.c1))) NOT BETWEEN (749984285) AND (((t0.c3)>(t0.c3))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c1))) NOT BETWEEN (749984285) AND (((t0.c3)>(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(t0.c1))) NOT BETWEEN (749984285) AND (((t0.c3)>(t0.c3))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c1))) NOT BETWEEN (749984285) AND (((t0.c3)>(t0.c3)))));
SELECT ALL * FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOT NULL)));
SELECT ALL * FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOT NULL)));
SELECT ALL * FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOT NULL));
SELECT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c1 THEN t0.c5 END)+(CAST(vt1.c0 AS BLOB)))) ORDER BY ((t0.c4 COLLATE NOCASE) NOT BETWEEN (((t0.c70)>(t0.c0))) AND (t0.c4 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN t0.c5 END)+(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY ((t0.c4 COLLATE NOCASE) NOT BETWEEN (((t0.c70)>(t0.c0))) AND (t0.c4 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c1 THEN t0.c5 END)+(CAST(vt1.c0 AS BLOB)))) ORDER BY ((t0.c4 COLLATE NOCASE) NOT BETWEEN (((t0.c70)>(t0.c0))) AND (t0.c4 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN t0.c5 END)+(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY ((t0.c4 COLLATE NOCASE) NOT BETWEEN (((t0.c70)>(t0.c0))) AND (t0.c4 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c1 THEN t0.c5 END)+(CAST(vt1.c0 AS BLOB)))) ORDER BY ((t0.c4 COLLATE NOCASE) NOT BETWEEN (((t0.c70)>(t0.c0))) AND (t0.c4 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- ((('')<<(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('')<<(NULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- ((('')<<(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('')<<(NULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- ((('')<<(NULL)))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(t0.c70 COLLATE RTRIM AS TEXT)) ORDER BY t0.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c70 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c4 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(t0.c70 COLLATE RTRIM AS TEXT)) ORDER BY t0.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c70 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c4 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(t0.c70 COLLATE RTRIM AS TEXT)) ORDER BY t0.c4 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((vt1.c1) NOTNULL) COLLATE BINARY) ORDER BY (((vt0.c1)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LTRIM(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LTRIM(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((vt1.c1) NOTNULL) COLLATE BINARY) ORDER BY (((vt0.c1)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LTRIM(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LTRIM(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((vt1.c1) NOTNULL) COLLATE BINARY) ORDER BY (((vt0.c1)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LTRIM(vt0.c0)))) DESC;
SELECT * FROM t0, vt1 WHERE (((+ (t0.c3)) IN (((((t0.c70)OR(t0.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c3)) IN (((((t0.c70)OR(t0.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((+ (t0.c3)) IN (((((t0.c70)OR(t0.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c3)) IN (((((t0.c70)OR(t0.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((+ (t0.c3)) IN (((((t0.c70)OR(t0.c0)))OR(vt1.c1)))));
SELECT * FROM t0, vt1 WHERE (((((CAST(t0.c5 AS NUMERIC))OR(t0.c0 COLLATE BINARY)))OR(((NULL)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c5 AS NUMERIC))OR(t0.c0 COLLATE BINARY)))OR(((NULL)GLOB(NULL))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((CAST(t0.c5 AS NUMERIC))OR(t0.c0 COLLATE BINARY)))OR(((NULL)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c5 AS NUMERIC))OR(t0.c0 COLLATE BINARY)))OR(((NULL)GLOB(NULL))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((CAST(t0.c5 AS NUMERIC))OR(t0.c0 COLLATE BINARY)))OR(((NULL)GLOB(NULL)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))<(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) WHERE (((CAST(vt1.c1 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))<(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))<(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) WHERE (((CAST(vt1.c1 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))<(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))<(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) WHERE (((CAST(vt1.c1 AS TEXT)) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY (((((((vt1.c1))=((vt1.c1))))OR((vt1.c1 IN ()))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1))==((vt1.c1))))OR((vt1.c1 IN ()))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY (((((((vt1.c1))=((vt1.c1))))OR((vt1.c1 IN ()))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1))==((vt1.c1))))OR((vt1.c1 IN ()))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY (((((((vt1.c1))=((vt1.c1))))OR((vt1.c1 IN ()))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))));
SELECT * FROM vt1, vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt1.c0 END, '0.6465129319095857', CASE x'a4b58140'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))<=((((vt0.c1)*(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, ((vt1.c1)>>(vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt1.c0 END, '0.6465129319095857', CASE x'a4b58140'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))<=((((vt0.c1)*(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, ((vt1.c1)>>(vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt1.c0 END, '0.6465129319095857', CASE x'a4b58140'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))<=((((vt0.c1)*(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, ((vt1.c1)>>(vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt1.c0 END, '0.6465129319095857', CASE x'a4b58140'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))<=((((vt0.c1)*(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, ((vt1.c1)>>(vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt1.c0 END, '0.6465129319095857', CASE x'a4b58140'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))<=((((vt0.c1)*(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, ((vt1.c1)>>(vt1.c1))))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((((t0.c70)AND(vt1.c1)))OR(t0.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c70)AND(vt1.c1)))OR(t0.c4)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((((t0.c70)AND(vt1.c1)))OR(t0.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c70)AND(vt1.c1)))OR(t0.c4)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((((t0.c70)AND(vt1.c1)))OR(t0.c4)) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(vt0.c0)) NOT BETWEEN (('' IN ())) AND (CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN CASE WHEN '780814944' THEN vt0.c1 ELSE vt0.c1 END THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) END ASC, ((((vt0.c1)GLOB(vt0.c0)))-((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0)) NOT BETWEEN (('' IN ())) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN CASE WHEN '780814944' THEN vt0.c1 ELSE vt0.c1 END THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) END ASC, ((((vt0.c1)GLOB(vt0.c0)))-((- (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(vt0.c0)) NOT BETWEEN (('' IN ())) AND (CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN CASE WHEN '780814944' THEN vt0.c1 ELSE vt0.c1 END THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) END ASC, ((((vt0.c1)GLOB(vt0.c0)))-((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0)) NOT BETWEEN (('' IN ())) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN CASE WHEN '780814944' THEN vt0.c1 ELSE vt0.c1 END THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) END ASC, ((((vt0.c1)GLOB(vt0.c0)))-((- (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(vt0.c0)) NOT BETWEEN (('' IN ())) AND (CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN CASE WHEN '780814944' THEN vt0.c1 ELSE vt0.c1 END THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) END ASC, ((((vt0.c1)GLOB(vt0.c0)))-((- (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c4)=(t0.c1)))OR(CAST(vt0.c1 AS REAL)))) ORDER BY ((t0.c4 COLLATE NOCASE) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c4)==(t0.c1)))OR(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((t0.c4 COLLATE NOCASE) NOT NULL));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c4)=(t0.c1)))OR(CAST(vt0.c1 AS REAL)))) ORDER BY ((t0.c4 COLLATE NOCASE) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c4)==(t0.c1)))OR(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((t0.c4 COLLATE NOCASE) NOT NULL));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c4)=(t0.c1)))OR(CAST(vt0.c1 AS REAL)))) ORDER BY ((t0.c4 COLLATE NOCASE) NOT NULL);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((t0.c70) ISNULL)) ORDER BY vt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, 0.40206361297463533  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c70) ISNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY vt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, 0.40206361297463533  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((t0.c70) ISNULL)) ORDER BY vt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, 0.40206361297463533  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c70) ISNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY vt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, 0.40206361297463533  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((t0.c70) ISNULL)) ORDER BY vt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, 0.40206361297463533  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c1) BETWEEN ('栀W') AND (vt0.c1)))))OR(((((((((NULL)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c1) BETWEEN ('栀W') AND (vt0.c1)))))OR(((((((((NULL)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c1) BETWEEN ('栀W') AND (vt0.c1)))))OR(((((((((NULL)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c1) BETWEEN ('栀W') AND (vt0.c1)))))OR(((((((((NULL)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c1) BETWEEN ('栀W') AND (vt0.c1)))))OR(((((((((NULL)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))));
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c1 AS TEXT) AS INTEGER) WHERE (CASE WHEN ((t0.c1) NOTNULL) THEN ((t0.c5)OR(t0.c70)) END) ORDER BY TRIM(((t0.c5)>>(t0.c5))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) NOTNULL) THEN ((t0.c5)OR(t0.c70)) END) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c1 AS TEXT) AS INTEGER) ORDER BY TRIM(((t0.c5)>>(t0.c5))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c1 AS TEXT) AS INTEGER) WHERE (CASE WHEN ((t0.c1) NOTNULL) THEN ((t0.c5)OR(t0.c70)) END) ORDER BY TRIM(((t0.c5)>>(t0.c5))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) NOTNULL) THEN ((t0.c5)OR(t0.c70)) END) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c1 AS TEXT) AS INTEGER) ORDER BY TRIM(((t0.c5)>>(t0.c5))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c1 AS TEXT) AS INTEGER) WHERE (CASE WHEN ((t0.c1) NOTNULL) THEN ((t0.c5)OR(t0.c70)) END) ORDER BY TRIM(((t0.c5)>>(t0.c5))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY ((QUOTE(NULL)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((QUOTE(NULL)) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY ((QUOTE(NULL)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((QUOTE(NULL)) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY ((QUOTE(NULL)) ISNULL) DESC  NULLS FIRST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (((vt1.c1)OR(vt1.c0)))) WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (~ (((vt1.c1)OR(vt1.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (((vt1.c1)OR(vt1.c0)))) WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (~ (((vt1.c1)OR(vt1.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (((vt1.c1)OR(vt1.c0)))) WHERE (CAST(vt1.c0 AS REAL));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY (NOT (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY (NOT (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY (NOT (vt1.c0))  NULLS LAST;
SELECT * FROM t0, vt0, vt1 WHERE (((((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)OR(x'')))AND(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)OR(x'')))AND(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)OR(x'')))AND(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)OR(x'')))AND(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)OR(x'')))AND(((t0.c2) IS TRUE))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c70)>>(x''))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c70)>>(x''))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c70)>>(x''))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c70)>>(x''))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c70)>>(x''))) ISNULL));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((t0.c70) NOT BETWEEN (((t0.c3) BETWEEN (t0.c0) AND (vt0.c0))) AND ((~ (vt1.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0) ISNULL) WHERE (((((((((vt1.c0 COLLATE BINARY)AND(CAST(t0.c1 AS INTEGER))))OR('Rn')))OR(CAST(0.86882315144988 AS INTEGER))))OR('Kzm\r'))) ORDER BY (((t0.c3)) BETWEEN ((((t0.c2)LIKE(t0.c0)))) AND (((t0.c3 IN ()))))  NULLS LAST, (- (t0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE BINARY)AND(CAST(t0.c1 AS INTEGER))))OR('Rn')))OR(CAST(0.86882315144988 AS INTEGER))))OR('Kzm\r'))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((t0.c70) NOT BETWEEN (((t0.c3) BETWEEN (t0.c0) AND (vt0.c0))) AND ((~ (vt1.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0) ISNULL) ORDER BY (((t0.c3)) BETWEEN ((((t0.c2)LIKE(t0.c0)))) AND (((t0.c3 IN ()))))  NULLS LAST, (- (t0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((t0.c70) NOT BETWEEN (((t0.c3) BETWEEN (t0.c0) AND (vt0.c0))) AND ((~ (vt1.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0) ISNULL) WHERE (((((((((vt1.c0 COLLATE BINARY)AND(CAST(t0.c1 AS INTEGER))))OR('Rn')))OR(CAST(0.86882315144988 AS INTEGER))))OR('Kzm\r'))) ORDER BY (((t0.c3)) BETWEEN ((((t0.c2)LIKE(t0.c0)))) AND (((t0.c3 IN ()))))  NULLS LAST, (- (t0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE BINARY)AND(CAST(t0.c1 AS INTEGER))))OR('Rn')))OR(CAST(0.86882315144988 AS INTEGER))))OR('Kzm\r'))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((t0.c70) NOT BETWEEN (((t0.c3) BETWEEN (t0.c0) AND (vt0.c0))) AND ((~ (vt1.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0) ISNULL) ORDER BY (((t0.c3)) BETWEEN ((((t0.c2)LIKE(t0.c0)))) AND (((t0.c3 IN ()))))  NULLS LAST, (- (t0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((t0.c70) NOT BETWEEN (((t0.c3) BETWEEN (t0.c0) AND (vt0.c0))) AND ((~ (vt1.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0) ISNULL) WHERE (((((((((vt1.c0 COLLATE BINARY)AND(CAST(t0.c1 AS INTEGER))))OR('Rn')))OR(CAST(0.86882315144988 AS INTEGER))))OR('Kzm\r'))) ORDER BY (((t0.c3)) BETWEEN ((((t0.c2)LIKE(t0.c0)))) AND (((t0.c3 IN ()))))  NULLS LAST, (- (t0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (NULL COLLATE NOCASE))) ORDER BY -1339105146 COLLATE RTRIM ASC, ((((vt1.c1)LIKE(vt1.c0)))-(SQLITE_SOURCE_ID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY -1339105146 COLLATE RTRIM ASC, ((((vt1.c1)LIKE(vt1.c0)))-(SQLITE_SOURCE_ID()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (NULL COLLATE NOCASE))) ORDER BY -1339105146 COLLATE RTRIM ASC, ((((vt1.c1)LIKE(vt1.c0)))-(SQLITE_SOURCE_ID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY -1339105146 COLLATE RTRIM ASC, ((((vt1.c1)LIKE(vt1.c0)))-(SQLITE_SOURCE_ID()))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)=(vt1.c0)) IN ())) ORDER BY (vt1.c1 IN (vt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN (vt1.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)=(vt1.c0)) IN ())) ORDER BY (vt1.c1 IN (vt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN (vt1.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)=(vt1.c0)) IN ())) ORDER BY (vt1.c1 IN (vt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c3 COLLATE NOCASE IN (0.9819982249632139, t0.c5 COLLATE RTRIM))) ORDER BY (((t0.c5, t0.c4, t0.c3, x'', t0.c3)) NOT BETWEEN ((t0.c5 COLLATE NOCASE, t0.c1, t0.c3, 'ೱg', t0.c0)) AND ((((((t0.c4)OR(t0.c1)))OR(t0.c4)), t0.c3, 0.016786732601047794, ((t0.c70) NOTNULL), CASE t0.c70  WHEN t0.c70 THEN t0.c70 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN x'' ELSE t0.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c3 COLLATE NOCASE IN (0.9819982249632139, t0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c5, t0.c4, t0.c3, x'', t0.c3)) NOT BETWEEN ((t0.c5 COLLATE NOCASE, t0.c1, t0.c3, 'ೱg', t0.c0)) AND ((((((t0.c4)OR(t0.c1)))OR(t0.c4)), t0.c3, 0.016786732601047794, ((t0.c70) NOTNULL), CASE t0.c70  WHEN t0.c70 THEN t0.c70 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN x'' ELSE t0.c1 END)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c3 COLLATE NOCASE IN (0.9819982249632139, t0.c5 COLLATE RTRIM))) ORDER BY (((t0.c5, t0.c4, t0.c3, x'', t0.c3)) NOT BETWEEN ((t0.c5 COLLATE NOCASE, t0.c1, t0.c3, 'ೱg', t0.c0)) AND ((((((t0.c4)OR(t0.c1)))OR(t0.c4)), t0.c3, 0.016786732601047794, ((t0.c70) NOTNULL), CASE t0.c70  WHEN t0.c70 THEN t0.c70 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN x'' ELSE t0.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c3 COLLATE NOCASE IN (0.9819982249632139, t0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c5, t0.c4, t0.c3, x'', t0.c3)) NOT BETWEEN ((t0.c5 COLLATE NOCASE, t0.c1, t0.c3, 'ೱg', t0.c0)) AND ((((((t0.c4)OR(t0.c1)))OR(t0.c4)), t0.c3, 0.016786732601047794, ((t0.c70) NOTNULL), CASE t0.c70  WHEN t0.c70 THEN t0.c70 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN x'' ELSE t0.c1 END)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c3 COLLATE NOCASE IN (0.9819982249632139, t0.c5 COLLATE RTRIM))) ORDER BY (((t0.c5, t0.c4, t0.c3, x'', t0.c3)) NOT BETWEEN ((t0.c5 COLLATE NOCASE, t0.c1, t0.c3, 'ೱg', t0.c0)) AND ((((((t0.c4)OR(t0.c1)))OR(t0.c4)), t0.c3, 0.016786732601047794, ((t0.c70) NOTNULL), CASE t0.c70  WHEN t0.c70 THEN t0.c70 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN x'' ELSE t0.c1 END)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (7.42103187E8) ORDER BY CASE LIKELY(vt1.c0)  WHEN NULL THEN (NOT (vt1.c1)) END DESC, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1))))>=((((vt1.c0))<=((vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((7.42103187E8) IS TRUE)  as count FROM vt1 ORDER BY CASE LIKELY(vt1.c0)  WHEN NULL THEN (NOT (vt1.c1)) END DESC, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1))))>=((((vt1.c0))<=((vt1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (7.42103187E8) ORDER BY CASE LIKELY(vt1.c0)  WHEN NULL THEN (NOT (vt1.c1)) END DESC, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1))))>=((((vt1.c0))<=((vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((7.42103187E8) IS TRUE)  as count FROM vt1 ORDER BY CASE LIKELY(vt1.c0)  WHEN NULL THEN (NOT (vt1.c1)) END DESC, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1))))>=((((vt1.c0))<=((vt1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (7.42103187E8) ORDER BY CASE LIKELY(vt1.c0)  WHEN NULL THEN (NOT (vt1.c1)) END DESC, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1))))>=((((vt1.c0))<=((vt1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM t0 INDEXED BY i68 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN ((t0.c3)+(t0.c1)) END WHERE (json_patch(((vt0.c0) BETWEEN (t0.c3) AND (vt0.c1)), x'ef74')) ORDER BY ((t0.c5)|(t0.c4)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_patch(((vt0.c0) BETWEEN (t0.c3) AND (vt0.c1)), x'ef74')) IS TRUE)  as count FROM t0 INDEXED BY i68 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN ((t0.c3)+(t0.c1)) END ORDER BY ((t0.c5)|(t0.c4)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 INDEXED BY i68 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN ((t0.c3)+(t0.c1)) END WHERE (json_patch(((vt0.c0) BETWEEN (t0.c3) AND (vt0.c1)), x'ef74')) ORDER BY ((t0.c5)|(t0.c4)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_patch(((vt0.c0) BETWEEN (t0.c3) AND (vt0.c1)), x'ef74')) IS TRUE)  as count FROM t0 INDEXED BY i68 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN ((t0.c3)+(t0.c1)) END ORDER BY ((t0.c5)|(t0.c4)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0 INDEXED BY i21 WHERE (((0Xffffffffe2ab91f3)&(((x'abe0') NOTNULL)))) ORDER BY CAST(((((NULL)AND(NULL)))OR(vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffe2ab91f3)&(((x'abe0') NOTNULL)))) IS TRUE)  as count FROM vt0 INDEXED BY i21 ORDER BY CAST(((((NULL)AND(NULL)))OR(vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0 INDEXED BY i21 WHERE (((0Xffffffffe2ab91f3)&(((x'abe0') NOTNULL)))) ORDER BY CAST(((((NULL)AND(NULL)))OR(vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffe2ab91f3)&(((x'abe0') NOTNULL)))) IS TRUE)  as count FROM vt0 INDEXED BY i21 ORDER BY CAST(((((NULL)AND(NULL)))OR(vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(vt1.c0) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY TRIM(vt1.c0) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(vt1.c0) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY TRIM(vt1.c0) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(vt1.c0) COLLATE RTRIM COLLATE BINARY;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((t0.c3)OR('-1455275045')))OR(vt0.c0))) AND (t0.c1)) WHERE (0.3715084900376141);
SELECT SUM(count) FROM (SELECT ALL ((0.3715084900376141) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((t0.c3)OR('-1455275045')))OR(vt0.c0))) AND (t0.c1)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((t0.c3)OR('-1455275045')))OR(vt0.c0))) AND (t0.c1)) WHERE (0.3715084900376141);
SELECT SUM(count) FROM (SELECT ALL ((0.3715084900376141) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((t0.c3)OR('-1455275045')))OR(vt0.c0))) AND (t0.c1)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((t0.c3)OR('-1455275045')))OR(vt0.c0))) AND (t0.c1)) WHERE (0.3715084900376141);
SELECT ALL * FROM vt1, vt0 WHERE (((json_object(vt1.c1, vt0.c0)) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt1.c1, vt0.c0)) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((json_object(vt1.c1, vt0.c0)) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt1.c1, vt0.c0)) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST((((t0.c4, t0.c4, t0.c2)) BETWEEN ((t0.c3, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c70))) AS REAL) WHERE (((((((t0.c3)>=(t0.c4)))AND(0.25159383151311876)))AND(t0.c2 COLLATE RTRIM))) ORDER BY (('2000244816')>=((t0.c4 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c3)>=(t0.c4)))AND(0.25159383151311876)))AND(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST((((t0.c4, t0.c4, t0.c2)) BETWEEN ((t0.c3, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c70))) AS REAL) ORDER BY (('2000244816')>=((t0.c4 IN ())))  NULLS LAST);
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST((((t0.c4, t0.c4, t0.c2)) BETWEEN ((t0.c3, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c70))) AS REAL) WHERE (((((((t0.c3)>=(t0.c4)))AND(0.25159383151311876)))AND(t0.c2 COLLATE RTRIM))) ORDER BY (('2000244816')>=((t0.c4 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c3)>=(t0.c4)))AND(0.25159383151311876)))AND(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST((((t0.c4, t0.c4, t0.c2)) BETWEEN ((t0.c3, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c70))) AS REAL) ORDER BY (('2000244816')>=((t0.c4 IN ())))  NULLS LAST);
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST((((t0.c4, t0.c4, t0.c2)) BETWEEN ((t0.c3, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c70))) AS REAL) WHERE (((((((t0.c3)>=(t0.c4)))AND(0.25159383151311876)))AND(t0.c2 COLLATE RTRIM))) ORDER BY (('2000244816')>=((t0.c4 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c1, vt0.c1)))) AND (('/3\rW%&')))) ORDER BY ((((x'' IN ())))>=((((t0.c3)GLOB(vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c1, vt0.c1)))) AND (('/3\rW%&')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((x'' IN ())))>=((((t0.c3)GLOB(vt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c1, vt0.c1)))) AND (('/3\rW%&')))) ORDER BY ((((x'' IN ())))>=((((t0.c3)GLOB(vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c1, vt0.c1)))) AND (('/3\rW%&')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((x'' IN ())))>=((((t0.c3)GLOB(vt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c1, vt0.c1)))) AND (('/3\rW%&')))) ORDER BY ((((x'' IN ())))>=((((t0.c3)GLOB(vt0.c1))))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((NULL)*(((t0.c3) BETWEEN (t0.c3) AND (t0.c0))))) ORDER BY (CASE WHEN t0.c2 THEN t0.c3 ELSE t0.c5 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(((t0.c3) BETWEEN (t0.c3) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c2 THEN t0.c3 ELSE t0.c5 END IN ())  NULLS FIRST);
SELECT * FROM t0 WHERE (((NULL)*(((t0.c3) BETWEEN (t0.c3) AND (t0.c0))))) ORDER BY (CASE WHEN t0.c2 THEN t0.c3 ELSE t0.c5 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(((t0.c3) BETWEEN (t0.c3) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c2 THEN t0.c3 ELSE t0.c5 END IN ())  NULLS FIRST);
SELECT * FROM t0 WHERE (((NULL)*(((t0.c3) BETWEEN (t0.c3) AND (t0.c0))))) ORDER BY (CASE WHEN t0.c2 THEN t0.c3 ELSE t0.c5 END IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c1)*(vt0.c1)))))AND((+ (vt0.c1))))) ORDER BY ((((((vt0.c0)%(vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN 0.3430381562251241 THEN vt0.c0 END)))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(((vt0.c1)*(vt0.c1)))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)%(vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN 0.3430381562251241 THEN vt0.c0 END)))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c1)*(vt0.c1)))))AND((+ (vt0.c1))))) ORDER BY ((((((vt0.c0)%(vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN 0.3430381562251241 THEN vt0.c0 END)))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(((vt0.c1)*(vt0.c1)))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)%(vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN 0.3430381562251241 THEN vt0.c0 END)))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c1)*(vt0.c1)))))AND((+ (vt0.c1))))) ORDER BY ((((((vt0.c0)%(vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN 0.3430381562251241 THEN vt0.c0 END)))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN (('359809766', vt1.c0, 'X5U\n')) AND ((vt1.c1, vt1.c1, vt1.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN (('359809766', vt1.c0, 'X5U\n')) AND ((vt1.c1, vt1.c1, vt1.c1))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN (('359809766', vt1.c0, 'X5U\n')) AND ((vt1.c1, vt1.c1, vt1.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN (('359809766', vt1.c0, 'X5U\n')) AND ((vt1.c1, vt1.c1, vt1.c1))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN (('359809766', vt1.c0, 'X5U\n')) AND ((vt1.c1, vt1.c1, vt1.c1))) IN ()));
SELECT * FROM vt0, t0, vt1 INDEXED BY i68 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1 INDEXED BY i68);
SELECT * FROM vt0, t0, vt1 INDEXED BY i68 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1 INDEXED BY i68);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (('' COLLATE BINARY) NOTNULL) WHERE ((((t0.c2) NOT NULL) IN (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c70)), ((t0.c4) BETWEEN (t0.c4) AND (vt1.c0))))) ORDER BY (+ ((- (t0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) NOT NULL) IN (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c70)), ((t0.c4) BETWEEN (t0.c4) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (('' COLLATE BINARY) NOTNULL) ORDER BY (+ ((- (t0.c3)))) ASC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (('' COLLATE BINARY) NOTNULL) WHERE ((((t0.c2) NOT NULL) IN (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c70)), ((t0.c4) BETWEEN (t0.c4) AND (vt1.c0))))) ORDER BY (+ ((- (t0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) NOT NULL) IN (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c70)), ((t0.c4) BETWEEN (t0.c4) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (('' COLLATE BINARY) NOTNULL) ORDER BY (+ ((- (t0.c3)))) ASC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (('' COLLATE BINARY) NOTNULL) WHERE ((((t0.c2) NOT NULL) IN (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c70)), ((t0.c4) BETWEEN (t0.c4) AND (vt1.c0))))) ORDER BY (+ ((- (t0.c3)))) ASC;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c70)GLOB(t0.c5))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt0.c1 THEN 0.4820028552799662 ELSE vt1.c1 END))) ORDER BY CASE (- (t0.c0))  WHEN CASE t0.c70  WHEN vt1.c0 THEN t0.c1 WHEN t0.c3 THEN '105483093' WHEN '-1772725933' THEN 0.4551180155627773 ELSE t0.c5 END THEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c0)) WHEN (- (t0.c4)) THEN 1968921450 WHEN ((vt0.c0) BETWEEN (t0.c4) AND (vt1.c0)) THEN ((((t0.c5)AND(vt1.c1)))AND(t0.c5)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c70)GLOB(t0.c5))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt0.c1 THEN 0.4820028552799662 ELSE vt1.c1 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE (- (t0.c0))  WHEN CASE t0.c70  WHEN vt1.c0 THEN t0.c1 WHEN t0.c3 THEN '105483093' WHEN '-1772725933' THEN 0.4551180155627773 ELSE t0.c5 END THEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c0)) WHEN (- (t0.c4)) THEN 1968921450 WHEN ((vt0.c0) BETWEEN (t0.c4) AND (vt1.c0)) THEN ((((t0.c5)AND(vt1.c1)))AND(t0.c5)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c70)GLOB(t0.c5))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt0.c1 THEN 0.4820028552799662 ELSE vt1.c1 END))) ORDER BY CASE (- (t0.c0))  WHEN CASE t0.c70  WHEN vt1.c0 THEN t0.c1 WHEN t0.c3 THEN '105483093' WHEN '-1772725933' THEN 0.4551180155627773 ELSE t0.c5 END THEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c0)) WHEN (- (t0.c4)) THEN 1968921450 WHEN ((vt0.c0) BETWEEN (t0.c4) AND (vt1.c0)) THEN ((((t0.c5)AND(vt1.c1)))AND(t0.c5)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c70)GLOB(t0.c5))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt0.c1 THEN 0.4820028552799662 ELSE vt1.c1 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE (- (t0.c0))  WHEN CASE t0.c70  WHEN vt1.c0 THEN t0.c1 WHEN t0.c3 THEN '105483093' WHEN '-1772725933' THEN 0.4551180155627773 ELSE t0.c5 END THEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c0)) WHEN (- (t0.c4)) THEN 1968921450 WHEN ((vt0.c0) BETWEEN (t0.c4) AND (vt1.c0)) THEN ((((t0.c5)AND(vt1.c1)))AND(t0.c5)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c70)GLOB(t0.c5))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt0.c1 THEN 0.4820028552799662 ELSE vt1.c1 END))) ORDER BY CASE (- (t0.c0))  WHEN CASE t0.c70  WHEN vt1.c0 THEN t0.c1 WHEN t0.c3 THEN '105483093' WHEN '-1772725933' THEN 0.4551180155627773 ELSE t0.c5 END THEN ((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c0)) WHEN (- (t0.c4)) THEN 1968921450 WHEN ((vt0.c0) BETWEEN (t0.c4) AND (vt1.c0)) THEN ((((t0.c5)AND(vt1.c1)))AND(t0.c5)) END  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((((t0.c3)GLOB(t0.c0)), ((t0.c5) NOTNULL), CAST(t0.c2 AS INTEGER)))>((t0.c5 COLLATE BINARY, ((t0.c3) BETWEEN (t0.c2) AND (t0.c1)), ((vt1.c1)OR(t0.c70))))) WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN x'35e8' ELSE t0.c4 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1) ISNULL) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((((t0.c3)GLOB(t0.c0)), ((t0.c5) NOTNULL), CAST(t0.c2 AS INTEGER)))>((t0.c5 COLLATE BINARY, ((t0.c3) BETWEEN (t0.c2) AND (t0.c1)), ((vt1.c1)OR(t0.c70))))) ORDER BY CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN x'35e8' ELSE t0.c4 END AS NUMERIC) DESC);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((((t0.c3)GLOB(t0.c0)), ((t0.c5) NOTNULL), CAST(t0.c2 AS INTEGER)))>((t0.c5 COLLATE BINARY, ((t0.c3) BETWEEN (t0.c2) AND (t0.c1)), ((vt1.c1)OR(t0.c70))))) WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN x'35e8' ELSE t0.c4 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1) ISNULL) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((((t0.c3)GLOB(t0.c0)), ((t0.c5) NOTNULL), CAST(t0.c2 AS INTEGER)))>((t0.c5 COLLATE BINARY, ((t0.c3) BETWEEN (t0.c2) AND (t0.c1)), ((vt1.c1)OR(t0.c70))))) ORDER BY CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN x'35e8' ELSE t0.c4 END AS NUMERIC) DESC);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((((t0.c3)GLOB(t0.c0)), ((t0.c5) NOTNULL), CAST(t0.c2 AS INTEGER)))>((t0.c5 COLLATE BINARY, ((t0.c3) BETWEEN (t0.c2) AND (t0.c1)), ((vt1.c1)OR(t0.c70))))) WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN x'35e8' ELSE t0.c4 END AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((LIKE(t0.c70, vt1.c1))>(((t0.c2) BETWEEN (t0.c3) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c70, vt1.c1))>(((t0.c2) BETWEEN (t0.c3) AND (t0.c2))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((LIKE(t0.c70, vt1.c1))>(((t0.c2) BETWEEN (t0.c3) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c70, vt1.c1))>(((t0.c2) BETWEEN (t0.c3) AND (t0.c2))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((LIKE(t0.c70, vt1.c1))>(((t0.c2) BETWEEN (t0.c3) AND (t0.c2)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) ISNULL) WHERE (x'') ORDER BY ((((((vt1.c1)||(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) ISNULL) ORDER BY ((((((vt1.c1)||(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) ISNULL) WHERE (x'') ORDER BY ((((((vt1.c1)||(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) ISNULL) ORDER BY ((((((vt1.c1)||(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) ISNULL) WHERE (x'') ORDER BY ((((((vt1.c1)||(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)) DESC;
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(vt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ''  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(vt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ''  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(vt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ''  NULLS LAST;
SELECT * FROM t0 CROSS JOIN vt0 ON CAST(NULL COLLATE RTRIM AS REAL) WHERE (((((~ (t0.c70))))<=((((((t0.c0)OR(vt0.c0)))AND(t0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((~ (t0.c70))))<=((((((t0.c0)OR(vt0.c0)))AND(t0.c3)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(NULL COLLATE RTRIM AS REAL));
SELECT * FROM t0 CROSS JOIN vt0 ON CAST(NULL COLLATE RTRIM AS REAL) WHERE (((((~ (t0.c70))))<=((((((t0.c0)OR(vt0.c0)))AND(t0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((~ (t0.c70))))<=((((((t0.c0)OR(vt0.c0)))AND(t0.c3)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(NULL COLLATE RTRIM AS REAL));
SELECT * FROM t0 CROSS JOIN vt0 ON CAST(NULL COLLATE RTRIM AS REAL) WHERE (((((~ (t0.c70))))<=((((((t0.c0)OR(vt0.c0)))AND(t0.c3))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c70)|(((vt1.c1)*(t0.c1)))) WHERE (((((t0.c1) IS FALSE))<=(json_type(t0.c4)))) ORDER BY ((t0.c0) NOT BETWEEN ((((t0.c70)) NOT BETWEEN ((t0.c5)) AND ((t0.c1)))) AND (((t0.c70) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS FALSE))<=(json_type(t0.c4)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c70)|(((vt1.c1)*(t0.c1)))) ORDER BY ((t0.c0) NOT BETWEEN ((((t0.c70)) NOT BETWEEN ((t0.c5)) AND ((t0.c1)))) AND (((t0.c70) ISNULL))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c70)|(((vt1.c1)*(t0.c1)))) WHERE (((((t0.c1) IS FALSE))<=(json_type(t0.c4)))) ORDER BY ((t0.c0) NOT BETWEEN ((((t0.c70)) NOT BETWEEN ((t0.c5)) AND ((t0.c1)))) AND (((t0.c70) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS FALSE))<=(json_type(t0.c4)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c70)|(((vt1.c1)*(t0.c1)))) ORDER BY ((t0.c0) NOT BETWEEN ((((t0.c70)) NOT BETWEEN ((t0.c5)) AND ((t0.c1)))) AND (((t0.c70) ISNULL))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c70)|(((vt1.c1)*(t0.c1)))) WHERE (((((t0.c1) IS FALSE))<=(json_type(t0.c4)))) ORDER BY ((t0.c0) NOT BETWEEN ((((t0.c70)) NOT BETWEEN ((t0.c5)) AND ((t0.c1)))) AND (((t0.c70) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (HEX((((vt1.c1))>=((vt1.c0))))) ORDER BY CASE ((vt1.c0)GLOB(t0.c2))  WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c70)) ELSE (t0.c4 IN ()) END;
SELECT SUM(count) FROM (SELECT ((HEX((((vt1.c1))>=((vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE ((vt1.c0)GLOB(t0.c2))  WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c70)) ELSE (t0.c4 IN ()) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (HEX((((vt1.c1))>=((vt1.c0))))) ORDER BY CASE ((vt1.c0)GLOB(t0.c2))  WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c70)) ELSE (t0.c4 IN ()) END;
SELECT SUM(count) FROM (SELECT ((HEX((((vt1.c1))>=((vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE ((vt1.c0)GLOB(t0.c2))  WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c70)) ELSE (t0.c4 IN ()) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (HEX((((vt1.c1))>=((vt1.c0))))) ORDER BY CASE ((vt1.c0)GLOB(t0.c2))  WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c70)) ELSE (t0.c4 IN ()) END;
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE RTRIM);
SELECT * FROM vt1, t0, vt0 INDEXED BY i68 WHERE (t0.c2) ORDER BY (((((vt0.c0, vt1.c0, vt0.c1))<=((vt1.c0, t0.c4, t0.c2)))) NOT BETWEEN ((((vt1.c1)) NOT BETWEEN ((t0.c70)) AND ((vt0.c0)))) AND (TYPEOF(DISTINCT t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt1, t0, vt0 INDEXED BY i68 ORDER BY (((((vt0.c0, vt1.c0, vt0.c1))<=((vt1.c0, t0.c4, t0.c2)))) NOT BETWEEN ((((vt1.c1)) NOT BETWEEN ((t0.c70)) AND ((vt0.c0)))) AND (TYPEOF(DISTINCT t0.c0))) DESC);
SELECT * FROM vt1, t0, vt0 INDEXED BY i68 WHERE (t0.c2) ORDER BY (((((vt0.c0, vt1.c0, vt0.c1))<=((vt1.c0, t0.c4, t0.c2)))) NOT BETWEEN ((((vt1.c1)) NOT BETWEEN ((t0.c70)) AND ((vt0.c0)))) AND (TYPEOF(DISTINCT t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt1, t0, vt0 INDEXED BY i68 ORDER BY (((((vt0.c0, vt1.c0, vt0.c1))<=((vt1.c0, t0.c4, t0.c2)))) NOT BETWEEN ((((vt1.c1)) NOT BETWEEN ((t0.c70)) AND ((vt0.c0)))) AND (TYPEOF(DISTINCT t0.c0))) DESC);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))GLOB(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((vt1.c0)||('542639848')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))GLOB(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0)||('542639848')) COLLATE BINARY ASC);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))GLOB(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((vt1.c0)||('542639848')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))GLOB(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0)||('542639848')) COLLATE BINARY ASC);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))GLOB(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((vt1.c0)||('542639848')) COLLATE BINARY ASC;
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c0)AND(((t0.c70) IS FALSE))))AND((((vt1.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))))) ORDER BY ((((((vt1.c1) IS TRUE))AND((~ (t0.c1)))))OR(((vt1.c1) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((t0.c70) IS FALSE))))AND((((vt1.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((vt1.c1) IS TRUE))AND((~ (t0.c1)))))OR(((vt1.c1) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c0)AND(((t0.c70) IS FALSE))))AND((((vt1.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))))) ORDER BY ((((((vt1.c1) IS TRUE))AND((~ (t0.c1)))))OR(((vt1.c1) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((t0.c70) IS FALSE))))AND((((vt1.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((vt1.c1) IS TRUE))AND((~ (t0.c1)))))OR(((vt1.c1) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c0)AND(((t0.c70) IS FALSE))))AND((((vt1.c1)) BETWEEN ((t0.c2)) AND ((t0.c0)))))) ORDER BY ((((((vt1.c1) IS TRUE))AND((~ (t0.c1)))))OR(((vt1.c1) IS FALSE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT (CASE t0.c3  WHEN t0.c3 THEN 0.36850691240919753 WHEN t0.c70 THEN t0.c4 WHEN vt1.c1 THEN t0.c70 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c3  WHEN t0.c3 THEN 0.36850691240919753 WHEN t0.c70 THEN t0.c4 WHEN vt1.c1 THEN t0.c70 END))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT (CASE t0.c3  WHEN t0.c3 THEN 0.36850691240919753 WHEN t0.c70 THEN t0.c4 WHEN vt1.c1 THEN t0.c70 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c3  WHEN t0.c3 THEN 0.36850691240919753 WHEN t0.c70 THEN t0.c4 WHEN vt1.c1 THEN t0.c70 END))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT (CASE t0.c3  WHEN t0.c3 THEN 0.36850691240919753 WHEN t0.c70 THEN t0.c4 WHEN vt1.c1 THEN t0.c70 END)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (NULLIF(vt0.c1, 0.8187600005945681));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c1, 0.8187600005945681)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (NULLIF(vt0.c1, 0.8187600005945681));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c1, 0.8187600005945681)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (NULLIF(vt0.c1, 0.8187600005945681));
SELECT ALL * FROM t0 WHERE ((NOT ((~ (t0.c4))))) ORDER BY CASE WHEN ((NULL) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c5)AND(NULL)))OR(t0.c0)) END, (((((t0.c5)OR(t0.c4)))OR(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (t0.c4))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((NULL) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c5)AND(NULL)))OR(t0.c0)) END, (((((t0.c5)OR(t0.c4)))OR(t0.c0)) IN ()));
SELECT ALL * FROM t0 WHERE ((NOT ((~ (t0.c4))))) ORDER BY CASE WHEN ((NULL) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c5)AND(NULL)))OR(t0.c0)) END, (((((t0.c5)OR(t0.c4)))OR(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (t0.c4))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((NULL) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c5)AND(NULL)))OR(t0.c0)) END, (((((t0.c5)OR(t0.c4)))OR(t0.c0)) IN ()));
SELECT ALL * FROM t0 WHERE ((NOT ((~ (t0.c4))))) ORDER BY CASE WHEN ((NULL) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c5)AND(NULL)))OR(t0.c0)) END, (((((t0.c5)OR(t0.c4)))OR(t0.c0)) IN ());
SELECT ALL * FROM vt1 WHERE (load_extension((~ (vt1.c1)), (vt1.c1 IN ()))) ORDER BY ((vt1.c1 COLLATE BINARY) NOTNULL), (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN (((vt1.c0)LIKE(vt1.c0)), (vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((load_extension((~ (vt1.c1)), (vt1.c1 IN ()))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE BINARY) NOTNULL), (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN (((vt1.c0)LIKE(vt1.c0)), (vt1.c0 IN ()))) ASC);
SELECT ALL * FROM vt1 WHERE (load_extension((~ (vt1.c1)), (vt1.c1 IN ()))) ORDER BY ((vt1.c1 COLLATE BINARY) NOTNULL), (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN (((vt1.c0)LIKE(vt1.c0)), (vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((load_extension((~ (vt1.c1)), (vt1.c1 IN ()))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE BINARY) NOTNULL), (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN (((vt1.c0)LIKE(vt1.c0)), (vt1.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE t0.c2 COLLATE RTRIM  WHEN (('cq')<<(vt1.c1)) THEN -6.1423735E8 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2 COLLATE RTRIM  WHEN (('cq')<<(vt1.c1)) THEN -6.1423735E8 END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE t0.c2 COLLATE RTRIM  WHEN (('cq')<<(vt1.c1)) THEN -6.1423735E8 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2 COLLATE RTRIM  WHEN (('cq')<<(vt1.c1)) THEN -6.1423735E8 END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE t0.c2 COLLATE RTRIM  WHEN (('cq')<<(vt1.c1)) THEN -6.1423735E8 END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)IS NOT(vt0.c1)) AS INTEGER)) ORDER BY ((((vt0.c0 IN (vt0.c1))))!=(('624893802'))), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)IS NOT(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN (vt0.c1))))!=(('624893802'))), vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)IS NOT(vt0.c1)) AS INTEGER)) ORDER BY ((((vt0.c0 IN (vt0.c1))))!=(('624893802'))), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)IS NOT(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN (vt0.c1))))!=(('624893802'))), vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)IS NOT(vt0.c1)) AS INTEGER)) ORDER BY ((((vt0.c0 IN (vt0.c1))))!=(('624893802'))), vt0.c0;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1)|(t0.c0)))OR(((vt0.c0) NOT NULL))))OR(TIME(t0.c70, vt0.c1, vt0.c1)))) ORDER BY ((((((((CAST(t0.c1 AS REAL))AND(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c5 THEN t0.c2 END)))OR(((t0.c3) NOT BETWEEN (t0.c70) AND (t0.c2)))))AND((((1158634528, t0.c2, t0.c0)) NOT BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c0, t0.c4, t0.c70)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)|(t0.c0)))OR(((vt0.c0) NOT NULL))))OR(TIME(t0.c70, vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((CAST(t0.c1 AS REAL))AND(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c5 THEN t0.c2 END)))OR(((t0.c3) NOT BETWEEN (t0.c70) AND (t0.c2)))))AND((((1158634528, t0.c2, t0.c0)) NOT BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c0, t0.c4, t0.c70)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1)|(t0.c0)))OR(((vt0.c0) NOT NULL))))OR(TIME(t0.c70, vt0.c1, vt0.c1)))) ORDER BY ((((((((CAST(t0.c1 AS REAL))AND(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c5 THEN t0.c2 END)))OR(((t0.c3) NOT BETWEEN (t0.c70) AND (t0.c2)))))AND((((1158634528, t0.c2, t0.c0)) NOT BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c0, t0.c4, t0.c70)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)|(t0.c0)))OR(((vt0.c0) NOT NULL))))OR(TIME(t0.c70, vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((CAST(t0.c1 AS REAL))AND(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c5 THEN t0.c2 END)))OR(((t0.c3) NOT BETWEEN (t0.c70) AND (t0.c2)))))AND((((1158634528, t0.c2, t0.c0)) NOT BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c0, t0.c4, t0.c70)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1)|(t0.c0)))OR(((vt0.c0) NOT NULL))))OR(TIME(t0.c70, vt0.c1, vt0.c1)))) ORDER BY ((((((((CAST(t0.c1 AS REAL))AND(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c5 THEN t0.c2 END)))OR(((t0.c3) NOT BETWEEN (t0.c70) AND (t0.c2)))))AND((((1158634528, t0.c2, t0.c0)) NOT BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c0, t0.c4, t0.c70)))))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((t0.c3 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c3 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((t0.c3 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c3 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((t0.c3 COLLATE BINARY IN ()));
SELECT ALL * FROM t0 WHERE ((+ (((t0.c4)AND(t0.c4)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c4)AND(t0.c4))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c4)AND(t0.c4)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c4)AND(t0.c4))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c4)AND(t0.c4)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE (((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN vt0.c1 THEN ((t0.c2)GLOB(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN vt0.c1 THEN ((t0.c2)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE (((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN vt0.c1 THEN ((t0.c2)GLOB(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN vt0.c1 THEN ((t0.c2)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE (((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN vt0.c1 THEN ((t0.c2)GLOB(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(vt1.c1 AS REAL)))>((CASE WHEN NULL THEN t0.c2 WHEN t0.c70 THEN vt0.c1 WHEN t0.c5 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c3 END)))) ORDER BY ((+ (vt0.c1)) IN ((((t0.c1))>=((t0.c70))), ((t0.c4)+('F3'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c1 AS REAL)))>((CASE WHEN NULL THEN t0.c2 WHEN t0.c70 THEN vt0.c1 WHEN t0.c5 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c3 END)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((+ (vt0.c1)) IN ((((t0.c1))>=((t0.c70))), ((t0.c4)+('F3'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(vt1.c1 AS REAL)))>((CASE WHEN NULL THEN t0.c2 WHEN t0.c70 THEN vt0.c1 WHEN t0.c5 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c3 END)))) ORDER BY ((+ (vt0.c1)) IN ((((t0.c1))>=((t0.c70))), ((t0.c4)+('F3'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c1 AS REAL)))>((CASE WHEN NULL THEN t0.c2 WHEN t0.c70 THEN vt0.c1 WHEN t0.c5 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c3 END)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((+ (vt0.c1)) IN ((((t0.c1))>=((t0.c70))), ((t0.c4)+('F3'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(vt1.c1 AS REAL)))>((CASE WHEN NULL THEN t0.c2 WHEN t0.c70 THEN vt0.c1 WHEN t0.c5 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c3 END)))) ORDER BY ((+ (vt0.c1)) IN ((((t0.c1))>=((t0.c70))), ((t0.c4)+('F3'))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((UNLIKELY(DISTINCT vt0.c0)))<>((((0.9060115864669736) NOT BETWEEN (vt0.c0) AND (t0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(DISTINCT vt0.c0)))<>((((0.9060115864669736) NOT BETWEEN (vt0.c0) AND (t0.c4)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((UNLIKELY(DISTINCT vt0.c0)))<>((((0.9060115864669736) NOT BETWEEN (vt0.c0) AND (t0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(DISTINCT vt0.c0)))<>((((0.9060115864669736) NOT BETWEEN (vt0.c0) AND (t0.c4)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((UNLIKELY(DISTINCT vt0.c0)))<>((((0.9060115864669736) NOT BETWEEN (vt0.c0) AND (t0.c4))))));
SELECT ALL * FROM vt0, t0 WHERE ((+ (CAST(t0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (CAST(t0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (CAST(t0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY (((((-382962337)<=(vt0.c1))))>(((vt0.c1 IN ()))))  NULLS LAST, HEX(((vt0.c1)<>(vt0.c0))), (((vt0.c0 IN ()))>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((-382962337)<=(vt0.c1))))>(((vt0.c1 IN ()))))  NULLS LAST, HEX(((vt0.c1)<>(vt0.c0))), (((vt0.c0 IN ()))>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY (((((-382962337)<=(vt0.c1))))>(((vt0.c1 IN ()))))  NULLS LAST, HEX(((vt0.c1)<>(vt0.c0))), (((vt0.c0 IN ()))>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((-382962337)<=(vt0.c1))))>(((vt0.c1 IN ()))))  NULLS LAST, HEX(((vt0.c1)<>(vt0.c0))), (((vt0.c0 IN ()))>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) ORDER BY (((((-382962337)<=(vt0.c1))))>(((vt0.c1 IN ()))))  NULLS LAST, HEX(((vt0.c1)<>(vt0.c0))), (((vt0.c0 IN ()))>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((+ (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((+ (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((+ (vt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i83, vt1 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) ISNULL))) AND (((t0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((((t0.c0) ISNULL))) AND (((t0.c1 IN ()))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i83, vt1);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i83, vt1 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) ISNULL))) AND (((t0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((((t0.c0) ISNULL))) AND (((t0.c1 IN ()))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i83, vt1);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i83, vt1 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) ISNULL))) AND (((t0.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (STRFTIME(((t0.c2)<=(t0.c2)), TYPEOF(t0.c2), TRIM(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((t0.c2)<=(t0.c2)), TYPEOF(t0.c2), TRIM(DISTINCT t0.c0))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (STRFTIME(((t0.c2)<=(t0.c2)), TYPEOF(t0.c2), TRIM(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((t0.c2)<=(t0.c2)), TYPEOF(t0.c2), TRIM(DISTINCT t0.c0))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (STRFTIME(((t0.c2)<=(t0.c2)), TYPEOF(t0.c2), TRIM(DISTINCT t0.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '/3\rw%&' CROSS JOIN t0 ON ((CASE t0.c2  WHEN vt0.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)IS NOT((((t0.c1, t0.c4, t0.c1))>((t0.c70, t0.c2, t0.c2))))) WHERE (CAST(CASE WHEN NULL THEN t0.c4 END AS INTEGER)) ORDER BY ((t0.c70)<>('-1262508894')) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN t0.c4 END AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '/3\rw%&' CROSS JOIN t0 ON ((CASE t0.c2  WHEN vt0.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)IS NOT((((t0.c1, t0.c4, t0.c1))>((t0.c70, t0.c2, t0.c2))))) ORDER BY ((t0.c70)<>('-1262508894')) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '/3\rw%&' CROSS JOIN t0 ON ((CASE t0.c2  WHEN vt0.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)IS NOT((((t0.c1, t0.c4, t0.c1))>((t0.c70, t0.c2, t0.c2))))) WHERE (CAST(CASE WHEN NULL THEN t0.c4 END AS INTEGER)) ORDER BY ((t0.c70)<>('-1262508894')) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN t0.c4 END AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '/3\rw%&' CROSS JOIN t0 ON ((CASE t0.c2  WHEN vt0.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)IS NOT((((t0.c1, t0.c4, t0.c1))>((t0.c70, t0.c2, t0.c2))))) ORDER BY ((t0.c70)<>('-1262508894')) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '/3\rw%&' CROSS JOIN t0 ON ((CASE t0.c2  WHEN vt0.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)IS NOT((((t0.c1, t0.c4, t0.c1))>((t0.c70, t0.c2, t0.c2))))) WHERE (CAST(CASE WHEN NULL THEN t0.c4 END AS INTEGER)) ORDER BY ((t0.c70)<>('-1262508894')) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((CASE t0.c4  WHEN t0.c5 THEN x'7c65' END, ((t0.c3)-(t0.c2)), ((vt0.c1) ISNULL)))<=(((- (t0.c3)), (- (t0.c70)), ((t0.c4)|(t0.c2)))))) ORDER BY ((-818884481) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c4  WHEN t0.c5 THEN x'7c65' END, ((t0.c3)-(t0.c2)), ((vt0.c1) ISNULL)))<=(((- (t0.c3)), (- (t0.c70)), ((t0.c4)|(t0.c2)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((-818884481) ISNULL));
SELECT * FROM vt0, t0 WHERE ((((CASE t0.c4  WHEN t0.c5 THEN x'7c65' END, ((t0.c3)-(t0.c2)), ((vt0.c1) ISNULL)))<=(((- (t0.c3)), (- (t0.c70)), ((t0.c4)|(t0.c2)))))) ORDER BY ((-818884481) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c4  WHEN t0.c5 THEN x'7c65' END, ((t0.c3)-(t0.c2)), ((vt0.c1) ISNULL)))<=(((- (t0.c3)), (- (t0.c70)), ((t0.c4)|(t0.c2)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((-818884481) ISNULL));
SELECT * FROM vt0, t0 WHERE ((((CASE t0.c4  WHEN t0.c5 THEN x'7c65' END, ((t0.c3)-(t0.c2)), ((vt0.c1) ISNULL)))<=(((- (t0.c3)), (- (t0.c70)), ((t0.c4)|(t0.c2)))))) ORDER BY ((-818884481) ISNULL);
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(((t0.c1)LIKE(t0.c1)))) ORDER BY (((t0.c5 IN (NULL)))IS NOT(UNLIKELY(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM(((t0.c1)LIKE(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c5 IN (NULL)))IS NOT(UNLIKELY(t0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(((t0.c1)LIKE(t0.c1)))) ORDER BY (((t0.c5 IN (NULL)))IS NOT(UNLIKELY(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM(((t0.c1)LIKE(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c5 IN (NULL)))IS NOT(UNLIKELY(t0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(((t0.c1)LIKE(t0.c1)))) ORDER BY (((t0.c5 IN (NULL)))IS NOT(UNLIKELY(t0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE '-677370232' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt1.c0))  WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE '-677370232' COLLATE NOCASE END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE '-677370232' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt1.c0))  WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE '-677370232' COLLATE NOCASE END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE '-677370232' COLLATE NOCASE END);
SELECT ALL * FROM vt0 WHERE ((((((((((+ (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))AND(x'12d150be')))AND(vt0.c1)))AND(NULLIF(vt0.c1, vt0.c0)))) ORDER BY ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))AND(x'12d150be')))AND(vt0.c1)))AND(NULLIF(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 WHERE ((((((((((+ (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))AND(x'12d150be')))AND(vt0.c1)))AND(NULLIF(vt0.c1, vt0.c0)))) ORDER BY ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))AND(x'12d150be')))AND(vt0.c1)))AND(NULLIF(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 WHERE ((((((((((+ (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))AND(x'12d150be')))AND(vt0.c1)))AND(NULLIF(vt0.c1, vt0.c0)))) ORDER BY ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) ISNULL) DESC, ((CAST(vt0.c0 AS INTEGER))||((~ (NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) ISNULL) DESC, ((CAST(vt0.c0 AS INTEGER))||((~ (NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) ISNULL) DESC, ((CAST(vt0.c0 AS INTEGER))||((~ (NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) ISNULL) DESC, ((CAST(vt0.c0 AS INTEGER))||((~ (NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) ISNULL) DESC, ((CAST(vt0.c0 AS INTEGER))||((~ (NULL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c5))) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c70)>=(t0.c2)))) WHERE (((((vt0.c0) IS FALSE)) NOTNULL)) ORDER BY CASE HEX(DISTINCT t0.c2)  WHEN CAST(1e500 AS NUMERIC) THEN vt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c5))) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c70)>=(t0.c2)))) ORDER BY CASE HEX(DISTINCT t0.c2)  WHEN CAST(1e500 AS NUMERIC) THEN vt0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c5))) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c70)>=(t0.c2)))) WHERE (((((vt0.c0) IS FALSE)) NOTNULL)) ORDER BY CASE HEX(DISTINCT t0.c2)  WHEN CAST(1e500 AS NUMERIC) THEN vt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c5))) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c70)>=(t0.c2)))) ORDER BY CASE HEX(DISTINCT t0.c2)  WHEN CAST(1e500 AS NUMERIC) THEN vt0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c5))) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c70)>=(t0.c2)))) WHERE (((((vt0.c0) IS FALSE)) NOTNULL)) ORDER BY CASE HEX(DISTINCT t0.c2)  WHEN CAST(1e500 AS NUMERIC) THEN vt0.c0 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((t0.c4) NOT BETWEEN (NULL) AND (t0.c4)) IN ()) WHERE ((((((t0.c2 IN ()))AND(vt1.c1)))AND(((t0.c3) IS FALSE)))) ORDER BY (+ (t0.c2)), t0.c70  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2 IN ()))AND(vt1.c1)))AND(((t0.c3) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((t0.c4) NOT BETWEEN (NULL) AND (t0.c4)) IN ()) ORDER BY (+ (t0.c2)), t0.c70  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((t0.c4) NOT BETWEEN (NULL) AND (t0.c4)) IN ()) WHERE ((((((t0.c2 IN ()))AND(vt1.c1)))AND(((t0.c3) IS FALSE)))) ORDER BY (+ (t0.c2)), t0.c70  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2 IN ()))AND(vt1.c1)))AND(((t0.c3) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((t0.c4) NOT BETWEEN (NULL) AND (t0.c4)) IN ()) ORDER BY (+ (t0.c2)), t0.c70  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((t0.c4) NOT BETWEEN (NULL) AND (t0.c4)) IN ()) WHERE ((((((t0.c2 IN ()))AND(vt1.c1)))AND(((t0.c3) IS FALSE)))) ORDER BY (+ (t0.c2)), t0.c70  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c1 AS BLOB) THEN 0.3430381562251241 END WHERE (CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c1 AS BLOB) THEN 0.3430381562251241 END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c1 AS BLOB) THEN 0.3430381562251241 END WHERE (CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c1 AS BLOB) THEN 0.3430381562251241 END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c1 AS BLOB) THEN 0.3430381562251241 END WHERE (CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC));
SELECT * FROM vt0, vt1, t0 WHERE (CASE CASE WHEN t0.c70 THEN vt1.c1 END  WHEN CAST(x'' AS TEXT) THEN ((t0.c0)OR(t0.c0)) END) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c70 THEN vt1.c1 END  WHEN CAST(x'' AS TEXT) THEN ((t0.c0)OR(t0.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (CASE CASE WHEN t0.c70 THEN vt1.c1 END  WHEN CAST(x'' AS TEXT) THEN ((t0.c0)OR(t0.c0)) END) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c70 THEN vt1.c1 END  WHEN CAST(x'' AS TEXT) THEN ((t0.c0)OR(t0.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (CASE CASE WHEN t0.c70 THEN vt1.c1 END  WHEN CAST(x'' AS TEXT) THEN ((t0.c0)OR(t0.c0)) END) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (NULL) ORDER BY ((((((t0.c5)OR(t0.c4)))OR(t0.c70))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c5)OR(t0.c4)))OR(t0.c70))) NOT NULL));
SELECT * FROM t0 WHERE (NULL) ORDER BY ((((((t0.c5)OR(t0.c4)))OR(t0.c70))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c5)OR(t0.c4)))OR(t0.c70))) NOT NULL));
SELECT * FROM t0 WHERE (NULL) ORDER BY ((((((t0.c5)OR(t0.c4)))OR(t0.c70))) NOT NULL);
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.40206361297463533) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.40206361297463533) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.40206361297463533) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.40206361297463533) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.40206361297463533) NOT NULL));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c3 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c3 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c3 IN ())) NOTNULL));
SELECT ALL * FROM vt1, t0 INNER JOIN vt0 ON 0.7568479831022583 WHERE (LIKELY(NULLIF(t0.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(NULLIF(t0.c1, vt1.c0))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON 0.7568479831022583);
SELECT ALL * FROM vt1, t0 INNER JOIN vt0 ON 0.7568479831022583 WHERE (LIKELY(NULLIF(t0.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(NULLIF(t0.c1, vt1.c0))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON 0.7568479831022583);
SELECT ALL * FROM vt1, t0 INNER JOIN vt0 ON 0.7568479831022583 WHERE (LIKELY(NULLIF(t0.c1, vt1.c0)));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((vt0.c0)<<(vt0.c1))))) WHERE (vt0.c0) ORDER BY (((((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c1))))>(('-1249630657', '-492072461', ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((vt0.c0)<<(vt0.c1))))) ORDER BY (((((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c1))))>(('-1249630657', '-492072461', ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((vt0.c0)<<(vt0.c1))))) WHERE (vt0.c0) ORDER BY (((((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c1))))>(('-1249630657', '-492072461', ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((vt0.c0)<<(vt0.c1))))) ORDER BY (((((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c1))))>(('-1249630657', '-492072461', ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((vt0.c0)<<(vt0.c1))))) WHERE (vt0.c0) ORDER BY (((((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c1))))>(('-1249630657', '-492072461', ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c1 IN (vt0.c0)) COLLATE RTRIM) ORDER BY (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) IN ()));
SELECT * FROM vt0 WHERE ((vt0.c1 IN (vt0.c0)) COLLATE RTRIM) ORDER BY (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) IN ()));
SELECT * FROM vt0 WHERE ((vt0.c1 IN (vt0.c0)) COLLATE RTRIM) ORDER BY (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) IN ());
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4 IN ()))*(0.8095548509000587 COLLATE RTRIM))) ORDER BY (((((((((((t0.c4)) BETWEEN ((t0.c3)) AND ((t0.c3))))OR((t0.c4 IN ()))))OR(((((((((t0.c70)AND(t0.c1)))OR(t0.c4)))AND(t0.c1)))AND(t0.c5)))))AND(t0.c1)))OR(0.6373342262502504 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((t0.c4 IN ()))*(0.8095548509000587 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c4)) BETWEEN ((t0.c3)) AND ((t0.c3))))OR((t0.c4 IN ()))))OR(((((((((t0.c70)AND(t0.c1)))OR(t0.c4)))AND(t0.c1)))AND(t0.c5)))))AND(t0.c1)))OR(0.6373342262502504 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4 IN ()))*(0.8095548509000587 COLLATE RTRIM))) ORDER BY (((((((((((t0.c4)) BETWEEN ((t0.c3)) AND ((t0.c3))))OR((t0.c4 IN ()))))OR(((((((((t0.c70)AND(t0.c1)))OR(t0.c4)))AND(t0.c1)))AND(t0.c5)))))AND(t0.c1)))OR(0.6373342262502504 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((t0.c4 IN ()))*(0.8095548509000587 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c4)) BETWEEN ((t0.c3)) AND ((t0.c3))))OR((t0.c4 IN ()))))OR(((((((((t0.c70)AND(t0.c1)))OR(t0.c4)))AND(t0.c1)))AND(t0.c5)))))AND(t0.c1)))OR(0.6373342262502504 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4 IN ()))*(0.8095548509000587 COLLATE RTRIM))) ORDER BY (((((((((((t0.c4)) BETWEEN ((t0.c3)) AND ((t0.c3))))OR((t0.c4 IN ()))))OR(((((((((t0.c70)AND(t0.c1)))OR(t0.c4)))AND(t0.c1)))AND(t0.c5)))))AND(t0.c1)))OR(0.6373342262502504 COLLATE BINARY));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1) ISNULL) IN ())) ORDER BY CAST(535390622 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(535390622 AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1) ISNULL) IN ())) ORDER BY CAST(535390622 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(535390622 AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1) ISNULL) IN ())) ORDER BY CAST(535390622 AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CHANGES())<>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())<>(vt1.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CHANGES())<>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())<>(vt1.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CHANGES())<>(vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0) ISNULL))) ASC, (COALESCE(DISTINCT vt0.c1, vt0.c0) IN (0.05577789833773006, CASE vt0.c0  WHEN -94795078 THEN vt0.c0 ELSE x'f119' END)) DESC, ((((vt0.c1)<=(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0) ISNULL))) ASC, (COALESCE(DISTINCT vt0.c1, vt0.c0) IN (0.05577789833773006, CASE vt0.c0  WHEN -94795078 THEN vt0.c0 ELSE x'f119' END)) DESC, ((((vt0.c1)<=(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0) ISNULL))) ASC, (COALESCE(DISTINCT vt0.c1, vt0.c0) IN (0.05577789833773006, CASE vt0.c0  WHEN -94795078 THEN vt0.c0 ELSE x'f119' END)) DESC, ((((vt0.c1)<=(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0) ISNULL))) ASC, (COALESCE(DISTINCT vt0.c1, vt0.c0) IN (0.05577789833773006, CASE vt0.c0  WHEN -94795078 THEN vt0.c0 ELSE x'f119' END)) DESC, ((((vt0.c1)<=(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0) ISNULL))) ASC, (COALESCE(DISTINCT vt0.c1, vt0.c0) IN (0.05577789833773006, CASE vt0.c0  WHEN -94795078 THEN vt0.c0 ELSE x'f119' END)) DESC, ((((vt0.c1)<=(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (GLOB(t0.c5, vt1.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((GLOB(t0.c5, vt1.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (GLOB(t0.c5, vt1.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((GLOB(t0.c5, vt1.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (GLOB(t0.c5, vt1.c1) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((NULL)>>(vt0.c1)), (- (vt1.c1)), ((vt1.c0)&(vt1.c0))))<=((CASE WHEN vt1.c1 THEN x'4751' END, '780814944', LIKELIHOOD(vt1.c1, 0.7401260358065593))))) ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN (+ (vt1.c1)) WHEN x'1dc0' THEN 0.9527387079662023 WHEN ((vt0.c1)-(vt0.c1)) THEN vt1.c1 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)>>(vt0.c1)), (- (vt1.c1)), ((vt1.c0)&(vt1.c0))))<=((CASE WHEN vt1.c1 THEN x'4751' END, '780814944', LIKELIHOOD(vt1.c1, 0.7401260358065593))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN (+ (vt1.c1)) WHEN x'1dc0' THEN 0.9527387079662023 WHEN ((vt0.c1)-(vt0.c1)) THEN vt1.c1 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((NULL)>>(vt0.c1)), (- (vt1.c1)), ((vt1.c0)&(vt1.c0))))<=((CASE WHEN vt1.c1 THEN x'4751' END, '780814944', LIKELIHOOD(vt1.c1, 0.7401260358065593))))) ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN (+ (vt1.c1)) WHEN x'1dc0' THEN 0.9527387079662023 WHEN ((vt0.c1)-(vt0.c1)) THEN vt1.c1 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)>>(vt0.c1)), (- (vt1.c1)), ((vt1.c0)&(vt1.c0))))<=((CASE WHEN vt1.c1 THEN x'4751' END, '780814944', LIKELIHOOD(vt1.c1, 0.7401260358065593))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN (+ (vt1.c1)) WHEN x'1dc0' THEN 0.9527387079662023 WHEN ((vt0.c1)-(vt0.c1)) THEN vt1.c1 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((NULL)>>(vt0.c1)), (- (vt1.c1)), ((vt1.c0)&(vt1.c0))))<=((CASE WHEN vt1.c1 THEN x'4751' END, '780814944', LIKELIHOOD(vt1.c1, 0.7401260358065593))))) ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN (+ (vt1.c1)) WHEN x'1dc0' THEN 0.9527387079662023 WHEN ((vt0.c1)-(vt0.c1)) THEN vt1.c1 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((('') NOT BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c3)OR(t0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c3)OR(t0.c4))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((('') NOT BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c3)OR(t0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c3)OR(t0.c4))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((('') NOT BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c3)OR(t0.c4)))));
SELECT * FROM vt0, vt1, t0 WHERE ((- (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((- (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((- (t0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((~ (t0.c3)))IS(((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(vt1.c1)))AND(vt1.c1))))) ORDER BY NULL ASC  NULLS LAST, CAST((((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) AS INTEGER)  NULLS LAST, (((NOT (t0.c4))) NOT BETWEEN ((((t0.c4, vt1.c1, t0.c2)) NOT BETWEEN ((t0.c70, t0.c0, t0.c0)) AND ((NULL, vt1.c0, t0.c70)))) AND (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c3)))IS(((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY NULL ASC  NULLS LAST, CAST((((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) AS INTEGER)  NULLS LAST, (((NOT (t0.c4))) NOT BETWEEN ((((t0.c4, vt1.c1, t0.c2)) NOT BETWEEN ((t0.c70, t0.c0, t0.c0)) AND ((NULL, vt1.c0, t0.c70)))) AND (NULL)) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((~ (t0.c3)))IS(((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(vt1.c1)))AND(vt1.c1))))) ORDER BY NULL ASC  NULLS LAST, CAST((((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) AS INTEGER)  NULLS LAST, (((NOT (t0.c4))) NOT BETWEEN ((((t0.c4, vt1.c1, t0.c2)) NOT BETWEEN ((t0.c70, t0.c0, t0.c0)) AND ((NULL, vt1.c0, t0.c70)))) AND (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c3)))IS(((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY NULL ASC  NULLS LAST, CAST((((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) AS INTEGER)  NULLS LAST, (((NOT (t0.c4))) NOT BETWEEN ((((t0.c4, vt1.c1, t0.c2)) NOT BETWEEN ((t0.c70, t0.c0, t0.c0)) AND ((NULL, vt1.c0, t0.c70)))) AND (NULL)) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((~ (t0.c3)))IS(((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(vt1.c1)))AND(vt1.c1))))) ORDER BY NULL ASC  NULLS LAST, CAST((((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) AS INTEGER)  NULLS LAST, (((NOT (t0.c4))) NOT BETWEEN ((((t0.c4, vt1.c1, t0.c2)) NOT BETWEEN ((t0.c70, t0.c0, t0.c0)) AND ((NULL, vt1.c0, t0.c70)))) AND (NULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS REAL)) ORDER BY LIKE(CAST(vt0.c1 AS BLOB), ((vt0.c0)+(vt0.c1)), 'E') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY LIKE(CAST(vt0.c1 AS BLOB), ((vt0.c0)+(vt0.c1)), 'E') DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS REAL)) ORDER BY LIKE(CAST(vt0.c1 AS BLOB), ((vt0.c0)+(vt0.c1)), 'E') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY LIKE(CAST(vt0.c1 AS BLOB), ((vt0.c0)+(vt0.c1)), 'E') DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS REAL)) ORDER BY LIKE(CAST(vt0.c1 AS BLOB), ((vt0.c0)+(vt0.c1)), 'E') DESC  NULLS LAST;
SELECT * FROM t0, vt1 INNER JOIN vt0 ON x'' WHERE ((- (((x'') BETWEEN (vt0.c1) AND (NULL))))) ORDER BY (~ (t0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((x'') BETWEEN (vt0.c1) AND (NULL))))) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON x'' ORDER BY (~ (t0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM t0, vt1 INNER JOIN vt0 ON x'' WHERE ((- (((x'') BETWEEN (vt0.c1) AND (NULL))))) ORDER BY (~ (t0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((x'') BETWEEN (vt0.c1) AND (NULL))))) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON x'' ORDER BY (~ (t0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM t0, vt1 INNER JOIN vt0 ON x'' WHERE ((- (((x'') BETWEEN (vt0.c1) AND (NULL))))) ORDER BY (~ (t0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c0)))==(((vt0.c1)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))==(((vt0.c1)>>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c0)))==(((vt0.c1)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))==(((vt0.c1)>>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c0)))==(((vt0.c1)>>(vt0.c0)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c70 COLLATE RTRIM)>(ABS(DISTINCT t0.c2))));
SELECT SUM(count) FROM (SELECT ((((t0.c70 COLLATE RTRIM)>(ABS(DISTINCT t0.c2)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c70 COLLATE RTRIM)>(ABS(DISTINCT t0.c2))));
SELECT SUM(count) FROM (SELECT ((((t0.c70 COLLATE RTRIM)>(ABS(DISTINCT t0.c2)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c70 COLLATE RTRIM)>(ABS(DISTINCT t0.c2))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c3, t0.c3, t0.c0))!=(('585000805', t0.c4, '')))) BETWEEN (((t0.c2)%(t0.c2))) AND (CASE vt0.c0  WHEN t0.c0 THEN x'4a4d' ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c3, t0.c3, t0.c0))<>(('585000805', t0.c4, '')))) BETWEEN (((t0.c2)%(t0.c2))) AND (CASE vt0.c0  WHEN t0.c0 THEN x'4a4d' ELSE t0.c2 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c3, t0.c3, t0.c0))!=(('585000805', t0.c4, '')))) BETWEEN (((t0.c2)%(t0.c2))) AND (CASE vt0.c0  WHEN t0.c0 THEN x'4a4d' ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c3, t0.c3, t0.c0))<>(('585000805', t0.c4, '')))) BETWEEN (((t0.c2)%(t0.c2))) AND (CASE vt0.c0  WHEN t0.c0 THEN x'4a4d' ELSE t0.c2 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c3, t0.c3, t0.c0))!=(('585000805', t0.c4, '')))) BETWEEN (((t0.c2)%(t0.c2))) AND (CASE vt0.c0  WHEN t0.c0 THEN x'4a4d' ELSE t0.c2 END)));
SELECT ALL * FROM t0 WHERE (t0.c5) ORDER BY t0.c2  NULLS LAST, (((((t0.c0)%(t0.c70)), t0.c3, ((t0.c3) NOT BETWEEN (t0.c5) AND ('z-'))))<=((t0.c4 COLLATE BINARY, CASE WHEN t0.c70 THEN t0.c0 WHEN t0.c2 THEN t0.c5 WHEN t0.c70 THEN t0.c1 END, NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c5) IS TRUE)  as count FROM t0 ORDER BY t0.c2  NULLS LAST, (((((t0.c0)%(t0.c70)), t0.c3, ((t0.c3) NOT BETWEEN (t0.c5) AND ('z-'))))<=((t0.c4 COLLATE BINARY, CASE WHEN t0.c70 THEN t0.c0 WHEN t0.c2 THEN t0.c5 WHEN t0.c70 THEN t0.c1 END, NULL))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c5) ORDER BY t0.c2  NULLS LAST, (((((t0.c0)%(t0.c70)), t0.c3, ((t0.c3) NOT BETWEEN (t0.c5) AND ('z-'))))<=((t0.c4 COLLATE BINARY, CASE WHEN t0.c70 THEN t0.c0 WHEN t0.c2 THEN t0.c5 WHEN t0.c70 THEN t0.c1 END, NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c5) IS TRUE)  as count FROM t0 ORDER BY t0.c2  NULLS LAST, (((((t0.c0)%(t0.c70)), t0.c3, ((t0.c3) NOT BETWEEN (t0.c5) AND ('z-'))))<=((t0.c4 COLLATE BINARY, CASE WHEN t0.c70 THEN t0.c0 WHEN t0.c2 THEN t0.c5 WHEN t0.c70 THEN t0.c1 END, NULL))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c5) ORDER BY t0.c2  NULLS LAST, (((((t0.c0)%(t0.c70)), t0.c3, ((t0.c3) NOT BETWEEN (t0.c5) AND ('z-'))))<=((t0.c4 COLLATE BINARY, CASE WHEN t0.c70 THEN t0.c0 WHEN t0.c2 THEN t0.c5 WHEN t0.c70 THEN t0.c1 END, NULL))) ASC  NULLS LAST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN 0.13396123153983563 WHEN t0.c0 THEN 0.5620784547269329 WHEN t0.c5 THEN t0.c1 ELSE t0.c2 END IN ()) WHERE (((t0.c70)<=(UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c70)<=(UPPER(vt0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN 0.13396123153983563 WHEN t0.c0 THEN 0.5620784547269329 WHEN t0.c5 THEN t0.c1 ELSE t0.c2 END IN ()));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN 0.13396123153983563 WHEN t0.c0 THEN 0.5620784547269329 WHEN t0.c5 THEN t0.c1 ELSE t0.c2 END IN ()) WHERE (((t0.c70)<=(UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c70)<=(UPPER(vt0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN 0.13396123153983563 WHEN t0.c0 THEN 0.5620784547269329 WHEN t0.c5 THEN t0.c1 ELSE t0.c2 END IN ()));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN 0.13396123153983563 WHEN t0.c0 THEN 0.5620784547269329 WHEN t0.c5 THEN t0.c1 ELSE t0.c2 END IN ()) WHERE (((t0.c70)<=(UPPER(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c4) IS FALSE))GLOB((((vt0.c1))<((t0.c1)))))) ORDER BY '-1712598415' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c4) IS FALSE))GLOB((((vt0.c1))<((t0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '-1712598415' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c4) IS FALSE))GLOB((((vt0.c1))<((t0.c1)))))) ORDER BY '-1712598415' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c4) IS FALSE))GLOB((((vt0.c1))<((t0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '-1712598415' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c4) IS FALSE))GLOB((((vt0.c1))<((t0.c1)))))) ORDER BY '-1712598415' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (0X2cb3da1d);
SELECT SUM(count) FROM (SELECT ALL ((0x2cb3da1d) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0X2cb3da1d);
SELECT SUM(count) FROM (SELECT ALL ((0x2cb3da1d) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0X2cb3da1d);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((NULL) NOTNULL)) NOT BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (CAST(vt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOTNULL)) NOT BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((NULL) NOTNULL)) NOT BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (CAST(vt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOTNULL)) NOT BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((NULL) NOTNULL)) NOT BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (CAST(vt1.c1 AS BLOB))));
SELECT * FROM vt0, t0 WHERE (((((CASE t0.c5  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)OR(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c70)))))OR((('')%(t0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c5  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)OR(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c70)))))OR((('')%(t0.c5))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((CASE t0.c5  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)OR(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c70)))))OR((('')%(t0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c5  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)OR(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c70)))))OR((('')%(t0.c5))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((CASE t0.c5  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)OR(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c70)))))OR((('')%(t0.c5)))));
SELECT * FROM t0 WHERE (CASE json_insert(x'', t0.c5, t0.c70, t0.c4, t0.c2)  WHEN ((0xffffffff8da4da26) ISNULL) THEN ((((t0.c0)OR(t0.c4)))AND(t0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_insert(x'', t0.c5, t0.c70, t0.c4, t0.c2)  WHEN ((0xffffffff8da4da26) ISNULL) THEN ((((t0.c0)OR(t0.c4)))AND(t0.c4)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE json_insert(x'', t0.c5, t0.c70, t0.c4, t0.c2)  WHEN ((0xffffffff8da4da26) ISNULL) THEN ((((t0.c0)OR(t0.c4)))AND(t0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_insert(x'', t0.c5, t0.c70, t0.c4, t0.c2)  WHEN ((0xffffffff8da4da26) ISNULL) THEN ((((t0.c0)OR(t0.c4)))AND(t0.c4)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE (t0.c2 IN ())  WHEN TRIM(t0.c4) THEN t0.c2 WHEN t0.c0 THEN CASE WHEN vt0.c0 THEN t0.c70 END WHEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) THEN t0.c3 ELSE ((vt0.c1) NOT BETWEEN (t0.c70) AND (vt0.c0)) END WHERE (LIKELIHOOD(DISTINCT ((t0.c1)LIKE(t0.c2)), 0.10483628671483114)) ORDER BY '2016411138', (NOT (((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((t0.c1)LIKE(t0.c2)), 0.10483628671483114)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE (t0.c2 IN ())  WHEN TRIM(t0.c4) THEN t0.c2 WHEN t0.c0 THEN CASE WHEN vt0.c0 THEN t0.c70 END WHEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) THEN t0.c3 ELSE ((vt0.c1) NOT BETWEEN (t0.c70) AND (vt0.c0)) END ORDER BY '2016411138', (NOT (((t0.c0) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE (t0.c2 IN ())  WHEN TRIM(t0.c4) THEN t0.c2 WHEN t0.c0 THEN CASE WHEN vt0.c0 THEN t0.c70 END WHEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) THEN t0.c3 ELSE ((vt0.c1) NOT BETWEEN (t0.c70) AND (vt0.c0)) END WHERE (LIKELIHOOD(DISTINCT ((t0.c1)LIKE(t0.c2)), 0.10483628671483114)) ORDER BY '2016411138', (NOT (((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((t0.c1)LIKE(t0.c2)), 0.10483628671483114)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE (t0.c2 IN ())  WHEN TRIM(t0.c4) THEN t0.c2 WHEN t0.c0 THEN CASE WHEN vt0.c0 THEN t0.c70 END WHEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) THEN t0.c3 ELSE ((vt0.c1) NOT BETWEEN (t0.c70) AND (vt0.c0)) END ORDER BY '2016411138', (NOT (((t0.c0) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE (t0.c2 IN ())  WHEN TRIM(t0.c4) THEN t0.c2 WHEN t0.c0 THEN CASE WHEN vt0.c0 THEN t0.c70 END WHEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) THEN t0.c3 ELSE ((vt0.c1) NOT BETWEEN (t0.c70) AND (vt0.c0)) END WHERE (LIKELIHOOD(DISTINCT ((t0.c1)LIKE(t0.c2)), 0.10483628671483114)) ORDER BY '2016411138', (NOT (((t0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LOWER((~ (t0.c70))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (t0.c70)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LOWER((~ (t0.c70))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (t0.c70)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LOWER((~ (t0.c70))));
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c1) ISNULL) END  NULLS LAST, (((NOT (vt0.c1))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c1) ISNULL) END  NULLS LAST, (((NOT (vt0.c1))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c1) ISNULL) END  NULLS LAST, (((NOT (vt0.c1))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c1) ISNULL) END  NULLS LAST, (((NOT (vt0.c1))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c1) ISNULL) END  NULLS LAST, (((NOT (vt0.c1))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (0Xffffffffe06359cc) ORDER BY (+ (SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe06359cc) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (+ (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (0Xffffffffe06359cc) ORDER BY (+ (SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe06359cc) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (+ (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (0Xffffffffe06359cc) ORDER BY (+ (SQLITE_SOURCE_ID()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c4  WHEN t0.c3 THEN vt0.c1 END AS NUMERIC) WHERE (((((vt0.c0 COLLATE BINARY)AND(CASE x''  WHEN vt0.c1 THEN t0.c70 END)))OR(0.5553014917847099))) ORDER BY (((((t0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((t0.c0)<(t0.c4))) AND (((vt0.c1)-(vt0.c0)))) DESC, (((t0.c3, CASE t0.c1  WHEN t0.c3 THEN vt0.c0 END, (((t0.c3)) NOT BETWEEN ((t0.c5)) AND ((vt0.c1)))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN x'158c' WHEN x'' THEN vt0.c1 ELSE t0.c3 END, (((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c0))), CAST(t0.c2 AS NUMERIC)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)AND(CASE x''  WHEN vt0.c1 THEN t0.c70 END)))OR(0.5553014917847099))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c4  WHEN t0.c3 THEN vt0.c1 END AS NUMERIC) ORDER BY (((((t0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((t0.c0)<(t0.c4))) AND (((vt0.c1)-(vt0.c0)))) DESC, (((t0.c3, CASE t0.c1  WHEN t0.c3 THEN vt0.c0 END, (((t0.c3)) NOT BETWEEN ((t0.c5)) AND ((vt0.c1)))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN x'158c' WHEN x'' THEN vt0.c1 ELSE t0.c3 END, (((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c0))), CAST(t0.c2 AS NUMERIC)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c4  WHEN t0.c3 THEN vt0.c1 END AS NUMERIC) WHERE (((((vt0.c0 COLLATE BINARY)AND(CASE x''  WHEN vt0.c1 THEN t0.c70 END)))OR(0.5553014917847099))) ORDER BY (((((t0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((t0.c0)<(t0.c4))) AND (((vt0.c1)-(vt0.c0)))) DESC, (((t0.c3, CASE t0.c1  WHEN t0.c3 THEN vt0.c0 END, (((t0.c3)) NOT BETWEEN ((t0.c5)) AND ((vt0.c1)))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN x'158c' WHEN x'' THEN vt0.c1 ELSE t0.c3 END, (((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c0))), CAST(t0.c2 AS NUMERIC)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)AND(CASE x''  WHEN vt0.c1 THEN t0.c70 END)))OR(0.5553014917847099))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c4  WHEN t0.c3 THEN vt0.c1 END AS NUMERIC) ORDER BY (((((t0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((t0.c0)<(t0.c4))) AND (((vt0.c1)-(vt0.c0)))) DESC, (((t0.c3, CASE t0.c1  WHEN t0.c3 THEN vt0.c0 END, (((t0.c3)) NOT BETWEEN ((t0.c5)) AND ((vt0.c1)))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN x'158c' WHEN x'' THEN vt0.c1 ELSE t0.c3 END, (((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c0))), CAST(t0.c2 AS NUMERIC)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c4  WHEN t0.c3 THEN vt0.c1 END AS NUMERIC) WHERE (((((vt0.c0 COLLATE BINARY)AND(CASE x''  WHEN vt0.c1 THEN t0.c70 END)))OR(0.5553014917847099))) ORDER BY (((((t0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((t0.c0)<(t0.c4))) AND (((vt0.c1)-(vt0.c0)))) DESC, (((t0.c3, CASE t0.c1  WHEN t0.c3 THEN vt0.c0 END, (((t0.c3)) NOT BETWEEN ((t0.c5)) AND ((vt0.c1)))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN x'158c' WHEN x'' THEN vt0.c1 ELSE t0.c3 END, (((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c0))), CAST(t0.c2 AS NUMERIC)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c5)) NOT BETWEEN ((((((vt1.c0)OR(t0.c3)))OR(vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) COLLATE RTRIM WHERE (t0.c3) ORDER BY ((json_remove(t0.c70, vt1.c1, vt0.c1, t0.c4, vt0.c1, t0.c70))&(LIKELIHOOD(DISTINCT t0.c70, 0.13903720058782143)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((t0.c5)) NOT BETWEEN ((((((vt1.c0)OR(t0.c3)))OR(vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) COLLATE RTRIM ORDER BY ((json_remove(t0.c70, vt1.c1, vt0.c1, t0.c4, vt0.c1, t0.c70))&(LIKELIHOOD(DISTINCT t0.c70, 0.13903720058782143)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c5)) NOT BETWEEN ((((((vt1.c0)OR(t0.c3)))OR(vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) COLLATE RTRIM WHERE (t0.c3) ORDER BY ((json_remove(t0.c70, vt1.c1, vt0.c1, t0.c4, vt0.c1, t0.c70))&(LIKELIHOOD(DISTINCT t0.c70, 0.13903720058782143)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((t0.c5)) NOT BETWEEN ((((((vt1.c0)OR(t0.c3)))OR(vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) COLLATE RTRIM ORDER BY ((json_remove(t0.c70, vt1.c1, vt0.c1, t0.c4, vt0.c1, t0.c70))&(LIKELIHOOD(DISTINCT t0.c70, 0.13903720058782143)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((SQLITE_COMPILEOPTION_GET(t0.c2)))!=((t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((SQLITE_COMPILEOPTION_GET(t0.c2)))!=((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((SQLITE_COMPILEOPTION_GET(t0.c2)))!=((t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((SQLITE_COMPILEOPTION_GET(t0.c2)))!=((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((SQLITE_COMPILEOPTION_GET(t0.c2)))!=((t0.c0 COLLATE RTRIM))));
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(CAST(vt1.c0 AS REAL))))OR(CAST(0.6531598780182625 AS REAL)))) ORDER BY PRINTF((+ (vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(CAST(vt1.c0 AS REAL))))OR(CAST(0.6531598780182625 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY PRINTF((+ (vt1.c0))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(CAST(vt1.c0 AS REAL))))OR(CAST(0.6531598780182625 AS REAL)))) ORDER BY PRINTF((+ (vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(CAST(vt1.c0 AS REAL))))OR(CAST(0.6531598780182625 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY PRINTF((+ (vt1.c0))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(CAST(vt1.c0 AS REAL))))OR(CAST(0.6531598780182625 AS REAL)))) ORDER BY PRINTF((+ (vt1.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c5) AND (NULL))))) ORDER BY (((('*⠿')&(t0.c0)))<>(CASE WHEN x'' THEN t0.c0 ELSE t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1) BETWEEN (t0.c5) AND (NULL))))) IS TRUE)  as count FROM t0 ORDER BY (((('*⠿')&(t0.c0)))!=(CASE WHEN x'' THEN t0.c0 ELSE t0.c2 END))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c5) AND (NULL))))) ORDER BY (((('*⠿')&(t0.c0)))<>(CASE WHEN x'' THEN t0.c0 ELSE t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1) BETWEEN (t0.c5) AND (NULL))))) IS TRUE)  as count FROM t0 ORDER BY (((('*⠿')&(t0.c0)))!=(CASE WHEN x'' THEN t0.c0 ELSE t0.c2 END))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c5) AND (NULL))))) ORDER BY (((('*⠿')&(t0.c0)))<>(CASE WHEN x'' THEN t0.c0 ELSE t0.c2 END))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c1)>=(vt1.c0))))) ORDER BY (((('542639848')>=(vt1.c1)))%(((vt1.c0)>>(vt0.c0)))) ASC  NULLS FIRST, (((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (json_type(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c1)>=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((('542639848')>=(vt1.c1)))%(((vt1.c0)>>(vt0.c0)))) ASC  NULLS FIRST, (((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (json_type(vt0.c0))));
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c1)>=(vt1.c0))))) ORDER BY (((('542639848')>=(vt1.c1)))%(((vt1.c0)>>(vt0.c0)))) ASC  NULLS FIRST, (((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (json_type(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c1)>=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((('542639848')>=(vt1.c1)))%(((vt1.c0)>>(vt0.c0)))) ASC  NULLS FIRST, (((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (json_type(vt0.c0))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (+ (((t0.c3) IS FALSE))) WHERE (((NULL) NOT BETWEEN ('-409647283') AND (vt1.c0)) COLLATE NOCASE) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ('-409647283') AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NOT INDEXED FULL OUTER JOIN t0 ON (+ (((t0.c3) IS FALSE))) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (+ (((t0.c3) IS FALSE))) WHERE (((NULL) NOT BETWEEN ('-409647283') AND (vt1.c0)) COLLATE NOCASE) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ('-409647283') AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NOT INDEXED FULL OUTER JOIN t0 ON (+ (((t0.c3) IS FALSE))) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (+ (((t0.c3) IS FALSE))) WHERE (((NULL) NOT BETWEEN ('-409647283') AND (vt1.c0)) COLLATE NOCASE) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c5))) NOT BETWEEN (json_object(vt1.c1, vt1.c0, t0.c3, t0.c4)) AND (((t0.c3)OR(t0.c3)))) WHERE ((- (((0xfffffffffe8ef908)*(t0.c3)))));
SELECT SUM(count) FROM (SELECT (((- (((0Xfffffffffe8ef908)*(t0.c3))))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c5))) NOT BETWEEN (json_object(vt1.c1, vt1.c0, t0.c3, t0.c4)) AND (((t0.c3)OR(t0.c3)))));
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c5))) NOT BETWEEN (json_object(vt1.c1, vt1.c0, t0.c3, t0.c4)) AND (((t0.c3)OR(t0.c3)))) WHERE ((- (((0xfffffffffe8ef908)*(t0.c3)))));
SELECT SUM(count) FROM (SELECT (((- (((0Xfffffffffe8ef908)*(t0.c3))))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c5))) NOT BETWEEN (json_object(vt1.c1, vt1.c0, t0.c3, t0.c4)) AND (((t0.c3)OR(t0.c3)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((+ (t0.c2)) IN (((((t0.c70)AND(t0.c70)))AND(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c2)) IN (((((t0.c70)AND(t0.c70)))AND(t0.c3))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((+ (t0.c2)) IN (((((t0.c70)AND(t0.c70)))AND(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c2)) IN (((((t0.c70)AND(t0.c70)))AND(t0.c3))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((+ (t0.c2)) IN (((((t0.c70)AND(t0.c70)))AND(t0.c3)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((('-2118435169', t0.c4, t0.c3)) BETWEEN ((t0.c0, 0.3499991571287101, '-1772725933')) AND ((t0.c3, t0.c2, t0.c0))) COLLATE NOCASE) ORDER BY ((t0.c3) BETWEEN (NULL) AND (CASE WHEN t0.c3 THEN t0.c70 ELSE t0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((((('-2118435169', t0.c4, t0.c3)) BETWEEN ((t0.c0, 0.3499991571287101, '-1772725933')) AND ((t0.c3, t0.c2, t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((t0.c3) BETWEEN (NULL) AND (CASE WHEN t0.c3 THEN t0.c70 ELSE t0.c4 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((('-2118435169', t0.c4, t0.c3)) BETWEEN ((t0.c0, 0.3499991571287101, '-1772725933')) AND ((t0.c3, t0.c2, t0.c0))) COLLATE NOCASE) ORDER BY ((t0.c3) BETWEEN (NULL) AND (CASE WHEN t0.c3 THEN t0.c70 ELSE t0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((((('-2118435169', t0.c4, t0.c3)) BETWEEN ((t0.c0, 0.3499991571287101, '-1772725933')) AND ((t0.c3, t0.c2, t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((t0.c3) BETWEEN (NULL) AND (CASE WHEN t0.c3 THEN t0.c70 ELSE t0.c4 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((('-2118435169', t0.c4, t0.c3)) BETWEEN ((t0.c0, 0.3499991571287101, '-1772725933')) AND ((t0.c3, t0.c2, t0.c0))) COLLATE NOCASE) ORDER BY ((t0.c3) BETWEEN (NULL) AND (CASE WHEN t0.c3 THEN t0.c70 ELSE t0.c4 END));
SELECT ALL * FROM vt0, vt1, t0 WHERE (LOWER(((vt0.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)IS NOT(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (LOWER(((vt0.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)IS NOT(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (LOWER(((vt0.c0)IS NOT(vt1.c0))));
SELECT * FROM t0, vt1 WHERE ((NOT (CAST(t0.c70 AS INTEGER)))) ORDER BY CAST(((vt1.c0)!=(vt1.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c70 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(((vt1.c0)!=(vt1.c1)) AS NUMERIC));
SELECT * FROM t0, vt1 WHERE ((NOT (CAST(t0.c70 AS INTEGER)))) ORDER BY CAST(((vt1.c0)!=(vt1.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c70 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(((vt1.c0)!=(vt1.c1)) AS NUMERIC));
SELECT * FROM t0, vt1 WHERE ((NOT (CAST(t0.c70 AS INTEGER)))) ORDER BY CAST(((vt1.c0)!=(vt1.c1)) AS NUMERIC);
SELECT ALL * FROM t0 WHERE (((1177599778) ISNULL));
SELECT SUM(count) FROM (SELECT ((((1177599778) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((1177599778) ISNULL));
SELECT SUM(count) FROM (SELECT ((((1177599778) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((1177599778) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((- (t0.c5)) IN ())) ORDER BY CAST((((t0.c4, t0.c3, '-81713089', t0.c5, t0.c4))<=((t0.c2, t0.c70, t0.c3, t0.c5, t0.c5))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t0.c5)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((t0.c4, t0.c3, '-81713089', t0.c5, t0.c4))<=((t0.c2, t0.c70, t0.c3, t0.c5, t0.c5))) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((- (t0.c5)) IN ())) ORDER BY CAST((((t0.c4, t0.c3, '-81713089', t0.c5, t0.c4))<=((t0.c2, t0.c70, t0.c3, t0.c5, t0.c5))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t0.c5)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((t0.c4, t0.c3, '-81713089', t0.c5, t0.c4))<=((t0.c2, t0.c70, t0.c3, t0.c5, t0.c5))) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((- (t0.c5)) IN ())) ORDER BY CAST((((t0.c4, t0.c3, '-81713089', t0.c5, t0.c4))<=((t0.c2, t0.c70, t0.c3, t0.c5, t0.c5))) AS INTEGER)  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (NULL COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((((vt1.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN ((x'')<>(vt1.c1)) ELSE CAST('2111442161' AS NUMERIC) END WHERE (ROUND(CASE WHEN vt0.c0 THEN vt0.c1 END, '928761123'));
SELECT SUM(count) FROM (SELECT ((ROUND(CASE WHEN vt0.c0 THEN vt0.c1 END, '928761123')) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((((vt1.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN ((x'')<>(vt1.c1)) ELSE CAST('2111442161' AS NUMERIC) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((((vt1.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN ((x'')<>(vt1.c1)) ELSE CAST('2111442161' AS NUMERIC) END WHERE (ROUND(CASE WHEN vt0.c0 THEN vt0.c1 END, '928761123'));
SELECT SUM(count) FROM (SELECT ((ROUND(CASE WHEN vt0.c0 THEN vt0.c1 END, '928761123')) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((((vt1.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN ((x'')<>(vt1.c1)) ELSE CAST('2111442161' AS NUMERIC) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((((vt1.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN ((x'')<>(vt1.c1)) ELSE CAST('2111442161' AS NUMERIC) END WHERE (ROUND(CASE WHEN vt0.c0 THEN vt0.c1 END, '928761123'));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE (('0.05577789833773006') BETWEEN (vt1.c1) AND (t0.c4))  WHEN ((t0.c70)IS NOT(t0.c5)) THEN '-82358639' WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOT NULL) WHEN ((((t0.c4)OR(t0.c1)))OR(t0.c0)) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c1)OR(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('0.05577789833773006') BETWEEN (vt1.c1) AND (t0.c4))  WHEN ((t0.c70)IS NOT(t0.c5)) THEN '-82358639' WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOT NULL) WHEN ((((t0.c4)OR(t0.c1)))OR(t0.c0)) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c1)OR(t0.c1)) END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE (('0.05577789833773006') BETWEEN (vt1.c1) AND (t0.c4))  WHEN ((t0.c70)IS NOT(t0.c5)) THEN '-82358639' WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOT NULL) WHEN ((((t0.c4)OR(t0.c1)))OR(t0.c0)) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c1)OR(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('0.05577789833773006') BETWEEN (vt1.c1) AND (t0.c4))  WHEN ((t0.c70)IS NOT(t0.c5)) THEN '-82358639' WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOT NULL) WHEN ((((t0.c4)OR(t0.c1)))OR(t0.c0)) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c1)OR(t0.c1)) END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE (('0.05577789833773006') BETWEEN (vt1.c1) AND (t0.c4))  WHEN ((t0.c70)IS NOT(t0.c5)) THEN '-82358639' WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOT NULL) WHEN ((((t0.c4)OR(t0.c1)))OR(t0.c0)) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c1)OR(t0.c1)) END);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c70 AS NUMERIC) IN (((t0.c0)&(NULL)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c70))))) ORDER BY CASE WHEN (NOT (t0.c4)) THEN CASE t0.c0  WHEN t0.c0 THEN '?''>i慴X' ELSE 0.2070790153198122 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c70 AS NUMERIC) IN (((t0.c0)&(NULL)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c70))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (NOT (t0.c4)) THEN CASE t0.c0  WHEN t0.c0 THEN '?''>i慴X' ELSE 0.2070790153198122 END END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c70 AS NUMERIC) IN (((t0.c0)&(NULL)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c70))))) ORDER BY CASE WHEN (NOT (t0.c4)) THEN CASE t0.c0  WHEN t0.c0 THEN '?''>i慴X' ELSE 0.2070790153198122 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c70 AS NUMERIC) IN (((t0.c0)&(NULL)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c70))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (NOT (t0.c4)) THEN CASE t0.c0  WHEN t0.c0 THEN '?''>i慴X' ELSE 0.2070790153198122 END END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c70 AS NUMERIC) IN (((t0.c0)&(NULL)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c70))))) ORDER BY CASE WHEN (NOT (t0.c4)) THEN CASE t0.c0  WHEN t0.c0 THEN '?''>i慴X' ELSE 0.2070790153198122 END END DESC  NULLS FIRST;
SELECT * FROM vt1 NOT INDEXED WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (vt1.c1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0) NOTNULL))<(((t0.c3)+(t0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL))<(((t0.c3)+(t0.c4))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0) NOTNULL))<(((t0.c3)+(t0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL))<(((t0.c3)+(t0.c4))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0) NOTNULL))<(((t0.c3)+(t0.c4)))));
SELECT * FROM t0 WHERE (((((1158634528)OR(COALESCE(t0.c0, t0.c4, t0.c5, t0.c3, t0.c3, t0.c1))))OR(CAST(t0.c3 AS BLOB)))) ORDER BY t0.c1, x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((1158634528)OR(COALESCE(t0.c0, t0.c4, t0.c5, t0.c3, t0.c3, t0.c1))))OR(CAST(t0.c3 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY t0.c1, x'' DESC);
SELECT * FROM t0 WHERE (((((1158634528)OR(COALESCE(t0.c0, t0.c4, t0.c5, t0.c3, t0.c3, t0.c1))))OR(CAST(t0.c3 AS BLOB)))) ORDER BY t0.c1, x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((1158634528)OR(COALESCE(t0.c0, t0.c4, t0.c5, t0.c3, t0.c3, t0.c1))))OR(CAST(t0.c3 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY t0.c1, x'' DESC);
SELECT * FROM t0 WHERE (((((1158634528)OR(COALESCE(t0.c0, t0.c4, t0.c5, t0.c3, t0.c3, t0.c1))))OR(CAST(t0.c3 AS BLOB)))) ORDER BY t0.c1, x'' DESC;
SELECT COUNT(*) FROM vt0 INDEXED BY i21 WHERE (x'') ORDER BY ((((vt0.c1) IS FALSE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INDEXED BY i21 ORDER BY ((((vt0.c1) IS FALSE)) IS TRUE));
SELECT COUNT(*) FROM vt0 INDEXED BY i21 WHERE (x'') ORDER BY ((((vt0.c1) IS FALSE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INDEXED BY i21 ORDER BY ((((vt0.c1) IS FALSE)) IS TRUE));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((json_quote(t0.c1)) NOT BETWEEN ((((t0.c4))<((t0.c4)))) AND (CASE WHEN '1015996409' THEN '535390622' WHEN 'v*T鐬L\ne!' THEN t0.c1 WHEN t0.c4 THEN t0.c0 ELSE t0.c3 END))) ORDER BY ((((((x'af92')AND(t0.c1)))OR(t0.c3)))<(((t0.c4)/(t0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_quote(t0.c1)) NOT BETWEEN ((((t0.c4))<((t0.c4)))) AND (CASE WHEN '1015996409' THEN '535390622' WHEN 'v*T鐬L\ne!' THEN t0.c1 WHEN t0.c4 THEN t0.c0 ELSE t0.c3 END))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((x'af92')AND(t0.c1)))OR(t0.c3)))<(((t0.c4)/(t0.c3))))  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((json_quote(t0.c1)) NOT BETWEEN ((((t0.c4))<((t0.c4)))) AND (CASE WHEN '1015996409' THEN '535390622' WHEN 'v*T鐬L\ne!' THEN t0.c1 WHEN t0.c4 THEN t0.c0 ELSE t0.c3 END))) ORDER BY ((((((x'af92')AND(t0.c1)))OR(t0.c3)))<(((t0.c4)/(t0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_quote(t0.c1)) NOT BETWEEN ((((t0.c4))<((t0.c4)))) AND (CASE WHEN '1015996409' THEN '535390622' WHEN 'v*T鐬L\ne!' THEN t0.c1 WHEN t0.c4 THEN t0.c0 ELSE t0.c3 END))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((x'af92')AND(t0.c1)))OR(t0.c3)))<(((t0.c4)/(t0.c3))))  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((json_quote(t0.c1)) NOT BETWEEN ((((t0.c4))<((t0.c4)))) AND (CASE WHEN '1015996409' THEN '535390622' WHEN 'v*T鐬L\ne!' THEN t0.c1 WHEN t0.c4 THEN t0.c0 ELSE t0.c3 END))) ORDER BY ((((((x'af92')AND(t0.c1)))OR(t0.c3)))<(((t0.c4)/(t0.c3))))  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT NULL))>=(((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), CAST(vt1.c1 AS NUMERIC))) AND ((((vt1.c0)&(vt1.c0)), CASE WHEN x'' THEN vt1.c0 END, ((vt1.c1) ISNULL)))) ASC, ((((-8.2330306E8) NOTNULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL))>=(((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), CAST(vt1.c1 AS NUMERIC))) AND ((((vt1.c0)&(vt1.c0)), CASE WHEN x'' THEN vt1.c0 END, ((vt1.c1) ISNULL)))) ASC, ((((-8.2330306E8) NOTNULL)) IS FALSE));
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT NULL))>=(((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), CAST(vt1.c1 AS NUMERIC))) AND ((((vt1.c0)&(vt1.c0)), CASE WHEN x'' THEN vt1.c0 END, ((vt1.c1) ISNULL)))) ASC, ((((-8.2330306E8) NOTNULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL))>=(((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), CAST(vt1.c1 AS NUMERIC))) AND ((((vt1.c0)&(vt1.c0)), CASE WHEN x'' THEN vt1.c0 END, ((vt1.c1) ISNULL)))) ASC, ((((-8.2330306E8) NOTNULL)) IS FALSE));
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT NULL))>=(((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), CAST(vt1.c1 AS NUMERIC))) AND ((((vt1.c0)&(vt1.c0)), CASE WHEN x'' THEN vt1.c0 END, ((vt1.c1) ISNULL)))) ASC, ((((-8.2330306E8) NOTNULL)) IS FALSE);
SELECT * FROM vt1 WHERE (0.27722964695607);
SELECT SUM(count) FROM (SELECT ((0.27722964695607) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.27722964695607);
SELECT SUM(count) FROM (SELECT ((0.27722964695607) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.27722964695607);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (x'fc11cb38') ORDER BY ((((((((vt1.c0 COLLATE NOCASE)OR(t0.c4 COLLATE NOCASE)))AND(json_remove(x'', t0.c1))))OR('1357472447')))AND(((t0.c0)|(2060103510))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'fc11cb38') IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((((vt1.c0 COLLATE NOCASE)OR(t0.c4 COLLATE NOCASE)))AND(json_remove(x'', t0.c1))))OR('1357472447')))AND(((t0.c0)|(2060103510))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (x'fc11cb38') ORDER BY ((((((((vt1.c0 COLLATE NOCASE)OR(t0.c4 COLLATE NOCASE)))AND(json_remove(x'', t0.c1))))OR('1357472447')))AND(((t0.c0)|(2060103510))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'fc11cb38') IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((((vt1.c0 COLLATE NOCASE)OR(t0.c4 COLLATE NOCASE)))AND(json_remove(x'', t0.c1))))OR('1357472447')))AND(((t0.c0)|(2060103510))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (NOT (((x'6d64533c') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (NOT (((x'6d64533c') ISNULL))) ASC);
SELECT * FROM vt0 WHERE (x'') ORDER BY (NOT (((x'6d64533c') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (NOT (((x'6d64533c') ISNULL))) ASC);
SELECT * FROM vt0 WHERE (x'') ORDER BY (NOT (((x'6d64533c') ISNULL))) ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((t0.c70)) BETWEEN ((t0.c4)) AND ((x'230d'))) COLLATE NOCASE WHERE (((((-847591204) NOT BETWEEN (t0.c5) AND (t0.c0)))>=(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((-847591204) NOT BETWEEN (t0.c5) AND (t0.c0)))>=(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c70)) BETWEEN ((t0.c4)) AND ((x'230d'))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((t0.c70)) BETWEEN ((t0.c4)) AND ((x'230d'))) COLLATE NOCASE WHERE (((((-847591204) NOT BETWEEN (t0.c5) AND (t0.c0)))>=(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((-847591204) NOT BETWEEN (t0.c5) AND (t0.c0)))>=(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c70)) BETWEEN ((t0.c4)) AND ((x'230d'))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((t0.c70)) BETWEEN ((t0.c4)) AND ((x'230d'))) COLLATE NOCASE WHERE (((((-847591204) NOT BETWEEN (t0.c5) AND (t0.c0)))>=(CAST(vt0.c1 AS BLOB))));
SELECT * FROM vt1, vt0, t0 WHERE (0.5422180882017903);
SELECT SUM(count) FROM (SELECT ALL ((0.5422180882017903) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (0.5422180882017903);
SELECT SUM(count) FROM (SELECT ALL ((0.5422180882017903) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (0.5422180882017903);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c70) ORDER BY CAST(NULLIF(vt0.c0, t0.c4) AS NUMERIC), t0.c5;
SELECT SUM(count) FROM (SELECT ALL ((t0.c70) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(NULLIF(vt0.c0, t0.c4) AS NUMERIC), t0.c5);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c70) ORDER BY CAST(NULLIF(vt0.c0, t0.c4) AS NUMERIC), t0.c5;
SELECT SUM(count) FROM (SELECT ALL ((t0.c70) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(NULLIF(vt0.c0, t0.c4) AS NUMERIC), t0.c5);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c70) ORDER BY CAST(NULLIF(vt0.c0, t0.c4) AS NUMERIC), t0.c5;
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0)%(t0.c70))) NOT NULL) WHERE (CAST(CAST(t0.c5 AS REAL) AS INTEGER)) ORDER BY ((((((t0.c3)OR(t0.c5)))OR(vt1.c0))) IS TRUE) ASC, (((NULLIF(t0.c1, t0.c3)))=((CASE WHEN t0.c3 THEN x'' WHEN vt1.c1 THEN t0.c3 WHEN t0.c1 THEN vt1.c1 ELSE t0.c3 END))) ASC  NULLS FIRST, ((((((t0.c3)OR(t0.c4)))AND(t0.c1)))IS NOT((NOT (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c5 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt1.c0)%(t0.c70))) NOT NULL) ORDER BY ((((((t0.c3)OR(t0.c5)))OR(vt1.c0))) IS TRUE) ASC, (((NULLIF(t0.c1, t0.c3)))==((CASE WHEN t0.c3 THEN x'' WHEN vt1.c1 THEN t0.c3 WHEN t0.c1 THEN vt1.c1 ELSE t0.c3 END))) ASC  NULLS FIRST, ((((((t0.c3)OR(t0.c4)))AND(t0.c1)))IS NOT((NOT (t0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0)%(t0.c70))) NOT NULL) WHERE (CAST(CAST(t0.c5 AS REAL) AS INTEGER)) ORDER BY ((((((t0.c3)OR(t0.c5)))OR(vt1.c0))) IS TRUE) ASC, (((NULLIF(t0.c1, t0.c3)))=((CASE WHEN t0.c3 THEN x'' WHEN vt1.c1 THEN t0.c3 WHEN t0.c1 THEN vt1.c1 ELSE t0.c3 END))) ASC  NULLS FIRST, ((((((t0.c3)OR(t0.c4)))AND(t0.c1)))IS NOT((NOT (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c5 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt1.c0)%(t0.c70))) NOT NULL) ORDER BY ((((((t0.c3)OR(t0.c5)))OR(vt1.c0))) IS TRUE) ASC, (((NULLIF(t0.c1, t0.c3)))==((CASE WHEN t0.c3 THEN x'' WHEN vt1.c1 THEN t0.c3 WHEN t0.c1 THEN vt1.c1 ELSE t0.c3 END))) ASC  NULLS FIRST, ((((((t0.c3)OR(t0.c4)))AND(t0.c1)))IS NOT((NOT (t0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0)%(t0.c70))) NOT NULL) WHERE (CAST(CAST(t0.c5 AS REAL) AS INTEGER)) ORDER BY ((((((t0.c3)OR(t0.c5)))OR(vt1.c0))) IS TRUE) ASC, (((NULLIF(t0.c1, t0.c3)))=((CASE WHEN t0.c3 THEN x'' WHEN vt1.c1 THEN t0.c3 WHEN t0.c1 THEN vt1.c1 ELSE t0.c3 END))) ASC  NULLS FIRST, ((((((t0.c3)OR(t0.c4)))AND(t0.c1)))IS NOT((NOT (t0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST((+ (t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST((+ (t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST((+ (t0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((- (t0.c70))) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c70))) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((- (t0.c70))) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c70))) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((- (t0.c70))) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c4))) IN (((NULL)LIKE(t0.c0)), ((t0.c5)%(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c4))) IN (((NULL)LIKE(t0.c0)), ((t0.c5)%(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c4))) IN (((NULL)LIKE(t0.c0)), ((t0.c5)%(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c4))) IN (((NULL)LIKE(t0.c0)), ((t0.c5)%(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c4))) IN (((NULL)LIKE(t0.c0)), ((t0.c5)%(t0.c1)))));
SELECT * FROM vt0 WHERE (((LOWER('4')) NOT NULL)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER('4')) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((LOWER('4')) NOT NULL)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER('4')) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((LOWER('4')) NOT NULL)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c70 THEN t0.c70 END) NOTNULL)) ORDER BY t0.c3;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c70 THEN t0.c70 END) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c3);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c70 THEN t0.c70 END) NOTNULL)) ORDER BY t0.c3;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c70 THEN t0.c70 END) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c3);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c70 THEN t0.c70 END) NOTNULL)) ORDER BY t0.c3;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE NOCASE)<<(t0.c3)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)<<(t0.c3))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE NOCASE)<<(t0.c3)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)<<(t0.c3))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE NOCASE)<<(t0.c3)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL), LIKELIHOOD(((vt1.c1) IS TRUE), 0.9845025095260633) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL), LIKELIHOOD(((vt1.c1) IS TRUE), 0.9845025095260633) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL), LIKELIHOOD(((vt1.c1) IS TRUE), 0.9845025095260633) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL), LIKELIHOOD(((vt1.c1) IS TRUE), 0.9845025095260633) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) NOTNULL), LIKELIHOOD(((vt1.c1) IS TRUE), 0.9845025095260633) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffffdfedc13d);
SELECT SUM(count) FROM (SELECT ((0xffffffffdfedc13d) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffffdfedc13d);
SELECT SUM(count) FROM (SELECT ((0xffffffffdfedc13d) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffffdfedc13d);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)OR('')))AND(vt0.c1)))=(((((vt0.c0)AND(t0.c70)))OR(t0.c1)))) WHERE (((((((((vt0.c0)OR(t0.c4)))OR(t0.c3)))AND(((((((((t0.c5)OR(vt0.c0)))AND(t0.c2)))AND(0xffffffff9a0bd758)))OR(t0.c2)))))AND(((t0.c70) BETWEEN (t0.c0) AND (t0.c2))))) ORDER BY CAST(((t0.c4)OR(t0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(t0.c4)))OR(t0.c3)))AND(((((((((t0.c5)OR(vt0.c0)))AND(t0.c2)))AND(0Xffffffff9a0bd758)))OR(t0.c2)))))AND(((t0.c70) BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)OR('')))AND(vt0.c1)))=(((((vt0.c0)AND(t0.c70)))OR(t0.c1)))) ORDER BY CAST(((t0.c4)OR(t0.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)OR('')))AND(vt0.c1)))=(((((vt0.c0)AND(t0.c70)))OR(t0.c1)))) WHERE (((((((((vt0.c0)OR(t0.c4)))OR(t0.c3)))AND(((((((((t0.c5)OR(vt0.c0)))AND(t0.c2)))AND(0xffffffff9a0bd758)))OR(t0.c2)))))AND(((t0.c70) BETWEEN (t0.c0) AND (t0.c2))))) ORDER BY CAST(((t0.c4)OR(t0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(t0.c4)))OR(t0.c3)))AND(((((((((t0.c5)OR(vt0.c0)))AND(t0.c2)))AND(0Xffffffff9a0bd758)))OR(t0.c2)))))AND(((t0.c70) BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)OR('')))AND(vt0.c1)))=(((((vt0.c0)AND(t0.c70)))OR(t0.c1)))) ORDER BY CAST(((t0.c4)OR(t0.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((vt0.c1)OR('')))AND(vt0.c1)))=(((((vt0.c0)AND(t0.c70)))OR(t0.c1)))) WHERE (((((((((vt0.c0)OR(t0.c4)))OR(t0.c3)))AND(((((((((t0.c5)OR(vt0.c0)))AND(t0.c2)))AND(0xffffffff9a0bd758)))OR(t0.c2)))))AND(((t0.c70) BETWEEN (t0.c0) AND (t0.c2))))) ORDER BY CAST(((t0.c4)OR(t0.c0)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((- (((vt0.c0) BETWEEN (t0.c4) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (t0.c4) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((- (((vt0.c0) BETWEEN (t0.c4) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (t0.c4) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((- (((vt0.c0) BETWEEN (t0.c4) AND (vt0.c1)))));
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON TRIM(((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c5))) WHERE (json_array_length(((((t0.c5)OR(vt1.c0)))AND(t0.c2)), CAST(t0.c0 AS REAL))) ORDER BY (((vt0.c1, t0.c1, 0x3d8c7baf)) BETWEEN ((TRIM(DISTINCT '-526087740'), ((vt1.c1) IS FALSE), ((((t0.c70)AND(vt0.c1)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((t0.c5)<(t0.c3)), ((vt1.c1)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((t0.c5)OR(vt1.c0)))AND(t0.c2)), CAST(t0.c0 AS REAL))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON TRIM(((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c5))) ORDER BY (((vt0.c1, t0.c1, 0x3d8c7baf)) BETWEEN ((TRIM(DISTINCT '-526087740'), ((vt1.c1) IS FALSE), ((((t0.c70)AND(vt0.c1)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((t0.c5)<(t0.c3)), ((vt1.c1)*(vt0.c0))))));
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON TRIM(((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c5))) WHERE (json_array_length(((((t0.c5)OR(vt1.c0)))AND(t0.c2)), CAST(t0.c0 AS REAL))) ORDER BY (((vt0.c1, t0.c1, 0x3d8c7baf)) BETWEEN ((TRIM(DISTINCT '-526087740'), ((vt1.c1) IS FALSE), ((((t0.c70)AND(vt0.c1)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((t0.c5)<(t0.c3)), ((vt1.c1)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((t0.c5)OR(vt1.c0)))AND(t0.c2)), CAST(t0.c0 AS REAL))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON TRIM(((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c5))) ORDER BY (((vt0.c1, t0.c1, 0x3d8c7baf)) BETWEEN ((TRIM(DISTINCT '-526087740'), ((vt1.c1) IS FALSE), ((((t0.c70)AND(vt0.c1)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((t0.c5)<(t0.c3)), ((vt1.c1)*(vt0.c0))))));
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON TRIM(((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c5))) WHERE (json_array_length(((((t0.c5)OR(vt1.c0)))AND(t0.c2)), CAST(t0.c0 AS REAL))) ORDER BY (((vt0.c1, t0.c1, 0x3d8c7baf)) BETWEEN ((TRIM(DISTINCT '-526087740'), ((vt1.c1) IS FALSE), ((((t0.c70)AND(vt0.c1)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((t0.c5)<(t0.c3)), ((vt1.c1)*(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (CASE t0.c3  WHEN 0.43486240224754 THEN vt0.c1 WHEN vt0.c1 THEN t0.c70 WHEN t0.c0 THEN '-722928957' ELSE t0.c2 END))) ORDER BY (((((((t0.c0)) BETWEEN ((0.44986357087004236)) AND ((t0.c2))))AND((+ (t0.c5)))))OR(((t0.c70) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c3  WHEN 0.43486240224754 THEN vt0.c1 WHEN vt0.c1 THEN t0.c70 WHEN t0.c0 THEN '-722928957' ELSE t0.c2 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((t0.c0)) BETWEEN ((0.44986357087004236)) AND ((t0.c2))))AND((+ (t0.c5)))))OR(((t0.c70) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (CASE t0.c3  WHEN 0.43486240224754 THEN vt0.c1 WHEN vt0.c1 THEN t0.c70 WHEN t0.c0 THEN '-722928957' ELSE t0.c2 END))) ORDER BY (((((((t0.c0)) BETWEEN ((0.44986357087004236)) AND ((t0.c2))))AND((+ (t0.c5)))))OR(((t0.c70) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c3  WHEN 0.43486240224754 THEN vt0.c1 WHEN vt0.c1 THEN t0.c70 WHEN t0.c0 THEN '-722928957' ELSE t0.c2 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((t0.c0)) BETWEEN ((0.44986357087004236)) AND ((t0.c2))))AND((+ (t0.c5)))))OR(((t0.c70) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (CASE t0.c3  WHEN 0.43486240224754 THEN vt0.c1 WHEN vt0.c1 THEN t0.c70 WHEN t0.c0 THEN '-722928957' ELSE t0.c2 END))) ORDER BY (((((((t0.c0)) BETWEEN ((0.44986357087004236)) AND ((t0.c2))))AND((+ (t0.c5)))))OR(((t0.c70) IS TRUE))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((t0.c4 IN ((~ (vt0.c1))))) ORDER BY ((vt0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((t0.c4 IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((t0.c4 IN ((~ (vt0.c1))))) ORDER BY ((vt0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((t0.c4 IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((t0.c4 IN ((~ (vt0.c1))))) ORDER BY ((vt0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (DATETIME(t0.c5, vt1.c0, t0.c0))) LEFT OUTER JOIN vt0 ON ((CASE NULL  WHEN vt0.c0 THEN t0.c4 ELSE t0.c70 END)AND(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) WHERE (t0.c70);
SELECT SUM(count) FROM (SELECT ALL ((t0.c70) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (DATETIME(t0.c5, vt1.c0, t0.c0))) LEFT OUTER JOIN vt0 ON ((CASE NULL  WHEN vt0.c0 THEN t0.c4 ELSE t0.c70 END)AND(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (DATETIME(t0.c5, vt1.c0, t0.c0))) LEFT OUTER JOIN vt0 ON ((CASE NULL  WHEN vt0.c0 THEN t0.c4 ELSE t0.c70 END)AND(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) WHERE (t0.c70);
SELECT SUM(count) FROM (SELECT ALL ((t0.c70) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (DATETIME(t0.c5, vt1.c0, t0.c0))) LEFT OUTER JOIN vt0 ON ((CASE NULL  WHEN vt0.c0 THEN t0.c4 ELSE t0.c70 END)AND(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (DATETIME(t0.c5, vt1.c0, t0.c0))) LEFT OUTER JOIN vt0 ON ((CASE NULL  WHEN vt0.c0 THEN t0.c4 ELSE t0.c70 END)AND(((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) WHERE (t0.c70);
SELECT * FROM t0, vt1 WHERE (((((t0.c70)LIKE(t0.c5)))||(((t0.c2)||('0.16511790704934837'))))) ORDER BY json_insert((((vt1.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), t0.c4 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c70 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c1 END, json_array(vt1.c0, t0.c4), GLOB(t0.c4, t0.c3)), ((((t0.c2 IN ())))>=((((t0.c70) BETWEEN (x'') AND (t0.c4))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c70)LIKE(t0.c5)))||(((t0.c2)||('0.16511790704934837'))))) IS TRUE)  as count FROM t0, vt1 ORDER BY json_insert((((vt1.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), t0.c4 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c70 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c1 END, json_array(vt1.c0, t0.c4), GLOB(t0.c4, t0.c3)), ((((t0.c2 IN ())))>=((((t0.c70) BETWEEN (x'') AND (t0.c4))))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((t0.c70)LIKE(t0.c5)))||(((t0.c2)||('0.16511790704934837'))))) ORDER BY json_insert((((vt1.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), t0.c4 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c70 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c1 END, json_array(vt1.c0, t0.c4), GLOB(t0.c4, t0.c3)), ((((t0.c2 IN ())))>=((((t0.c70) BETWEEN (x'') AND (t0.c4))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c70)LIKE(t0.c5)))||(((t0.c2)||('0.16511790704934837'))))) IS TRUE)  as count FROM t0, vt1 ORDER BY json_insert((((vt1.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), t0.c4 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c70 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c1 END, json_array(vt1.c0, t0.c4), GLOB(t0.c4, t0.c3)), ((((t0.c2 IN ())))>=((((t0.c70) BETWEEN (x'') AND (t0.c4))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((((NULL)OR(vt0.c1)))OR(vt0.c0)) THEN ((0.36850691240919753)IS NOT(vt1.c0)) WHEN (NOT (vt0.c1)) THEN vt1.c1 COLLATE BINARY WHEN NULL THEN (vt0.c0 IN ()) WHEN ((vt0.c1)>=(vt1.c0)) THEN CAST(1.499655125E9 AS INTEGER) WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((NULL)OR(vt0.c1)))OR(vt0.c0)) THEN ((0.36850691240919753)IS NOT(vt1.c0)) WHEN (NOT (vt0.c1)) THEN vt1.c1 COLLATE BINARY WHEN NULL THEN (vt0.c0 IN ()) WHEN ((vt0.c1)>=(vt1.c0)) THEN CAST(1.499655125E9 AS INTEGER) WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((((NULL)OR(vt0.c1)))OR(vt0.c0)) THEN ((0.36850691240919753)IS NOT(vt1.c0)) WHEN (NOT (vt0.c1)) THEN vt1.c1 COLLATE BINARY WHEN NULL THEN (vt0.c0 IN ()) WHEN ((vt0.c1)>=(vt1.c0)) THEN CAST(1.499655125E9 AS INTEGER) WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((NULL)OR(vt0.c1)))OR(vt0.c0)) THEN ((0.36850691240919753)IS NOT(vt1.c0)) WHEN (NOT (vt0.c1)) THEN vt1.c1 COLLATE BINARY WHEN NULL THEN (vt0.c0 IN ()) WHEN ((vt0.c1)>=(vt1.c0)) THEN CAST(1.499655125E9 AS INTEGER) WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((((NULL)OR(vt0.c1)))OR(vt0.c0)) THEN ((0.36850691240919753)IS NOT(vt1.c0)) WHEN (NOT (vt0.c1)) THEN vt1.c1 COLLATE BINARY WHEN NULL THEN (vt0.c0 IN ()) WHEN ((vt0.c1)>=(vt1.c0)) THEN CAST(1.499655125E9 AS INTEGER) WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) END);
SELECT * FROM t0, vt1, vt0 NOT INDEXED WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (('2016411138') IS TRUE) THEN t0.c3 END) ORDER BY COALESCE(DISTINCT ((vt0.c0) IS FALSE), CAST(t0.c4 AS TEXT), (vt0.c0 IN (t0.c70)), CASE vt0.c1  WHEN t0.c70 THEN t0.c70 END) DESC;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE RTRIM  WHEN (('2016411138') IS TRUE) THEN t0.c3 END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY COALESCE(DISTINCT ((vt0.c0) IS FALSE), CAST(t0.c4 AS TEXT), (vt0.c0 IN (t0.c70)), CASE vt0.c1  WHEN t0.c70 THEN t0.c70 END) DESC);
SELECT * FROM t0, vt1, vt0 NOT INDEXED WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (('2016411138') IS TRUE) THEN t0.c3 END) ORDER BY COALESCE(DISTINCT ((vt0.c0) IS FALSE), CAST(t0.c4 AS TEXT), (vt0.c0 IN (t0.c70)), CASE vt0.c1  WHEN t0.c70 THEN t0.c70 END) DESC;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE RTRIM  WHEN (('2016411138') IS TRUE) THEN t0.c3 END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY COALESCE(DISTINCT ((vt0.c0) IS FALSE), CAST(t0.c4 AS TEXT), (vt0.c0 IN (t0.c70)), CASE vt0.c1  WHEN t0.c70 THEN t0.c70 END) DESC);
SELECT * FROM t0, vt1, vt0 NOT INDEXED WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (('2016411138') IS TRUE) THEN t0.c3 END) ORDER BY COALESCE(DISTINCT ((vt0.c0) IS FALSE), CAST(t0.c4 AS TEXT), (vt0.c0 IN (t0.c70)), CASE vt0.c1  WHEN t0.c70 THEN t0.c70 END) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((vt0.c0 COLLATE BINARY)=(vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)==(vt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((vt0.c0 COLLATE BINARY)=(vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)==(vt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((vt0.c0 COLLATE BINARY)=(vt0.c0 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM t0 WHERE ((t0.c70 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c70 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c70 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c70 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c70 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c5) NOTNULL)) BETWEEN (0.5553014917847099) AND (IFNULL(DISTINCT vt1.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c5) NOTNULL)) BETWEEN (0.5553014917847099) AND (IFNULL(DISTINCT vt1.c0, vt1.c1)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c5) NOTNULL)) BETWEEN (0.5553014917847099) AND (IFNULL(DISTINCT vt1.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c5) NOTNULL)) BETWEEN (0.5553014917847099) AND (IFNULL(DISTINCT vt1.c0, vt1.c1)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c5) NOTNULL)) BETWEEN (0.5553014917847099) AND (IFNULL(DISTINCT vt1.c0, vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c1 WHERE (((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0, vt1.c1, vt0.c1))>((vt1.c0, vt0.c1, vt0.c1)))))) ORDER BY ((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1)))IS(((vt1.c1)&(vt1.c0)))) DESC, vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0, vt1.c1, vt0.c1))>((vt1.c0, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c1 ORDER BY ((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1)))IS(((vt1.c1)&(vt1.c0)))) DESC, vt1.c0);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c1 WHERE (((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0, vt1.c1, vt0.c1))>((vt1.c0, vt0.c1, vt0.c1)))))) ORDER BY ((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1)))IS(((vt1.c1)&(vt1.c0)))) DESC, vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0, vt1.c1, vt0.c1))>((vt1.c0, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c1 ORDER BY ((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1)))IS(((vt1.c1)&(vt1.c0)))) DESC, vt1.c0);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c1 WHERE (((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0, vt1.c1, vt0.c1))>((vt1.c0, vt0.c1, vt0.c1)))))) ORDER BY ((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1)))IS(((vt1.c1)&(vt1.c0)))) DESC, vt1.c0;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c1)<>(vt1.c1))) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (((vt1.c1)!=(vt1.c1))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c1)<>(vt1.c1))) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (((vt1.c1)!=(vt1.c1))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c1)<>(vt1.c1))) AND (((vt1.c0) NOT NULL))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((((((((CAST(t0.c4 AS TEXT))OR(json_array_length(t0.c2))))OR(TRIM(vt0.c1, t0.c1))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c1 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))))OR(x'01be' COLLATE BINARY)))OR(((-1.410899596E9)-(t0.c4)))))OR((vt0.c0 IN ()))) WHERE (((((t0.c0) NOTNULL)) NOT NULL)) ORDER BY (NOT (((vt0.c1) ISNULL))), (~ (CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((((((((CAST(t0.c4 AS TEXT))OR(json_array_length(t0.c2))))OR(TRIM(vt0.c1, t0.c1))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c1 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))))OR(x'01be' COLLATE BINARY)))OR(((-1.410899596E9)-(t0.c4)))))OR((vt0.c0 IN ()))) ORDER BY (NOT (((vt0.c1) ISNULL))), (~ (CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END)) ASC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((((((((CAST(t0.c4 AS TEXT))OR(json_array_length(t0.c2))))OR(TRIM(vt0.c1, t0.c1))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c1 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))))OR(x'01be' COLLATE BINARY)))OR(((-1.410899596E9)-(t0.c4)))))OR((vt0.c0 IN ()))) WHERE (((((t0.c0) NOTNULL)) NOT NULL)) ORDER BY (NOT (((vt0.c1) ISNULL))), (~ (CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((((((((CAST(t0.c4 AS TEXT))OR(json_array_length(t0.c2))))OR(TRIM(vt0.c1, t0.c1))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c1 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))))OR(x'01be' COLLATE BINARY)))OR(((-1.410899596E9)-(t0.c4)))))OR((vt0.c0 IN ()))) ORDER BY (NOT (((vt0.c1) ISNULL))), (~ (CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY CAST(json_insert(vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1) AS BLOB) ASC  NULLS FIRST, ((((vt0.c1)<(vt0.c0)))AND((NOT (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY CAST(json_insert(vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1) AS BLOB) ASC  NULLS FIRST, ((((vt0.c1)<(vt0.c0)))AND((NOT (vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY CAST(json_insert(vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1) AS BLOB) ASC  NULLS FIRST, ((((vt0.c1)<(vt0.c0)))AND((NOT (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY CAST(json_insert(vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1) AS BLOB) ASC  NULLS FIRST, ((((vt0.c1)<(vt0.c0)))AND((NOT (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((0.0019713698163530413 IN (t0.c1 COLLATE NOCASE, CASE WHEN t0.c5 THEN vt0.c1 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((0.0019713698163530413 IN (t0.c1 COLLATE NOCASE, CASE WHEN t0.c5 THEN vt0.c1 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((0.0019713698163530413 IN (t0.c1 COLLATE NOCASE, CASE WHEN t0.c5 THEN vt0.c1 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((0.0019713698163530413 IN (t0.c1 COLLATE NOCASE, CASE WHEN t0.c5 THEN vt0.c1 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((0.0019713698163530413 IN (t0.c1 COLLATE NOCASE, CASE WHEN t0.c5 THEN vt0.c1 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT * FROM t0, vt0 WHERE (t0.c4) ORDER BY (~ (0x782ffe02)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (0X782ffe02)) DESC);
SELECT * FROM t0, vt0 WHERE (t0.c4) ORDER BY (~ (0x782ffe02)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (0X782ffe02)) DESC);
SELECT * FROM t0, vt0 WHERE (t0.c4) ORDER BY (~ (0x782ffe02)) DESC;
SELECT * FROM t0, vt0, vt1 WHERE (((((((((t0.c1)AND(t0.c3)))AND('+z')))AND((~ (vt1.c1)))))AND(t0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)AND(t0.c3)))AND('+z')))AND((~ (vt1.c1)))))AND(t0.c4))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((((((t0.c1)AND(t0.c3)))AND('+z')))AND((~ (vt1.c1)))))AND(t0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)AND(t0.c3)))AND('+z')))AND((~ (vt1.c1)))))AND(t0.c4))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((((((t0.c1)AND(t0.c3)))AND('+z')))AND((~ (vt1.c1)))))AND(t0.c4)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c3)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN t0.c5 END) IS TRUE) WHERE (((0.8987622294432038) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((0.8987622294432038) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c3)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN t0.c5 END) IS TRUE));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c3)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN t0.c5 END) IS TRUE) WHERE (((0.8987622294432038) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((0.8987622294432038) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c3)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN t0.c5 END) IS TRUE));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c70) NOT BETWEEN (t0.c5) AND (t0.c3)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN t0.c5 END) IS TRUE) WHERE (((0.8987622294432038) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))GLOB(((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))GLOB(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))GLOB(((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))GLOB(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))GLOB(((vt0.c0)-(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1)<=(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c1)<=(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1)<=(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c1)<=(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1)<=(NULL)) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (~ (vt0.c0)) WHERE (((((t0.c2) IS FALSE))GLOB(TYPEOF(DISTINCT '')))) ORDER BY UPPER(DISTINCT ((((vt0.c0)OR(t0.c5)))OR(t0.c2)))  NULLS LAST, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS FALSE))GLOB(TYPEOF(DISTINCT '')))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (~ (vt0.c0)) ORDER BY UPPER(DISTINCT ((((vt0.c0)OR(t0.c5)))OR(t0.c2)))  NULLS LAST, vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (~ (vt0.c0)) WHERE (((((t0.c2) IS FALSE))GLOB(TYPEOF(DISTINCT '')))) ORDER BY UPPER(DISTINCT ((((vt0.c0)OR(t0.c5)))OR(t0.c2)))  NULLS LAST, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS FALSE))GLOB(TYPEOF(DISTINCT '')))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (~ (vt0.c0)) ORDER BY UPPER(DISTINCT ((((vt0.c0)OR(t0.c5)))OR(t0.c2)))  NULLS LAST, vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (~ (vt0.c0)) WHERE (((((t0.c2) IS FALSE))GLOB(TYPEOF(DISTINCT '')))) ORDER BY UPPER(DISTINCT ((((vt0.c0)OR(t0.c5)))OR(t0.c2)))  NULLS LAST, vt1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c1);
SELECT ALL * FROM vt0, t0 INDEXED BY i83 WHERE (CASE (t0.c0 IN ())  WHEN (((t0.c70, vt0.c0, t0.c70)) NOT BETWEEN ((t0.c3, t0.c5, t0.c4)) AND ((t0.c0, t0.c5, NULL))) THEN t0.c5 COLLATE BINARY WHEN ((vt0.c1)>('v*T鐬L\ne!')) THEN CASE WHEN t0.c1 THEN vt0.c0 END WHEN x'f7cb' THEN (+ (t0.c3)) ELSE t0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN (((t0.c70, vt0.c0, t0.c70)) NOT BETWEEN ((t0.c3, t0.c5, t0.c4)) AND ((t0.c0, t0.c5, NULL))) THEN t0.c5 COLLATE BINARY WHEN ((vt0.c1)>('v*T鐬L\ne!')) THEN CASE WHEN t0.c1 THEN vt0.c0 END WHEN x'f7cb' THEN (+ (t0.c3)) ELSE t0.c2 END) IS TRUE)  as count FROM vt0, t0 INDEXED BY i83);
SELECT ALL * FROM vt0, t0 INDEXED BY i83 WHERE (CASE (t0.c0 IN ())  WHEN (((t0.c70, vt0.c0, t0.c70)) NOT BETWEEN ((t0.c3, t0.c5, t0.c4)) AND ((t0.c0, t0.c5, NULL))) THEN t0.c5 COLLATE BINARY WHEN ((vt0.c1)>('v*T鐬L\ne!')) THEN CASE WHEN t0.c1 THEN vt0.c0 END WHEN x'f7cb' THEN (+ (t0.c3)) ELSE t0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN (((t0.c70, vt0.c0, t0.c70)) NOT BETWEEN ((t0.c3, t0.c5, t0.c4)) AND ((t0.c0, t0.c5, NULL))) THEN t0.c5 COLLATE BINARY WHEN ((vt0.c1)>('v*T鐬L\ne!')) THEN CASE WHEN t0.c1 THEN vt0.c0 END WHEN x'f7cb' THEN (+ (t0.c3)) ELSE t0.c2 END) IS TRUE)  as count FROM vt0, t0 INDEXED BY i83);
SELECT ALL * FROM vt0, t0 INDEXED BY i83 WHERE (CASE (t0.c0 IN ())  WHEN (((t0.c70, vt0.c0, t0.c70)) NOT BETWEEN ((t0.c3, t0.c5, t0.c4)) AND ((t0.c0, t0.c5, NULL))) THEN t0.c5 COLLATE BINARY WHEN ((vt0.c1)>('v*T鐬L\ne!')) THEN CASE WHEN t0.c1 THEN vt0.c0 END WHEN x'f7cb' THEN (+ (t0.c3)) ELSE t0.c2 END);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((+ ((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c1))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((+ ((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c1))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((+ ((+ (t0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON UNLIKELY(((((vt0.c1)AND(vt0.c1)))OR(t0.c4))) WHERE (CASE ((((t0.c5)OR(vt0.c1)))AND(-8.1713089E7))  WHEN LIKELY(t0.c5) THEN t0.c70 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c5)OR(vt0.c1)))AND(-8.1713089E7))  WHEN LIKELY(t0.c5) THEN t0.c70 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON UNLIKELY(((((vt0.c1)AND(vt0.c1)))OR(t0.c4))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON UNLIKELY(((((vt0.c1)AND(vt0.c1)))OR(t0.c4))) WHERE (CASE ((((t0.c5)OR(vt0.c1)))AND(-8.1713089E7))  WHEN LIKELY(t0.c5) THEN t0.c70 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c5)OR(vt0.c1)))AND(-8.1713089E7))  WHEN LIKELY(t0.c5) THEN t0.c70 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON UNLIKELY(((((vt0.c1)AND(vt0.c1)))OR(t0.c4))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON UNLIKELY(((((vt0.c1)AND(vt0.c1)))OR(t0.c4))) WHERE (CASE ((((t0.c5)OR(vt0.c1)))AND(-8.1713089E7))  WHEN LIKELY(t0.c5) THEN t0.c70 END);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0, vt1, t0 WHERE (t0.c2) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN CASE WHEN vt1.c0 THEN t0.c3 WHEN t0.c70 THEN '' WHEN vt1.c1 THEN t0.c0 ELSE vt0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN CASE WHEN vt1.c0 THEN t0.c3 WHEN t0.c70 THEN '' WHEN vt1.c1 THEN t0.c0 ELSE vt0.c1 END END);
SELECT * FROM vt0, vt1, t0 WHERE (t0.c2) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN CASE WHEN vt1.c0 THEN t0.c3 WHEN t0.c70 THEN '' WHEN vt1.c1 THEN t0.c0 ELSE vt0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN CASE WHEN vt1.c0 THEN t0.c3 WHEN t0.c70 THEN '' WHEN vt1.c1 THEN t0.c0 ELSE vt0.c1 END END);
SELECT * FROM vt0, vt1, t0 WHERE (t0.c2) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN CASE WHEN vt1.c0 THEN t0.c3 WHEN t0.c70 THEN '' WHEN vt1.c1 THEN t0.c0 ELSE vt0.c1 END END;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((t0.c70 IN ()))OR(COALESCE(t0.c1, t0.c4))))AND(CASE WHEN 0.9268839168793899 THEN t0.c2 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c70 IN ()))OR(COALESCE(t0.c1, t0.c4))))AND(CASE WHEN 0.9268839168793899 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM vt1, t0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((t0.c70 IN ()))OR(COALESCE(t0.c1, t0.c4))))AND(CASE WHEN 0.9268839168793899 THEN t0.c2 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c70 IN ()))OR(COALESCE(t0.c1, t0.c4))))AND(CASE WHEN 0.9268839168793899 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM vt1, t0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((t0.c70 IN ()))OR(COALESCE(t0.c1, t0.c4))))AND(CASE WHEN 0.9268839168793899 THEN t0.c2 ELSE t0.c1 END)));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE));
SELECT * FROM t0 CROSS JOIN vt1 ON ((t0.c5 COLLATE RTRIM) NOT BETWEEN (0.6534199106129163 COLLATE NOCASE) AND (6.24893802E8)) WHERE (((((t0.c70) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c70) ISNULL)) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((t0.c5 COLLATE RTRIM) NOT BETWEEN (0.6534199106129163 COLLATE NOCASE) AND (6.24893802E8)));
SELECT * FROM t0 CROSS JOIN vt1 ON ((t0.c5 COLLATE RTRIM) NOT BETWEEN (0.6534199106129163 COLLATE NOCASE) AND (6.24893802E8)) WHERE (((((t0.c70) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c70) ISNULL)) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((t0.c5 COLLATE RTRIM) NOT BETWEEN (0.6534199106129163 COLLATE NOCASE) AND (6.24893802E8)));
SELECT * FROM t0 CROSS JOIN vt1 ON ((t0.c5 COLLATE RTRIM) NOT BETWEEN (0.6534199106129163 COLLATE NOCASE) AND (6.24893802E8)) WHERE (((((t0.c70) ISNULL)) IS FALSE));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON json_patch(x'2f94', ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1))) WHERE (QUOTE((+ (t0.c1)))) ORDER BY ((((vt1.c1) BETWEEN (t0.c1) AND (t0.c70)))AND((NOT (t0.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((+ (t0.c1)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON json_patch(x'2f94', ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1))) ORDER BY ((((vt1.c1) BETWEEN (t0.c1) AND (t0.c70)))AND((NOT (t0.c5))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON json_patch(x'2f94', ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1))) WHERE (QUOTE((+ (t0.c1)))) ORDER BY ((((vt1.c1) BETWEEN (t0.c1) AND (t0.c70)))AND((NOT (t0.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((+ (t0.c1)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON json_patch(x'2f94', ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1))) ORDER BY ((((vt1.c1) BETWEEN (t0.c1) AND (t0.c70)))AND((NOT (t0.c5))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(((t0.c1) NOTNULL) AS REAL) INNER JOIN t0 ON CASE ((t0.c4)<(t0.c70))  WHEN CASE vt0.c1  WHEN t0.c3 THEN t0.c3 END THEN (vt0.c1 IN ()) END WHERE (CAST(NULL COLLATE RTRIM AS TEXT)) ORDER BY ((('-1339105146')) NOT BETWEEN ((((t0.c70)=('')))) AND (((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((CAST(NULL COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(((t0.c1) NOTNULL) AS REAL) INNER JOIN t0 ON CASE ((t0.c4)<(t0.c70))  WHEN CASE vt0.c1  WHEN t0.c3 THEN t0.c3 END THEN (vt0.c1 IN ()) END ORDER BY ((('-1339105146')) NOT BETWEEN ((((t0.c70)==('')))) AND (((NULL IN ())))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(((t0.c1) NOTNULL) AS REAL) INNER JOIN t0 ON CASE ((t0.c4)<(t0.c70))  WHEN CASE vt0.c1  WHEN t0.c3 THEN t0.c3 END THEN (vt0.c1 IN ()) END WHERE (CAST(NULL COLLATE RTRIM AS TEXT)) ORDER BY ((('-1339105146')) NOT BETWEEN ((((t0.c70)=('')))) AND (((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((CAST(NULL COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(((t0.c1) NOTNULL) AS REAL) INNER JOIN t0 ON CASE ((t0.c4)<(t0.c70))  WHEN CASE vt0.c1  WHEN t0.c3 THEN t0.c3 END THEN (vt0.c1 IN ()) END ORDER BY ((('-1339105146')) NOT BETWEEN ((((t0.c70)==('')))) AND (((NULL IN ())))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(((t0.c1) NOTNULL) AS REAL) INNER JOIN t0 ON CASE ((t0.c4)<(t0.c70))  WHEN CASE vt0.c1  WHEN t0.c3 THEN t0.c3 END THEN (vt0.c1 IN ()) END WHERE (CAST(NULL COLLATE RTRIM AS TEXT)) ORDER BY ((('-1339105146')) NOT BETWEEN ((((t0.c70)=('')))) AND (((NULL IN ()))));
SELECT ALL * FROM vt1, t0, vt0 INDEXED BY i83 WHERE ((- (((0.05128268055993035) IS FALSE)))) ORDER BY vt1.c1, (((t0.c1 IN ()))%(((vt1.c1) BETWEEN (t0.c2) AND (''))));
SELECT SUM(count) FROM (SELECT (((- (((0.05128268055993035) IS FALSE)))) IS TRUE)  as count FROM vt1, t0, vt0 INDEXED BY i83 ORDER BY vt1.c1, (((t0.c1 IN ()))%(((vt1.c1) BETWEEN (t0.c2) AND ('')))));
SELECT ALL * FROM vt1, t0, vt0 INDEXED BY i83 WHERE ((- (((0.05128268055993035) IS FALSE)))) ORDER BY vt1.c1, (((t0.c1 IN ()))%(((vt1.c1) BETWEEN (t0.c2) AND (''))));
SELECT SUM(count) FROM (SELECT (((- (((0.05128268055993035) IS FALSE)))) IS TRUE)  as count FROM vt1, t0, vt0 INDEXED BY i83 ORDER BY vt1.c1, (((t0.c1 IN ()))%(((vt1.c1) BETWEEN (t0.c2) AND ('')))));
SELECT ALL * FROM vt1 WHERE (CAST(-965096994 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-965096994 AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(-965096994 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-965096994 AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(-965096994 AS TEXT));
SELECT * FROM t0 WHERE ((((CAST(t0.c5 AS INTEGER)))>((((t0.c70) BETWEEN (t0.c5) AND (t0.c5)))))) ORDER BY (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) IN (((t0.c2)||(t0.c70)), t0.c4));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c5 AS INTEGER)))>((((t0.c70) BETWEEN (t0.c5) AND (t0.c5)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) IN (((t0.c2)||(t0.c70)), t0.c4)));
SELECT * FROM t0 WHERE ((((CAST(t0.c5 AS INTEGER)))>((((t0.c70) BETWEEN (t0.c5) AND (t0.c5)))))) ORDER BY (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) IN (((t0.c2)||(t0.c70)), t0.c4));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c5 AS INTEGER)))>((((t0.c70) BETWEEN (t0.c5) AND (t0.c5)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) IN (((t0.c2)||(t0.c70)), t0.c4)));
SELECT * FROM t0 WHERE ((((CAST(t0.c5 AS INTEGER)))>((((t0.c70) BETWEEN (t0.c5) AND (t0.c5)))))) ORDER BY (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) IN (((t0.c2)||(t0.c70)), t0.c4));
SELECT ALL * FROM vt1 WHERE ((((('-56968346')*(vt1.c1)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.9359388121386166)))) ORDER BY (((((((((((vt1.c1)OR(x'54d5')))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)), ((vt1.c0) BETWEEN (vt1.c1) AND (0x2d70f0ed)), CAST(vt1.c1 AS NUMERIC)))>(((vt1.c0 IN ()), (vt1.c1 IN (vt1.c1)), CAST(vt1.c1 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-56968346')*(vt1.c1)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.9359388121386166)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c1)OR(x'54d5')))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)), ((vt1.c0) BETWEEN (vt1.c1) AND (0x2d70f0ed)), CAST(vt1.c1 AS NUMERIC)))>(((vt1.c0 IN ()), (vt1.c1 IN (vt1.c1)), CAST(vt1.c1 AS BLOB)))) ASC);
SELECT ALL * FROM vt1 WHERE ((((('-56968346')*(vt1.c1)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.9359388121386166)))) ORDER BY (((((((((((vt1.c1)OR(x'54d5')))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)), ((vt1.c0) BETWEEN (vt1.c1) AND (0x2d70f0ed)), CAST(vt1.c1 AS NUMERIC)))>(((vt1.c0 IN ()), (vt1.c1 IN (vt1.c1)), CAST(vt1.c1 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-56968346')*(vt1.c1)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.9359388121386166)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c1)OR(x'54d5')))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)), ((vt1.c0) BETWEEN (vt1.c1) AND (0x2d70f0ed)), CAST(vt1.c1 AS NUMERIC)))>(((vt1.c0 IN ()), (vt1.c1 IN (vt1.c1)), CAST(vt1.c1 AS BLOB)))) ASC);
SELECT ALL * FROM vt1 WHERE ((((('-56968346')*(vt1.c1)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.9359388121386166)))) ORDER BY (((((((((((vt1.c1)OR(x'54d5')))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)), ((vt1.c0) BETWEEN (vt1.c1) AND (0x2d70f0ed)), CAST(vt1.c1 AS NUMERIC)))>(((vt1.c0 IN ()), (vt1.c1 IN (vt1.c1)), CAST(vt1.c1 AS BLOB)))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((t0.c2 IN ()))AND((vt1.c1 IN ()))))OR(IFNULL(vt1.c0, t0.c5))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2 IN ()))AND((vt1.c1 IN ()))))OR(IFNULL(vt1.c0, t0.c5)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((t0.c2 IN ()))AND((vt1.c1 IN ()))))OR(IFNULL(vt1.c0, t0.c5))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2 IN ()))AND((vt1.c1 IN ()))))OR(IFNULL(vt1.c0, t0.c5)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((t0.c2 IN ()))AND((vt1.c1 IN ()))))OR(IFNULL(vt1.c0, t0.c5))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c1) NOT BETWEEN (0.6369989949041401) AND (vt0.c1)) COLLATE BINARY) ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN load_extension(t0.c70, t0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOT BETWEEN (0.6369989949041401) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN load_extension(t0.c70, t0.c0) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c1) NOT BETWEEN (0.6369989949041401) AND (vt0.c1)) COLLATE BINARY) ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN load_extension(t0.c70, t0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOT BETWEEN (0.6369989949041401) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN load_extension(t0.c70, t0.c0) END  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((vt0.c0)+(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((vt0.c0)+(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((vt0.c0)+(x'')) COLLATE NOCASE);
SELECT * FROM vt0, vt1, t0 WHERE (LIKELIHOOD(t0.c2, 0.12404559796719083));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(t0.c2, 0.12404559796719083)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (LIKELIHOOD(t0.c2, 0.12404559796719083));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(t0.c2, 0.12404559796719083)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (LIKELIHOOD(t0.c2, 0.12404559796719083));
SELECT ALL * FROM vt1, t0, vt0 WHERE (NULL) ORDER BY (((CASE WHEN t0.c2 THEN vt0.c0 END))>=((LIKELY(vt0.c1)))), CASE (t0.c4 IN ())  WHEN (t0.c1 IN ()) THEN ((t0.c3) NOT BETWEEN (t0.c5) AND (t0.c3)) ELSE (+ (NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((CASE WHEN t0.c2 THEN vt0.c0 END))>=((LIKELY(vt0.c1)))), CASE (t0.c4 IN ())  WHEN (t0.c1 IN ()) THEN ((t0.c3) NOT BETWEEN (t0.c5) AND (t0.c3)) ELSE (+ (NULL)) END DESC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (NULL) ORDER BY (((CASE WHEN t0.c2 THEN vt0.c0 END))>=((LIKELY(vt0.c1)))), CASE (t0.c4 IN ())  WHEN (t0.c1 IN ()) THEN ((t0.c3) NOT BETWEEN (t0.c5) AND (t0.c3)) ELSE (+ (NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((CASE WHEN t0.c2 THEN vt0.c0 END))>=((LIKELY(vt0.c1)))), CASE (t0.c4 IN ())  WHEN (t0.c1 IN ()) THEN ((t0.c3) NOT BETWEEN (t0.c5) AND (t0.c3)) ELSE (+ (NULL)) END DESC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (NULL) ORDER BY (((CASE WHEN t0.c2 THEN vt0.c0 END))>=((LIKELY(vt0.c1)))), CASE (t0.c4 IN ())  WHEN (t0.c1 IN ()) THEN ((t0.c3) NOT BETWEEN (t0.c5) AND (t0.c3)) ELSE (+ (NULL)) END DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (TYPEOF((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TYPEOF((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TYPEOF((vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((('&\ncw'))<((vt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((('&\ncw'))<((vt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((('&\ncw'))<((vt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((('&\ncw'))<((vt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((('&\ncw'))<((vt1.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (t0.c4);
SELECT SUM(count) FROM (SELECT ((t0.c4) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c4);
SELECT SUM(count) FROM (SELECT ((t0.c4) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c4);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, vt1.c1, vt1.c1, x'')) NOT BETWEEN (((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt1.c0, vt1.c1, vt1.c1, x'')) NOT BETWEEN (((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS FIRST);
SELECT * FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, vt1.c1, vt1.c1, x'')) NOT BETWEEN (((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt1.c0, vt1.c1, vt1.c1, x'')) NOT BETWEEN (((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS FIRST);
SELECT * FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, vt1.c1, vt1.c1, x'')) NOT BETWEEN (((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 WHERE ((+ (t0.c5)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c5)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((+ (t0.c5)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c5)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((+ (t0.c5)) COLLATE NOCASE);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS BLOB) WHERE (CAST(t0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS BLOB));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS BLOB) WHERE (CAST(t0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS BLOB));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS BLOB) WHERE (CAST(t0.c1 AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((vt1.c1) ISNULL) CROSS JOIN vt0 ON (((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END))>((CAST(vt1.c1 AS NUMERIC)))) WHERE (t0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((vt1.c1) ISNULL) CROSS JOIN vt0 ON (((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END))>((CAST(vt1.c1 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((vt1.c1) ISNULL) CROSS JOIN vt0 ON (((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END))>((CAST(vt1.c1 AS NUMERIC)))) WHERE (t0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((vt1.c1) ISNULL) CROSS JOIN vt0 ON (((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END))>((CAST(vt1.c1 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((vt1.c1) ISNULL) CROSS JOIN vt0 ON (((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END))>((CAST(vt1.c1 AS NUMERIC)))) WHERE (t0.c2 COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (CASE 0Xb9b0412 COLLATE RTRIM  WHEN vt0.c0 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0Xb9b0412 COLLATE RTRIM  WHEN vt0.c0 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE 0Xb9b0412 COLLATE RTRIM  WHEN vt0.c0 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0Xb9b0412 COLLATE RTRIM  WHEN vt0.c0 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE 0Xb9b0412 COLLATE RTRIM  WHEN vt0.c0 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST, CAST('0.3759160635632768' AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST, CAST('0.3759160635632768' AS NUMERIC));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST, CAST('0.3759160635632768' AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST, CAST('0.3759160635632768' AS NUMERIC));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST, CAST('0.3759160635632768' AS NUMERIC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)AND('-1965987840')))AND(vt1.c1)) ELSE 0Xfffffffffccfaa13 END) ORDER BY ((((((vt1.c1)/(vt1.c1)))AND((+ (vt1.c1)))))OR(((vt1.c1)%(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)AND('-1965987840')))AND(vt1.c1)) ELSE 0Xfffffffffccfaa13 END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)/(vt1.c1)))AND((+ (vt1.c1)))))OR(((vt1.c1)%(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)AND('-1965987840')))AND(vt1.c1)) ELSE 0Xfffffffffccfaa13 END) ORDER BY ((((((vt1.c1)/(vt1.c1)))AND((+ (vt1.c1)))))OR(((vt1.c1)%(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)AND('-1965987840')))AND(vt1.c1)) ELSE 0Xfffffffffccfaa13 END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)/(vt1.c1)))AND((+ (vt1.c1)))))OR(((vt1.c1)%(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)AND('-1965987840')))AND(vt1.c1)) ELSE 0Xfffffffffccfaa13 END) ORDER BY ((((((vt1.c1)/(vt1.c1)))AND((+ (vt1.c1)))))OR(((vt1.c1)%(vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((NULL) IS FALSE)) AND (vt0.c0)), vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((NULL) IS FALSE)) AND (vt0.c0)), vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((NULL) IS FALSE)) AND (vt0.c0)), vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((NULL) IS FALSE)) AND (vt0.c0)), vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((NULL) IS FALSE)) AND (vt0.c0)), vt0.c1 ASC;
SELECT * FROM vt1, vt0, t0 WHERE (((TRIM(t0.c4, t0.c4)) BETWEEN ((((t0.c4, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c5, vt1.c1, vt0.c1)) AND ((t0.c2, t0.c0, t0.c1)))) AND (t0.c5)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c4, t0.c4)) BETWEEN ((((t0.c4, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c5, vt1.c1, vt0.c1)) AND ((t0.c2, t0.c0, t0.c1)))) AND (t0.c5))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((TRIM(t0.c4, t0.c4)) BETWEEN ((((t0.c4, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c5, vt1.c1, vt0.c1)) AND ((t0.c2, t0.c0, t0.c1)))) AND (t0.c5)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c4, t0.c4)) BETWEEN ((((t0.c4, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c5, vt1.c1, vt0.c1)) AND ((t0.c2, t0.c0, t0.c1)))) AND (t0.c5))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((TRIM(t0.c4, t0.c4)) BETWEEN ((((t0.c4, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c5, vt1.c1, vt0.c1)) AND ((t0.c2, t0.c0, t0.c1)))) AND (t0.c5)));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN t0.c1 THEN '' END WHERE (((((NULLIF(DISTINCT vt0.c0, t0.c4))OR(CASE x''  WHEN t0.c2 THEN t0.c4 WHEN t0.c5 THEN t0.c0 WHEN vt0.c0 THEN -547466052 ELSE vt0.c0 END)))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT vt0.c0, t0.c4))OR(CASE x''  WHEN t0.c2 THEN t0.c4 WHEN t0.c5 THEN t0.c0 WHEN vt0.c0 THEN -547466052 ELSE vt0.c0 END)))OR(t0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN t0.c1 THEN '' END);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN t0.c1 THEN '' END WHERE (((((NULLIF(DISTINCT vt0.c0, t0.c4))OR(CASE x''  WHEN t0.c2 THEN t0.c4 WHEN t0.c5 THEN t0.c0 WHEN vt0.c0 THEN -547466052 ELSE vt0.c0 END)))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT vt0.c0, t0.c4))OR(CASE x''  WHEN t0.c2 THEN t0.c4 WHEN t0.c5 THEN t0.c0 WHEN vt0.c0 THEN -547466052 ELSE vt0.c0 END)))OR(t0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN t0.c1 THEN '' END);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN t0.c1 THEN '' END WHERE (((((NULLIF(DISTINCT vt0.c0, t0.c4))OR(CASE x''  WHEN t0.c2 THEN t0.c4 WHEN t0.c5 THEN t0.c0 WHEN vt0.c0 THEN -547466052 ELSE vt0.c0 END)))OR(t0.c1)));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(((vt1.c0) IS FALSE), 0.810959957603051);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(((vt1.c0) IS FALSE), 0.810959957603051));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(((vt1.c0) IS FALSE), 0.810959957603051);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(((vt1.c0) IS FALSE), 0.810959957603051));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(((vt1.c0) IS FALSE), 0.810959957603051);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.c1 AS NUMERIC) IN (0.15490549096323025, vt1.c1)));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c1 AS NUMERIC) IN (0.15490549096323025, vt1.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.c1 AS NUMERIC) IN (0.15490549096323025, vt1.c1)));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c1 AS NUMERIC) IN (0.15490549096323025, vt1.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.c1 AS NUMERIC) IN (0.15490549096323025, vt1.c1)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>=(vt0.c0)))+(((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(vt0.c0)))+(((((vt1.c1)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>=(vt0.c0)))+(((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(vt0.c0)))+(((((vt1.c1)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>=(vt0.c0)))+(((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (- (t0.c70))  WHEN 0.7989005276995813 THEN (+ (t0.c2)) WHEN (t0.c3 IN ()) THEN load_extension(vt0.c0) WHEN t0.c1 THEN ((t0.c5) BETWEEN (t0.c5) AND (t0.c5)) END) ORDER BY (- ((((t0.c2, t0.c70, 0xffffffffd95718b4))>=((vt0.c0, 9.38923293E8, t0.c5))))) ASC  NULLS LAST, ((((t0.c1 IN ())))>((CAST(vt0.c1 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c70))  WHEN 0.7989005276995813 THEN (+ (t0.c2)) WHEN (t0.c3 IN ()) THEN load_extension(vt0.c0) WHEN t0.c1 THEN ((t0.c5) BETWEEN (t0.c5) AND (t0.c5)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (- ((((t0.c2, t0.c70, 0xffffffffd95718b4))>=((vt0.c0, 9.38923293E8, t0.c5))))) ASC  NULLS LAST, ((((t0.c1 IN ())))>((CAST(vt0.c1 AS INTEGER))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (- (t0.c70))  WHEN 0.7989005276995813 THEN (+ (t0.c2)) WHEN (t0.c3 IN ()) THEN load_extension(vt0.c0) WHEN t0.c1 THEN ((t0.c5) BETWEEN (t0.c5) AND (t0.c5)) END) ORDER BY (- ((((t0.c2, t0.c70, 0xffffffffd95718b4))>=((vt0.c0, 9.38923293E8, t0.c5))))) ASC  NULLS LAST, ((((t0.c1 IN ())))>((CAST(vt0.c1 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c70))  WHEN 0.7989005276995813 THEN (+ (t0.c2)) WHEN (t0.c3 IN ()) THEN load_extension(vt0.c0) WHEN t0.c1 THEN ((t0.c5) BETWEEN (t0.c5) AND (t0.c5)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (- ((((t0.c2, t0.c70, 0xffffffffd95718b4))>=((vt0.c0, 9.38923293E8, t0.c5))))) ASC  NULLS LAST, ((((t0.c1 IN ())))>((CAST(vt0.c1 AS INTEGER))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))=(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))=(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))=(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))=(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))=(vt1.c1)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 COLLATE NOCASE THEN ((((t0.c70)OR(vt0.c1)))OR(t0.c5)) WHEN TRIM(DISTINCT vt0.c0) THEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) END) ORDER BY ((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(t0.c2)))AND(vt0.c0)))*(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 COLLATE NOCASE THEN ((((t0.c70)OR(vt0.c1)))OR(t0.c5)) WHEN TRIM(DISTINCT vt0.c0) THEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(t0.c2)))AND(vt0.c0)))*(t0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 COLLATE NOCASE THEN ((((t0.c70)OR(vt0.c1)))OR(t0.c5)) WHEN TRIM(DISTINCT vt0.c0) THEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) END) ORDER BY ((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(t0.c2)))AND(vt0.c0)))*(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 COLLATE NOCASE THEN ((((t0.c70)OR(vt0.c1)))OR(t0.c5)) WHEN TRIM(DISTINCT vt0.c0) THEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(t0.c2)))AND(vt0.c0)))*(t0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 COLLATE NOCASE THEN ((((t0.c70)OR(vt0.c1)))OR(t0.c5)) WHEN TRIM(DISTINCT vt0.c0) THEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) END) ORDER BY ((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(t0.c2)))AND(vt0.c0)))*(t0.c0));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c3)) NOT BETWEEN ((CAST(t0.c4 AS REAL))) AND ((COALESCE(vt1.c1, t0.c2))))) ORDER BY ((((t0.c0) IS FALSE)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t0.c3)) NOT BETWEEN ((CAST(t0.c4 AS REAL))) AND ((COALESCE(vt1.c1, t0.c2))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c0) IS FALSE)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c3)) NOT BETWEEN ((CAST(t0.c4 AS REAL))) AND ((COALESCE(vt1.c1, t0.c2))))) ORDER BY ((((t0.c0) IS FALSE)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t0.c3)) NOT BETWEEN ((CAST(t0.c4 AS REAL))) AND ((COALESCE(vt1.c1, t0.c2))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c0) IS FALSE)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c3)) NOT BETWEEN ((CAST(t0.c4 AS REAL))) AND ((COALESCE(vt1.c1, t0.c2))))) ORDER BY ((((t0.c0) IS FALSE)) IS FALSE);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c70 AS TEXT))LIKE((t0.c2 IN ()))) INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) IS TRUE) WHERE (((CASE WHEN vt1.c1 THEN t0.c3 ELSE vt0.c1 END)IS NOT(((t0.c1) IS FALSE)))) ORDER BY ((((((((t0.c2)AND(vt0.c1)))AND(t0.c4)))OR(CAST(0.8012190705240412 AS BLOB))))AND(((t0.c3)&(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN t0.c3 ELSE vt0.c1 END)IS NOT(((t0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c70 AS TEXT))LIKE((t0.c2 IN ()))) INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) IS TRUE) ORDER BY ((((((((t0.c2)AND(vt0.c1)))AND(t0.c4)))OR(CAST(0.8012190705240412 AS BLOB))))AND(((t0.c3)&(t0.c2)))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c70 AS TEXT))LIKE((t0.c2 IN ()))) INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) IS TRUE) WHERE (((CASE WHEN vt1.c1 THEN t0.c3 ELSE vt0.c1 END)IS NOT(((t0.c1) IS FALSE)))) ORDER BY ((((((((t0.c2)AND(vt0.c1)))AND(t0.c4)))OR(CAST(0.8012190705240412 AS BLOB))))AND(((t0.c3)&(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN t0.c3 ELSE vt0.c1 END)IS NOT(((t0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c70 AS TEXT))LIKE((t0.c2 IN ()))) INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) IS TRUE) ORDER BY ((((((((t0.c2)AND(vt0.c1)))AND(t0.c4)))OR(CAST(0.8012190705240412 AS BLOB))))AND(((t0.c3)&(t0.c2)))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c70 AS TEXT))LIKE((t0.c2 IN ()))) INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) IS TRUE) WHERE (((CASE WHEN vt1.c1 THEN t0.c3 ELSE vt0.c1 END)IS NOT(((t0.c1) IS FALSE)))) ORDER BY ((((((((t0.c2)AND(vt0.c1)))AND(t0.c4)))OR(CAST(0.8012190705240412 AS BLOB))))AND(((t0.c3)&(t0.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c5)))AND(json_array_length(t0.c3))));
SELECT SUM(count) FROM (SELECT ((((((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c5)))AND(json_array_length(t0.c3)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c5)))AND(json_array_length(t0.c3))));
SELECT SUM(count) FROM (SELECT ((((((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c5)))AND(json_array_length(t0.c3)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c70) NOT BETWEEN (t0.c1) AND (t0.c5)))AND(json_array_length(t0.c3))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (NULL) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c70) AND (t0.c1)))OR((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c70)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c4) NOT BETWEEN (t0.c70) AND (t0.c1)))OR((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c70))))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (NULL) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c70) AND (t0.c1)))OR((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c70)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c4) NOT BETWEEN (t0.c70) AND (t0.c1)))OR((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c70))))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (NULL) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c70) AND (t0.c1)))OR((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c70)))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((t0.c2))!=((t0.c2)))))>(((~ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2))!=((t0.c2)))))>(((~ (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((t0.c2))!=((t0.c2)))))>(((~ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2))!=((t0.c2)))))>(((~ (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((t0.c2))!=((t0.c2)))))>(((~ (vt0.c1))))));
SELECT * FROM vt0, t0 WHERE (((x'')>((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>((+ (t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((x'')>((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>((+ (t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((x'')>((+ (t0.c2)))));
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY) ORDER BY CASE (NOT (vt0.c0))  WHEN (((vt0.c1))<=((vt0.c0))) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) END, ((IFNULL(DISTINCT vt0.c0, vt0.c1))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))), (~ ((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c0))  WHEN (((vt0.c1))<=((vt0.c0))) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) END, ((IFNULL(DISTINCT vt0.c0, vt0.c1))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))), (~ ((+ (vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY) ORDER BY CASE (NOT (vt0.c0))  WHEN (((vt0.c1))<=((vt0.c0))) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) END, ((IFNULL(DISTINCT vt0.c0, vt0.c1))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))), (~ ((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c0))  WHEN (((vt0.c1))<=((vt0.c0))) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) END, ((IFNULL(DISTINCT vt0.c0, vt0.c1))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))), (~ ((+ (vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY) ORDER BY CASE (NOT (vt0.c0))  WHEN (((vt0.c1))<=((vt0.c0))) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) END, ((IFNULL(DISTINCT vt0.c0, vt0.c1))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))), (~ ((+ (vt0.c1)))) ASC;
SELECT * FROM t0, vt1, vt0 WHERE (((((x'6b8d')OR(t0.c4)))<=(1595090988))) ORDER BY CAST(((t0.c0)LIKE(vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'6b8d')OR(t0.c4)))<=(1595090988))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(((t0.c0)LIKE(vt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((((x'6b8d')OR(t0.c4)))<=(1595090988))) ORDER BY CAST(((t0.c0)LIKE(vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'6b8d')OR(t0.c4)))<=(1595090988))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(((t0.c0)LIKE(vt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((((x'6b8d')OR(t0.c4)))<=(1595090988))) ORDER BY CAST(((t0.c0)LIKE(vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c70)>(t0.c5)) IN ())) ORDER BY ((CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END) NOT BETWEEN (LOWER(t0.c70)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c70)>(t0.c5)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END) NOT BETWEEN (LOWER(t0.c70)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c70)>(t0.c5)) IN ())) ORDER BY ((CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END) NOT BETWEEN (LOWER(t0.c70)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c70)>(t0.c5)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END) NOT BETWEEN (LOWER(t0.c70)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c70)>(t0.c5)) IN ())) ORDER BY ((CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END) NOT BETWEEN (LOWER(t0.c70)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY CASE LIKELIHOOD(vt0.c0, 0.7138277244021783)  WHEN (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CASE LIKELIHOOD(vt0.c0, 0.7138277244021783)  WHEN (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY CASE LIKELIHOOD(vt0.c0, 0.7138277244021783)  WHEN (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CASE LIKELIHOOD(vt0.c0, 0.7138277244021783)  WHEN (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY CASE LIKELIHOOD(vt0.c0, 0.7138277244021783)  WHEN (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY json_insert((t0.c70 IN ()), vt0.c0, ((0.8107720789808943)%(vt1.c0)), t0.c1 COLLATE NOCASE, CASE vt1.c0  WHEN t0.c4 THEN t0.c2 ELSE t0.c4 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY json_insert((t0.c70 IN ()), vt0.c0, ((0.8107720789808943)%(vt1.c0)), t0.c1 COLLATE NOCASE, CASE vt1.c0  WHEN t0.c4 THEN t0.c2 ELSE t0.c4 END) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY json_insert((t0.c70 IN ()), vt0.c0, ((0.8107720789808943)%(vt1.c0)), t0.c1 COLLATE NOCASE, CASE vt1.c0  WHEN t0.c4 THEN t0.c2 ELSE t0.c4 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY json_insert((t0.c70 IN ()), vt0.c0, ((0.8107720789808943)%(vt1.c0)), t0.c1 COLLATE NOCASE, CASE vt1.c0  WHEN t0.c4 THEN t0.c2 ELSE t0.c4 END) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c70))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c70))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c70))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c70))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c70))) NOTNULL));
SELECT * FROM t0 WHERE (LIKE(t0.c0, t0.c5) COLLATE NOCASE) ORDER BY ((((t0.c3) ISNULL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(t0.c0, t0.c5) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c3) ISNULL)) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (LIKE(t0.c0, t0.c5) COLLATE NOCASE) ORDER BY ((((t0.c3) ISNULL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(t0.c0, t0.c5) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c3) ISNULL)) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (LIKE(t0.c0, t0.c5) COLLATE NOCASE) ORDER BY ((((t0.c3) ISNULL)) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 INDEXED BY i68, vt0, t0 WHERE (((COALESCE(DISTINCT t0.c0, vt1.c1, vt0.c0, t0.c0))+(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT t0.c0, vt1.c1, vt0.c0, t0.c0))+(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1 INDEXED BY i68, vt0, t0);
SELECT COUNT(*) FROM vt1 INDEXED BY i68, vt0, t0 WHERE (((COALESCE(DISTINCT t0.c0, vt1.c1, vt0.c0, t0.c0))+(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT t0.c0, vt1.c1, vt0.c0, t0.c0))+(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1 INDEXED BY i68, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((json_quote(vt1.c1))<>(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(vt1.c1))!=(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((json_quote(vt1.c1))<>(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(vt1.c1))!=(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON CAST(((t0.c3) BETWEEN (vt1.c1) AND (vt0.c0)) AS NUMERIC) WHERE (((vt1.c0)%((NOT (t0.c70))))) ORDER BY (((+ (t0.c5)))>((t0.c5 IN ()))) DESC, (((('-847591204')OR(x'')))AND(json_patch(t0.c1, vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)%((NOT (t0.c70))))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON CAST(((t0.c3) BETWEEN (vt1.c1) AND (vt0.c0)) AS NUMERIC) ORDER BY (((+ (t0.c5)))>((t0.c5 IN ()))) DESC, (((('-847591204')OR(x'')))AND(json_patch(t0.c1, vt1.c1))));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON CAST(((t0.c3) BETWEEN (vt1.c1) AND (vt0.c0)) AS NUMERIC) WHERE (((vt1.c0)%((NOT (t0.c70))))) ORDER BY (((+ (t0.c5)))>((t0.c5 IN ()))) DESC, (((('-847591204')OR(x'')))AND(json_patch(t0.c1, vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)%((NOT (t0.c70))))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON CAST(((t0.c3) BETWEEN (vt1.c1) AND (vt0.c0)) AS NUMERIC) ORDER BY (((+ (t0.c5)))>((t0.c5 IN ()))) DESC, (((('-847591204')OR(x'')))AND(json_patch(t0.c1, vt1.c1))));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON CAST(((t0.c3) BETWEEN (vt1.c1) AND (vt0.c0)) AS NUMERIC) WHERE (((vt1.c0)%((NOT (t0.c70))))) ORDER BY (((+ (t0.c5)))>((t0.c5 IN ()))) DESC, (((('-847591204')OR(x'')))AND(json_patch(t0.c1, vt1.c1)));
SELECT COUNT(*) FROM vt0 WHERE (-8.2358639E7) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOTNULL)) AND ('{s[z')) ASC;
SELECT SUM(count) FROM (SELECT ((-8.2358639E7) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOTNULL)) AND ('{s[z')) ASC);
SELECT COUNT(*) FROM vt0 WHERE (-8.2358639E7) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOTNULL)) AND ('{s[z')) ASC;
SELECT SUM(count) FROM (SELECT ((-8.2358639E7) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOTNULL)) AND ('{s[z')) ASC);
SELECT COUNT(*) FROM vt0 WHERE (-8.2358639E7) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOTNULL)) AND ('{s[z')) ASC;
SELECT * FROM t0, vt1, vt0 WHERE (CASE ((((vt0.c0)AND(t0.c1)))AND(t0.c4))  WHEN (~ (0x79196858)) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt1.c0)) THEN t0.c2 WHEN t0.c0 COLLATE RTRIM THEN '2016411138' ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(t0.c1)))AND(t0.c4))  WHEN (~ (0x79196858)) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt1.c0)) THEN t0.c2 WHEN t0.c0 COLLATE RTRIM THEN '2016411138' ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (CASE ((((vt0.c0)AND(t0.c1)))AND(t0.c4))  WHEN (~ (0x79196858)) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt1.c0)) THEN t0.c2 WHEN t0.c0 COLLATE RTRIM THEN '2016411138' ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(t0.c1)))AND(t0.c4))  WHEN (~ (0x79196858)) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt1.c0)) THEN t0.c2 WHEN t0.c0 COLLATE RTRIM THEN '2016411138' ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (CASE ((((vt0.c0)AND(t0.c1)))AND(t0.c4))  WHEN (~ (0x79196858)) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt1.c0)) THEN t0.c2 WHEN t0.c0 COLLATE RTRIM THEN '2016411138' ELSE ((vt0.c0) NOT NULL) END);
SELECT * FROM t0, vt1 WHERE (((((t0.c5)-(t0.c4))) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c5 ELSE t0.c1 END) AND (((t0.c4) BETWEEN (NULL) AND (vt1.c1))))) ORDER BY ((TRIM(t0.c1))+(((vt1.c0)IS NOT(t0.c4)))), x'' COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c5)-(t0.c4))) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c5 ELSE t0.c1 END) AND (((t0.c4) BETWEEN (NULL) AND (vt1.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1 ORDER BY ((TRIM(t0.c1))+(((vt1.c0)IS NOT(t0.c4)))), x'' COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((t0.c5)-(t0.c4))) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c5 ELSE t0.c1 END) AND (((t0.c4) BETWEEN (NULL) AND (vt1.c1))))) ORDER BY ((TRIM(t0.c1))+(((vt1.c0)IS NOT(t0.c4)))), x'' COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c5)-(t0.c4))) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c5 ELSE t0.c1 END) AND (((t0.c4) BETWEEN (NULL) AND (vt1.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1 ORDER BY ((TRIM(t0.c1))+(((vt1.c0)IS NOT(t0.c4)))), x'' COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((t0.c5)-(t0.c4))) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c5 ELSE t0.c1 END) AND (((t0.c4) BETWEEN (NULL) AND (vt1.c1))))) ORDER BY ((TRIM(t0.c1))+(((vt1.c0)IS NOT(t0.c4)))), x'' COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((json_type(t0.c2)) NOTNULL)) ORDER BY (+ (0.13400688568532904)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_type(t0.c2)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (+ (0.13400688568532904)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((json_type(t0.c2)) NOTNULL)) ORDER BY (+ (0.13400688568532904)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_type(t0.c2)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (+ (0.13400688568532904)) ASC  NULLS FIRST);
SELECT * FROM vt1, t0, vt0 WHERE (0.993905794311503) ORDER BY (((- (vt0.c0)))==(((t0.c0)-(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.993905794311503) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((- (vt0.c0)))==(((t0.c0)-(t0.c1)))) ASC);
SELECT * FROM vt1, t0, vt0 WHERE (0.993905794311503) ORDER BY (((- (vt0.c0)))==(((t0.c0)-(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.993905794311503) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((- (vt0.c0)))==(((t0.c0)-(t0.c1)))) ASC);
SELECT * FROM vt1, t0, vt0 WHERE (0.993905794311503) ORDER BY (((- (vt0.c0)))==(((t0.c0)-(t0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((((((((((t0.c2 IN (t0.c1, t0.c70)))OR((t0.c5 IN ()))))OR((((t0.c4)) BETWEEN ((vt0.c1)) AND ((0Xffffffff87d163d3))))))OR((NOT (t0.c1)))))AND((vt1.c1 IN ()))))AND(((vt0.c0)<(vt1.c0)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((((((((t0.c2 IN (t0.c1, t0.c70)))OR((t0.c5 IN ()))))OR((((t0.c4)) BETWEEN ((vt0.c1)) AND ((0xffffffff87d163d3))))))OR((NOT (t0.c1)))))AND((vt1.c1 IN ()))))AND(((vt0.c0)<(vt1.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((((((((((t0.c2 IN (t0.c1, t0.c70)))OR((t0.c5 IN ()))))OR((((t0.c4)) BETWEEN ((vt0.c1)) AND ((0Xffffffff87d163d3))))))OR((NOT (t0.c1)))))AND((vt1.c1 IN ()))))AND(((vt0.c0)<(vt1.c0)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((((((((t0.c2 IN (t0.c1, t0.c70)))OR((t0.c5 IN ()))))OR((((t0.c4)) BETWEEN ((vt0.c1)) AND ((0xffffffff87d163d3))))))OR((NOT (t0.c1)))))AND((vt1.c1 IN ()))))AND(((vt0.c0)<(vt1.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((((((((((t0.c2 IN (t0.c1, t0.c70)))OR((t0.c5 IN ()))))OR((((t0.c4)) BETWEEN ((vt0.c1)) AND ((0Xffffffff87d163d3))))))OR((NOT (t0.c1)))))AND((vt1.c1 IN ()))))AND(((vt0.c0)<(vt1.c0)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((- ((((('-877098615')OR(vt0.c0)))AND(t0.c0))))) ORDER BY ((((((((((t0.c5)OR(t0.c0)))OR(t0.c3)))AND(vt0.c1)))OR(t0.c4))) IS TRUE) DESC  NULLS LAST, (((((vt1.c0)|(t0.c3))))=((((((((((0.10030732446934587)AND(vt0.c1)))AND(1.96892145E9)))AND(vt0.c1)))OR(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((('-877098615')OR(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((((((t0.c5)OR(t0.c0)))OR(t0.c3)))AND(vt0.c1)))OR(t0.c4))) IS TRUE) DESC  NULLS LAST, (((((vt1.c0)|(t0.c3))))==((((((((((0.10030732446934587)AND(vt0.c1)))AND(1.96892145E9)))AND(vt0.c1)))OR(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((- ((((('-877098615')OR(vt0.c0)))AND(t0.c0))))) ORDER BY ((((((((((t0.c5)OR(t0.c0)))OR(t0.c3)))AND(vt0.c1)))OR(t0.c4))) IS TRUE) DESC  NULLS LAST, (((((vt1.c0)|(t0.c3))))=((((((((((0.10030732446934587)AND(vt0.c1)))AND(1.96892145E9)))AND(vt0.c1)))OR(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((('-877098615')OR(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((((((t0.c5)OR(t0.c0)))OR(t0.c3)))AND(vt0.c1)))OR(t0.c4))) IS TRUE) DESC  NULLS LAST, (((((vt1.c0)|(t0.c3))))==((((((((((0.10030732446934587)AND(vt0.c1)))AND(1.96892145E9)))AND(vt0.c1)))OR(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((- ((((('-877098615')OR(vt0.c0)))AND(t0.c0))))) ORDER BY ((((((((((t0.c5)OR(t0.c0)))OR(t0.c3)))AND(vt0.c1)))OR(t0.c4))) IS TRUE) DESC  NULLS LAST, (((((vt1.c0)|(t0.c3))))=((((((((((0.10030732446934587)AND(vt0.c1)))AND(1.96892145E9)))AND(vt0.c1)))OR(vt0.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((((t0.c4)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))=((((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) WHERE (((t0.c4 COLLATE BINARY)*(((t0.c1) ISNULL)))) ORDER BY (((NULL)-(0.42239962190245284)) IN (((t0.c2) BETWEEN (t0.c4) AND (t0.c5)))) ASC  NULLS LAST, (((t0.c4)*(t0.c70)) IN ((t0.c5 IN (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c4 COLLATE BINARY)*(((t0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((((t0.c4)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))==((((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) ORDER BY (((NULL)-(0.42239962190245284)) IN (((t0.c2) BETWEEN (t0.c4) AND (t0.c5)))) ASC  NULLS LAST, (((t0.c4)*(t0.c70)) IN ((t0.c5 IN (vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((((t0.c4)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))=((((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) WHERE (((t0.c4 COLLATE BINARY)*(((t0.c1) ISNULL)))) ORDER BY (((NULL)-(0.42239962190245284)) IN (((t0.c2) BETWEEN (t0.c4) AND (t0.c5)))) ASC  NULLS LAST, (((t0.c4)*(t0.c70)) IN ((t0.c5 IN (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c4 COLLATE BINARY)*(((t0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((((t0.c4)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))==((((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) ORDER BY (((NULL)-(0.42239962190245284)) IN (((t0.c2) BETWEEN (t0.c4) AND (t0.c5)))) ASC  NULLS LAST, (((t0.c4)*(t0.c70)) IN ((t0.c5 IN (vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((((t0.c4)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))=((((t0.c5)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) WHERE (((t0.c4 COLLATE BINARY)*(((t0.c1) ISNULL)))) ORDER BY (((NULL)-(0.42239962190245284)) IN (((t0.c2) BETWEEN (t0.c4) AND (t0.c5)))) ASC  NULLS LAST, (((t0.c4)*(t0.c70)) IN ((t0.c5 IN (vt0.c1)))) ASC;
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((t0.c3)|(t0.c70)))))AND(((((t0.c3)OR(t0.c3)))AND(t0.c2)))) WHERE ((((((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((t0.c3)|(t0.c70)))))AND(((((t0.c3)OR(t0.c3)))AND(t0.c2)))));
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((t0.c3)|(t0.c70)))))AND(((((t0.c3)OR(t0.c3)))AND(t0.c2)))) WHERE ((((((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((t0.c3)|(t0.c70)))))AND(((((t0.c3)OR(t0.c3)))AND(t0.c2)))));
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 FULL OUTER JOIN vt1 ON ((((((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((t0.c3)|(t0.c70)))))AND(((((t0.c3)OR(t0.c3)))AND(t0.c2)))) WHERE ((((((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON x'df93' WHERE (CASE 0X28aef9ec  WHEN (('-1976314483')>(t0.c3)) THEN ((t0.c4) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE 0X28aef9ec  WHEN (('-1976314483')>(t0.c3)) THEN ((t0.c4) NOTNULL) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON x'df93');
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON x'df93' WHERE (CASE 0X28aef9ec  WHEN (('-1976314483')>(t0.c3)) THEN ((t0.c4) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE 0X28aef9ec  WHEN (('-1976314483')>(t0.c3)) THEN ((t0.c4) NOTNULL) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON x'df93');
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON x'df93' WHERE (CASE 0X28aef9ec  WHEN (('-1976314483')>(t0.c3)) THEN ((t0.c4) NOTNULL) END);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (((~ (vt0.c1))) BETWEEN (x'8c95') AND (LIKELY(DISTINCT t0.c1))) WHERE (t0.c70 COLLATE BINARY) ORDER BY CASE WHEN (t0.c70 IN ()) THEN LOWER(t0.c0) ELSE (- (t0.c3)) END  NULLS LAST, (t0.c3 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c70 COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON (((~ (vt0.c1))) BETWEEN (x'8c95') AND (LIKELY(DISTINCT t0.c1))) ORDER BY CASE WHEN (t0.c70 IN ()) THEN LOWER(t0.c0) ELSE (- (t0.c3)) END  NULLS LAST, (t0.c3 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (((~ (vt0.c1))) BETWEEN (x'8c95') AND (LIKELY(DISTINCT t0.c1))) WHERE (t0.c70 COLLATE BINARY) ORDER BY CASE WHEN (t0.c70 IN ()) THEN LOWER(t0.c0) ELSE (- (t0.c3)) END  NULLS LAST, (t0.c3 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c70 COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON (((~ (vt0.c1))) BETWEEN (x'8c95') AND (LIKELY(DISTINCT t0.c1))) ORDER BY CASE WHEN (t0.c70 IN ()) THEN LOWER(t0.c0) ELSE (- (t0.c3)) END  NULLS LAST, (t0.c3 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (((~ (vt0.c1))) BETWEEN (x'8c95') AND (LIKELY(DISTINCT t0.c1))) WHERE (t0.c70 COLLATE BINARY) ORDER BY CASE WHEN (t0.c70 IN ()) THEN LOWER(t0.c0) ELSE (- (t0.c3)) END  NULLS LAST, (t0.c3 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((LIKELY(DISTINCT t0.c70)) NOT BETWEEN ('') AND (((vt0.c1)!=(t0.c70)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT t0.c70)) NOT BETWEEN ('') AND (((vt0.c1)<>(t0.c70))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((LIKELY(DISTINCT t0.c70)) NOT BETWEEN ('') AND (((vt0.c1)!=(t0.c70)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT t0.c70)) NOT BETWEEN ('') AND (((vt0.c1)<>(t0.c70))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((LIKELY(DISTINCT t0.c70)) NOT BETWEEN ('') AND (((vt0.c1)!=(t0.c70)))));
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN ((((t0.c70)OR(vt0.c0)))AND(t0.c4)) ELSE ABS(t0.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN ((((t0.c70)OR(vt0.c0)))AND(t0.c4)) ELSE ABS(t0.c5) END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN ((((t0.c70)OR(vt0.c0)))AND(t0.c4)) ELSE ABS(t0.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN ((((t0.c70)OR(vt0.c0)))AND(t0.c4)) ELSE ABS(t0.c5) END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN ((((t0.c70)OR(vt0.c0)))AND(t0.c4)) ELSE ABS(t0.c5) END);
SELECT ALL * FROM vt1, t0, vt0 WHERE (UNLIKELY(DISTINCT vt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (UNLIKELY(DISTINCT vt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (UNLIKELY(DISTINCT vt1.c1 COLLATE RTRIM));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) IS FALSE)) ORDER BY (~ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, vt1.c1;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, vt1.c1);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) IS FALSE)) ORDER BY (~ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, vt1.c1;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, vt1.c1);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) IS FALSE)) ORDER BY (~ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, vt1.c1;
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON ((t0.c5) BETWEEN (CAST(t0.c4 AS NUMERIC)) AND (t0.c4 COLLATE NOCASE)) WHERE (CAST(CASE t0.c4  WHEN vt1.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c4 WHEN t0.c70 THEN t0.c70 WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY (((- (t0.c4))) IS FALSE)  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN CASE 0.4511260945142904  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c3 END THEN ((((vt1.c1)OR(t0.c2)))AND(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c4  WHEN vt1.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c4 WHEN t0.c70 THEN t0.c70 WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON ((t0.c5) BETWEEN (CAST(t0.c4 AS NUMERIC)) AND (t0.c4 COLLATE NOCASE)) ORDER BY (((- (t0.c4))) IS FALSE)  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN CASE 0.4511260945142904  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c3 END THEN ((((vt1.c1)OR(t0.c2)))AND(vt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON ((t0.c5) BETWEEN (CAST(t0.c4 AS NUMERIC)) AND (t0.c4 COLLATE NOCASE)) WHERE (CAST(CASE t0.c4  WHEN vt1.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c4 WHEN t0.c70 THEN t0.c70 WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY (((- (t0.c4))) IS FALSE)  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN CASE 0.4511260945142904  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c3 END THEN ((((vt1.c1)OR(t0.c2)))AND(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c4  WHEN vt1.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c4 WHEN t0.c70 THEN t0.c70 WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON ((t0.c5) BETWEEN (CAST(t0.c4 AS NUMERIC)) AND (t0.c4 COLLATE NOCASE)) ORDER BY (((- (t0.c4))) IS FALSE)  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN CASE 0.4511260945142904  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c3 END THEN ((((vt1.c1)OR(t0.c2)))AND(vt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON ((t0.c5) BETWEEN (CAST(t0.c4 AS NUMERIC)) AND (t0.c4 COLLATE NOCASE)) WHERE (CAST(CASE t0.c4  WHEN vt1.c1 THEN t0.c4 WHEN t0.c5 THEN t0.c4 WHEN t0.c70 THEN t0.c70 WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY (((- (t0.c4))) IS FALSE)  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN CASE 0.4511260945142904  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c3 END THEN ((((vt1.c1)OR(t0.c2)))AND(vt1.c0)) END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN (((vt1.c1, vt1.c1, vt1.c1))<=((vt1.c0, vt1.c1, vt1.c1))) THEN vt1.c0 WHEN ((vt1.c1) ISNULL) THEN ((((vt1.c0)AND(vt1.c1)))OR('-614237350')) WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END WHEN (NOT (vt1.c0)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN (((vt1.c1, vt1.c1, vt1.c1))<=((vt1.c0, vt1.c1, vt1.c1))) THEN vt1.c0 WHEN ((vt1.c1) ISNULL) THEN ((((vt1.c0)AND(vt1.c1)))OR('-614237350')) WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END WHEN (NOT (vt1.c0)) THEN x'' END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN (((vt1.c1, vt1.c1, vt1.c1))<=((vt1.c0, vt1.c1, vt1.c1))) THEN vt1.c0 WHEN ((vt1.c1) ISNULL) THEN ((((vt1.c0)AND(vt1.c1)))OR('-614237350')) WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END WHEN (NOT (vt1.c0)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN (((vt1.c1, vt1.c1, vt1.c1))<=((vt1.c0, vt1.c1, vt1.c1))) THEN vt1.c0 WHEN ((vt1.c1) ISNULL) THEN ((((vt1.c0)AND(vt1.c1)))OR('-614237350')) WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END WHEN (NOT (vt1.c0)) THEN x'' END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN (((vt1.c1, vt1.c1, vt1.c1))<=((vt1.c0, vt1.c1, vt1.c1))) THEN vt1.c0 WHEN ((vt1.c1) ISNULL) THEN ((((vt1.c0)AND(vt1.c1)))OR('-614237350')) WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END WHEN (NOT (vt1.c0)) THEN x'' END);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c1)||(vt1.c1))))) ORDER BY json_type(((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1)||(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY json_type(((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c1)||(vt1.c1))))) ORDER BY json_type(((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1)||(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY json_type(((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c1)||(vt1.c1))))) ORDER BY json_type(((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (0.529154363365024) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.529154363365024) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (0.529154363365024) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.529154363365024) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (0.529154363365024) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c1 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0) BETWEEN (t0.c70) AND (vt1.c1))) ISNULL)) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c3)))AND(CAST(t0.c3 AS REAL))))OR(TYPEOF(DISTINCT t0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t0.c70) AND (vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c3)))AND(CAST(t0.c3 AS REAL))))OR(TYPEOF(DISTINCT t0.c4)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0) BETWEEN (t0.c70) AND (vt1.c1))) ISNULL)) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c3)))AND(CAST(t0.c3 AS REAL))))OR(TYPEOF(DISTINCT t0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t0.c70) AND (vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c3)))AND(CAST(t0.c3 AS REAL))))OR(TYPEOF(DISTINCT t0.c4)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0) BETWEEN (t0.c70) AND (vt1.c1))) ISNULL)) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c3)))AND(CAST(t0.c3 AS REAL))))OR(TYPEOF(DISTINCT t0.c4)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON ((((((((CAST(NULL AS BLOB))OR(vt0.c0 COLLATE RTRIM)))AND((((t0.c1))==((0x4ce06d91))))))AND((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))OR(((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)))) WHERE ((+ (((t0.c3)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c3)%(t0.c2))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((((((((CAST(NULL AS BLOB))OR(vt0.c0 COLLATE RTRIM)))AND((((t0.c1))==((0X4ce06d91))))))AND((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))OR(((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)))));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON ((((((((CAST(NULL AS BLOB))OR(vt0.c0 COLLATE RTRIM)))AND((((t0.c1))==((0x4ce06d91))))))AND((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))OR(((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)))) WHERE ((+ (((t0.c3)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c3)%(t0.c2))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((((((((CAST(NULL AS BLOB))OR(vt0.c0 COLLATE RTRIM)))AND((((t0.c1))==((0X4ce06d91))))))AND((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))OR(((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)))));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON ((((((((CAST(NULL AS BLOB))OR(vt0.c0 COLLATE RTRIM)))AND((((t0.c1))==((0x4ce06d91))))))AND((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))OR(((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)))) WHERE ((+ (((t0.c3)%(t0.c2)))));
SELECT * FROM vt1, t0 WHERE (((((NULL)AND(CAST(t0.c1 AS BLOB))))AND('*')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(CAST(t0.c1 AS BLOB))))AND('*'))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((NULL)AND(CAST(t0.c1 AS BLOB))))AND('*')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(CAST(t0.c1 AS BLOB))))AND('*'))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((NULL)AND(CAST(t0.c1 AS BLOB))))AND('*')));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)==(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1)==(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)==(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1)==(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)==(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 COLLATE BINARY AS NUMERIC)) ORDER BY CASE ((((t0.c1)AND(t0.c4)))OR(t0.c70))  WHEN x'f443' THEN (((t0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c5))) WHEN ((x'') ISNULL) THEN (((t0.c0, t0.c70, '-72711343')) BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c3, t0.c70, t0.c3))) WHEN t0.c70 COLLATE RTRIM THEN ((((t0.c70)OR(t0.c1)))AND(t0.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c1)AND(t0.c4)))OR(t0.c70))  WHEN x'f443' THEN (((t0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c5))) WHEN ((x'') ISNULL) THEN (((t0.c0, t0.c70, '-72711343')) BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c3, t0.c70, t0.c3))) WHEN t0.c70 COLLATE RTRIM THEN ((((t0.c70)OR(t0.c1)))AND(t0.c3)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 COLLATE BINARY AS NUMERIC)) ORDER BY CASE ((((t0.c1)AND(t0.c4)))OR(t0.c70))  WHEN x'f443' THEN (((t0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c5))) WHEN ((x'') ISNULL) THEN (((t0.c0, t0.c70, '-72711343')) BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c3, t0.c70, t0.c3))) WHEN t0.c70 COLLATE RTRIM THEN ((((t0.c70)OR(t0.c1)))AND(t0.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c1)AND(t0.c4)))OR(t0.c70))  WHEN x'f443' THEN (((t0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c5))) WHEN ((x'') ISNULL) THEN (((t0.c0, t0.c70, '-72711343')) BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c3, t0.c70, t0.c3))) WHEN t0.c70 COLLATE RTRIM THEN ((((t0.c70)OR(t0.c1)))AND(t0.c3)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 COLLATE BINARY AS NUMERIC)) ORDER BY CASE ((((t0.c1)AND(t0.c4)))OR(t0.c70))  WHEN x'f443' THEN (((t0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c5))) WHEN ((x'') ISNULL) THEN (((t0.c0, t0.c70, '-72711343')) BETWEEN ((t0.c3, t0.c4, t0.c1)) AND ((t0.c3, t0.c70, t0.c3))) WHEN t0.c70 COLLATE RTRIM THEN ((((t0.c70)OR(t0.c1)))AND(t0.c3)) END  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ())) ORDER BY CASE WHEN ((t0.c2)-(t0.c2)) THEN t0.c5 COLLATE BINARY ELSE t0.c70 COLLATE BINARY END  NULLS FIRST, ((CAST(vt1.c1 AS REAL))OR(((((t0.c1)AND(NULL)))AND(t0.c3)))) DESC, CAST(((t0.c1)>>(NULL)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((t0.c2)-(t0.c2)) THEN t0.c5 COLLATE BINARY ELSE t0.c70 COLLATE BINARY END  NULLS FIRST, ((CAST(vt1.c1 AS REAL))OR(((((t0.c1)AND(NULL)))AND(t0.c3)))) DESC, CAST(((t0.c1)>>(NULL)) AS TEXT));
SELECT * FROM t0, vt1 WHERE (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ())) ORDER BY CASE WHEN ((t0.c2)-(t0.c2)) THEN t0.c5 COLLATE BINARY ELSE t0.c70 COLLATE BINARY END  NULLS FIRST, ((CAST(vt1.c1 AS REAL))OR(((((t0.c1)AND(NULL)))AND(t0.c3)))) DESC, CAST(((t0.c1)>>(NULL)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((t0.c2)-(t0.c2)) THEN t0.c5 COLLATE BINARY ELSE t0.c70 COLLATE BINARY END  NULLS FIRST, ((CAST(vt1.c1 AS REAL))OR(((((t0.c1)AND(NULL)))AND(t0.c3)))) DESC, CAST(((t0.c1)>>(NULL)) AS TEXT));
SELECT * FROM t0, vt1 WHERE (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ())) ORDER BY CASE WHEN ((t0.c2)-(t0.c2)) THEN t0.c5 COLLATE BINARY ELSE t0.c70 COLLATE BINARY END  NULLS FIRST, ((CAST(vt1.c1 AS REAL))OR(((((t0.c1)AND(NULL)))AND(t0.c3)))) DESC, CAST(((t0.c1)>>(NULL)) AS TEXT);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c3 END))<=((t0.c4))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN t0.c3 END))<=((t0.c4)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c3 END))<=((t0.c4))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN t0.c3 END))<=((t0.c4)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c3 END))<=((t0.c4))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c4 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c4 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c4 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c4 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c4 IN ()) COLLATE BINARY);
SELECT * FROM vt0, t0 WHERE ((NULL IN (((vt0.c1) BETWEEN (0.8494262568245035) AND (t0.c2))))) ORDER BY (CASE t0.c70  WHEN t0.c4 THEN t0.c70 WHEN vt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c4 END IN ()) ASC  NULLS LAST, (((((t0.c70) NOTNULL)))>=(((+ (vt0.c0))))), CAST((+ (t0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN (((vt0.c1) BETWEEN (0.8494262568245035) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE t0.c70  WHEN t0.c4 THEN t0.c70 WHEN vt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c4 END IN ()) ASC  NULLS LAST, (((((t0.c70) NOTNULL)))>=(((+ (vt0.c0))))), CAST((+ (t0.c2)) AS BLOB)  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((NULL IN (((vt0.c1) BETWEEN (0.8494262568245035) AND (t0.c2))))) ORDER BY (CASE t0.c70  WHEN t0.c4 THEN t0.c70 WHEN vt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c4 END IN ()) ASC  NULLS LAST, (((((t0.c70) NOTNULL)))>=(((+ (vt0.c0))))), CAST((+ (t0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN (((vt0.c1) BETWEEN (0.8494262568245035) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE t0.c70  WHEN t0.c4 THEN t0.c70 WHEN vt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c4 END IN ()) ASC  NULLS LAST, (((((t0.c70) NOTNULL)))>=(((+ (vt0.c0))))), CAST((+ (t0.c2)) AS BLOB)  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((NULL IN (((vt0.c1) BETWEEN (0.8494262568245035) AND (t0.c2))))) ORDER BY (CASE t0.c70  WHEN t0.c4 THEN t0.c70 WHEN vt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c4 END IN ()) ASC  NULLS LAST, (((((t0.c70) NOTNULL)))>=(((+ (vt0.c0))))), CAST((+ (t0.c2)) AS BLOB)  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 WHERE ((((((((vt1.c1)) BETWEEN ((t0.c70)) AND ((vt1.c0))))OR(((t0.c70)<(t0.c4)))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)) BETWEEN ((t0.c70)) AND ((vt1.c0))))OR(((t0.c70)<(t0.c4)))))AND(t0.c0))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((((((((vt1.c1)) BETWEEN ((t0.c70)) AND ((vt1.c0))))OR(((t0.c70)<(t0.c4)))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)) BETWEEN ((t0.c70)) AND ((vt1.c0))))OR(((t0.c70)<(t0.c4)))))AND(t0.c0))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((((((((vt1.c1)) BETWEEN ((t0.c70)) AND ((vt1.c0))))OR(((t0.c70)<(t0.c4)))))AND(t0.c0)));
SELECT * FROM vt0, vt1 WHERE (ROUND((+ (vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ROUND((+ (vt0.c0)), CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS REAL)  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (ROUND((+ (vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ROUND((+ (vt0.c0)), CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS REAL)  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (ROUND((+ (vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS REAL)  NULLS LAST;
SELECT * FROM vt1, t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c5 END))<=((((((vt1.c0)AND(t0.c2)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c2 THEN t0.c5 END))<=((((((vt1.c0)AND(t0.c2)))OR(t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c5 END))<=((((((vt1.c0)AND(t0.c2)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c2 THEN t0.c5 END))<=((((((vt1.c0)AND(t0.c2)))OR(t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c5 END))<=((((((vt1.c0)AND(t0.c2)))OR(t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (((vt1.c1)*(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c1)*(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (((vt1.c1)*(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c1)*(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (((vt1.c1)*(vt0.c1)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)AND(((vt1.c1) NOT NULL))))OR(((vt1.c1) NOT NULL)))) ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)!=(vt1.c0)))) DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c1)&('-24184568')), ((vt1.c1) ISNULL), ((vt1.c1)+(vt1.c0)))) AND ((IFNULL(vt1.c0, vt1.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), NULL))) DESC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND (((((vt1.c0))<=((vt1.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND(((vt1.c1) NOT NULL))))OR(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)<>(vt1.c0)))) DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c1)&('-24184568')), ((vt1.c1) ISNULL), ((vt1.c1)+(vt1.c0)))) AND ((IFNULL(vt1.c0, vt1.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), NULL))) DESC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND (((((vt1.c0))<=((vt1.c0)))))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)AND(((vt1.c1) NOT NULL))))OR(((vt1.c1) NOT NULL)))) ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)!=(vt1.c0)))) DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c1)&('-24184568')), ((vt1.c1) ISNULL), ((vt1.c1)+(vt1.c0)))) AND ((IFNULL(vt1.c0, vt1.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), NULL))) DESC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND (((((vt1.c0))<=((vt1.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND(((vt1.c1) NOT NULL))))OR(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)<>(vt1.c0)))) DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c1)&('-24184568')), ((vt1.c1) ISNULL), ((vt1.c1)+(vt1.c0)))) AND ((IFNULL(vt1.c0, vt1.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), NULL))) DESC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND (((((vt1.c0))<=((vt1.c0)))))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)AND(((vt1.c1) NOT NULL))))OR(((vt1.c1) NOT NULL)))) ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)!=(vt1.c0)))) DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c1)&('-24184568')), ((vt1.c1) ISNULL), ((vt1.c1)+(vt1.c0)))) AND ((IFNULL(vt1.c0, vt1.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), NULL))) DESC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND (((((vt1.c0))<=((vt1.c0)))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('Oi''')))) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('Oi''')))) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('Oi''')))) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('Oi''')))) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('Oi''')))) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(t0.c3 AS BLOB) COLLATE RTRIM) ORDER BY CASE (NOT (t0.c1))  WHEN vt1.c0 THEN CAST(t0.c0 AS NUMERIC) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c3 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE (NOT (t0.c1))  WHEN vt1.c0 THEN CAST(t0.c0 AS NUMERIC) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(t0.c3 AS BLOB) COLLATE RTRIM) ORDER BY CASE (NOT (t0.c1))  WHEN vt1.c0 THEN CAST(t0.c0 AS NUMERIC) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c3 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE (NOT (t0.c1))  WHEN vt1.c0 THEN CAST(t0.c0 AS NUMERIC) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(t0.c3 AS BLOB) COLLATE RTRIM) ORDER BY CASE (NOT (t0.c1))  WHEN vt1.c0 THEN CAST(t0.c0 AS NUMERIC) END ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (0.5560846918342901);
SELECT SUM(count) FROM (SELECT ((0.5560846918342901) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.5560846918342901);
SELECT SUM(count) FROM (SELECT ((0.5560846918342901) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.5560846918342901);
SELECT * FROM t0, vt1 WHERE (('uTp.' IN ('9hTs')));
SELECT SUM(count) FROM (SELECT ALL ((('uTp.' IN ('9hTs'))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (('uTp.' IN ('9hTs')));
SELECT SUM(count) FROM (SELECT ALL ((('uTp.' IN ('9hTs'))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (('uTp.' IN ('9hTs')));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((t0.c2, ((t0.c4) NOTNULL), (((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c70)))))<((((vt0.c0) BETWEEN (t0.c3) AND (vt1.c0)), ((((t0.c5)OR(t0.c5)))OR(t0.c3)), CAST(t0.c70 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((t0.c2, ((t0.c4) NOTNULL), (((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c70)))))<((((vt0.c0) BETWEEN (t0.c3) AND (vt1.c0)), ((((t0.c5)OR(t0.c5)))OR(t0.c3)), CAST(t0.c70 AS TEXT)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((t0.c2, ((t0.c4) NOTNULL), (((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c70)))))<((((vt0.c0) BETWEEN (t0.c3) AND (vt1.c0)), ((((t0.c5)OR(t0.c5)))OR(t0.c3)), CAST(t0.c70 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((t0.c2, ((t0.c4) NOTNULL), (((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c70)))))<((((vt0.c0) BETWEEN (t0.c3) AND (vt1.c0)), ((((t0.c5)OR(t0.c5)))OR(t0.c3)), CAST(t0.c70 AS TEXT)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((t0.c2, ((t0.c4) NOTNULL), (((t0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c70)))))<((((vt0.c0) BETWEEN (t0.c3) AND (vt1.c0)), ((((t0.c5)OR(t0.c5)))OR(t0.c3)), CAST(t0.c70 AS TEXT)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1))) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c1))) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1))) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c1))) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1))) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt1, t0 INDEXED BY i21 WHERE (((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)OR(HEX(DISTINCT t0.c4))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)OR(HEX(DISTINCT t0.c4)))) IS TRUE)  as count FROM vt1, t0 INDEXED BY i21);
SELECT COUNT(*) FROM vt1, t0 INDEXED BY i21 WHERE (((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)OR(HEX(DISTINCT t0.c4))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)OR(HEX(DISTINCT t0.c4)))) IS TRUE)  as count FROM vt1, t0 INDEXED BY i21);
SELECT COUNT(*) FROM vt1, t0 INDEXED BY i21 WHERE (((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)OR(HEX(DISTINCT t0.c4))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE ((t0.c0)=(t0.c70))  WHEN ((t0.c2) NOTNULL) THEN (NULL IN ()) END INNER JOIN vt1 ON CASE x''  WHEN vt0.c1 THEN (('-105781385') IS TRUE) WHEN (-5.47466052E8 IN ()) THEN t0.c2 COLLATE NOCASE WHEN 0.2906428621806326 THEN vt1.c0 ELSE (t0.c2 IN ()) END WHERE (((((vt1.c1)>>(t0.c5)))=(((t0.c0) BETWEEN (vt0.c0) AND (t0.c4))))) ORDER BY ((((((t0.c1)AND(t0.c1)))AND(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(t0.c5)))==(((t0.c0) BETWEEN (vt0.c0) AND (t0.c4))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE ((t0.c0)==(t0.c70))  WHEN ((t0.c2) NOTNULL) THEN (NULL IN ()) END INNER JOIN vt1 ON CASE x''  WHEN vt0.c1 THEN (('-105781385') IS TRUE) WHEN (-5.47466052E8 IN ()) THEN t0.c2 COLLATE NOCASE WHEN 0.2906428621806326 THEN vt1.c0 ELSE (t0.c2 IN ()) END ORDER BY ((((((t0.c1)AND(t0.c1)))AND(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE ((t0.c0)=(t0.c70))  WHEN ((t0.c2) NOTNULL) THEN (NULL IN ()) END INNER JOIN vt1 ON CASE x''  WHEN vt0.c1 THEN (('-105781385') IS TRUE) WHEN (-5.47466052E8 IN ()) THEN t0.c2 COLLATE NOCASE WHEN 0.2906428621806326 THEN vt1.c0 ELSE (t0.c2 IN ()) END WHERE (((((vt1.c1)>>(t0.c5)))=(((t0.c0) BETWEEN (vt0.c0) AND (t0.c4))))) ORDER BY ((((((t0.c1)AND(t0.c1)))AND(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(t0.c5)))==(((t0.c0) BETWEEN (vt0.c0) AND (t0.c4))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE ((t0.c0)==(t0.c70))  WHEN ((t0.c2) NOTNULL) THEN (NULL IN ()) END INNER JOIN vt1 ON CASE x''  WHEN vt0.c1 THEN (('-105781385') IS TRUE) WHEN (-5.47466052E8 IN ()) THEN t0.c2 COLLATE NOCASE WHEN 0.2906428621806326 THEN vt1.c0 ELSE (t0.c2 IN ()) END ORDER BY ((((((t0.c1)AND(t0.c1)))AND(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE ((t0.c0)=(t0.c70))  WHEN ((t0.c2) NOTNULL) THEN (NULL IN ()) END INNER JOIN vt1 ON CASE x''  WHEN vt0.c1 THEN (('-105781385') IS TRUE) WHEN (-5.47466052E8 IN ()) THEN t0.c2 COLLATE NOCASE WHEN 0.2906428621806326 THEN vt1.c0 ELSE (t0.c2 IN ()) END WHERE (((((vt1.c1)>>(t0.c5)))=(((t0.c0) BETWEEN (vt0.c0) AND (t0.c4))))) ORDER BY ((((((t0.c1)AND(t0.c1)))AND(vt1.c0))) IS FALSE);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT UNLIKELY(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT UNLIKELY(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT UNLIKELY(vt0.c0)));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((((ABS(t0.c0))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(t0.c2 AS TEXT))))AND((vt0.c0 IN ()))))OR((((NULL)) NOT BETWEEN ((t0.c4)) AND ((t0.c5))))) WHERE ((((t0.c2 COLLATE RTRIM, ((((t0.c1)AND(t0.c2)))OR(x'')), 'm^!'))>(((NOT (t0.c5)), ((((t0.c70)OR(t0.c4)))OR(t0.c3)), (t0.c2 IN (t0.c5))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 COLLATE RTRIM, ((((t0.c1)AND(t0.c2)))OR(x'')), 'm^!'))>(((NOT (t0.c5)), ((((t0.c70)OR(t0.c4)))OR(t0.c3)), (t0.c2 IN (t0.c5)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((((ABS(t0.c0))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(t0.c2 AS TEXT))))AND((vt0.c0 IN ()))))OR((((NULL)) NOT BETWEEN ((t0.c4)) AND ((t0.c5))))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((((ABS(t0.c0))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(t0.c2 AS TEXT))))AND((vt0.c0 IN ()))))OR((((NULL)) NOT BETWEEN ((t0.c4)) AND ((t0.c5))))) WHERE ((((t0.c2 COLLATE RTRIM, ((((t0.c1)AND(t0.c2)))OR(x'')), 'm^!'))>(((NOT (t0.c5)), ((((t0.c70)OR(t0.c4)))OR(t0.c3)), (t0.c2 IN (t0.c5))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 COLLATE RTRIM, ((((t0.c1)AND(t0.c2)))OR(x'')), 'm^!'))>(((NOT (t0.c5)), ((((t0.c70)OR(t0.c4)))OR(t0.c3)), (t0.c2 IN (t0.c5)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((((ABS(t0.c0))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(t0.c2 AS TEXT))))AND((vt0.c0 IN ()))))OR((((NULL)) NOT BETWEEN ((t0.c4)) AND ((t0.c5))))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((((ABS(t0.c0))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(t0.c2 AS TEXT))))AND((vt0.c0 IN ()))))OR((((NULL)) NOT BETWEEN ((t0.c4)) AND ((t0.c5))))) WHERE ((((t0.c2 COLLATE RTRIM, ((((t0.c1)AND(t0.c2)))OR(x'')), 'm^!'))>(((NOT (t0.c5)), ((((t0.c70)OR(t0.c4)))OR(t0.c3)), (t0.c2 IN (t0.c5))))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (((((t0.c3)OR(vt1.c0)))AND(t0.c3))))) ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC), x'' ASC  NULLS LAST, t0.c70 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c3)OR(vt1.c0)))AND(t0.c3))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC), x'' ASC  NULLS LAST, t0.c70 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (((((t0.c3)OR(vt1.c0)))AND(t0.c3))))) ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC), x'' ASC  NULLS LAST, t0.c70 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c3)OR(vt1.c0)))AND(t0.c3))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC), x'' ASC  NULLS LAST, t0.c70 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (((((t0.c3)OR(vt1.c0)))AND(t0.c3))))) ORDER BY CAST(CAST(t0.c1 AS REAL) AS NUMERIC), x'' ASC  NULLS LAST, t0.c70 COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c4);
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c4);
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c4);
SELECT ALL * FROM vt1 WHERE (((TOTAL_CHANGES()) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TOTAL_CHANGES()) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TOTAL_CHANGES()) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ('-614237350', vt1.c0))) NOT BETWEEN (UNLIKELY(vt1.c1)) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ('-614237350', vt1.c0))) NOT BETWEEN (UNLIKELY(vt1.c1)) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ('-614237350', vt1.c0))) NOT BETWEEN (UNLIKELY(vt1.c1)) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ('-614237350', vt1.c0))) NOT BETWEEN (UNLIKELY(vt1.c1)) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ('-614237350', vt1.c0))) NOT BETWEEN (UNLIKELY(vt1.c1)) AND (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((t0.c2)AND(vt1.c1)))OR(t0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)AND(vt1.c1)))OR(t0.c3)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((t0.c2)AND(vt1.c1)))OR(t0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)AND(vt1.c1)))OR(t0.c3)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((t0.c2)AND(vt1.c1)))OR(t0.c3)) IN ()));
SELECT * FROM vt1, vt0, t0 WHERE ((- (((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((- (((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((- (((vt0.c0)>(vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(vt0.c0)))OR(t0.c2)) THEN ((((t0.c70)AND(t0.c2)))AND(t0.c4)) END) ORDER BY (- (((vt0.c1)!=(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(vt0.c0)))OR(t0.c2)) THEN ((((t0.c70)AND(t0.c2)))AND(t0.c4)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c1)!=(vt0.c1)))) DESC);
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(vt0.c0)))OR(t0.c2)) THEN ((((t0.c70)AND(t0.c2)))AND(t0.c4)) END) ORDER BY (- (((vt0.c1)!=(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(vt0.c0)))OR(t0.c2)) THEN ((((t0.c70)AND(t0.c2)))AND(t0.c4)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c1)!=(vt0.c1)))) DESC);
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))OR(vt0.c0)))OR(t0.c2)) THEN ((((t0.c70)AND(t0.c2)))AND(t0.c4)) END) ORDER BY (- (((vt0.c1)!=(vt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c1)))-(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt1.c1)))-(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c1)))-(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt1.c1)))-(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c1)))-(((vt0.c0) ISNULL))));
SELECT * FROM vt1, t0, vt0 WHERE (((((vt0.c0)&(t0.c3)))*((+ (t0.c5)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(t0.c3)))*((+ (t0.c5))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((((vt0.c0)&(t0.c3)))*((+ (t0.c5)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(t0.c3)))*((+ (t0.c5))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((((vt0.c0)&(t0.c3)))*((+ (t0.c5)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)<(vt0.c1)))<=(LOWER(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<(vt0.c1)))<=(LOWER(DISTINCT vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)<(vt0.c1)))<=(LOWER(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<(vt0.c1)))<=(LOWER(DISTINCT vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)<(vt0.c1)))<=(LOWER(DISTINCT vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY (((t0.c5 IN (2030117646))) NOTNULL)  NULLS FIRST, ((((((vt0.c0)OR(t0.c4)))OR(vt0.c0)))+(CAST(t0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c5 IN (2030117646))) NOTNULL)  NULLS FIRST, ((((((vt0.c0)OR(t0.c4)))OR(vt0.c0)))+(CAST(t0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY (((t0.c5 IN (2030117646))) NOTNULL)  NULLS FIRST, ((((((vt0.c0)OR(t0.c4)))OR(vt0.c0)))+(CAST(t0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c5 IN (2030117646))) NOTNULL)  NULLS FIRST, ((((((vt0.c0)OR(t0.c4)))OR(vt0.c0)))+(CAST(t0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY (((t0.c5 IN (2030117646))) NOTNULL)  NULLS FIRST, ((((((vt0.c0)OR(t0.c4)))OR(vt0.c0)))+(CAST(t0.c1 AS TEXT)))  NULLS LAST;
SELECT * FROM t0 WHERE (CASE (NOT (t0.c3))  WHEN COALESCE(DISTINCT NULL, t0.c4) THEN (~ (t0.c3)) ELSE t0.c2 COLLATE NOCASE END) ORDER BY RTRIM(t0.c3) COLLATE NOCASE  NULLS FIRST, (((t0.c5)=(t0.c70)) IN ()) ASC, (- ((- (x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c3))  WHEN COALESCE(DISTINCT NULL, t0.c4) THEN (~ (t0.c3)) ELSE t0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY RTRIM(t0.c3) COLLATE NOCASE  NULLS FIRST, (((t0.c5)=(t0.c70)) IN ()) ASC, (- ((- (x'')))) ASC);
SELECT * FROM t0 WHERE (CASE (NOT (t0.c3))  WHEN COALESCE(DISTINCT NULL, t0.c4) THEN (~ (t0.c3)) ELSE t0.c2 COLLATE NOCASE END) ORDER BY RTRIM(t0.c3) COLLATE NOCASE  NULLS FIRST, (((t0.c5)=(t0.c70)) IN ()) ASC, (- ((- (x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c3))  WHEN COALESCE(DISTINCT NULL, t0.c4) THEN (~ (t0.c3)) ELSE t0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY RTRIM(t0.c3) COLLATE NOCASE  NULLS FIRST, (((t0.c5)=(t0.c70)) IN ()) ASC, (- ((- (x'')))) ASC);
SELECT * FROM t0 WHERE (CASE (NOT (t0.c3))  WHEN COALESCE(DISTINCT NULL, t0.c4) THEN (~ (t0.c3)) ELSE t0.c2 COLLATE NOCASE END) ORDER BY RTRIM(t0.c3) COLLATE NOCASE  NULLS FIRST, (((t0.c5)=(t0.c70)) IN ()) ASC, (- ((- (x'')))) ASC;
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((t0.c2) NOT NULL) WHERE (CAST(((t0.c3)<<(t0.c70)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c3)<<(t0.c70)) AS TEXT)) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((t0.c2) NOT NULL));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((t0.c2) NOT NULL) WHERE (CAST(((t0.c3)<<(t0.c70)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c3)<<(t0.c70)) AS TEXT)) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((t0.c2) NOT NULL));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((t0.c2) NOT NULL) WHERE (CAST(((t0.c3)<<(t0.c70)) AS TEXT));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c4)))IS NOT(t0.c5))) ORDER BY (((CASE WHEN t0.c3 THEN vt1.c0 END))>(((((t0.c70)) BETWEEN ((t0.c3)) AND ((t0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c4)))IS NOT(t0.c5))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((CASE WHEN t0.c3 THEN vt1.c0 END))>(((((t0.c70)) BETWEEN ((t0.c3)) AND ((t0.c4)))))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c4)))IS NOT(t0.c5))) ORDER BY (((CASE WHEN t0.c3 THEN vt1.c0 END))>(((((t0.c70)) BETWEEN ((t0.c3)) AND ((t0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c4)))IS NOT(t0.c5))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((CASE WHEN t0.c3 THEN vt1.c0 END))>(((((t0.c70)) BETWEEN ((t0.c3)) AND ((t0.c4)))))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c4)))IS NOT(t0.c5))) ORDER BY (((CASE WHEN t0.c3 THEN vt1.c0 END))>(((((t0.c70)) BETWEEN ((t0.c3)) AND ((t0.c4))))));
SELECT ALL * FROM vt0, t0 WHERE (((CASE t0.c2  WHEN vt0.c1 THEN t0.c5 END) NOT BETWEEN (TRIM(DISTINCT t0.c2, t0.c1)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN vt0.c1 THEN t0.c5 END) NOT BETWEEN (TRIM(DISTINCT t0.c2, t0.c1)) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE t0.c2  WHEN vt0.c1 THEN t0.c5 END) NOT BETWEEN (TRIM(DISTINCT t0.c2, t0.c1)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN vt0.c1 THEN t0.c5 END) NOT BETWEEN (TRIM(DISTINCT t0.c2, t0.c1)) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE t0.c2  WHEN vt0.c1 THEN t0.c5 END) NOT BETWEEN (TRIM(DISTINCT t0.c2, t0.c1)) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c0)) AS INTEGER)) ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt1.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c0)) AS INTEGER)) ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt1.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c0)) AS INTEGER)) ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt1.c0)) IN ()) ASC;
SELECT * FROM vt1, vt0 WHERE ((NOT (((('', vt1.c1, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, 0.7085926380246823, '9T', vt1.c1, vt0.c0)) AND ((vt1.c1, vt0.c1, vt0.c1, vt0.c0, vt1.c1)))))) ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY, vt1.c0  NULLS FIRST, ((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((('', vt1.c1, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, 0.7085926380246823, '9T', vt1.c1, vt0.c0)) AND ((vt1.c1, vt0.c1, vt0.c1, vt0.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY, vt1.c0  NULLS FIRST, ((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ())  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((NOT (((('', vt1.c1, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, 0.7085926380246823, '9T', vt1.c1, vt0.c0)) AND ((vt1.c1, vt0.c1, vt0.c1, vt0.c0, vt1.c1)))))) ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY, vt1.c0  NULLS FIRST, ((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((('', vt1.c1, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, 0.7085926380246823, '9T', vt1.c1, vt0.c0)) AND ((vt1.c1, vt0.c1, vt0.c1, vt0.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY, vt1.c0  NULLS FIRST, ((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ())  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((NOT (((('', vt1.c1, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, 0.7085926380246823, '9T', vt1.c1, vt0.c0)) AND ((vt1.c1, vt0.c1, vt0.c1, vt0.c0, vt1.c1)))))) ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY, vt1.c0  NULLS FIRST, ((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ())  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0)||(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)||(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((t0.c0)||(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)||(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((t0.c0)||(t0.c0)) COLLATE BINARY);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c0 IN (t0.c2)) COLLATE RTRIM WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c0 IN (t0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c0 IN (t0.c2)) COLLATE RTRIM WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c0 IN (t0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c0 IN (t0.c2)) COLLATE RTRIM WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)|(vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) ORDER BY (((vt0.c1 IN ()))<<(((vt1.c1)==(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1 IN ()))<<(((vt1.c1)=(vt1.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)|(vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) ORDER BY (((vt0.c1 IN ()))<<(((vt1.c1)==(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1 IN ()))<<(((vt1.c1)=(vt1.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)|(vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) ORDER BY (((vt0.c1 IN ()))<<(((vt1.c1)==(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c70) ORDER BY (- (((t0.c4) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((t0.c70) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c4) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c70) ORDER BY (- (((t0.c4) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((t0.c70) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c4) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c70) ORDER BY (- (((t0.c4) NOT NULL)));
SELECT ALL * FROM t0 NOT INDEXED, vt1, vt0 WHERE (0.7288984335811499);
SELECT SUM(count) FROM (SELECT ALL ((0.7288984335811499) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0 NOT INDEXED, vt1, vt0 WHERE (0.7288984335811499);
SELECT SUM(count) FROM (SELECT ALL ((0.7288984335811499) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0 NOT INDEXED, vt1, vt0 WHERE (0.7288984335811499);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((~ ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c4)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c4)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((~ ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c4)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c4)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((~ ((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c4)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((NOT (vt1.c1)))));
SELECT * FROM vt1, vt0, t0 WHERE ((((t0.c4 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c4 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)|(t0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((((t0.c4 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c4 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)|(t0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((((t0.c4 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)|(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((QUOTE(vt1.c0)) IS FALSE) WHERE (-1.710500008E9);
SELECT SUM(count) FROM (SELECT ((-1.710500008E9) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((QUOTE(vt1.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((QUOTE(vt1.c0)) IS FALSE) WHERE (-1.710500008E9);
SELECT SUM(count) FROM (SELECT ((-1.710500008E9) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((QUOTE(vt1.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((QUOTE(vt1.c0)) IS FALSE) WHERE (-1.710500008E9);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON (((((vt1.c1, t0.c70, t0.c3)) NOT BETWEEN ((t0.c70, t0.c0, NULL)) AND ((vt1.c0, t0.c3, t0.c1))))<<((vt1.c0 IN (t0.c1, t0.c2)))) WHERE ((((vt1.c1) BETWEEN (t0.c2) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) BETWEEN (t0.c2) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((((vt1.c1, t0.c70, t0.c3)) NOT BETWEEN ((t0.c70, t0.c0, NULL)) AND ((vt1.c0, t0.c3, t0.c1))))<<((vt1.c0 IN (t0.c1, t0.c2)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON (((((vt1.c1, t0.c70, t0.c3)) NOT BETWEEN ((t0.c70, t0.c0, NULL)) AND ((vt1.c0, t0.c3, t0.c1))))<<((vt1.c0 IN (t0.c1, t0.c2)))) WHERE ((((vt1.c1) BETWEEN (t0.c2) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) BETWEEN (t0.c2) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((((vt1.c1, t0.c70, t0.c3)) NOT BETWEEN ((t0.c70, t0.c0, NULL)) AND ((vt1.c0, t0.c3, t0.c1))))<<((vt1.c0 IN (t0.c1, t0.c2)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON (((((vt1.c1, t0.c70, t0.c3)) NOT BETWEEN ((t0.c70, t0.c0, NULL)) AND ((vt1.c0, t0.c3, t0.c1))))<<((vt1.c0 IN (t0.c1, t0.c2)))) WHERE ((((vt1.c1) BETWEEN (t0.c2) AND (t0.c0)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c3 THEN t0.c4 WHEN '(' THEN t0.c2 WHEN NULL THEN t0.c70 END)<((+ (0.703294442445941))))) ORDER BY NULLIF(((t0.c4)>=(t0.c2)), ((((t0.c0)OR('-1844462647')))AND(t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c3 THEN t0.c4 WHEN '(' THEN t0.c2 WHEN NULL THEN t0.c70 END)<((+ (0.703294442445941))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(((t0.c4)>=(t0.c2)), ((((t0.c0)OR('-1844462647')))AND(t0.c1))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c3 THEN t0.c4 WHEN '(' THEN t0.c2 WHEN NULL THEN t0.c70 END)<((+ (0.703294442445941))))) ORDER BY NULLIF(((t0.c4)>=(t0.c2)), ((((t0.c0)OR('-1844462647')))AND(t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c3 THEN t0.c4 WHEN '(' THEN t0.c2 WHEN NULL THEN t0.c70 END)<((+ (0.703294442445941))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(((t0.c4)>=(t0.c2)), ((((t0.c0)OR('-1844462647')))AND(t0.c1))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c3 THEN t0.c4 WHEN '(' THEN t0.c2 WHEN NULL THEN t0.c70 END)<((+ (0.703294442445941))))) ORDER BY NULLIF(((t0.c4)>=(t0.c2)), ((((t0.c0)OR('-1844462647')))AND(t0.c1))) ASC;
SELECT ALL * FROM vt1 WHERE (((json_object(vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((json_object(vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM t0 WHERE (((((t0.c70) NOTNULL))>=((NOT (t0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c70) NOTNULL))>=((NOT (t0.c4))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c70) NOTNULL))>=((NOT (t0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c70) NOTNULL))>=((NOT (t0.c4))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c70) NOTNULL))>=((NOT (t0.c4)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY) NOTNULL) WHERE (((vt1.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY) NOTNULL) WHERE (((vt1.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY) NOTNULL) WHERE (((vt1.c1 COLLATE BINARY) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((((((((((CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c0 END)OR(CASE t0.c5  WHEN t0.c5 THEN t0.c2 END)))OR(((((((((t0.c70)OR(t0.c2)))AND(t0.c3)))OR(t0.c0)))OR(t0.c3)))))OR((t0.c70 IN ()))))AND(0x205806e8)))AND(HEX(t0.c4))))AND(CASE t0.c5  WHEN t0.c3 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c0 END)OR(CASE t0.c5  WHEN t0.c5 THEN t0.c2 END)))OR(((((((((t0.c70)OR(t0.c2)))AND(t0.c3)))OR(t0.c0)))OR(t0.c3)))))OR((t0.c70 IN ()))))AND(0X205806e8)))AND(HEX(t0.c4))))AND(CASE t0.c5  WHEN t0.c3 THEN t0.c2 END)));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((((((((((CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c0 END)OR(CASE t0.c5  WHEN t0.c5 THEN t0.c2 END)))OR(((((((((t0.c70)OR(t0.c2)))AND(t0.c3)))OR(t0.c0)))OR(t0.c3)))))OR((t0.c70 IN ()))))AND(0x205806e8)))AND(HEX(t0.c4))))AND(CASE t0.c5  WHEN t0.c3 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c0 END)OR(CASE t0.c5  WHEN t0.c5 THEN t0.c2 END)))OR(((((((((t0.c70)OR(t0.c2)))AND(t0.c3)))OR(t0.c0)))OR(t0.c3)))))OR((t0.c70 IN ()))))AND(0X205806e8)))AND(HEX(t0.c4))))AND(CASE t0.c5  WHEN t0.c3 THEN t0.c2 END)));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((((((((((CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c0 END)OR(CASE t0.c5  WHEN t0.c5 THEN t0.c2 END)))OR(((((((((t0.c70)OR(t0.c2)))AND(t0.c3)))OR(t0.c0)))OR(t0.c3)))))OR((t0.c70 IN ()))))AND(0x205806e8)))AND(HEX(t0.c4))))AND(CASE t0.c5  WHEN t0.c3 THEN t0.c2 END));
SELECT ALL * FROM t0, vt1 WHERE (((((- (t0.c5))))>((LIKELY(t0.c5))))) ORDER BY COALESCE(CAST(t0.c70 AS NUMERIC), ((vt1.c1)>>(t0.c2)), ((t0.c4) IS TRUE), CASE t0.c5  WHEN t0.c0 THEN vt1.c0 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (t0.c5))))>((LIKELY(t0.c5))))) IS TRUE)  as count FROM t0, vt1 ORDER BY COALESCE(CAST(t0.c70 AS NUMERIC), ((vt1.c1)>>(t0.c2)), ((t0.c4) IS TRUE), CASE t0.c5  WHEN t0.c0 THEN vt1.c0 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c1 END) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((((- (t0.c5))))>((LIKELY(t0.c5))))) ORDER BY COALESCE(CAST(t0.c70 AS NUMERIC), ((vt1.c1)>>(t0.c2)), ((t0.c4) IS TRUE), CASE t0.c5  WHEN t0.c0 THEN vt1.c0 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (t0.c5))))>((LIKELY(t0.c5))))) IS TRUE)  as count FROM t0, vt1 ORDER BY COALESCE(CAST(t0.c70 AS NUMERIC), ((vt1.c1)>>(t0.c2)), ((t0.c4) IS TRUE), CASE t0.c5  WHEN t0.c0 THEN vt1.c0 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c1 END) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((((- (t0.c5))))>((LIKELY(t0.c5))))) ORDER BY COALESCE(CAST(t0.c70 AS NUMERIC), ((vt1.c1)>>(t0.c2)), ((t0.c4) IS TRUE), CASE t0.c5  WHEN t0.c0 THEN vt1.c0 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c1 END) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((t0.c70 COLLATE BINARY IN ())) ORDER BY (((CAST(t0.c70 AS TEXT)))<>((NULL))), ((CAST(t0.c0 AS NUMERIC))GLOB(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((t0.c70 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((CAST(t0.c70 AS TEXT)))!=((NULL))), ((CAST(t0.c0 AS NUMERIC))GLOB(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((t0.c70 COLLATE BINARY IN ())) ORDER BY (((CAST(t0.c70 AS TEXT)))<>((NULL))), ((CAST(t0.c0 AS NUMERIC))GLOB(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((t0.c70 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((CAST(t0.c70 AS TEXT)))!=((NULL))), ((CAST(t0.c0 AS NUMERIC))GLOB(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((t0.c70 COLLATE BINARY IN ())) ORDER BY (((CAST(t0.c70 AS TEXT)))<>((NULL))), ((CAST(t0.c0 AS NUMERIC))GLOB(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0))));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)AND(vt1.c1)))>>(0.8095548509000587 COLLATE RTRIM))) ORDER BY (((CAST(vt0.c0 AS REAL)))=((((vt0.c1)>(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt1.c1)))>>(0.8095548509000587 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((CAST(vt0.c0 AS REAL)))==((((vt0.c1)>(vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)AND(vt1.c1)))>>(0.8095548509000587 COLLATE RTRIM))) ORDER BY (((CAST(vt0.c0 AS REAL)))=((((vt0.c1)>(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt1.c1)))>>(0.8095548509000587 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((CAST(vt0.c0 AS REAL)))==((((vt0.c1)>(vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)AND(vt1.c1)))>>(0.8095548509000587 COLLATE RTRIM))) ORDER BY (((CAST(vt0.c0 AS REAL)))=((((vt0.c1)>(vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED, vt1 WHERE (0.5625827903108958) ORDER BY t0.c5 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5625827903108958) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY t0.c5 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED, vt1 WHERE (0.5625827903108958) ORDER BY t0.c5 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5625827903108958) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY t0.c5 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED, vt1 WHERE (0.5625827903108958) ORDER BY t0.c5 DESC  NULLS FIRST;
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN x'11f6' COLLATE BINARY THEN t0.c5 COLLATE RTRIM WHEN vt1.c0 COLLATE NOCASE THEN t0.c0 WHEN CAST('-82358639' AS BLOB) THEN (NOT (t0.c3)) WHEN (((t0.c70))>=((t0.c70))) THEN ((t0.c0)%(vt1.c1)) WHEN t0.c70 THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'11f6' COLLATE BINARY THEN t0.c5 COLLATE RTRIM WHEN vt1.c0 COLLATE NOCASE THEN t0.c0 WHEN CAST('-82358639' AS BLOB) THEN (NOT (t0.c3)) WHEN (((t0.c70))>=((t0.c70))) THEN ((t0.c0)%(vt1.c1)) WHEN t0.c70 THEN t0.c1 END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN x'11f6' COLLATE BINARY THEN t0.c5 COLLATE RTRIM WHEN vt1.c0 COLLATE NOCASE THEN t0.c0 WHEN CAST('-82358639' AS BLOB) THEN (NOT (t0.c3)) WHEN (((t0.c70))>=((t0.c70))) THEN ((t0.c0)%(vt1.c1)) WHEN t0.c70 THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'11f6' COLLATE BINARY THEN t0.c5 COLLATE RTRIM WHEN vt1.c0 COLLATE NOCASE THEN t0.c0 WHEN CAST('-82358639' AS BLOB) THEN (NOT (t0.c3)) WHEN (((t0.c70))>=((t0.c70))) THEN ((t0.c0)%(vt1.c1)) WHEN t0.c70 THEN t0.c1 END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN x'11f6' COLLATE BINARY THEN t0.c5 COLLATE RTRIM WHEN vt1.c0 COLLATE NOCASE THEN t0.c0 WHEN CAST('-82358639' AS BLOB) THEN (NOT (t0.c3)) WHEN (((t0.c70))>=((t0.c70))) THEN ((t0.c0)%(vt1.c1)) WHEN t0.c70 THEN t0.c1 END);
SELECT * FROM vt1, t0 WHERE (((((t0.c3)AND(((((NULL)AND('Iq5Cf')))OR(t0.c70)))))AND((((vt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c5)))))) ORDER BY (- ((- (-1.61229982E8)))) ASC, (~ (((t0.c2)<(t0.c4)))), ((((x'4833')AND((x'' IN (t0.c3, t0.c2)))))AND((t0.c2 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3)AND(((((NULL)AND('Iq5Cf')))OR(t0.c70)))))AND((((vt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c5)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (- ((- (-1.61229982E8)))) ASC, (~ (((t0.c2)<(t0.c4)))), ((((x'4833')AND((x'' IN (t0.c3, t0.c2)))))AND((t0.c2 IN (vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((((t0.c3)AND(((((NULL)AND('Iq5Cf')))OR(t0.c70)))))AND((((vt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c5)))))) ORDER BY (- ((- (-1.61229982E8)))) ASC, (~ (((t0.c2)<(t0.c4)))), ((((x'4833')AND((x'' IN (t0.c3, t0.c2)))))AND((t0.c2 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3)AND(((((NULL)AND('Iq5Cf')))OR(t0.c70)))))AND((((vt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c5)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (- ((- (-1.61229982E8)))) ASC, (~ (((t0.c2)<(t0.c4)))), ((((x'4833')AND((x'' IN (t0.c3, t0.c2)))))AND((t0.c2 IN (vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((((t0.c3)AND(((((NULL)AND('Iq5Cf')))OR(t0.c70)))))AND((((vt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c5)))))) ORDER BY (- ((- (-1.61229982E8)))) ASC, (~ (((t0.c2)<(t0.c4)))), ((((x'4833')AND((x'' IN (t0.c3, t0.c2)))))AND((t0.c2 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 NOT INDEXED, t0, vt0 WHERE (t0.c5) ORDER BY -1.61229982E8 DESC;
SELECT SUM(count) FROM (SELECT ((t0.c5) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY -1.61229982E8 DESC);
SELECT ALL * FROM vt1 NOT INDEXED, t0, vt0 WHERE (t0.c5) ORDER BY -1.61229982E8 DESC;
SELECT SUM(count) FROM (SELECT ((t0.c5) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY -1.61229982E8 DESC);
SELECT ALL * FROM vt1 NOT INDEXED, t0, vt0 WHERE (t0.c5) ORDER BY -1.61229982E8 DESC;
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((vt0.c0)IS(t0.c1))) ORDER BY ((((((((((t0.c4)>=(t0.c70)))OR((NOT (vt0.c0)))))AND(TRIM(DISTINCT t0.c1))))AND(t0.c2 COLLATE BINARY)))OR(0.43486240224754)), ((CASE WHEN t0.c70 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (t0.c1) AND (t0.c70))))  NULLS FIRST, ((((vt1.c1) BETWEEN (0.4200151449194054) AND (t0.c3)))>>((((t0.c3))!=((vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(t0.c1))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY ((((((((((t0.c4)>=(t0.c70)))OR((NOT (vt0.c0)))))AND(TRIM(DISTINCT t0.c1))))AND(t0.c2 COLLATE BINARY)))OR(0.43486240224754)), ((CASE WHEN t0.c70 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (t0.c1) AND (t0.c70))))  NULLS FIRST, ((((vt1.c1) BETWEEN (0.4200151449194054) AND (t0.c3)))>>((((t0.c3))!=((vt1.c1))))) DESC);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((vt0.c0)IS(t0.c1))) ORDER BY ((((((((((t0.c4)>=(t0.c70)))OR((NOT (vt0.c0)))))AND(TRIM(DISTINCT t0.c1))))AND(t0.c2 COLLATE BINARY)))OR(0.43486240224754)), ((CASE WHEN t0.c70 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (t0.c1) AND (t0.c70))))  NULLS FIRST, ((((vt1.c1) BETWEEN (0.4200151449194054) AND (t0.c3)))>>((((t0.c3))!=((vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(t0.c1))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY ((((((((((t0.c4)>=(t0.c70)))OR((NOT (vt0.c0)))))AND(TRIM(DISTINCT t0.c1))))AND(t0.c2 COLLATE BINARY)))OR(0.43486240224754)), ((CASE WHEN t0.c70 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (t0.c1) AND (t0.c70))))  NULLS FIRST, ((((vt1.c1) BETWEEN (0.4200151449194054) AND (t0.c3)))>>((((t0.c3))!=((vt1.c1))))) DESC);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((vt0.c0)IS(t0.c1))) ORDER BY ((((((((((t0.c4)>=(t0.c70)))OR((NOT (vt0.c0)))))AND(TRIM(DISTINCT t0.c1))))AND(t0.c2 COLLATE BINARY)))OR(0.43486240224754)), ((CASE WHEN t0.c70 THEN vt0.c0 END)%(((vt0.c0) BETWEEN (t0.c1) AND (t0.c70))))  NULLS FIRST, ((((vt1.c1) BETWEEN (0.4200151449194054) AND (t0.c3)))>>((((t0.c3))!=((vt1.c1))))) DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON '' WHERE ((-823303060 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-823303060 IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON '');
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON '' WHERE ((-823303060 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-823303060 IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON '');
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON '' WHERE ((-823303060 IN ()));
SELECT * FROM vt1, vt0, t0 WHERE (SQLITE_VERSION()) ORDER BY CAST(((((t0.c4)AND(vt0.c1)))OR(t0.c70)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(((((t0.c4)AND(vt0.c1)))OR(t0.c70)) AS INTEGER));
SELECT * FROM vt1, vt0, t0 WHERE (SQLITE_VERSION()) ORDER BY CAST(((((t0.c4)AND(vt0.c1)))OR(t0.c70)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(((((t0.c4)AND(vt0.c1)))OR(t0.c70)) AS INTEGER));
SELECT * FROM vt1, vt0, t0 WHERE (SQLITE_VERSION()) ORDER BY CAST(((((t0.c4)AND(vt0.c1)))OR(t0.c70)) AS INTEGER);
SELECT * FROM t0, vt0, vt1 WHERE (UPPER(DISTINCT json('^nN~m'))) ORDER BY (~ ((((t0.c3)) NOT BETWEEN ((-1410899596)) AND ((t0.c4))))), (NOT (((vt1.c1)<=(t0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT json('^nN~m'))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (~ ((((t0.c3)) NOT BETWEEN ((-1410899596)) AND ((t0.c4))))), (NOT (((vt1.c1)<=(t0.c4)))));
SELECT * FROM t0, vt0, vt1 WHERE (UPPER(DISTINCT json('^nN~m'))) ORDER BY (~ ((((t0.c3)) NOT BETWEEN ((-1410899596)) AND ((t0.c4))))), (NOT (((vt1.c1)<=(t0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT json('^nN~m'))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (~ ((((t0.c3)) NOT BETWEEN ((-1410899596)) AND ((t0.c4))))), (NOT (((vt1.c1)<=(t0.c4)))));
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL WHERE ((((t0.c70)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(t0.c3))))));
SELECT SUM(count) FROM (SELECT (((((t0.c70)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(t0.c3)))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL WHERE ((((t0.c70)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(t0.c3))))));
SELECT SUM(count) FROM (SELECT (((((t0.c70)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(t0.c3)))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL WHERE ((((t0.c70)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(t0.c3))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 IN ()))GLOB(load_extension(vt0.c0, vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(load_extension(vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 IN ()))GLOB(load_extension(vt0.c0, vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(load_extension(vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0);
SELECT * FROM vt0, vt1, t0 WHERE ((CASE vt1.c1  WHEN 0Xffffffffe92c755f THEN vt0.c1 ELSE vt1.c1 END IN ())) ORDER BY ((CASE vt0.c1  WHEN t0.c4 THEN t0.c4 ELSE t0.c5 END)>=((((vt0.c1, vt1.c0, t0.c0))>((vt0.c1, t0.c4, t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c1  WHEN 0xffffffffe92c755f THEN vt0.c1 ELSE vt1.c1 END IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((CASE vt0.c1  WHEN t0.c4 THEN t0.c4 ELSE t0.c5 END)>=((((vt0.c1, vt1.c0, t0.c0))>((vt0.c1, t0.c4, t0.c1))))));
SELECT * FROM vt0, vt1, t0 WHERE ((CASE vt1.c1  WHEN 0Xffffffffe92c755f THEN vt0.c1 ELSE vt1.c1 END IN ())) ORDER BY ((CASE vt0.c1  WHEN t0.c4 THEN t0.c4 ELSE t0.c5 END)>=((((vt0.c1, vt1.c0, t0.c0))>((vt0.c1, t0.c4, t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c1  WHEN 0xffffffffe92c755f THEN vt0.c1 ELSE vt1.c1 END IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((CASE vt0.c1  WHEN t0.c4 THEN t0.c4 ELSE t0.c5 END)>=((((vt0.c1, vt1.c0, t0.c0))>((vt0.c1, t0.c4, t0.c1))))));
SELECT * FROM vt0, vt1, t0 WHERE ((CASE vt1.c1  WHEN 0Xffffffffe92c755f THEN vt0.c1 ELSE vt1.c1 END IN ())) ORDER BY ((CASE vt0.c1  WHEN t0.c4 THEN t0.c4 ELSE t0.c5 END)>=((((vt0.c1, vt1.c0, t0.c0))>((vt0.c1, t0.c4, t0.c1)))));
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (x'') AND (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (x'') AND (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (x'') AND (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (x'') AND (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (x'') AND (vt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((- (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((- (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((- (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((- (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((- (vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((((NOT (t0.c5))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c5))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((NOT (t0.c5))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c5))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((NOT (t0.c5))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt0.c0)&(vt0.c1))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)&(vt0.c1))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt0.c0)&(vt0.c1))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)&(vt0.c1))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt0.c0)&(vt0.c1))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (INSTR(((((t0.c3)OR(t0.c0)))OR(vt0.c1)), ((((t0.c4)AND(t0.c4)))OR(vt0.c0)))) ORDER BY (~ (0.4075934536020184))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((t0.c3)OR(t0.c0)))OR(vt0.c1)), ((((t0.c4)AND(t0.c4)))OR(vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (~ (0.4075934536020184))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (INSTR(((((t0.c3)OR(t0.c0)))OR(vt0.c1)), ((((t0.c4)AND(t0.c4)))OR(vt0.c0)))) ORDER BY (~ (0.4075934536020184))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((t0.c3)OR(t0.c0)))OR(vt0.c1)), ((((t0.c4)AND(t0.c4)))OR(vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (~ (0.4075934536020184))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (INSTR(((((t0.c3)OR(t0.c0)))OR(vt0.c1)), ((((t0.c4)AND(t0.c4)))OR(vt0.c0)))) ORDER BY (~ (0.4075934536020184))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END) ORDER BY (+ (((vt0.c0)<(vt0.c0)))) DESC, (NOT (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)<(vt0.c0)))) DESC, (NOT (vt0.c0)));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END) ORDER BY (+ (((vt0.c0)<(vt0.c0)))) DESC, (NOT (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)<(vt0.c0)))) DESC, (NOT (vt0.c0)));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END) ORDER BY (+ (((vt0.c0)<(vt0.c0)))) DESC, (NOT (vt0.c0));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)|(x'cb41')) IN (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)|(x'cb41')) IN (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)|(x'cb41')) IN (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)|(x'cb41')) IN (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)|(x'cb41')) IN (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c1)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'c寗\r.U4' WHEN vt1.c1 THEN 'F	7K\糆畟O' WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c1)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'c寗\r.U4' WHEN vt1.c1 THEN 'F	7K\糆畟O' WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c1)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'c寗\r.U4' WHEN vt1.c1 THEN 'F	7K\糆畟O' WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c1)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'c寗\r.U4' WHEN vt1.c1 THEN 'F	7K\糆畟O' WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c1)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'c寗\r.U4' WHEN vt1.c1 THEN 'F	7K\糆畟O' WHEN vt0.c1 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT x'')) ORDER BY LIKE((~ (0Xffffffffd4e8fac3)), (((t0.c70, t0.c3, t0.c70))<=((t0.c70, t0.c4, t0.c4)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT x'')) IS TRUE)  as count FROM t0 ORDER BY LIKE((~ (0Xffffffffd4e8fac3)), (((t0.c70, t0.c3, t0.c70))<=((t0.c70, t0.c4, t0.c4)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT x'')) ORDER BY LIKE((~ (0Xffffffffd4e8fac3)), (((t0.c70, t0.c3, t0.c70))<=((t0.c70, t0.c4, t0.c4)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT x'')) IS TRUE)  as count FROM t0 ORDER BY LIKE((~ (0Xffffffffd4e8fac3)), (((t0.c70, t0.c3, t0.c70))<=((t0.c70, t0.c4, t0.c4)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT x'')) ORDER BY LIKE((~ (0Xffffffffd4e8fac3)), (((t0.c70, t0.c3, t0.c70))<=((t0.c70, t0.c4, t0.c4)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((t0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0))) ISNULL) LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) IS FALSE) WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN ((((('105483093')AND('497477572')))AND(vt1.c1))) AND (ABS(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM) BETWEEN ((((('105483093')AND('497477572')))AND(vt1.c1))) AND (ABS(t0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((t0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0))) ISNULL) LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((t0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0))) ISNULL) LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) IS FALSE) WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN ((((('105483093')AND('497477572')))AND(vt1.c1))) AND (ABS(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM) BETWEEN ((((('105483093')AND('497477572')))AND(vt1.c1))) AND (ABS(t0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((t0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0))) ISNULL) LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((t0.c3) NOT BETWEEN (vt0.c0) AND (vt1.c0))) ISNULL) LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) IS FALSE) WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN ((((('105483093')AND('497477572')))AND(vt1.c1))) AND (ABS(t0.c2))));
SELECT * FROM t0, vt1, vt0 WHERE ((((((t0.c5)) BETWEEN ((vt0.c1)) AND ((t0.c5))))*((t0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c5)) BETWEEN ((vt0.c1)) AND ((t0.c5))))*((t0.c3 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((((t0.c5)) BETWEEN ((vt0.c1)) AND ((t0.c5))))*((t0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c5)) BETWEEN ((vt0.c1)) AND ((t0.c5))))*((t0.c3 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((((t0.c5)) BETWEEN ((vt0.c1)) AND ((t0.c5))))*((t0.c3 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c4) NOT NULL))OR((- (t0.c0)))))AND(CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c5 END)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c1 THEN t0.c2 END))) ORDER BY (- (t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c4) NOT NULL))OR((- (t0.c0)))))AND(CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c5 END)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c1 THEN t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c2 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c4) NOT NULL))OR((- (t0.c0)))))AND(CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c5 END)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c1 THEN t0.c2 END))) ORDER BY (- (t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c4) NOT NULL))OR((- (t0.c0)))))AND(CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c5 END)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c1 THEN t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c2 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c4) NOT NULL))OR((- (t0.c0)))))AND(CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c5 END)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN t0.c1 THEN t0.c2 END))) ORDER BY (- (t0.c2 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE vt1.c1  WHEN t0.c3 THEN x'9cd6' WHEN t0.c0 THEN t0.c1 WHEN t0.c5 THEN t0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN t0.c3 THEN x'9cd6' WHEN t0.c0 THEN t0.c1 WHEN t0.c5 THEN t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE vt1.c1  WHEN t0.c3 THEN x'9cd6' WHEN t0.c0 THEN t0.c1 WHEN t0.c5 THEN t0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN t0.c3 THEN x'9cd6' WHEN t0.c0 THEN t0.c1 WHEN t0.c5 THEN t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE vt1.c1  WHEN t0.c3 THEN x'9cd6' WHEN t0.c0 THEN t0.c1 WHEN t0.c5 THEN t0.c0 END COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((- (((NULL) BETWEEN (t0.c3) AND (t0.c70))))) ORDER BY (~ (CASE WHEN t0.c5 THEN t0.c2 ELSE t0.c5 END));
SELECT SUM(count) FROM (SELECT (((- (((NULL) BETWEEN (t0.c3) AND (t0.c70))))) IS TRUE)  as count FROM t0 ORDER BY (~ (CASE WHEN t0.c5 THEN t0.c2 ELSE t0.c5 END)));
SELECT ALL * FROM t0 WHERE ((- (((NULL) BETWEEN (t0.c3) AND (t0.c70))))) ORDER BY (~ (CASE WHEN t0.c5 THEN t0.c2 ELSE t0.c5 END));
SELECT SUM(count) FROM (SELECT (((- (((NULL) BETWEEN (t0.c3) AND (t0.c70))))) IS TRUE)  as count FROM t0 ORDER BY (~ (CASE WHEN t0.c5 THEN t0.c2 ELSE t0.c5 END)));
SELECT ALL * FROM t0 WHERE ((- (((NULL) BETWEEN (t0.c3) AND (t0.c70))))) ORDER BY (~ (CASE WHEN t0.c5 THEN t0.c2 ELSE t0.c5 END));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c5)) NOT BETWEEN ((GLOB(0X5b65c29c, t0.c3))) AND ((((((((((t0.c2)AND(NULL)))OR(x'')))AND(t0.c1)))OR(t0.c70))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c5)) NOT BETWEEN ((GLOB(0x5b65c29c, t0.c3))) AND ((((((((((t0.c2)AND(NULL)))OR(x'')))AND(t0.c1)))OR(t0.c70)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c5)) NOT BETWEEN ((GLOB(0X5b65c29c, t0.c3))) AND ((((((((((t0.c2)AND(NULL)))OR(x'')))AND(t0.c1)))OR(t0.c70))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c5)) NOT BETWEEN ((GLOB(0x5b65c29c, t0.c3))) AND ((((((((((t0.c2)AND(NULL)))OR(x'')))AND(t0.c1)))OR(t0.c70)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c5)) NOT BETWEEN ((GLOB(0X5b65c29c, t0.c3))) AND ((((((((((t0.c2)AND(NULL)))OR(x'')))AND(t0.c1)))OR(t0.c70))))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)&(CAST(t0.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)&(CAST(t0.c4 AS NUMERIC)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)&(CAST(t0.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)&(CAST(t0.c4 AS NUMERIC)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (NOT (t0.c0)) COLLATE BINARY WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)&(CAST(t0.c4 AS NUMERIC))));
SELECT ALL * FROM vt1, t0 WHERE ((- ('w{' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- ('w{' COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((- ('w{' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- ('w{' COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((- ('w{' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c70);
SELECT SUM(count) FROM (SELECT ALL ((t0.c70) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c70);
SELECT SUM(count) FROM (SELECT ALL ((t0.c70) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c70);
SELECT * FROM vt1, t0, vt0 WHERE ((~ ((- (t0.c5))))) ORDER BY ((t0.c2)<=(t0.c2)) COLLATE BINARY  NULLS LAST, ((((((vt1.c0))!=((t0.c2)))))<>((0.20972542349514))) ASC, (((- (t0.c5)))>(CAST(t0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t0.c5))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c2)<=(t0.c2)) COLLATE BINARY  NULLS LAST, ((((((vt1.c0))<>((t0.c2)))))<>((0.20972542349514))) ASC, (((- (t0.c5)))>(CAST(t0.c2 AS BLOB))) DESC);
SELECT * FROM vt1, t0, vt0 WHERE ((~ ((- (t0.c5))))) ORDER BY ((t0.c2)<=(t0.c2)) COLLATE BINARY  NULLS LAST, ((((((vt1.c0))!=((t0.c2)))))<>((0.20972542349514))) ASC, (((- (t0.c5)))>(CAST(t0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t0.c5))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c2)<=(t0.c2)) COLLATE BINARY  NULLS LAST, ((((((vt1.c0))<>((t0.c2)))))<>((0.20972542349514))) ASC, (((- (t0.c5)))>(CAST(t0.c2 AS BLOB))) DESC);
SELECT * FROM vt1, t0, vt0 WHERE ((~ ((- (t0.c5))))) ORDER BY ((t0.c2)<=(t0.c2)) COLLATE BINARY  NULLS LAST, ((((((vt1.c0))!=((t0.c2)))))<>((0.20972542349514))) ASC, (((- (t0.c5)))>(CAST(t0.c2 AS BLOB))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c3  WHEN t0.c0 THEN t0.c0 END)IS NOT(CAST(t0.c5 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c3  WHEN t0.c0 THEN t0.c0 END)IS NOT(CAST(t0.c5 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c3  WHEN t0.c0 THEN t0.c0 END)IS NOT(CAST(t0.c5 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c3  WHEN t0.c0 THEN t0.c0 END)IS NOT(CAST(t0.c5 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c3  WHEN t0.c0 THEN t0.c0 END)IS NOT(CAST(t0.c5 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((CAST(vt0.c0 AS TEXT))AND(((t0.c0) BETWEEN (1732803924) AND (t0.c70)))))AND(((t0.c4)<<(vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN '-1854317632' ELSE ((((((((t0.c3)AND(t0.c70)))AND(t0.c3)))AND(vt0.c1)))OR(t0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN '-1854317632' ELSE ((((((((t0.c3)AND(t0.c70)))AND(t0.c3)))AND(vt0.c1)))OR(t0.c3)) END) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((((CAST(vt0.c0 AS TEXT))AND(((t0.c0) BETWEEN (1732803924) AND (t0.c70)))))AND(((t0.c4)<<(vt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((CAST(vt0.c0 AS TEXT))AND(((t0.c0) BETWEEN (1732803924) AND (t0.c70)))))AND(((t0.c4)<<(vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN '-1854317632' ELSE ((((((((t0.c3)AND(t0.c70)))AND(t0.c3)))AND(vt0.c1)))OR(t0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN '-1854317632' ELSE ((((((((t0.c3)AND(t0.c70)))AND(t0.c3)))AND(vt0.c1)))OR(t0.c3)) END) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((((CAST(vt0.c0 AS TEXT))AND(((t0.c0) BETWEEN (1732803924) AND (t0.c70)))))AND(((t0.c4)<<(vt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((CAST(vt0.c0 AS TEXT))AND(((t0.c0) BETWEEN (1732803924) AND (t0.c70)))))AND(((t0.c4)<<(vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN '-1854317632' ELSE ((((((((t0.c3)AND(t0.c70)))AND(t0.c3)))AND(vt0.c1)))OR(t0.c3)) END);
SELECT * FROM vt0, vt1 WHERE (((((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((vt1.c1 COLLATE BINARY) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c1 COLLATE BINARY) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c0) IS FALSE))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((vt1.c1 COLLATE BINARY) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c1 COLLATE BINARY) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c0) IS FALSE))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((vt1.c1 COLLATE BINARY) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c0) IS FALSE))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((((NULL)OR(((vt0.c0)<=(vt0.c1)))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY ((NULL) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((vt0.c0)<=(vt0.c1)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((NULL)OR(((vt0.c0)<=(vt0.c1)))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY ((NULL) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((vt0.c0)<=(vt0.c1)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((NULL)OR(((vt0.c0)<=(vt0.c1)))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY ((NULL) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (0.5422180882017903 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.5422180882017903 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (0.5422180882017903 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.5422180882017903 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (0.5422180882017903 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM t0 WHERE (((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))OR((((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c5))))))AND(((x'')<(t0.c0))))) ORDER BY ((((t0.c3)>=('D?*7')))<<(CAST(t0.c3 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))OR((((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c5))))))AND(((x'')<(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c3)>=('D?*7')))<<(CAST(t0.c3 AS BLOB))) ASC);
SELECT ALL * FROM t0 WHERE (((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))OR((((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c5))))))AND(((x'')<(t0.c0))))) ORDER BY ((((t0.c3)>=('D?*7')))<<(CAST(t0.c3 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))OR((((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c5))))))AND(((x'')<(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c3)>=('D?*7')))<<(CAST(t0.c3 AS BLOB))) ASC);
SELECT ALL * FROM t0 WHERE (((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))OR((((t0.c5)) NOT BETWEEN ((t0.c3)) AND ((t0.c5))))))AND(((x'')<(t0.c0))))) ORDER BY ((((t0.c3)>=('D?*7')))<<(CAST(t0.c3 AS BLOB))) ASC;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c5)OR((((-84906990)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))))))AND((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c5)OR((((-84906990)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))))))AND((- (t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c5)OR((((-84906990)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))))))AND((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c5)OR((((-84906990)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))))))AND((- (t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c5)OR((((-84906990)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))))))AND((- (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (t0.c4 IN (vt1.c1, ((((NULL)OR(t0.c3)))OR(t0.c3)))) FULL OUTER JOIN vt1 ON ('' IN ()) WHERE ('nh{IrF') ORDER BY TRIM(0.6038422306482338) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('nh{IrF') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (t0.c4 IN (vt1.c1, ((((NULL)OR(t0.c3)))OR(t0.c3)))) FULL OUTER JOIN vt1 ON ('' IN ()) ORDER BY TRIM(0.6038422306482338) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (t0.c4 IN (vt1.c1, ((((NULL)OR(t0.c3)))OR(t0.c3)))) FULL OUTER JOIN vt1 ON ('' IN ()) WHERE ('nh{IrF') ORDER BY TRIM(0.6038422306482338) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('nh{IrF') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (t0.c4 IN (vt1.c1, ((((NULL)OR(t0.c3)))OR(t0.c3)))) FULL OUTER JOIN vt1 ON ('' IN ()) ORDER BY TRIM(0.6038422306482338) ASC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((t0.c0)LIKE(t0.c70)))AND(CAST(425721960 AS TEXT))))OR(RTRIM(t0.c4))))AND((t0.c3 IN ()))))AND('!	L>N<vRN')));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)LIKE(t0.c70)))AND(CAST(425721960 AS TEXT))))OR(RTRIM(t0.c4))))AND((t0.c3 IN ()))))AND('!	L>N<vRN'))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((t0.c0)LIKE(t0.c70)))AND(CAST(425721960 AS TEXT))))OR(RTRIM(t0.c4))))AND((t0.c3 IN ()))))AND('!	L>N<vRN')));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)LIKE(t0.c70)))AND(CAST(425721960 AS TEXT))))OR(RTRIM(t0.c4))))AND((t0.c3 IN ()))))AND('!	L>N<vRN'))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((t0.c0)LIKE(t0.c70)))AND(CAST(425721960 AS TEXT))))OR(RTRIM(t0.c4))))AND((t0.c3 IN ()))))AND('!	L>N<vRN')));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))<=((((t0.c0, t0.c2, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c0)) AND ((t0.c1, t0.c5, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))<=((((t0.c0, t0.c2, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c0)) AND ((t0.c1, t0.c5, t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))<=((((t0.c0, t0.c2, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c0)) AND ((t0.c1, t0.c5, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))<=((((t0.c0, t0.c2, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c0)) AND ((t0.c1, t0.c5, t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))<=((((t0.c0, t0.c2, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c0)) AND ((t0.c1, t0.c5, t0.c0))))));
SELECT ALL * FROM t0 WHERE (x'9f0c');
SELECT SUM(count) FROM (SELECT ALL ((x'9f0c') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'9f0c');
SELECT SUM(count) FROM (SELECT ALL ((x'9f0c') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'9f0c');
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c5)<(vt0.c0))) NOTNULL)) ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c70) IS TRUE) WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c2)>=(NULL)) ELSE ((t0.c1)*(t0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c5)<(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c70) IS TRUE) WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c2)>=(NULL)) ELSE ((t0.c1)*(t0.c1)) END ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c5)<(vt0.c0))) NOTNULL)) ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c70) IS TRUE) WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c2)>=(NULL)) ELSE ((t0.c1)*(t0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c5)<(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c70) IS TRUE) WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c2)>=(NULL)) ELSE ((t0.c1)*(t0.c1)) END ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c4);
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c4);
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c4);
SELECT COUNT(*) FROM vt0, t0 WHERE (load_extension(CASE t0.c2  WHEN vt0.c0 THEN t0.c5 END, CASE WHEN t0.c0 THEN t0.c70 END));
SELECT SUM(count) FROM (SELECT ((load_extension(CASE t0.c2  WHEN vt0.c0 THEN t0.c5 END, CASE WHEN t0.c0 THEN t0.c70 END)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (load_extension(CASE t0.c2  WHEN vt0.c0 THEN t0.c5 END, CASE WHEN t0.c0 THEN t0.c70 END));
SELECT SUM(count) FROM (SELECT ((load_extension(CASE t0.c2  WHEN vt0.c0 THEN t0.c5 END, CASE WHEN t0.c0 THEN t0.c70 END)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((CASE vt1.c1  WHEN t0.c70 THEN t0.c3 ELSE vt1.c1 END) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CASE vt1.c1  WHEN t0.c70 THEN t0.c3 ELSE vt1.c1 END) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((CASE vt1.c1  WHEN t0.c70 THEN t0.c3 ELSE vt1.c1 END) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CASE vt1.c1  WHEN t0.c70 THEN t0.c3 ELSE vt1.c1 END) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((CASE vt1.c1  WHEN t0.c70 THEN t0.c3 ELSE vt1.c1 END) IS TRUE) DESC;
SELECT * FROM vt0, vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END THEN IFNULL(DISTINCT vt0.c0, vt0.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'39a3')) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (0.5894644320217761) AND (vt1.c1)) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) ELSE NULLIF(DISTINCT vt1.c0, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END THEN IFNULL(DISTINCT vt0.c0, vt0.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'39a3')) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (0.5894644320217761) AND (vt1.c1)) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) ELSE NULLIF(DISTINCT vt1.c0, vt0.c1) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END THEN IFNULL(DISTINCT vt0.c0, vt0.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'39a3')) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (0.5894644320217761) AND (vt1.c1)) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) ELSE NULLIF(DISTINCT vt1.c0, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END THEN IFNULL(DISTINCT vt0.c0, vt0.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'39a3')) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (0.5894644320217761) AND (vt1.c1)) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) ELSE NULLIF(DISTINCT vt1.c0, vt0.c1) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END THEN IFNULL(DISTINCT vt0.c0, vt0.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'39a3')) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (0.5894644320217761) AND (vt1.c1)) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) ELSE NULLIF(DISTINCT vt1.c0, vt0.c1) END);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN t0.c70 THEN t0.c4 END)) AND ((((vt1.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CASE WHEN t0.c70 THEN t0.c4 END)) AND ((((vt1.c1) NOT NULL))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN t0.c70 THEN t0.c4 END)) AND ((((vt1.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CASE WHEN t0.c70 THEN t0.c4 END)) AND ((((vt1.c1) NOT NULL))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN t0.c70 THEN t0.c4 END)) AND ((((vt1.c1) NOT NULL)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c5 THEN 0.9643549610503589 WHEN t0.c0 THEN t0.c70 WHEN t0.c3 THEN t0.c4 ELSE t0.c0 END) BETWEEN (CAST(t0.c0 AS BLOB)) AND (((t0.c70) NOTNULL)))) ORDER BY LIKE(t0.c3, x'', '-')  NULLS LAST, ((((NULL)>=(t0.c4))) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c70 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c5 THEN 0.9643549610503589 WHEN t0.c0 THEN t0.c70 WHEN t0.c3 THEN t0.c4 ELSE t0.c0 END) BETWEEN (CAST(t0.c0 AS BLOB)) AND (((t0.c70) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY LIKE(t0.c3, x'', '-')  NULLS LAST, ((((NULL)>=(t0.c4))) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c70 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c5 THEN 0.9643549610503589 WHEN t0.c0 THEN t0.c70 WHEN t0.c3 THEN t0.c4 ELSE t0.c0 END) BETWEEN (CAST(t0.c0 AS BLOB)) AND (((t0.c70) NOTNULL)))) ORDER BY LIKE(t0.c3, x'', '-')  NULLS LAST, ((((NULL)>=(t0.c4))) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c70 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c5 THEN 0.9643549610503589 WHEN t0.c0 THEN t0.c70 WHEN t0.c3 THEN t0.c4 ELSE t0.c0 END) BETWEEN (CAST(t0.c0 AS BLOB)) AND (((t0.c70) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY LIKE(t0.c3, x'', '-')  NULLS LAST, ((((NULL)>=(t0.c4))) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c70 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c5 THEN 0.9643549610503589 WHEN t0.c0 THEN t0.c70 WHEN t0.c3 THEN t0.c4 ELSE t0.c0 END) BETWEEN (CAST(t0.c0 AS BLOB)) AND (((t0.c70) NOTNULL)))) ORDER BY LIKE(t0.c3, x'', '-')  NULLS LAST, ((((NULL)>=(t0.c4))) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (CAST(t0.c70 AS TEXT))) DESC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (CHAR(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c70)), CASE WHEN t0.c4 THEN t0.c70 ELSE vt0.c1 END, t0.c4)) ORDER BY ((((t0.c70)<(t0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CHAR(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c70)), CASE WHEN t0.c4 THEN t0.c70 ELSE vt0.c1 END, t0.c4)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c70)<(t0.c2))) ISNULL));
SELECT * FROM t0, vt0 WHERE (CHAR(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c70)), CASE WHEN t0.c4 THEN t0.c70 ELSE vt0.c1 END, t0.c4)) ORDER BY ((((t0.c70)<(t0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CHAR(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c70)), CASE WHEN t0.c4 THEN t0.c70 ELSE vt0.c1 END, t0.c4)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c70)<(t0.c2))) ISNULL));
SELECT * FROM t0, vt0 WHERE (CHAR(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c70)), CASE WHEN t0.c4 THEN t0.c70 ELSE vt0.c1 END, t0.c4)) ORDER BY ((((t0.c70)<(t0.c2))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE (((TRIM(vt1.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND ((((vt0.c1))<=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND ((((vt0.c1))<=((vt1.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE (((TRIM(vt1.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND ((((vt0.c1))<=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND ((((vt0.c1))<=((vt1.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE (((TRIM(vt1.c0)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND ((((vt0.c1))<=((vt1.c1))))));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (+ (t0.c5)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((t0.c70)) NOT BETWEEN ((x'1aaf')) AND ((((t0.c2)OR(t0.c2))))) WHERE (CAST((t0.c70 IN ()) AS BLOB)) ORDER BY (((((t0.c2)&(t0.c2)), ((vt1.c1)-(vt0.c1)), (t0.c70 IN ())))==(((vt0.c1 IN ()), ((t0.c5)-(t0.c3)), (NOT (0.10463564913053036)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c70 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (+ (t0.c5)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((t0.c70)) NOT BETWEEN ((x'1aaf')) AND ((((t0.c2)OR(t0.c2))))) ORDER BY (((((t0.c2)&(t0.c2)), ((vt1.c1)-(vt0.c1)), (t0.c70 IN ())))=(((vt0.c1 IN ()), ((t0.c5)-(t0.c3)), (NOT (0.10463564913053036)))))  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (+ (t0.c5)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((t0.c70)) NOT BETWEEN ((x'1aaf')) AND ((((t0.c2)OR(t0.c2))))) WHERE (CAST((t0.c70 IN ()) AS BLOB)) ORDER BY (((((t0.c2)&(t0.c2)), ((vt1.c1)-(vt0.c1)), (t0.c70 IN ())))==(((vt0.c1 IN ()), ((t0.c5)-(t0.c3)), (NOT (0.10463564913053036)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c70 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (+ (t0.c5)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((t0.c70)) NOT BETWEEN ((x'1aaf')) AND ((((t0.c2)OR(t0.c2))))) ORDER BY (((((t0.c2)&(t0.c2)), ((vt1.c1)-(vt0.c1)), (t0.c70 IN ())))=(((vt0.c1 IN ()), ((t0.c5)-(t0.c3)), (NOT (0.10463564913053036)))))  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (+ (t0.c5)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((t0.c70)) NOT BETWEEN ((x'1aaf')) AND ((((t0.c2)OR(t0.c2))))) WHERE (CAST((t0.c70 IN ()) AS BLOB)) ORDER BY (((((t0.c2)&(t0.c2)), ((vt1.c1)-(vt0.c1)), (t0.c70 IN ())))==(((vt0.c1 IN ()), ((t0.c5)-(t0.c3)), (NOT (0.10463564913053036)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((NULL)OR((+ (vt1.c0)))))OR(CAST(t0.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((+ (vt1.c0)))))OR(CAST(t0.c4 AS TEXT)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((NULL)OR((+ (vt1.c0)))))OR(CAST(t0.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((+ (vt1.c0)))))OR(CAST(t0.c4 AS TEXT)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((NULL)OR((+ (vt1.c0)))))OR(CAST(t0.c4 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c1 END IN ())) ORDER BY (((((NOT (vt1.c0)))OR((('0.0')&(vt1.c0)))))OR((((vt1.c1, vt1.c0, vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, vt1.c1, vt0.c0, vt0.c1, vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((NOT (vt1.c0)))OR((('0.0')&(vt1.c0)))))OR((((vt1.c1, vt1.c0, vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, vt1.c1, vt0.c0, vt0.c1, vt1.c1))))));
SELECT ALL * FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c1 END IN ())) ORDER BY (((((NOT (vt1.c0)))OR((('0.0')&(vt1.c0)))))OR((((vt1.c1, vt1.c0, vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, vt1.c1, vt0.c0, vt0.c1, vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((NOT (vt1.c0)))OR((('0.0')&(vt1.c0)))))OR((((vt1.c1, vt1.c0, vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, vt1.c1, vt0.c0, vt0.c1, vt1.c1))))));
SELECT ALL * FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c1 END IN ())) ORDER BY (((((NOT (vt1.c0)))OR((('0.0')&(vt1.c0)))))OR((((vt1.c1, vt1.c0, vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, vt1.c1, vt0.c0, vt0.c1, vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (TRIM((- (t0.c0)))) ORDER BY CAST(ABS(DISTINCT vt1.c1) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM((- (t0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(ABS(DISTINCT vt1.c1) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (TRIM((- (t0.c0)))) ORDER BY CAST(ABS(DISTINCT vt1.c1) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM((- (t0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(ABS(DISTINCT vt1.c1) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (TRIM((- (t0.c0)))) ORDER BY CAST(ABS(DISTINCT vt1.c1) AS TEXT) DESC;
SELECT COUNT(*) FROM t0 WHERE ('2060103510') ORDER BY (CAST(t0.c1 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT (('2060103510') IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c1 AS INTEGER) IN ()));
SELECT COUNT(*) FROM t0 WHERE ('2060103510') ORDER BY (CAST(t0.c1 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT (('2060103510') IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c1 AS INTEGER) IN ()));
SELECT COUNT(*) FROM t0 WHERE ('2060103510') ORDER BY (CAST(t0.c1 AS INTEGER) IN ());
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE (~ (1472981340))  WHEN t0.c70 THEN ((t0.c5)!=(t0.c3)) END) ORDER BY ((((x'7664c035')>(t0.c3)))%(CAST(t0.c70 AS NUMERIC))) ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL)) IS TRUE)  NULLS LAST, CAST(t0.c2 AS REAL) ASC, (LIKELY(DISTINCT vt0.c1) IN (((vt1.c0)IS NOT(0X78404e9)))) ASC  NULLS LAST, UPPER(UNICODE(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (~ (1472981340))  WHEN t0.c70 THEN ((t0.c5)<>(t0.c3)) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((x'7664c035')>(t0.c3)))%(CAST(t0.c70 AS NUMERIC))) ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL)) IS TRUE)  NULLS LAST, CAST(t0.c2 AS REAL) ASC, (LIKELY(DISTINCT vt0.c1) IN (((vt1.c0)IS NOT(0x78404e9)))) ASC  NULLS LAST, UPPER(UNICODE(vt1.c1)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE (~ (1472981340))  WHEN t0.c70 THEN ((t0.c5)!=(t0.c3)) END) ORDER BY ((((x'7664c035')>(t0.c3)))%(CAST(t0.c70 AS NUMERIC))) ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL)) IS TRUE)  NULLS LAST, CAST(t0.c2 AS REAL) ASC, (LIKELY(DISTINCT vt0.c1) IN (((vt1.c0)IS NOT(0X78404e9)))) ASC  NULLS LAST, UPPER(UNICODE(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (~ (1472981340))  WHEN t0.c70 THEN ((t0.c5)<>(t0.c3)) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((x'7664c035')>(t0.c3)))%(CAST(t0.c70 AS NUMERIC))) ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL)) IS TRUE)  NULLS LAST, CAST(t0.c2 AS REAL) ASC, (LIKELY(DISTINCT vt0.c1) IN (((vt1.c0)IS NOT(0x78404e9)))) ASC  NULLS LAST, UPPER(UNICODE(vt1.c1)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE (~ (1472981340))  WHEN t0.c70 THEN ((t0.c5)!=(t0.c3)) END) ORDER BY ((((x'7664c035')>(t0.c3)))%(CAST(t0.c70 AS NUMERIC))) ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL)) IS TRUE)  NULLS LAST, CAST(t0.c2 AS REAL) ASC, (LIKELY(DISTINCT vt0.c1) IN (((vt1.c0)IS NOT(0X78404e9)))) ASC  NULLS LAST, UPPER(UNICODE(vt1.c1)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, UPPER(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, UPPER(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, UPPER(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, UPPER(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, UPPER(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT * FROM t0 WHERE (((((t0.c4)<=(0.44113092216285055))) NOT NULL)) ORDER BY 0.13356829964804373 DESC, 1340427519 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c4)<=(0.44113092216285055))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY 0.13356829964804373 DESC, 1340427519 COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c4)<=(0.44113092216285055))) NOT NULL)) ORDER BY 0.13356829964804373 DESC, 1340427519 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c4)<=(0.44113092216285055))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY 0.13356829964804373 DESC, 1340427519 COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0 WHERE (((2070197583) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((2070197583) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((2070197583) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((2070197583) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((2070197583) IS FALSE));
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CASE WHEN t0.c4 THEN t0.c1 END)) ORDER BY (((t0.c0 IN ()))>(((t0.c2)<(t0.c5)))), ((((t0.c2)IS NOT(t0.c4))) NOTNULL), ((t0.c4)+(t0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE WHEN t0.c4 THEN t0.c1 END)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))>(((t0.c2)<(t0.c5)))), ((((t0.c2)IS NOT(t0.c4))) NOTNULL), ((t0.c4)+(t0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CASE WHEN t0.c4 THEN t0.c1 END)) ORDER BY (((t0.c0 IN ()))>(((t0.c2)<(t0.c5)))), ((((t0.c2)IS NOT(t0.c4))) NOTNULL), ((t0.c4)+(t0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE WHEN t0.c4 THEN t0.c1 END)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))>(((t0.c2)<(t0.c5)))), ((((t0.c2)IS NOT(t0.c4))) NOTNULL), ((t0.c4)+(t0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CASE WHEN t0.c4 THEN t0.c1 END)) ORDER BY (((t0.c0 IN ()))>(((t0.c2)<(t0.c5)))), ((((t0.c2)IS NOT(t0.c4))) NOTNULL), ((t0.c4)+(t0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((1.340427519E9))<(((((vt1.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2, vt1.c0, NULL)) AND ((vt0.c0, t0.c2, t0.c0)))))) INNER JOIN vt1 ON ((t0.c5 COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(t0.c4)))AND(vt1.c0))) AND (((vt0.c1)IS(t0.c1)))) WHERE ((((t0.c3)) NOT BETWEEN (((~ (vt0.c1)))) AND ((CAST(-1.05781385E8 AS REAL))))) ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST, (NOT ((((t0.c2, t0.c5, vt0.c1, vt0.c0, t0.c70))>=((t0.c3, vt1.c0, t0.c70, vt0.c0, t0.c3)))))  NULLS FIRST, CAST('2030117646' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)) NOT BETWEEN (((~ (vt0.c1)))) AND ((CAST(-1.05781385E8 AS REAL))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((1.340427519E9))<(((((vt1.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2, vt1.c0, NULL)) AND ((vt0.c0, t0.c2, t0.c0)))))) INNER JOIN vt1 ON ((t0.c5 COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(t0.c4)))AND(vt1.c0))) AND (((vt0.c1)IS(t0.c1)))) ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST, (NOT ((((t0.c2, t0.c5, vt0.c1, vt0.c0, t0.c70))>=((t0.c3, vt1.c0, t0.c70, vt0.c0, t0.c3)))))  NULLS FIRST, CAST('2030117646' AS INTEGER) ASC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((1.340427519E9))<(((((vt1.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2, vt1.c0, NULL)) AND ((vt0.c0, t0.c2, t0.c0)))))) INNER JOIN vt1 ON ((t0.c5 COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(t0.c4)))AND(vt1.c0))) AND (((vt0.c1)IS(t0.c1)))) WHERE ((((t0.c3)) NOT BETWEEN (((~ (vt0.c1)))) AND ((CAST(-1.05781385E8 AS REAL))))) ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST, (NOT ((((t0.c2, t0.c5, vt0.c1, vt0.c0, t0.c70))>=((t0.c3, vt1.c0, t0.c70, vt0.c0, t0.c3)))))  NULLS FIRST, CAST('2030117646' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)) NOT BETWEEN (((~ (vt0.c1)))) AND ((CAST(-1.05781385E8 AS REAL))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((1.340427519E9))<(((((vt1.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2, vt1.c0, NULL)) AND ((vt0.c0, t0.c2, t0.c0)))))) INNER JOIN vt1 ON ((t0.c5 COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(t0.c4)))AND(vt1.c0))) AND (((vt0.c1)IS(t0.c1)))) ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST, (NOT ((((t0.c2, t0.c5, vt0.c1, vt0.c0, t0.c70))>=((t0.c3, vt1.c0, t0.c70, vt0.c0, t0.c3)))))  NULLS FIRST, CAST('2030117646' AS INTEGER) ASC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((1.340427519E9))<(((((vt1.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2, vt1.c0, NULL)) AND ((vt0.c0, t0.c2, t0.c0)))))) INNER JOIN vt1 ON ((t0.c5 COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(t0.c4)))AND(vt1.c0))) AND (((vt0.c1)IS(t0.c1)))) WHERE ((((t0.c3)) NOT BETWEEN (((~ (vt0.c1)))) AND ((CAST(-1.05781385E8 AS REAL))))) ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST, (NOT ((((t0.c2, t0.c5, vt0.c1, vt0.c0, t0.c70))>=((t0.c3, vt1.c0, t0.c70, vt0.c0, t0.c3)))))  NULLS FIRST, CAST('2030117646' AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)!=(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((('e)Da,', vt1.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt0.c0, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c1))) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)!=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((('e)Da,', vt1.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt0.c0, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c1))) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)!=(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((('e)Da,', vt1.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt0.c0, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c1))) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)!=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((('e)Da,', vt1.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt0.c0, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c1))) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)!=(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((('e)Da,', vt1.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt0.c0, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c1))) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c1)AND(t0.c0)))OR(t0.c1)))||(t0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))||(t0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c1)AND(t0.c0)))OR(t0.c1)))||(t0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))||(t0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c1)AND(t0.c0)))OR(t0.c1)))||(t0.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((((t0.c5)OR(0.4585049267798441)))OR(x'')) THEN CASE WHEN vt1.c1 THEN t0.c70 END END) ORDER BY ((((t0.c3) NOT NULL))GLOB(IFNULL(t0.c2, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ((((t0.c5)OR(0.4585049267798441)))OR(x'')) THEN CASE WHEN vt1.c1 THEN t0.c70 END END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((t0.c3) NOT NULL))GLOB(IFNULL(t0.c2, vt1.c0))) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((((t0.c5)OR(0.4585049267798441)))OR(x'')) THEN CASE WHEN vt1.c1 THEN t0.c70 END END) ORDER BY ((((t0.c3) NOT NULL))GLOB(IFNULL(t0.c2, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ((((t0.c5)OR(0.4585049267798441)))OR(x'')) THEN CASE WHEN vt1.c1 THEN t0.c70 END END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((t0.c3) NOT NULL))GLOB(IFNULL(t0.c2, vt1.c0))) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((((t0.c5)OR(0.4585049267798441)))OR(x'')) THEN CASE WHEN vt1.c1 THEN t0.c70 END END) ORDER BY ((((t0.c3) NOT NULL))GLOB(IFNULL(t0.c2, vt1.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((PRINTF(vt1.c0))>>(((((vt1.c1)AND(t0.c3)))AND(t0.c3))))) ORDER BY CAST((t0.c4 IN (vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((PRINTF(vt1.c0))>>(((((vt1.c1)AND(t0.c3)))AND(t0.c3))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST((t0.c4 IN (vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((PRINTF(vt1.c0))>>(((((vt1.c1)AND(t0.c3)))AND(t0.c3))))) ORDER BY CAST((t0.c4 IN (vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((PRINTF(vt1.c0))>>(((((vt1.c1)AND(t0.c3)))AND(t0.c3))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST((t0.c4 IN (vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((PRINTF(vt1.c0))>>(((((vt1.c1)AND(t0.c3)))AND(t0.c3))))) ORDER BY CAST((t0.c4 IN (vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((+ (vt0.c1))))  NULLS LAST, CAST(((vt0.c1)-(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((+ (vt0.c1))))  NULLS LAST, CAST(((vt0.c1)-(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((+ (vt0.c1))))  NULLS LAST, CAST(((vt0.c1)-(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((+ (vt0.c1))))  NULLS LAST, CAST(((vt0.c1)-(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((+ (vt0.c1))))  NULLS LAST, CAST(((vt0.c1)-(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((('	')AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))OR(t0.c4)))OR(t0.c4)))OR(t0.c3)))|(((t0.c1)<=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((('	')AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))OR(t0.c4)))OR(t0.c4)))OR(t0.c3)))|(((t0.c1)<=(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((('	')AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))OR(t0.c4)))OR(t0.c4)))OR(t0.c3)))|(((t0.c1)<=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((('	')AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))OR(t0.c4)))OR(t0.c4)))OR(t0.c3)))|(((t0.c1)<=(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((('	')AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))OR(t0.c4)))OR(t0.c4)))OR(t0.c3)))|(((t0.c1)<=(t0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((TYPEOF(DISTINCT vt0.c1))<=(NULL))) ORDER BY ABS(DISTINCT x'') COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c1))<=(NULL))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT x'') COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TYPEOF(DISTINCT vt0.c1))<=(NULL))) ORDER BY ABS(DISTINCT x'') COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c1))<=(NULL))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT x'') COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TYPEOF(DISTINCT vt0.c1))<=(NULL))) ORDER BY ABS(DISTINCT x'') COLLATE BINARY ASC;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_SOURCE_ID() WHERE ((((~ (vt0.c0))) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_SOURCE_ID());
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_SOURCE_ID() WHERE ((((~ (vt0.c0))) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_SOURCE_ID());
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_SOURCE_ID() WHERE ((((~ (vt0.c0))) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)LIKE(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON (x'' IN ()) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (x'' IN ()));
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON (x'' IN ()) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (x'' IN ()));
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON (x'' IN ()) WHERE (vt0.c1);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((((vt1.c1))==((vt1.c0)))) AND ((~ (vt1.c0))))) ORDER BY (((~ (vt0.c1)))+(((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((((vt1.c1))=((vt1.c0)))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt0.c1)))+(((vt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((((vt1.c1))==((vt1.c0)))) AND ((~ (vt1.c0))))) ORDER BY (((~ (vt0.c1)))+(((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((((vt1.c1))=((vt1.c0)))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt0.c1)))+(((vt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((((vt1.c1))==((vt1.c0)))) AND ((~ (vt1.c0))))) ORDER BY (((~ (vt0.c1)))+(((vt0.c1) NOTNULL)));
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((CASE WHEN t0.c2 THEN x'' END)OR('E!v! Juv' COLLATE RTRIM)))AND(((vt0.c1) NOT BETWEEN (t0.c4) AND (t0.c4))))) ORDER BY ((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c1))) IN ((((vt0.c0, vt0.c1, t0.c5))>((t0.c3, '︂RT)&\r', vt1.c1))), (+ (t0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c2 THEN x'' END)OR('E!v! Juv' COLLATE RTRIM)))AND(((vt0.c1) NOT BETWEEN (t0.c4) AND (t0.c4))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c1))) IN ((((vt0.c0, vt0.c1, t0.c5))>((t0.c3, '︂RT)&\r', vt1.c1))), (+ (t0.c4)))) ASC);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((CASE WHEN t0.c2 THEN x'' END)OR('E!v! Juv' COLLATE RTRIM)))AND(((vt0.c1) NOT BETWEEN (t0.c4) AND (t0.c4))))) ORDER BY ((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c1))) IN ((((vt0.c0, vt0.c1, t0.c5))>((t0.c3, '︂RT)&\r', vt1.c1))), (+ (t0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c2 THEN x'' END)OR('E!v! Juv' COLLATE RTRIM)))AND(((vt0.c1) NOT BETWEEN (t0.c4) AND (t0.c4))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c1))) IN ((((vt0.c0, vt0.c1, t0.c5))>((t0.c3, '︂RT)&\r', vt1.c1))), (+ (t0.c4)))) ASC);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((CASE WHEN t0.c2 THEN x'' END)OR('E!v! Juv' COLLATE RTRIM)))AND(((vt0.c1) NOT BETWEEN (t0.c4) AND (t0.c4))))) ORDER BY ((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c1))) IN ((((vt0.c0, vt0.c1, t0.c5))>((t0.c3, '︂RT)&\r', vt1.c1))), (+ (t0.c4)))) ASC;
SELECT ALL * FROM vt1 WHERE (UNLIKELY(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (UNLIKELY(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (UNLIKELY(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c1)<=(TYPEOF(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)<=(TYPEOF(DISTINCT vt0.c1))));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c1)<=(TYPEOF(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)<=(TYPEOF(DISTINCT vt0.c1))));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c1)<=(TYPEOF(DISTINCT vt0.c1)));
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1);
SELECT * FROM vt0, t0 WHERE ((((t0.c0, t0.c0, t0.c70)) BETWEEN ((((t0.c3)>>(t0.c5)), (((t0.c5, vt0.c0, t0.c5)) BETWEEN ((vt0.c1, t0.c4, vt0.c0)) AND ((vt0.c1, t0.c70, t0.c0))), ((vt0.c1) IS FALSE))) AND ((json_patch(vt0.c0, t0.c70), vt0.c1, t0.c3 COLLATE RTRIM)))) ORDER BY (((t0.c4 COLLATE NOCASE, (((t0.c5))!=((t0.c4))), x''))<(((t0.c4 IN (t0.c3)), json_patch(t0.c3, t0.c4), (((t0.c4, t0.c2, t0.c5))<=((t0.c70, t0.c70, vt0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c70)) BETWEEN ((((t0.c3)>>(t0.c5)), (((t0.c5, vt0.c0, t0.c5)) BETWEEN ((vt0.c1, t0.c4, vt0.c0)) AND ((vt0.c1, t0.c70, t0.c0))), ((vt0.c1) IS FALSE))) AND ((json_patch(vt0.c0, t0.c70), vt0.c1, t0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c4 COLLATE NOCASE, (((t0.c5))!=((t0.c4))), x''))<(((t0.c4 IN (t0.c3)), json_patch(t0.c3, t0.c4), (((t0.c4, t0.c2, t0.c5))<=((t0.c70, t0.c70, vt0.c0))))))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((t0.c0, t0.c0, t0.c70)) BETWEEN ((((t0.c3)>>(t0.c5)), (((t0.c5, vt0.c0, t0.c5)) BETWEEN ((vt0.c1, t0.c4, vt0.c0)) AND ((vt0.c1, t0.c70, t0.c0))), ((vt0.c1) IS FALSE))) AND ((json_patch(vt0.c0, t0.c70), vt0.c1, t0.c3 COLLATE RTRIM)))) ORDER BY (((t0.c4 COLLATE NOCASE, (((t0.c5))!=((t0.c4))), x''))<(((t0.c4 IN (t0.c3)), json_patch(t0.c3, t0.c4), (((t0.c4, t0.c2, t0.c5))<=((t0.c70, t0.c70, vt0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c70)) BETWEEN ((((t0.c3)>>(t0.c5)), (((t0.c5, vt0.c0, t0.c5)) BETWEEN ((vt0.c1, t0.c4, vt0.c0)) AND ((vt0.c1, t0.c70, t0.c0))), ((vt0.c1) IS FALSE))) AND ((json_patch(vt0.c0, t0.c70), vt0.c1, t0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c4 COLLATE NOCASE, (((t0.c5))!=((t0.c4))), x''))<(((t0.c4 IN (t0.c3)), json_patch(t0.c3, t0.c4), (((t0.c4, t0.c2, t0.c5))<=((t0.c70, t0.c70, vt0.c0))))))  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (IFNULL(DISTINCT -9.65096994E8, NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT -9.65096994E8, NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (IFNULL(DISTINCT -9.65096994E8, NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT -9.65096994E8, NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (IFNULL(DISTINCT -9.65096994E8, NULL) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))AND(t0.c70)))AND(t0.c3)))OR(t0.c1)))OR(CASE t0.c3  WHEN t0.c5 THEN t0.c0 END))) ORDER BY t0.c2 ASC, (NOT ((t0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))AND(t0.c70)))AND(t0.c3)))OR(t0.c1)))OR(CASE t0.c3  WHEN t0.c5 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC, (NOT ((t0.c2 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))AND(t0.c70)))AND(t0.c3)))OR(t0.c1)))OR(CASE t0.c3  WHEN t0.c5 THEN t0.c0 END))) ORDER BY t0.c2 ASC, (NOT ((t0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))AND(t0.c70)))AND(t0.c3)))OR(t0.c1)))OR(CASE t0.c3  WHEN t0.c5 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC, (NOT ((t0.c2 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c3)OR(t0.c2)))AND(t0.c1)))AND(t0.c70)))AND(t0.c3)))OR(t0.c1)))OR(CASE t0.c3  WHEN t0.c5 THEN t0.c0 END))) ORDER BY t0.c2 ASC, (NOT ((t0.c2 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST((+ (vt0.c1)) AS REAL)) ORDER BY ((vt1.c0) BETWEEN ('.衻Rvx') AND (-1854317632))  NULLS LAST, (((t0.c0 COLLATE RTRIM, ((t0.c4)<>('-614237350')), ABS(DISTINCT vt1.c1)))=((((t0.c0) NOT BETWEEN (t0.c3) AND (vt0.c0)), ((t0.c4) NOT BETWEEN (t0.c2) AND (vt0.c0)), ((((x'')OR(t0.c3)))AND(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt1.c0) BETWEEN ('.衻Rvx') AND (-1854317632))  NULLS LAST, (((t0.c0 COLLATE RTRIM, ((t0.c4)!=('-614237350')), ABS(DISTINCT vt1.c1)))=((((t0.c0) NOT BETWEEN (t0.c3) AND (vt0.c0)), ((t0.c4) NOT BETWEEN (t0.c2) AND (vt0.c0)), ((((x'')OR(t0.c3)))AND(vt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST((+ (vt0.c1)) AS REAL)) ORDER BY ((vt1.c0) BETWEEN ('.衻Rvx') AND (-1854317632))  NULLS LAST, (((t0.c0 COLLATE RTRIM, ((t0.c4)<>('-614237350')), ABS(DISTINCT vt1.c1)))=((((t0.c0) NOT BETWEEN (t0.c3) AND (vt0.c0)), ((t0.c4) NOT BETWEEN (t0.c2) AND (vt0.c0)), ((((x'')OR(t0.c3)))AND(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt1.c0) BETWEEN ('.衻Rvx') AND (-1854317632))  NULLS LAST, (((t0.c0 COLLATE RTRIM, ((t0.c4)!=('-614237350')), ABS(DISTINCT vt1.c1)))=((((t0.c0) NOT BETWEEN (t0.c3) AND (vt0.c0)), ((t0.c4) NOT BETWEEN (t0.c2) AND (vt0.c0)), ((((x'')OR(t0.c3)))AND(vt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST((+ (vt0.c1)) AS REAL)) ORDER BY ((vt1.c0) BETWEEN ('.衻Rvx') AND (-1854317632))  NULLS LAST, (((t0.c0 COLLATE RTRIM, ((t0.c4)<>('-614237350')), ABS(DISTINCT vt1.c1)))=((((t0.c0) NOT BETWEEN (t0.c3) AND (vt0.c0)), ((t0.c4) NOT BETWEEN (t0.c2) AND (vt0.c0)), ((((x'')OR(t0.c3)))AND(vt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((t0.c0 IN ()) IN (((t0.c5)LIKE(t0.c70)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN (((t0.c5)LIKE(t0.c70))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((t0.c0 IN ()) IN (((t0.c5)LIKE(t0.c70)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN (((t0.c5)LIKE(t0.c70))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((t0.c0 IN ()) IN (((t0.c5)LIKE(t0.c70)))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((CAST(2029900374 AS INTEGER))&((NOT (t0.c0))))) ORDER BY (((t0.c0)-(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(2029900374 AS INTEGER))&((NOT (t0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((t0.c0)-(vt1.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((CAST(2029900374 AS INTEGER))&((NOT (t0.c0))))) ORDER BY (((t0.c0)-(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(2029900374 AS INTEGER))&((NOT (t0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((t0.c0)-(vt1.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((CAST(2029900374 AS INTEGER))&((NOT (t0.c0))))) ORDER BY (((t0.c0)-(vt1.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt1 ON 0.8881276023688375 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((((t0.c5)OR(t0.c70)))AND(0.5400560725361261))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 END) AND (((vt0.c1)IS NOT(t0.c5)))) WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt0.c0, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON 0.8881276023688375 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((((t0.c5)OR(t0.c70)))AND(0.5400560725361261))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 END) AND (((vt0.c1)IS NOT(t0.c5)))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON 0.8881276023688375 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((((t0.c5)OR(t0.c70)))AND(0.5400560725361261))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 END) AND (((vt0.c1)IS NOT(t0.c5)))) WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt0.c0, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON 0.8881276023688375 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((((t0.c5)OR(t0.c70)))AND(0.5400560725361261))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 END) AND (((vt0.c1)IS NOT(t0.c5)))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON 0.8881276023688375 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((((t0.c5)OR(t0.c70)))AND(0.5400560725361261))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 END) AND (((vt0.c1)IS NOT(t0.c5)))) WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0)) IS TRUE));
