-- Time: 2024/06/09 14:43:26
-- Database: database21
-- Database version: 3.40.0
-- seed value: 869354421
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, tokenize = "porter ascii"); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 789979485); -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.5760290461496935 COLLATE BINARY)<(CAST('' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS INTEGER)  WHEN (('') NOT BETWEEN ('') AND (0.6407940014885332)) THEN (((NULL, 0.5312224694669978, 0.4004409193407158))<=(('', '', x'a9dc'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '480311085 2 sz=480311085'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=423028823 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'371e')/(NULL))) NOT BETWEEN ((NOT (x'2b52'))) AND (HEX(0.5797466454346345))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('879687917'))<=(('0.5312224694669978'))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-215827307 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-465997846'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((('39507670')OR('39507670')))OR(x'')))AND(0.22591938372427411)))OR(0.8574556265666573)) THEN ((x'')<(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '881810907 sz=-154509791'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE -1.54509791E8; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('' COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN (0.6407940014885332)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-465997846 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1736617487 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (SQLITE_VERSION())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'b50e2f6e' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '49149202 sz=-1862084659 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-215827307 sz=-1736617487'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-859918923' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1736617487') BETWEEN (x'') AND (NULL)))AND((~ (4.9149202E7)))))AND(0.31599148186741155)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x'123f'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 0 sz=154150551 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOT BETWEEN ((- (NULL))) AND (CASE -9.14751577E8  WHEN 39507670 THEN '-914751577' WHEN x'aa8a' THEN 'u1' WHEN 0.5460389116367738 THEN x'' ELSE 'gSPIGv' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.9659729746147713)) NOT BETWEEN ((0.10082684231433525)) AND ((0.20099243739432116))) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1807917 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-426454793 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.5101863973802993) NOT BETWEEN ('154150551') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE '-1231536378'  WHEN 0x7b46ec66 THEN x'' END)) AND ((HEX(DISTINCT '480311085')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-215827307 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, -1146588517, '119904536')) BETWEEN (((((x''))>=((0.004438692324948756))), ((NULL) IS TRUE), 0.4482185839669258 COLLATE BINARY)) AND ((((0.03603192208321848)AND(0.8676983864071779)), ((0x1adf77ff)IS NOT('u1')), ((-595616961)/(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1637882798 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2100050825 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-595616961'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1850903685'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '857771227 sz=423028823 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('0.5101863973802993' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=857771227'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((687258874)<(-1.862084659E9))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-595616961 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '179034267 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (3.950767E7)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')+(0.7290287147048908)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'164b') NOT BETWEEN ('879687917') AND (-215827307)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1382995047 sz=857771227'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=256477489 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('[]')) BETWEEN ((((0.20377040967243054) NOTNULL))) AND ((((((((((((((0.14956684433484912)AND('-1231536378')))OR('450852863')))OR(NULL)))OR(x'')))AND(NULL)))OR(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2021759763 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '586542109 -1577210051'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')) BETWEEN ((x'86cd')) AND ((''))))AND(CASE x'e311'  WHEN NULL THEN '-855972585' END)))OR(UPPER(DISTINCT 0xffffffffffe469d3))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((' s'))<((0.07745246059211996))))<=((263177944 IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1920813545')OR(((0.004438692324948756) NOT BETWEEN ('-154509791') AND ('-2021759763')))))AND(CASE WHEN '83836185' THEN NULL WHEN -1287421745 THEN '119904536' WHEN '-Hg5)' THEN x'' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-403084389'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((NULL, x'', x'bb82'))>=((0.5460389116367738, NULL, '0.14956684433484912'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.7290287147048908 THEN 0.21839161058202372 WHEN NULL THEN 0.4156788712577685 WHEN 0.6407940014885332 THEN x'' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6463615056310107)AND(0.6514965520599675)))OR(0Xffffffff9102d7cd)))/(CAST(0.5941736468472214 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-9223372036854775808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array('02', 355045440))GLOB(((-1573715226)<=(0xffffffffd9d44236)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-279701663 sz=-958421531 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('~k') BETWEEN (0.4004409193407158) AND (-1.7976931348623157E308)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-276627902 480311085 sz=-1287421745'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((0.056880061607308186 IN ('119904536')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1700096410 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=513734573 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1965686687 sz=-595616961 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-277287973 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1787263122 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2068245606 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN '0.31599148186741155' THEN NULL ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-279701663 sz=-1472707082 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) BETWEEN ((((NULL)) BETWEEN ((x'bfae')) AND ((0x2c6c866a)))) AND (((x'28a3')LIKE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=513734573 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1618502002 unordered noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ('586542109' IN ()), 0.47543891442767505); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2106635033 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6544913035198164) BETWEEN ('-465997846') AND (x'31b8814c6acc')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1170015898 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1e500000s')AND(0X53560391)))AND(0.8167865105870408)))OR(0xffffffffe9698d7f)))AND(NULL)))>(((-17457105)&(-1.736617487E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE json_array(NULL, '1')  WHEN ((NULL)<(x'')) THEN ((((NULL)AND(0.5617191227448708)))OR('1981989221')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1064864850 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((x'' IN (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1920813545', 0.10082684231433525, 0.5825622870479411))>((0.9820295644566558, x'28f9', x'')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN (('C*f A(''M⠦' IN ())) AND (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(-5.95616961E8, x'', '-1172098391', 0.6097137057803564))/(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND('-300683180')))OR(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '263177944 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=719494813 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2035001251 sz=1295488991 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (0.6544913035198164) AND ('-832077855')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-111571537 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=689401948 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=149988629'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=586542109 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=1439840417 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1546379137'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((-1472707082) NOTNULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.463364920814167 AS INTEGER) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-640400842'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS BLOB) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2144615862 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(SQLITE_VERSION() AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1170015898'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1472707082'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '755617324 0 unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((0.05545692725983287 IN (0.7989903730883124)))LIKE((('⚗') NOT BETWEEN (x'c421') AND (x'59db')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-45146196 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=263177944 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(NULL, '') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=83836185 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=154150551 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(0.6407940014885332, 0.5338929591429309) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-513021131 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1139997568 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-940476776 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '996814437 sz=-214819374'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5056762107709204 AS INTEGER)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'B .ꀯy(' COLLATE RTRIM  WHEN ((0.5460389116367738) BETWEEN (NULL) AND (NULL)) THEN ((x'')&(NULL)) ELSE ((((-570789256)AND(x'')))OR(0.08678366010802863)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('' COLLATE NOCASE)AND('-865426505' COLLATE RTRIM)))OR((('') NOTNULL))))OR(0.5804709440075346)))AND(CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((0.41700034182763246)OR(0.20377040967243054)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-894550949 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '', 0.09706925877133155))=(('2051170828', 0.47561408729459964, 1e500)))) NOT BETWEEN ((x'' IN ())) AND (((((4.9149202E7)OR('\r%')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2128339401 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((0.038949554798009545)OR('u')))OR(x'8df9')) THEN (x'' IN (x'8bfd1bea')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1807917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '270663897 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=62782260 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-513021131'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-103921401 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) NOT BETWEEN ((-1067645060 IN ())) AND (2.144615862E9 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('02') BETWEEN (x'') AND (x'')))|(HEX(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (x'')))GLOB(CASE x''  WHEN x'' THEN ' ''}41⠦2Hx' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=466401376 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-279353514 sz=791361179 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'1050' AS NUMERIC) IN ((((NULL, x'75ff17e5', 0.7032297064083015, 'ኣ+', '^hwx', x'd98d', x'')) BETWEEN ((x'a9320b8b', x'', -2006750245, -1308704939, x'856baf7d', '1e500', 0.09706925877133155)) AND (('2021677315', 0.25127019796035177, '''J', '', 0.9561672929135765, 0.20358970364958862, x''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (1736088119) AND (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=149988629 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1980015886 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-855972585 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 2 sz=-1177753025 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=33127652 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2128339401 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1431948392 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((-1840770397) NOTNULL)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.08446460877553708) AND (x''))) NOT BETWEEN ((1036624350 IN ())) AND ((- (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.546379137E9 COLLATE RTRIM)AND((('') BETWEEN (NULL) AND (NULL)))))AND(((((0.7212053755355899)AND(0.6407940014885332)))AND('H0')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN ' 	w9J5' THEN 0.8387455791744602 ELSE '0.5797466454346345' END THEN rtreenode(x'', x'') WHEN '811546082' COLLATE BINARY THEN (((x''))=((NULL))) WHEN ((1.49988629E8) BETWEEN (0.08227781149100943) AND ('LTxbICp_')) THEN (~ (0.8089969750350331)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((142571042) NOT BETWEEN (NULL) AND (x'3c59')))LIKE(CASE '!맶<<Ide'  WHEN NULL THEN x'' ELSE -1.7457105E7 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.844204980763256)+(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)|('513734573')))OR(0Xffffffff94b5198b)))OR((('1669251677')||(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '783426059 974582108'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-1308704939)<=('(]AY')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.835426115487846)))<<((((((((((((('-1908280612')AND(0Xffffffffaf83a444)))OR(0.09331435858850767)))OR('3p')))AND(NULL)))AND(']+f0k')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=154150551 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2144615862 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-865426505'  WHEN '_aR''9䗶ն' THEN '-51167724' WHEN '[8]hv' THEN NULL WHEN 0.5312224694669978 THEN '1121134223' ELSE '-378958465' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '135881783 sz=-2094282322 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1472707082 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7772048626320914)=(0.4298667910349169)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=586542109 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=996814437 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1637882798 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=738161950 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1125739127 sz=17947597'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2026629002 0 sz=318734021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('\*kt' AS REAL)) NOT BETWEEN ('1170015898' COLLATE BINARY) AND ((~ ('[]')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffff88e3669f)%(0.6600884823139378)) COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-835416521 sz=377049318 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0x45ea8ced)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1482671839 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR('뽕^In*.&')))OR(-1862084659))) BETWEEN ((((((((('-1027120146')AND(x'2f84')))OR('-1850903685')))AND(422182638)))OR(x'0c6a'))) AND (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('P&', 0.2690714740754494, '', x'', 0.3460046733763724)) NOT BETWEEN ((x'', -1.736617487E9, 0.18862952382633058, -1.840175066E9, 3.3127652E7)) AND ((0.43974035897256636, x'909c', NULL, '1234926431', -543349441))))AND(TYPEOF(DISTINCT -1865879995))))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.1411021363173568  WHEN x'06f61ae6' THEN '' END) NOT BETWEEN ((NULL IN ())) AND (CAST(0.2368471897639446 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1980015886 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('AXX')GLOB(0.010055428111583109)))%(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CAST(NULL AS NUMERIC), CASE -1172098391  WHEN '-1521369964' THEN x'' WHEN -137117632 THEN 0.43974035897256636 WHEN '' THEN 0.9672104083371651 ELSE x'3169' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1818180223 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) BETWEEN (((0x33208cdb)*(-902664259))) AND ('/*')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.26303310018170967)IS((((('-2093320803')OR(NULL)))OR(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1424841354 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1346682927 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1317273766 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')==(1.19904536E8))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1404644308 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((((((((('-348841687')AND(NULL)))AND(NULL)))OR(NULL)))AND(x'')))) AND ((((0.6407721968641228)<<(0.463364920814167))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1193625101 sz=-303421907 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) NOT BETWEEN ((('0.8167865105870408')>('0.26303310018170967'))) AND ((('-786605911') NOT BETWEEN (0.3461977685790729) AND (0x3511b200)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-593611032 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0 sz=-1564430528 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.17144928456749653)!=(x'')))AND(((NULL)-(2012292065)))))AND(IFNULL(0.6160611388457093, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((TRIM(''))) AND ((CASE WHEN x'' THEN 0.4830802145714642 WHEN -1503442716 THEN '[jeb)虪[\n' WHEN '' THEN -1019588319 ELSE NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-2072521214 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1661862198 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-914751577'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-513021131 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-1625746847' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) NOT BETWEEN ((x'' IN ('iQC<}'))) AND (((NULL) IS TRUE))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE x''  WHEN x'd32b' THEN NULL WHEN 0.4377936934081017 THEN NULL WHEN NULL THEN 0.31599148186741155 END)OR(((((0.835426115487846)AND(0.46356259374930875)))OR(0xe41d1b8)))))AND(CAST(-111571537 AS TEXT))))OR((NOT (NULL)))))OR(((((x'')OR('7708107')))OR(0.967719329604946)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((RTRIM(x''))AND((- ('8')))))AND(((((((((((((0Xffffffffaf5b96f0)OR(-223240353)))OR(x'')))AND(0.10690237407409198)))OR(-1.7976931348623157E308)))OR('')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 -916686636 sz=1996766917'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1851001595 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-286245940 1981989221 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-865069846 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1653409236 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xfffffffff803f1c7)AND(0.6904822448131592)))AND(x'')))!=(CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2144638504 sz=-914751577 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1063038164 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=596293342'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3808554977105997) BETWEEN ('') AND ('')))GLOB(((((0.5182304828372747)OR('-162894827')))OR(0x45bd069a)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=10434809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffef541761) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=211378946 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.16167020039707258) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1999719962 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1472707082'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1788199975 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN ((((((((x'')OR(0.635453275623038)))AND('t-dmcAW')))AND(NULL)))OR(x'')) THEN CASE WHEN '' THEN '' END ELSE (NOT ('-269956801')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=447971824 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-379542185'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1547415824'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-300683180 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT COALESCE(NULL, 'eᅭ')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'20a8')>=(0X6eee622)))<=(0x4c157475)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1881094953 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-2081673276 2 sz=-2041917132 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-111571537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.0896168570030691 COLLATE BINARY IN ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN 0X7622c165 THEN '121240981' ELSE -1.146588517E9 END)AND((((('d')OR(x'')))OR(0.24072186436258636)))))OR(((x'50c8') ISNULL))))OR(((((NULL)AND(525897643)))OR(0.5582130347124017)))))AND((((0.7688936932964746, 0.7688936932964746, ''))>(('', x'', '.b!Ca~*M+'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.3923879382404609 AS REAL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1287421745 1985734839 sz=769251210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=397294313 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('p' COLLATE NOCASE)*((('')%('-958421531')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-278435100'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-453746373 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1742194422'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0.617496609912606)) AND ((NULL)))) BETWEEN (NULL) AND (RTRIM('33127652'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-641269069 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-465997846 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(0.7129418509318928)  WHEN (('''J')<(x'')) THEN (~ ('791361179')) ELSE 0X7247d3d7 COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('藫r'))) NOT BETWEEN (HEX(NULL)) AND (((0.6812987617020831)IS NOT(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1899959004 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('9J/}&T4磮' COLLATE NOCASE)<>((~ (0X7a42620c)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1730568744 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=779326789 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1888459064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-(x''))) BETWEEN ('') AND (SUBSTR(0x3d64a7a6, '-148782519'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1410702040 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')<=('믅a')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2051170828 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((-1965686687)) BETWEEN ((0.21584857379531563)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('2128339401')||(x'991a')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1177753025')IS(x'5c7f')) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-511908158 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-137550346 sz=-1806632765 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6434195886056292 IN ())) BETWEEN (((NULL) IS TRUE)) AND ((+ (996814437)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(DISTINCT NULL, NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('-859918923' AS NUMERIC) THEN (('p')&(7.91361179E8)) WHEN -1098548408 COLLATE RTRIM THEN ((((((((0.98168523707291)OR('\r~j?')))OR('[')))AND(NULL)))OR(7.19494813E8)) WHEN ((0.4695038944994293)>(NULL)) THEN ((x'')|(x'')) ELSE 0.5263088205488816 END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('657682124' AS REAL)  WHEN ((x'979e')LIKE(0x7b46ec66)) THEN ((((((((x'')AND(NULL)))AND(NULL)))AND('')))AND(x'')) ELSE NULLIF(DISTINCT 117150312, NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'rK5\r'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1994340562 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (LENGTH('-1137615364'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=513734573 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1517361438 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('2035001251' IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') NOT BETWEEN (0.8373429759128417) AND (0.5760290461496935)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1834082554 sz=364978435 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1191327917'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'cba6')IS NOT(0.4695038944994293)))AND(((x'') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -832077855 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1965686687 2 0 sz=2141201309 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-436144777 sz=1655723330 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.33196106790332414)) NOT BETWEEN (('0.8574556265666573')) AND (((('-1029727392')||(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) NOT BETWEEN ((- (0X7c764513))) AND ((('2099033065') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=24122705 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1255503188 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((23916301)) BETWEEN ((CAST(0.39976274357412755 AS NUMERIC))) AND ((((0xffffffffe16beb35)=(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-877541416 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0xffffffff8f23d1f4 IN (((0.4377936934081017)-('-17457105')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.7459356589063513) NOT BETWEEN ('q') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE ''  WHEN 0.004438692324948756 THEN 'TlFuF࣋]R' ELSE 0.9952626470998305 END AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X260c9db2) NOT NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1920031713 sz=401484397'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=39507670 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1029966214 0 sz=-277287973 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=915014673 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1528724737'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X22f5ec1d)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((('') IS TRUE))) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-486560682 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('')))AND(0.5617191227448708)))OR(x'')))AND(NULL)))OR(((x'') NOT BETWEEN (0.7519234529167158) AND (0Xffffffff9aaa9666)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-598336244')IS(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Q%')=(0.9592251385667259))) BETWEEN ((('718691419')>>(x''))) AND (((0x74a4f90d)IS NOT('0.010055428111583109')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=174473210 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-999131939 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1173657266 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-966453023 sz=-1840175066'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (((('0.09706925877133155')OR('-300683180')))OR('1501996341')), ((x'') NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9018105493038385)<<(((('eY!\\nz'))=((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=179034267'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=-1850903685 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('B .ꀯy(', x'', 0.14956684433484912)) BETWEEN ((NULL, x'38450381', 0.504863771807042)) AND ((x'', '513734573', NULL)))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-666161179 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-947615560 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1139997568 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1114224725 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1742737936 2 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((- ('!Z?\n邷	R)')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1801302558 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')<(0.24107099072420402)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=305522183 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-987159932 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2144615862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '33127652'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1635752049'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) IS TRUE))OR(((-882500142)GLOB(0.12914381809944542)))))AND(CAST(1.920813545E9 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (1565815988)))GLOB(CASE WHEN NULL THEN 0.3456136884922889 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1848461620 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, '256477489', '')) BETWEEN ((NULL, 0.26303310018170967, 0.333575962142338)) AND ((x'', NULL, x''))) IN (CAST('1415205458' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-595616961 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2106635033 2 sz=-403084389 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '186131049 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))<(CAST('611604123' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1226408473 sz=-1839585227 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=444175763 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1139997568 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=996814437 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN '-1573715226' END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1700096410 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1801048334 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1840770397'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1571146225 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1786766713 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1643283508 COLLATE NOCASE AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=689401948 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE '263177944'  WHEN NULL THEN NULL END, CASE '0.056880061607308186'  WHEN NULL THEN 'r/\nK' END, CASE WHEN 1245344587 THEN x'' ELSE x'4f0b' END))!=((((NULL) IS TRUE), ((((((((NULL)AND('')))OR('\K')))OR('501195286')))AND(NULL)), ((NULL)LIKE('X'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('6Fd\r')AND(-1484542359)))OR(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT 0.028415465248349592, x'') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1259312978'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.46878416242746546) BETWEEN (((0.16645008236235037)>>(-16313179))) AND ((x'2e1c' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e502') ISNULL))>>(LIKELY(1.546379137E9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE NOCASE)OR((('') IS TRUE))))OR(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2984923026186227)<=(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN CASE ''  WHEN 0.8574556265666573 THEN '-2100050825' ELSE x'' END ELSE CAST(0.9773928311167464 AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=2144615862 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1077158336 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-276627902'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length('881810907', '>|xq(镄[zY'))GLOB(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-973293175 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1818692595 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1573715226 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=755617324'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1245052214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=184659984'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1177753025 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN (~ (NULL)) THEN ((x'')IS NOT(NULL)) WHEN (NOT (NULL)) THEN COALESCE(NULL, 0.20248157008520495) WHEN ((x'53ef')<>(x'df65')) THEN (('') IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'a3a3' COLLATE NOCASE) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1637882798 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-81407918 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1311429103 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (',5H'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1782076640 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')|('-1472707082')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=1083739748 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.9101350242288462)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1438070778 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1681628726'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1413446860')LIKE(0.20099243739432116)) IN ('-1736617487')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=450852863 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7973291366895621 COLLATE RTRIM) NOT BETWEEN ((x'' IN ())) AND (NULLIF(DISTINCT '', 0xfafc6d8))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=85252307'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR(NULL)))AND('0')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER(0.8901715957607849) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-215827307 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1618502002 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((GLOB('', '0.08678366010802863')) IS FALSE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1618502002 sz=5006562 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('-276627902', '-1822978057'))%(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=755617324 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-2100050825')OR(x'')))AND(NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'67ad')AND((((('1535310879')OR(0.5561462953252367)))OR('')))))AND(CAST(0.6812987617020831 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=745309802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1920813545')) BETWEEN ((((((0.5135418108796341)OR('1520963677')))OR('d')))) AND ((((x'dc47') IS TRUE)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '805774222 97376834 sz=-17457105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM('Z|''6~Dn', x'') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=935046955'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE WHEN x'' THEN NULL END)AND(CAST('+\n' AS NUMERIC))))OR(CAST(x'c27c' AS INTEGER))))OR(CASE WHEN '179034267' THEN '' END)))OR((NULL IN ('1337664516')))))AND(((x'')<(x'')))))OR(('' IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1295488991'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1840175066 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1173295362 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1255484306 sz=-894550949 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1177753025'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.08227781149100943)>(0X1ecfe832)) IN (CAST(x'3fc9' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '76915123 1109891507 sz=791361179 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN x'' THEN 0.2198187409694614 WHEN 2.035001251E9 THEN -2.14819374E8 WHEN x'' THEN '' WHEN 0.7999049895206339 THEN 'eG' WHEN '8L8I7' THEN 0.9401180015430615 ELSE x'' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1091886440 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-541157956 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('J(츬WaN')AND('L	~b')))AND(NULL)))IS NOT(((-1850903685)>=(-215827307)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1124039247'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=3432589 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1385049343 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -240842270 sz=689401948 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-859918923 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.07321136284627616) NOT NULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1362612050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1593524857 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.379038686812053 AS REAL))GLOB((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1231000096 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.119644019024986))) BETWEEN (((((((((NULL)OR('-855972585')))OR(119904536)))OR(0X60786172)))AND('1920813545'))) AND (((x'e880219f')/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 sz=833995946 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-763097109'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-305423352 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'ed17' THEN 0.5898723453966722 WHEN '0.8373429759128417' THEN x'5246' WHEN '鱢y' THEN NULL END IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-214819374 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS NUMERIC)  WHEN (('Tꔕ') NOT BETWEEN (0.7630901076335213) AND ('0R')) THEN x'' WHEN 0.8964431029318445 COLLATE BINARY THEN CASE '-570789256'  WHEN 0xffffffff92512826 THEN 0.4411038649493376 ELSE 4.9149202E7 END WHEN x'059f' COLLATE NOCASE THEN ((NULL) BETWEEN (NULL) AND (0.2530924574345045)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN 0.010055428111583109 THEN NULL WHEN 0.22530157081018842 THEN 0xffffffffafc5ef52 WHEN x'' THEN NULL END IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS TEXT)  WHEN LIKELIHOOD(DISTINCT NULL, 0.8312685175045361) THEN ((NULL)&('-865426505')) WHEN CAST(6.278226E7 AS TEXT) THEN CAST(NULL AS BLOB) WHEN (NOT (NULL)) THEN ((x'')<=(x'')) WHEN CAST(x'e7457bc1' AS BLOB) THEN CAST('nfj8' AS NUMERIC) WHEN ((NULL)*('Z|''6~Dn')) THEN ((((((((NULL)OR(x'98b0')))AND(0.055503499251140176)))OR(0.3796604457390238)))AND('(G緁r]5c')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1824926236 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1074284170'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1126393651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=173957501'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '689401948 -2100050825 sz=-1423942679 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL))==((0.31012995126823506))) THEN ((0.7657265754327247)||(0.08959165435724947)) ELSE ((('wi')) BETWEEN (('')) AND ((0.9056761742483894))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=471293551 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2054625656 sz=1001652402 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a93f')IS NOT(NULL)))+(((0.08388500368953) NOT BETWEEN ('') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1075636850 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 sz=468549517 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-2106326998'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-574640042 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS TRUE)  WHEN (('_疃~')IS NOT(0.32005477999096865)) THEN (x'8dc1' IN (0.8653366773367354)) WHEN ((0.4383883871412887)IS(0Xffffffffc6dfa5e5)) THEN (~ (NULL)) WHEN CASE WHEN -34327766 THEN '507019001' ELSE 'S*' END THEN CASE '1618502002'  WHEN x'' THEN '-1956714481' END ELSE (- (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=270663897 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1382995047 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(')虪v', 'r*Y~UB	R', '-')) BETWEEN (CASE '-1821494179'  WHEN '-1507079336' THEN x'8fd1' ELSE NULL END) AND (CAST(NULL AS INTEGER))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-258164783')>(0.6160611388457093)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=((x'3166')))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=126337654'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1708616884 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1281314896'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-374760960 sz=665586071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1850903685 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('B>4|.GTok') NOT BETWEEN (']H*mLRL{p') AND (''))))<((json_type(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-687862404 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((LIKELY(DISTINCT 0.5487334783833898))OR(CASE ']'  WHEN '0.6904822448131592' THEN '879687917' ELSE NULL END)))AND(((NULL) NOT BETWEEN (765822001) AND (x'210e')))))AND(((((0Xffffffff86eddab4)AND(0.21584857379531563)))AND(0.37965597865094636)))))AND(((('270663897', 0.9454959596597826, NULL))<=(('', x'', 0.5056762107709204))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=49149202 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=856947850 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((x'ed76e6f3')AND(636344577)))AND(1221108217)))AND(NULL)))AND(x'cfc3')) THEN '355045440' COLLATE RTRIM ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') NOT BETWEEN (0X7f05d07) AND (NULL)))AND(',5H')))OR(((x'')>>(NULL)))))AND((0.23487499651381316 IN (NULL)))))OR(((0.2688147769732212) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0x9cb446e)LIKE(0.010055428111583109)) THEN ((((0X60576f5)OR(-1288088654)))OR('-274306192')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1496370320, NULL, 't!nU [T')) NOT BETWEEN ((0x78805903, x'', 0.6938176368354264)) AND (('0.5101863973802993', NULL, x'6960'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1800802887 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8858501680713264, 0.512532549424833, 0.4557898619170422)) BETWEEN ((((NULL)&(NULL)), (+ (-2.021759763E9)), UNLIKELY(''))) AND (((((0.7432927339832887, 0.06656185308681206, NULL))>=((0.2753249981448249, NULL, 'w0ኣo'))), ((0.1848242187682223) BETWEEN ('') AND ('-1862084659')), ((NULL)>=(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1884891591 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1067645060'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6871931863752103)/('wK')))AND((((('2068245606')AND('1325674991')))OR('719494813')))))OR(((x'') NOT BETWEEN (0.6250659433576083) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1555833355 -1146588517 sz=-1807917 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))/(CASE WHEN x'' THEN x'b914' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0x4db0351a AS REAL) THEN ((x'1f3f')-(0Xffffffff9aaa9666)) ELSE CAST('0.08446460877553708' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)*((((x''))!=((0X12070433))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '127681918 sz=-266595384 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-125366501 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '755824308 sz=-17457105 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c93d') NOT BETWEEN (NULL) AND (x'ed62'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0xffffffffe4396fea) ISNULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'af23' END) NOT BETWEEN (((-1.862084659E9) BETWEEN (x'') AND (0.25127019796035177))) AND (((0.66140965425469) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=932110338 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELIHOOD('*_瓏[홣lࣆE|', 0.9213319178382707) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1308704939 0 sz=1509212806 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN x'' THEN x'' ELSE 2024694386 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-154509791 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=(CAST(NULL AS INTEGER))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-422545464 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL, NULL, '-496416226', '', '')) BETWEEN ((0.7595251150563889, 0xffffffffc6dfa5e5, x'', -8.59918923E8, x'')) AND (('q', NULL, NULL, '-1341245490', NULL))) THEN NULL END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=117017290 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-865426505 -832077855 sz=1014068493'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(''))>>((('-1024516954') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '261204604 sz=-1535306268 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=184562512'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2021759763 sz=-2028343689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=355045440'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '791361179 33127652 -1067645060'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x''  WHEN '755617324' THEN 0.07745246059211996 WHEN '586542109' THEN 0.9561672929135765 WHEN x'' THEN 0.04639548432933638 ELSE '' END))!=((((NULL)>=('-328195572'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1912464331 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.33196106790332414)IS('0.9952626470998305'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1515473677)>>(868471487)) IN (((7.55617324E8)>=(0.9727598662510331)), (+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-972247533 sz=-1980015886 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL) BETWEEN ('-2021759763') AND ('')))AND(COALESCE(DISTINCT x'', 893132821, '-865426505', '{}'))))AND((NOT (x'')))))OR((NULL IN ()))))AND((((0Xffffffffada2aa6a))>=((x''))))))OR(CAST('vWBD}S>' AS TEXT))))AND(CASE WHEN NULL THEN NULL ELSE '꾾ys鶍N1I?' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=222286082 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '4 1721063709 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1686669753 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-832077855')|(x'')))AND(((0.7895484770030067) NOT BETWEEN (x'90fb') AND (1110246357)))))AND((((NULL, 2.051170828E9, 0.05567641757974795))==((1.7976931348623157E308, -1734818362, ''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1438631122 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN 0.30624348442617344 ELSE 0.8975572895853478 END)/(((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -640400842 sz=-103921401 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(x'04e0db25', '')  WHEN (NOT (NULL)) THEN (('#Mv0c*') NOT NULL) ELSE ((NULL) BETWEEN (NULL) AND ('-1287421745')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1736617487 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1862084659'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-457784452 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((('') NOT BETWEEN ('()') AND (NULL)), x'd826' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'0113'))) NOT BETWEEN (((NULL)*(NULL))) AND (x'0bd3')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.177753025E9)<<(NULL)))*((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1960929880 0 sz=1014987151'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=929197332 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(NULL)))AND(((((x'0917')AND(NULL)))OR('2051170828')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=515475533 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1568244491 sz=-404913535 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((']H*mLRL{p')-(NULL)))*((((''))<((-1966293753))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0.35289965887221264, -825231192)) BETWEEN (0X37e3d77d) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN (0.8035510073523997))))=((((((((((x'')AND('-2016436092')))AND('d?')))OR(0.09706925877133155)))AND(-1807917))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+(0.706333681214133))) NOT BETWEEN (((((-1.862084659E9)AND('m	/L')))AND(0.799562136340284))) AND (((x'd793') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.022911126133414395)>(0.7560048635853818)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-735765559 sz=-283398328 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((0.6480938427696306)IS NOT(NULL)), 0.9436449813427866); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-914751577' COLLATE BINARY) BETWEEN (x'') AND (((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 2.70663897E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (NULL))) BETWEEN (CASE NULL  WHEN 1.398145937E9 THEN x'' END) AND (highlight(x'', NULL, NULL, '1964865256'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=270663897 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('%aP')IS(((x'') BETWEEN (NULL) AND (0.2690714740754494)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1841870319 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=384732926 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'4d2cb2ff', (('')%('-276627902')), LIKELY(0.22092534818957477)))<=((((NULL) NOT NULL), TYPEOF(DISTINCT x''), ((NULL) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=231408800 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((652922621, -1793912445, '', x'', 'XN')) BETWEEN ((((0.22591938372427411)|(NULL)), ('\nxk' IN ()), ((NULL)/(x'')), ((1.546379137E9) ISNULL), (- (x'9806')))) AND ((((('1618502002'))>=((')綤*.嶸,_d'))), CAST(NULL AS TEXT), CAST(0x2fcea4f6 AS TEXT), ((0.7572572317147637)IS NOT(NULL)), ((NULL) BETWEEN (x'e45a') AND (''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5607277333617124) BETWEEN ('513734573') AND (149988629)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (')y' IN (TOTAL_CHANGES())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1700096410'); -- 1ms;
REINDEX; -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1594930071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.697074212548229, x'ab73', '-914751577')) BETWEEN ((0.41700034182763246, NULL, x'')) AND ((NULL, NULL, '532016608'))))AND(x'')))OR(((0Xffffffff8ad60061)>=(0Xffffffff87e6793e)))))OR(((0.6812987617020831)>=(x'')))))OR(((0Xffffffffed602cfb) ISNULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ (0.6812987617020831)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1220977401 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=211669700 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-595616961 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1546379137 sz=-1957823176'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-237578137 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((x'', 1776861261, 0Xfffffffff81caad4))<=((NULL, ')!', -3.0068318E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1102147518'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)|(0.8431000123949575)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2021677315 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-719126872'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1952651046 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=49149202 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-670138052'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0x67cb93de THEN 8.79687917E8 END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(0.18862952382633058)))*(x'0d47')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '202259594'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')AND(NULL)))AND(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1439840417 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE))=(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.7674203910255177 IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 1605031858  WHEN x'' THEN '2128339401' END  WHEN CASE WHEN 0.6379801070432394 THEN '' END THEN ((x'')>(x'')) WHEN ((x'')==(NULL)) THEN ((0x6eca0a8b)+(NULL)) WHEN ((NULL) ISNULL) THEN ((NULL)LIKE(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((((0.8167865105870408)) BETWEEN ((0.7661129017537911)) AND (('1139997568'))), ('?~' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1531957151 sz=177795620'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((2.128339401E9))>((((0.2821799578753267) BETWEEN (NULL) AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-783966049 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-957655171 -2006750245 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')LIKE(0.017021245810069585))))>=((CASE WHEN NULL THEN 1539980989 ELSE 0.6698496747475765 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1279696892'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-987796071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '466401376 sz=1920813545'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=745309802 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN 1.637882798E9 WHEN 0.5489665031798048 THEN NULL WHEN NULL THEN NULL END)>((('UN')GLOB(x'c301')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=791164574'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-215827307 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('7J)by~')) IN ((x'9f74' IN ()), CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')AND(0.042796271821804455))))=((CAST(-8.55972585E8 AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (0.06321505462936228, x'24c1'))) BETWEEN (('387862737' IN (NULL, x''))) AND (((0X61e07880) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-17457105'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1856574839 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1086232847 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '760922100 466942167 sz=-1736617487 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1639590205'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-279701663 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1136282515'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7009569494769833 COLLATE BINARY) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1877638198')) NOT BETWEEN ((NULL)) AND ((-1807917.0)))) BETWEEN ((((x'19c5')) NOT BETWEEN ((x'')) AND ((x'')))) AND ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (NULL) AND (0.3593951488888609)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-855972585 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=119904536 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-45146196 sz=-1337217729 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(x'2f30' COLLATE BINARY, x'b21e', ((((0xffffffff9bf7ff84)AND('2035001251')))AND(x'e253'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=1697973677'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((''))>=((x''))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(0x204d6574)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8603957955254619)-('755617324')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1990690847 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.17240092826955145) BETWEEN ('-1600967687') AND ('763974359')) IN (((0.881371029507735) IS FALSE), ((0Xffffffffef596756)>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=747950122 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-232525347 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1064864850 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=719494813 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)GLOB(3.3127652E7)))OR(((NULL) NOT BETWEEN (NULL) AND (0X1c942b3f)))))AND(('0.8574556265666573' IN ('83836185')))))AND(((NULL)-(0.6373104329446073)))))AND((NOT (5.13734573E8)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.13671749390210186)) NOT BETWEEN (((('')||(0.06221286055100628)))) AND ((CAST(-1803180672 AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=56574577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1696351075 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=83836185 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))AND(UNLIKELY(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1378622547 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-697719794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1079684018 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '689401948 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1172098391 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS REAL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=238498616 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-914751577'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(DISTINCT 0X2edf512, NULL))OR(x'2564')))OR((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-2083253461'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE '0.463364920814167'  WHEN '}h' THEN x'd215' WHEN x'' THEN x'53e4' WHEN '' THEN NULL ELSE x'' END  WHEN ((0.26491616185669764) NOT BETWEEN (0.5670443308750674) AND (NULL)) THEN ((0X4b1f973a) BETWEEN ('-1338580761') AND (0.8933495424146544)) ELSE (~ ('-1563165233')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '6'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('33127652')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1546379137 sz=1965219158 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('*_瓏[홣lࣆE|' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1816667474 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '235505958 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1049308037 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=689401948'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Z*') BETWEEN ('-403084389') AND (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('480206642') BETWEEN (NULL) AND ('')) THEN (((NULL, '-111571537', NULL))!=((0Xffffffffbb0d40bb, 'la', NULL))) ELSE ((NULL) NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1965686687 sz=450852863'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-345468621'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=1733100250 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1798939834'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-509948084'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1070885752 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-214819374 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-465997846')LIKE(0xffffffffad99147c))) NOT BETWEEN (CASE WHEN 0x13ad1ae5 THEN x'' WHEN NULL THEN '-162369758' WHEN NULL THEN '-426454793' ELSE x'' END) AND (((-1216167194)==('1340251460')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=30444757 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.37989002371098823 AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-154509791 sz=-1689249194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '689401948 2 sz=2089960211 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') BETWEEN ('2144615862') AND ('0.1411021363173568')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1546379137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1850903685') NOT BETWEEN (NULL) AND ('1439840417'))))!=((TRIM(0.5263088205488816)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN (('1343520207')) AND ((1268540758)))) NOT BETWEEN (('-562494787' IN (0.15272665459098023, x''))) AND (((x'5aa8') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOTNULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-217382101) NOT BETWEEN (0.5786960109788314) AND ('7~#IsFⱚMn')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=2123999235'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3155832210891374) NOT BETWEEN (-1.177753025E9) AND (0.321030314309541)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-869067308 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1427903718 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1528706074558812; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(2021677315))||(((x'e3bb')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1452086944 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.38890117435477634 AS REAL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.8285937461463675; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'', -2.100050825E9, x'')) BETWEEN ((0.2884949007081469, '', 0.32966288974738667)) AND ((NULL, x'', 0.16161436944241725))) THEN ((0.46566948579142764)<<(NULL)) ELSE ((0Xffffffffab7e3908) IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9760675237412575 COLLATE RTRIM) NOT BETWEEN (CAST(x'' AS BLOB)) AND (COALESCE(0.6493222785191928, x'86bd'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=836800789'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=9223372036854775807 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1888276959 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1307345292 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1036266293 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'aaad')<<('-642952235')) THEN ((NULL)IS(80497492)) ELSE (((0.4482185839669258)) BETWEEN (('2051170828')) AND ((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-855972585') NOT NULL))IS(((x'a76a') NOT BETWEEN (0.6898626778284046) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2a96487920df')<(NULL)))<((('-465997846') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((DATE(1.382995047E9, '-214819374', NULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('221278964')) NOT BETWEEN ((-1104501266)) AND ((0.21718686666427933))))AND((('0R')<=('Yk㱛[J')))))AND(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1618502002'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.9427673565159156 COLLATE NOCASE THEN CAST(0.59394820809153 AS NUMERIC) ELSE ((NULL) BETWEEN (x'') AND (0xffffffffcc8ccbed)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1416201049'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=480311085'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST(x'' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-940476776 sz=-856685865'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 -753410309 sz=1609114868 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT '1637882798', '-465997846'))AND(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2144615862 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1308704939 sz=-894749598 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT NULL))||(((((0.3846227755243963)OR(NULL)))OR('eZ.殛c9h')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2128339401 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((-1846058906)AND(NULL)))AND(x'')))AND('477947997')))OR('1439840417')))-(CASE WHEN x'' THEN 0.8574556265666573 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-214819374 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1438408977 sz=-689821263 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-940476776'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('149988629' COLLATE BINARY)>=((('GTW6iB') NOT BETWEEN (480311085) AND (0xa4b35b3)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1787263122 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(LTRIM(x'') AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-103921401'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.820995950563247 COLLATE BINARY AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0.013679856948358382 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.231536378E9)>>(NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=580823578 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1531492560'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(((0.24558989025485667)AND(0.4216957044055766))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.5797466454346345)+(0.21825054470546534)) THEN (('1398145937')AND('-1177753025')) ELSE 0.21839161058202372 COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (NULL) AND ('')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=636803185 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-361790665 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-63948014 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=73611321 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2040597100 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1295488991'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1382995047'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7129418509318928)) BETWEEN ((((x'')|('')))) AND ((0.5582130347124017))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1840770397 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1740661649 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1712305702 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((rtreenode(-1807917.0, 0.5790078366760197), CASE WHEN x'' THEN NULL END, (0x611197b6 IN ())))<((x'' COLLATE BINARY, TIME(0.8812236141557749, '2144615862', 0.08405858132876831, '0.14956684433484912', '-1602448329', '55\rZ', '~k'), NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1981989221 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1295488991 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=461580624 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1193686949')=(0.3494906676135293)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '583691445 sz=755617324 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2137726796 1614797312 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-111571537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1067645060 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-859918923 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1398145937 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))/(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=2138032741 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=531250231 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('33127652') NOT NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight((0.497290585669674 IN ()), ((NULL) IS FALSE), (+ (0.9952626470998305)), 0.5308555267614858); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=675040671 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.9183395162650924 AS REAL))OR((NOT (0.4465193448511896)))))AND(((NULL) BETWEEN (0.2826077519262986) AND (0.04686121084569783)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-憼#n()') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(''))) NOT BETWEEN (((x'') NOT BETWEEN ('463402493') AND (x''))) AND (0.5441951074337646 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'4353'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x53d0e62b COLLATE NOCASE)GLOB(0.5587939384968836 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1859493982', '-1840175066', x'69b5253b')) NOT BETWEEN ((NULL, x'', ('N%(\L\n/' IN ()))) AND ((((0.49561622608869416)>(NULL)), NULL, MIN('-277287973', 0.21956992559650101)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'5d0963222ded' COLLATE BINARY AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1172098391'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')<(1.546379137E9)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-710380690'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.401166163396526) AND ('*/')))<>(IFNULL('u8q', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1177753025 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1700096410'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)|('\ngt''S3yU^')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-574728504 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '270663897 sz=-904074036 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('462249741' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '485297811 sz=-161238795'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (('	D')<<(0.813228241065781))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'4017')OR(0.056880061607308186)))OR(-1605221102))))<=((-1.965686687E9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1383069717219968)) NOT BETWEEN ((((NULL)&(0.8787980175680341)))) AND ((((NULL) BETWEEN (x'964c') AND (''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1725941208 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'1463' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-2110850816 1093924886 sz=-601503497 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))<((x'4e3c')))))<(((((NULL, x'c27c', NULL)) BETWEEN (('1170015898', '33127652', x'')) AND ((0Xfffffffff4d44709, 0Xffffffffdd1f8882, x'')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=539022820 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))OR(('396207968' IN ()))))OR((x'' IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'6707' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=256344156 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((x'') BETWEEN (NULL) AND (0.488148338915675))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1965686687'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((x'') NOT BETWEEN (0.35204869078338186) AND ('-141870236')), ((0.6988420425785817)<>(NULL)), x'' COLLATE BINARY, ((NULL)%(x'')), CASE '1131793417'  WHEN 0Xffffffffd4f83d2d THEN NULL ELSE x'' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CASE 0.6750972539733673  WHEN x'2bf0' THEN 'aL\r9' ELSE NULL END); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '786899773 -1700342130 sz=2068608780 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '719494813 sz=-378958465 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN (('2144615862')) AND ((x'')))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'717b')OR('')))AND(NULL))))>(((('_4Bዓ')GLOB(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('#H') IS FALSE) THEN (NOT (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1551123032 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE x''  WHEN 1717323396 THEN '2068245606' ELSE -1700096410 END)AND(LIKELIHOOD(0.719929689425575, 0.2597111915639251))))AND(('-279701663' IN ('892828910', '')))))AND(((-337505607) BETWEEN ('-279701663') AND (x'')))))AND(x'b97d')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2132215313') NOTNULL) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=924556931 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1827699804') IS TRUE) THEN (('84916580') NOT BETWEEN (x'f4637d85') AND (x'')) WHEN '-465997846' THEN ((0X3bd3f399) NOT BETWEEN (-2059538943) AND (NULL)) WHEN (((NULL, NULL, NULL))>(('-2106635033', '-1', x'7049'))) THEN CAST(x'' AS BLOB) ELSE ((x'bb39') IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1867239151 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=970092222 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -832077855'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2023192371 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'ba2d8741'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1736617487 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('/R')GLOB(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(load_extension(x'') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1736617487'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=960905213'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=463897669'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-465997846'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-378958465 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1047151957'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 -103921401 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1073602454 1295620537 sz=-305991333 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.4298667910349169'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1958613305 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1083210691 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-907839290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'5831' THEN -1.980015886E9 WHEN 0x71ef39d9 THEN NULL WHEN x'' THEN NULL ELSE 'x' END IN ('5UuS', ((x'')>=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN (0.1876754818868136) AND ('LR嬓帡'))  WHEN ((NULL)%(0x56650515)) THEN ((NULL)*(-8.55972585E8)) WHEN ((x'')GLOB(-6.40400842E8)) THEN (~ ('843466467')) WHEN ((NULL)OR(NULL)) THEN ((x'9bab')>('f\,m')) WHEN (('ua\nnw(')<(x'dfd1')) THEN 'Sr]#' WHEN CASE x''  WHEN NULL THEN '-852704249' WHEN 0.10082684231433525 THEN NULL WHEN 'L,+/G' THEN 0.6713514581140619 END THEN ((NULL) NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=149907456 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(-1461917694, 0Xffffffff877e64ed)) NOT BETWEEN (CASE WHEN 0.4440152501259561 THEN '-176266739' WHEN '-801971388' THEN 0X6744763c WHEN '(y\n' THEN '-18214693' END) AND ((('-1878041735')+(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'bc2f'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-403084389 0 sz=-1980015886 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 791361179 sz=-640400842 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.02390970299913553 AS BLOB) IN ((((0.6009506753177728)) NOT BETWEEN (('矿?G')) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1582370302 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=306317100 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('') ISNULL))OR(0.9705613749373961)))OR(((0.6015949421959228)LIKE(x'')))))AND(UNLIKELY(DISTINCT 0.46294311041493663))))OR(-300683180 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ((((('586542109')AND(x'')))OR(0.5182304828372747)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=1246217317 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((']]S,]X')||('-45146196')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((NULL) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1667760251'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '435464801 sz=-505525764 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1166959414 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(((x'774f')IS NOT(NULL)), ((x'') ISNULL), TRIM(DISTINCT '')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1274847684 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 338303946  WHEN NULL THEN x'' ELSE NULL END))<=((CAST('' AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-623125149 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((HEX(0.26278504098558797))OR(NULL)))AND(((NULL)-(x'b937')))))AND(((NULL) IS FALSE))))AND((((0.5686106659891806))=((x'1088'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-17457105'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1492181930 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (745309802)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1379262784 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-45146196 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))OR((((0x2d5924db, '-1067645060', NULL))=((-889646907, NULL, x''))))))OR(((x'')>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('{,pg|趯')AND(x'')))AND(NULL))) BETWEEN (((NULL)AND(0.6974089390221672))) AND ((((x''))<=(('pN'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1980001098 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=699433486 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2021677315 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('')OR(x'5cf5')))OR(x'59e1e0c8')))OR('R*Y~UB	R')))AND('CR1m㽶ZH')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0xffffffff9400a55e)>=(0.2975382663326027))  WHEN (('') NOTNULL) THEN ((x'f1a9') BETWEEN ('᷒X') AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1398145937'))>(('0.07745246059211996')))) BETWEEN (TYPEOF(DISTINCT x'')) AND (STRFTIME('466401376', NULL, x'bd35'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '39507670 -1775825642 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.5176439555099015)LIKE(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1366445029 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1637882798 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-219788701 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.7660616028388926  WHEN '0.25127019796035177' THEN x'8a04' WHEN 0.18862952382633058 THEN '颞l~뻭' WHEN 0.21375696934116073 THEN 0.9180094634488446 WHEN 0.7409447376702378 THEN -914751577 WHEN NULL THEN 0.9954984571819369 END IN (((x'')|('-832077855')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1573715226'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=-1850903685 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)|(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-17457105 sz=-103921401 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((- ('Y6cyhZC'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '480311085 sz=-17857753'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1807917'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.9952626470998305 ELSE '0?' END)<=(((('')) BETWEEN ((0.3461977685790729)) AND ((0.4004409193407158))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1839593774'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1170015898 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1078854269'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 'h?' THEN 0.7502859461081955 ELSE x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)%((0.03603192208321848 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(CASE WHEN 0.7260010119516674 THEN 0.08609008359075987 ELSE x'5307' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')|(x'4cf4')) IN (CAST('0.844204980763256' AS NUMERIC), CASE -1461225469  WHEN x'c048' THEN '1736088119' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1687290719'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE '1398145937'  WHEN '1618502002' THEN '790599060' WHEN -1.7457105E7 THEN x'' WHEN 0.5539437103358382 THEN 64742335 ELSE NULL END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-465997846'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(CASE WHEN -1804118193 THEN '1357652186' WHEN 0.40207524048766297 THEN NULL WHEN x'' THEN x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1128304022 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1052980749 sz=-1736617487'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=689401948'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('&<') IS FALSE))>=('-9223372036854775808')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6434195886056292) NOT BETWEEN ('') AND ('')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-117336822 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '480311085 0 sz=1644725138 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-1980015886') NOT BETWEEN (0.010863249542147568) AND ('uHM')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-374885188'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '828771719 -1317801854 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((('vWBD}S>', 0xffffffff9e8f1a29, x'')) NOT BETWEEN (('w&!!趯Q', -1136625624, 0.24844261283188462)) AND ((-248071021, 0xfffffffff17e445e, '263177944')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)AND('-1794079340')))AND(0X49f57054))))>=(((~ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=628965453 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(x'')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-761759778 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1182156911 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2106635033 sz=1439840417'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-926246672 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1690075010 154150551 sz=-1091348691'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (8.79687917E8)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=397702521'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 480311085 sz=142971552 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1882703974 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-1785572248'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')<<(1.546379137E9)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-174538565 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1357171706 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1709507016 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=745309802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.637882798E9) IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=263177944 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.09331435858850767))<=((x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-1638786336'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '1546379137', -959826730)) BETWEEN ((x'', NULL, x'')) AND ((NULL, ']_', '-2142296597'))))OR(((x'')<=(0.4162469305033679)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-2141079416' AS NUMERIC) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-674090056 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-445447963 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-413106213 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1729790426 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1504268620 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((NULL)) NOT BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE x''  WHEN x'' THEN NULL END)AND(LOWER(1593919178))))AND((~ ('')))))AND(highlight('-832077855', x'c887', x'dcce', 0.5460389116367738))))OR(((((0.5614160859569653)OR('(古vv')))AND('-1563839534')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '935905468'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.38736163087390085 THEN 0.22591938372427411 ELSE x'2efe' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=195020896 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.003830662353384362; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '179034267'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1066960321 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('t,l' AS NUMERIC)))!=((CASE x'60a0'  WHEN NULL THEN '543830568' ELSE 0xffffffffcc353085 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.22591938372427411  WHEN '' THEN x'' WHEN -2.021759763E9 THEN 'KX' WHEN 1.295488991E9 THEN NULL ELSE x'' END)AND((NOT (NULL)))))OR((('42249577')||(0X5a30dc92)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-589067108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-595616961 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('k\r\r')GLOB('0.9820295644566558')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '274293338 sz=466521568 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN x'1ea4' THEN x'' END  WHEN ((NULL)/(0.5492878305996215)) THEN (((x'')) BETWEEN (('TN/*')) AND ((4.50852863E8))) WHEN NULL THEN '-247848416' COLLATE RTRIM WHEN ((x'')>=(x'')) THEN CAST(-403084389 AS INTEGER) ELSE (('ꌖ')IS('0.5263088205488816')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '459{}' THEN 0.004085926393093464 WHEN NULL THEN NULL WHEN '1292991106' THEN x'397c' END  WHEN ((('', '', x'9992'))==((0xffffffffb58cd523, '-111571537', 0.016491491023716165))) THEN (NOT ('')) WHEN (('0.8373429759128417')||('-556477028')) THEN x'' WHEN '-1146588517' THEN CASE NULL  WHEN 0.7731527743874342 THEN NULL ELSE x'23c7' END WHEN (('-300683180')>(1.439840417E9)) THEN '-97481932' COLLATE NOCASE WHEN ((x'') NOTNULL) THEN NULL COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1963764901 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.932787199848407 AS BLOB)  WHEN ((((NULL)OR(0Xffffffff82f745b9)))OR(x'')) THEN CASE WHEN 0x8f0a515 THEN 0.4535432568522376 END ELSE 0.4298667910349169 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2021759763 1178422886 sz=559519809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1487212209 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1522014152 2 sz=157226257 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))>=((0.5766818329950493))))<=(((((0.2909769344946427)OR(NULL)))OR('1618502002')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1619240070'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1502145969 sz=-1862084659 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (x'') AND (NULL))) NOT BETWEEN (0.07170249681232166 COLLATE NOCASE) AND (LIKELY(x''))); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1612328336 sz=34590927 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(((0.2573742127960863) BETWEEN (NULL) AND (x'')), CAST('1746655250' AS INTEGER), (('0.010055428111583109')IS(x'')), CASE 0.3238903745145798  WHEN 2.144615862E9 THEN x'5a51' ELSE '2118390994' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-426454793 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '131846308 0 sz=-1096418107'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5d0c')) BETWEEN ((((0.8676983864071779) BETWEEN (NULL) AND (NULL)))) AND (((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1869998599 1029156023 sz=263177944 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'4669') NOT BETWEEN (x'') AND (996814437)) IN (((-45146196)>=(''']?D%Y2]m')), '-214819374' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((-4.03084389E8)>(0.6806835730822676)), (('#G') BETWEEN (x'f588') AND (NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-252889901 sz=-1323303813'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-276627902 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '879687917 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-25124917'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'de93')IS NOT(0.08345142803388839)) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1452359369 2128339401 sz=-118332434'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-9010745'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '126365075' THEN -842529280 END)<(CASE NULL  WHEN 1.546379137E9 THEN 0.5134414608047322 ELSE '83836185' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))<=((x''))) IN (((('-344052747')) BETWEEN ((x'dd19')) AND ((-1.177753025E9))), ((0.19555998269692598)AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, CAST(NULL AS BLOB), ('2021677315' IN ())))>=((((x'')GLOB('791361179')), CAST(0.7322552562901957 AS INTEGER), CASE WHEN '-52320200' THEN x'' ELSE 0.8486980235619415 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((- ('4]dXy/yj'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '186773317'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1965686687 2 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (NULL) AND (0.125635267592628)))>=(INSTR(0.5193166829676814, '1'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2106635033 sz=-2125637197 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-279701663 sz=-103921401 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1186705221 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1748491354 sz=-571384361 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-1109522167 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-818124995 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=629385567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=344179486 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.4014168541220522  WHEN x'' THEN x'' ELSE x'34cf' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '119904536 sz=2035001251'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (STRFTIME('-1965686687', x'b4cb', x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (((NULL, x'', 3.950767E7))<(('', x'', 'IQC<}'))), 0.9262022709531897); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-2122774601 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2021759763 -1511591212 sz=-1918671994 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9956258775143102; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(1.546379137E9 AS REAL)  WHEN ((x'b68f') BETWEEN (-1287421745) AND (x'28be')) THEN (0.8574556265666573 IN (0.002174832589694975, 'C7')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=119904536'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=555850014 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-255618391 sz=425866831 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('375570483')||('1927059406'))  WHEN IFNULL(NULL, NULL) THEN IFNULL(DISTINCT NULL, NULL) WHEN NULL THEN CAST(NULL AS NUMERIC) WHEN (('83836185') NOTNULL) THEN CAST('' AS REAL) ELSE CASE '㼆|(+'  WHEN 0.08848046289170963 THEN 0Xffffffffc0e3af94 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-216659558 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND ('G>h32BC-7'))) BETWEEN ((((NULL, NULL, NULL, '', '250881572'))<>((NULL, 0.5312224694669978, 0.9077979316244857, x'', -4.26454793E8)))) AND (((0.2503476966846645)*(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<=((NULL)))) BETWEEN ((((('0.038949554798009545')AND('九T')))AND('zFዞtf'))) AND (CASE '2035001251'  WHEN '-465997846' THEN 0x552a83a3 END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.617496609912606) BETWEEN ('Q7#t{Bc}}') AND ('745309802')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2078593682 sz=18631776'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.55481084143889)IS NOT(x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1851027711 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=424806557'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-933423889 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=717670939 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(json_type(0xffffffff80059fe0)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('b)rA\n' IN ((('') BETWEEN (NULL) AND (NULL)), ((NULL)>>(355045440)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1580522751'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1095380014 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1146588517 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1782525873 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN 0.28437149747119295 THEN 1.49988629E8 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('J')OR(0.20843773317199554)))AND(-578853824))) BETWEEN (((x'')<=(x''))) AND ((((0.5505232374193391, '1981989221', 0.4974964272594342))>(('-1545740856', NULL, '1500759184'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -859918923 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-626885541' AS INTEGER))OR(0.657223246615978)))OR(CASE WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-318153898 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-404451956 sz=-279701663 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=480311085 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=216271164 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1388321928'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS NOT('0.5263088205488816'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND ('0.6160611388457093'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1857494742 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1698844417 sz=559526545 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 -1850903685 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE))<(((0x5c2bdf81) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1837751057')>(0.08536407574873928)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1950271071 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.05545692725983287) NOT BETWEEN (NULL) AND (x''))  WHEN TRIM(x'') THEN (- (2.128339401E9)) ELSE ((0.4830802145714642) NOT BETWEEN (x'') AND (8.3836185E7)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'38c7' COLLATE BINARY) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1676388089 sz=-97408351 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c008') NOT BETWEEN (NULL) AND (x'e3db')))|((('1089637784') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-478113791 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.4606709085976559)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-908612744 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1232672271 sz=1723265403 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1288703552 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-894550949 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT x'd82a') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=857771227 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1397761523 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-709096785'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.07745246059211996)||('')))*(NULLIF(DISTINCT 0.10082684231433525, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '83836185 sz=406807223 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '0.26303310018170967'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1382995047 sz=-1954105897 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=913940372 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 890824915 sz=466401376 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'54b3232f' COLLATE BINARY)OR('1718437699' COLLATE BINARY)))AND(((NULL)-(x'')))))OR((+ (x'')))))OR(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-56197626'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')IS NOT(0.5101863973802993)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=1170015898'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN ('724781134') AND ('')))%(CASE WHEN 'TLFUF࣋]R' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-762793967 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.09136045486836208) IS FALSE)) NOT BETWEEN (x'') AND ((- (0.44136690742045837)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=610622274 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-543758189 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)||(-1.03921401E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 479384043'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1308704939 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1823502846 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.96872895460012)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=970018258 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '450852863 sz=795150793 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1064864850'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.46937445754329155  WHEN CASE '0.9820295644566558'  WHEN '' THEN x'' ELSE '	' END THEN (x'' IN ()) WHEN 1095527956 THEN ((0.0891024697620445)!=('glt븈2hLi6')) WHEN ((0X76b461b5) BETWEEN (1637882798) AND ('0.4830802145714642')) THEN ((x'') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)OR(NULL))  WHEN (('*')/(0.6418215094369474)) THEN CAST('-210634966' AS INTEGER) ELSE '崕/)HZ()' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('{')<=(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 -56489440'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1632993150 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-154509791' AS INTEGER) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((NULL)LIKE(NULL)), ((NULL)|('j(츬wan')), ((0.7117860854853922) BETWEEN (x'') AND (0.3316140892566556))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((881810907) BETWEEN ('2021677315') AND (x'1b66'))) NOT BETWEEN (((x'')-('FR'))) AND ((- (0.23819630820812232)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1112931048'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1503901330 sz=-469441143 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-45146196 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove((((x''))=((NULL))), ((0.5615577834308816)<(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1937634406 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1637882798 sz=-403084389 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1311598278 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8417115344142431)) BETWEEN (((('480311085') BETWEEN ('') AND ('-1103056226')))) AND ((((((0.6131915700989397)AND(x'')))OR(0x54d4c932))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1027465723 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffc4e152c1 COLLATE BINARY) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1730570225 -1403987227 sz=1987769498 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1139997568'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1807917'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN 'E㜂,s' THEN '[.W61e500000F}{' END)AND(((0.7503995371887762) NOT NULL))))AND((NOT (-1.840175066E9)))))AND(PRINTF(5.13734573E8))))OR(CAST('s*' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-177349976 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1443568310 0 sz=-1245592590 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1170015898 0 sz=1718273014 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.577210051E9)&('')))OR(1571239499 COLLATE RTRIM)))AND('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '0.6904822448131592'  WHEN '-186646663' THEN '2136084127' END) BETWEEN ((((2128339401, NULL, NULL)) BETWEEN ((0.19049201828364737, '0.5263088205488816', '')) AND (('', -2.77287973E8, NULL)))) AND (CAST(0.6097137057803564 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('879687917')OR('-300683180')))AND(0.45634217256269594))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-574016367 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2068245606 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1472022214 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-277287973 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 663813377  WHEN ('[P6WA' IN (NULL)) THEN ((312658824) NOTNULL) WHEN ((0x232e0728) BETWEEN (NULL) AND (NULL)) THEN (('H3-c') NOTNULL) WHEN (((('*_瓏[홣lࣆE|')OR(-45146196)))AND(0.21857434596582948)) THEN (('1981989221') BETWEEN (NULL) AND ('0.9561672929135765')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((1311278237, '', '', -8.59918923E8, '896423669')) BETWEEN (('_k', '-2038663311', '-1589783167', '-1840770397', '466401376')) AND ((x'0f43', x'', 0X6135618b, NULL, 0.655863023219046))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 689401948 sz=132145176 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1064864850 4 sz=1609247257'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ('gS[0m' IN ('', 0.056280373548016516))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '97976104 -1700096410'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=-1507684261'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '748207327 154150551 sz=319530443 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1398145937 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-1472707082'  WHEN NULL THEN x'' ELSE x'8e50' END)/(((0.7961684838791283) BETWEEN (x'f184') AND (x'75c8ef7e')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1576290811 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('nfj8')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-1980015886 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1073136530 sz=1082021698 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '335260840 -1177069218'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=62782260 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c34f')IS(1.19904536E8)))|((((0xfffffffffee6d87e)) BETWEEN (('Iy	q{1h')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1231536378 371777469 sz=-569712464 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=572452252'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(-1.965686687E9 AS TEXT))OR(((('439410459', NULL, '0.33196106790332414', NULL, NULL)) BETWEEN (('-1045715608', NULL, x'', '1770371534', 0.7989903730883124)) AND ((x'1ac1', '', x'', '', 'I|'))))))AND(NULL)))AND(HEX(-376748288))))AND(CAST('-1027945216' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-465997846 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('-1472707082')AND(0.6606976715553623)))OR('.c#z3M')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=84255291 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1472707082'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1349038795 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('1479341854'))<((0Xfffffffff2b9908a))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9b0d', 0xffffffffe2819b19, NULL))<=((NULL, 0.6379737907816295, '0.4298667910349169'))) IN ((('179034267')>>(8.79687917E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-215827307 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CAST(NULL AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1807917 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('D9-7d\n' COLLATE RTRIM)OR(((0.13233095610936174)/('I[*XK')))))OR(((0.4172546996985358) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT NULL) IN (CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT '')) BETWEEN (((NULL) NOT NULL)) AND ((('?taY+') NOT BETWEEN (0.41700034182763246) AND (x'e6f5')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ((((('[\r[')OR(NULL)))OR(NULL)), ((((0.06590596959672845)OR(x'')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-894550949 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=996814437 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('E\')IS(x'7a083f8e')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-344901900 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.037923921948665784 AS BLOB) THEN CAST(0.98168523707291 AS NUMERIC) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('TlFuF࣋]R')OR('p9')))OR(0.20260031696244307)))>=(((((NULL)AND(-632449565)))AND(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) BETWEEN (0.6160611388457093 COLLATE BINARY) AND (0.8793576953524925 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1909256711; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1382995047 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=1513157908'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-527469166'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1177753025 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1215896252'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0X7fffffffffffffff) BETWEEN (0x3f3b984d) AND ('_days9|x')) THEN CAST(-1643436375 AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-426454793 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<=(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1231536378 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '39507670 sz=-2138694811'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1316324208 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((COALESCE('-1723360412', x'7880')))<((SQLITE_COMPILEOPTION_GET('5Km.+VNk%')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff987d51f1 IN (NULL, NULL)))GLOB(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1382579769 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-861591180') IS TRUE))|((+ ('1546379137')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'd5ec' IN ()))OR(COALESCE(DISTINCT 0.4909707524839355, 0.6348438124547408))))OR(LIKELIHOOD(NULL, 0.5132012860508935))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.5460389116367738') NOT NULL))IS((('-1840770397') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-716139225 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '730272477 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=179034267 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=480311085 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '745309802 sz=806206458 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1369439107 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0.6968099365519671)) AND ((' <4%')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-488006949')+(0.20377040967243054)) IN (((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 2 sz=859552898 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>=(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1132243385'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(((NULL)!=('䬶xF~෽Op')))))AND((('7J4') BETWEEN (-1419999425) AND ('')))))OR((('179034267') NOT BETWEEN (NULL) AND (x'')))))AND(SQLITE_SOURCE_ID())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('')-(431459698)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1987932112 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1633160085 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=263177944 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1382995047 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 4 0 sz=1202068096 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=213039181'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1862084659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '568052261 2128339401 sz=355045440 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1308263157 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.28552463076381474, 0xffffffffce677fe1, -1.787263122E9)) NOT BETWEEN (((0x22ccf499 IN ()), '-1e500', ((x'6f07') NOT NULL))) AND (('1sI>	9Lu', TOTAL_CHANGES(), CAST('1398291910' AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1090677300'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=2118475757 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (288377286) AND (1439840417))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1897390239 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-197131275') BETWEEN (0.5101863973802993) AND (0.3461977685790729)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1517792113' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1070887305 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-111571537 sz=-349023914 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((0.2689376613538146)+('-570789256'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-488647514'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1845036839 4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=277641399 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1177753025')IS(0.8745852077789323)))OR('6a' COLLATE RTRIM)))AND(CASE WHEN NULL THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '256477489 sz=-260957990 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (0.010055428111583109)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-279701663'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-186096728)) BETWEEN (((((((((('523709500')AND('')))OR(-9.14751577E8)))OR(x'')))OR(0Xf498931)))) AND (((('') NOT BETWEEN (755617324) AND (0.07468664248373214))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 1012372107 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-154509791' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-664285433) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2021759763 sz=-253014153 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1398145937'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((('x	J+,2<KA' COLLATE NOCASE)AND((('0.6434195886056292') BETWEEN ('857771227') AND (0.5972977323689697)))))OR((('0.7772048626320914') IS FALSE))))OR(x'')))AND(('1452808217' IN (x'db27')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xa829c06; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1850434264 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1448424715'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1359312348 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '4 619840338 sz=-1822432879 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE RTRIM  WHEN (~ (NULL)) THEN 0.41429118123893016 ELSE CAST('L	~b' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.3808554977105997'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')LIKE('A4')))>=(CAST(x'e4cd' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE x''  WHEN 0x47755701 THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1224756982'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((CASE '>A\n~aM慲'  WHEN x'6f69' THEN x'' ELSE 0.21519642744697698 END)) AND ((((0xffffffffa677ce65)<=('222376278'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1437904243 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(x'')))AND(x'')))<((((('-122406584')AND(x'')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT NULL COLLATE RTRIM, (0.8458319639723649 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1099393701 0 sz=-1132326964 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=13641693'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-1527448098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(x'b3e7' COLLATE RTRIM, CASE WHEN x'' THEN NULL ELSE NULL END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.2020585189931714  WHEN '-1840175066' THEN 0.8859785689550582 END)/(0.7175117052979675)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.40271588905165334; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-170981443 2128339401 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=719494813'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.33690685081235483  WHEN (((-871835891))=((''))) THEN ((NULL)IS('-1700096410')) WHEN (((x'', NULL, '')) BETWEEN ((x'', NULL, x'')) AND (('934935339', 0.29147062730626605, -1.862084659E9))) THEN ((((0.6114191476681642)AND('3')))AND(2.144615862E9)) WHEN CASE WHEN NULL THEN x'' ELSE 0.6876611147538222 END THEN 0.34638594490611063 COLLATE NOCASE WHEN ((((((((0.01008286378895451)AND(-4.5146196E7)))AND(NULL)))OR(NULL)))AND(x'57d4d8df')) THEN ((NULL) ISNULL) WHEN (NULL IN ()) THEN (('-894008376') NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1160249831 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CASE WHEN NULL THEN x'3609' ELSE x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.5101863973802993)<<('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-348172403 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-513021131')OR(33127652)))AND('%(')))%(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-426454793 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0xffffffffcebdfdc5) AND ('0.20099243739432116')))|(CASE WHEN 7.55617324E8 THEN 'G\r' WHEN '-855972585' THEN NULL WHEN '' THEN 0.6651986318421838 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=423028823 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1979525612 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7443056723239156) BETWEEN (NULL) AND ('0.010055428111583109'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2100050825 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=39507670 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=549016375'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)+('[0i')) IN (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 -1333095380 sz=-1150539861'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffff95e2ba8e) BETWEEN ((((('-1965686687')AND(NULL)))AND(NULL))) AND (('-1707958188' IN ('417692254')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('755617324')AND(NULL)))OR(0.46356259374930875)))>>((~ (x'92cf')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE NOCASE))<>((((-1411089352) IS FALSE)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)AND((('-865426505')/(0.32633525755987036)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=710256560 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-256296598 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.29385263272963036, -465997846, '')) BETWEEN (('149988629', NULL, '616673491')) AND ((NULL, '|w', '1618502002'))))%(DATETIME(x'', 0.042769375054172554, x'', 0xffffffffb52862df, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1316301716 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1576316882 sz=-1954011780 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1287421745 sz=246787241'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '950236819 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 658519988 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-891856626'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '149988629 sz=-1881676908'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((1.736088119E9, x'', '-1850903685'))<(('450852863', '', 0.028047727077820994))))OR(((0.6907194984681009)IS NOT(x'61ce')))))AND(((((0Xffffffffd733c7fb)AND(0.4574527495481939)))OR('TH&Hﳒj\rf')))))AND(NULL)))AND(CAST('8L8I7' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-809956233 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('T*' COLLATE BINARY)==('-1736617487' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CASE 0.35662169496026797  WHEN '-1216203084' THEN NULL ELSE 0.41246119053292174 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5183674117144875)) BETWEEN (('1474345019' COLLATE BINARY)) AND ((ABS(DISTINCT x'9e4b04cc')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1429527012 sz=-1965686687 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS BLOB)))!=(((NOT (0.20915048249808488))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS(((x'2a36') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-460059585 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'2d5fbb4e' AS BLOB) COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2008850834 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0xffffffffa23302e6 WHEN '355045440' THEN x'' WHEN NULL THEN '' END)%((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('973715895' AS INTEGER) THEN CAST('1439840417' AS INTEGER) WHEN TRIM(NULL) THEN (-2.79701663E8 IN ()) WHEN ((0.877311920873548) NOT NULL) THEN (('263177944') NOT BETWEEN (0.6434195886056292) AND (2.035001251E9)) ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0Xffffffffe3e626af  WHEN NULL THEN NULL END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-45146196 -1177753025 sz=54821863 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6672548830773871)AND('-1082161686')))AND(NULL)))>(CASE x''  WHEN 0Xffffffffc05d077c THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((-875337588 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'58765aee'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=471286467 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1573715226 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1965686687 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1177753025'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1807917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1736617487 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '119904536 0 sz=-111571537 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-894550949 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-561834008 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (-1308704939) AND (NULL)))<<((('-1480007804')<>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1177753025 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '480311085 49149202 sz=1736088119'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1 1295488991 sz=335662010 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-371893860 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1209587859 sz=-1663094403 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1273300101 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1072998128 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1954885028 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1e500000s') BETWEEN (x'47e3') AND ('39507670'))))<=((json_valid(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-855972585 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)LIKE(''))  WHEN (('1295488991') NOTNULL) THEN (~ (0.4377936934081017)) ELSE ((871563397)&('p')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CASE WHEN x'' THEN NULL ELSE '1736088119' END)) AND (('-758450093'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 0 sz=791361179 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (-2.006750245E9)), ((((x'b533')AND(NULL)))AND(NULL)), CAST(x'' AS INTEGER), ((x'') ISNULL), 0.5371438737659391 COLLATE NOCASE))!=((x'7e0a', NULL, TYPEOF(NULL), ((((NULL)OR('P&')))OR(0.021218793017499182)), '0.21839161058202372'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1763517300'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('2066703250') NOT BETWEEN (x'8724') AND (1881934340)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-59499985 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.14956684433484912)+(57671148)))AND('2087148000' COLLATE BINARY)))OR(((0xffffffffd0a63335) NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=482408736 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1182443687'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-23067953'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT NULL) IN ((- (0.23696270912705175)), ((0x3654de53)/(x'fda1')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1965686687') NOT BETWEEN (0.26016079712577067) AND (0.021724094589499976))) NOT BETWEEN (((((NULL)AND(NULL)))AND('1487820398'))) AND ((('154150551') NOT BETWEEN ('-1179868154') AND (1.382995047E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1931897379 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-610637657 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1439840417', ((((NULL)OR('1064864850')))OR('-1822579005')), UPPER('')))<=(((('TlFuF࣋]R') NOT NULL), (('e0054')>>(NULL)), NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8661614378713596; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOT NULL)))==((ABS(DISTINCT x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1579189855 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1807917 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 623227632; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=687258874'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((',{')IS NOT(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS REAL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1247887440 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=436011606 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-346596233 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1172098391 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X4fb7e9e AS TEXT)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '83836185 0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((-1750544782)AND(NULL)))OR(0.5429421720148889)))OR(0Xffffffff9837f4e6)))OR('')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=775223403 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))>=((0.21584857379531563))))>>(((x'')>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1846698235 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 1547574653 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('586542109' COLLATE BINARY)AND(((x'')AND('-277287973')))))AND((~ (0.4156788712577685)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-265822260 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '81434315 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1068401752 -2109543473 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=525434429 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'82a726ad434a') BETWEEN (x'258c') AND (x'')), ((x'') NOT NULL), CAST(x'' AS BLOB)))>((CASE x''  WHEN x'' THEN NULL WHEN '-1879891352' THEN 0.9074298687690946 WHEN 0x797a1379 THEN 0.830147756441537 WHEN '-17457105' THEN '' WHEN '0.14956684433484912' THEN 0Xffffffffbacf2e26 ELSE 0.46285523628829084 END, (('RWH逧6>褱*') NOT BETWEEN (0X0) AND (x'')), CAST(NULL AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-912864153 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1561740286'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '378700797 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-386285769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1801013001 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') NOT BETWEEN (0.46356259374930875) AND (NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8294261669084603)) BETWEEN (((('0.08446460877553708')IS NOT(NULL)))) AND ((((0.16666633411941723) BETWEEN (0.683948990229065) AND (''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(-1022171752 AS TEXT))OR((((x'', 0.6583573705338668, 0.11114135726080976)) NOT BETWEEN (('-843119598', x'f3fa', 0.19147243246184065)) AND ((0.8279427990369264, 'WGPR)M', x'd43e'))))))AND((((NULL)) BETWEEN (('194501587')) AND ((NULL))))))AND(((((((((x'8ee1')OR('0.20358970364958862')))AND('-929800224')))OR(NULL)))AND(x'')))))AND((((x'')) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1517351491'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.8790140041483101)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('0.3461977685790729' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=582621923 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1284096161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0Xffffffffa23302e6))<((x'ab8f6acb')))  WHEN CASE WHEN NULL THEN '' END THEN ((0.6445793537409777)>(x'1991')) WHEN ('' IN ()) THEN ((((NULL)AND('Of')))OR(x'')) WHEN '263177944' THEN (NOT (x'b861')) ELSE ('-1819764112' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT CAST('996814437' AS INTEGER), ((x'')/('dK')), CASE x'8875'  WHEN -300683180 THEN 0.48262406995871565 ELSE 0.053009062418920116 END, ((x'')>=('-279353514')), (+ (1742276303)), CAST(0.8337078197913987 AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE) COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5594965379521704 IN (NULL)) IN (LIKELY(x'4401'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-865426505'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2021759763 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))<>(CASE '#'  WHEN '' THEN x'' WHEN x'' THEN 'l	~b' WHEN NULL THEN '嫃\rFh*ￇld' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=561627504 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-45146196 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1981989221')OR(((x'2d5f0598')<(0.5246788942690266)))))OR(((-8.94550949E8) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) NOT BETWEEN (((387158727) NOT BETWEEN (0.7488769352662814) AND (-1.231536378E9))) AND ((((x'a2c6'))>=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (('') ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1923427053 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1247836217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-912720016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-426454793'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (0X274e7331 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-45146196 unordered noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 371025058 THEN NULL WHEN x'6fd2' THEN NULL WHEN x'' THEN x'' END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE RTRIM  WHEN ((-1.980015886E9)OR(x'')) THEN NULL COLLATE RTRIM WHEN x'' THEN LOWER(x'') WHEN x'' COLLATE BINARY THEN (~ ('XD')) ELSE (('')GLOB(0X873e67c)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-848857782 sz=1580675321 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, '-226857342', 937294832)) NOT BETWEEN ((x'', NULL, x'')) AND ((0.42108730332125255, '-135830567', 0.05545692725983287))))OR((((NULL)) NOT BETWEEN (('-657694158')) AND (('0.39976274357412755'))))))AND(((NULL)&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-538614902 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length('U[Zw〈')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CAST('-597271363' AS NUMERIC)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN COALESCE(DISTINCT 0.45678260353228584, x'') THEN (('256477489') BETWEEN ('687258874') AND ('FF')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE '2021677315'  WHEN x'' THEN x'd92b6101' ELSE NULL END THEN (('-1862084659')>(0xffffffffbcc87a1f)) ELSE (((('0.8167865105870408')AND(x'')))AND('1170015898')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X76937cec, '3P', -446785838)) BETWEEN ((x'1594', '', 0.901963462761365)) AND ((NULL, '鯳ql(V', NULL))))%(0.5505242097917766)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(CAST(0.2990778985945004 AS REAL), CHAR(0.3608976474601526, '1920813545', '578546334', -1.11571537E8, x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2021759763') NOT BETWEEN ('\d') AND ('-1095533047')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('689401948') NOT BETWEEN (x'') AND (0.16777318930643426)))<<('-579782296')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('848863693')*('755617324')))OR(((0.11075273675063002) NOTNULL))))OR(CAST('-513021131' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1514359423 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1712601190 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=2051170828'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<=((((('513734573')OR(0.3710720428888672)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '380735644 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-690218637 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.9219001362702814  WHEN x'' THEN '뽕^In*.&' WHEN NULL THEN x'1fd72261' WHEN 0.05801263454987071 THEN NULL ELSE '179034267' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('513734573' AS TEXT) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1172098391 sz=-894550949 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')|('1823282892')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=857771227 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1344326885 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1124084112'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE -1807917  WHEN NULL THEN 0.20358970364958862 END  WHEN ((('958668785')) BETWEEN ((x'')) AND (('P~쩳'))) THEN NULL COLLATE BINARY ELSE SQLITE_COMPILEOPTION_USED(x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ROUND(NULL, NULL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'16dce5fd'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '굋ｭ' THEN '-1587452438' END) BETWEEN (((NULL)=(0.4518919299360543))) AND (((((334833121)AND('')))OR('-958421531')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1308704939 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=875286415 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.42607215588648994  WHEN x'' THEN NULL ELSE 't㶂' END IN ((((x'dba4'))<=((')虪v'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1833451435 sz=-384191190 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB(x'754c')))-(((NULL) NOT BETWEEN ('1814092728') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=62782260 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=227843905 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1286258850 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1139997568'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((1.439840417E9, '-332074342', NULL)) BETWEEN ((NULL, '1140522203', 0.5240035837447559)) AND (('-2059178046', x'', -5.70789256E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.021677315E9) NOT NULL))>(0.07409985936957142 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)+('1982868846')))OR(CAST(0.617496609912606 AS REAL))))AND(((((0.2074050927445592)OR(')0הּ#')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7c4a'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'b676'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (x'c953' IN (x'3363', '?4eklKBsG'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '493014149 0 sz=426688413 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(NULL)))AND(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-231428329 -1308704939 sz=-1021759274 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '672425153 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1295488991 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' THEN CAST(NULL AS TEXT) WHEN QUOTE(0.8762771798265916) THEN 0xffffffffe7ca698b WHEN (NOT (NULL)) THEN (('-111571537')%('')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5444057149683056)<<(x'')))AND(((x'') NOT BETWEEN (NULL) AND (x'')))))OR(x'6f78')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT 0.0043361880099503924) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1496076975') NOT BETWEEN (NULL) AND (NULL)))AND(((NULL) IS FALSE))))AND((x'' IN (x'8d6a')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0 sz=466401376 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '39507670' THEN '?8]R' ELSE 0.3317451827962584 END)OR((((-570789256, x'', NULL, '-470512853', NULL))<=(('.W', x'', 0.8238577888117411, ']h*mlrl{p', 0.8220416180707246))))))AND(0.5332254177346999 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('JP6%%' AS NUMERIC) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1261931999) NOT NULL)) NOT BETWEEN ((('>j') BETWEEN (0.5344820497422175) AND (x''))) AND (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'')) NOT BETWEEN ((1.54150551E8)) AND (('149988629')))  WHEN (((x''))<((NULL))) THEN (('c')|(-9.58421531E8)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1922776604 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=857771227 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=552923013 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))>=((0.2336099352719896))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ())))<((NULL COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1792512561 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-465860588 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))OR(((((0.13353324653404686)OR('[')))OR('sf]{ b}')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('0.617496609912606')OR('-1700096410')))AND(x'')) THEN '909830355' COLLATE BINARY ELSE (((('QX^V2')AND('xva(-}l#h')))OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2144615862 sz=-869103538'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=998937512 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1418037033 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3746606580741435)IS NOT(0.3220732269974428)), CASE NULL  WHEN 0.10062599856338394 THEN x'ff94' END, (+ (x''))))==(((NOT ('U-~4 3')), CASE NULL  WHEN x'' THEN x'' WHEN x'eb9b' THEN 0.9547839093748537 WHEN -1325811958 THEN x'1ccd' END, '-Hg3m' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((0.18104186105743614)AND(0.835426115487846)))AND('0.9820295644566558')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN ((((0.5312224694669978)OR(x'd9e0')))AND('480311085')) ELSE ((0.9801267280334242)GLOB(0.3866219722896589)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.09331435858850767, x'bb79', NULL)) BETWEEN ((x'', ((((0.9672104083371651)AND('450852863')))AND(NULL)), ((x'')-(0Xffffffffe84e6ba7)))) AND (((NULL IN ('-654765292', x'')), NULL COLLATE BINARY, (+ (''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((x'' IN (x'', -1.231536378E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(((NULL) IS FALSE), ('-1772007220' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-426454793 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1892475519'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=532515184 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'jᭃ'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1386237796 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') NOT BETWEEN (0.7179564063415178) AND ('b')))OR(CASE WHEN NULL THEN '115866412' END)))OR((((((((('KVtY8')AND(-69014593)))OR(')&%u7h?')))OR('38105097')))OR(0.9986113391697918)))))OR(((('204424780')) BETWEEN (('1763988451')) AND (('0E'))))))AND(0.9396160885747323 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1930795390 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=33127652'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1581224999))>=((-914751577))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=83836185 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1218441257'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(x''))OR((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2115025707'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e4ef' IN ('687258874')))=(-1 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '6'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1862084659 2 sz=2035001251 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-2144615236 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 -1862084659 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('601456375')AND(-2.15827307E8)))OR('-513021131'))) BETWEEN ('-352397822' COLLATE RTRIM) AND (((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight('+Qb9JMM', 'K#q?pE', '39507670', x'')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.19354516223797302; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1231536378 sz=1648025325 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1980015886'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-570789256 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2f62')*(x''))) BETWEEN (CAST(2142092025 AS REAL)) AND (CASE NULL  WHEN '0.5825622870479411' THEN x'' ELSE '-869693957' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 857771227 sz=435533152 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (-4.03084389E8)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-2020235879 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2123680135'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2035001251 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'16bd83ae')AND(NULL)))AND(0.5263088205488816)))AND(0X5e993c1a)))AND(-885347281)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-640400842 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1919193735 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=595203021 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)!=(x'a1847019')))AND((('궵Z渹<') NOT NULL))))AND(((((((((NULL)AND(x'')))OR(0.7398837371838145)))OR(0.5608869765618835)))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((5.86542109E8 IN ()) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1295488991 -1067645060 sz=1162728798'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2059239984 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.056880061607308186') IS TRUE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')%('G	'))))<((CASE 0.5133374676240435  WHEN '' THEN 'L㡕' WHEN 0X1ca0f72d THEN x'' WHEN NULL THEN 0xffffffffb6983f06 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7395109459449238)<=(0.6434195886056292)))&(0.5820513242634043)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2072988181 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-403084389 1678284889 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=665788165 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS TEXT) IN (0.4734347438744826 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((2038503612 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1926738331'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((-9223372036854775808))<=((0.10082684231433525))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=724037837 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=469587649 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5549802998362002)*(x'09bc650239b9'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '-2046162971', x'')) BETWEEN ((NULL, '3p', x'')) AND ((NULL, x'c3bc', x'')))) BETWEEN ((((((((('6陦4g')OR(0.5308353060117083)))OR(x'')))OR(x'')))AND('eY!\\nz'))) AND ((((('149988629')OR('-276627902')))OR('B>4|.GTok')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1154025720 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1980015886 sz=1095281960 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN NULL THEN '0.6097137057803564' WHEN 0.3923879382404609 THEN NULL WHEN '' THEN '6239888905356484485 1846 -3628748935325182341-1810T1654 11-' WHEN 1981989221 THEN NULL WHEN x'' THEN '1170015898' ELSE 1418602156 END)OR(((NULL)OR(0.9561672929135765)))))AND(LIKELIHOOD('?O-	', 0.15608908204534866))))OR((~ (9223372036854775807)))))OR(((33127652) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1335992779 sz=1017076790 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-295945745 sz=-1198100022 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.5123271193624944 ELSE NULL END)|(CAST('' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-426454793 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-959545571 sz=-3940248 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN 423028823 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=881810907 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.056880061607308186; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=2021677315 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-214721034'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '746295519 879687917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1787353058'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1761170210 sz=-1551524383'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-940476776 687258874 sz=1139997568 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-2006750245) BETWEEN (NULL) AND (NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2025549739 -2100050825 sz=-465997846 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.177753025E9) ISNULL))OR(CASE WHEN NULL THEN '\u' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'c819') NOTNULL) THEN (- (2.70663897E8)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-131255731 513734573 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '349582050 sz=-1138513550'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=7179124 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-94696682 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY(DISTINCT '') AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 sz=-799316503'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1634543330 sz=-2029070818 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-17457105 857771227 sz=881810907'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1773715574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0Xffffffff826f4ce7 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'69ee' AS TEXT)  WHEN ('Ghc.餘夃' IN (NULL)) THEN (('1162743926') BETWEEN (NULL) AND (x'')) ELSE (((NULL))>=((0xffffffffaf8704fc))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9659729746147713) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1650341027'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.09278992975843203) IS FALSE)) BETWEEN ('OuTlWl+a' COLLATE RTRIM) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-296412283 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'', 2077367679)) NOT BETWEEN (((~ ('93205999')), (x'' IN (0Xfffffffff322bc95, 0.33196106790332414)), ((((x'')AND(0.4377936934081017)))OR(0.5182304828372747)))) AND (((((-377131150))>(('0.6514965520599675'))), ((((0.4736548302831338)AND('+ ZH	aqF')))OR('0.09706925877133155')), (('-859918923') NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('')OR(0.3324917843447045)))OR(1546379137)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1144765319 sz=154150551 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')<=(NULL)), 0x60786172, 0.708748242615556 COLLATE NOCASE))=((((NULL) NOT NULL), 'xL', (+ (1439840417))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1797964751 4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6431578171700955; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '293533473 687258874 sz=513734573'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=478632074 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1920813545'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=557998759 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((0.9790429949342527) IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (('cU%|凱E Xe') BETWEEN ('228834942') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1827936755 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.7212053755355899)*('-711443775')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-1335784637'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=202832384'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4241206067122648, 0.7032297064083015, NULL)) NOT BETWEEN ((x'', NULL, x'')) AND ((-1736617487, -1522326997, '513734573'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 sz=-1307081605'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2037067288 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1404144091 sz=-215827307 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) NOT BETWEEN (ABS(DISTINCT -1.573715226E9)) AND (PRINTF(-1342470494))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('')OR('\r~j?')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-820496027'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=85419495 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1059638792'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1163594831'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1700096410' IN (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(CASE NULL  WHEN 0.1411021363173568 THEN '-1067645060' WHEN x'' THEN '-1308704939' WHEN NULL THEN NULL ELSE NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1248262948'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('~>OV~T' COLLATE RTRIM)>>(((((' ''}41⠦2hx')OR(NULL)))OR('847246361')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT NULL) IN (CAST(0.5438630083056664 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-298339968 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-713728175'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND('')))OR('-1175596940')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1738692911'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1887613893 -1728126536'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '751732794 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2021677315 0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-7210703 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-201065302 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.25467746994542284)IS NOT('eᅭ')) THEN json('671627434') WHEN load_extension(NULL) THEN (x'' IN (0.025384270962137023)) WHEN CASE 0x175d64c2  WHEN x'' THEN '' END THEN 'S㧩gP' COLLATE BINARY WHEN NULL COLLATE RTRIM THEN LIKELY(DISTINCT '02') WHEN CAST('541161123' AS BLOB) THEN CAST('881810907' AS INTEGER) ELSE (('vY') BETWEEN (0Xfffffffff7d60349) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1012406466'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1243013498 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'f642')IS NOT(0.15042108847379554)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT NULL, 0.6615878632093948)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2035654018 sz=646402019 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1264538778 THEN 0.9898311726337279 ELSE 'b' END) NOT BETWEEN ((((x'')) NOT BETWEEN (('')) AND (('2021677315')))) AND (((x'8b3d') BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1549413429 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'7f7d')%('1439840417')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '231218548 sz=-673918750 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'e2a785ba') NOT NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((741627898)+('wi')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-737353507 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN ((('{aLq4ꈸ嫲') IS TRUE)) AND (ABS(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=857771227 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-855972585 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1173801365'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=586542109 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL))<(TIME(NULL, 0X7fbe8b64, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=474178792 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1064864850 -661041467 sz=-863636084 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -554596770 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1347617670 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0xfffffffff50bea0f)/(x''))  WHEN ((2064172415)>=(NULL)) THEN LIKELIHOOD(-277287973, 0.8011023770705877) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1850903685 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0x1af08026 THEN NULL ELSE NULL END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-796146141 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1199227066 sz=154150551 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 765928408 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CHAR(x'7665', -1287421745, x'')))>((((((0.835426115487846)OR(NULL)))AND('6U\rAfsp'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-703908156 942884603 sz=-261040367'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('809511288', '-634622853', x'44de45aa'))=((NULL, NULL, x'497b'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT NULL)) BETWEEN ((+ (0Xffffffffb001a9bf))) AND (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x45468e7b; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1314043470 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 2 sz=2009653668 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-57765489 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1400224201 sz=645449047 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('-2006750245' AS BLOB)  WHEN (('(]AY') IS FALSE) THEN ((('9o')) BETWEEN ((NULL)) AND ((''))) ELSE ((NULL) NOT BETWEEN (NULL) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1579664007 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-452777613 sz=-958421531 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=881810907 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1687142390 unordered noskipscan'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 1ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 329317876); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
PRAGMA application_id = -6275161042527269068; -- 0ms;
PRAGMA main.journal_size_limit = -8168261879789928829; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA short_column_names; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES (-67037986, NULL, '-640400842'), (0.8494107626033561, NULL, x''), (0Xffffffffef04fdb8, NULL, 0.8876190482389539), (NULL, x'', x''), ('174685301', '0.1411021363173568', 0xffffffffdeddcf38); -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA stats; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 625238120); -- 0ms;
PRAGMA temp.short_column_names = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1313149062); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41005'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.default_cache_size = 1899246187; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57779'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62992'); -- 1ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 494883447); -- 0ms;
PRAGMA temp.application_id = 6410759112378143002; -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (x'', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1171690250); -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA integrity_check; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA application_id = -2618948578166137499; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-103921401'); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c0 END) BETWEEN ((((rt1.c2))<>((rt1.c2)))) AND (((rt1.c1)||(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c0 END) BETWEEN ((((rt1.c2))<>((rt1.c2)))) AND (((rt1.c1)||(rt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c0 END) BETWEEN ((((rt1.c2))<>((rt1.c2)))) AND (((rt1.c1)||(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c0 END) BETWEEN ((((rt1.c2))<>((rt1.c2)))) AND (((rt1.c1)||(rt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c0 END) BETWEEN ((((rt1.c2))<>((rt1.c2)))) AND (((rt1.c1)||(rt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON NULL COLLATE BINARY WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0)) IS FALSE)) ORDER BY ((0.3344852762183287)>>((- (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON NULL COLLATE BINARY ORDER BY ((0.3344852762183287)>>((- (rt1.c1)))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON NULL COLLATE BINARY WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0)) IS FALSE)) ORDER BY ((0.3344852762183287)>>((- (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON NULL COLLATE BINARY ORDER BY ((0.3344852762183287)>>((- (rt1.c1)))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON NULL COLLATE BINARY WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0)) IS FALSE)) ORDER BY ((0.3344852762183287)>>((- (rt1.c1)))) DESC;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))AND(QUOTE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))AND(QUOTE(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))AND(QUOTE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))AND(QUOTE(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))AND(QUOTE(vt0.c0))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)==(x''))) ORDER BY ((((rt1.c2) NOTNULL))!=(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)) DESC  NULLS FIRST, (((rt1.c1 IN ()))-((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)==(x''))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((((rt1.c2) NOTNULL))<>(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)) DESC  NULLS FIRST, (((rt1.c1 IN ()))-((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)==(x''))) ORDER BY ((((rt1.c2) NOTNULL))!=(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)) DESC  NULLS FIRST, (((rt1.c1 IN ()))-((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)==(x''))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((((rt1.c2) NOTNULL))<>(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)) DESC  NULLS FIRST, (((rt1.c1 IN ()))-((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)==(x''))) ORDER BY ((((rt1.c2) NOTNULL))!=(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)) DESC  NULLS FIRST, (((rt1.c1 IN ()))-((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN vt0 ON (- (CAST(NULL AS INTEGER))) WHERE ((((rt1.c2)) BETWEEN (((((vt0.c0))<((rt1.c2))))) AND ((rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN (((((vt0.c0))<((rt1.c2))))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (- (CAST(NULL AS INTEGER))));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON (- (CAST(NULL AS INTEGER))) WHERE ((((rt1.c2)) BETWEEN (((((vt0.c0))<((rt1.c2))))) AND ((rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN (((((vt0.c0))<((rt1.c2))))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (- (CAST(NULL AS INTEGER))));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON (- (CAST(NULL AS INTEGER))) WHERE ((((rt1.c2)) BETWEEN (((((vt0.c0))<((rt1.c2))))) AND ((rt1.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL IN ()))AND((((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE, ((rt1.c0 COLLATE NOCASE)GLOB(((rt1.c0) NOT BETWEEN (rt1.c0) AND (4.66401376E8))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND((((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE, ((rt1.c0 COLLATE NOCASE)GLOB(((rt1.c0) NOT BETWEEN (rt1.c0) AND (4.66401376E8))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL IN ()))AND((((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE, ((rt1.c0 COLLATE NOCASE)GLOB(((rt1.c0) NOT BETWEEN (rt1.c0) AND (4.66401376E8))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND((((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE, ((rt1.c0 COLLATE NOCASE)GLOB(((rt1.c0) NOT BETWEEN (rt1.c0) AND (4.66401376E8))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL IN ()))AND((((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE, ((rt1.c0 COLLATE NOCASE)GLOB(((rt1.c0) NOT BETWEEN (rt1.c0) AND (4.66401376E8))))  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (((((((((rt1.c2 IN (vt0.c0)))AND(rt1.c0 COLLATE NOCASE)))OR(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)<(vt0.c0)))))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) WHERE ((((x'6169', ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)), ((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)), (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), LIKE('49149202', rt1.c1, '/')))=((rt1.c0 COLLATE RTRIM, ((rt1.c1)IS NOT(rt1.c0)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END, ((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c2) IS TRUE))))) ORDER BY (((('N') NOTNULL))<=(CASE rt1.c2  WHEN '&zC 0OSzF' THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, ((rt1.c0) BETWEEN (((rt1.c2)>=(rt1.c1))) AND (((rt1.c0)<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((x'6169', ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)), ((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)), (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), LIKE('49149202', rt1.c1, '/')))==((rt1.c0 COLLATE RTRIM, ((rt1.c1)IS NOT(rt1.c0)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END, ((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c2) IS TRUE))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((((((((rt1.c2 IN (vt0.c0)))AND(rt1.c0 COLLATE NOCASE)))OR(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)<(vt0.c0)))))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) ORDER BY (((('N') NOTNULL))<=(CASE rt1.c2  WHEN '&zC 0OSzF' THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, ((rt1.c0) BETWEEN (((rt1.c2)>=(rt1.c1))) AND (((rt1.c0)<(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (((((((((rt1.c2 IN (vt0.c0)))AND(rt1.c0 COLLATE NOCASE)))OR(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)<(vt0.c0)))))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) WHERE ((((x'6169', ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)), ((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)), (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), LIKE('49149202', rt1.c1, '/')))=((rt1.c0 COLLATE RTRIM, ((rt1.c1)IS NOT(rt1.c0)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END, ((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c2) IS TRUE))))) ORDER BY (((('N') NOTNULL))<=(CASE rt1.c2  WHEN '&zC 0OSzF' THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, ((rt1.c0) BETWEEN (((rt1.c2)>=(rt1.c1))) AND (((rt1.c0)<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((x'6169', ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)), ((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)), (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), LIKE('49149202', rt1.c1, '/')))==((rt1.c0 COLLATE RTRIM, ((rt1.c1)IS NOT(rt1.c0)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END, ((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c2) IS TRUE))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((((((((rt1.c2 IN (vt0.c0)))AND(rt1.c0 COLLATE NOCASE)))OR(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)<(vt0.c0)))))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) ORDER BY (((('N') NOTNULL))<=(CASE rt1.c2  WHEN '&zC 0OSzF' THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, ((rt1.c0) BETWEEN (((rt1.c2)>=(rt1.c1))) AND (((rt1.c0)<(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (((((((((rt1.c2 IN (vt0.c0)))AND(rt1.c0 COLLATE NOCASE)))OR(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)<(vt0.c0)))))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) WHERE ((((x'6169', ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)), ((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)), (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))), LIKE('49149202', rt1.c1, '/')))=((rt1.c0 COLLATE RTRIM, ((rt1.c1)IS NOT(rt1.c0)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END, ((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c2) IS TRUE))))) ORDER BY (((('N') NOTNULL))<=(CASE rt1.c2  WHEN '&zC 0OSzF' THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, ((rt1.c0) BETWEEN (((rt1.c2)>=(rt1.c1))) AND (((rt1.c0)<(vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))AND(''))))) ORDER BY (((((vt0.c0))<>((vt0.c0)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))AND(''))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))!=((vt0.c0)))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))AND(''))))) ORDER BY (((((vt0.c0))<>((vt0.c0)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))AND(''))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))!=((vt0.c0)))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))AND(''))))) ORDER BY (((((vt0.c0))<>((vt0.c0)))) IS FALSE);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (rt1.c1) ORDER BY HEX(DISTINCT (rt1.c0 IN (rt1.c2))), ((- (rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY HEX(DISTINCT (rt1.c0 IN (rt1.c2))), ((- (rt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (rt1.c1) ORDER BY HEX(DISTINCT (rt1.c0 IN (rt1.c2))), ((- (rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY HEX(DISTINCT (rt1.c0 IN (rt1.c2))), ((- (rt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (rt1.c1) ORDER BY HEX(DISTINCT (rt1.c0 IN (rt1.c2))), ((- (rt1.c0)) IN ());
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((((((((((((((((((((rt1.c0, rt1.c2, rt1.c0))<>((rt1.c1, rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE BINARY)))OR(vt0.c0 COLLATE NOCASE)))OR(rt1.c0)))OR(rt1.c0)))OR(CAST('ኣ+' AS TEXT))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND((rt1.c0 IN ()))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((((rt1.c0, rt1.c2, rt1.c0))!=((rt1.c1, rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE BINARY)))OR(vt0.c0 COLLATE NOCASE)))OR(rt1.c0)))OR(rt1.c0)))OR(CAST('ኣ+' AS TEXT))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND((rt1.c0 IN ()))))AND(x''))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((((((((((((((((((((rt1.c0, rt1.c2, rt1.c0))<>((rt1.c1, rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE BINARY)))OR(vt0.c0 COLLATE NOCASE)))OR(rt1.c0)))OR(rt1.c0)))OR(CAST('ኣ+' AS TEXT))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND((rt1.c0 IN ()))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((((rt1.c0, rt1.c2, rt1.c0))!=((rt1.c1, rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE BINARY)))OR(vt0.c0 COLLATE NOCASE)))OR(rt1.c0)))OR(rt1.c0)))OR(CAST('ኣ+' AS TEXT))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND((rt1.c0 IN ()))))AND(x''))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((((((((((((((((((((rt1.c0, rt1.c2, rt1.c0))<>((rt1.c1, rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE BINARY)))OR(vt0.c0 COLLATE NOCASE)))OR(rt1.c0)))OR(rt1.c0)))OR(CAST('ኣ+' AS TEXT))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND((rt1.c0 IN ()))))AND(x'')));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 COLLATE NOCASE)AND(((rt1.c2)LIKE(rt1.c2)))))AND(((rt1.c2)+(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE NOCASE)AND(((rt1.c2)LIKE(rt1.c2)))))AND(((rt1.c2)+(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 COLLATE NOCASE)AND(((rt1.c2)LIKE(rt1.c2)))))AND(((rt1.c2)+(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE NOCASE)AND(((rt1.c2)LIKE(rt1.c2)))))AND(((rt1.c2)+(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 COLLATE NOCASE)AND(((rt1.c2)LIKE(rt1.c2)))))AND(((rt1.c2)+(rt1.c1)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS NUMERIC)) ORDER BY ((((CAST(vt0.c0 AS INTEGER))AND(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))))OR(('()nV' IN (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((CAST(vt0.c0 AS INTEGER))AND(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))))OR(('()nV' IN (x'')))) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS NUMERIC)) ORDER BY ((((CAST(vt0.c0 AS INTEGER))AND(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))))OR(('()nV' IN (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((CAST(vt0.c0 AS INTEGER))AND(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))))OR(('()nV' IN (x'')))) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS NUMERIC)) ORDER BY ((((CAST(vt0.c0 AS INTEGER))AND(((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))))OR(('()nV' IN (x'')))) DESC;
SELECT * FROM rt1, vt0 WHERE ((((((((((('') NOT BETWEEN (vt0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)))OR(COALESCE(rt1.c1, rt1.c2, vt0.c0, rt1.c1))))AND((((vt0.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, vt0.c0))))))AND(NULLIF(rt1.c1, rt1.c0)))) ORDER BY (((vt0.c0 IN (rt1.c1, rt1.c2))) IS TRUE)  NULLS FIRST, ((~ (vt0.c0)) IN (((NULL) ISNULL), (rt1.c2 IN ()))), (((~ (rt1.c2)))+(0.6352735907433098))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((('') NOT BETWEEN (vt0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)))OR(COALESCE(rt1.c1, rt1.c2, vt0.c0, rt1.c1))))AND((((vt0.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, vt0.c0))))))AND(NULLIF(rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0 IN (rt1.c1, rt1.c2))) IS TRUE)  NULLS FIRST, ((~ (vt0.c0)) IN (((NULL) ISNULL), (rt1.c2 IN ()))), (((~ (rt1.c2)))+(0.6352735907433098))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE ((((((((((('') NOT BETWEEN (vt0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)))OR(COALESCE(rt1.c1, rt1.c2, vt0.c0, rt1.c1))))AND((((vt0.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, vt0.c0))))))AND(NULLIF(rt1.c1, rt1.c0)))) ORDER BY (((vt0.c0 IN (rt1.c1, rt1.c2))) IS TRUE)  NULLS FIRST, ((~ (vt0.c0)) IN (((NULL) ISNULL), (rt1.c2 IN ()))), (((~ (rt1.c2)))+(0.6352735907433098))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((('') NOT BETWEEN (vt0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)))OR(COALESCE(rt1.c1, rt1.c2, vt0.c0, rt1.c1))))AND((((vt0.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, vt0.c0))))))AND(NULLIF(rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0 IN (rt1.c1, rt1.c2))) IS TRUE)  NULLS FIRST, ((~ (vt0.c0)) IN (((NULL) ISNULL), (rt1.c2 IN ()))), (((~ (rt1.c2)))+(0.6352735907433098))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE ((((((((((('') NOT BETWEEN (vt0.c0) AND (rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)))OR(COALESCE(rt1.c1, rt1.c2, vt0.c0, rt1.c1))))AND((((vt0.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, vt0.c0))))))AND(NULLIF(rt1.c1, rt1.c0)))) ORDER BY (((vt0.c0 IN (rt1.c1, rt1.c2))) IS TRUE)  NULLS FIRST, ((~ (vt0.c0)) IN (((NULL) ISNULL), (rt1.c2 IN ()))), (((~ (rt1.c2)))+(0.6352735907433098))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2)<=(rt1.c2))) AND (CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2)<=(rt1.c2))) AND (CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2)<=(rt1.c2))) AND (CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2)<=(rt1.c2))) AND (CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c2)<=(rt1.c2))) AND (CAST(rt1.c1 AS REAL))));
SELECT ALL * FROM rt1 WHERE ((~ ((((rt1.c1))<=((rt1.c1)))))) ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1))<=((rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c0 AS INTEGER)))));
SELECT ALL * FROM rt1 WHERE ((~ ((((rt1.c1))<=((rt1.c1)))))) ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1))<=((rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c0 AS INTEGER)))));
SELECT ALL * FROM rt1 WHERE ((~ ((((rt1.c1))<=((rt1.c1)))))) ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))<((CAST(rt1.c0 AS INTEGER))));
SELECT * FROM vt0 WHERE (((vt0.c0)/(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)/(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)/(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN (x'3f00')) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8681640221877701) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE WHEN ' nt' THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)-('S5')))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN (x'3f00')) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8681640221877701) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE WHEN ' nt' THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)-('S5')))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN (x'3f00')) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8681640221877701) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE WHEN ' nt' THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)-('S5')))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN (x'3f00')) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8681640221877701) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE WHEN ' nt' THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)-('S5')))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN (x'3f00')) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8681640221877701) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE WHEN ' nt' THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)-('S5')))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (json_array_length(IFNULL(rt1.c1, rt1.c2), ((rt1.c0) BETWEEN ('wk') AND (rt1.c1)))) ORDER BY ((rt1.c1) NOT BETWEEN (((rt1.c2) ISNULL)) AND ((((rt1.c1))>=((rt1.c1))))) ASC  NULLS LAST, TYPEOF(DISTINCT CAST(rt1.c1 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(IFNULL(rt1.c1, rt1.c2), ((rt1.c0) BETWEEN ('wk') AND (rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOT BETWEEN (((rt1.c2) ISNULL)) AND ((((rt1.c1))>=((rt1.c1))))) ASC  NULLS LAST, TYPEOF(DISTINCT CAST(rt1.c1 AS REAL)) DESC);
SELECT COUNT(*) FROM rt1 WHERE (json_array_length(IFNULL(rt1.c1, rt1.c2), ((rt1.c0) BETWEEN ('wk') AND (rt1.c1)))) ORDER BY ((rt1.c1) NOT BETWEEN (((rt1.c2) ISNULL)) AND ((((rt1.c1))>=((rt1.c1))))) ASC  NULLS LAST, TYPEOF(DISTINCT CAST(rt1.c1 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(IFNULL(rt1.c1, rt1.c2), ((rt1.c0) BETWEEN ('wk') AND (rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOT BETWEEN (((rt1.c2) ISNULL)) AND ((((rt1.c1))>=((rt1.c1))))) ASC  NULLS LAST, TYPEOF(DISTINCT CAST(rt1.c1 AS REAL)) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) ISNULL))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY ((((((vt0.c0)==(rt1.c0)))AND(CAST(rt1.c2 AS TEXT))))OR(rt1.c2 COLLATE RTRIM))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 'lV_U' END)OR(x'')))OR((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((x'')-(vt0.c0)))))AND(rt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL))OR(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((vt0.c0)=(rt1.c0)))AND(CAST(rt1.c2 AS TEXT))))OR(rt1.c2 COLLATE RTRIM))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 'lV_U' END)OR(x'')))OR((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((x'')-(vt0.c0)))))AND(rt1.c1)) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) ISNULL))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY ((((((vt0.c0)==(rt1.c0)))AND(CAST(rt1.c2 AS TEXT))))OR(rt1.c2 COLLATE RTRIM))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 'lV_U' END)OR(x'')))OR((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((x'')-(vt0.c0)))))AND(rt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL))OR(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((vt0.c0)=(rt1.c0)))AND(CAST(rt1.c2 AS TEXT))))OR(rt1.c2 COLLATE RTRIM))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 'lV_U' END)OR(x'')))OR((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((x'')-(vt0.c0)))))AND(rt1.c1)) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) ISNULL))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY ((((((vt0.c0)==(rt1.c0)))AND(CAST(rt1.c2 AS TEXT))))OR(rt1.c2 COLLATE RTRIM))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 'lV_U' END)OR(x'')))OR((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((x'')-(vt0.c0)))))AND(rt1.c1)) DESC;
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c2))) AND (CAST(rt1.c2 AS REAL)))) ORDER BY (~ (json_array_length(x''))) ASC, CASE ((x'')>(rt1.c2))  WHEN (~ (vt0.c0)) THEN (- (rt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c2))) AND (CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (~ (json_array_length(x''))) ASC, CASE ((x'')>(rt1.c2))  WHEN (~ (vt0.c0)) THEN (- (rt1.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c2))) AND (CAST(rt1.c2 AS REAL)))) ORDER BY (~ (json_array_length(x''))) ASC, CASE ((x'')>(rt1.c2))  WHEN (~ (vt0.c0)) THEN (- (rt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c2))) AND (CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (~ (json_array_length(x''))) ASC, CASE ((x'')>(rt1.c2))  WHEN (~ (vt0.c0)) THEN (- (rt1.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) NOTNULL));
SELECT COUNT(*) FROM rt1, vt0 WHERE (highlight(TYPEOF(rt1.c0), x'', rt1.c2, CAST(vt0.c0 AS REAL))) ORDER BY ((NULL) IS TRUE), json_insert(CASE WHEN rt1.c2 THEN vt0.c0 END, (((vt0.c0, vt0.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c1))), (rt1.c2 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(TYPEOF(rt1.c0), x'', rt1.c2, CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((NULL) IS TRUE), json_insert(CASE WHEN rt1.c2 THEN vt0.c0 END, (((vt0.c0, vt0.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c1))), (rt1.c2 IN ())) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (highlight(TYPEOF(rt1.c0), x'', rt1.c2, CAST(vt0.c0 AS REAL))) ORDER BY ((NULL) IS TRUE), json_insert(CASE WHEN rt1.c2 THEN vt0.c0 END, (((vt0.c0, vt0.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c1))), (rt1.c2 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(TYPEOF(rt1.c0), x'', rt1.c2, CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((NULL) IS TRUE), json_insert(CASE WHEN rt1.c2 THEN vt0.c0 END, (((vt0.c0, vt0.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c1))), (rt1.c2 IN ())) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c2 IN ()))OR(0.5056762107709204)))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0))))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)<>(QUOTE(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN ()))OR(0.5056762107709204)))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)<>(QUOTE(vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c2 IN ()))OR(0.5056762107709204)))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0))))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)<>(QUOTE(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN ()))OR(0.5056762107709204)))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)<>(QUOTE(vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c2 IN ()))OR(0.5056762107709204)))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0))))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)<>(QUOTE(vt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE NOCASE))>((((rt1.c0)*(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 COLLATE NOCASE))>((((rt1.c0)*(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE NOCASE))>((((rt1.c0)*(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 COLLATE NOCASE))>((((rt1.c0)*(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE NOCASE))>((((rt1.c0)*(rt1.c1))))));
SELECT * FROM rt1 WHERE ((((0.5582130347124017) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.5582130347124017) IS TRUE) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((0.5582130347124017) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.5582130347124017) IS TRUE) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((0.5582130347124017) IS TRUE) IN ()));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)IS(rt1.c0))) NOT BETWEEN (((((rt1.c0)AND('881810907')))OR(NULL))) AND (((rt1.c2) IS FALSE))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)IS(rt1.c0))) NOT BETWEEN (((((rt1.c0)AND('881810907')))OR(NULL))) AND (((rt1.c2) IS FALSE))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)IS(rt1.c0))) NOT BETWEEN (((((rt1.c0)AND('881810907')))OR(NULL))) AND (((rt1.c2) IS FALSE))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)IS(rt1.c0))) NOT BETWEEN (((((rt1.c0)AND('881810907')))OR(NULL))) AND (((rt1.c2) IS FALSE))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)IS(rt1.c0))) NOT BETWEEN (((((rt1.c0)AND('881810907')))OR(NULL))) AND (((rt1.c2) IS FALSE))) WHERE (rt1.c2);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE RTRIM) ORDER BY TYPEOF(vt0.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1 ORDER BY TYPEOF(vt0.c0) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE RTRIM) ORDER BY TYPEOF(vt0.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1 ORDER BY TYPEOF(vt0.c0) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE RTRIM) ORDER BY TYPEOF(vt0.c0) ASC  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c0)||(rt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)||(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c0)||(rt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)||(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c0)||(rt1.c1)) AS NUMERIC));
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0 IN ()))IS NOT('梋3M6'))) ORDER BY (('')+((~ (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ()))IS NOT('梋3M6'))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (('')+((~ (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0 IN ()))IS NOT('梋3M6'))) ORDER BY (('')+((~ (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ()))IS NOT('梋3M6'))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (('')+((~ (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0 IN ()))IS NOT('梋3M6'))) ORDER BY (('')+((~ (rt1.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2, rt1.c0, 0.7996800345128008))=((rt1.c1, rt1.c0, rt1.c1)))))) ORDER BY ((((rt1.c0)&(rt1.c2))) NOTNULL)  NULLS LAST, ((((((((CAST(rt1.c2 AS REAL))OR(((x'')-(rt1.c2)))))AND(((rt1.c2)||(rt1.c2)))))OR((((rt1.c0))=((rt1.c1))))))AND(CAST(rt1.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt1.c2, rt1.c0, 0.7996800345128008))=((rt1.c1, rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)&(rt1.c2))) NOTNULL)  NULLS LAST, ((((((((CAST(rt1.c2 AS REAL))OR(((x'')-(rt1.c2)))))AND(((rt1.c2)||(rt1.c2)))))OR((((rt1.c0))=((rt1.c1))))))AND(CAST(rt1.c1 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2, rt1.c0, 0.7996800345128008))=((rt1.c1, rt1.c0, rt1.c1)))))) ORDER BY ((((rt1.c0)&(rt1.c2))) NOTNULL)  NULLS LAST, ((((((((CAST(rt1.c2 AS REAL))OR(((x'')-(rt1.c2)))))AND(((rt1.c2)||(rt1.c2)))))OR((((rt1.c0))=((rt1.c1))))))AND(CAST(rt1.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt1.c2, rt1.c0, 0.7996800345128008))=((rt1.c1, rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)&(rt1.c2))) NOTNULL)  NULLS LAST, ((((((((CAST(rt1.c2 AS REAL))OR(((x'')-(rt1.c2)))))AND(((rt1.c2)||(rt1.c2)))))OR((((rt1.c0))=((rt1.c1))))))AND(CAST(rt1.c1 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2, rt1.c0, 0.7996800345128008))=((rt1.c1, rt1.c0, rt1.c1)))))) ORDER BY ((((rt1.c0)&(rt1.c2))) NOTNULL)  NULLS LAST, ((((((((CAST(rt1.c2 AS REAL))OR(((x'')-(rt1.c2)))))AND(((rt1.c2)||(rt1.c2)))))OR((((rt1.c0))=((rt1.c1))))))AND(CAST(rt1.c1 AS BLOB))) DESC;
SELECT ALL * FROM rt1 WHERE (0.6565695655478543) ORDER BY CASE (rt1.c2 IN ())  WHEN NULLIF(DISTINCT rt1.c0, rt1.c1) THEN (~ (rt1.c2)) WHEN ((rt1.c1)IS NOT('&\?箊1p1')) THEN (((rt1.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c2))) WHEN COALESCE(rt1.c1, rt1.c1) THEN (rt1.c2 IN (rt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6565695655478543) IS TRUE)  as count FROM rt1 ORDER BY CASE (rt1.c2 IN ())  WHEN NULLIF(DISTINCT rt1.c0, rt1.c1) THEN (~ (rt1.c2)) WHEN ((rt1.c1)IS NOT('&\?箊1p1')) THEN (((rt1.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c2))) WHEN COALESCE(rt1.c1, rt1.c1) THEN (rt1.c2 IN (rt1.c0)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (0.6565695655478543) ORDER BY CASE (rt1.c2 IN ())  WHEN NULLIF(DISTINCT rt1.c0, rt1.c1) THEN (~ (rt1.c2)) WHEN ((rt1.c1)IS NOT('&\?箊1p1')) THEN (((rt1.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c2))) WHEN COALESCE(rt1.c1, rt1.c1) THEN (rt1.c2 IN (rt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6565695655478543) IS TRUE)  as count FROM rt1 ORDER BY CASE (rt1.c2 IN ())  WHEN NULLIF(DISTINCT rt1.c0, rt1.c1) THEN (~ (rt1.c2)) WHEN ((rt1.c1)IS NOT('&\?箊1p1')) THEN (((rt1.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c2))) WHEN COALESCE(rt1.c1, rt1.c1) THEN (rt1.c2 IN (rt1.c0)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (0.6565695655478543) ORDER BY CASE (rt1.c2 IN ())  WHEN NULLIF(DISTINCT rt1.c0, rt1.c1) THEN (~ (rt1.c2)) WHEN ((rt1.c1)IS NOT('&\?箊1p1')) THEN (((rt1.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c2))) WHEN COALESCE(rt1.c1, rt1.c1) THEN (rt1.c2 IN (rt1.c0)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (JULIANDAY('-894550949', ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.17458191006237622)))AND(vt0.c0)), ((vt0.c0)OR(vt0.c0)))) ORDER BY (vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE BINARY, (+ (((x'')>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY('-894550949', ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.17458191006237622)))AND(vt0.c0)), ((vt0.c0)OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE BINARY, (+ (((x'')>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (JULIANDAY('-894550949', ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.17458191006237622)))AND(vt0.c0)), ((vt0.c0)OR(vt0.c0)))) ORDER BY (vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE BINARY, (+ (((x'')>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY('-894550949', ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.17458191006237622)))AND(vt0.c0)), ((vt0.c0)OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE BINARY, (+ (((x'')>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (JULIANDAY('-894550949', ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.17458191006237622)))AND(vt0.c0)), ((vt0.c0)OR(vt0.c0)))) ORDER BY (vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE BINARY, (+ (((x'')>=(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0))<((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<((vt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0))<((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<((vt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0))<((vt0.c0))) COLLATE RTRIM;
SELECT COUNT(*) FROM rt1 WHERE (((((0Xfffffffff3ee8be4) NOT BETWEEN (0.18777301526038792) AND (rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0Xfffffffff3ee8be4) NOT BETWEEN (0.18777301526038792) AND (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((0Xfffffffff3ee8be4) NOT BETWEEN (0.18777301526038792) AND (rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0Xfffffffff3ee8be4) NOT BETWEEN (0.18777301526038792) AND (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((0Xfffffffff3ee8be4) NOT BETWEEN (0.18777301526038792) AND (rt1.c2))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END WHEN ((vt0.c0)<(vt0.c0)) THEN x'' COLLATE RTRIM WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END WHEN ((vt0.c0)<(vt0.c0)) THEN x'' COLLATE RTRIM WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) ELSE rt1.c0 END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END WHEN ((vt0.c0)<(vt0.c0)) THEN x'' COLLATE RTRIM WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END WHEN ((vt0.c0)<(vt0.c0)) THEN x'' COLLATE RTRIM WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) ELSE rt1.c0 END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END WHEN ((vt0.c0)<(vt0.c0)) THEN x'' COLLATE RTRIM WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) ELSE rt1.c0 END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((rt1.c2 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c2 IN (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((rt1.c2 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c2 IN (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((rt1.c2 IN (rt1.c0)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((x'') NOTNULL) WHERE ((((rt1.c1) NOT BETWEEN ('1242532183') AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN ('1242532183') AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((x'') NOTNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((x'') NOTNULL) WHERE ((((rt1.c1) NOT BETWEEN ('1242532183') AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN ('1242532183') AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((x'') NOTNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((x'') NOTNULL) WHERE ((((rt1.c1) NOT BETWEEN ('1242532183') AND (rt1.c1)) IN ()));
SELECT * FROM rt1 WHERE ((((- (rt1.c0))) NOT BETWEEN (0.19613851172084007 COLLATE BINARY) AND (((rt1.c0)&(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0))) NOT BETWEEN (0.19613851172084007 COLLATE BINARY) AND (((rt1.c0)&(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((- (rt1.c0))) NOT BETWEEN (0.19613851172084007 COLLATE BINARY) AND (((rt1.c0)&(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0))) NOT BETWEEN (0.19613851172084007 COLLATE BINARY) AND (((rt1.c0)&(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((- (rt1.c0))) NOT BETWEEN (0.19613851172084007 COLLATE BINARY) AND (((rt1.c0)&(rt1.c2)))));
SELECT ALL * FROM rt1, vt0 WHERE (((((('bh') NOT BETWEEN (rt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, (~ (rt1.c2)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((('bh') NOT BETWEEN (rt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, (~ (rt1.c2)), vt0.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((('bh') NOT BETWEEN (rt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, (~ (rt1.c2)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((('bh') NOT BETWEEN (rt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, (~ (rt1.c2)), vt0.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((('bh') NOT BETWEEN (rt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, (~ (rt1.c2)), vt0.c0))));
SELECT * FROM vt0, rt1 WHERE ((((rt1.c2)GLOB(rt1.c1)) IN ((~ (rt1.c2)), ((rt1.c1)OR(rt1.c0))))) ORDER BY CASE ((vt0.c0)<=(rt1.c1))  WHEN 0xffffffff955a7c46 THEN ((((rt1.c1)AND(rt1.c1)))AND('')) ELSE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)) END, (+ (rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)GLOB(rt1.c1)) IN ((~ (rt1.c2)), ((rt1.c1)OR(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0)<=(rt1.c1))  WHEN 0Xffffffff955a7c46 THEN ((((rt1.c1)AND(rt1.c1)))AND('')) ELSE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)) END, (+ (rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c2)GLOB(rt1.c1)) IN ((~ (rt1.c2)), ((rt1.c1)OR(rt1.c0))))) ORDER BY CASE ((vt0.c0)<=(rt1.c1))  WHEN 0xffffffff955a7c46 THEN ((((rt1.c1)AND(rt1.c1)))AND('')) ELSE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)) END, (+ (rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)GLOB(rt1.c1)) IN ((~ (rt1.c2)), ((rt1.c1)OR(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0)<=(rt1.c1))  WHEN 0Xffffffff955a7c46 THEN ((((rt1.c1)AND(rt1.c1)))AND('')) ELSE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)) END, (+ (rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c2)GLOB(rt1.c1)) IN ((~ (rt1.c2)), ((rt1.c1)OR(rt1.c0))))) ORDER BY CASE ((vt0.c0)<=(rt1.c1))  WHEN 0xffffffff955a7c46 THEN ((((rt1.c1)AND(rt1.c1)))AND('')) ELSE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)) END, (+ (rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) BETWEEN (0.09706925877133155) AND (vt0.c0)))/(x'3dab')) WHERE ((((((((((~ (NULL)))AND(rt1.c0)))OR(x'')))AND(((vt0.c0) ISNULL))))OR(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (NULL)))AND(rt1.c0)))OR(x'')))AND(((vt0.c0) ISNULL))))OR(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) BETWEEN (0.09706925877133155) AND (vt0.c0)))/(x'3dab')));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) BETWEEN (0.09706925877133155) AND (vt0.c0)))/(x'3dab')) WHERE ((((((((((~ (NULL)))AND(rt1.c0)))OR(x'')))AND(((vt0.c0) ISNULL))))OR(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (NULL)))AND(rt1.c0)))OR(x'')))AND(((vt0.c0) ISNULL))))OR(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) BETWEEN (0.09706925877133155) AND (vt0.c0)))/(x'3dab')));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) BETWEEN (0.09706925877133155) AND (vt0.c0)))/(x'3dab')) WHERE ((((((((((~ (NULL)))AND(rt1.c0)))OR(x'')))AND(((vt0.c0) ISNULL))))OR(((rt1.c0) NOTNULL))));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2, rt1.c0, 62782260)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2)) AND ((vt0.c0, rt1.c0, rt1.c2))))AND(((x'')<=(rt1.c0)))))AND(((vt0.c0) ISNULL))) WHERE (CASE WHEN ((vt0.c0)<(rt1.c1)) THEN x'' ELSE ((rt1.c2) IS TRUE) END) ORDER BY (((((((((((((rt1.c0 IN ()))AND(((rt1.c1) NOT NULL))))OR(NULL COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR((((vt0.c0, rt1.c1, rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, '()', vt0.c0, 0.43498688751240056, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2))))))OR((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(x''));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<(rt1.c1)) THEN x'' ELSE ((rt1.c2) IS TRUE) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2, rt1.c0, 62782260)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2)) AND ((vt0.c0, rt1.c0, rt1.c2))))AND(((x'')<=(rt1.c0)))))AND(((vt0.c0) ISNULL))) ORDER BY (((((((((((((rt1.c0 IN ()))AND(((rt1.c1) NOT NULL))))OR(NULL COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR((((vt0.c0, rt1.c1, rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, '()', vt0.c0, 0.43498688751240056, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2))))))OR((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(x'')));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2, rt1.c0, 62782260)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2)) AND ((vt0.c0, rt1.c0, rt1.c2))))AND(((x'')<=(rt1.c0)))))AND(((vt0.c0) ISNULL))) WHERE (CASE WHEN ((vt0.c0)<(rt1.c1)) THEN x'' ELSE ((rt1.c2) IS TRUE) END) ORDER BY (((((((((((((rt1.c0 IN ()))AND(((rt1.c1) NOT NULL))))OR(NULL COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR((((vt0.c0, rt1.c1, rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, '()', vt0.c0, 0.43498688751240056, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2))))))OR((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(x''));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<(rt1.c1)) THEN x'' ELSE ((rt1.c2) IS TRUE) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2, rt1.c0, 62782260)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2)) AND ((vt0.c0, rt1.c0, rt1.c2))))AND(((x'')<=(rt1.c0)))))AND(((vt0.c0) ISNULL))) ORDER BY (((((((((((((rt1.c0 IN ()))AND(((rt1.c1) NOT NULL))))OR(NULL COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR((((vt0.c0, rt1.c1, rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, '()', vt0.c0, 0.43498688751240056, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2))))))OR((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(x'')));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2, rt1.c0, 62782260)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2)) AND ((vt0.c0, rt1.c0, rt1.c2))))AND(((x'')<=(rt1.c0)))))AND(((vt0.c0) ISNULL))) WHERE (CASE WHEN ((vt0.c0)<(rt1.c1)) THEN x'' ELSE ((rt1.c2) IS TRUE) END) ORDER BY (((((((((((((rt1.c0 IN ()))AND(((rt1.c1) NOT NULL))))OR(NULL COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR((((vt0.c0, rt1.c1, rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, '()', vt0.c0, 0.43498688751240056, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2))))))OR((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))))))OR(x''));
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'3e92' THEN CAST(vt0.c0 AS REAL) WHEN x'' THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) END) ORDER BY ((((vt0.c0)>=(NULL))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'3e92' THEN CAST(vt0.c0 AS REAL) WHEN x'' THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(NULL))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'3e92' THEN CAST(vt0.c0 AS REAL) WHEN x'' THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) END) ORDER BY ((((vt0.c0)>=(NULL))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'3e92' THEN CAST(vt0.c0 AS REAL) WHEN x'' THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(NULL))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'3e92' THEN CAST(vt0.c0 AS REAL) WHEN x'' THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) END) ORDER BY ((((vt0.c0)>=(NULL))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (MIN('', CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((MIN('', CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (MIN('', CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((MIN('', CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (MIN('', CAST(vt0.c0 AS INTEGER)));
SELECT COUNT(*) FROM vt0 WHERE ((('1282230909') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS NOT(((0xffffffffeb2bf7f1)||(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1282230909') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)IS NOT(((0Xffffffffeb2bf7f1)||(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('1282230909') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS NOT(((0xffffffffeb2bf7f1)||(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1282230909') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)IS NOT(((0Xffffffffeb2bf7f1)||(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('1282230909') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS NOT(((0xffffffffeb2bf7f1)||(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)AND((NOT (rt1.c1))))) ORDER BY (((((rt1.c0)OR(rt1.c1)))OR(0X677a9a37)) IN ())  NULLS LAST, (+ (rt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)AND((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)OR(rt1.c1)))OR(0X677a9a37)) IN ())  NULLS LAST, (+ (rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)AND((NOT (rt1.c1))))) ORDER BY (((((rt1.c0)OR(rt1.c1)))OR(0X677a9a37)) IN ())  NULLS LAST, (+ (rt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)AND((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)OR(rt1.c1)))OR(0X677a9a37)) IN ())  NULLS LAST, (+ (rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)AND((NOT (rt1.c1))))) ORDER BY (((((rt1.c0)OR(rt1.c1)))OR(0X677a9a37)) IN ())  NULLS LAST, (+ (rt1.c0)) COLLATE NOCASE;
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(0X4cb5bdc7 AS REAL))&((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0x4cb5bdc7 AS REAL))&((~ (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(0X4cb5bdc7 AS REAL))&((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0x4cb5bdc7 AS REAL))&((~ (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(0X4cb5bdc7 AS REAL))&((~ (rt1.c2)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c0 AS TEXT) THEN (NOT (rt1.c1)) END) ORDER BY ((((((rt1.c0) NOTNULL))AND(x'' COLLATE NOCASE)))OR(((vt0.c0) ISNULL))) ASC, CAST((rt1.c2 IN ()) AS NUMERIC) ASC  NULLS LAST, (('1677438226') NOT BETWEEN ((NOT (rt1.c0))) AND (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c0 AS TEXT) THEN (NOT (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c0) NOTNULL))AND(x'' COLLATE NOCASE)))OR(((vt0.c0) ISNULL))) ASC, CAST((rt1.c2 IN ()) AS NUMERIC) ASC  NULLS LAST, (('1677438226') NOT BETWEEN ((NOT (rt1.c0))) AND (rt1.c1)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c0 AS TEXT) THEN (NOT (rt1.c1)) END) ORDER BY ((((((rt1.c0) NOTNULL))AND(x'' COLLATE NOCASE)))OR(((vt0.c0) ISNULL))) ASC, CAST((rt1.c2 IN ()) AS NUMERIC) ASC  NULLS LAST, (('1677438226') NOT BETWEEN ((NOT (rt1.c0))) AND (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c0 AS TEXT) THEN (NOT (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c0) NOTNULL))AND(x'' COLLATE NOCASE)))OR(((vt0.c0) ISNULL))) ASC, CAST((rt1.c2 IN ()) AS NUMERIC) ASC  NULLS LAST, (('1677438226') NOT BETWEEN ((NOT (rt1.c0))) AND (rt1.c1)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c0 AS TEXT) THEN (NOT (rt1.c1)) END) ORDER BY ((((((rt1.c0) NOTNULL))AND(x'' COLLATE NOCASE)))OR(((vt0.c0) ISNULL))) ASC, CAST((rt1.c2 IN ()) AS NUMERIC) ASC  NULLS LAST, (('1677438226') NOT BETWEEN ((NOT (rt1.c0))) AND (rt1.c1));
SELECT COUNT(*) FROM rt1 WHERE (COALESCE(((rt1.c2)GLOB(rt1.c2)), ((((((((rt1.c2)OR(x'4d1d')))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, rt1.c1)) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt1.c2)GLOB(rt1.c2)), ((((((((rt1.c2)OR(x'4d1d')))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, rt1.c1)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (COALESCE(((rt1.c2)GLOB(rt1.c2)), ((((((((rt1.c2)OR(x'4d1d')))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, rt1.c1)) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt1.c2)GLOB(rt1.c2)), ((((((((rt1.c2)OR(x'4d1d')))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, rt1.c1)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (COALESCE(((rt1.c2)GLOB(rt1.c2)), ((((((((rt1.c2)OR(x'4d1d')))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, rt1.c1)) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (('f/Iwesc')IS NOT(((rt1.c2) IS FALSE))) WHERE (((((vt0.c0)IS(rt1.c2)))<=(((((rt1.c0)AND(0.3787113320571237)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(rt1.c2)))<=(((((rt1.c0)AND(0.3787113320571237)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (('f/Iwesc')IS NOT(((rt1.c2) IS FALSE))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (('f/Iwesc')IS NOT(((rt1.c2) IS FALSE))) WHERE (((((vt0.c0)IS(rt1.c2)))<=(((((rt1.c0)AND(0.3787113320571237)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(rt1.c2)))<=(((((rt1.c0)AND(0.3787113320571237)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (('f/Iwesc')IS NOT(((rt1.c2) IS FALSE))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (('f/Iwesc')IS NOT(((rt1.c2) IS FALSE))) WHERE (((((vt0.c0)IS(rt1.c2)))<=(((((rt1.c0)AND(0.3787113320571237)))AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0 COLLATE RTRIM)))) ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c1 END)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0 COLLATE RTRIM)))) ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c1 END)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0 COLLATE RTRIM)))) ORDER BY (- (CASE WHEN rt1.c1 THEN rt1.c1 END));
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) ISNULL) AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (UPPER(rt1.c0) COLLATE NOCASE) ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c0) IS FALSE)) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c0) IS FALSE)) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (UPPER(rt1.c0) COLLATE NOCASE) ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c0) IS FALSE)) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c0) IS FALSE)) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (UPPER(rt1.c0) COLLATE NOCASE) ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c0) IS FALSE)) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END))  NULLS FIRST;
SELECT * FROM rt1 WHERE (-20205586) ORDER BY ((DATE(rt1.c0, rt1.c1, rt1.c1))<(((rt1.c1)<<(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-20205586) IS TRUE)  as count FROM rt1 ORDER BY ((DATE(rt1.c0, rt1.c1, rt1.c1))<(((rt1.c1)<<(rt1.c2))))  NULLS LAST);
SELECT * FROM rt1 WHERE (-20205586) ORDER BY ((DATE(rt1.c0, rt1.c1, rt1.c1))<(((rt1.c1)<<(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-20205586) IS TRUE)  as count FROM rt1 ORDER BY ((DATE(rt1.c0, rt1.c1, rt1.c1))<(((rt1.c1)<<(rt1.c2))))  NULLS LAST);
SELECT * FROM rt1 WHERE (-20205586) ORDER BY ((DATE(rt1.c0, rt1.c1, rt1.c1))<(((rt1.c1)<<(rt1.c2))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((vt0.c0) IS TRUE))));
SELECT * FROM vt0 WHERE (((((('-973957606') ISNULL)))<=((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-973957606') ISNULL)))<=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((('-973957606') ISNULL)))<=((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-973957606') ISNULL)))<=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((('-973957606') ISNULL)))<=((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)>=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)>=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)>=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)>=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)>=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'j1M\n뻺U' END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'j1M\n뻺U' END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'j1M\n뻺U' END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'j1M\n뻺U' END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'j1M\n뻺U' END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((- (rt1.c1)) IN (rt1.c0 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))) WHERE ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((x'24c6'))))&(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((x'24c6'))))&(rt1.c1))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((- (rt1.c1)) IN (rt1.c0 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((- (rt1.c1)) IN (rt1.c0 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))) WHERE ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((x'24c6'))))&(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((x'24c6'))))&(rt1.c1))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((- (rt1.c1)) IN (rt1.c0 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((- (rt1.c1)) IN (rt1.c0 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)))) WHERE ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((x'24c6'))))&(rt1.c1)));
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT))&(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS TEXT))&(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT))&(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS TEXT))&(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT))&(((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(NULL)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(NULL)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(NULL)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ROUND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), CAST(rt1.c2 AS BLOB)) WHERE (rt1.c2) ORDER BY NULL ASC  NULLS LAST, (((NULL IN (rt1.c2))) NOT BETWEEN (((rt1.c1)>(rt1.c0))) AND (rt1.c0 COLLATE BINARY)), ((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))||(rt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ROUND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), CAST(rt1.c2 AS BLOB)) ORDER BY NULL ASC  NULLS LAST, (((NULL IN (rt1.c2))) NOT BETWEEN (((rt1.c1)>(rt1.c0))) AND (rt1.c0 COLLATE BINARY)), ((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))||(rt1.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ROUND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), CAST(rt1.c2 AS BLOB)) WHERE (rt1.c2) ORDER BY NULL ASC  NULLS LAST, (((NULL IN (rt1.c2))) NOT BETWEEN (((rt1.c1)>(rt1.c0))) AND (rt1.c0 COLLATE BINARY)), ((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))||(rt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ROUND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), CAST(rt1.c2 AS BLOB)) ORDER BY NULL ASC  NULLS LAST, (((NULL IN (rt1.c2))) NOT BETWEEN (((rt1.c1)>(rt1.c0))) AND (rt1.c0 COLLATE BINARY)), ((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))||(rt1.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ROUND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), CAST(rt1.c2 AS BLOB)) WHERE (rt1.c2) ORDER BY NULL ASC  NULLS LAST, (((NULL IN (rt1.c2))) NOT BETWEEN (((rt1.c1)>(rt1.c0))) AND (rt1.c0 COLLATE BINARY)), ((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))||(rt1.c1 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c1) AND (rt1.c1)))<=((((rt1.c0))<=((vt0.c0))))) WHERE (((rt1.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c1) AND (rt1.c1)))<=((((rt1.c0))<=((vt0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c1) AND (rt1.c1)))<=((((rt1.c0))<=((vt0.c0))))) WHERE (((rt1.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c1) AND (rt1.c1)))<=((((rt1.c0))<=((vt0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c1) AND (rt1.c1)))<=((((rt1.c0))<=((vt0.c0))))) WHERE (((rt1.c2) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((('-1308704939', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) NOT NULL))))) ORDER BY (json_remove(vt0.c0, vt0.c0) IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-1308704939', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (json_remove(vt0.c0, vt0.c0) IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((('-1308704939', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) NOT NULL))))) ORDER BY (json_remove(vt0.c0, vt0.c0) IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-1308704939', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (json_remove(vt0.c0, vt0.c0) IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c1)AND((- (vt0.c0)))) WHERE (((((rt1.c0)|(x'')))>(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)|(x'')))>(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c1)AND((- (vt0.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c1)AND((- (vt0.c0)))) WHERE (((((rt1.c0)|(x'')))>(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)|(x'')))>(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c1)AND((- (vt0.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c1)AND((- (vt0.c0)))) WHERE (((((rt1.c0)|(x'')))>(CAST(NULL AS INTEGER))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>(vt0.c0)) THEN (((vt0.c0))=((vt0.c0))) WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1363896546')) THEN TRIM(DISTINCT vt0.c0, vt0.c0) END) ORDER BY (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>(vt0.c0)) THEN (((vt0.c0))=((vt0.c0))) WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1363896546')) THEN TRIM(DISTINCT vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>(vt0.c0)) THEN (((vt0.c0))=((vt0.c0))) WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1363896546')) THEN TRIM(DISTINCT vt0.c0, vt0.c0) END) ORDER BY (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>(vt0.c0)) THEN (((vt0.c0))=((vt0.c0))) WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1363896546')) THEN TRIM(DISTINCT vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>(vt0.c0)) THEN (((vt0.c0))=((vt0.c0))) WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1363896546')) THEN TRIM(DISTINCT vt0.c0, vt0.c0) END) ORDER BY (~ (vt0.c0));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((~ (rt1.c1)))OR(((rt1.c1) NOTNULL))))OR(CAST(rt1.c1 AS TEXT)))) ORDER BY (((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2))))<=((((rt1.c2) ISNULL)))) DESC  NULLS FIRST, CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 WHEN NULL THEN NULL WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c1)))OR(((rt1.c1) NOTNULL))))OR(CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2))))<=((((rt1.c2) ISNULL)))) DESC  NULLS FIRST, CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 WHEN NULL THEN NULL WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((~ (rt1.c1)))OR(((rt1.c1) NOTNULL))))OR(CAST(rt1.c1 AS TEXT)))) ORDER BY (((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2))))<=((((rt1.c2) ISNULL)))) DESC  NULLS FIRST, CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 WHEN NULL THEN NULL WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c1)))OR(((rt1.c1) NOTNULL))))OR(CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2))))<=((((rt1.c2) ISNULL)))) DESC  NULLS FIRST, CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 WHEN NULL THEN NULL WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((~ (rt1.c1)))OR(((rt1.c1) NOTNULL))))OR(CAST(rt1.c1 AS TEXT)))) ORDER BY (((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2))))<=((((rt1.c2) ISNULL)))) DESC  NULLS FIRST, CAST(CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 WHEN NULL THEN NULL WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c1)))IS(((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1)))IS(((((rt1.c2)AND(rt1.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c1)))IS(((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1)))IS(((((rt1.c2)AND(rt1.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c1)))IS(((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (DATETIME(CAST(0.1656571139276929 AS REAL), (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(CAST(0.1656571139276929 AS REAL), (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (DATETIME(CAST(0.1656571139276929 AS REAL), (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(CAST(0.1656571139276929 AS REAL), (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (DATETIME(CAST(0.1656571139276929 AS REAL), (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ())));
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) AND (((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) AND (((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) AND (((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) AND (((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) AND (((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((NULL)<<(vt0.c0)) IN (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (CASE WHEN ((((-1850903685)AND(rt1.c1)))OR(0.19648837062774194)) THEN ((vt0.c0)<>(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((-1850903685)AND(rt1.c1)))OR(0.19648837062774194)) THEN ((vt0.c0)!=(rt1.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((NULL)<<(vt0.c0)) IN (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((NULL)<<(vt0.c0)) IN (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (CASE WHEN ((((-1850903685)AND(rt1.c1)))OR(0.19648837062774194)) THEN ((vt0.c0)<>(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((-1850903685)AND(rt1.c1)))OR(0.19648837062774194)) THEN ((vt0.c0)!=(rt1.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((NULL)<<(vt0.c0)) IN (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((NULL)<<(vt0.c0)) IN (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (CASE WHEN ((((-1850903685)AND(rt1.c1)))OR(0.19648837062774194)) THEN ((vt0.c0)<>(rt1.c0)) END);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c1)||(rt1.c0))  WHEN ((rt1.c1)IS(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) END) ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1)||(rt1.c0))  WHEN ((rt1.c1)IS(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c1)||(rt1.c0))  WHEN ((rt1.c1)IS(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) END) ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1)||(rt1.c0))  WHEN ((rt1.c1)IS(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c1)||(rt1.c0))  WHEN ((rt1.c1)IS(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) END) ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS FALSE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((NULL) BETWEEN (rt1.c1) AND (rt1.c1)), ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(((NULL) BETWEEN (rt1.c1) AND (rt1.c1)), ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((NULL) BETWEEN (rt1.c1) AND (rt1.c1)), ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(((NULL) BETWEEN (rt1.c1) AND (rt1.c1)), ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((NULL) BETWEEN (rt1.c1) AND (rt1.c1)), ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))) ORDER BY rt1.c2 DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((x'9752') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'9752') IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((x'9752') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'9752') IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((x'9752') IS FALSE));
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY (NOT ((((rt1.c2))<=((rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((((rt1.c2))<=((rt1.c1)))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY (NOT ((((rt1.c2))<=((rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((((rt1.c2))<=((rt1.c1)))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY (NOT ((((rt1.c2))<=((rt1.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (0.36726481230710606) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c2) NOT BETWEEN (0.36726481230710606) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (0.36726481230710606) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c2) NOT BETWEEN (0.36726481230710606) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (0.36726481230710606) AND (rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c2) NOTNULL)) ORDER BY '[8]hv'  NULLS FIRST, HEX(rt1.c1 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY '[8]hv'  NULLS FIRST, HEX(rt1.c1 COLLATE BINARY)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c2) NOTNULL)) ORDER BY '[8]hv'  NULLS FIRST, HEX(rt1.c1 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY '[8]hv'  NULLS FIRST, HEX(rt1.c1 COLLATE BINARY)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c2) NOTNULL)) ORDER BY '[8]hv'  NULLS FIRST, HEX(rt1.c1 COLLATE BINARY)  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (STRFTIME(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY CASE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1))  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE rt1.c2 COLLATE BINARY END  NULLS LAST, (rt1.c0 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1))  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE rt1.c2 COLLATE BINARY END  NULLS LAST, (rt1.c0 COLLATE BINARY IN ()) ASC);
SELECT * FROM rt1, vt0 WHERE (STRFTIME(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY CASE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1))  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE rt1.c2 COLLATE BINARY END  NULLS LAST, (rt1.c0 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1))  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE rt1.c2 COLLATE BINARY END  NULLS LAST, (rt1.c0 COLLATE BINARY IN ()) ASC);
SELECT * FROM rt1, vt0 WHERE (STRFTIME(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY CASE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1))  WHEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE rt1.c2 COLLATE BINARY END  NULLS LAST, (rt1.c0 COLLATE BINARY IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))) ORDER BY (~ (load_extension(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (load_extension(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))) ORDER BY (~ (load_extension(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (load_extension(vt0.c0, vt0.c0))));
SELECT ALL * FROM rt1, vt0 WHERE (((LIKELY(rt1.c1)) BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt1.c1)) BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((LIKELY(rt1.c1)) BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt1.c1)) BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((LIKELY(rt1.c1)) BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (rt1.c1 COLLATE BINARY)));
SELECT ALL * FROM rt1 WHERE (((((((((((0.1438226414770022)/(NULL)))AND((- (rt1.c0)))))OR(((795184515) ISNULL))))AND(((((((((rt1.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c0)))OR(rt1.c1)))))AND(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((0.1438226414770022)/(NULL)))AND((- (rt1.c0)))))OR(((795184515) ISNULL))))AND(((((((((rt1.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c0)))OR(rt1.c1)))))AND(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((0.1438226414770022)/(NULL)))AND((- (rt1.c0)))))OR(((795184515) ISNULL))))AND(((((((((rt1.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c0)))OR(rt1.c1)))))AND(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((0.1438226414770022)/(NULL)))AND((- (rt1.c0)))))OR(((795184515) ISNULL))))AND(((((((((rt1.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c0)))OR(rt1.c1)))))AND(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((0.1438226414770022)/(NULL)))AND((- (rt1.c0)))))OR(((795184515) ISNULL))))AND(((((((((rt1.c0)AND(rt1.c0)))AND(x'')))OR(rt1.c0)))OR(rt1.c1)))))AND(rt1.c2)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ())))) ORDER BY ((TRIM(vt0.c0))IS NOT(((NULL)!=(vt0.c0)))), 0.27511363947618506 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))IS NOT(((NULL)!=(vt0.c0)))), 0.27511363947618506 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ())))) ORDER BY ((TRIM(vt0.c0))IS NOT(((NULL)!=(vt0.c0)))), 0.27511363947618506 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))IS NOT(((NULL)!=(vt0.c0)))), 0.27511363947618506 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ())))) ORDER BY ((TRIM(vt0.c0))IS NOT(((NULL)!=(vt0.c0)))), 0.27511363947618506 DESC;
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON '㘢법/z|VOy' WHERE ((rt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON '㘢법/z|VOy');
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON '㘢법/z|VOy' WHERE ((rt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON '㘢법/z|VOy');
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON '㘢법/z|VOy' WHERE ((rt1.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM rt1, vt0 WHERE (((((((((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END)AND('1981989221')))OR(((vt0.c0) ISNULL))))AND(((vt0.c0)IS NOT(rt1.c1)))))AND(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END)AND('1981989221')))OR(((vt0.c0) ISNULL))))AND(((vt0.c0)IS NOT(rt1.c1)))))AND(CASE WHEN rt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END)AND('1981989221')))OR(((vt0.c0) ISNULL))))AND(((vt0.c0)IS NOT(rt1.c1)))))AND(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END)AND('1981989221')))OR(((vt0.c0) ISNULL))))AND(((vt0.c0)IS NOT(rt1.c1)))))AND(CASE WHEN rt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END)AND('1981989221')))OR(((vt0.c0) ISNULL))))AND(((vt0.c0)IS NOT(rt1.c1)))))AND(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE NOCASE IN ())) ORDER BY (((rt1.c1)) BETWEEN (('')) AND ((json(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1)) BETWEEN (('')) AND ((json(vt0.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE NOCASE IN ())) ORDER BY (((rt1.c1)) BETWEEN (('')) AND ((json(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1)) BETWEEN (('')) AND ((json(vt0.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE NOCASE IN ())) ORDER BY (((rt1.c1)) BETWEEN (('')) AND ((json(vt0.c0))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)<(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) IS TRUE));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)<(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) IS TRUE));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)<(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) IS TRUE);
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT SQLITE_VERSION())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT SQLITE_VERSION())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT SQLITE_VERSION()));
SELECT ALL * FROM vt0 WHERE (CASE 0.5992847820448822  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN ('LTxbICp_') AND (vt0.c0)) THEN 0.887022295840207 WHEN (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.699211637951869, vt0.c0, vt0.c0))) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.5992847820448822  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN ('LTxbICp_') AND (vt0.c0)) THEN 0.887022295840207 WHEN (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.699211637951869, vt0.c0, vt0.c0))) THEN NULL END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE 0.5992847820448822  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN ('LTxbICp_') AND (vt0.c0)) THEN 0.887022295840207 WHEN (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.699211637951869, vt0.c0, vt0.c0))) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.5992847820448822  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN ('LTxbICp_') AND (vt0.c0)) THEN 0.887022295840207 WHEN (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.699211637951869, vt0.c0, vt0.c0))) THEN NULL END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE 0.5992847820448822  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN ('LTxbICp_') AND (vt0.c0)) THEN 0.887022295840207 WHEN (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.699211637951869, vt0.c0, vt0.c0))) THEN NULL END);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c2)))) AND ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c2)))) AND ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c2)))) AND ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c2)))) AND ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c2)))) AND ((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY (((rt1.c2, vt0.c0, 0.21983284694771277, rt1.c1, rt1.c2))=((rt1.c1, rt1.c1, vt0.c0, rt1.c1, rt1.c1))) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c1 COLLATE RTRIM))  NULLS LAST, ((rt1.c1)&(0.2690714740754494));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2, vt0.c0, 0.21983284694771277, rt1.c1, rt1.c2))==((rt1.c1, rt1.c1, vt0.c0, rt1.c1, rt1.c1))) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c1 COLLATE RTRIM))  NULLS LAST, ((rt1.c1)&(0.2690714740754494)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY (((rt1.c2, vt0.c0, 0.21983284694771277, rt1.c1, rt1.c2))=((rt1.c1, rt1.c1, vt0.c0, rt1.c1, rt1.c1))) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c1 COLLATE RTRIM))  NULLS LAST, ((rt1.c1)&(0.2690714740754494));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2, vt0.c0, 0.21983284694771277, rt1.c1, rt1.c2))==((rt1.c1, rt1.c1, vt0.c0, rt1.c1, rt1.c1))) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c1 COLLATE RTRIM))  NULLS LAST, ((rt1.c1)&(0.2690714740754494)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY (((rt1.c2, vt0.c0, 0.21983284694771277, rt1.c1, rt1.c2))=((rt1.c1, rt1.c1, vt0.c0, rt1.c1, rt1.c1))) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c1 COLLATE RTRIM))  NULLS LAST, ((rt1.c1)&(0.2690714740754494));
SELECT COUNT(*) FROM rt1 WHERE (((-1647284339)*(LIKELIHOOD(DISTINCT rt1.c2, 0.5605279191696423))));
SELECT SUM(count) FROM (SELECT ((((-1647284339)*(LIKELIHOOD(DISTINCT rt1.c2, 0.5605279191696423)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((-1647284339)*(LIKELIHOOD(DISTINCT rt1.c2, 0.5605279191696423))));
SELECT SUM(count) FROM (SELECT ((((-1647284339)*(LIKELIHOOD(DISTINCT rt1.c2, 0.5605279191696423)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((-1647284339)*(LIKELIHOOD(DISTINCT rt1.c2, 0.5605279191696423))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((CAST(rt1.c0 AS INTEGER))OR(NULLIF(rt1.c1, rt1.c0))))AND(rt1.c2)) WHERE ((- ('	'))) ORDER BY rt1.c2 DESC  NULLS LAST, ((((rt1.c2)>=(rt1.c1)))GLOB(rt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ('	'))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((CAST(rt1.c0 AS INTEGER))OR(NULLIF(rt1.c1, rt1.c0))))AND(rt1.c2)) ORDER BY rt1.c2 DESC  NULLS LAST, ((((rt1.c2)>=(rt1.c1)))GLOB(rt1.c0)) ASC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((CAST(rt1.c0 AS INTEGER))OR(NULLIF(rt1.c1, rt1.c0))))AND(rt1.c2)) WHERE ((- ('	'))) ORDER BY rt1.c2 DESC  NULLS LAST, ((((rt1.c2)>=(rt1.c1)))GLOB(rt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ('	'))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((CAST(rt1.c0 AS INTEGER))OR(NULLIF(rt1.c1, rt1.c0))))AND(rt1.c2)) ORDER BY rt1.c2 DESC  NULLS LAST, ((((rt1.c2)>=(rt1.c1)))GLOB(rt1.c0)) ASC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((CAST(rt1.c0 AS INTEGER))OR(NULLIF(rt1.c1, rt1.c0))))AND(rt1.c2)) WHERE ((- ('	'))) ORDER BY rt1.c2 DESC  NULLS LAST, ((((rt1.c2)>=(rt1.c1)))GLOB(rt1.c0)) ASC;
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (CASE rt1.c2  WHEN ((rt1.c0) NOT NULL) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN ((rt1.c0) NOT NULL) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (CASE rt1.c2  WHEN ((rt1.c0) NOT NULL) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN ((rt1.c0) NOT NULL) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1 WHERE (CASE rt1.c2  WHEN ((rt1.c0) NOT NULL) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1)||(rt1.c0 COLLATE RTRIM))) ORDER BY (((rt1.c0)) NOT BETWEEN (((NOT (rt1.c1)))) AND ((((rt1.c2)/(rt1.c2))))) DESC  NULLS FIRST, (((((rt1.c0 IN (rt1.c2)))OR(CAST(rt1.c2 AS BLOB))))OR(((rt1.c0)&(rt1.c1)))), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)||(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN (((NOT (rt1.c1)))) AND ((((rt1.c2)/(rt1.c2))))) DESC  NULLS FIRST, (((((rt1.c0 IN (rt1.c2)))OR(CAST(rt1.c2 AS BLOB))))OR(((rt1.c0)&(rt1.c1)))), vt0.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1)||(rt1.c0 COLLATE RTRIM))) ORDER BY (((rt1.c0)) NOT BETWEEN (((NOT (rt1.c1)))) AND ((((rt1.c2)/(rt1.c2))))) DESC  NULLS FIRST, (((((rt1.c0 IN (rt1.c2)))OR(CAST(rt1.c2 AS BLOB))))OR(((rt1.c0)&(rt1.c1)))), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)||(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN (((NOT (rt1.c1)))) AND ((((rt1.c2)/(rt1.c2))))) DESC  NULLS FIRST, (((((rt1.c0 IN (rt1.c2)))OR(CAST(rt1.c2 AS BLOB))))OR(((rt1.c0)&(rt1.c1)))), vt0.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1)||(rt1.c0 COLLATE RTRIM))) ORDER BY (((rt1.c0)) NOT BETWEEN (((NOT (rt1.c1)))) AND ((((rt1.c2)/(rt1.c2))))) DESC  NULLS FIRST, (((((rt1.c0 IN (rt1.c2)))OR(CAST(rt1.c2 AS BLOB))))OR(((rt1.c0)&(rt1.c1)))), vt0.c0;
SELECT * FROM vt0 WHERE (x'b00f');
SELECT SUM(count) FROM (SELECT ((x'b00f') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'b00f');
SELECT SUM(count) FROM (SELECT ((x'b00f') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'b00f');
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)|(rt1.c2)))|(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN '?m\#{&S' THEN ']' END))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.69975749430128) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(rt1.c2)))|(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN '?m\#{&S' THEN ']' END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.69975749430128) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)|(rt1.c2)))|(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN '?m\#{&S' THEN ']' END))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.69975749430128) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(rt1.c2)))|(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN '?m\#{&S' THEN ']' END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.69975749430128) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)|(rt1.c2)))|(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN '?m\#{&S' THEN ']' END))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.69975749430128) DESC;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1) ISNULL))+((((rt1.c2, rt1.c1, '-2006750245')) NOT BETWEEN ((vt0.c0, rt1.c1, 0.9087068009349731)) AND ((rt1.c1, vt0.c0, 'A{')))))) ORDER BY ((((rt1.c2)OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL))+((((rt1.c2, rt1.c1, '-2006750245')) NOT BETWEEN ((vt0.c0, rt1.c1, 0.9087068009349731)) AND ((rt1.c1, vt0.c0, 'A{')))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1) ISNULL))+((((rt1.c2, rt1.c1, '-2006750245')) NOT BETWEEN ((vt0.c0, rt1.c1, 0.9087068009349731)) AND ((rt1.c1, vt0.c0, 'A{')))))) ORDER BY ((((rt1.c2)OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL))+((((rt1.c2, rt1.c1, '-2006750245')) NOT BETWEEN ((vt0.c0, rt1.c1, 0.9087068009349731)) AND ((rt1.c1, vt0.c0, 'A{')))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1) ISNULL))+((((rt1.c2, rt1.c1, '-2006750245')) NOT BETWEEN ((vt0.c0, rt1.c1, 0.9087068009349731)) AND ((rt1.c1, vt0.c0, 'A{')))))) ORDER BY ((((rt1.c2)OR(((rt1.c1) IS FALSE))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT * FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, rt1.c1, vt0.c0))<>((vt0.c0, rt1.c1, rt1.c2))))<(CAST(vt0.c0 AS TEXT))) WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, rt1.c1, vt0.c0))!=((vt0.c0, rt1.c1, rt1.c2))))<(CAST(vt0.c0 AS TEXT))));
SELECT * FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, rt1.c1, vt0.c0))<>((vt0.c0, rt1.c1, rt1.c2))))<(CAST(vt0.c0 AS TEXT))) WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, rt1.c1, vt0.c0))!=((vt0.c0, rt1.c1, rt1.c2))))<(CAST(vt0.c0 AS TEXT))));
SELECT * FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, rt1.c1, vt0.c0))<>((vt0.c0, rt1.c1, rt1.c2))))<(CAST(vt0.c0 AS TEXT))) WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=(rt1.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((vt0.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c1))) IN ())) ORDER BY (((((((((('-426454793')+(rt1.c1)))OR((((rt1.c2))<((rt1.c0))))))AND(((rt1.c0)<=(rt1.c0)))))OR(rt1.c1)))OR(((vt0.c0)<>(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((vt0.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c1))) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((('-426454793')+(rt1.c1)))OR((((rt1.c2))<((rt1.c0))))))AND(((rt1.c0)<=(rt1.c0)))))OR(rt1.c1)))OR(((vt0.c0)<>(rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((vt0.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c1))) IN ())) ORDER BY (((((((((('-426454793')+(rt1.c1)))OR((((rt1.c2))<((rt1.c0))))))AND(((rt1.c0)<=(rt1.c0)))))OR(rt1.c1)))OR(((vt0.c0)<>(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((vt0.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c1))) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((('-426454793')+(rt1.c1)))OR((((rt1.c2))<((rt1.c0))))))AND(((rt1.c0)<=(rt1.c0)))))OR(rt1.c1)))OR(((vt0.c0)<>(rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((vt0.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c1))) IN ())) ORDER BY (((((((((('-426454793')+(rt1.c1)))OR((((rt1.c2))<((rt1.c0))))))AND(((rt1.c0)<=(rt1.c0)))))OR(rt1.c1)))OR(((vt0.c0)<>(rt1.c1)))) DESC;
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c2)-(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)-(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c2)-(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)-(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c2)-(vt0.c0)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c1)))));
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE RTRIM)OR(TRIM(DISTINCT rt1.c2))))OR(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 COLLATE RTRIM)OR(TRIM(DISTINCT rt1.c2))))OR(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE RTRIM)OR(TRIM(DISTINCT rt1.c2))))OR(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 COLLATE RTRIM)OR(TRIM(DISTINCT rt1.c2))))OR(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE RTRIM)OR(TRIM(DISTINCT rt1.c2))))OR(CAST(NULL AS NUMERIC))));
SELECT * FROM rt1 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((x'') NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-1904808450');
SELECT SUM(count) FROM (SELECT (('-1904808450') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-1904808450');
SELECT SUM(count) FROM (SELECT (('-1904808450') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-1904808450');
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE ((((-1.7457105E7) NOT NULL) IN (x''))) ORDER BY CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c0)<(rt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) WHEN ((rt1.c0)LIKE(rt1.c1)) THEN ((rt1.c2)IS(vt0.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN ((rt1.c0)=(rt1.c0)) WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) THEN HEX(rt1.c1) ELSE CAST(0.2423173295710822 AS REAL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((-1.7457105E7) NOT NULL) IN (x''))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c0)<(rt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) WHEN ((rt1.c0)LIKE(rt1.c1)) THEN ((rt1.c2)IS(vt0.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN ((rt1.c0)==(rt1.c0)) WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) THEN HEX(rt1.c1) ELSE CAST(0.2423173295710822 AS REAL) END DESC  NULLS FIRST);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE ((((-1.7457105E7) NOT NULL) IN (x''))) ORDER BY CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c0)<(rt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) WHEN ((rt1.c0)LIKE(rt1.c1)) THEN ((rt1.c2)IS(vt0.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN ((rt1.c0)=(rt1.c0)) WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) THEN HEX(rt1.c1) ELSE CAST(0.2423173295710822 AS REAL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((-1.7457105E7) NOT NULL) IN (x''))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c0)<(rt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) WHEN ((rt1.c0)LIKE(rt1.c1)) THEN ((rt1.c2)IS(vt0.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN ((rt1.c0)==(rt1.c0)) WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) THEN HEX(rt1.c1) ELSE CAST(0.2423173295710822 AS REAL) END DESC  NULLS FIRST);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE ((((-1.7457105E7) NOT NULL) IN (x''))) ORDER BY CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c0)<(rt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) WHEN ((rt1.c0)LIKE(rt1.c1)) THEN ((rt1.c2)IS(vt0.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN ((rt1.c0)=(rt1.c0)) WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) THEN HEX(rt1.c1) ELSE CAST(0.2423173295710822 AS REAL) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'Yx嬜!鬿+R' END) AND ('-279353514'))) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6caa' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0 COLLATE RTRIM) IS FALSE), ((vt0.c0)IS((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'Yx嬜!鬿+R' END) AND ('-279353514'))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6caa' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0 COLLATE RTRIM) IS FALSE), ((vt0.c0)IS((~ (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'Yx嬜!鬿+R' END) AND ('-279353514'))) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6caa' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0 COLLATE RTRIM) IS FALSE), ((vt0.c0)IS((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'Yx嬜!鬿+R' END) AND ('-279353514'))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6caa' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0 COLLATE RTRIM) IS FALSE), ((vt0.c0)IS((~ (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'Yx嬜!鬿+R' END) AND ('-279353514'))) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6caa' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0 COLLATE RTRIM) IS FALSE), ((vt0.c0)IS((~ (vt0.c0))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))*(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))*(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))*(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))*(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))*(((vt0.c0) ISNULL))));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))IS NOT(((rt1.c1)||(rt1.c0))))) ORDER BY rt1.c1 DESC, ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))>=(json_array_length(rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))IS NOT(((rt1.c1)||(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1 DESC, ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))>=(json_array_length(rt1.c1))) DESC);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))IS NOT(((rt1.c1)||(rt1.c0))))) ORDER BY rt1.c1 DESC, ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))>=(json_array_length(rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))IS NOT(((rt1.c1)||(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1 DESC, ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))>=(json_array_length(rt1.c1))) DESC);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))IS NOT(((rt1.c1)||(rt1.c0))))) ORDER BY rt1.c1 DESC, ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))>=(json_array_length(rt1.c1))) DESC;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (((((NULL) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt1.c0)AND(rt1.c2))) AND (0.1826563238125265)));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt1.c0)AND(rt1.c2))) AND (0.1826563238125265))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (rt1.c2 COLLATE RTRIM IN ()));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (((((NULL) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt1.c0)AND(rt1.c2))) AND (0.1826563238125265)));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt1.c0)AND(rt1.c2))) AND (0.1826563238125265))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (rt1.c2 COLLATE RTRIM IN ()));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (((((NULL) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt1.c0)AND(rt1.c2))) AND (0.1826563238125265)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((+ (rt1.c0))) NOTNULL)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((+ (rt1.c0))) NOTNULL)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((+ (rt1.c0))) NOTNULL)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS NUMERIC);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND ((rt1.c2 IN ()))));
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(0X3bdfb34 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0X3bdfb34 AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(0X3bdfb34 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0X3bdfb34 AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(0X3bdfb34 AS REAL));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'' COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((0.9925922304310919)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END) AND ((((rt1.c0, NULL, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, x'974f', rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9925922304310919)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END) AND ((((rt1.c0, NULL, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, x'974f', rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((0.9925922304310919)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END) AND ((((rt1.c0, NULL, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, x'974f', rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9925922304310919)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END) AND ((((rt1.c0, NULL, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, x'974f', rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((0.9925922304310919)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END) AND ((((rt1.c0, NULL, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, x'974f', rt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)AND(rt1.c1)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((vt0.c0)AND(rt1.c1)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)AND(rt1.c1)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((vt0.c0)AND(rt1.c1)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)AND(rt1.c1)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c2  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON ((NULL) BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN (('-533492537')) AND ((rt1.c2))))) WHERE (((~ (rt1.c1)) IN ())) ORDER BY (((rt1.c1)) NOT BETWEEN ((((((rt1.c2)AND(vt0.c0)))AND(vt0.c0)))) AND ((((x'')IS NOT(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((NULL) BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN (('-533492537')) AND ((rt1.c2))))) ORDER BY (((rt1.c1)) NOT BETWEEN ((((((rt1.c2)AND(vt0.c0)))AND(vt0.c0)))) AND ((((x'')IS NOT(vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON ((NULL) BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN (('-533492537')) AND ((rt1.c2))))) WHERE (((~ (rt1.c1)) IN ())) ORDER BY (((rt1.c1)) NOT BETWEEN ((((((rt1.c2)AND(vt0.c0)))AND(vt0.c0)))) AND ((((x'')IS NOT(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((NULL) BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN (('-533492537')) AND ((rt1.c2))))) ORDER BY (((rt1.c1)) NOT BETWEEN ((((((rt1.c2)AND(vt0.c0)))AND(vt0.c0)))) AND ((((x'')IS NOT(vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON ((NULL) BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN (('-533492537')) AND ((rt1.c2))))) WHERE (((~ (rt1.c1)) IN ())) ORDER BY (((rt1.c1)) NOT BETWEEN ((((((rt1.c2)AND(vt0.c0)))AND(vt0.c0)))) AND ((((x'')IS NOT(vt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))>(((rt1.c2)<(rt1.c1))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(x''))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c2)) AND (('')))) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))>(((rt1.c2)<(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(x''))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c2)) AND (('')))) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))>(((rt1.c2)<(rt1.c1))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(x''))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c2)) AND (('')))) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))>(((rt1.c2)<(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(x''))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c2)) AND (('')))) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))>(((rt1.c2)<(rt1.c1))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(x''))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c2)) AND (('')))) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c0))<>((vt0.c0))))!=(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))<>((vt0.c0))))<>(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c0))<>((vt0.c0))))!=(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))<>((vt0.c0))))<>(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c0))<>((vt0.c0))))!=(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT * FROM vt0, rt1 WHERE ((((rt1.c1)&(vt0.c0)) IN ())) ORDER BY ((-1862084659 COLLATE BINARY)IS NOT(((((((((rt1.c0)OR(rt1.c2)))AND(vt0.c0)))AND(rt1.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)&(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((-1862084659 COLLATE BINARY)IS NOT(((((((((rt1.c0)OR(rt1.c2)))AND(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE ((((rt1.c1)&(vt0.c0)) IN ())) ORDER BY ((-1862084659 COLLATE BINARY)IS NOT(((((((((rt1.c0)OR(rt1.c2)))AND(vt0.c0)))AND(rt1.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)&(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((-1862084659 COLLATE BINARY)IS NOT(((((((((rt1.c0)OR(rt1.c2)))AND(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE ((((rt1.c1)&(vt0.c0)) IN ())) ORDER BY ((-1862084659 COLLATE BINARY)IS NOT(((((((((rt1.c0)OR(rt1.c2)))AND(vt0.c0)))AND(rt1.c2)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0)!=(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0)!=(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0)!=(NULL)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)<=(vt0.c0)))!=((NOT (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(vt0.c0)))!=((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)<=(vt0.c0)))!=((NOT (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(vt0.c0)))!=((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)<=(vt0.c0)))!=((NOT (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((((((((((((vt0.c0) IS TRUE))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0)))*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0) IS TRUE))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((((((((((((vt0.c0) IS TRUE))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0)))*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0) IS TRUE))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((((((((((((vt0.c0) IS TRUE))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((rt1.c1 COLLATE RTRIM)AND(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM)AND(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((rt1.c1 COLLATE RTRIM)AND(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM)AND(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((rt1.c1 COLLATE RTRIM)AND(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((((('')AND(rt1.c0)))OR(rt1.c1)) IN ((('e_~XD?')>(rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((('')AND(rt1.c0)))OR(rt1.c1)) IN ((('e_~XD?')>(rt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((((('')AND(rt1.c0)))OR(rt1.c1)) IN ((('e_~XD?')>(rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((('')AND(rt1.c0)))OR(rt1.c1)) IN ((('e_~XD?')>(rt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((((('')AND(rt1.c0)))OR(rt1.c1)) IN ((('e_~XD?')>(rt1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0))))>(((rt1.c1 IN ()))))) ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0))))>(((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0))))>(((rt1.c1 IN ()))))) ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0))))>(((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0))))>(((rt1.c1 IN ()))))) ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))>=(((((rt1.c0, 0xffffffffd176b1b9, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2))))))) ORDER BY (NOT (((rt1.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))>=(((((rt1.c0, 0xffffffffd176b1b9, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c1) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))>=(((((rt1.c0, 0xffffffffd176b1b9, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2))))))) ORDER BY (NOT (((rt1.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))>=(((((rt1.c0, 0xffffffffd176b1b9, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c1) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))>=(((((rt1.c0, 0xffffffffd176b1b9, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2))))))) ORDER BY (NOT (((rt1.c1) NOT NULL)))  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE ((NOT (((rt1.c0) IS FALSE)))) ORDER BY (('f	') ISNULL)  NULLS LAST, CASE WHEN load_extension('-708544741', vt0.c0) THEN ((rt1.c2)=(rt1.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (('f	') ISNULL)  NULLS LAST, CASE WHEN load_extension('-708544741', vt0.c0) THEN ((rt1.c2)==(rt1.c2)) END DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((NOT (((rt1.c0) IS FALSE)))) ORDER BY (('f	') ISNULL)  NULLS LAST, CASE WHEN load_extension('-708544741', vt0.c0) THEN ((rt1.c2)=(rt1.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (('f	') ISNULL)  NULLS LAST, CASE WHEN load_extension('-708544741', vt0.c0) THEN ((rt1.c2)==(rt1.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((0x25ad6d6 IN (vt0.c0, vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((0X25ad6d6 IN (vt0.c0, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((0x25ad6d6 IN (vt0.c0, vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((0X25ad6d6 IN (vt0.c0, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((0x25ad6d6 IN (vt0.c0, vt0.c0))) ISNULL));
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0))!=((rt1.c0)))) NOT BETWEEN (((rt1.c1)<(rt1.c2))) AND ((((0.8417335802422361, rt1.c1, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) ORDER BY ((((('\r~j?')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))<>((rt1.c0)))) NOT BETWEEN (((rt1.c1)<(rt1.c2))) AND ((((0.8417335802422361, rt1.c1, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((('\r~j?')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL) DESC);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0))!=((rt1.c0)))) NOT BETWEEN (((rt1.c1)<(rt1.c2))) AND ((((0.8417335802422361, rt1.c1, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) ORDER BY ((((('\r~j?')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))<>((rt1.c0)))) NOT BETWEEN (((rt1.c1)<(rt1.c2))) AND ((((0.8417335802422361, rt1.c1, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((('\r~j?')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL) DESC);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0))!=((rt1.c0)))) NOT BETWEEN (((rt1.c1)<(rt1.c2))) AND ((((0.8417335802422361, rt1.c1, rt1.c1)) NOT BETWEEN ((vt0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) ORDER BY ((((('\r~j?')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL) DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0) IS FALSE) IN ())) ORDER BY ((((rt1.c2)OR(NULL)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))&((((rt1.c1, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, 'Ds%o*7O3', 0.21387067713494112)) AND ((rt1.c1, rt1.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)OR(NULL)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))&((((rt1.c1, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, 'Ds%o*7O3', 0.21387067713494112)) AND ((rt1.c1, rt1.c1, vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0) IS FALSE) IN ())) ORDER BY ((((rt1.c2)OR(NULL)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))&((((rt1.c1, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, 'Ds%o*7O3', 0.21387067713494112)) AND ((rt1.c1, rt1.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)OR(NULL)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))&((((rt1.c1, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, 'Ds%o*7O3', 0.21387067713494112)) AND ((rt1.c1, rt1.c1, vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0) IS FALSE) IN ())) ORDER BY ((((rt1.c2)OR(NULL)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))&((((rt1.c1, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, 'Ds%o*7O3', 0.21387067713494112)) AND ((rt1.c1, rt1.c1, vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE (CAST((- (vt0.c0)) AS TEXT)) ORDER BY CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)) WHEN 'T熱s' THEN ((rt1.c2) IS TRUE) WHEN IFNULL(rt1.c1, vt0.c0) THEN ((vt0.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)) WHEN 'T熱s' THEN ((rt1.c2) IS TRUE) WHEN IFNULL(rt1.c1, vt0.c0) THEN ((vt0.c0) IS TRUE) END);
SELECT * FROM vt0, rt1 WHERE (CAST((- (vt0.c0)) AS TEXT)) ORDER BY CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)) WHEN 'T熱s' THEN ((rt1.c2) IS TRUE) WHEN IFNULL(rt1.c1, vt0.c0) THEN ((vt0.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)) WHEN 'T熱s' THEN ((rt1.c2) IS TRUE) WHEN IFNULL(rt1.c1, vt0.c0) THEN ((vt0.c0) IS TRUE) END);
SELECT * FROM vt0, rt1 WHERE (CAST((- (vt0.c0)) AS TEXT)) ORDER BY CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)) WHEN 'T熱s' THEN ((rt1.c2) IS TRUE) WHEN IFNULL(rt1.c1, vt0.c0) THEN ((vt0.c0) IS TRUE) END;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ('-1156922755') ORDER BY (((((rt1.c1, rt1.c0, rt1.c1))<>((rt1.c0, vt0.c0, rt1.c2)))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1156922755') IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c1, rt1.c0, rt1.c1))<>((rt1.c0, vt0.c0, rt1.c2)))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ('-1156922755') ORDER BY (((((rt1.c1, rt1.c0, rt1.c1))<>((rt1.c0, vt0.c0, rt1.c2)))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1156922755') IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c1, rt1.c0, rt1.c1))<>((rt1.c0, vt0.c0, rt1.c2)))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ('-1156922755') ORDER BY (((((rt1.c1, rt1.c0, rt1.c1))<>((rt1.c0, vt0.c0, rt1.c2)))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (NOT (UNLIKELY(rt1.c2))) WHERE ((((vt0.c0))<=(((((rt1.c2, '2144615862', vt0.c0, vt0.c0, -660475978)) BETWEEN ((rt1.c2, vt0.c0, rt1.c0, '0.5338929591429309', rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2, rt1.c1, rt1.c2))))))) ORDER BY TYPEOF(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=(((((rt1.c2, '2144615862', vt0.c0, vt0.c0, -660475978)) BETWEEN ((rt1.c2, vt0.c0, rt1.c0, '0.5338929591429309', rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2, rt1.c1, rt1.c2))))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (NOT (UNLIKELY(rt1.c2))) ORDER BY TYPEOF(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END)  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (NOT (UNLIKELY(rt1.c2))) WHERE ((((vt0.c0))<=(((((rt1.c2, '2144615862', vt0.c0, vt0.c0, -660475978)) BETWEEN ((rt1.c2, vt0.c0, rt1.c0, '0.5338929591429309', rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2, rt1.c1, rt1.c2))))))) ORDER BY TYPEOF(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=(((((rt1.c2, '2144615862', vt0.c0, vt0.c0, -660475978)) BETWEEN ((rt1.c2, vt0.c0, rt1.c0, '0.5338929591429309', rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2, rt1.c1, rt1.c2))))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (NOT (UNLIKELY(rt1.c2))) ORDER BY TYPEOF(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END)  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (NOT (UNLIKELY(rt1.c2))) WHERE ((((vt0.c0))<=(((((rt1.c2, '2144615862', vt0.c0, vt0.c0, -660475978)) BETWEEN ((rt1.c2, vt0.c0, rt1.c0, '0.5338929591429309', rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c2, rt1.c1, rt1.c2))))))) ORDER BY TYPEOF(CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (LIKELY(DISTINCT (NOT (rt1.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (NOT (rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (LIKELY(DISTINCT (NOT (rt1.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (NOT (rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (LIKELY(DISTINCT (NOT (rt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CAST(((0.8013651868948045)AND(vt0.c0)) AS BLOB)  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((0.8013651868948045)AND(vt0.c0)) AS BLOB)  NULLS LAST, x'');
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CAST(((0.8013651868948045)AND(vt0.c0)) AS BLOB)  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((0.8013651868948045)AND(vt0.c0)) AS BLOB)  NULLS LAST, x'');
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CAST(((0.8013651868948045)AND(vt0.c0)) AS BLOB)  NULLS LAST, x'';
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)||(vt0.c0)))>=(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)||(vt0.c0)))>=(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)||(vt0.c0)))>=(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)||(vt0.c0)))>=(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)||(vt0.c0)))>=(rt1.c2 COLLATE BINARY)));
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((LIKELIHOOD(DISTINCT rt1.c1, 0.47681753753627465)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((LIKELIHOOD(DISTINCT rt1.c1, 0.47681753753627465))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((LIKELIHOOD(DISTINCT rt1.c1, 0.47681753753627465)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((LIKELIHOOD(DISTINCT rt1.c1, 0.47681753753627465))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((LIKELIHOOD(DISTINCT rt1.c1, 0.47681753753627465)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)||(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)||(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)||(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)||(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)||(rt1.c0)) IN ()));
SELECT * FROM rt1 WHERE ((x'' IN (COALESCE(DISTINCT rt1.c1, 2.56477489E8, rt1.c2, rt1.c0)))) ORDER BY CASE (+ (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c2 END THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN 0.8827871401606132 THEN rt1.c2 ELSE rt1.c0 END ELSE (~ (rt1.c0)) END ASC  NULLS FIRST, HEX(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ASC  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (COALESCE(DISTINCT rt1.c1, 2.56477489E8, rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CASE (+ (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c2 END THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN 0.8827871401606132 THEN rt1.c2 ELSE rt1.c0 END ELSE (~ (rt1.c0)) END ASC  NULLS FIRST, HEX(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ASC  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)) AS REAL)  NULLS FIRST);
SELECT * FROM rt1 WHERE ((x'' IN (COALESCE(DISTINCT rt1.c1, 2.56477489E8, rt1.c2, rt1.c0)))) ORDER BY CASE (+ (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c2 END THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN 0.8827871401606132 THEN rt1.c2 ELSE rt1.c0 END ELSE (~ (rt1.c0)) END ASC  NULLS FIRST, HEX(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ASC  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (COALESCE(DISTINCT rt1.c1, 2.56477489E8, rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CASE (+ (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c2 END THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN 0.8827871401606132 THEN rt1.c2 ELSE rt1.c0 END ELSE (~ (rt1.c0)) END ASC  NULLS FIRST, HEX(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ASC  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)) AS REAL)  NULLS FIRST);
SELECT * FROM rt1 WHERE ((x'' IN (COALESCE(DISTINCT rt1.c1, 2.56477489E8, rt1.c2, rt1.c0)))) ORDER BY CASE (+ (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c2 END THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN 0.8827871401606132 THEN rt1.c2 ELSE rt1.c0 END ELSE (~ (rt1.c0)) END ASC  NULLS FIRST, HEX(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ASC  NULLS FIRST, CAST(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) AND ((rt1.c1 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) AND ((rt1.c1 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) AND ((rt1.c1 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) AND ((rt1.c1 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) AND ((rt1.c1 IN (vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c0)OR(2.021677315E9)))OR(rt1.c1)) AS NUMERIC)) ORDER BY ((((rt1.c0) IS FALSE))LIKE(rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c0)OR(2.021677315E9)))OR(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) IS FALSE))LIKE(rt1.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c0)OR(2.021677315E9)))OR(rt1.c1)) AS NUMERIC)) ORDER BY ((((rt1.c0) IS FALSE))LIKE(rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c0)OR(2.021677315E9)))OR(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) IS FALSE))LIKE(rt1.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c0)OR(2.021677315E9)))OR(rt1.c1)) AS NUMERIC)) ORDER BY ((((rt1.c0) IS FALSE))LIKE(rt1.c0)) DESC;
SELECT ALL * FROM rt1 WHERE (((((x'4249') BETWEEN (rt1.c2) AND (rt1.c1)))<=(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((x'4249') BETWEEN (rt1.c2) AND (rt1.c1)))<=(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((x'4249') BETWEEN (rt1.c2) AND (rt1.c1)))<=(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((x'4249') BETWEEN (rt1.c2) AND (rt1.c1)))<=(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((x'4249') BETWEEN (rt1.c2) AND (rt1.c1)))<=(((rt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(NULL)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)GLOB(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (LIKELY(vt0.c0) IN ()), (- ((((vt0.c0))==((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(NULL)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)GLOB(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (LIKELY(vt0.c0) IN ()), (- ((((vt0.c0))==((vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(NULL)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)GLOB(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (LIKELY(vt0.c0) IN ()), (- ((((vt0.c0))==((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(NULL)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)GLOB(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (LIKELY(vt0.c0) IN ()), (- ((((vt0.c0))==((vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(NULL)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)GLOB(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (LIKELY(vt0.c0) IN ()), (- ((((vt0.c0))==((vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT * FROM vt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (x'');
SELECT COUNT(*) FROM vt0, rt1 WHERE (((TIME(rt1.c2, vt0.c0, rt1.c2, NULL, x'1025')) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((TIME(rt1.c2, vt0.c0, rt1.c2, NULL, x'1025')) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((TIME(rt1.c2, vt0.c0, rt1.c2, NULL, x'1025')) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((TIME(rt1.c2, vt0.c0, rt1.c2, NULL, x'1025')) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((TIME(rt1.c2, vt0.c0, rt1.c2, NULL, x'1025')) IS FALSE));
SELECT ALL * FROM rt1 WHERE (highlight(CAST(rt1.c2 AS BLOB), (rt1.c0 IN ()), LOWER(rt1.c2), CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((highlight(CAST(rt1.c2 AS BLOB), (rt1.c0 IN ()), LOWER(rt1.c2), CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (highlight(CAST(rt1.c2 AS BLOB), (rt1.c0 IN ()), LOWER(rt1.c2), CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((highlight(CAST(rt1.c2 AS BLOB), (rt1.c0 IN ()), LOWER(rt1.c2), CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(rt1.c0))) AND (((rt1.c1)&(rt1.c1)))) WHERE ((((((vt0.c0))>=((vt0.c0))))||(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((vt0.c0))))||(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(rt1.c0))) AND (((rt1.c1)&(rt1.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(rt1.c0))) AND (((rt1.c1)&(rt1.c1)))) WHERE ((((((vt0.c0))>=((vt0.c0))))||(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((vt0.c0))))||(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(rt1.c0))) AND (((rt1.c1)&(rt1.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(rt1.c0))) AND (((rt1.c1)&(rt1.c1)))) WHERE ((((((vt0.c0))>=((vt0.c0))))||(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM rt1, vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN '-865426505' THEN (~ (rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN '-865426505' THEN (~ (rt1.c1)) END DESC);
SELECT ALL * FROM rt1, vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN '-865426505' THEN (~ (rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN '-865426505' THEN (~ (rt1.c1)) END DESC);
SELECT ALL * FROM rt1, vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN '-865426505' THEN (~ (rt1.c1)) END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))<(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))<(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))<(((vt0.c0)>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((CAST(rt1.c2 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((CAST(rt1.c2 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((CAST(rt1.c2 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '170685679' THEN rt1.c2 ELSE vt0.c0 END))) ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '170685679' THEN rt1.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '170685679' THEN rt1.c2 ELSE vt0.c0 END))) ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '170685679' THEN rt1.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '170685679' THEN rt1.c2 ELSE vt0.c0 END))) ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (x'' IN ()) WHERE (INSTR(rt1.c2 COLLATE NOCASE, TRIM(DISTINCT rt1.c2, rt1.c2))) ORDER BY (~ (((NULL)*('H\(x▨F9ei'))));
SELECT SUM(count) FROM (SELECT ((INSTR(rt1.c2 COLLATE NOCASE, TRIM(DISTINCT rt1.c2, rt1.c2))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (x'' IN ()) ORDER BY (~ (((NULL)*('H\(x▨F9ei')))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (x'' IN ()) WHERE (INSTR(rt1.c2 COLLATE NOCASE, TRIM(DISTINCT rt1.c2, rt1.c2))) ORDER BY (~ (((NULL)*('H\(x▨F9ei'))));
SELECT SUM(count) FROM (SELECT ((INSTR(rt1.c2 COLLATE NOCASE, TRIM(DISTINCT rt1.c2, rt1.c2))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (x'' IN ()) ORDER BY (~ (((NULL)*('H\(x▨F9ei')))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (x'' IN ()) WHERE (INSTR(rt1.c2 COLLATE NOCASE, TRIM(DISTINCT rt1.c2, rt1.c2))) ORDER BY (~ (((NULL)*('H\(x▨F9ei'))));
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c2, rt1.c1, vt0.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2, vt0.c0, rt1.c2)) AND (('791361179', rt1.c1, x'', rt1.c2, vt0.c0))))/(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, rt1.c1, vt0.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2, vt0.c0, rt1.c2)) AND (('791361179', rt1.c1, x'', rt1.c2, vt0.c0))))/(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c2, rt1.c1, vt0.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2, vt0.c0, rt1.c2)) AND (('791361179', rt1.c1, x'', rt1.c2, vt0.c0))))/(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, rt1.c1, vt0.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2, vt0.c0, rt1.c2)) AND (('791361179', rt1.c1, x'', rt1.c2, vt0.c0))))/(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c2, rt1.c1, vt0.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, vt0.c0, rt1.c2, vt0.c0, rt1.c2)) AND (('791361179', rt1.c1, x'', rt1.c2, vt0.c0))))/(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))>>((((rt1.c2))>((vt0.c0)))))) ORDER BY (((((rt1.c2))!=((rt1.c1)))) NOT BETWEEN (((rt1.c0)!=(rt1.c2))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, (CASE WHEN rt1.c2 THEN rt1.c2 END IN (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, COALESCE(DISTINCT ((rt1.c1)<<('r')), CAST('T,' AS BLOB), CASE WHEN vt0.c0 THEN NULL ELSE rt1.c1 END, CAST(vt0.c0 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))>>((((rt1.c2))>((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c2))<>((rt1.c1)))) NOT BETWEEN (((rt1.c0)!=(rt1.c2))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, (CASE WHEN rt1.c2 THEN rt1.c2 END IN (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, COALESCE(DISTINCT ((rt1.c1)<<('r')), CAST('T,' AS BLOB), CASE WHEN vt0.c0 THEN NULL ELSE rt1.c1 END, CAST(vt0.c0 AS BLOB))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))>>((((rt1.c2))>((vt0.c0)))))) ORDER BY (((((rt1.c2))!=((rt1.c1)))) NOT BETWEEN (((rt1.c0)!=(rt1.c2))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, (CASE WHEN rt1.c2 THEN rt1.c2 END IN (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, COALESCE(DISTINCT ((rt1.c1)<<('r')), CAST('T,' AS BLOB), CASE WHEN vt0.c0 THEN NULL ELSE rt1.c1 END, CAST(vt0.c0 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))>>((((rt1.c2))>((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c2))<>((rt1.c1)))) NOT BETWEEN (((rt1.c0)!=(rt1.c2))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, (CASE WHEN rt1.c2 THEN rt1.c2 END IN (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, COALESCE(DISTINCT ((rt1.c1)<<('r')), CAST('T,' AS BLOB), CASE WHEN vt0.c0 THEN NULL ELSE rt1.c1 END, CAST(vt0.c0 AS BLOB))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))>>((((rt1.c2))>((vt0.c0)))))) ORDER BY (((((rt1.c2))!=((rt1.c1)))) NOT BETWEEN (((rt1.c0)!=(rt1.c2))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, (CASE WHEN rt1.c2 THEN rt1.c2 END IN (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, COALESCE(DISTINCT ((rt1.c1)<<('r')), CAST('T,' AS BLOB), CASE WHEN vt0.c0 THEN NULL ELSE rt1.c1 END, CAST(vt0.c0 AS BLOB))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((((rt1.c1)OR(x'')))AND(rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(x'')))AND(rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c1)OR(x'')))AND(rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(x'')))AND(rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c1)OR(x'')))AND(rt1.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE 0Xffffffffa812dc5b END)&(((rt1.c2)IS NOT(rt1.c1))))) ORDER BY ((((((((((x'')OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))GLOB(SQLITE_VERSION()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE 0xffffffffa812dc5b END)&(((rt1.c2)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((x'')OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))GLOB(SQLITE_VERSION()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE 0Xffffffffa812dc5b END)&(((rt1.c2)IS NOT(rt1.c1))))) ORDER BY ((((((((((x'')OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))GLOB(SQLITE_VERSION()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE 0xffffffffa812dc5b END)&(((rt1.c2)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((x'')OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))GLOB(SQLITE_VERSION()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE 0Xffffffffa812dc5b END)&(((rt1.c2)IS NOT(rt1.c1))))) ORDER BY ((((((((((x'')OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))GLOB(SQLITE_VERSION()))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)|(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)|(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)|(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)|(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)|(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>=((+ (vt0.c0))))) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>=((+ (vt0.c0))))) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>=((+ (vt0.c0))))) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (0X15c02e99) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((0X15c02e99) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (0X15c02e99) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((0X15c02e99) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (0X15c02e99) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2))) NOT NULL)) ORDER BY (- (COALESCE(rt1.c1, rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (- (COALESCE(rt1.c1, rt1.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2))) NOT NULL)) ORDER BY (- (COALESCE(rt1.c1, rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (- (COALESCE(rt1.c1, rt1.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2))) NOT NULL)) ORDER BY (- (COALESCE(rt1.c1, rt1.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0)||(CAST(rt1.c1 AS REAL)))) ORDER BY (((vt0.c0)-('1168414945')) IN (((rt1.c2) BETWEEN (NULL) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)||(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0)-('1168414945')) IN (((rt1.c2) BETWEEN (NULL) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0)||(CAST(rt1.c1 AS REAL)))) ORDER BY (((vt0.c0)-('1168414945')) IN (((rt1.c2) BETWEEN (NULL) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)||(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0)-('1168414945')) IN (((rt1.c2) BETWEEN (NULL) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0)||(CAST(rt1.c1 AS REAL)))) ORDER BY (((vt0.c0)-('1168414945')) IN (((rt1.c2) BETWEEN (NULL) AND (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.17695743284634102);
SELECT SUM(count) FROM (SELECT ((0.17695743284634102) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.17695743284634102);
SELECT SUM(count) FROM (SELECT ((0.17695743284634102) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.17695743284634102);
SELECT * FROM rt1 INNER JOIN vt0 ON x'' WHERE (CAST(((rt1.c0)LIKE(rt1.c1)) AS INTEGER)) ORDER BY (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)LIKE(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON x'' ORDER BY (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)) IN ()) DESC);
SELECT * FROM rt1 INNER JOIN vt0 ON x'' WHERE (CAST(((rt1.c0)LIKE(rt1.c1)) AS INTEGER)) ORDER BY (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)LIKE(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON x'' ORDER BY (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)) IN ()) DESC);
SELECT * FROM rt1 INNER JOIN vt0 ON x'' WHERE (CAST(((rt1.c0)LIKE(rt1.c1)) AS INTEGER)) ORDER BY (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0)>('2128339401'))))) ORDER BY (~ (json_patch(rt1.c1, rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0)>('2128339401'))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (json_patch(rt1.c1, rt1.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0)>('2128339401'))))) ORDER BY (~ (json_patch(rt1.c1, rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0)>('2128339401'))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (json_patch(rt1.c1, rt1.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0)>('2128339401'))))) ORDER BY (~ (json_patch(rt1.c1, rt1.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN rt1.c1 ELSE '\nꂈzSퟍ' END COLLATE NOCASE WHERE ((- (rt1.c0)) COLLATE NOCASE) ORDER BY ((((0.5797466454346345)<=(rt1.c1)))/(rt1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((- (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN rt1.c1 ELSE '\nꂈzSퟍ' END COLLATE NOCASE ORDER BY ((((0.5797466454346345)<=(rt1.c1)))/(rt1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN rt1.c1 ELSE '\nꂈzSퟍ' END COLLATE NOCASE WHERE ((- (rt1.c0)) COLLATE NOCASE) ORDER BY ((((0.5797466454346345)<=(rt1.c1)))/(rt1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((- (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN rt1.c1 ELSE '\nꂈzSퟍ' END COLLATE NOCASE ORDER BY ((((0.5797466454346345)<=(rt1.c1)))/(rt1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE WHEN vt0.c0 THEN rt1.c1 ELSE '\nꂈzSퟍ' END COLLATE NOCASE WHERE ((- (rt1.c0)) COLLATE NOCASE) ORDER BY ((((0.5797466454346345)<=(rt1.c1)))/(rt1.c2 COLLATE RTRIM));
SELECT * FROM rt1, vt0 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((CAST(vt0.c0 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULL ASC;
SELECT ALL * FROM rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c0 END)));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY (((rt1.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (LENGTH(rt1.c2)) AND (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (LENGTH(rt1.c2)) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY (((rt1.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (LENGTH(rt1.c2)) AND (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (LENGTH(rt1.c2)) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY (((rt1.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (LENGTH(rt1.c2)) AND (((vt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN rt1 ON (((((rt1.c1)/(0Xffffffffcc6aa3b7))))<((((rt1.c1) IS TRUE)))) WHERE (((((rt1.c1)<(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((((rt1.c1)/(0xffffffffcc6aa3b7))))<((((rt1.c1) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN rt1 ON (((((rt1.c1)/(0Xffffffffcc6aa3b7))))<((((rt1.c1) IS TRUE)))) WHERE (((((rt1.c1)<(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((((rt1.c1)/(0xffffffffcc6aa3b7))))<((((rt1.c1) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN rt1 ON (((((rt1.c1)/(0Xffffffffcc6aa3b7))))<((((rt1.c1) IS TRUE)))) WHERE (((((rt1.c1)<(vt0.c0))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ('i}HD)/{') ORDER BY LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('i}HD)/{') IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('i}HD)/{') ORDER BY LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('i}HD)/{') IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('i}HD)/{') ORDER BY LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-154509791');
SELECT SUM(count) FROM (SELECT (('-154509791') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-154509791');
SELECT SUM(count) FROM (SELECT (('-154509791') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-154509791');
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((~ (vt0.c0))))) ORDER BY CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN ((0x1936e857)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN ((0X1936e857)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((~ (vt0.c0))))) ORDER BY CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN ((0x1936e857)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN ((0X1936e857)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((~ (vt0.c0))))) ORDER BY CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN ((0x1936e857)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN ()) END DESC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) ORDER BY (NOT (NULL)) DESC  NULLS LAST, json_array_length((((rt1.c0))>=((rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT (NULL)) DESC  NULLS LAST, json_array_length((((rt1.c0))>=((rt1.c2)))));
SELECT * FROM rt1, vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) ORDER BY (NOT (NULL)) DESC  NULLS LAST, json_array_length((((rt1.c0))>=((rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT (NULL)) DESC  NULLS LAST, json_array_length((((rt1.c0))>=((rt1.c2)))));
SELECT * FROM rt1, vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) ORDER BY (NOT (NULL)) DESC  NULLS LAST, json_array_length((((rt1.c0))>=((rt1.c2))));
SELECT ALL * FROM rt1, vt0 WHERE (((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c1))))))AND(rt1.c1)))OR(vt0.c0)))OR('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c1))))))AND(rt1.c1)))OR(vt0.c0)))OR(''))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c1))))))AND(rt1.c1)))OR(vt0.c0)))OR('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c1))))))AND(rt1.c1)))OR(vt0.c0)))OR(''))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c1))))))AND(rt1.c1)))OR(vt0.c0)))OR('')));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (NULL IN ()) WHERE (((((x'' COLLATE BINARY)OR(QUOTE(rt1.c0))))OR((((rt1.c1, vt0.c0, x''))==((rt1.c0, rt1.c1, '-2006750245')))))) ORDER BY ((((LIKELY(DISTINCT x''))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((x'' COLLATE BINARY)OR(QUOTE(rt1.c0))))OR((((rt1.c1, vt0.c0, x''))=((rt1.c0, rt1.c1, '-2006750245')))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (NULL IN ()) ORDER BY ((((LIKELY(DISTINCT x''))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (NULL IN ()) WHERE (((((x'' COLLATE BINARY)OR(QUOTE(rt1.c0))))OR((((rt1.c1, vt0.c0, x''))==((rt1.c0, rt1.c1, '-2006750245')))))) ORDER BY ((((LIKELY(DISTINCT x''))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((x'' COLLATE BINARY)OR(QUOTE(rt1.c0))))OR((((rt1.c1, vt0.c0, x''))=((rt1.c0, rt1.c1, '-2006750245')))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (NULL IN ()) ORDER BY ((((LIKELY(DISTINCT x''))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (NULL IN ()) WHERE (((((x'' COLLATE BINARY)OR(QUOTE(rt1.c0))))OR((((rt1.c1, vt0.c0, x''))==((rt1.c0, rt1.c1, '-2006750245')))))) ORDER BY ((((LIKELY(DISTINCT x''))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(vt0.c0 AS TEXT)));
SELECT COUNT(*) FROM rt1 WHERE ((- (((rt1.c2)-(rt1.c2))))) ORDER BY (CASE WHEN rt1.c2 THEN '+j''zuH6' END IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2)-(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c2 THEN '+j''zuH6' END IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((- (((rt1.c2)-(rt1.c2))))) ORDER BY (CASE WHEN rt1.c2 THEN '+j''zuH6' END IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2)-(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c2 THEN '+j''zuH6' END IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((- (((rt1.c2)-(rt1.c2))))) ORDER BY (CASE WHEN rt1.c2 THEN '+j''zuH6' END IN ());
SELECT * FROM vt0 CROSS JOIN rt1 ON (- ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) WHERE (CAST(((rt1.c1)-(rt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)-(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (- ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT * FROM vt0 CROSS JOIN rt1 ON (- ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) WHERE (CAST(((rt1.c1)-(rt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)-(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (- ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT * FROM vt0 CROSS JOIN rt1 ON (- ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) WHERE (CAST(((rt1.c1)-(rt1.c1)) AS NUMERIC));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((LIKELY(rt1.c1)) NOT BETWEEN ((('&7+}7k') BETWEEN (rt1.c0) AND (x''))) AND (vt0.c0)) WHERE (((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))>>((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))>>((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((LIKELY(rt1.c1)) NOT BETWEEN ((('&7+}7k') BETWEEN (rt1.c0) AND (x''))) AND (vt0.c0)));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((LIKELY(rt1.c1)) NOT BETWEEN ((('&7+}7k') BETWEEN (rt1.c0) AND (x''))) AND (vt0.c0)) WHERE (((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))>>((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))>>((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((LIKELY(rt1.c1)) NOT BETWEEN ((('&7+}7k') BETWEEN (rt1.c0) AND (x''))) AND (vt0.c0)));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((LIKELY(rt1.c1)) NOT BETWEEN ((('&7+}7k') BETWEEN (rt1.c0) AND (x''))) AND (vt0.c0)) WHERE (((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))>>((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)|(vt0.c0)) COLLATE NOCASE WHERE (((((NOT (rt1.c1)), (rt1.c2 IN (vt0.c0, rt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))<((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)), ((x'')GLOB(rt1.c1)), rt1.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt1.c1)), (rt1.c2 IN (vt0.c0, rt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))<((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)), ((x'')GLOB(rt1.c1)), rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)|(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)|(vt0.c0)) COLLATE NOCASE WHERE (((((NOT (rt1.c1)), (rt1.c2 IN (vt0.c0, rt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))<((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)), ((x'')GLOB(rt1.c1)), rt1.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt1.c1)), (rt1.c2 IN (vt0.c0, rt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))<((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)), ((x'')GLOB(rt1.c1)), rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)|(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)|(vt0.c0)) COLLATE NOCASE WHERE (((((NOT (rt1.c1)), (rt1.c2 IN (vt0.c0, rt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))<((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)), ((x'')GLOB(rt1.c1)), rt1.c2 COLLATE BINARY))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)) THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)) THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)) THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)) THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)) THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END);
SELECT * FROM rt1 WHERE (NULLIF(((rt1.c0)>(rt1.c1)), rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt1.c0)>(rt1.c1)), rt1.c1)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULLIF(((rt1.c0)>(rt1.c1)), rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt1.c0)>(rt1.c1)), rt1.c1)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULLIF(((rt1.c0)>(rt1.c1)), rt1.c1));
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) ORDER BY (((rt1.c0)) BETWEEN ((rt1.c1)) AND (((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)) BETWEEN ((rt1.c1)) AND (((+ (rt1.c1))))));
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) ORDER BY (((rt1.c0)) BETWEEN ((rt1.c1)) AND (((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)) BETWEEN ((rt1.c1)) AND (((+ (rt1.c1))))));
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) ORDER BY (((rt1.c0)) BETWEEN ((rt1.c1)) AND (((+ (rt1.c1)))));
SELECT ALL * FROM rt1 WHERE ((((((((((2.068245606E9 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(NULL)))))OR((~ (rt1.c0)))))AND(rt1.c2)))AND(rt1.c2))) ORDER BY (((((rt1.c1))<>((rt1.c0)))) IS TRUE) ASC, (- (((rt1.c2)<>(rt1.c0))))  NULLS LAST, ((rt1.c2 COLLATE BINARY)|(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((2.068245606E9 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(NULL)))))OR((~ (rt1.c0)))))AND(rt1.c2)))AND(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1))!=((rt1.c0)))) IS TRUE) ASC, (- (((rt1.c2)<>(rt1.c0))))  NULLS LAST, ((rt1.c2 COLLATE BINARY)|(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((((((2.068245606E9 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(NULL)))))OR((~ (rt1.c0)))))AND(rt1.c2)))AND(rt1.c2))) ORDER BY (((((rt1.c1))<>((rt1.c0)))) IS TRUE) ASC, (- (((rt1.c2)<>(rt1.c0))))  NULLS LAST, ((rt1.c2 COLLATE BINARY)|(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((2.068245606E9 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(NULL)))))OR((~ (rt1.c0)))))AND(rt1.c2)))AND(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1))!=((rt1.c0)))) IS TRUE) ASC, (- (((rt1.c2)<>(rt1.c0))))  NULLS LAST, ((rt1.c2 COLLATE BINARY)|(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((((((2.068245606E9 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(NULL)))))OR((~ (rt1.c0)))))AND(rt1.c2)))AND(rt1.c2))) ORDER BY (((((rt1.c1))<>((rt1.c0)))) IS TRUE) ASC, (- (((rt1.c2)<>(rt1.c0))))  NULLS LAST, ((rt1.c2 COLLATE BINARY)|(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB)) ORDER BY (((((rt1.c1 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))))OR(((rt1.c0)+(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c1 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))))OR(((rt1.c0)+(rt1.c1)))));
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB)) ORDER BY (((((rt1.c1 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))))OR(((rt1.c0)+(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c1 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))))OR(((rt1.c0)+(rt1.c1)))));
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB)) ORDER BY (((((rt1.c1 IN ()))OR(((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))))OR(((rt1.c0)+(rt1.c1))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0 COLLATE NOCASE, 0.46295403077204444 COLLATE RTRIM))==((NULL, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END, rt1.c1 COLLATE NOCASE)))) ORDER BY ((((((rt1.c0)AND(145998057)))OR('-1231696594'))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0 COLLATE NOCASE, 0.46295403077204444 COLLATE RTRIM))=((NULL, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END, rt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c0)AND(145998057)))OR('-1231696594'))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0 COLLATE NOCASE, 0.46295403077204444 COLLATE RTRIM))==((NULL, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END, rt1.c1 COLLATE NOCASE)))) ORDER BY ((((((rt1.c0)AND(145998057)))OR('-1231696594'))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0 COLLATE NOCASE, 0.46295403077204444 COLLATE RTRIM))=((NULL, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END, rt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c0)AND(145998057)))OR('-1231696594'))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0 COLLATE NOCASE, 0.46295403077204444 COLLATE RTRIM))==((NULL, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END, rt1.c1 COLLATE NOCASE)))) ORDER BY ((((((rt1.c0)AND(145998057)))OR('-1231696594'))) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((x'cef2' IN ())) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((x'cef2' IN ())) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((x'cef2' IN ())) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((x'cef2' IN ())) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((x'cef2' IN ())) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT ALL * FROM rt1, vt0 WHERE (((((0X4828785b)>=(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((0X4828785b)>=(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((0X4828785b)>=(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((0X4828785b)>=(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((0X4828785b)>=(rt1.c2))) IS TRUE));
SELECT * FROM rt1 CROSS JOIN vt0 ON x'dd67' WHERE ((- (rt1.c2 COLLATE BINARY))) ORDER BY ((+ (rt1.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON x'dd67' ORDER BY ((+ (rt1.c2)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN vt0 ON x'dd67' WHERE ((- (rt1.c2 COLLATE BINARY))) ORDER BY ((+ (rt1.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON x'dd67' ORDER BY ((+ (rt1.c2)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN vt0 ON x'dd67' WHERE ((- (rt1.c2 COLLATE BINARY))) ORDER BY ((+ (rt1.c2)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c2) BETWEEN (rt1.c2) AND (((rt1.c2)/(vt0.c0)))) WHERE (CASE WHEN CASE WHEN 'ltxbicp_' THEN rt1.c2 END THEN ((rt1.c1) NOT NULL) ELSE (((rt1.c1))>((rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 'ltxbicp_' THEN rt1.c2 END THEN ((rt1.c1) NOT NULL) ELSE (((rt1.c1))>((rt1.c2))) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((rt1.c2) BETWEEN (rt1.c2) AND (((rt1.c2)/(vt0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c2) BETWEEN (rt1.c2) AND (((rt1.c2)/(vt0.c0)))) WHERE (CASE WHEN CASE WHEN 'ltxbicp_' THEN rt1.c2 END THEN ((rt1.c1) NOT NULL) ELSE (((rt1.c1))>((rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 'ltxbicp_' THEN rt1.c2 END THEN ((rt1.c1) NOT NULL) ELSE (((rt1.c1))>((rt1.c2))) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((rt1.c2) BETWEEN (rt1.c2) AND (((rt1.c2)/(vt0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c2) BETWEEN (rt1.c2) AND (((rt1.c2)/(vt0.c0)))) WHERE (CASE WHEN CASE WHEN 'ltxbicp_' THEN rt1.c2 END THEN ((rt1.c1) NOT NULL) ELSE (((rt1.c1))>((rt1.c2))) END);
SELECT * FROM rt1 WHERE ((~ (((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN ((rt1.c1 IN (rt1.c0))) AND (vt0.c0))) ORDER BY ((rt1.c0 COLLATE BINARY) ISNULL) ASC, rt1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN ((rt1.c1 IN (rt1.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0 COLLATE BINARY) ISNULL) ASC, rt1.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN ((rt1.c1 IN (rt1.c0))) AND (vt0.c0))) ORDER BY ((rt1.c0 COLLATE BINARY) ISNULL) ASC, rt1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN ((rt1.c1 IN (rt1.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0 COLLATE BINARY) ISNULL) ASC, rt1.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN ((rt1.c1 IN (rt1.c0))) AND (vt0.c0))) ORDER BY ((rt1.c0 COLLATE BINARY) ISNULL) ASC, rt1.c2 ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (MAX('2099813424', (((0x53ee8c85)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END, rt1.c2 COLLATE NOCASE)) ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN rt1.c2 COLLATE NOCASE WHEN x'8678' THEN ((rt1.c0)IS NOT(rt1.c1)) WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c1)AND(rt1.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((MAX('2099813424', (((0x53ee8c85)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END, rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN rt1.c2 COLLATE NOCASE WHEN x'8678' THEN ((rt1.c0)IS NOT(rt1.c1)) WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c1)AND(rt1.c2)) END DESC);
SELECT * FROM rt1 WHERE (MAX('2099813424', (((0x53ee8c85)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END, rt1.c2 COLLATE NOCASE)) ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN rt1.c2 COLLATE NOCASE WHEN x'8678' THEN ((rt1.c0)IS NOT(rt1.c1)) WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c1)AND(rt1.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((MAX('2099813424', (((0x53ee8c85)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END, rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN rt1.c2 COLLATE NOCASE WHEN x'8678' THEN ((rt1.c0)IS NOT(rt1.c1)) WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c1)AND(rt1.c2)) END DESC);
SELECT * FROM rt1 WHERE (MAX('2099813424', (((0x53ee8c85)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END, rt1.c2 COLLATE NOCASE)) ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN rt1.c2 COLLATE NOCASE WHEN x'8678' THEN ((rt1.c0)IS NOT(rt1.c1)) WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c1)AND(rt1.c2)) END DESC;
SELECT ALL * FROM rt1, vt0 WHERE (((((SQLITE_SOURCE_ID())OR((((rt1.c1))<((rt1.c2))))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((+ (rt1.c1))) NOT BETWEEN (((x'') ISNULL)) AND ((((('e蒖5')AND(rt1.c0)))OR(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_SOURCE_ID())OR((((rt1.c1))<((rt1.c2))))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((+ (rt1.c1))) NOT BETWEEN (((x'') ISNULL)) AND ((((('e蒖5')AND(rt1.c0)))OR(rt1.c0)))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE (((((SQLITE_SOURCE_ID())OR((((rt1.c1))<((rt1.c2))))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((+ (rt1.c1))) NOT BETWEEN (((x'') ISNULL)) AND ((((('e蒖5')AND(rt1.c0)))OR(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_SOURCE_ID())OR((((rt1.c1))<((rt1.c2))))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((+ (rt1.c1))) NOT BETWEEN (((x'') ISNULL)) AND ((((('e蒖5')AND(rt1.c0)))OR(rt1.c0)))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE (((((SQLITE_SOURCE_ID())OR((((rt1.c1))<((rt1.c2))))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((+ (rt1.c1))) NOT BETWEEN (((x'') ISNULL)) AND ((((('e蒖5')AND(rt1.c0)))OR(rt1.c0)))) ASC;
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))<>((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))!=((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))<>((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))!=((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))<>((+ (rt1.c1)))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))>>(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>>(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))>>(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>>(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))>>(rt1.c1)));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON '791361179' WHERE (CASE WHEN CASE NULL  WHEN rt1.c1 THEN 0.4272826176402099 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN NULL ELSE rt1.c0 END THEN '⶝i' WHEN ((vt0.c0)AND(rt1.c2)) THEN CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c1)=(rt1.c2)) END) ORDER BY CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE NULL  WHEN rt1.c1 THEN 0.4272826176402099 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN NULL ELSE rt1.c0 END THEN '⶝i' WHEN ((vt0.c0)AND(rt1.c2)) THEN CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c1)=(rt1.c2)) END) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON '791361179' ORDER BY CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON '791361179' WHERE (CASE WHEN CASE NULL  WHEN rt1.c1 THEN 0.4272826176402099 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN NULL ELSE rt1.c0 END THEN '⶝i' WHEN ((vt0.c0)AND(rt1.c2)) THEN CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c1)=(rt1.c2)) END) ORDER BY CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE NULL  WHEN rt1.c1 THEN 0.4272826176402099 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN NULL ELSE rt1.c0 END THEN '⶝i' WHEN ((vt0.c0)AND(rt1.c2)) THEN CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c1)=(rt1.c2)) END) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON '791361179' ORDER BY CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON '791361179' WHERE (CASE WHEN CASE NULL  WHEN rt1.c1 THEN 0.4272826176402099 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN NULL ELSE rt1.c0 END THEN '⶝i' WHEN ((vt0.c0)AND(rt1.c2)) THEN CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c1)=(rt1.c2)) END) ORDER BY CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0)<=(vt0.c0)))) WHERE (CAST(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0)<=(vt0.c0)))) WHERE (CAST(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0)<=(vt0.c0)))) WHERE (CAST(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) AS NUMERIC));
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c1) NOT NULL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))==((IFNULL(vt0.c0, vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0))))=((IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))==((IFNULL(vt0.c0, vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0))))=((IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))==((IFNULL(vt0.c0, vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CHANGES() WHEN ((rt1.c1) NOTNULL) THEN ((586803730)>(rt1.c0)) WHEN CASE WHEN '-963848078' THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c2 COLLATE NOCASE END WHERE (CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 ELSE 'flDke<^' END END) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((COALESCE(rt1.c0, rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 ELSE 'flDke<^' END END) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CHANGES() WHEN ((rt1.c1) NOTNULL) THEN ((586803730)>(rt1.c0)) WHEN CASE WHEN '-963848078' THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c2 COLLATE NOCASE END ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((COALESCE(rt1.c0, rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CHANGES() WHEN ((rt1.c1) NOTNULL) THEN ((586803730)>(rt1.c0)) WHEN CASE WHEN '-963848078' THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c2 COLLATE NOCASE END WHERE (CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 ELSE 'flDke<^' END END) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((COALESCE(rt1.c0, rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 ELSE 'flDke<^' END END) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CHANGES() WHEN ((rt1.c1) NOTNULL) THEN ((586803730)>(rt1.c0)) WHEN CASE WHEN '-963848078' THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c2 COLLATE NOCASE END ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((COALESCE(rt1.c0, rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE WHEN UPPER(DISTINCT vt0.c0) THEN CHANGES() WHEN ((rt1.c1) NOTNULL) THEN ((586803730)>(rt1.c0)) WHEN CASE WHEN '-963848078' THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c2 COLLATE NOCASE END WHERE (CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 ELSE 'flDke<^' END END) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((COALESCE(rt1.c0, rt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (('-1308704939' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1308704939' IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (('-1308704939' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1308704939' IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (('-1308704939' IN ()));
SELECT * FROM vt0 WHERE ((NULL IN ())) ORDER BY (('') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL)));
SELECT * FROM vt0 WHERE ((NULL IN ())) ORDER BY (('') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL)));
SELECT * FROM vt0 WHERE ((NULL IN ())) ORDER BY (('') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)||(rt1.c1)) THEN (rt1.c0 IN ()) WHEN CASE rt1.c0  WHEN x'' THEN vt0.c0 END THEN (+ (rt1.c0)) ELSE rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c2 AS INTEGER) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)||(rt1.c1)) THEN (rt1.c0 IN ()) WHEN CASE rt1.c0  WHEN x'' THEN vt0.c0 END THEN (+ (rt1.c0)) ELSE rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)||(rt1.c1)) THEN (rt1.c0 IN ()) WHEN CASE rt1.c0  WHEN x'' THEN vt0.c0 END THEN (+ (rt1.c0)) ELSE rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c2 AS INTEGER) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)||(rt1.c1)) THEN (rt1.c0 IN ()) WHEN CASE rt1.c0  WHEN x'' THEN vt0.c0 END THEN (+ (rt1.c0)) ELSE rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)||(rt1.c1)) THEN (rt1.c0 IN ()) WHEN CASE rt1.c0  WHEN x'' THEN vt0.c0 END THEN (+ (rt1.c0)) ELSE rt1.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1))  WHEN CAST('-1736617487' AS BLOB) THEN ((vt0.c0) NOTNULL) WHEN rt1.c1 THEN rt1.c2 COLLATE NOCASE WHEN (rt1.c0 IN (rt1.c2)) THEN (rt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1))  WHEN CAST('-1736617487' AS BLOB) THEN ((vt0.c0) NOTNULL) WHEN rt1.c1 THEN rt1.c2 COLLATE NOCASE WHEN (rt1.c0 IN (rt1.c2)) THEN (rt1.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1))  WHEN CAST('-1736617487' AS BLOB) THEN ((vt0.c0) NOTNULL) WHEN rt1.c1 THEN rt1.c2 COLLATE NOCASE WHEN (rt1.c0 IN (rt1.c2)) THEN (rt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1))  WHEN CAST('-1736617487' AS BLOB) THEN ((vt0.c0) NOTNULL) WHEN rt1.c1 THEN rt1.c2 COLLATE NOCASE WHEN (rt1.c0 IN (rt1.c2)) THEN (rt1.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1))  WHEN CAST('-1736617487' AS BLOB) THEN ((vt0.c0) NOTNULL) WHEN rt1.c1 THEN rt1.c2 COLLATE NOCASE WHEN (rt1.c0 IN (rt1.c2)) THEN (rt1.c0 IN ()) END);
SELECT * FROM vt0, rt1 WHERE (((rt1.c1 COLLATE NOCASE) IS TRUE)) ORDER BY ((((((((TRIM('o ?8', NULL))AND(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))OR((((vt0.c0))=((rt1.c2))))))AND(0.0959256220006206 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS LAST, (((rt1.c0))=((rt1.c1))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((TRIM('o ?8', NULL))AND(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))OR((((vt0.c0))==((rt1.c2))))))AND(0.0959256220006206 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS LAST, (((rt1.c0))==((rt1.c1))) COLLATE RTRIM);
SELECT * FROM vt0, rt1 WHERE (((rt1.c1 COLLATE NOCASE) IS TRUE)) ORDER BY ((((((((TRIM('o ?8', NULL))AND(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))OR((((vt0.c0))=((rt1.c2))))))AND(0.0959256220006206 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS LAST, (((rt1.c0))=((rt1.c1))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((TRIM('o ?8', NULL))AND(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))OR((((vt0.c0))==((rt1.c2))))))AND(0.0959256220006206 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS LAST, (((rt1.c0))==((rt1.c1))) COLLATE RTRIM);
SELECT * FROM vt0, rt1 WHERE (((rt1.c1 COLLATE NOCASE) IS TRUE)) ORDER BY ((((((((TRIM('o ?8', NULL))AND(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c1)))))OR((((vt0.c0))=((rt1.c2))))))AND(0.0959256220006206 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS LAST, (((rt1.c0))=((rt1.c1))) COLLATE RTRIM;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((MIN('-1067645060', rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((MIN('-1067645060', rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((MIN('-1067645060', rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((MIN('-1067645060', rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((MIN('-1067645060', rt1.c0)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((+ (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((+ (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((+ (rt1.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (TRIM(DISTINCT ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ()))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (TRIM(DISTINCT ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ()))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (TRIM(DISTINCT ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ())));
SELECT ALL * FROM rt1 WHERE (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM) ORDER BY ((rt1.c2)!=(((rt1.c0)||(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)!=(((rt1.c0)||(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM) ORDER BY ((rt1.c2)!=(((rt1.c0)||(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)!=(((rt1.c0)||(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM) ORDER BY ((rt1.c2)!=(((rt1.c0)||(rt1.c0))));
SELECT * FROM rt1 INNER JOIN vt0 ON CAST(CASE 1094862434  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) WHERE (CAST(((rt1.c0)=(rt1.c0)) AS REAL)) ORDER BY ((('1e500000s', rt1.c0, rt1.c0)) NOT BETWEEN ((((rt1.c0) NOTNULL), (NOT (rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((rtreenode('i)', vt0.c0), (rt1.c1 IN ()), CASE x''  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST, (vt0.c0 IN (((rt1.c2)OR(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)==(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CAST(CASE 1094862434  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) ORDER BY ((('1e500000s', rt1.c0, rt1.c0)) NOT BETWEEN ((((rt1.c0) NOTNULL), (NOT (rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((rtreenode('i)', vt0.c0), (rt1.c1 IN ()), CASE x''  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST, (vt0.c0 IN (((rt1.c2)OR(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt0 ON CAST(CASE 1094862434  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) WHERE (CAST(((rt1.c0)=(rt1.c0)) AS REAL)) ORDER BY ((('1e500000s', rt1.c0, rt1.c0)) NOT BETWEEN ((((rt1.c0) NOTNULL), (NOT (rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((rtreenode('i)', vt0.c0), (rt1.c1 IN ()), CASE x''  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST, (vt0.c0 IN (((rt1.c2)OR(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)==(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CAST(CASE 1094862434  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) ORDER BY ((('1e500000s', rt1.c0, rt1.c0)) NOT BETWEEN ((((rt1.c0) NOTNULL), (NOT (rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((rtreenode('i)', vt0.c0), (rt1.c1 IN ()), CASE x''  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST, (vt0.c0 IN (((rt1.c2)OR(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt0 ON CAST(CASE 1094862434  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB) WHERE (CAST(((rt1.c0)=(rt1.c0)) AS REAL)) ORDER BY ((('1e500000s', rt1.c0, rt1.c0)) NOT BETWEEN ((((rt1.c0) NOTNULL), (NOT (rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((rtreenode('i)', vt0.c0), (rt1.c1 IN ()), CASE x''  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST, (vt0.c0 IN (((rt1.c2)OR(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)OR(rt1.c0))))) ORDER BY ((((rt1.c2)LIKE(rt1.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)OR(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)LIKE(rt1.c0))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)OR(rt1.c0))))) ORDER BY ((((rt1.c2)LIKE(rt1.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)OR(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)LIKE(rt1.c0))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)OR(rt1.c0))))) ORDER BY ((((rt1.c2)LIKE(rt1.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(-1070660324)) ASC  NULLS LAST, ((vt0.c0)<<(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==(-1070660324)) ASC  NULLS LAST, ((vt0.c0)<<(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(-1070660324)) ASC  NULLS LAST, ((vt0.c0)<<(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==(-1070660324)) ASC  NULLS LAST, ((vt0.c0)<<(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(-1070660324)) ASC  NULLS LAST, ((vt0.c0)<<(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0) BETWEEN ('p') AND (rt1.c2)), ((x'c3e9') IS FALSE), (((rt1.c2))<((rt1.c2))), CAST(rt1.c1 AS TEXT), 256477489))>((CASE '857771227'  WHEN rt1.c1 THEN rt1.c1 END, rt1.c1, CAST(rt1.c0 AS REAL), ((rt1.c0)|(rt1.c0)), ((rt1.c1) IS TRUE))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) BETWEEN ('p') AND (rt1.c2)), ((x'c3e9') IS FALSE), (((rt1.c2))<((rt1.c2))), CAST(rt1.c1 AS TEXT), 256477489))>((CASE '857771227'  WHEN rt1.c1 THEN rt1.c1 END, rt1.c1, CAST(rt1.c0 AS REAL), ((rt1.c0)|(rt1.c0)), ((rt1.c1) IS TRUE))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0) BETWEEN ('p') AND (rt1.c2)), ((x'c3e9') IS FALSE), (((rt1.c2))<((rt1.c2))), CAST(rt1.c1 AS TEXT), 256477489))>((CASE '857771227'  WHEN rt1.c1 THEN rt1.c1 END, rt1.c1, CAST(rt1.c0 AS REAL), ((rt1.c0)|(rt1.c0)), ((rt1.c1) IS TRUE))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) BETWEEN ('p') AND (rt1.c2)), ((x'c3e9') IS FALSE), (((rt1.c2))<((rt1.c2))), CAST(rt1.c1 AS TEXT), 256477489))>((CASE '857771227'  WHEN rt1.c1 THEN rt1.c1 END, rt1.c1, CAST(rt1.c0 AS REAL), ((rt1.c0)|(rt1.c0)), ((rt1.c1) IS TRUE))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0) BETWEEN ('p') AND (rt1.c2)), ((x'c3e9') IS FALSE), (((rt1.c2))<((rt1.c2))), CAST(rt1.c1 AS TEXT), 256477489))>((CASE '857771227'  WHEN rt1.c1 THEN rt1.c1 END, rt1.c1, CAST(rt1.c0 AS REAL), ((rt1.c0)|(rt1.c0)), ((rt1.c1) IS TRUE))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CHAR(vt0.c0)) ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHAR(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(vt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CHAR(vt0.c0)) ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHAR(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(vt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CHAR(vt0.c0)) ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(vt0.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON 0.8373429759128417 WHERE (((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (IFNULL(DISTINCT vt0.c0, rt1.c0)) AND (((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (IFNULL(DISTINCT vt0.c0, rt1.c0)) AND (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON 0.8373429759128417);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON 0.8373429759128417 WHERE (((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (IFNULL(DISTINCT vt0.c0, rt1.c0)) AND (((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (IFNULL(DISTINCT vt0.c0, rt1.c0)) AND (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON 0.8373429759128417);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON 0.8373429759128417 WHERE (((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (IFNULL(DISTINCT vt0.c0, rt1.c0)) AND (((rt1.c2) ISNULL))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((rt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((rt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((rt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((rt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((rt1.c1 COLLATE NOCASE))));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY LIKE((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY LIKE((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ())));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY LIKE((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY LIKE((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ())));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY LIKE((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (rtreenode(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) ORDER BY CAST(rt1.c1 AS TEXT)  NULLS FIRST, CASE WHEN HEX(DISTINCT rt1.c0) THEN (NOT (rt1.c1)) WHEN rt1.c2 THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) WHEN rt1.c0 COLLATE BINARY THEN rt1.c1 END;
SELECT SUM(count) FROM (SELECT ((rtreenode(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS TEXT)  NULLS FIRST, CASE WHEN HEX(DISTINCT rt1.c0) THEN (NOT (rt1.c1)) WHEN rt1.c2 THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) WHEN rt1.c0 COLLATE BINARY THEN rt1.c1 END);
SELECT ALL COUNT(*) FROM rt1 WHERE (rtreenode(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) ORDER BY CAST(rt1.c1 AS TEXT)  NULLS FIRST, CASE WHEN HEX(DISTINCT rt1.c0) THEN (NOT (rt1.c1)) WHEN rt1.c2 THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) WHEN rt1.c0 COLLATE BINARY THEN rt1.c1 END;
SELECT SUM(count) FROM (SELECT ((rtreenode(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS TEXT)  NULLS FIRST, CASE WHEN HEX(DISTINCT rt1.c0) THEN (NOT (rt1.c1)) WHEN rt1.c2 THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) WHEN rt1.c0 COLLATE BINARY THEN rt1.c1 END);
SELECT ALL COUNT(*) FROM rt1 WHERE (rtreenode(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) ORDER BY CAST(rt1.c1 AS TEXT)  NULLS FIRST, CASE WHEN HEX(DISTINCT rt1.c0) THEN (NOT (rt1.c1)) WHEN rt1.c2 THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) WHEN rt1.c0 COLLATE BINARY THEN rt1.c1 END;
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 WHERE ((((rt1.c0 IN ()))/(LTRIM(rt1.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ()))/(LTRIM(rt1.c2, vt0.c0)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 WHERE ((((rt1.c0 IN ()))/(LTRIM(rt1.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ()))/(LTRIM(rt1.c2, vt0.c0)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 WHERE ((((rt1.c0 IN ()))/(LTRIM(rt1.c2, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (CASE rt1.c1  WHEN x'13f1' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c1  WHEN x'13f1' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (CASE rt1.c1  WHEN x'13f1' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c1  WHEN x'13f1' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (CASE rt1.c1  WHEN x'13f1' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)+(((((vt0.c0)AND(rt1.c0)))AND(vt0.c0)))) WHERE (rt1.c2) ORDER BY (((((rt1.c1) NOT NULL), ((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END))<((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN 0.5460389116367738 WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END, (((rt1.c1))<((rt1.c1))), ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)+(((((vt0.c0)AND(rt1.c0)))AND(vt0.c0)))) ORDER BY (((((rt1.c1) NOT NULL), ((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END))<((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN 0.5460389116367738 WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END, (((rt1.c1))<((rt1.c1))), ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)+(((((vt0.c0)AND(rt1.c0)))AND(vt0.c0)))) WHERE (rt1.c2) ORDER BY (((((rt1.c1) NOT NULL), ((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END))<((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN 0.5460389116367738 WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END, (((rt1.c1))<((rt1.c1))), ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)+(((((vt0.c0)AND(rt1.c0)))AND(vt0.c0)))) ORDER BY (((((rt1.c1) NOT NULL), ((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END))<((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN 0.5460389116367738 WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END, (((rt1.c1))<((rt1.c1))), ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)+(((((vt0.c0)AND(rt1.c0)))AND(vt0.c0)))) WHERE (rt1.c2) ORDER BY (((((rt1.c1) NOT NULL), ((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END))<((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN 0.5460389116367738 WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END, (((rt1.c1))<((rt1.c1))), ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.c0) IS FALSE)));
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1, vt0.c0, '-279701663')) NOT BETWEEN ((((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)), (((('8厠	]꼽Jt')OR(rt1.c1)))AND(x'')), 0.987518699004099)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END, (((((((('')AND(rt1.c1)))OR(vt0.c0)))OR(NULL)))AND(rt1.c1)), ((vt0.c0) IS FALSE))))) ORDER BY DATE(vt0.c0, ('480311085' IN ()), (((rt1.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, vt0.c0, '-279701663')) NOT BETWEEN ((((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)), (((('8厠	]꼽Jt')OR(rt1.c1)))AND(x'')), 0.987518699004099)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END, (((((((('')AND(rt1.c1)))OR(vt0.c0)))OR(NULL)))AND(rt1.c1)), ((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY DATE(vt0.c0, ('480311085' IN ()), (((rt1.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1, vt0.c0, '-279701663')) NOT BETWEEN ((((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)), (((('8厠	]꼽Jt')OR(rt1.c1)))AND(x'')), 0.987518699004099)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END, (((((((('')AND(rt1.c1)))OR(vt0.c0)))OR(NULL)))AND(rt1.c1)), ((vt0.c0) IS FALSE))))) ORDER BY DATE(vt0.c0, ('480311085' IN ()), (((rt1.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, vt0.c0, '-279701663')) NOT BETWEEN ((((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)), (((('8厠	]꼽Jt')OR(rt1.c1)))AND(x'')), 0.987518699004099)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END, (((((((('')AND(rt1.c1)))OR(vt0.c0)))OR(NULL)))AND(rt1.c1)), ((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY DATE(vt0.c0, ('480311085' IN ()), (((rt1.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1, vt0.c0, '-279701663')) NOT BETWEEN ((((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)), (((('8厠	]꼽Jt')OR(rt1.c1)))AND(x'')), 0.987518699004099)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END, (((((((('')AND(rt1.c1)))OR(vt0.c0)))OR(NULL)))AND(rt1.c1)), ((vt0.c0) IS FALSE))))) ORDER BY DATE(vt0.c0, ('480311085' IN ()), (((rt1.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))));
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0))))) ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0))))) ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0))))) ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE)) ORDER BY ((('!N-Ew2J3', ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)), ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))AND(NULL)))AND(rt1.c2))))=(((rt1.c1 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))  NULLS LAST, (((0.9326713131834173))==((rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((('!N-Ew2J3', ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)), ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))AND(NULL)))AND(rt1.c2))))==(((rt1.c1 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))  NULLS LAST, (((0.9326713131834173))=((rt1.c0)))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE)) ORDER BY ((('!N-Ew2J3', ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)), ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))AND(NULL)))AND(rt1.c2))))=(((rt1.c1 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))  NULLS LAST, (((0.9326713131834173))==((rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((('!N-Ew2J3', ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)), ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))AND(NULL)))AND(rt1.c2))))==(((rt1.c1 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))  NULLS LAST, (((0.9326713131834173))=((rt1.c0)))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE)) ORDER BY ((('!N-Ew2J3', ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)), ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))AND(NULL)))AND(rt1.c2))))=(((rt1.c1 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))  NULLS LAST, (((0.9326713131834173))==((rt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0) IS FALSE)))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0) IS FALSE)))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0) IS FALSE)))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(rt1.c2, rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt1.c2, rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(rt1.c2, rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt1.c2, rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(rt1.c2, rt1.c2 COLLATE NOCASE));
SELECT * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((((((((x'5e5e0628')OR(((rt1.c1) ISNULL))))OR((rt1.c2 IN ()))))AND(((rt1.c0)-(rt1.c1)))))AND(NULL)) DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))%(CAST(rt1.c2 AS NUMERIC))), ((((vt0.c0 COLLATE RTRIM)AND(((rt1.c1)=(vt0.c0)))))OR((((('1319891463')AND('')))OR(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((x'5e5e0628')OR(((rt1.c1) ISNULL))))OR((rt1.c2 IN ()))))AND(((rt1.c0)-(rt1.c1)))))AND(NULL)) DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))%(CAST(rt1.c2 AS NUMERIC))), ((((vt0.c0 COLLATE RTRIM)AND(((rt1.c1)==(vt0.c0)))))OR((((('1319891463')AND('')))OR(rt1.c2)))) ASC);
SELECT * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((((((((x'5e5e0628')OR(((rt1.c1) ISNULL))))OR((rt1.c2 IN ()))))AND(((rt1.c0)-(rt1.c1)))))AND(NULL)) DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))%(CAST(rt1.c2 AS NUMERIC))), ((((vt0.c0 COLLATE RTRIM)AND(((rt1.c1)=(vt0.c0)))))OR((((('1319891463')AND('')))OR(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((x'5e5e0628')OR(((rt1.c1) ISNULL))))OR((rt1.c2 IN ()))))AND(((rt1.c0)-(rt1.c1)))))AND(NULL)) DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))%(CAST(rt1.c2 AS NUMERIC))), ((((vt0.c0 COLLATE RTRIM)AND(((rt1.c1)==(vt0.c0)))))OR((((('1319891463')AND('')))OR(rt1.c2)))) ASC);
SELECT * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((((((((x'5e5e0628')OR(((rt1.c1) ISNULL))))OR((rt1.c2 IN ()))))AND(((rt1.c0)-(rt1.c1)))))AND(NULL)) DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))%(CAST(rt1.c2 AS NUMERIC))), ((((vt0.c0 COLLATE RTRIM)AND(((rt1.c1)=(vt0.c0)))))OR((((('1319891463')AND('')))OR(rt1.c2)))) ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON 'QY' WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON 'QY');
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON 'QY' WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON 'QY');
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON 'QY' WHERE (rt1.c1);
SELECT COUNT(*) FROM rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN 28402138 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)AND(CAST(rt1.c0 AS REAL))))OR(((rt1.c2)/(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN 28402138 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)AND(CAST(rt1.c0 AS REAL))))OR(((rt1.c2)/(rt1.c1))))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT COUNT(*) FROM rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN 28402138 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)AND(CAST(rt1.c0 AS REAL))))OR(((rt1.c2)/(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN 28402138 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)AND(CAST(rt1.c0 AS REAL))))OR(((rt1.c2)/(rt1.c1))))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT COUNT(*) FROM rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN 28402138 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)AND(CAST(rt1.c0 AS REAL))))OR(((rt1.c2)/(rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE ((- (rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (rt1.c1)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((HEX(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((HEX(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((HEX(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((HEX(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((HEX(DISTINCT vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((COALESCE(rt1.c0, rt1.c2) IN (((rt1.c0)IS(rt1.c2)), HEX(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((COALESCE(rt1.c0, rt1.c2) IN (((rt1.c0)IS(rt1.c2)), HEX(rt1.c2)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((COALESCE(rt1.c0, rt1.c2) IN (((rt1.c0)IS(rt1.c2)), HEX(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((COALESCE(rt1.c0, rt1.c2) IN (((rt1.c0)IS(rt1.c2)), HEX(rt1.c2)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((COALESCE(rt1.c0, rt1.c2) IN (((rt1.c0)IS(rt1.c2)), HEX(rt1.c2))));
SELECT ALL * FROM vt0 WHERE (json_valid(HEX(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(HEX(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_valid(HEX(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(HEX(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_valid(HEX(DISTINCT vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((TYPEOF(x'')) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(x'')) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((TYPEOF(x'')) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(x'')) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((TYPEOF(x'')) IS TRUE)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(0.10120976612136179)))AND(vt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(0.10120976612136179)))AND(vt0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(0.10120976612136179)))AND(vt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(0.10120976612136179)))AND(vt0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(0.10120976612136179)))AND(vt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM rt1, vt0 WHERE (((TYPEOF(DISTINCT vt0.c0))<<(TRIM(rt1.c1, NULL)))) ORDER BY (- (((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c0))<<(TRIM(rt1.c1, NULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((TYPEOF(DISTINCT vt0.c0))<<(TRIM(rt1.c1, NULL)))) ORDER BY (- (((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c0))<<(TRIM(rt1.c1, NULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((TYPEOF(DISTINCT vt0.c0))<<(TRIM(rt1.c1, NULL)))) ORDER BY (- (((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)=(rt1.c0))  WHEN ((0.10021507078330127)>(rt1.c1)) THEN CAST(rt1.c0 AS REAL) ELSE (((vt0.c0, rt1.c1, '2128339401')) NOT BETWEEN ((vt0.c0, x'', rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)==(rt1.c0))  WHEN ((0.10021507078330127)>(rt1.c1)) THEN CAST(rt1.c0 AS REAL) ELSE (((vt0.c0, rt1.c1, '2128339401')) NOT BETWEEN ((vt0.c0, x'', rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)=(rt1.c0))  WHEN ((0.10021507078330127)>(rt1.c1)) THEN CAST(rt1.c0 AS REAL) ELSE (((vt0.c0, rt1.c1, '2128339401')) NOT BETWEEN ((vt0.c0, x'', rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)==(rt1.c0))  WHEN ((0.10021507078330127)>(rt1.c1)) THEN CAST(rt1.c0 AS REAL) ELSE (((vt0.c0, rt1.c1, '2128339401')) NOT BETWEEN ((vt0.c0, x'', rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)=(rt1.c0))  WHEN ((0.10021507078330127)>(rt1.c1)) THEN CAST(rt1.c0 AS REAL) ELSE (((vt0.c0, rt1.c1, '2128339401')) NOT BETWEEN ((vt0.c0, x'', rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END);
SELECT COUNT(*) FROM rt1 WHERE ((json_array_length(rt1.c1) IN ())) ORDER BY (((((rt1.c1)) BETWEEN (('513734573')) AND ((rt1.c2))))OR(((rt1.c1)||(rt1.c2)))) DESC, ((rt1.c2 COLLATE RTRIM)<=(((rt1.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((json_array_length(rt1.c1) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)) BETWEEN (('513734573')) AND ((rt1.c2))))OR(((rt1.c1)||(rt1.c2)))) DESC, ((rt1.c2 COLLATE RTRIM)<=(((rt1.c1) IS FALSE))));
SELECT COUNT(*) FROM rt1 WHERE ((json_array_length(rt1.c1) IN ())) ORDER BY (((((rt1.c1)) BETWEEN (('513734573')) AND ((rt1.c2))))OR(((rt1.c1)||(rt1.c2)))) DESC, ((rt1.c2 COLLATE RTRIM)<=(((rt1.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((json_array_length(rt1.c1) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)) BETWEEN (('513734573')) AND ((rt1.c2))))OR(((rt1.c1)||(rt1.c2)))) DESC, ((rt1.c2 COLLATE RTRIM)<=(((rt1.c1) IS FALSE))));
SELECT COUNT(*) FROM rt1 WHERE ((json_array_length(rt1.c1) IN ())) ORDER BY (((((rt1.c1)) BETWEEN (('513734573')) AND ((rt1.c2))))OR(((rt1.c1)||(rt1.c2)))) DESC, ((rt1.c2 COLLATE RTRIM)<=(((rt1.c1) IS FALSE)));
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>((- (rt1.c0)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 END)OR(((0.8088725628468734) IS FALSE))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(((vt0.c0)||(rt1.c0)))))OR(((rt1.c2)%(rt1.c0)))))AND(NULL)))AND(rt1.c1 COLLATE NOCASE))) ORDER BY CASE (+ (rt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(rt1.c2)))AND(rt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 END)OR(((0.8088725628468734) IS FALSE))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(((vt0.c0)||(rt1.c0)))))OR(((rt1.c2)%(rt1.c0)))))AND(NULL)))AND(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE (+ (rt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(rt1.c2)))AND(rt1.c0)) END ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 END)OR(((0.8088725628468734) IS FALSE))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(((vt0.c0)||(rt1.c0)))))OR(((rt1.c2)%(rt1.c0)))))AND(NULL)))AND(rt1.c1 COLLATE NOCASE))) ORDER BY CASE (+ (rt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(rt1.c2)))AND(rt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 END)OR(((0.8088725628468734) IS FALSE))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(((vt0.c0)||(rt1.c0)))))OR(((rt1.c2)%(rt1.c0)))))AND(NULL)))AND(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE (+ (rt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(rt1.c2)))AND(rt1.c0)) END ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 END)OR(((0.8088725628468734) IS FALSE))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(((vt0.c0)||(rt1.c0)))))OR(((rt1.c2)%(rt1.c0)))))AND(NULL)))AND(rt1.c1 COLLATE NOCASE))) ORDER BY CASE (+ (rt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR(rt1.c2)))AND(rt1.c0)) END ASC;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)&((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)&((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&((((vt0.c0))<=((vt0.c0))))));
SELECT COUNT(*) FROM rt1 WHERE ((('-45146196')/((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY ((((((rt1.c2)AND(rt1.c2)))AND(0.33196106790332414)))-(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-45146196')/((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(rt1.c2)))AND(0.33196106790332414)))-(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((('-45146196')/((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY ((((((rt1.c2)AND(rt1.c2)))AND(0.33196106790332414)))-(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-45146196')/((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(rt1.c2)))AND(0.33196106790332414)))-(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((('-45146196')/((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY ((((((rt1.c2)AND(rt1.c2)))AND(0.33196106790332414)))-(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS FALSE)) NOT NULL)) ORDER BY 'ﻀ8x\r&UPh'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'ﻀ8x\r&UPh'  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS FALSE)) NOT NULL)) ORDER BY 'ﻀ8x\r&UPh'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'ﻀ8x\r&UPh'  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS FALSE)) NOT NULL)) ORDER BY 'ﻀ8x\r&UPh'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('牸 qg')))) AND ((IFNULL(vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(NULL)) DESC  NULLS LAST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) ASC, '+eCCd9L';
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('牸 qg')))) AND ((IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>=(NULL)) DESC  NULLS LAST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) ASC, '+eCCd9L');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('牸 qg')))) AND ((IFNULL(vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(NULL)) DESC  NULLS LAST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) ASC, '+eCCd9L';
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('牸 qg')))) AND ((IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>=(NULL)) DESC  NULLS LAST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) ASC, '+eCCd9L');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('牸 qg')))) AND ((IFNULL(vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(NULL)) DESC  NULLS LAST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) ASC, '+eCCd9L';
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0);
SELECT * FROM vt0, rt1 WHERE ((+ (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN 0.7245498344552446 END))) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN 0.7245498344552446 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((+ (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN 0.7245498344552446 END))) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN 0.7245498344552446 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((+ (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN 0.7245498344552446 END))) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) IS FALSE) ASC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN rt1.c1 END  WHEN (rt1.c1 IN ()) THEN (rt1.c1 IN (rt1.c0)) ELSE (NOT (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN rt1.c1 END  WHEN (rt1.c1 IN ()) THEN (rt1.c1 IN (rt1.c0)) ELSE (NOT (rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN rt1.c1 END  WHEN (rt1.c1 IN ()) THEN (rt1.c1 IN (rt1.c0)) ELSE (NOT (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN rt1.c1 END  WHEN (rt1.c1 IN ()) THEN (rt1.c1 IN (rt1.c0)) ELSE (NOT (rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN rt1.c1 END  WHEN (rt1.c1 IN ()) THEN (rt1.c1 IN (rt1.c0)) ELSE (NOT (rt1.c0)) END);
SELECT ALL * FROM rt1 WHERE (((HEX(rt1.c1))%((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt1.c1))%((+ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((HEX(rt1.c1))%((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt1.c1))%((+ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((HEX(rt1.c1))%((+ (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION() ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION() ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((rt1.c1 IN ()));
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT ALL * FROM vt0, rt1 WHERE ((((CAST(vt0.c0 AS REAL)))>(((~ (rt1.c2)))))) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (rt1.c1))) AND (CAST(rt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((((((NULL))<=((rt1.c2)))))>=(((rt1.c2 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL)))>(((~ (rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (rt1.c1))) AND (CAST(rt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((((((NULL))<=((rt1.c2)))))>=(((rt1.c2 IN (rt1.c1))))));
SELECT ALL * FROM vt0, rt1 WHERE ((((CAST(vt0.c0 AS REAL)))>(((~ (rt1.c2)))))) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (rt1.c1))) AND (CAST(rt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((((((NULL))<=((rt1.c2)))))>=(((rt1.c2 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL)))>(((~ (rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (rt1.c1))) AND (CAST(rt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((((((NULL))<=((rt1.c2)))))>=(((rt1.c2 IN (rt1.c1))))));
SELECT ALL * FROM vt0, rt1 WHERE ((((CAST(vt0.c0 AS REAL)))>(((~ (rt1.c2)))))) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (rt1.c1))) AND (CAST(rt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((((((NULL))<=((rt1.c2)))))>=(((rt1.c2 IN (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, '119904536', ((vt0.c0)<=(rt1.c1))))=((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS REAL), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS REAL) ASC  NULLS FIRST, QUOTE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2))) ASC, (NOT (CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, '119904536', ((vt0.c0)<=(rt1.c1))))=((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS REAL), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS REAL) ASC  NULLS FIRST, QUOTE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2))) ASC, (NOT (CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, '119904536', ((vt0.c0)<=(rt1.c1))))=((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS REAL), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS REAL) ASC  NULLS FIRST, QUOTE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2))) ASC, (NOT (CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, '119904536', ((vt0.c0)<=(rt1.c1))))=((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS REAL), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS REAL) ASC  NULLS FIRST, QUOTE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2))) ASC, (NOT (CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, '119904536', ((vt0.c0)<=(rt1.c1))))=((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS REAL), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS REAL) ASC  NULLS FIRST, QUOTE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2))) ASC, (NOT (CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN (((~ (rt1.c2)))) AND (((rt1.c1 IN (vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((~ (rt1.c2)))) AND (((rt1.c1 IN (vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN (((~ (rt1.c2)))) AND (((rt1.c1 IN (vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((~ (rt1.c2)))) AND (((rt1.c1 IN (vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN (((~ (rt1.c2)))) AND (((rt1.c1 IN (vt0.c0, vt0.c0))))));
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((+ (vt0.c0)))<=((~ (vt0.c0))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((+ (vt0.c0)))<=((~ (vt0.c0))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((+ (vt0.c0)))<=((~ (vt0.c0))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) IS FALSE)) ISNULL)) ORDER BY TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY TOTAL_CHANGES() DESC);
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) IS FALSE)) ISNULL)) ORDER BY TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY TOTAL_CHANGES() DESC);
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) IS FALSE)) ISNULL)) ORDER BY TOTAL_CHANGES() DESC;
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY (+ (((((vt0.c0)AND(NULL)))AND(vt0.c0)))), CASE vt0.c0  WHEN vt0.c0 THEN DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE (((vt0.c0))>=((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(NULL)))AND(vt0.c0)))), CASE vt0.c0  WHEN vt0.c0 THEN DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE (((vt0.c0))>=((vt0.c0))) END);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY (+ (((((vt0.c0)AND(NULL)))AND(vt0.c0)))), CASE vt0.c0  WHEN vt0.c0 THEN DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE (((vt0.c0))>=((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(NULL)))AND(vt0.c0)))), CASE vt0.c0  WHEN vt0.c0 THEN DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE (((vt0.c0))>=((vt0.c0))) END);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY (+ (((((vt0.c0)AND(NULL)))AND(vt0.c0)))), CASE vt0.c0  WHEN vt0.c0 THEN DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE (((vt0.c0))>=((vt0.c0))) END;
SELECT * FROM rt1, vt0 NOT INDEXED WHERE (CAST((((rt1.c1))!=((rt1.c2))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1))!=((rt1.c2))) AS TEXT)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 NOT INDEXED WHERE (CAST((((rt1.c1))!=((rt1.c2))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1))!=((rt1.c2))) AS TEXT)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 NOT INDEXED WHERE (CAST((((rt1.c1))!=((rt1.c2))) AS TEXT));
SELECT * FROM vt0, rt1 WHERE (x'') ORDER BY ((rt1.c0)*(((rt1.c1)||(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0)*(((rt1.c1)||(vt0.c0)))) DESC);
SELECT * FROM vt0, rt1 WHERE (x'') ORDER BY ((rt1.c0)*(((rt1.c1)||(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0)*(((rt1.c1)||(vt0.c0)))) DESC);
SELECT * FROM vt0, rt1 WHERE (x'') ORDER BY ((rt1.c0)*(((rt1.c1)||(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c0)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c0)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c0)))AND(vt0.c0))) NOTNULL));
SELECT ALL * FROM rt1, vt0 WHERE (((((vt0.c0) BETWEEN (rt1.c2) AND (0.7979196247068135))) BETWEEN ((((vt0.c0, rt1.c0, rt1.c0, 0.3428494472612976, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c2, vt0.c0, vt0.c0, rt1.c2)))) AND ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt1.c2) AND (0.7979196247068135))) BETWEEN ((((vt0.c0, rt1.c0, rt1.c0, 0.3428494472612976, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c2, vt0.c0, vt0.c0, rt1.c2)))) AND ((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((vt0.c0) BETWEEN (rt1.c2) AND (0.7979196247068135))) BETWEEN ((((vt0.c0, rt1.c0, rt1.c0, 0.3428494472612976, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c2, vt0.c0, vt0.c0, rt1.c2)))) AND ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt1.c2) AND (0.7979196247068135))) BETWEEN ((((vt0.c0, rt1.c0, rt1.c0, 0.3428494472612976, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c2, vt0.c0, vt0.c0, rt1.c2)))) AND ((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((vt0.c0) BETWEEN (rt1.c2) AND (0.7979196247068135))) BETWEEN ((((vt0.c0, rt1.c0, rt1.c0, 0.3428494472612976, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c2, vt0.c0, vt0.c0, rt1.c2)))) AND ((- (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c1 IN ()))-(TRIM(DISTINCT rt1.c0, rt1.c1))) WHERE (((((rt1.c2 COLLATE RTRIM)OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((rt1.c2 COLLATE RTRIM)>=(0Xffffffffb1febf55 COLLATE NOCASE))  NULLS LAST, 0.891382227379868, 0.5606759408423323 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE RTRIM)OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c1 IN ()))-(TRIM(DISTINCT rt1.c0, rt1.c1))) ORDER BY ((rt1.c2 COLLATE RTRIM)>=(0xffffffffb1febf55 COLLATE NOCASE))  NULLS LAST, 0.891382227379868, 0.5606759408423323 DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c1 IN ()))-(TRIM(DISTINCT rt1.c0, rt1.c1))) WHERE (((((rt1.c2 COLLATE RTRIM)OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((rt1.c2 COLLATE RTRIM)>=(0Xffffffffb1febf55 COLLATE NOCASE))  NULLS LAST, 0.891382227379868, 0.5606759408423323 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE RTRIM)OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c1 IN ()))-(TRIM(DISTINCT rt1.c0, rt1.c1))) ORDER BY ((rt1.c2 COLLATE RTRIM)>=(0xffffffffb1febf55 COLLATE NOCASE))  NULLS LAST, 0.891382227379868, 0.5606759408423323 DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c1 IN ()))-(TRIM(DISTINCT rt1.c0, rt1.c1))) WHERE (((((rt1.c2 COLLATE RTRIM)OR(((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))))OR(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((rt1.c2 COLLATE RTRIM)>=(0Xffffffffb1febf55 COLLATE NOCASE))  NULLS LAST, 0.891382227379868, 0.5606759408423323 DESC;
SELECT ALL * FROM vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (NULL);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)), HEX(DISTINCT rt1.c1), LAST_INSERT_ROWID(), CAST('&8' AS TEXT), (rt1.c0 IN ()))) AND (((rt1.c2 IN ()), (+ (rt1.c1)), rt1.c2, (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))), ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)))))) ORDER BY ((((((((((rt1.c1)%(NULL)))OR((rt1.c2 IN ()))))AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)IS NOT(rt1.c2)))) DESC, CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)), HEX(DISTINCT rt1.c1), LAST_INSERT_ROWID(), CAST('&8' AS TEXT), (rt1.c0 IN ()))) AND (((rt1.c2 IN ()), (+ (rt1.c1)), rt1.c2, (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))), ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c1)%(NULL)))OR((rt1.c2 IN ()))))AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)IS NOT(rt1.c2)))) DESC, CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END COLLATE NOCASE);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)), HEX(DISTINCT rt1.c1), LAST_INSERT_ROWID(), CAST('&8' AS TEXT), (rt1.c0 IN ()))) AND (((rt1.c2 IN ()), (+ (rt1.c1)), rt1.c2, (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))), ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)))))) ORDER BY ((((((((((rt1.c1)%(NULL)))OR((rt1.c2 IN ()))))AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)IS NOT(rt1.c2)))) DESC, CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)), HEX(DISTINCT rt1.c1), LAST_INSERT_ROWID(), CAST('&8' AS TEXT), (rt1.c0 IN ()))) AND (((rt1.c2 IN ()), (+ (rt1.c1)), rt1.c2, (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))), ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c1)%(NULL)))OR((rt1.c2 IN ()))))AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)IS NOT(rt1.c2)))) DESC, CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END COLLATE NOCASE);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)), HEX(DISTINCT rt1.c1), LAST_INSERT_ROWID(), CAST('&8' AS TEXT), (rt1.c0 IN ()))) AND (((rt1.c2 IN ()), (+ (rt1.c1)), rt1.c2, (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))), ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)))))) ORDER BY ((((((((((rt1.c1)%(NULL)))OR((rt1.c2 IN ()))))AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)IS NOT(rt1.c2)))) DESC, CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))) WHERE ((((NULL)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND ('0.6463615056310107')))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE ']%9{qs-R' END)))) ORDER BY CASE WHEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) THEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) ELSE (NOT (rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND ('0.6463615056310107')))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE ']%9{qs-R' END)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))) ORDER BY CASE WHEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) THEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) ELSE (NOT (rt1.c1)) END DESC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))) WHERE ((((NULL)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND ('0.6463615056310107')))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE ']%9{qs-R' END)))) ORDER BY CASE WHEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) THEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) ELSE (NOT (rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND ('0.6463615056310107')))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE ']%9{qs-R' END)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))) ORDER BY CASE WHEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) THEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) ELSE (NOT (rt1.c1)) END DESC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))) WHERE ((((NULL)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c1) AND ('0.6463615056310107')))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE ']%9{qs-R' END)))) ORDER BY CASE WHEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) THEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) ELSE (NOT (rt1.c1)) END DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), 0.6343954548918429 COLLATE NOCASE)) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), 0.6343954548918429 COLLATE NOCASE)) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), 0.6343954548918429 COLLATE NOCASE)) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), 0.6343954548918429 COLLATE NOCASE)) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), 0.6343954548918429 COLLATE NOCASE)) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD((rt1.c1 IN (rt1.c2, rt1.c0)), 0.7028959314788047));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt1.c1 IN (rt1.c2, rt1.c0)), 0.7028959314788047)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD((rt1.c1 IN (rt1.c2, rt1.c0)), 0.7028959314788047));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt1.c1 IN (rt1.c2, rt1.c0)), 0.7028959314788047)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD((rt1.c1 IN (rt1.c2, rt1.c0)), 0.7028959314788047));
SELECT COUNT(*) FROM rt1, vt0 WHERE ('?\nAU.dቶ1');
SELECT SUM(count) FROM (SELECT (('?\nAU.dቶ1') IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ('?\nAU.dቶ1');
SELECT SUM(count) FROM (SELECT (('?\nAU.dቶ1') IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ('?\nAU.dቶ1');
SELECT * FROM vt0 NOT INDEXED WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2) IS TRUE))<=(((rt1.c1)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))<=(((rt1.c1)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2) IS TRUE))<=(((rt1.c1)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))<=(((rt1.c1)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2) IS TRUE))<=(((rt1.c1)LIKE(rt1.c0)))));
SELECT * FROM vt0 WHERE ((~ ((('-403084389')>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((('-403084389')>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((('-403084389')>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((('-403084389')>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((('-403084389')>=(vt0.c0)))));
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt1 WHERE (json_remove(vt0.c0, (((vt0.c0))<=((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(vt0.c0, (((vt0.c0))<=((rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (json_remove(vt0.c0, (((vt0.c0))<=((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(vt0.c0, (((vt0.c0))<=((rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM rt1 WHERE (('-595616961' IN (rt1.c2)) COLLATE RTRIM) ORDER BY CAST((((rt1.c2))>=((rt1.c2))) AS NUMERIC) ASC, ((((((((CAST(rt1.c2 AS NUMERIC))OR((+ (rt1.c2)))))OR((((rt1.c1, '1064864850', rt1.c2))<((rt1.c2, rt1.c0, rt1.c0))))))OR(((rt1.c1) IS TRUE))))AND(HEX(rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-595616961' IN (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2))>=((rt1.c2))) AS NUMERIC) ASC, ((((((((CAST(rt1.c2 AS NUMERIC))OR((+ (rt1.c2)))))OR((((rt1.c1, '1064864850', rt1.c2))<((rt1.c2, rt1.c0, rt1.c0))))))OR(((rt1.c1) IS TRUE))))AND(HEX(rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (('-595616961' IN (rt1.c2)) COLLATE RTRIM) ORDER BY CAST((((rt1.c2))>=((rt1.c2))) AS NUMERIC) ASC, ((((((((CAST(rt1.c2 AS NUMERIC))OR((+ (rt1.c2)))))OR((((rt1.c1, '1064864850', rt1.c2))<((rt1.c2, rt1.c0, rt1.c0))))))OR(((rt1.c1) IS TRUE))))AND(HEX(rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-595616961' IN (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2))>=((rt1.c2))) AS NUMERIC) ASC, ((((((((CAST(rt1.c2 AS NUMERIC))OR((+ (rt1.c2)))))OR((((rt1.c1, '1064864850', rt1.c2))<((rt1.c2, rt1.c0, rt1.c0))))))OR(((rt1.c1) IS TRUE))))AND(HEX(rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (('-595616961' IN (rt1.c2)) COLLATE RTRIM) ORDER BY CAST((((rt1.c2))>=((rt1.c2))) AS NUMERIC) ASC, ((((((((CAST(rt1.c2 AS NUMERIC))OR((+ (rt1.c2)))))OR((((rt1.c1, '1064864850', rt1.c2))<((rt1.c2, rt1.c0, rt1.c0))))))OR(((rt1.c1) IS TRUE))))AND(HEX(rt1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) AND ((- (rt1.c0))))) ORDER BY ((CAST(rt1.c1 AS REAL))+(rtreenode(rt1.c1, rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) AND ((- (rt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 ORDER BY ((CAST(rt1.c1 AS REAL))+(rtreenode(rt1.c1, rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) AND ((- (rt1.c0))))) ORDER BY ((CAST(rt1.c1 AS REAL))+(rtreenode(rt1.c1, rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) AND ((- (rt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 ORDER BY ((CAST(rt1.c1 AS REAL))+(rtreenode(rt1.c1, rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) AND ((- (rt1.c0))))) ORDER BY ((CAST(rt1.c1 AS REAL))+(rtreenode(rt1.c1, rt1.c2)))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE NOCASE IN ())) ORDER BY ((vt0.c0)<=(rt1.c0)) COLLATE RTRIM, (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((CAST(rt1.c0 AS TEXT), (((rt1.c0, rt1.c2, rt1.c0))!=((rt1.c1, rt1.c0, vt0.c0))), rt1.c0)) AND ((rt1.c2 COLLATE BINARY, NULL, CASE WHEN rt1.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0)<=(rt1.c0)) COLLATE RTRIM, (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((CAST(rt1.c0 AS TEXT), (((rt1.c0, rt1.c2, rt1.c0))<>((rt1.c1, rt1.c0, vt0.c0))), rt1.c0)) AND ((rt1.c2 COLLATE BINARY, NULL, CASE WHEN rt1.c0 THEN vt0.c0 END)))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE NOCASE IN ())) ORDER BY ((vt0.c0)<=(rt1.c0)) COLLATE RTRIM, (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((CAST(rt1.c0 AS TEXT), (((rt1.c0, rt1.c2, rt1.c0))!=((rt1.c1, rt1.c0, vt0.c0))), rt1.c0)) AND ((rt1.c2 COLLATE BINARY, NULL, CASE WHEN rt1.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0)<=(rt1.c0)) COLLATE RTRIM, (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((CAST(rt1.c0 AS TEXT), (((rt1.c0, rt1.c2, rt1.c0))<>((rt1.c1, rt1.c0, vt0.c0))), rt1.c0)) AND ((rt1.c2 COLLATE BINARY, NULL, CASE WHEN rt1.c0 THEN vt0.c0 END)))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE NOCASE IN ())) ORDER BY ((vt0.c0)<=(rt1.c0)) COLLATE RTRIM, (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((CAST(rt1.c0 AS TEXT), (((rt1.c0, rt1.c2, rt1.c0))!=((rt1.c1, rt1.c0, vt0.c0))), rt1.c0)) AND ((rt1.c2 COLLATE BINARY, NULL, CASE WHEN rt1.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (- (vt0.c0)), vt0.c0)) ORDER BY 0Xe63990c  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (- (vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY 0Xe63990c  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (- (vt0.c0)), vt0.c0)) ORDER BY 0Xe63990c  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (- (vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY 0Xe63990c  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c1) IS FALSE) IN ()) WHERE ((((('-1844428304') NOT BETWEEN (rt1.c2) AND (rt1.c1)))*(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((('-1844428304') NOT BETWEEN (rt1.c2) AND (rt1.c1)))*(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c1) IS FALSE) IN ()));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c1) IS FALSE) IN ()) WHERE ((((('-1844428304') NOT BETWEEN (rt1.c2) AND (rt1.c1)))*(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((('-1844428304') NOT BETWEEN (rt1.c2) AND (rt1.c1)))*(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c1) IS FALSE) IN ()));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c1) IS FALSE) IN ()) WHERE ((((('-1844428304') NOT BETWEEN (rt1.c2) AND (rt1.c1)))*(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0)<(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)<(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0)<(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)<(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0)<(rt1.c1)) AS TEXT));
SELECT ALL * FROM rt1, vt0 WHERE (TYPEOF(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (TYPEOF(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (TYPEOF(DISTINCT rt1.c1 COLLATE NOCASE));
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE BINARY) ORDER BY ((LIKELY(rt1.c0))AND((('_aR''9䗶ն') NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC  NULLS FIRST, rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((LIKELY(rt1.c0))AND((('_aR''9䗶ն') NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC  NULLS FIRST, rt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE BINARY) ORDER BY ((LIKELY(rt1.c0))AND((('_aR''9䗶ն') NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC  NULLS FIRST, rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((LIKELY(rt1.c0))AND((('_aR''9䗶ն') NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC  NULLS FIRST, rt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE BINARY) ORDER BY ((LIKELY(rt1.c0))AND((('_aR''9䗶ն') NOT BETWEEN (rt1.c0) AND (rt1.c1)))) DESC  NULLS FIRST, rt1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((NULL)/(rt1.c1)))&(((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)/(rt1.c1)))&(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((NULL)/(rt1.c1)))&(((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)/(rt1.c1)))&(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((NULL)/(rt1.c1)))&(((rt1.c2) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((((NULL)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((((NULL)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt1.c1)=(vt0.c0)) IN ()) WHERE (((+ (rt1.c1)) IN ())) ORDER BY (CAST(rt1.c0 AS NUMERIC) IN (CAST(rt1.c0 AS REAL), (rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt1.c1)=(vt0.c0)) IN ()) ORDER BY (CAST(rt1.c0 AS NUMERIC) IN (CAST(rt1.c0 AS REAL), (rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt1.c1)=(vt0.c0)) IN ()) WHERE (((+ (rt1.c1)) IN ())) ORDER BY (CAST(rt1.c0 AS NUMERIC) IN (CAST(rt1.c0 AS REAL), (rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt1.c1)=(vt0.c0)) IN ()) ORDER BY (CAST(rt1.c0 AS NUMERIC) IN (CAST(rt1.c0 AS REAL), (rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt1.c1)=(vt0.c0)) IN ()) WHERE (((+ (rt1.c1)) IN ())) ORDER BY (CAST(rt1.c0 AS NUMERIC) IN (CAST(rt1.c0 AS REAL), (rt1.c2 IN ())));
SELECT * FROM vt0 WHERE (('-9223372036854775808' IN ())) ORDER BY (((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS INTEGER))))AND(COALESCE(vt0.c0, vt0.c0))), (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((('-9223372036854775808' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS INTEGER))))AND(COALESCE(vt0.c0, vt0.c0))), (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE (('-9223372036854775808' IN ())) ORDER BY (((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS INTEGER))))AND(COALESCE(vt0.c0, vt0.c0))), (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((('-9223372036854775808' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS INTEGER))))AND(COALESCE(vt0.c0, vt0.c0))), (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE (('-9223372036854775808' IN ())) ORDER BY (((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS INTEGER))))AND(COALESCE(vt0.c0, vt0.c0))), (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT * FROM vt0 WHERE (CAST('.+ul|' AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(0xffffffffb6983f06)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('.+ul|' AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(0xffffffffb6983f06)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST('.+ul|' AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(0xffffffffb6983f06)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('.+ul|' AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(0xffffffffb6983f06)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST('.+ul|' AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(0xffffffffb6983f06)) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c0)IS NOT(rt1.c2)))AND(((rt1.c2)+(rt1.c0)))))OR(((rt1.c2) IS FALSE))))OR(((0.645763607102163) IS TRUE))))OR(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)IS NOT(rt1.c2)))AND(((rt1.c2)+(rt1.c0)))))OR(((rt1.c2) IS FALSE))))OR(((0.645763607102163) IS TRUE))))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c0)IS NOT(rt1.c2)))AND(((rt1.c2)+(rt1.c0)))))OR(((rt1.c2) IS FALSE))))OR(((0.645763607102163) IS TRUE))))OR(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)IS NOT(rt1.c2)))AND(((rt1.c2)+(rt1.c0)))))OR(((rt1.c2) IS FALSE))))OR(((0.645763607102163) IS TRUE))))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c0)IS NOT(rt1.c2)))AND(((rt1.c2)+(rt1.c0)))))OR(((rt1.c2) IS FALSE))))OR(((0.645763607102163) IS TRUE))))OR(((rt1.c1) NOT NULL))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CASE CASE rt1.c2  WHEN '1285804853' THEN vt0.c0 END  WHEN NULL THEN rt1.c1 END WHERE (TOTAL_CHANGES()) ORDER BY CAST(0x1bccb860 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE CASE rt1.c2  WHEN '1285804853' THEN vt0.c0 END  WHEN NULL THEN rt1.c1 END ORDER BY CAST(0x1bccb860 AS REAL)  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CASE CASE rt1.c2  WHEN '1285804853' THEN vt0.c0 END  WHEN NULL THEN rt1.c1 END WHERE (TOTAL_CHANGES()) ORDER BY CAST(0x1bccb860 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE CASE rt1.c2  WHEN '1285804853' THEN vt0.c0 END  WHEN NULL THEN rt1.c1 END ORDER BY CAST(0x1bccb860 AS REAL)  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CASE CASE rt1.c2  WHEN '1285804853' THEN vt0.c0 END  WHEN NULL THEN rt1.c1 END WHERE (TOTAL_CHANGES()) ORDER BY CAST(0x1bccb860 AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS BLOB)) ORDER BY 'YU', ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))>=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'YU', ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS BLOB)) ORDER BY 'YU', ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))>=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'YU', ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS BLOB)) ORDER BY 'YU', ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (NULL)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END)))OR(IFNULL(rt1.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END)))OR(IFNULL(rt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END)))OR(IFNULL(rt1.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END)))OR(IFNULL(rt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END)))OR(IFNULL(rt1.c0, vt0.c0))));
SELECT * FROM rt1, vt0 WHERE ((((~ (vt0.c0))) NOT NULL)) ORDER BY CAST(((rt1.c1) NOT BETWEEN ('513734573') AND (rt1.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((rt1.c1) NOT BETWEEN ('513734573') AND (rt1.c1)) AS INTEGER)  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((((~ (vt0.c0))) NOT NULL)) ORDER BY CAST(((rt1.c1) NOT BETWEEN ('513734573') AND (rt1.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((rt1.c1) NOT BETWEEN ('513734573') AND (rt1.c1)) AS INTEGER)  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((((~ (vt0.c0))) NOT NULL)) ORDER BY CAST(((rt1.c1) NOT BETWEEN ('513734573') AND (rt1.c1)) AS INTEGER)  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE ((((- (rt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((- (rt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((- (rt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT UNICODE(rt1.c1), ((((rt1.c1)AND(NULL)))OR(rt1.c2))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT UNICODE(rt1.c1), ((((rt1.c1)AND(NULL)))OR(rt1.c2))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT UNICODE(rt1.c1), ((((rt1.c1)AND(NULL)))OR(rt1.c2))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT UNICODE(rt1.c1), ((((rt1.c1)AND(NULL)))OR(rt1.c2))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT UNICODE(rt1.c1), ((((rt1.c1)AND(NULL)))OR(rt1.c2))) WHERE (rt1.c1);
SELECT * FROM rt1 CROSS JOIN vt0 ON (('~k') BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM WHERE (((((NULL)OR(vt0.c0)))&(rt1.c0))) ORDER BY ((vt0.c0 COLLATE BINARY)>>(CASE rt1.c1  WHEN NULL THEN rt1.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(vt0.c0)))&(rt1.c0))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (('~k') BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM ORDER BY ((vt0.c0 COLLATE BINARY)>>(CASE rt1.c1  WHEN NULL THEN rt1.c2 END)) ASC  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN vt0 ON (('~k') BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM WHERE (((((NULL)OR(vt0.c0)))&(rt1.c0))) ORDER BY ((vt0.c0 COLLATE BINARY)>>(CASE rt1.c1  WHEN NULL THEN rt1.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(vt0.c0)))&(rt1.c0))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (('~k') BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM ORDER BY ((vt0.c0 COLLATE BINARY)>>(CASE rt1.c1  WHEN NULL THEN rt1.c2 END)) ASC  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN vt0 ON (('~k') BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM WHERE (((((NULL)OR(vt0.c0)))&(rt1.c0))) ORDER BY ((vt0.c0 COLLATE BINARY)>>(CASE rt1.c1  WHEN NULL THEN rt1.c2 END)) ASC  NULLS LAST;
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c1 WHERE (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON rt1.c1);
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c1 WHERE (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON rt1.c1);
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c1 WHERE (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE BINARY);
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) NOTNULL)) ORDER BY rt1.c1, CAST((~ (NULL)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c1, CAST((~ (NULL)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) NOTNULL)) ORDER BY rt1.c1, CAST((~ (NULL)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c1, CAST((~ (NULL)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) NOTNULL)) ORDER BY rt1.c1, CAST((~ (NULL)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1f97ce4);
SELECT SUM(count) FROM (SELECT ((0x1f97ce4) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1f97ce4);
SELECT SUM(count) FROM (SELECT ((0x1f97ce4) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1f97ce4);
SELECT * FROM vt0 CROSS JOIN rt1 ON TYPEOF(vt0.c0) COLLATE BINARY WHERE ((((rt1.c2 COLLATE NOCASE))<=((2054901174 COLLATE BINARY)))) ORDER BY CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 COLLATE NOCASE))<=((2054901174 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON TYPEOF(vt0.c0) COLLATE BINARY ORDER BY CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) END);
SELECT * FROM vt0 CROSS JOIN rt1 ON TYPEOF(vt0.c0) COLLATE BINARY WHERE ((((rt1.c2 COLLATE NOCASE))<=((2054901174 COLLATE BINARY)))) ORDER BY CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 COLLATE NOCASE))<=((2054901174 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON TYPEOF(vt0.c0) COLLATE BINARY ORDER BY CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) END);
SELECT * FROM vt0 CROSS JOIN rt1 ON TYPEOF(vt0.c0) COLLATE BINARY WHERE ((((rt1.c2 COLLATE NOCASE))<=((2054901174 COLLATE BINARY)))) ORDER BY CASE WHEN rt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) END;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (+ (CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END)) WHERE (((((rt1.c0) NOTNULL))GLOB(((((rt1.c0)AND(rt1.c1)))AND(rt1.c1))))) ORDER BY ((((((0.4085853535448062) NOT BETWEEN (vt0.c0) AND (rt1.c2)))OR(((rt1.c1)||(vt0.c0)))))AND(0X5d522705))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOTNULL))GLOB(((((rt1.c0)AND(rt1.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ (CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END)) ORDER BY ((((((0.4085853535448062) NOT BETWEEN (vt0.c0) AND (rt1.c2)))OR(((rt1.c1)||(vt0.c0)))))AND(0X5d522705))  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (+ (CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END)) WHERE (((((rt1.c0) NOTNULL))GLOB(((((rt1.c0)AND(rt1.c1)))AND(rt1.c1))))) ORDER BY ((((((0.4085853535448062) NOT BETWEEN (vt0.c0) AND (rt1.c2)))OR(((rt1.c1)||(vt0.c0)))))AND(0X5d522705))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOTNULL))GLOB(((((rt1.c0)AND(rt1.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ (CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END)) ORDER BY ((((((0.4085853535448062) NOT BETWEEN (vt0.c0) AND (rt1.c2)))OR(((rt1.c1)||(vt0.c0)))))AND(0X5d522705))  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (+ (CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END)) WHERE (((((rt1.c0) NOTNULL))GLOB(((((rt1.c0)AND(rt1.c1)))AND(rt1.c1))))) ORDER BY ((((((0.4085853535448062) NOT BETWEEN (vt0.c0) AND (rt1.c2)))OR(((rt1.c1)||(vt0.c0)))))AND(0X5d522705))  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE (((rt1.c0))<((rt1.c1)))  WHEN CAST(rt1.c2 AS TEXT) THEN UPPER(rt1.c0) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c0))<((rt1.c1)))  WHEN CAST(rt1.c2 AS TEXT) THEN UPPER(rt1.c0) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE (((rt1.c0))<((rt1.c1)))  WHEN CAST(rt1.c2 AS TEXT) THEN UPPER(rt1.c0) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c0))<((rt1.c1)))  WHEN CAST(rt1.c2 AS TEXT) THEN UPPER(rt1.c0) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE (((rt1.c0))<((rt1.c1)))  WHEN CAST(rt1.c2 AS TEXT) THEN UPPER(rt1.c0) ELSE rt1.c2 END);
SELECT ALL * FROM vt0 WHERE ((x'' IN ())) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)==(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((x'' IN ())) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)==(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((x'' IN ())) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)=(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY CAST((~ (rt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CAST((~ (rt1.c0)) AS INTEGER) ASC);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY CAST((~ (rt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CAST((~ (rt1.c0)) AS INTEGER) ASC);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY CAST((~ (rt1.c0)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END) BETWEEN ((rt1.c0 IN ())) AND (rt1.c2)) ASC, (((rt1.c1 IN (rt1.c0, rt1.c0, rt1.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END) BETWEEN ((rt1.c0 IN ())) AND (rt1.c2)) ASC, (((rt1.c1 IN (rt1.c0, rt1.c0, rt1.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END) BETWEEN ((rt1.c0 IN ())) AND (rt1.c2)) ASC, (((rt1.c1 IN (rt1.c0, rt1.c0, rt1.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END) BETWEEN ((rt1.c0 IN ())) AND (rt1.c2)) ASC, (((rt1.c1 IN (rt1.c0, rt1.c0, rt1.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END) BETWEEN ((rt1.c0 IN ())) AND (rt1.c2)) ASC, (((rt1.c1 IN (rt1.c0, rt1.c0, rt1.c0))) IS FALSE)  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT * FROM rt1 INNER JOIN vt0 ON (((rt1.c0 IN (vt0.c0)))<=(((0.6434195886056292)LIKE(rt1.c1)))) WHERE (x'e906cad4') ORDER BY CASE (0.39976274357412755 IN (rt1.c2))  WHEN x'' COLLATE BINARY THEN ((rt1.c0) IS TRUE) ELSE rt1.c2 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'e906cad4') IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt1.c0 IN (vt0.c0)))<=(((0.6434195886056292)LIKE(rt1.c1)))) ORDER BY CASE (0.39976274357412755 IN (rt1.c2))  WHEN x'' COLLATE BINARY THEN ((rt1.c0) IS TRUE) ELSE rt1.c2 END ASC);
SELECT * FROM rt1 INNER JOIN vt0 ON (((rt1.c0 IN (vt0.c0)))<=(((0.6434195886056292)LIKE(rt1.c1)))) WHERE (x'e906cad4') ORDER BY CASE (0.39976274357412755 IN (rt1.c2))  WHEN x'' COLLATE BINARY THEN ((rt1.c0) IS TRUE) ELSE rt1.c2 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'e906cad4') IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt1.c0 IN (vt0.c0)))<=(((0.6434195886056292)LIKE(rt1.c1)))) ORDER BY CASE (0.39976274357412755 IN (rt1.c2))  WHEN x'' COLLATE BINARY THEN ((rt1.c0) IS TRUE) ELSE rt1.c2 END ASC);
SELECT * FROM rt1 INNER JOIN vt0 ON (((rt1.c0 IN (vt0.c0)))<=(((0.6434195886056292)LIKE(rt1.c1)))) WHERE (x'e906cad4') ORDER BY CASE (0.39976274357412755 IN (rt1.c2))  WHEN x'' COLLATE BINARY THEN ((rt1.c0) IS TRUE) ELSE rt1.c2 END ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (NOT (rt1.c2)) THEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END WHEN ((rt1.c2) NOTNULL) THEN LIKELIHOOD(rt1.c2, 0.04933227389725969) WHEN rt1.c1 THEN (((rt1.c2))<((vt0.c0))) END) ORDER BY -867902634 DESC, ((vt0.c0)AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN NULL WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST, CASE rt1.c0  WHEN 0.3245808335164523 THEN rt1.c2 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c2)) THEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END WHEN ((rt1.c2) NOTNULL) THEN LIKELIHOOD(rt1.c2, 0.04933227389725969) WHEN rt1.c1 THEN (((rt1.c2))<((vt0.c0))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY -867902634 DESC, ((vt0.c0)AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN NULL WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST, CASE rt1.c0  WHEN 0.3245808335164523 THEN rt1.c2 END COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (NOT (rt1.c2)) THEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END WHEN ((rt1.c2) NOTNULL) THEN LIKELIHOOD(rt1.c2, 0.04933227389725969) WHEN rt1.c1 THEN (((rt1.c2))<((vt0.c0))) END) ORDER BY -867902634 DESC, ((vt0.c0)AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN NULL WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST, CASE rt1.c0  WHEN 0.3245808335164523 THEN rt1.c2 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c2)) THEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END WHEN ((rt1.c2) NOTNULL) THEN LIKELIHOOD(rt1.c2, 0.04933227389725969) WHEN rt1.c1 THEN (((rt1.c2))<((vt0.c0))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY -867902634 DESC, ((vt0.c0)AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN NULL WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST, CASE rt1.c0  WHEN 0.3245808335164523 THEN rt1.c2 END COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)), 0.0614012426413153 COLLATE RTRIM, x'c9d5'))>=((0.7342885423553612, x'', (+ (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)), 0.0614012426413153 COLLATE RTRIM, x'c9d5'))>=((0.7342885423553612, x'', (+ (rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)), 0.0614012426413153 COLLATE RTRIM, x'c9d5'))>=((0.7342885423553612, x'', (+ (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)), 0.0614012426413153 COLLATE RTRIM, x'c9d5'))>=((0.7342885423553612, x'', (+ (rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)), 0.0614012426413153 COLLATE RTRIM, x'c9d5'))>=((0.7342885423553612, x'', (+ (rt1.c2))))));
SELECT COUNT(*) FROM vt0 WHERE (((((ABS(vt0.c0))OR(((vt0.c0)/(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(vt0.c0))OR(((vt0.c0)/(vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((ABS(vt0.c0))OR(((vt0.c0)/(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(vt0.c0))OR(((vt0.c0)/(vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((ABS(vt0.c0))OR(((vt0.c0)/(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)>>(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)>>(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)>>(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (((rt1.c2)LIKE(((((rt1.c0)AND('-864019482')))OR(x''))))) ORDER BY vt0.c0 DESC, CAST(ROUND(rt1.c2, rt1.c2) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)LIKE(((((rt1.c0)AND('-864019482')))OR(x''))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c0 DESC, CAST(ROUND(rt1.c2, rt1.c2) AS INTEGER) DESC);
SELECT * FROM vt0, rt1 WHERE (((rt1.c2)LIKE(((((rt1.c0)AND('-864019482')))OR(x''))))) ORDER BY vt0.c0 DESC, CAST(ROUND(rt1.c2, rt1.c2) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)LIKE(((((rt1.c0)AND('-864019482')))OR(x''))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c0 DESC, CAST(ROUND(rt1.c2, rt1.c2) AS INTEGER) DESC);
SELECT * FROM vt0, rt1 WHERE (((rt1.c2)LIKE(((((rt1.c0)AND('-864019482')))OR(x''))))) ORDER BY vt0.c0 DESC, CAST(ROUND(rt1.c2, rt1.c2) AS INTEGER) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)+(rt1.c2)) IN ())) ORDER BY ((((rt1.c1) BETWEEN (rt1.c1) AND (1211546139))) IS FALSE)  NULLS FIRST, HEX(((rt1.c0) IS FALSE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)+(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c1) AND (1211546139))) IS FALSE)  NULLS FIRST, HEX(((rt1.c0) IS FALSE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)+(rt1.c2)) IN ())) ORDER BY ((((rt1.c1) BETWEEN (rt1.c1) AND (1211546139))) IS FALSE)  NULLS FIRST, HEX(((rt1.c0) IS FALSE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)+(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c1) AND (1211546139))) IS FALSE)  NULLS FIRST, HEX(((rt1.c0) IS FALSE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)+(rt1.c2)) IN ())) ORDER BY ((((rt1.c1) BETWEEN (rt1.c1) AND (1211546139))) IS FALSE)  NULLS FIRST, HEX(((rt1.c0) IS FALSE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (((rt1.c2)IS NOT(rt1.c1))))) ORDER BY (+ (NULL)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY (+ (NULL)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (((rt1.c2)IS NOT(rt1.c1))))) ORDER BY (+ (NULL)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY (+ (NULL)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (((rt1.c2)IS NOT(rt1.c1))))) ORDER BY (+ (NULL)) COLLATE RTRIM DESC;
SELECT ALL * FROM rt1, vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1) IS FALSE)))>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)), 'dpVh-A<', CAST(rt1.c0 AS TEXT))))) ORDER BY (((((rt1.c1))==((x''))))OR((((rt1.c2))>((rt1.c2))))) ASC  NULLS LAST, UPPER(((('\glZdΑ', rt1.c0, x'f040291f')) BETWEEN ((rt1.c2, '233488623', rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0))))  NULLS LAST, (((((((((('(g緁r]5c')AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN (rt1.c2, rt1.c2))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1) IS FALSE)))>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)), 'dpVh-A<', CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1))==((x''))))OR((((rt1.c2))>((rt1.c2))))) ASC  NULLS LAST, UPPER(((('\glZdΑ', rt1.c0, x'f040291f')) BETWEEN ((rt1.c2, '233488623', rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0))))  NULLS LAST, (((((((((('(g緁r]5c')AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN (rt1.c2, rt1.c2))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1) IS FALSE)))>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)), 'dpVh-A<', CAST(rt1.c0 AS TEXT))))) ORDER BY (((((rt1.c1))==((x''))))OR((((rt1.c2))>((rt1.c2))))) ASC  NULLS LAST, UPPER(((('\glZdΑ', rt1.c0, x'f040291f')) BETWEEN ((rt1.c2, '233488623', rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0))))  NULLS LAST, (((((((((('(g緁r]5c')AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN (rt1.c2, rt1.c2))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1) IS FALSE)))>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)), 'dpVh-A<', CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1))==((x''))))OR((((rt1.c2))>((rt1.c2))))) ASC  NULLS LAST, UPPER(((('\glZdΑ', rt1.c0, x'f040291f')) BETWEEN ((rt1.c2, '233488623', rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0))))  NULLS LAST, (((((((((('(g緁r]5c')AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN (rt1.c2, rt1.c2))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1) IS FALSE)))>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)), 'dpVh-A<', CAST(rt1.c0 AS TEXT))))) ORDER BY (((((rt1.c1))==((x''))))OR((((rt1.c2))>((rt1.c2))))) ASC  NULLS LAST, UPPER(((('\glZdΑ', rt1.c0, x'f040291f')) BETWEEN ((rt1.c2, '233488623', rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0))))  NULLS LAST, (((((((((('(g緁r]5c')AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN (rt1.c2, rt1.c2))) AND (UNLIKELY(rt1.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (x''))) ORDER BY ((((((((((((CAST(rt1.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN ('') AND (rt1.c2)))))AND(((rt1.c2)IS(vt0.c0)))))AND(((rt1.c0)/(rt1.c0)))))OR((((vt0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, rt1.c1)) AND ((NULL, rt1.c2, vt0.c0))))))AND('-1911028221')))AND(SUBSTR(vt0.c0, rt1.c0))) DESC, (rt1.c2 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((((CAST(rt1.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN ('') AND (rt1.c2)))))AND(((rt1.c2)IS(vt0.c0)))))AND(((rt1.c0)/(rt1.c0)))))OR((((vt0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, rt1.c1)) AND ((NULL, rt1.c2, vt0.c0))))))AND('-1911028221')))AND(SUBSTR(vt0.c0, rt1.c0))) DESC, (rt1.c2 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (x''))) ORDER BY ((((((((((((CAST(rt1.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN ('') AND (rt1.c2)))))AND(((rt1.c2)IS(vt0.c0)))))AND(((rt1.c0)/(rt1.c0)))))OR((((vt0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, rt1.c1)) AND ((NULL, rt1.c2, vt0.c0))))))AND('-1911028221')))AND(SUBSTR(vt0.c0, rt1.c0))) DESC, (rt1.c2 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((((CAST(rt1.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN ('') AND (rt1.c2)))))AND(((rt1.c2)IS(vt0.c0)))))AND(((rt1.c0)/(rt1.c0)))))OR((((vt0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, rt1.c1)) AND ((NULL, rt1.c2, vt0.c0))))))AND('-1911028221')))AND(SUBSTR(vt0.c0, rt1.c0))) DESC, (rt1.c2 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (x''))) ORDER BY ((((((((((((CAST(rt1.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN ('') AND (rt1.c2)))))AND(((rt1.c2)IS(vt0.c0)))))AND(((rt1.c0)/(rt1.c0)))))OR((((vt0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, rt1.c1)) AND ((NULL, rt1.c2, vt0.c0))))))AND('-1911028221')))AND(SUBSTR(vt0.c0, rt1.c0))) DESC, (rt1.c2 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) ORDER BY ((NULL) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((NULL) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) ORDER BY ((NULL) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((NULL) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) ORDER BY ((NULL) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (RTRIM(vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((RTRIM(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (RTRIM(vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((RTRIM(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (RTRIM(vt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))LIKE((rt1.c0 IN ())))) ORDER BY (((rt1.c1)%(NULL)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))LIKE((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)%(NULL)) IN ()) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))LIKE((rt1.c0 IN ())))) ORDER BY (((rt1.c1)%(NULL)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))LIKE((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)%(NULL)) IN ()) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))LIKE((rt1.c0 IN ())))) ORDER BY (((rt1.c1)%(NULL)) IN ()) DESC;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2, 0.004438692324948756, rt1.c2))!=((rt1.c2, rt1.c2, rt1.c0))) IN (rt1.c0 COLLATE NOCASE))) ORDER BY (NOT (((rt1.c1) NOTNULL))), (- ((((-1962631584)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2, 0.004438692324948756, rt1.c2))<>((rt1.c2, rt1.c2, rt1.c0))) IN (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c1) NOTNULL))), (- ((((-1962631584)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2, 0.004438692324948756, rt1.c2))!=((rt1.c2, rt1.c2, rt1.c0))) IN (rt1.c0 COLLATE NOCASE))) ORDER BY (NOT (((rt1.c1) NOTNULL))), (- ((((-1962631584)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2, 0.004438692324948756, rt1.c2))<>((rt1.c2, rt1.c2, rt1.c0))) IN (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c1) NOTNULL))), (- ((((-1962631584)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2, 0.004438692324948756, rt1.c2))!=((rt1.c2, rt1.c2, rt1.c0))) IN (rt1.c0 COLLATE NOCASE))) ORDER BY (NOT (((rt1.c1) NOTNULL))), (- ((((-1962631584)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c0)IS(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0)IS(NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c0)IS(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0)IS(NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c0)IS(NULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))GLOB(((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))GLOB(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))GLOB(((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))GLOB(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))GLOB(((vt0.c0)<(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))&(0.8171308819993316)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))&(0.8171308819993316))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))&(0.8171308819993316)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))&(0.8171308819993316))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))&(0.8171308819993316)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULLIF(x'd35c' COLLATE RTRIM, rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(x'd35c' COLLATE RTRIM, rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULLIF(x'd35c' COLLATE RTRIM, rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(x'd35c' COLLATE RTRIM, rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULLIF(x'd35c' COLLATE RTRIM, rt1.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 IN ()) IN ()));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS BLOB))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS BLOB))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS BLOB))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))));
SELECT ALL * FROM vt0, rt1 WHERE ('*+') ORDER BY (- (((rt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (('*+') IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (((rt1.c0) ISNULL))));
SELECT ALL * FROM vt0, rt1 WHERE ('*+') ORDER BY (- (((rt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (('*+') IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (((rt1.c0) ISNULL))));
SELECT ALL * FROM vt0, rt1 WHERE ('*+') ORDER BY (- (((rt1.c0) ISNULL)));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT NULL) WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c0)+(rt1.c1))) AND ((- (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT NULL) ORDER BY ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c0)+(rt1.c1))) AND ((- (rt1.c2)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT NULL) WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c0)+(rt1.c1))) AND ((- (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT NULL) ORDER BY ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c0)+(rt1.c1))) AND ((- (rt1.c2)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(DISTINCT NULL) WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c0)+(rt1.c1))) AND ((- (rt1.c2))));
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)<<(((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)<<(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)<<(((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)<<(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)<<(((rt1.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c1)) COLLATE BINARY) ORDER BY (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN (((- ('-1901330800')), (~ (rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) AND (((((rt1.c2))<=((rt1.c1))), (((rt1.c2))!=((rt1.c1))), CAST(rt1.c2 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN (((- ('-1901330800')), (~ (rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) AND (((((rt1.c2))<=((rt1.c1))), (((rt1.c2))!=((rt1.c1))), CAST(rt1.c2 AS NUMERIC))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c1)) COLLATE BINARY) ORDER BY (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN (((- ('-1901330800')), (~ (rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) AND (((((rt1.c2))<=((rt1.c1))), (((rt1.c2))!=((rt1.c1))), CAST(rt1.c2 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN (((- ('-1901330800')), (~ (rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) AND (((((rt1.c2))<=((rt1.c1))), (((rt1.c2))!=((rt1.c1))), CAST(rt1.c2 AS NUMERIC))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c1)) COLLATE BINARY) ORDER BY (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN (((- ('-1901330800')), (~ (rt1.c1)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) AND (((((rt1.c2))<=((rt1.c1))), (((rt1.c2))!=((rt1.c1))), CAST(rt1.c2 AS NUMERIC))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c1)))) AND ((CAST(rt1.c2 AS NUMERIC))))) ORDER BY (COALESCE(vt0.c0, rt1.c1, rt1.c0, rt1.c1) IN (CAST(rt1.c0 AS BLOB))), (((rt1.c2 IN ()))%((rt1.c0 IN ())))  NULLS LAST, rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c1)))) AND ((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (COALESCE(vt0.c0, rt1.c1, rt1.c0, rt1.c1) IN (CAST(rt1.c0 AS BLOB))), (((rt1.c2 IN ()))%((rt1.c0 IN ())))  NULLS LAST, rt1.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c1)))) AND ((CAST(rt1.c2 AS NUMERIC))))) ORDER BY (COALESCE(vt0.c0, rt1.c1, rt1.c0, rt1.c1) IN (CAST(rt1.c0 AS BLOB))), (((rt1.c2 IN ()))%((rt1.c0 IN ())))  NULLS LAST, rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c1)))) AND ((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (COALESCE(vt0.c0, rt1.c1, rt1.c0, rt1.c1) IN (CAST(rt1.c0 AS BLOB))), (((rt1.c2 IN ()))%((rt1.c0 IN ())))  NULLS LAST, rt1.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c1)))) AND ((CAST(rt1.c2 AS NUMERIC))))) ORDER BY (COALESCE(vt0.c0, rt1.c1, rt1.c0, rt1.c1) IN (CAST(rt1.c0 AS BLOB))), (((rt1.c2 IN ()))%((rt1.c0 IN ())))  NULLS LAST, rt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(('?' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(('?' IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(('?' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(('?' IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(('?' IN ()))));
SELECT * FROM vt0 WHERE (HEX(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ORDER BY (NOT (0.5665242512654594));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.5665242512654594)));
SELECT * FROM vt0 WHERE (HEX(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ORDER BY (NOT (0.5665242512654594));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.5665242512654594)));
SELECT * FROM vt0 WHERE (HEX(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ORDER BY (NOT (0.5665242512654594));
SELECT COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c0 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c0 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c0 THEN rt1.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))OR(0.6454397062346114)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))OR(0.6454397062346114))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))OR(0.6454397062346114)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))OR(0.6454397062346114))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))OR(0.6454397062346114)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, (NOT (rt1.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END))<((CAST(rt1.c1 AS NUMERIC), (rt1.c1 IN ()), ((rt1.c1) NOTNULL))))) ORDER BY CASE (- (rt1.c0))  WHEN CAST(rt1.c0 AS NUMERIC) THEN rt1.c0 END DESC  NULLS LAST, rt1.c1 ASC, CAST(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, (NOT (rt1.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END))<((CAST(rt1.c1 AS NUMERIC), (rt1.c1 IN ()), ((rt1.c1) NOTNULL))))) IS TRUE)  as count FROM rt1 ORDER BY CASE (- (rt1.c0))  WHEN CAST(rt1.c0 AS NUMERIC) THEN rt1.c0 END DESC  NULLS LAST, rt1.c1 ASC, CAST(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, (NOT (rt1.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END))<((CAST(rt1.c1 AS NUMERIC), (rt1.c1 IN ()), ((rt1.c1) NOTNULL))))) ORDER BY CASE (- (rt1.c0))  WHEN CAST(rt1.c0 AS NUMERIC) THEN rt1.c0 END DESC  NULLS LAST, rt1.c1 ASC, CAST(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, (NOT (rt1.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END))<((CAST(rt1.c1 AS NUMERIC), (rt1.c1 IN ()), ((rt1.c1) NOTNULL))))) IS TRUE)  as count FROM rt1 ORDER BY CASE (- (rt1.c0))  WHEN CAST(rt1.c0 AS NUMERIC) THEN rt1.c0 END DESC  NULLS LAST, rt1.c1 ASC, CAST(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, (NOT (rt1.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END))<((CAST(rt1.c1 AS NUMERIC), (rt1.c1 IN ()), ((rt1.c1) NOTNULL))))) ORDER BY CASE (- (rt1.c0))  WHEN CAST(rt1.c0 AS NUMERIC) THEN rt1.c0 END DESC  NULLS LAST, rt1.c1 ASC, CAST(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CAST(vt0.c0 AS TEXT), (vt0.c0 IN (rt1.c2, rt1.c1)), vt0.c0 COLLATE NOCASE))<>(((rt1.c2 IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, ((rt1.c2)*(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT), (vt0.c0 IN (rt1.c2, rt1.c1)), vt0.c0 COLLATE NOCASE))!=(((rt1.c2 IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, ((rt1.c2)*(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CAST(vt0.c0 AS TEXT), (vt0.c0 IN (rt1.c2, rt1.c1)), vt0.c0 COLLATE NOCASE))<>(((rt1.c2 IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, ((rt1.c2)*(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT), (vt0.c0 IN (rt1.c2, rt1.c1)), vt0.c0 COLLATE NOCASE))!=(((rt1.c2 IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, ((rt1.c2)*(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CAST(vt0.c0 AS TEXT), (vt0.c0 IN (rt1.c2, rt1.c1)), vt0.c0 COLLATE NOCASE))<>(((rt1.c2 IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, ((rt1.c2)*(rt1.c2))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (+ (rt1.c2)) THEN ((rt1.c0)>>(rt1.c1)) ELSE ((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)) END) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE NOCASE  WHEN (+ (rt1.c2)) THEN ((rt1.c0)>>(rt1.c1)) ELSE ((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (+ (rt1.c2)) THEN ((rt1.c0)>>(rt1.c1)) ELSE ((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)) END) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE NOCASE  WHEN (+ (rt1.c2)) THEN ((rt1.c0)>>(rt1.c1)) ELSE ((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (+ (rt1.c2)) THEN ((rt1.c0)>>(rt1.c1)) ELSE ((((vt0.c0)AND(rt1.c2)))OR(rt1.c2)) END) ORDER BY rt1.c2  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)OR(((((rt1.c2)OR(NULL)))OR(rt1.c2)))))OR(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(((((rt1.c2)OR(NULL)))OR(rt1.c2)))))OR(x''))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)OR(((((rt1.c2)OR(NULL)))OR(rt1.c2)))))OR(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(((((rt1.c2)OR(NULL)))OR(rt1.c2)))))OR(x''))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)OR(((((rt1.c2)OR(NULL)))OR(rt1.c2)))))OR(x'')));
SELECT COUNT(*) FROM vt0, rt1 WHERE (HEX(((rt1.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt1.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (HEX(((rt1.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt1.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (HEX(((rt1.c0)>=(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON (- (rt1.c2 COLLATE BINARY)) WHERE (rt1.c0) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (- (rt1.c2 COLLATE BINARY)) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON (- (rt1.c2 COLLATE BINARY)) WHERE (rt1.c0) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (- (rt1.c2 COLLATE BINARY)) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON (- (rt1.c2 COLLATE BINARY)) WHERE (rt1.c0) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 'u[.巛Q' END) IS TRUE)) ORDER BY ((((vt0.c0)-(vt0.c0)))<<(CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN 'u[.巛Q' END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)-(vt0.c0)))<<(CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 'u[.巛Q' END) IS TRUE)) ORDER BY ((((vt0.c0)-(vt0.c0)))<<(CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN 'u[.巛Q' END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)-(vt0.c0)))<<(CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 'u[.巛Q' END) IS TRUE)) ORDER BY ((((vt0.c0)-(vt0.c0)))<<(CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2 IN (vt0.c0, rt1.c0, rt1.c1)), rt1.c2, ((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)), ((rt1.c0)AND(rt1.c0)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<=((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END, CAST(rt1.c1 AS INTEGER), 0.14693747789873401, rt1.c2, (rt1.c2 IN (NULL))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 IN (vt0.c0, rt1.c0, rt1.c1)), rt1.c2, ((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)), ((rt1.c0)AND(rt1.c0)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<=((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END, CAST(rt1.c1 AS INTEGER), 0.14693747789873401, rt1.c2, (rt1.c2 IN (NULL)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2 IN (vt0.c0, rt1.c0, rt1.c1)), rt1.c2, ((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)), ((rt1.c0)AND(rt1.c0)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<=((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END, CAST(rt1.c1 AS INTEGER), 0.14693747789873401, rt1.c2, (rt1.c2 IN (NULL))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 IN (vt0.c0, rt1.c0, rt1.c1)), rt1.c2, ((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)), ((rt1.c0)AND(rt1.c0)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<=((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END, CAST(rt1.c1 AS INTEGER), 0.14693747789873401, rt1.c2, (rt1.c2 IN (NULL)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2 IN (vt0.c0, rt1.c0, rt1.c1)), rt1.c2, ((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)), ((rt1.c0)AND(rt1.c0)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))<=((CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END, CAST(rt1.c1 AS INTEGER), 0.14693747789873401, rt1.c2, (rt1.c2 IN (NULL))))));
SELECT * FROM rt1, vt0 WHERE ('-1840175066' COLLATE RTRIM) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ALL (('-1840175066' COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2);
SELECT * FROM rt1, vt0 WHERE ('-1840175066' COLLATE RTRIM) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ALL (('-1840175066' COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2);
SELECT * FROM rt1, vt0 WHERE ('-1840175066' COLLATE RTRIM) ORDER BY rt1.c2;
SELECT COUNT(*) FROM rt1 WHERE ('1232881532') ORDER BY (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))%(((rt1.c0)=(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1232881532') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))%(((rt1.c0)==(rt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ('1232881532') ORDER BY (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))%(((rt1.c0)=(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1232881532') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))%(((rt1.c0)==(rt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ('1232881532') ORDER BY (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))%(((rt1.c0)=(rt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE ((((('0.5617191227448708')<=(rt1.c2))) IS FALSE)) ORDER BY CAST((+ (rt1.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((('0.5617191227448708')<=(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST((+ (rt1.c2)) AS REAL));
SELECT ALL * FROM vt0, rt1 WHERE ((((('0.5617191227448708')<=(rt1.c2))) IS FALSE)) ORDER BY CAST((+ (rt1.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((('0.5617191227448708')<=(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST((+ (rt1.c2)) AS REAL));
SELECT ALL * FROM vt0, rt1 WHERE ((((('0.5617191227448708')<=(rt1.c2))) IS FALSE)) ORDER BY CAST((+ (rt1.c2)) AS REAL);
SELECT * FROM vt0 INNER JOIN rt1 ON UPPER(DISTINCT rt1.c0 COLLATE BINARY) WHERE ((((vt0.c0, vt0.c0, 2.035001251E9)) NOT BETWEEN ((((((vt0.c0)AND(rt1.c2)))OR(NULL)), (rt1.c0 IN ()), (((rt1.c2))<>((rt1.c1))))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS REAL), CASE WHEN -45146196 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE NULL END)))) ORDER BY (((rt1.c2)) BETWEEN ((0.30963627748852407)) AND ((''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, 2.035001251E9)) NOT BETWEEN ((((((vt0.c0)AND(rt1.c2)))OR(NULL)), (rt1.c0 IN ()), (((rt1.c2))!=((rt1.c1))))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS REAL), CASE WHEN -45146196 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE NULL END)))) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN rt1 ON UPPER(DISTINCT rt1.c0 COLLATE BINARY) ORDER BY (((rt1.c2)) BETWEEN ((0.30963627748852407)) AND ((''))) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt1 ON UPPER(DISTINCT rt1.c0 COLLATE BINARY) WHERE ((((vt0.c0, vt0.c0, 2.035001251E9)) NOT BETWEEN ((((((vt0.c0)AND(rt1.c2)))OR(NULL)), (rt1.c0 IN ()), (((rt1.c2))<>((rt1.c1))))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS REAL), CASE WHEN -45146196 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE NULL END)))) ORDER BY (((rt1.c2)) BETWEEN ((0.30963627748852407)) AND ((''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, 2.035001251E9)) NOT BETWEEN ((((((vt0.c0)AND(rt1.c2)))OR(NULL)), (rt1.c0 IN ()), (((rt1.c2))!=((rt1.c1))))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS REAL), CASE WHEN -45146196 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE NULL END)))) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN rt1 ON UPPER(DISTINCT rt1.c0 COLLATE BINARY) ORDER BY (((rt1.c2)) BETWEEN ((0.30963627748852407)) AND ((''))) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt1 ON UPPER(DISTINCT rt1.c0 COLLATE BINARY) WHERE ((((vt0.c0, vt0.c0, 2.035001251E9)) NOT BETWEEN ((((((vt0.c0)AND(rt1.c2)))OR(NULL)), (rt1.c0 IN ()), (((rt1.c2))<>((rt1.c1))))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS REAL), CASE WHEN -45146196 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE NULL END)))) ORDER BY (((rt1.c2)) BETWEEN ((0.30963627748852407)) AND ((''))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((((((rt1.c0) ISNULL))AND(((vt0.c0) ISNULL))))AND(((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))))AND(LIKELY(rt1.c2))))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0))))) ORDER BY CAST(((rt1.c0)AND(rt1.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) ISNULL))AND(((vt0.c0) ISNULL))))AND(((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))))AND(LIKELY(rt1.c2))))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((rt1.c0)AND(rt1.c1)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((((((rt1.c0) ISNULL))AND(((vt0.c0) ISNULL))))AND(((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))))AND(LIKELY(rt1.c2))))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0))))) ORDER BY CAST(((rt1.c0)AND(rt1.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) ISNULL))AND(((vt0.c0) ISNULL))))AND(((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))))AND(LIKELY(rt1.c2))))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((rt1.c0)AND(rt1.c1)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((((((rt1.c0) ISNULL))AND(((vt0.c0) ISNULL))))AND(((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))))AND(LIKELY(rt1.c2))))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0))))) ORDER BY CAST(((rt1.c0)AND(rt1.c1)) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOTNULL));
SELECT * FROM rt1 WHERE (TRIM(DISTINCT ((rt1.c2) ISNULL), ((rt1.c2)IS(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt1.c2) ISNULL), ((rt1.c2)IS(rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (TRIM(DISTINCT ((rt1.c2) ISNULL), ((rt1.c2)IS(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt1.c2) ISNULL), ((rt1.c2)IS(rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (TRIM(DISTINCT ((rt1.c2) ISNULL), ((rt1.c2)IS(rt1.c0))));
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c2 COLLATE BINARY)|(CAST(rt1.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE BINARY)|(CAST(rt1.c0 AS REAL)))  NULLS FIRST);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c2 COLLATE BINARY)|(CAST(rt1.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE BINARY)|(CAST(rt1.c0 AS REAL)))  NULLS FIRST);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c2 COLLATE BINARY)|(CAST(rt1.c0 AS REAL)))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((NULLIF(rt1.c0, rt1.c2))OR(0Xffffffffa1fdaf3d))) ORDER BY ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(NULL)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt1.c0, rt1.c2))OR(0xffffffffa1fdaf3d))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(NULL)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt1 WHERE (((NULLIF(rt1.c0, rt1.c2))OR(0Xffffffffa1fdaf3d))) ORDER BY ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(NULL)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt1.c0, rt1.c2))OR(0xffffffffa1fdaf3d))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(NULL)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt1 WHERE (((NULLIF(rt1.c0, rt1.c2))OR(0Xffffffffa1fdaf3d))) ORDER BY ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(NULL)) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((CASE WHEN x'' THEN rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN x'' THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((CASE WHEN x'' THEN rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN x'' THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((CASE WHEN x'' THEN rt1.c1 END IN ()));
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS BLOB) DESC);
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS BLOB) DESC);
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS BLOB) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NULL) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(vt0.c0))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(vt0.c0))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NULL) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(vt0.c0))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(vt0.c0))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NULL) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(vt0.c0))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ ((rt1.c1 IN ())))) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c2)>=('2051170828')) END, rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c2)>=('2051170828')) END, rt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ ((rt1.c1 IN ())))) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c2)>=('2051170828')) END, rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c2)>=('2051170828')) END, rt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ ((rt1.c1 IN ())))) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((rt1.c2)>=('2051170828')) END, rt1.c0 ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOTNULL));
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((((rt1.c1))>((vt0.c0)))) IS FALSE)) ORDER BY ((((((rt1.c2)AND(rt1.c0)))AND(vt0.c0)))/(((rt1.c0)>=(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))>((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((((((rt1.c2)AND(rt1.c0)))AND(vt0.c0)))/(((rt1.c0)>=(rt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((((rt1.c1))>((vt0.c0)))) IS FALSE)) ORDER BY ((((((rt1.c2)AND(rt1.c0)))AND(vt0.c0)))/(((rt1.c0)>=(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))>((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((((((rt1.c2)AND(rt1.c0)))AND(vt0.c0)))/(((rt1.c0)>=(rt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((((rt1.c1))>((vt0.c0)))) IS FALSE)) ORDER BY ((((((rt1.c2)AND(rt1.c0)))AND(vt0.c0)))/(((rt1.c0)>=(rt1.c1)))) DESC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))AND(rt1.c0)))OR(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))AND(rt1.c0)))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))AND(rt1.c0)))OR(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))AND(rt1.c0)))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))AND(rt1.c0)))OR(((vt0.c0) ISNULL))));
SELECT * FROM vt0, rt1 WHERE (rt1.c0) ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt1.c1) AND (UNLIKELY(rt1.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt1.c1) AND (UNLIKELY(rt1.c2)))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (rt1.c0) ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt1.c1) AND (UNLIKELY(rt1.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt1.c1) AND (UNLIKELY(rt1.c2)))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (rt1.c0) ORDER BY ((((((((((rt1.c0)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt1.c1) AND (UNLIKELY(rt1.c2)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN json_insert(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN x'' THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END, ((vt0.c0) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN json_insert(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN x'' THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END, ((vt0.c0) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN json_insert(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN x'' THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END, ((vt0.c0) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN json_insert(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN x'' THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END, ((vt0.c0) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) ORDER BY (x'035e' IN ()) ASC, ((((rt1.c1 COLLATE BINARY)AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (x'035e' IN ()) ASC, ((((rt1.c1 COLLATE BINARY)AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) ORDER BY (x'035e' IN ()) ASC, ((((rt1.c1 COLLATE BINARY)AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (x'035e' IN ()) ASC, ((((rt1.c1 COLLATE BINARY)AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) ORDER BY (x'035e' IN ()) ASC, ((((rt1.c1 COLLATE BINARY)AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (UPPER(((rt1.c1)>>(rt1.c0)))) ORDER BY HEX(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN 0.025025132987496534 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt1.c1)>>(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY HEX(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN 0.025025132987496534 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) ASC);
SELECT ALL * FROM rt1 WHERE (UPPER(((rt1.c1)>>(rt1.c0)))) ORDER BY HEX(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN 0.025025132987496534 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt1.c1)>>(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY HEX(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN 0.025025132987496534 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) ASC);
SELECT ALL * FROM rt1 WHERE (UPPER(((rt1.c1)>>(rt1.c0)))) ORDER BY HEX(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN 0.025025132987496534 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) ASC;
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(UPPER(DISTINCT vt0.c0))))OR(((x'f2f0') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(UPPER(DISTINCT vt0.c0))))OR(((x'f2f0') NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(UPPER(DISTINCT vt0.c0))))OR(((x'f2f0') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(UPPER(DISTINCT vt0.c0))))OR(((x'f2f0') NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(UPPER(DISTINCT vt0.c0))))OR(((x'f2f0') NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-1447538479'))))<=((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND ('-1447538479'))))<=((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-1447538479'))))<=((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND ('-1447538479'))))<=((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-1447538479'))))<=((vt0.c0 COLLATE BINARY))));
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 COLLATE NOCASE) NOTNULL)) ORDER BY ((json_object(rt1.c2, rt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (NULL))) AND (((NULL)<=(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((json_object(rt1.c2, rt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (NULL))) AND (((NULL)<=(rt1.c0)))) ASC);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 COLLATE NOCASE) NOTNULL)) ORDER BY ((json_object(rt1.c2, rt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (NULL))) AND (((NULL)<=(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((json_object(rt1.c2, rt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (NULL))) AND (((NULL)<=(rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD(DISTINCT CAST(vt0.c0 AS BLOB), 0.11843720303391436)) ORDER BY ((((((((((((((rt1.c2) ISNULL))OR(rt1.c0)))AND(((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 END)))OR(x'' COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(vt0.c0 AS BLOB), 0.11843720303391436)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((((rt1.c2) ISNULL))OR(rt1.c0)))AND(((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 END)))OR(x'' COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD(DISTINCT CAST(vt0.c0 AS BLOB), 0.11843720303391436)) ORDER BY ((((((((((((((rt1.c2) ISNULL))OR(rt1.c0)))AND(((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 END)))OR(x'' COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(vt0.c0 AS BLOB), 0.11843720303391436)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((((rt1.c2) ISNULL))OR(rt1.c0)))AND(((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 END)))OR(x'' COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD(DISTINCT CAST(vt0.c0 AS BLOB), 0.11843720303391436)) ORDER BY ((((((((((((((rt1.c2) ISNULL))OR(rt1.c0)))AND(((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 END)))OR(x'' COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((((~ (vt0.c0))))>((((vt0.c0) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((((~ (vt0.c0))))>((((vt0.c0) NOT NULL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((((~ (vt0.c0))))>((((vt0.c0) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((((~ (vt0.c0))))>((((vt0.c0) NOT NULL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((((~ (vt0.c0))))>((((vt0.c0) NOT NULL)))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))))<>((((x'')+(rt1.c1)))))) ORDER BY ((((LAST_INSERT_ROWID())AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c0 COLLATE RTRIM))  NULLS LAST, (((((vt0.c0))<=((rt1.c1))))>=((rt1.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))))!=((((x'')+(rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((LAST_INSERT_ROWID())AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c0 COLLATE RTRIM))  NULLS LAST, (((((vt0.c0))<=((rt1.c1))))>=((rt1.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))))<>((((x'')+(rt1.c1)))))) ORDER BY ((((LAST_INSERT_ROWID())AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c0 COLLATE RTRIM))  NULLS LAST, (((((vt0.c0))<=((rt1.c1))))>=((rt1.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))))!=((((x'')+(rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((LAST_INSERT_ROWID())AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c0 COLLATE RTRIM))  NULLS LAST, (((((vt0.c0))<=((rt1.c1))))>=((rt1.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))))<>((((x'')+(rt1.c1)))))) ORDER BY ((((LAST_INSERT_ROWID())AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c0 COLLATE RTRIM))  NULLS LAST, (((((vt0.c0))<=((rt1.c1))))>=((rt1.c2 IN ())))  NULLS LAST;
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))), LIKELIHOOD(DISTINCT rt1.c2, 0.7438252932790319)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))), LIKELIHOOD(DISTINCT rt1.c2, 0.7438252932790319))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))), LIKELIHOOD(DISTINCT rt1.c2, 0.7438252932790319)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))), LIKELIHOOD(DISTINCT rt1.c2, 0.7438252932790319))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))), LIKELIHOOD(DISTINCT rt1.c2, 0.7438252932790319)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((NULL)GLOB(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((NULL)GLOB(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c2))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((NULL)GLOB(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((NULL)GLOB(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c2))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((NULL)GLOB(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c2)));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))OR(((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))OR((+ (rt1.c2)))) WHERE ((((rt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))OR(((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))OR((+ (rt1.c2)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))OR(((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))OR((+ (rt1.c2)))) WHERE ((((rt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))OR(((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))OR((+ (rt1.c2)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))OR(((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))OR((+ (rt1.c2)))) WHERE ((((rt1.c0) IS TRUE) IN ()));
SELECT * FROM rt1 WHERE (CAST((+ (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((+ (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((+ (rt1.c1)) AS REAL));
SELECT * FROM vt0, rt1 WHERE ((((rt1.c2 COLLATE NOCASE))<=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY (- (UNLIKELY(DISTINCT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE NOCASE))<=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (UNLIKELY(DISTINCT NULL)))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c2 COLLATE NOCASE))<=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY (- (UNLIKELY(DISTINCT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE NOCASE))<=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (UNLIKELY(DISTINCT NULL)))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c2 COLLATE NOCASE))<=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY (- (UNLIKELY(DISTINCT NULL)))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (TYPEOF(DISTINCT (((rt1.c2, 1.546379137E9, rt1.c1))<((rt1.c2, rt1.c2, 1058906183))))) ORDER BY rt1.c0  NULLS FIRST, ((CAST(rt1.c2 AS INTEGER))*(CAST(rt1.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((rt1.c2, 1.546379137E9, rt1.c1))<((rt1.c2, rt1.c2, 1058906183))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0  NULLS FIRST, ((CAST(rt1.c2 AS INTEGER))*(CAST(rt1.c1 AS BLOB))) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (TYPEOF(DISTINCT (((rt1.c2, 1.546379137E9, rt1.c1))<((rt1.c2, rt1.c2, 1058906183))))) ORDER BY rt1.c0  NULLS FIRST, ((CAST(rt1.c2 AS INTEGER))*(CAST(rt1.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((rt1.c2, 1.546379137E9, rt1.c1))<((rt1.c2, rt1.c2, 1058906183))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0  NULLS FIRST, ((CAST(rt1.c2 AS INTEGER))*(CAST(rt1.c1 AS BLOB))) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (TYPEOF(DISTINCT (((rt1.c2, 1.546379137E9, rt1.c1))<((rt1.c2, rt1.c2, 1058906183))))) ORDER BY rt1.c0  NULLS FIRST, ((CAST(rt1.c2 AS INTEGER))*(CAST(rt1.c1 AS BLOB))) DESC;
SELECT * FROM rt1 WHERE ((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c0 IN ()));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS INTEGER))<<(((rt1.c2)IS NOT(rt1.c1))))) ORDER BY ((CAST(rt1.c0 AS TEXT))&(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS INTEGER))<<(((rt1.c2)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(rt1.c0 AS TEXT))&(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS INTEGER))<<(((rt1.c2)IS NOT(rt1.c1))))) ORDER BY ((CAST(rt1.c0 AS TEXT))&(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS INTEGER))<<(((rt1.c2)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(rt1.c0 AS TEXT))&(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS INTEGER))<<(((rt1.c2)IS NOT(rt1.c1))))) ORDER BY ((CAST(rt1.c0 AS TEXT))&(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM vt0 WHERE (((x'b611')<=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'b611')<=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'b611')<=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'b611')<=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'b611')<=(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1))) IS FALSE));
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((rt1.c0)&(vt0.c0)))>(((rt1.c2)<>(rt1.c2))))) ORDER BY (((CAST(rt1.c2 AS INTEGER)))<=((((rt1.c2) BETWEEN (0.15949400353475807) AND (rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)&(vt0.c0)))>(((rt1.c2)!=(rt1.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((CAST(rt1.c2 AS INTEGER)))<=((((rt1.c2) BETWEEN (0.15949400353475807) AND (rt1.c1))))) ASC);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((rt1.c0)&(vt0.c0)))>(((rt1.c2)<>(rt1.c2))))) ORDER BY (((CAST(rt1.c2 AS INTEGER)))<=((((rt1.c2) BETWEEN (0.15949400353475807) AND (rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)&(vt0.c0)))>(((rt1.c2)!=(rt1.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((CAST(rt1.c2 AS INTEGER)))<=((((rt1.c2) BETWEEN (0.15949400353475807) AND (rt1.c1))))) ASC);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((rt1.c0)&(vt0.c0)))>(((rt1.c2)<>(rt1.c2))))) ORDER BY (((CAST(rt1.c2 AS INTEGER)))<=((((rt1.c2) BETWEEN (0.15949400353475807) AND (rt1.c1))))) ASC;
SELECT * FROM rt1 WHERE (0.07677718327984107) ORDER BY CASE WHEN CAST(rt1.c1 AS REAL) THEN (((x'', rt1.c2, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2)) AND ((NULL, rt1.c1, rt1.c1))) WHEN (NOT (rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.07677718327984107) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c1 AS REAL) THEN (((x'', rt1.c2, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2)) AND ((NULL, rt1.c1, rt1.c1))) WHEN (NOT (rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 END ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (0.07677718327984107) ORDER BY CASE WHEN CAST(rt1.c1 AS REAL) THEN (((x'', rt1.c2, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2)) AND ((NULL, rt1.c1, rt1.c1))) WHEN (NOT (rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.07677718327984107) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c1 AS REAL) THEN (((x'', rt1.c2, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2)) AND ((NULL, rt1.c1, rt1.c1))) WHEN (NOT (rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 END ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (0.07677718327984107) ORDER BY CASE WHEN CAST(rt1.c1 AS REAL) THEN (((x'', rt1.c2, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2)) AND ((NULL, rt1.c1, rt1.c1))) WHEN (NOT (rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TYPEOF(vt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0)<>(vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0)!=(vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(vt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0)<>(vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0)!=(vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(vt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0)<>(vt0.c0))) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON LENGTH(rt1.c1) COLLATE BINARY WHERE (CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c0) NOT BETWEEN ('-1862084659') AND (rt1.c1)) THEN '-1327433755' COLLATE BINARY ELSE ((0.4620890363811374) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c0) NOT BETWEEN ('-1862084659') AND (rt1.c1)) THEN '-1327433755' COLLATE BINARY ELSE ((0.4620890363811374) NOTNULL) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON LENGTH(rt1.c1) COLLATE BINARY);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON LENGTH(rt1.c1) COLLATE BINARY WHERE (CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c0) NOT BETWEEN ('-1862084659') AND (rt1.c1)) THEN '-1327433755' COLLATE BINARY ELSE ((0.4620890363811374) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c0) NOT BETWEEN ('-1862084659') AND (rt1.c1)) THEN '-1327433755' COLLATE BINARY ELSE ((0.4620890363811374) NOTNULL) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON LENGTH(rt1.c1) COLLATE BINARY);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON LENGTH(rt1.c1) COLLATE BINARY WHERE (CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c0) NOT BETWEEN ('-1862084659') AND (rt1.c1)) THEN '-1327433755' COLLATE BINARY ELSE ((0.4620890363811374) NOTNULL) END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, vt0.c0))<>((rt1.c0, vt0.c0, rt1.c0)))  WHEN NULL THEN (+ (rt1.c0)) WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (NOT (rt1.c0)) WHEN ABS(DISTINCT rt1.c2) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c1)))AND(NULL)) END WHERE (((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) IS TRUE)) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, vt0.c0))<>((rt1.c0, vt0.c0, rt1.c0)))  WHEN NULL THEN (+ (rt1.c0)) WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (NOT (rt1.c0)) WHEN ABS(DISTINCT rt1.c2) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c1)))AND(NULL)) END ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, vt0.c0))<>((rt1.c0, vt0.c0, rt1.c0)))  WHEN NULL THEN (+ (rt1.c0)) WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (NOT (rt1.c0)) WHEN ABS(DISTINCT rt1.c2) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c1)))AND(NULL)) END WHERE (((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) IS TRUE)) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, vt0.c0))<>((rt1.c0, vt0.c0, rt1.c0)))  WHEN NULL THEN (+ (rt1.c0)) WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (NOT (rt1.c0)) WHEN ABS(DISTINCT rt1.c2) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c1)))AND(NULL)) END ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, vt0.c0))<>((rt1.c0, vt0.c0, rt1.c0)))  WHEN NULL THEN (+ (rt1.c0)) WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (NOT (rt1.c0)) WHEN ABS(DISTINCT rt1.c2) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c1)))AND(NULL)) END WHERE (((((((rt1.c2)OR(vt0.c0)))AND(rt1.c1))) IS TRUE)) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((- (0.9251897794840006))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL)  NULLS FIRST, UNLIKELY(DISTINCT TRIM(DISTINCT vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.9251897794840006))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL)  NULLS FIRST, UNLIKELY(DISTINCT TRIM(DISTINCT vt0.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (0.9251897794840006))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL)  NULLS FIRST, UNLIKELY(DISTINCT TRIM(DISTINCT vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.9251897794840006))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL)  NULLS FIRST, UNLIKELY(DISTINCT TRIM(DISTINCT vt0.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (0.9251897794840006))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL)  NULLS FIRST, UNLIKELY(DISTINCT TRIM(DISTINCT vt0.c0))  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (((('_ar''9䗶ն') NOTNULL) IN ())) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('_ar''9䗶ն') NOTNULL) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((('_ar''9䗶ն') NOTNULL) IN ())) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('_ar''9䗶ն') NOTNULL) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((('_ar''9䗶ն') NOTNULL) IN ())) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE (NULLIF(CAST(rt1.c0 AS BLOB), ((vt0.c0) NOT NULL))) ORDER BY ((rt1.c2 IN (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(rt1.c0 AS BLOB), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c2 IN (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (NULLIF(CAST(rt1.c0 AS BLOB), ((vt0.c0) NOT NULL))) ORDER BY ((rt1.c2 IN (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(rt1.c0 AS BLOB), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c2 IN (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (NULLIF(CAST(rt1.c0 AS BLOB), ((vt0.c0) NOT NULL))) ORDER BY ((rt1.c2 IN (vt0.c0)) IN ())  NULLS LAST;
SELECT * FROM vt0 WHERE (TRIM((((0.6859360159447156))==((vt0.c0))))) ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((0.6859360159447156))==((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (TRIM((((0.6859360159447156))==((vt0.c0))))) ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((0.6859360159447156))==((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (TRIM((((0.6859360159447156))==((vt0.c0))))) ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END, CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END) WHERE ((NOT (CASE WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY CASE rt1.c1 COLLATE NOCASE  WHEN CAST(rt1.c1 AS BLOB) THEN json_array_length(rt1.c0, vt0.c0) ELSE ((0.9147591561231283) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END, CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END) ORDER BY CASE rt1.c1 COLLATE NOCASE  WHEN CAST(rt1.c1 AS BLOB) THEN json_array_length(rt1.c0, vt0.c0) ELSE ((0.9147591561231283) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END, CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END) WHERE ((NOT (CASE WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY CASE rt1.c1 COLLATE NOCASE  WHEN CAST(rt1.c1 AS BLOB) THEN json_array_length(rt1.c0, vt0.c0) ELSE ((0.9147591561231283) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END, CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END) ORDER BY CASE rt1.c1 COLLATE NOCASE  WHEN CAST(rt1.c1 AS BLOB) THEN json_array_length(rt1.c0, vt0.c0) ELSE ((0.9147591561231283) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END, CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END) WHERE ((NOT (CASE WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY CASE rt1.c1 COLLATE NOCASE  WHEN CAST(rt1.c1 AS BLOB) THEN json_array_length(rt1.c0, vt0.c0) ELSE ((0.9147591561231283) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (HEX((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt1.c0 IN ()))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (HEX((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt1.c0 IN ()))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (HEX((rt1.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((rt1.c0))>((rt1.c2))))OR(UPPER(DISTINCT rt1.c2))))OR(((0.7002751903819506)<<(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0))>((rt1.c2))))OR(UPPER(DISTINCT rt1.c2))))OR(((0.7002751903819506)<<(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((rt1.c0))>((rt1.c2))))OR(UPPER(DISTINCT rt1.c2))))OR(((0.7002751903819506)<<(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0))>((rt1.c2))))OR(UPPER(DISTINCT rt1.c2))))OR(((0.7002751903819506)<<(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((rt1.c0))>((rt1.c2))))OR(UPPER(DISTINCT rt1.c2))))OR(((0.7002751903819506)<<(rt1.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS TEXT))*(((rt1.c2) IS FALSE)))) ORDER BY ((CAST(rt1.c1 AS TEXT))+(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) ASC, CAST(LIKELIHOOD(vt0.c0, 0.9179478650011487) AS TEXT), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT))*(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(rt1.c1 AS TEXT))+(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) ASC, CAST(LIKELIHOOD(vt0.c0, 0.9179478650011487) AS TEXT), vt0.c0 ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS TEXT))*(((rt1.c2) IS FALSE)))) ORDER BY ((CAST(rt1.c1 AS TEXT))+(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) ASC, CAST(LIKELIHOOD(vt0.c0, 0.9179478650011487) AS TEXT), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT))*(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(rt1.c1 AS TEXT))+(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) ASC, CAST(LIKELIHOOD(vt0.c0, 0.9179478650011487) AS TEXT), vt0.c0 ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS TEXT))*(((rt1.c2) IS FALSE)))) ORDER BY ((CAST(rt1.c1 AS TEXT))+(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) ASC, CAST(LIKELIHOOD(vt0.c0, 0.9179478650011487) AS TEXT), vt0.c0 ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (- (rt1.c1))  WHEN CAST(rt1.c2 AS INTEGER) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)OR(0.410876872564893)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN NULL WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)) THEN (rt1.c1 IN ()) WHEN rt1.c1 THEN (((vt0.c0))>=((rt1.c0))) WHEN ((rt1.c1)IS NOT(vt0.c0)) THEN SUBSTR(0Xffffffffb3bd596c, rt1.c0) WHEN ((rt1.c2)>>(rt1.c1)) THEN (rt1.c1 IN (rt1.c1, rt1.c2)) WHEN ((rt1.c2)!=(vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END WHEN ((x'425f') BETWEEN (rt1.c2) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((rt1.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt1.c1))  WHEN CAST(rt1.c2 AS INTEGER) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)OR(0.410876872564893)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN NULL WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)) THEN (rt1.c1 IN ()) WHEN rt1.c1 THEN (((vt0.c0))>=((rt1.c0))) WHEN ((rt1.c1)IS NOT(vt0.c0)) THEN SUBSTR(0Xffffffffb3bd596c, rt1.c0) WHEN ((rt1.c2)>>(rt1.c1)) THEN (rt1.c1 IN (rt1.c1, rt1.c2)) WHEN ((rt1.c2)!=(vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END WHEN ((x'425f') BETWEEN (rt1.c2) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((rt1.c1) IS TRUE) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (- (rt1.c1))  WHEN CAST(rt1.c2 AS INTEGER) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)OR(0.410876872564893)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN NULL WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)) THEN (rt1.c1 IN ()) WHEN rt1.c1 THEN (((vt0.c0))>=((rt1.c0))) WHEN ((rt1.c1)IS NOT(vt0.c0)) THEN SUBSTR(0Xffffffffb3bd596c, rt1.c0) WHEN ((rt1.c2)>>(rt1.c1)) THEN (rt1.c1 IN (rt1.c1, rt1.c2)) WHEN ((rt1.c2)!=(vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END WHEN ((x'425f') BETWEEN (rt1.c2) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((rt1.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt1.c1))  WHEN CAST(rt1.c2 AS INTEGER) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)OR(0.410876872564893)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN NULL WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)) THEN (rt1.c1 IN ()) WHEN rt1.c1 THEN (((vt0.c0))>=((rt1.c0))) WHEN ((rt1.c1)IS NOT(vt0.c0)) THEN SUBSTR(0Xffffffffb3bd596c, rt1.c0) WHEN ((rt1.c2)>>(rt1.c1)) THEN (rt1.c1 IN (rt1.c1, rt1.c2)) WHEN ((rt1.c2)!=(vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END WHEN ((x'425f') BETWEEN (rt1.c2) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((rt1.c1) IS TRUE) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (- (rt1.c1))  WHEN CAST(rt1.c2 AS INTEGER) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN (~ (vt0.c0)) WHEN ((((((((vt0.c0)OR(0.410876872564893)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN NULL WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)) THEN (rt1.c1 IN ()) WHEN rt1.c1 THEN (((vt0.c0))>=((rt1.c0))) WHEN ((rt1.c1)IS NOT(vt0.c0)) THEN SUBSTR(0Xffffffffb3bd596c, rt1.c0) WHEN ((rt1.c2)>>(rt1.c1)) THEN (rt1.c1 IN (rt1.c1, rt1.c2)) WHEN ((rt1.c2)!=(vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END WHEN ((x'425f') BETWEEN (rt1.c2) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((rt1.c1) IS TRUE) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY CAST(((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) AS BLOB), CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) AS BLOB), CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY CAST(((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) AS BLOB), CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) AS BLOB), CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY CAST(((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) AS BLOB), CAST(((vt0.c0) NOT NULL) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT * FROM rt1 WHERE (((x'')<<(NULL)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')<<(NULL)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((x'')<<(NULL)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')<<(NULL)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((x'')<<(NULL)) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) DESC);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) DESC);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR(vt0.c0)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) DESC;
SELECT ALL * FROM vt0, rt1 WHERE (CASE ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))  WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c0)/(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))  WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c0)/(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))  WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c0)/(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))  WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c0)/(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))  WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN ((rt1.c0)/(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((vt0.c0, rt1.c2, vt0.c0)) BETWEEN ((vt0.c0, rt1.c0, NULL)) AND ((rt1.c2, rt1.c1, vt0.c0))))OR(((rt1.c0)||(rt1.c1)))))OR((rt1.c0 IN (rt1.c2))))) ORDER BY ((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, rt1.c2, vt0.c0)) BETWEEN ((vt0.c0, rt1.c0, NULL)) AND ((rt1.c2, rt1.c1, vt0.c0))))OR(((rt1.c0)||(rt1.c1)))))OR((rt1.c0 IN (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((vt0.c0, rt1.c2, vt0.c0)) BETWEEN ((vt0.c0, rt1.c0, NULL)) AND ((rt1.c2, rt1.c1, vt0.c0))))OR(((rt1.c0)||(rt1.c1)))))OR((rt1.c0 IN (rt1.c2))))) ORDER BY ((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, rt1.c2, vt0.c0)) BETWEEN ((vt0.c0, rt1.c0, NULL)) AND ((rt1.c2, rt1.c1, vt0.c0))))OR(((rt1.c0)||(rt1.c1)))))OR((rt1.c0 IN (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((vt0.c0, rt1.c2, vt0.c0)) BETWEEN ((vt0.c0, rt1.c0, NULL)) AND ((rt1.c2, rt1.c1, vt0.c0))))OR(((rt1.c0)||(rt1.c1)))))OR((rt1.c0 IN (rt1.c2))))) ORDER BY ((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0))))));
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE ((- (rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE ((- (rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE ((- (rt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (((((CAST(0xffffffffb0f3d939 AS NUMERIC))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.43542560904167094 END)))OR(NULL))) ORDER BY ((- (rt1.c0)) IN ()) ASC, rtreenode((rt1.c2 IN ()), ((rt1.c0)IS NOT(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(0xffffffffb0f3d939 AS NUMERIC))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.43542560904167094 END)))OR(NULL))) IS TRUE)  as count FROM rt1 ORDER BY ((- (rt1.c0)) IN ()) ASC, rtreenode((rt1.c2 IN ()), ((rt1.c0)IS NOT(rt1.c1))));
SELECT ALL * FROM rt1 WHERE (((((CAST(0xffffffffb0f3d939 AS NUMERIC))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.43542560904167094 END)))OR(NULL))) ORDER BY ((- (rt1.c0)) IN ()) ASC, rtreenode((rt1.c2 IN ()), ((rt1.c0)IS NOT(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(0xffffffffb0f3d939 AS NUMERIC))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.43542560904167094 END)))OR(NULL))) IS TRUE)  as count FROM rt1 ORDER BY ((- (rt1.c0)) IN ()) ASC, rtreenode((rt1.c2 IN ()), ((rt1.c0)IS NOT(rt1.c1))));
SELECT ALL * FROM rt1 WHERE (((((CAST(0xffffffffb0f3d939 AS NUMERIC))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.43542560904167094 END)))OR(NULL))) ORDER BY ((- (rt1.c0)) IN ()) ASC, rtreenode((rt1.c2 IN ()), ((rt1.c0)IS NOT(rt1.c1)));
SELECT * FROM vt0, rt1 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c0)>>(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c0)>>(rt1.c0)))));
SELECT * FROM vt0, rt1 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c0)>>(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c0)>>(rt1.c0)))));
SELECT * FROM vt0, rt1 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c0)>>(rt1.c0))));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) NOTNULL)) BETWEEN ((rt1.c0 IN ())) AND (LOWER(DISTINCT ',5H')))) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c2)OR(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN rt1.c0 END DESC, (((((rt1.c1 IN (rt1.c1)))OR(CAST(vt0.c0 AS BLOB))))OR(((rt1.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL)) BETWEEN ((rt1.c0 IN ())) AND (LOWER(DISTINCT ',5H')))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c2)OR(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN rt1.c0 END DESC, (((((rt1.c1 IN (rt1.c1)))OR(CAST(vt0.c0 AS BLOB))))OR(((rt1.c1) NOT NULL)))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) NOTNULL)) BETWEEN ((rt1.c0 IN ())) AND (LOWER(DISTINCT ',5H')))) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c2)OR(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN rt1.c0 END DESC, (((((rt1.c1 IN (rt1.c1)))OR(CAST(vt0.c0 AS BLOB))))OR(((rt1.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL)) BETWEEN ((rt1.c0 IN ())) AND (LOWER(DISTINCT ',5H')))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c2)OR(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN rt1.c0 END DESC, (((((rt1.c1 IN (rt1.c1)))OR(CAST(vt0.c0 AS BLOB))))OR(((rt1.c1) NOT NULL)))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) NOTNULL)) BETWEEN ((rt1.c0 IN ())) AND (LOWER(DISTINCT ',5H')))) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c2)OR(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN rt1.c0 END DESC, (((((rt1.c1 IN (rt1.c1)))OR(CAST(vt0.c0 AS BLOB))))OR(((rt1.c1) NOT NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (CAST((- (x'')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (x'')) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((- (x'')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (x'')) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((- (x'')) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(UNLIKELY(DISTINCT vt0.c0) AS TEXT) ASC  NULLS LAST, ((((vt0.c0)>>('-1965686687'))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (TRIM(DISTINCT vt0.c0, vt0.c0))), vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(UNLIKELY(DISTINCT vt0.c0) AS TEXT) ASC  NULLS LAST, ((((vt0.c0)>>('-1965686687'))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (TRIM(DISTINCT vt0.c0, vt0.c0))), vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(UNLIKELY(DISTINCT vt0.c0) AS TEXT) ASC  NULLS LAST, ((((vt0.c0)>>('-1965686687'))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (TRIM(DISTINCT vt0.c0, vt0.c0))), vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(UNLIKELY(DISTINCT vt0.c0) AS TEXT) ASC  NULLS LAST, ((((vt0.c0)>>('-1965686687'))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (TRIM(DISTINCT vt0.c0, vt0.c0))), vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(UNLIKELY(DISTINCT vt0.c0) AS TEXT) ASC  NULLS LAST, ((((vt0.c0)>>('-1965686687'))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (TRIM(DISTINCT vt0.c0, vt0.c0))), vt0.c0 DESC;
SELECT ALL * FROM vt0, rt1 WHERE (-5.70789256E8) ORDER BY rt1.c2 ASC, ((((rt1.c2) IS TRUE))*(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-5.70789256E8) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 ASC, ((((rt1.c2) IS TRUE))*(rt1.c0))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (-5.70789256E8) ORDER BY rt1.c2 ASC, ((((rt1.c2) IS TRUE))*(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-5.70789256E8) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 ASC, ((((rt1.c2) IS TRUE))*(rt1.c0))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (-5.70789256E8) ORDER BY rt1.c2 ASC, ((((rt1.c2) IS TRUE))*(rt1.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (((((((((LOWER(vt0.c0))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)&(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY CAST(((((vt0.c0)AND(0.3120247842828271)))OR(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0)IS(vt0.c0)) IN ())  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(vt0.c0))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)&(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(0.3120247842828271)))OR(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0)IS(vt0.c0)) IN ())  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE (((((((((LOWER(vt0.c0))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)&(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY CAST(((((vt0.c0)AND(0.3120247842828271)))OR(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0)IS(vt0.c0)) IN ())  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(vt0.c0))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)&(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(0.3120247842828271)))OR(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0)IS(vt0.c0)) IN ())  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE (((((((((LOWER(vt0.c0))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)&(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY CAST(((((vt0.c0)AND(0.3120247842828271)))OR(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0)IS(vt0.c0)) IN ())  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM DESC;
SELECT * FROM rt1, vt0 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)) IN (((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)) IN (((NULL) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)) IN (((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)) IN (((NULL) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)) IN (((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT * FROM rt1 WHERE (CAST(((rt1.c2)+(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)+(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c2)+(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)+(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c2)+(rt1.c2)) AS REAL));
SELECT ALL * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '785064130' THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, ((vt0.c0)<(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<(vt0.c0)))) ORDER BY ((((((((SUBSTR(vt0.c0, vt0.c0))AND((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))  NULLS FIRST, CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST, ((vt0.c0)-((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '785064130' THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, ((vt0.c0)<(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((SUBSTR(vt0.c0, vt0.c0))AND((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))  NULLS FIRST, CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST, ((vt0.c0)-((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '785064130' THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, ((vt0.c0)<(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<(vt0.c0)))) ORDER BY ((((((((SUBSTR(vt0.c0, vt0.c0))AND((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))  NULLS FIRST, CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST, ((vt0.c0)-((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '785064130' THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, ((vt0.c0)<(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((SUBSTR(vt0.c0, vt0.c0))AND((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))  NULLS FIRST, CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST, ((vt0.c0)-((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '785064130' THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, ((vt0.c0)<(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<(vt0.c0)))) ORDER BY ((((((((SUBSTR(vt0.c0, vt0.c0))AND((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))  NULLS FIRST, CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST, ((vt0.c0)-((+ (vt0.c0))));
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME((rt1.c2 IN ()), QUOTE(rt1.c2), ((rt1.c0) NOTNULL))) ORDER BY (+ (((rt1.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((STRFTIME((rt1.c2 IN ()), QUOTE(rt1.c2), ((rt1.c0) NOTNULL))) IS TRUE)  as count FROM rt1 ORDER BY (+ (((rt1.c1) IS FALSE))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME((rt1.c2 IN ()), QUOTE(rt1.c2), ((rt1.c0) NOTNULL))) ORDER BY (+ (((rt1.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((STRFTIME((rt1.c2 IN ()), QUOTE(rt1.c2), ((rt1.c0) NOTNULL))) IS TRUE)  as count FROM rt1 ORDER BY (+ (((rt1.c1) IS FALSE))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (STRFTIME((rt1.c2 IN ()), QUOTE(rt1.c2), ((rt1.c0) NOTNULL))) ORDER BY (+ (((rt1.c1) IS FALSE))) ASC;
SELECT ALL * FROM rt1, vt0 WHERE (((((UPPER(rt1.c2))OR(((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR((('0.03603192208321848') NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((UPPER(rt1.c2))OR(((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR((('0.03603192208321848') NOT BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((UPPER(rt1.c2))OR(((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR((('0.03603192208321848') NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((UPPER(rt1.c2))OR(((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR((('0.03603192208321848') NOT BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((UPPER(rt1.c2))OR(((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR((('0.03603192208321848') NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT * FROM rt1 WHERE (CASE ((rt1.c0) ISNULL)  WHEN (((rt1.c0))>((rt1.c2))) THEN NULL WHEN ((rt1.c2)OR(rt1.c1)) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) WHEN (NOT (x'')) THEN rt1.c1 WHEN CAST(rt1.c2 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN ((((((((NULL)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c1 END) ORDER BY (~ (((rt1.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) ISNULL)  WHEN (((rt1.c0))>((rt1.c2))) THEN NULL WHEN ((rt1.c2)OR(rt1.c1)) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) WHEN (NOT (x'')) THEN rt1.c1 WHEN CAST(rt1.c2 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN ((((((((NULL)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c1 END) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE ((rt1.c0) ISNULL)  WHEN (((rt1.c0))>((rt1.c2))) THEN NULL WHEN ((rt1.c2)OR(rt1.c1)) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) WHEN (NOT (x'')) THEN rt1.c1 WHEN CAST(rt1.c2 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN ((((((((NULL)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c1 END) ORDER BY (~ (((rt1.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) ISNULL)  WHEN (((rt1.c0))>((rt1.c2))) THEN NULL WHEN ((rt1.c2)OR(rt1.c1)) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) WHEN (NOT (x'')) THEN rt1.c1 WHEN CAST(rt1.c2 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN ((((((((NULL)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c1 END) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE ((rt1.c0) ISNULL)  WHEN (((rt1.c0))>((rt1.c2))) THEN NULL WHEN ((rt1.c2)OR(rt1.c1)) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) WHEN (NOT (x'')) THEN rt1.c1 WHEN CAST(rt1.c2 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN ((((((((NULL)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c1 END) ORDER BY (~ (((rt1.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2 IN ()))AND(rt1.c0)))AND(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN ()))AND(rt1.c0)))AND(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2 IN ()))AND(rt1.c0)))AND(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN ()))AND(rt1.c0)))AND(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2 IN ()))AND(rt1.c0)))AND(rt1.c2)));
SELECT * FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE BINARY)|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE BINARY)|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE BINARY)|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)*(rt1.c2)))) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))))) ORDER BY ((((rt1.c2)OR(rt1.c1))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND ((rt1.c1 IN ()))) ASC  NULLS LAST, (NOT (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt1.c1)*(rt1.c2)))) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)OR(rt1.c1))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND ((rt1.c1 IN ()))) ASC  NULLS LAST, (NOT (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)*(rt1.c2)))) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))))) ORDER BY ((((rt1.c2)OR(rt1.c1))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND ((rt1.c1 IN ()))) ASC  NULLS LAST, (NOT (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt1.c1)*(rt1.c2)))) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)OR(rt1.c1))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND ((rt1.c1 IN ()))) ASC  NULLS LAST, (NOT (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)*(rt1.c2)))) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))))) ORDER BY ((((rt1.c2)OR(rt1.c1))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND ((rt1.c1 IN ()))) ASC  NULLS LAST, (NOT (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) DESC;
SELECT COUNT(*) FROM rt1 NOT INDEXED, vt0 WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)*((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)*((+ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1 NOT INDEXED, vt0 WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)*((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)*((+ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1 NOT INDEXED, vt0 WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)*((+ (rt1.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE (load_extension(rt1.c0, rt1.c1)) ORDER BY (((- (vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt1.c0, rt1.c1)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((- (vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (load_extension(rt1.c0, rt1.c1)) ORDER BY (((- (vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt1.c0, rt1.c1)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((- (vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN (((rt1.c2)-(rt1.c2))))) ORDER BY ((0.6900318514536964) BETWEEN ((((rt1.c2, rt1.c0, rt1.c0))<((rt1.c1, vt0.c0, rt1.c0)))) AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN (((rt1.c2)-(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((0.6900318514536964) BETWEEN ((((rt1.c2, rt1.c0, rt1.c0))<((rt1.c1, vt0.c0, rt1.c0)))) AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN (((rt1.c2)-(rt1.c2))))) ORDER BY ((0.6900318514536964) BETWEEN ((((rt1.c2, rt1.c0, rt1.c0))<((rt1.c1, vt0.c0, rt1.c0)))) AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN (((rt1.c2)-(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((0.6900318514536964) BETWEEN ((((rt1.c2, rt1.c0, rt1.c0))<((rt1.c1, vt0.c0, rt1.c0)))) AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN (((rt1.c2)-(rt1.c2))))) ORDER BY ((0.6900318514536964) BETWEEN ((((rt1.c2, rt1.c0, rt1.c0))<((rt1.c1, vt0.c0, rt1.c0)))) AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)<<(vt0.c0)))%(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<<(vt0.c0)))%(x''))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)<<(vt0.c0)))%(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<<(vt0.c0)))%(x''))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)<<(vt0.c0)))%(x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM rt1, vt0 WHERE (LIKE(CASE WHEN rt1.c2 THEN rt1.c1 END, rt1.c2, '!'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CASE WHEN rt1.c2 THEN rt1.c1 END, rt1.c2, '!')) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (LIKE(CASE WHEN rt1.c2 THEN rt1.c1 END, rt1.c2, '!'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CASE WHEN rt1.c2 THEN rt1.c1 END, rt1.c2, '!')) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (LIKE(CASE WHEN rt1.c2 THEN rt1.c1 END, rt1.c2, '!'));
SELECT ALL COUNT(*) FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'3c87')) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'3c87')) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'3c87')) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'3c87')) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'3c87')) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) AND ((- (vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS BLOB))<=(((rt1.c2) NOTNULL)))) ORDER BY ((((((((((rt1.c1) NOTNULL))OR(rt1.c1)))OR(CHAR('-1067645060'))))OR(0.8982820572022239)))OR((+ (rt1.c1)))) DESC  NULLS FIRST, (rt1.c1 COLLATE NOCASE IN ((+ (rt1.c1)), ((rt1.c0)==(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB))<=(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c1) NOTNULL))OR(rt1.c1)))OR(CHAR('-1067645060'))))OR(0.8982820572022239)))OR((+ (rt1.c1)))) DESC  NULLS FIRST, (rt1.c1 COLLATE NOCASE IN ((+ (rt1.c1)), ((rt1.c0)=(rt1.c2)))) ASC);
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS BLOB))<=(((rt1.c2) NOTNULL)))) ORDER BY ((((((((((rt1.c1) NOTNULL))OR(rt1.c1)))OR(CHAR('-1067645060'))))OR(0.8982820572022239)))OR((+ (rt1.c1)))) DESC  NULLS FIRST, (rt1.c1 COLLATE NOCASE IN ((+ (rt1.c1)), ((rt1.c0)==(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB))<=(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c1) NOTNULL))OR(rt1.c1)))OR(CHAR('-1067645060'))))OR(0.8982820572022239)))OR((+ (rt1.c1)))) DESC  NULLS FIRST, (rt1.c1 COLLATE NOCASE IN ((+ (rt1.c1)), ((rt1.c0)=(rt1.c2)))) ASC);
SELECT * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS BLOB))<=(((rt1.c2) NOTNULL)))) ORDER BY ((((((((((rt1.c1) NOTNULL))OR(rt1.c1)))OR(CHAR('-1067645060'))))OR(0.8982820572022239)))OR((+ (rt1.c1)))) DESC  NULLS FIRST, (rt1.c1 COLLATE NOCASE IN ((+ (rt1.c1)), ((rt1.c0)==(rt1.c2)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))IS NOT(((rt1.c2) NOT BETWEEN (0.4547885241123176) AND (rt1.c1))))) ORDER BY (~ (rt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))IS NOT(((rt1.c2) NOT BETWEEN (0.4547885241123176) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c1)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))IS NOT(((rt1.c2) NOT BETWEEN (0.4547885241123176) AND (rt1.c1))))) ORDER BY (~ (rt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))IS NOT(((rt1.c2) NOT BETWEEN (0.4547885241123176) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c1)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))IS NOT(((rt1.c2) NOT BETWEEN (0.4547885241123176) AND (rt1.c1))))) ORDER BY (~ (rt1.c1)) COLLATE RTRIM ASC;
SELECT * FROM rt1, vt0 WHERE ((- (((rt1.c0)-(rt1.c0))))) ORDER BY '1725877499'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0)-(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '1725877499'  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((- (((rt1.c0)-(rt1.c0))))) ORDER BY '1725877499'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0)-(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '1725877499'  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((- (((rt1.c0)-(rt1.c0))))) ORDER BY '1725877499'  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt1 ON rt1.c1 WHERE (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END COLLATE BINARY) ORDER BY UPPER(DISTINCT (~ (rt1.c1))) ASC, ((- (vt0.c0)) IN ((rt1.c0 IN (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON rt1.c1 ORDER BY UPPER(DISTINCT (~ (rt1.c1))) ASC, ((- (vt0.c0)) IN ((rt1.c0 IN (rt1.c1))))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt1 ON rt1.c1 WHERE (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END COLLATE BINARY) ORDER BY UPPER(DISTINCT (~ (rt1.c1))) ASC, ((- (vt0.c0)) IN ((rt1.c0 IN (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON rt1.c1 ORDER BY UPPER(DISTINCT (~ (rt1.c1))) ASC, ((- (vt0.c0)) IN ((rt1.c0 IN (rt1.c1))))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt1 ON rt1.c1 WHERE (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END COLLATE BINARY) ORDER BY UPPER(DISTINCT (~ (rt1.c1))) ASC, ((- (vt0.c0)) IN ((rt1.c0 IN (rt1.c1))))  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)=(rt1.c2)))LIKE(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)GLOB(json_array_length(rt1.c1, vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)=(rt1.c2)))LIKE(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((vt0.c0 COLLATE RTRIM)GLOB(json_array_length(rt1.c1, vt0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)=(rt1.c2)))LIKE(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)GLOB(json_array_length(rt1.c1, vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)=(rt1.c2)))LIKE(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((vt0.c0 COLLATE RTRIM)GLOB(json_array_length(rt1.c1, vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((+ (((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((+ (((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((+ (((rt1.c1) IS TRUE))));
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((rt1.c2 IN (rt1.c0))))) ORDER BY ((((rt1.c1)>(rt1.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c2 IN (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>(rt1.c2))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((rt1.c2 IN (rt1.c0))))) ORDER BY ((((rt1.c1)>(rt1.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c2 IN (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>(rt1.c2))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((rt1.c2 IN (rt1.c0))))) ORDER BY ((((rt1.c1)>(rt1.c2))) IS TRUE) ASC;
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON rt1.c2 COLLATE NOCASE WHERE (0.5263088205488816);
SELECT SUM(count) FROM (SELECT ALL ((0.5263088205488816) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON rt1.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON rt1.c2 COLLATE NOCASE WHERE (0.5263088205488816);
SELECT SUM(count) FROM (SELECT ALL ((0.5263088205488816) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON rt1.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON rt1.c2 COLLATE NOCASE WHERE (0.5263088205488816);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN rt1.c1 THEN NULL COLLATE NOCASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((rt1.c0)GLOB(rt1.c2)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((rt1.c1)+(vt0.c0)) THEN ((vt0.c0)|(0X5e411b08)) WHEN ((rt1.c0) ISNULL) THEN 0.20358970364958862 END) ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(((x'730c') NOT BETWEEN (vt0.c0) AND (NULL)))))OR(((rt1.c1)=(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 THEN NULL COLLATE NOCASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((rt1.c0)GLOB(rt1.c2)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((rt1.c1)+(vt0.c0)) THEN ((vt0.c0)|(0x5e411b08)) WHEN ((rt1.c0) ISNULL) THEN 0.20358970364958862 END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(((x'730c') NOT BETWEEN (vt0.c0) AND (NULL)))))OR(((rt1.c1)=(rt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN rt1.c1 THEN NULL COLLATE NOCASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((rt1.c0)GLOB(rt1.c2)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((rt1.c1)+(vt0.c0)) THEN ((vt0.c0)|(0X5e411b08)) WHEN ((rt1.c0) ISNULL) THEN 0.20358970364958862 END) ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(((x'730c') NOT BETWEEN (vt0.c0) AND (NULL)))))OR(((rt1.c1)=(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 THEN NULL COLLATE NOCASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((rt1.c0)GLOB(rt1.c2)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((rt1.c1)+(vt0.c0)) THEN ((vt0.c0)|(0x5e411b08)) WHEN ((rt1.c0) ISNULL) THEN 0.20358970364958862 END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(((x'730c') NOT BETWEEN (vt0.c0) AND (NULL)))))OR(((rt1.c1)=(rt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN rt1.c1 THEN NULL COLLATE NOCASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((rt1.c0)GLOB(rt1.c2)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((rt1.c1)+(vt0.c0)) THEN ((vt0.c0)|(0X5e411b08)) WHEN ((rt1.c0) ISNULL) THEN 0.20358970364958862 END) ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(((x'730c') NOT BETWEEN (vt0.c0) AND (NULL)))))OR(((rt1.c1)=(rt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)||(rt1.c2))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))OR(((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)||(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))OR(((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)||(rt1.c2))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))OR(((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)||(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))OR(((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt1.c2)||(rt1.c2))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))OR(((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) COLLATE NOCASE WHERE (CAST(rt1.c2 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) COLLATE NOCASE WHERE (CAST(rt1.c2 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON (NOT (rt1.c2)) COLLATE NOCASE WHERE (CAST(rt1.c2 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2)<(rt1.c2)) AS INTEGER)) ORDER BY CAST(((rt1.c1)<=(rt1.c1)) AS TEXT)  NULLS FIRST, rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)<(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1)<=(rt1.c1)) AS TEXT)  NULLS FIRST, rt1.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2)<(rt1.c2)) AS INTEGER)) ORDER BY CAST(((rt1.c1)<=(rt1.c1)) AS TEXT)  NULLS FIRST, rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)<(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1)<=(rt1.c1)) AS TEXT)  NULLS FIRST, rt1.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2)<(rt1.c2)) AS INTEGER)) ORDER BY CAST(((rt1.c1)<=(rt1.c1)) AS TEXT)  NULLS FIRST, rt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN ((rt1.c1)&(rt1.c2)) END) ORDER BY (((rt1.c0 IN (rt1.c2)))AND(((rt1.c1)AND(0X7e0e0d0c))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c0)) THEN ((rt1.c1)&(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN (rt1.c2)))AND(((rt1.c1)AND(0X7e0e0d0c)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN ((rt1.c1)&(rt1.c2)) END) ORDER BY (((rt1.c0 IN (rt1.c2)))AND(((rt1.c1)AND(0X7e0e0d0c))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c0)) THEN ((rt1.c1)&(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN (rt1.c2)))AND(((rt1.c1)AND(0X7e0e0d0c)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN ((rt1.c1)&(rt1.c2)) END) ORDER BY (((rt1.c0 IN (rt1.c2)))AND(((rt1.c1)AND(0X7e0e0d0c))));
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(0.05545692725983287)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(0.05545692725983287)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(0.05545692725983287)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(0.05545692725983287)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(0.05545692725983287)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))) IS FALSE));
SELECT * FROM vt0, rt1 WHERE (CAST((rt1.c0 IN ()) AS BLOB)) ORDER BY (- ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (CAST((rt1.c0 IN ()) AS BLOB)) ORDER BY (- ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (CAST((rt1.c0 IN ()) AS BLOB)) ORDER BY (- ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT NULL) END, (((vt0.c0)LIKE('O5')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT NULL) END, (((vt0.c0)LIKE('O5')) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT NULL) END, (((vt0.c0)LIKE('O5')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT NULL) END, (((vt0.c0)LIKE('O5')) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT NULL) END, (((vt0.c0)LIKE('O5')) IN ())  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE ('t٥瞷P');
SELECT SUM(count) FROM (SELECT (('t٥瞷P') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('t٥瞷P');
SELECT SUM(count) FROM (SELECT (('t٥瞷P') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('t٥瞷P');
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0)==(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0)==(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0)==(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0)==(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0)==(rt1.c2)))));
SELECT * FROM rt1, vt0 WHERE (((('k'))>=((rt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((('k'))>=((rt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((('k'))>=((rt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((('k'))>=((rt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((('k'))>=((rt1.c0 COLLATE NOCASE))));
SELECT * FROM vt0, rt1 WHERE (CASE (((rt1.c0))<((x'763e')))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0xffffffffa23302e6 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END WHEN (- (rt1.c0)) THEN vt0.c0 WHEN (~ (rt1.c0)) THEN NULL ELSE ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c0))<((x'763e')))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0Xffffffffa23302e6 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END WHEN (- (rt1.c0)) THEN vt0.c0 WHEN (~ (rt1.c0)) THEN NULL ELSE ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CASE (((rt1.c0))<((x'763e')))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0xffffffffa23302e6 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END WHEN (- (rt1.c0)) THEN vt0.c0 WHEN (~ (rt1.c0)) THEN NULL ELSE ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c0))<((x'763e')))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0Xffffffffa23302e6 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END WHEN (- (rt1.c0)) THEN vt0.c0 WHEN (~ (rt1.c0)) THEN NULL ELSE ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CASE (((rt1.c0))<((x'763e')))  WHEN (rt1.c0 IN ()) THEN CASE rt1.c1  WHEN rt1.c2 THEN 0xffffffffa23302e6 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END WHEN (- (rt1.c0)) THEN vt0.c0 WHEN (~ (rt1.c0)) THEN NULL ELSE ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE));
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('')) AS TEXT)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('')) AS TEXT)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('')) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0 IN (NULL)) IN ()) WHERE (CASE ((0.43488394355738536) NOT BETWEEN (rt1.c0) AND (rt1.c0))  WHEN (+ (rt1.c1)) THEN json_quote(rt1.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.43488394355738536) NOT BETWEEN (rt1.c0) AND (rt1.c0))  WHEN (+ (rt1.c1)) THEN json_quote(rt1.c1) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0 IN (NULL)) IN ()));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0 IN (NULL)) IN ()) WHERE (CASE ((0.43488394355738536) NOT BETWEEN (rt1.c0) AND (rt1.c0))  WHEN (+ (rt1.c1)) THEN json_quote(rt1.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.43488394355738536) NOT BETWEEN (rt1.c0) AND (rt1.c0))  WHEN (+ (rt1.c1)) THEN json_quote(rt1.c1) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0 IN (NULL)) IN ()));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((vt0.c0 IN (NULL)) IN ()) WHERE (CASE ((0.43488394355738536) NOT BETWEEN (rt1.c0) AND (rt1.c0))  WHEN (+ (rt1.c1)) THEN json_quote(rt1.c1) END);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT * FROM vt0 WHERE (((CAST(NULL AS INTEGER))<<(LIKELIHOOD(vt0.c0, 0.1627435137695511)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER))<<(LIKELIHOOD(vt0.c0, 0.1627435137695511)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((CAST(NULL AS INTEGER))<<(LIKELIHOOD(vt0.c0, 0.1627435137695511)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER))<<(LIKELIHOOD(vt0.c0, 0.1627435137695511)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((CAST(NULL AS INTEGER))<<(LIKELIHOOD(vt0.c0, 0.1627435137695511)))) ORDER BY vt0.c0;
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c2))>((rt1.c1)))) NOT BETWEEN (json(rt1.c2)) AND (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY rt1.c2  NULLS LAST, (NULLIF(DISTINCT rt1.c0, rt1.c2) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))>((rt1.c1)))) NOT BETWEEN (json(rt1.c2)) AND (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED ORDER BY rt1.c2  NULLS LAST, (NULLIF(DISTINCT rt1.c0, rt1.c2) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c2))>((rt1.c1)))) NOT BETWEEN (json(rt1.c2)) AND (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY rt1.c2  NULLS LAST, (NULLIF(DISTINCT rt1.c0, rt1.c2) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))>((rt1.c1)))) NOT BETWEEN (json(rt1.c2)) AND (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED ORDER BY rt1.c2  NULLS LAST, (NULLIF(DISTINCT rt1.c0, rt1.c2) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c2))>((rt1.c1)))) NOT BETWEEN (json(rt1.c2)) AND (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY rt1.c2  NULLS LAST, (NULLIF(DISTINCT rt1.c0, rt1.c2) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(((vt0.c0) IS TRUE))));
SELECT * FROM rt1 WHERE (((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(CASE rt1.c0  WHEN 0.5312224694669978 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(CASE rt1.c0  WHEN 0.5312224694669978 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(CASE rt1.c0  WHEN 0.5312224694669978 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(CASE rt1.c0  WHEN 0.5312224694669978 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(CASE rt1.c0  WHEN 0.5312224694669978 THEN rt1.c0 END)));
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE NULL END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE NULL END COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE NULL END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE NULL END COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE NULL END COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY WHERE (NULL);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (((vt0.c0)/(vt0.c0)))) WHERE ((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((rt1.c2 IN ()))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (((vt0.c0)/(vt0.c0)))) ORDER BY (((rt1.c2 IN ()))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (((vt0.c0)/(vt0.c0)))) WHERE ((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((rt1.c2 IN ()))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (((vt0.c0)/(vt0.c0)))) ORDER BY (((rt1.c2 IN ()))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (((vt0.c0)/(vt0.c0)))) WHERE ((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((rt1.c2 IN ()))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((((rt1.c0))>((rt1.c1))))IS(((rt1.c1)<<(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0))>((rt1.c1))))IS(((rt1.c1)<<(rt1.c2)))) ASC);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((((rt1.c0))>((rt1.c1))))IS(((rt1.c1)<<(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0))>((rt1.c1))))IS(((rt1.c1)<<(rt1.c2)))) ASC);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (((((rt1.c0))>((rt1.c1))))IS(((rt1.c1)<<(rt1.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (((rt1.c2))<((rt1.c1))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c2))<((rt1.c1))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) ELSE rt1.c0 END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (((rt1.c2))<((rt1.c1))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c2))<((rt1.c1))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) ELSE rt1.c0 END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (((rt1.c2))<((rt1.c1))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) ELSE rt1.c0 END);
SELECT * FROM rt1, vt0 WHERE ((((0.13894923814086246 COLLATE BINARY))>((((0.21839161058202372)<<(rt1.c2)))))) ORDER BY (((vt0.c0 IN ()))IS(((rt1.c1)GLOB(rt1.c1)))) ASC  NULLS FIRST, (NOT (CAST(rt1.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((0.13894923814086246 COLLATE BINARY))>((((0.21839161058202372)<<(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0 IN ()))IS(((rt1.c1)GLOB(rt1.c1)))) ASC  NULLS FIRST, (NOT (CAST(rt1.c1 AS REAL))) DESC);
SELECT * FROM rt1, vt0 WHERE ((((0.13894923814086246 COLLATE BINARY))>((((0.21839161058202372)<<(rt1.c2)))))) ORDER BY (((vt0.c0 IN ()))IS(((rt1.c1)GLOB(rt1.c1)))) ASC  NULLS FIRST, (NOT (CAST(rt1.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((0.13894923814086246 COLLATE BINARY))>((((0.21839161058202372)<<(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0 IN ()))IS(((rt1.c1)GLOB(rt1.c1)))) ASC  NULLS FIRST, (NOT (CAST(rt1.c1 AS REAL))) DESC);
SELECT * FROM rt1, vt0 WHERE ((((0.13894923814086246 COLLATE BINARY))>((((0.21839161058202372)<<(rt1.c2)))))) ORDER BY (((vt0.c0 IN ()))IS(((rt1.c1)GLOB(rt1.c1)))) ASC  NULLS FIRST, (NOT (CAST(rt1.c1 AS REAL))) DESC;
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((rt1.c1 COLLATE RTRIM)) AND ((((('	nC', rt1.c1, rt1.c0))=((rt1.c2, vt0.c0, '4r')))))) WHERE (x'750ed30f') ORDER BY ((((rt1.c2)<<(rt1.c2))) BETWEEN (rt1.c2) AND (CAST(rt1.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'750ed30f') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((rt1.c1 COLLATE RTRIM)) AND ((((('	nC', rt1.c1, rt1.c0))=((rt1.c2, vt0.c0, '4r')))))) ORDER BY ((((rt1.c2)<<(rt1.c2))) BETWEEN (rt1.c2) AND (CAST(rt1.c1 AS BLOB)))  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((rt1.c1 COLLATE RTRIM)) AND ((((('	nC', rt1.c1, rt1.c0))=((rt1.c2, vt0.c0, '4r')))))) WHERE (x'750ed30f') ORDER BY ((((rt1.c2)<<(rt1.c2))) BETWEEN (rt1.c2) AND (CAST(rt1.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'750ed30f') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((rt1.c1 COLLATE RTRIM)) AND ((((('	nC', rt1.c1, rt1.c0))=((rt1.c2, vt0.c0, '4r')))))) ORDER BY ((((rt1.c2)<<(rt1.c2))) BETWEEN (rt1.c2) AND (CAST(rt1.c1 AS BLOB)))  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((rt1.c1 COLLATE RTRIM)) AND ((((('	nC', rt1.c1, rt1.c0))=((rt1.c2, vt0.c0, '4r')))))) WHERE (x'750ed30f') ORDER BY ((((rt1.c2)<<(rt1.c2))) BETWEEN (rt1.c2) AND (CAST(rt1.c1 AS BLOB)))  NULLS FIRST;
