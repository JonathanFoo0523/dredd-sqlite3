-- Time: 2024/06/10 07:42:13
-- Database: database65
-- Database version: 3.40.0
-- seed value: 1342094565
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 301); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE vt1 SET (c0)=(NULL) WHERE vt1.c0; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (' '); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.cache_spill = 5407898663581794473; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0)=(0.4128596356971955); -- 0ms;
UPDATE vt0 SET c0='694805450'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
REINDEX  vt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'') WHERE ((json_extract(vt1.c0, vt1.c0))OR(((vt1.c0)!=(vt1.c0)))); -- 0ms;
UPDATE vt1 SET c0=x'' WHERE (- ((vt1.c0 IN (x'6832')))); -- 0ms;
ANALYZE vt1; -- 1ms;
PRAGMA soft_heap_limit = 8404725657869161307; -- 0ms;
DELETE FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(x'53f9', x'5047', 'H'); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('694805450'); -- 0ms;
PRAGMA main.application_id; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ((((vt0.c0)/(x'b44c')))||(json_array_length(vt0.c0, vt0.c0))) FROM vt1, vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt1 SET (c0)=(NULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA automatic_index; -- 0ms;
UPDATE OR ABORT vt0 SET c0='' WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(LIKELY('8404725657869161307'))); -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.09353857799359655; -- 1ms;
REINDEX  vt1; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('TRUE'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.foreign_keys = false; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=8404725657869161307; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8474969689920079), (8.404725657869161E18), (0X74a39574a7e7135b); -- 0ms;
PRAGMA threads; -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.028756484836380936); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (8.404725657869161E18); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0.6414094366285239) WHERE (~ ((NOT (vt0.c0)))); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt1 SET c0=NULL; -- 1ms;
UPDATE OR ABORT vt1 SET c0='280887504', c0=x'2e77'; -- 0ms;
UPDATE OR REPLACE vt1 SET (c0)=('>Z3r!叅M') WHERE CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (+ (vt1.c0)) THEN vt1.c0 COLLATE BINARY END; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
UPDATE vt0 SET c0='-1528209185' WHERE (((x'f846481a' IN ()))OR(CAST(vt0.c0 AS REAL))); -- 1ms;
ANALYZE; -- 1ms;
UPDATE vt1 SET (c0)=('280887504'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT , c1 INT , c2 REAL ); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (1762199612); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('*叅gq!'), ('8404725657869161307'), (NULL), (x''), (779302295); -- 0ms;
ALTER TABLE t1 ADD COLUMN c74 REAL; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE vt1 SET c0=x''; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'') WHERE STRFTIME(((vt1.c0) NOT NULL), (vt1.c0 IN ()), (- (vt1.c0))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 1ms;
PRAGMA foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
PRAGMA main.stats; -- 0ms;
PRAGMA main.wal_autocheckpoint = 7236178898203697347; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL), (''), (0Xffffffffa4e960df), (0.5198961957030563), (0.9870701065463621); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 1ms;
UPDATE OR ABORT vt1 SET (c0)=(x'6fe8') WHERE (('') NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (ABS(DISTINCT '⺱㾇'))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffffa6613371 WHERE 45206864; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0Xffffffffa6613371); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF DELETE ON v0 FOR EACH ROW  BEGIN INSERT OR REPLACE INTO vt1 VALUES (0.9275791777877976);SELECT RAISE(FAIL, 'asdf');END; -- 0ms;
UPDATE OR ABORT vt1 SET c0='''쵐鞍?VcK]', c0='5'''; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(1451287235) WHERE ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'4442'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.6898404875653302) LEFT OUTER JOIN vt0 ON (((vt0.c0, '581451655', v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((vt1.c0, vt0.c0, 0.540192036077756))=((0.7978511427036636, v0.c0, NULL))))) AND (((NOT (vt1.c0)), (((vt0.c0))<>((vt0.c0))), (((vt0.c0, v0.c0, v0.c0)) BETWEEN (('1451287235', vt1.c0, NULL)) AND ((v0.c0, vt1.c0, vt1.c0)))))) WHERE (((((((((((vt1.c0)&(vt0.c0)))OR((~ (v0.c0)))))OR('-1891720704')))OR(vt1.c0 COLLATE NOCASE)))AND(LTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)&(vt0.c0)))OR((~ (v0.c0)))))OR('-1891720704')))OR(vt1.c0 COLLATE NOCASE)))AND(LTRIM(vt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.6898404875653302) LEFT OUTER JOIN vt0 ON (((vt0.c0, '581451655', v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((vt1.c0, vt0.c0, 0.540192036077756))==((0.7978511427036636, v0.c0, NULL))))) AND (((NOT (vt1.c0)), (((vt0.c0))<>((vt0.c0))), (((vt0.c0, v0.c0, v0.c0)) BETWEEN (('1451287235', vt1.c0, NULL)) AND ((v0.c0, vt1.c0, vt1.c0)))))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.6898404875653302) LEFT OUTER JOIN vt0 ON (((vt0.c0, '581451655', v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((vt1.c0, vt0.c0, 0.540192036077756))=((0.7978511427036636, v0.c0, NULL))))) AND (((NOT (vt1.c0)), (((vt0.c0))<>((vt0.c0))), (((vt0.c0, v0.c0, v0.c0)) BETWEEN (('1451287235', vt1.c0, NULL)) AND ((v0.c0, vt1.c0, vt1.c0)))))) WHERE (((((((((((vt1.c0)&(vt0.c0)))OR((~ (v0.c0)))))OR('-1891720704')))OR(vt1.c0 COLLATE NOCASE)))AND(LTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)&(vt0.c0)))OR((~ (v0.c0)))))OR('-1891720704')))OR(vt1.c0 COLLATE NOCASE)))AND(LTRIM(vt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.6898404875653302) LEFT OUTER JOIN vt0 ON (((vt0.c0, '581451655', v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((vt1.c0, vt0.c0, 0.540192036077756))==((0.7978511427036636, v0.c0, NULL))))) AND (((NOT (vt1.c0)), (((vt0.c0))<>((vt0.c0))), (((vt0.c0, v0.c0, v0.c0)) BETWEEN (('1451287235', vt1.c0, NULL)) AND ((v0.c0, vt1.c0, vt1.c0)))))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE x'86a2'  WHEN 209076721 THEN vt0.c0 ELSE v0.c0 END) BETWEEN (('' IN (v0.c0, vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY (~ (((v0.c0) IS TRUE))), (((('1781428299')!=(v0.c0)))IS NOT(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), LIKELY((('-1126879567')+(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE x'86a2'  WHEN 209076721 THEN vt0.c0 ELSE v0.c0 END) BETWEEN (('' IN (v0.c0, vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (((v0.c0) IS TRUE))), (((('1781428299')<>(v0.c0)))IS NOT(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), LIKELY((('-1126879567')+(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE x'86a2'  WHEN 209076721 THEN vt0.c0 ELSE v0.c0 END) BETWEEN (('' IN (v0.c0, vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY (~ (((v0.c0) IS TRUE))), (((('1781428299')!=(v0.c0)))IS NOT(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), LIKELY((('-1126879567')+(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE x'86a2'  WHEN 209076721 THEN vt0.c0 ELSE v0.c0 END) BETWEEN (('' IN (v0.c0, vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (((v0.c0) IS TRUE))), (((('1781428299')<>(v0.c0)))IS NOT(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), LIKELY((('-1126879567')+(vt0.c0))));
SELECT ALL * FROM vt0, vt1 NOT INDEXED, v0 WHERE (CAST(((v0.c0)>=(v0.c0)) AS TEXT)) ORDER BY (((((v0.c0)) BETWEEN ((0.3310376799565682)) AND ((vt1.c0))))LIKE(0.7239225804947277 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>=(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((((v0.c0)) BETWEEN ((0.3310376799565682)) AND ((vt1.c0))))LIKE(0.7239225804947277 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0, vt1 NOT INDEXED, v0 WHERE (CAST(((v0.c0)>=(v0.c0)) AS TEXT)) ORDER BY (((((v0.c0)) BETWEEN ((0.3310376799565682)) AND ((vt1.c0))))LIKE(0.7239225804947277 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>=(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((((v0.c0)) BETWEEN ((0.3310376799565682)) AND ((vt1.c0))))LIKE(0.7239225804947277 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND (((v0.c0 IN ('', vt0.c0))))) CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)) WHERE (CASE WHEN UNICODE(v0.c0) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNICODE(v0.c0) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND (((v0.c0 IN ('', vt0.c0))))) CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND (((v0.c0 IN ('', vt0.c0))))) CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)) WHERE (CASE WHEN UNICODE(v0.c0) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNICODE(v0.c0) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND (((v0.c0 IN ('', vt0.c0))))) CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((NULL) IS FALSE)) ORDER BY (+ (CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (+ (CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((NULL) IS FALSE)) ORDER BY (+ (CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (+ (CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((~ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((~ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((v0.c0 IN ()))>(((vt1.c0)!=(v0.c0))))) ORDER BY ((HEX(DISTINCT vt1.c0))OR(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))>(((vt1.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((HEX(DISTINCT vt1.c0))OR(NULL)) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((v0.c0 IN ()))>(((vt1.c0)!=(v0.c0))))) ORDER BY ((HEX(DISTINCT vt1.c0))OR(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))>(((vt1.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((HEX(DISTINCT vt1.c0))OR(NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (NULL))) ORDER BY (((((vt0.c0)|(vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)|(vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (NULL))) ORDER BY (((((vt0.c0)|(vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)|(vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (NULL))) ORDER BY (((((vt0.c0)|(vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON v0.c0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON v0.c0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON v0.c0);
SELECT * FROM v0 WHERE ((((NULL, ((v0.c0)LIKE(NULL)), CAST(v0.c0 AS BLOB), ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0))<((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((v0.c0) ISNULL), (((v0.c0))!=((v0.c0))), ((v0.c0)/(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN 202461017 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END, CAST(v0.c0 AS INTEGER), MAX(v0.c0, NULL, v0.c0, x''))) AND ((((v0.c0) NOT BETWEEN (0.540192036077756) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, ((v0.c0)LIKE(NULL)), CAST(v0.c0 AS BLOB), ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0))<((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((v0.c0) ISNULL), (((v0.c0))!=((v0.c0))), ((v0.c0)/(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN 202461017 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END, CAST(v0.c0 AS INTEGER), MAX(v0.c0, NULL, v0.c0, x''))) AND ((((v0.c0) NOT BETWEEN (0.540192036077756) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0))))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((NULL, ((v0.c0)LIKE(NULL)), CAST(v0.c0 AS BLOB), ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0))<((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((v0.c0) ISNULL), (((v0.c0))!=((v0.c0))), ((v0.c0)/(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN 202461017 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END, CAST(v0.c0 AS INTEGER), MAX(v0.c0, NULL, v0.c0, x''))) AND ((((v0.c0) NOT BETWEEN (0.540192036077756) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, ((v0.c0)LIKE(NULL)), CAST(v0.c0 AS BLOB), ((((((((((((x'')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0))<((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((v0.c0) ISNULL), (((v0.c0))!=((v0.c0))), ((v0.c0)/(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN 202461017 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END, CAST(v0.c0 AS INTEGER), MAX(v0.c0, NULL, v0.c0, x''))) AND ((((v0.c0) NOT BETWEEN (0.540192036077756) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((x'')) BETWEEN ((((((0.8704472599311653)OR(vt1.c0)))AND(vt1.c0)))) AND (((~ (vt1.c0)))))) ORDER BY (~ (CASE vt1.c0  WHEN vt1.c0 THEN 8.404725657869161E18 ELSE vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((((((0.8704472599311653)OR(vt1.c0)))AND(vt1.c0)))) AND (((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (CASE vt1.c0  WHEN vt1.c0 THEN 8.404725657869161E18 ELSE vt1.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((x'')) BETWEEN ((((((0.8704472599311653)OR(vt1.c0)))AND(vt1.c0)))) AND (((~ (vt1.c0)))))) ORDER BY (~ (CASE vt1.c0  WHEN vt1.c0 THEN 8.404725657869161E18 ELSE vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((((((0.8704472599311653)OR(vt1.c0)))AND(vt1.c0)))) AND (((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (CASE vt1.c0  WHEN vt1.c0 THEN 8.404725657869161E18 ELSE vt1.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((x'')) BETWEEN ((((((0.8704472599311653)OR(vt1.c0)))AND(vt1.c0)))) AND (((~ (vt1.c0)))))) ORDER BY (~ (CASE vt1.c0  WHEN vt1.c0 THEN 8.404725657869161E18 ELSE vt1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, IFNULL(v0.c0, v0.c0), NULLIF(v0.c0, v0.c0)))<=(('1111697686', (v0.c0 IN (v0.c0)), v0.c0 COLLATE NOCASE)))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM, IFNULL(v0.c0, v0.c0), NULLIF(v0.c0, v0.c0)))<=(('1111697686', (v0.c0 IN (v0.c0)), v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, IFNULL(v0.c0, v0.c0), NULLIF(v0.c0, v0.c0)))<=(('1111697686', (v0.c0 IN (v0.c0)), v0.c0 COLLATE NOCASE)))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM, IFNULL(v0.c0, v0.c0), NULLIF(v0.c0, v0.c0)))<=(('1111697686', (v0.c0 IN (v0.c0)), v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c0) BETWEEN (6.9480545E8) AND (-27659296)) THEN ((vt1.c0) IS FALSE) WHEN 0.7978511427036636 THEN ((vt0.c0) NOT NULL) WHEN '1534776530' THEN TYPEOF(DISTINCT vt1.c0) ELSE LIKELY(DISTINCT vt0.c0) END) ORDER BY ((((vt0.c0)<<(vt0.c0)))<>((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c0) BETWEEN (6.9480545E8) AND (-27659296)) THEN ((vt1.c0) IS FALSE) WHEN 0.7978511427036636 THEN ((vt0.c0) NOT NULL) WHEN '1534776530' THEN TYPEOF(DISTINCT vt1.c0) ELSE LIKELY(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)<<(vt0.c0)))!=((vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c0) BETWEEN (6.9480545E8) AND (-27659296)) THEN ((vt1.c0) IS FALSE) WHEN 0.7978511427036636 THEN ((vt0.c0) NOT NULL) WHEN '1534776530' THEN TYPEOF(DISTINCT vt1.c0) ELSE LIKELY(DISTINCT vt0.c0) END) ORDER BY ((((vt0.c0)<<(vt0.c0)))<>((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c0) BETWEEN (6.9480545E8) AND (-27659296)) THEN ((vt1.c0) IS FALSE) WHEN 0.7978511427036636 THEN ((vt0.c0) NOT NULL) WHEN '1534776530' THEN TYPEOF(DISTINCT vt1.c0) ELSE LIKELY(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)<<(vt0.c0)))!=((vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c0) BETWEEN (6.9480545E8) AND (-27659296)) THEN ((vt1.c0) IS FALSE) WHEN 0.7978511427036636 THEN ((vt0.c0) NOT NULL) WHEN '1534776530' THEN TYPEOF(DISTINCT vt1.c0) ELSE LIKELY(DISTINCT vt0.c0) END) ORDER BY ((((vt0.c0)<<(vt0.c0)))<>((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((0.22580978587086942) ISNULL) WHERE (((v0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)/(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((0.22580978587086942) ISNULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((0.22580978587086942) ISNULL) WHERE (((v0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)/(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((0.22580978587086942) ISNULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((0.22580978587086942) ISNULL) WHERE (((v0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0) IS FALSE))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((- (v0.c0)))<(((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS LAST, CAST((v0.c0 IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0) IS FALSE))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))<(((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS LAST, CAST((v0.c0 IN ()) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0) IS FALSE))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((- (v0.c0)))<(((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS LAST, CAST((v0.c0 IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0) IS FALSE))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))<(((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS LAST, CAST((v0.c0 IN ()) AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END) ORDER BY (~ (CAST(vt1.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (~ (CAST(vt1.c0 AS REAL)))  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END) ORDER BY (~ (CAST(vt1.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (~ (CAST(vt1.c0 AS REAL)))  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END) ORDER BY (~ (CAST(vt1.c0 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY '386552321';
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY '386552321');
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY '386552321';
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY '386552321');
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY '386552321';
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON UPPER((v0.c0 IN (v0.c0))) WHERE ((((vt0.c0 IN (0Xffffffffe7175d8d)))&((NOT ('485471682'))))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (0.3310376799565682)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (0xffffffffe7175d8d)))&((NOT ('485471682'))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON UPPER((v0.c0 IN (v0.c0))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (0.3310376799565682)))) DESC);
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON UPPER((v0.c0 IN (v0.c0))) WHERE ((((vt0.c0 IN (0Xffffffffe7175d8d)))&((NOT ('485471682'))))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (0.3310376799565682)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (0xffffffffe7175d8d)))&((NOT ('485471682'))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0)LIKE(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON UPPER((v0.c0 IN (v0.c0))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(vt1.c0))) AND (((v0.c0) BETWEEN (vt1.c0) AND (0.3310376799565682)))) DESC);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((((((('0.8474969689920079')AND(vt0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (v0.c0)))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((('0.8474969689920079')AND(vt0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (v0.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM v0, vt1 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((((((('0.8474969689920079')AND(vt0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (v0.c0)))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((('0.8474969689920079')AND(vt0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (v0.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM v0, vt1 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((v0.c0)>=(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((v0.c0)>=(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((CAST(vt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))>((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((CAST(vt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))>((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((CAST(vt0.c0 AS INTEGER)))));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((((0.8132787354938965, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))<=((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))) ORDER BY (- ((NOT (vt1.c0)))), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.8132787354938965, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))<=((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (- ((NOT (vt1.c0)))), vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((((0.8132787354938965, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))<=((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))) ORDER BY (- ((NOT (vt1.c0)))), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.8132787354938965, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))<=((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (- ((NOT (vt1.c0)))), vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (vt1.c0 IN ())  WHEN NULL THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((((NULL)OR(vt1.c0)))OR(vt0.c0)) WHEN (vt1.c0 IN ()) THEN (((vt0.c0))>=((vt0.c0))) END WHERE (json_quote(NULL));
SELECT SUM(count) FROM (SELECT ((json_quote(NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE (vt1.c0 IN ())  WHEN NULL THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((((NULL)OR(vt1.c0)))OR(vt0.c0)) WHEN (vt1.c0 IN ()) THEN (((vt0.c0))>=((vt0.c0))) END);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (vt1.c0 IN ())  WHEN NULL THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((((NULL)OR(vt1.c0)))OR(vt0.c0)) WHEN (vt1.c0 IN ()) THEN (((vt0.c0))>=((vt0.c0))) END WHERE (json_quote(NULL));
SELECT SUM(count) FROM (SELECT ((json_quote(NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE (vt1.c0 IN ())  WHEN NULL THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((((NULL)OR(vt1.c0)))OR(vt0.c0)) WHEN (vt1.c0 IN ()) THEN (((vt0.c0))>=((vt0.c0))) END);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (vt1.c0 IN ())  WHEN NULL THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((((NULL)OR(vt1.c0)))OR(vt0.c0)) WHEN (vt1.c0 IN ()) THEN (((vt0.c0))>=((vt0.c0))) END WHERE (json_quote(NULL));
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)+(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)+(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)+(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)+(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0, vt0 WHERE ((((4.5206864E7 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((4.5206864E7 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((4.5206864E7 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((4.5206864E7 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((4.5206864E7 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((json_valid(v0.c0), (NOT (v0.c0)), ((((vt0.c0)OR(NULL)))AND(0X22a83f87))))=(((vt0.c0 IN ()), CAST(v0.c0 AS BLOB), (- ('v6'))))) WHERE (CAST(((vt0.c0)-(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((json_valid(v0.c0), (NOT (v0.c0)), ((((vt0.c0)OR(NULL)))AND(0x22a83f87))))=(((vt0.c0 IN ()), CAST(v0.c0 AS BLOB), (- ('v6'))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((json_valid(v0.c0), (NOT (v0.c0)), ((((vt0.c0)OR(NULL)))AND(0X22a83f87))))=(((vt0.c0 IN ()), CAST(v0.c0 AS BLOB), (- ('v6'))))) WHERE (CAST(((vt0.c0)-(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((json_valid(v0.c0), (NOT (v0.c0)), ((((vt0.c0)OR(NULL)))AND(0x22a83f87))))=(((vt0.c0 IN ()), CAST(v0.c0 AS BLOB), (- ('v6'))))));
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY (0.08685927595862197 IN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)+(vt1.c0)))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)AND(vt1.c0)) ELSE vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY (0.08685927595862197 IN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)+(vt1.c0)))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)AND(vt1.c0)) ELSE vt1.c0 END DESC);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY (0.08685927595862197 IN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)+(vt1.c0)))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)AND(vt1.c0)) ELSE vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY (0.08685927595862197 IN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)+(vt1.c0)))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)AND(vt1.c0)) ELSE vt1.c0 END DESC);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY (0.08685927595862197 IN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)+(vt1.c0)))) ASC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)AND(vt1.c0)) ELSE vt1.c0 END DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULLIF(((vt1.c0) NOT NULL), 0x3192fb82));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0) NOT NULL), 0x3192fb82)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULLIF(((vt1.c0) NOT NULL), 0x3192fb82));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0) NOT NULL), 0x3192fb82)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULLIF(((vt1.c0) NOT NULL), 0x3192fb82));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)|(v0.c0)))LIKE(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)IS(vt1.c0))) AND (v0.c0)), ((CAST(vt0.c0 AS BLOB)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)*(vt1.c0)))) DESC  NULLS LAST, 386552321;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(v0.c0)))LIKE(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)IS(vt1.c0))) AND (v0.c0)), ((CAST(vt0.c0 AS BLOB)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)*(vt1.c0)))) DESC  NULLS LAST, 386552321);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)|(v0.c0)))LIKE(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)IS(vt1.c0))) AND (v0.c0)), ((CAST(vt0.c0 AS BLOB)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)*(vt1.c0)))) DESC  NULLS LAST, 386552321;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(v0.c0)))LIKE(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)IS(vt1.c0))) AND (v0.c0)), ((CAST(vt0.c0 AS BLOB)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)*(vt1.c0)))) DESC  NULLS LAST, 386552321);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS REAL))OR(LIKELIHOOD(v0.c0, 0.3064826325292834))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((((vt0.c0))>((v0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS REAL))OR(LIKELIHOOD(v0.c0, 0.3064826325292834))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((((vt0.c0))>((v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS REAL))OR(LIKELIHOOD(v0.c0, 0.3064826325292834))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((((vt0.c0))>((v0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS REAL))OR(LIKELIHOOD(v0.c0, 0.3064826325292834))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((((vt0.c0))>((v0.c0))))));
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND (((- (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND (((- (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND (((- (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND (((- (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'7997') BETWEEN (x'') AND (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)IS(0X60414bce)) END) ORDER BY (((8.404725657869161E18 IN ()))GLOB(UPPER(DISTINCT vt0.c0))) DESC, (- ('-1528209185')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'7997') BETWEEN (x'') AND (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)IS(0x60414bce)) END) IS TRUE)  as count FROM vt0 ORDER BY (((8.404725657869161E18 IN ()))GLOB(UPPER(DISTINCT vt0.c0))) DESC, (- ('-1528209185')) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'7997') BETWEEN (x'') AND (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)IS(0X60414bce)) END) ORDER BY (((8.404725657869161E18 IN ()))GLOB(UPPER(DISTINCT vt0.c0))) DESC, (- ('-1528209185')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'7997') BETWEEN (x'') AND (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)IS(0x60414bce)) END) IS TRUE)  as count FROM vt0 ORDER BY (((8.404725657869161E18 IN ()))GLOB(UPPER(DISTINCT vt0.c0))) DESC, (- ('-1528209185')) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'7997') BETWEEN (x'') AND (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)IS(0X60414bce)) END) ORDER BY (((8.404725657869161E18 IN ()))GLOB(UPPER(DISTINCT vt0.c0))) DESC, (- ('-1528209185')) DESC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN vt1 ON (((NULL)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((LIKELY(DISTINCT vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)IS NOT(vt0.c0)))IS(((vt0.c0)>=(v0.c0)))) WHERE (CAST((((v0.c0, '-407643423', vt0.c0))>((v0.c0, v0.c0, vt1.c0))) AS INTEGER)) ORDER BY CASE ((v0.c0) NOT BETWEEN (x'') AND (vt1.c0))  WHEN vt1.c0 THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'0ba7' ELSE x'' END WHEN vt1.c0 THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<=(vt0.c0)) ELSE ((vt1.c0)&(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, '-407643423', vt0.c0))>((v0.c0, v0.c0, vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((NULL)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((LIKELY(DISTINCT vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)IS NOT(vt0.c0)))IS(((vt0.c0)>=(v0.c0)))) ORDER BY CASE ((v0.c0) NOT BETWEEN (x'') AND (vt1.c0))  WHEN vt1.c0 THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'0ba7' ELSE x'' END WHEN vt1.c0 THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<=(vt0.c0)) ELSE ((vt1.c0)&(vt0.c0)) END);
SELECT * FROM vt0 CROSS JOIN vt1 ON (((NULL)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((LIKELY(DISTINCT vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)IS NOT(vt0.c0)))IS(((vt0.c0)>=(v0.c0)))) WHERE (CAST((((v0.c0, '-407643423', vt0.c0))>((v0.c0, v0.c0, vt1.c0))) AS INTEGER)) ORDER BY CASE ((v0.c0) NOT BETWEEN (x'') AND (vt1.c0))  WHEN vt1.c0 THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'0ba7' ELSE x'' END WHEN vt1.c0 THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<=(vt0.c0)) ELSE ((vt1.c0)&(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, '-407643423', vt0.c0))>((v0.c0, v0.c0, vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((NULL)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((LIKELY(DISTINCT vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)IS NOT(vt0.c0)))IS(((vt0.c0)>=(v0.c0)))) ORDER BY CASE ((v0.c0) NOT BETWEEN (x'') AND (vt1.c0))  WHEN vt1.c0 THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'0ba7' ELSE x'' END WHEN vt1.c0 THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<=(vt0.c0)) ELSE ((vt1.c0)&(vt0.c0)) END);
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c0 AS REAL)))));
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c0 AS REAL)))));
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c0)) IN ()) WHERE ((((('') NOT BETWEEN (vt1.c0) AND (vt0.c0)))||((vt0.c0 IN (vt0.c0))))) ORDER BY DATETIME(((vt1.c0)=(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))=((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((('') NOT BETWEEN (vt1.c0) AND (vt0.c0)))||((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c0)) IN ()) ORDER BY DATETIME(((vt1.c0)==(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))==((vt0.c0)))) ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c0)) IN ()) WHERE ((((('') NOT BETWEEN (vt1.c0) AND (vt0.c0)))||((vt0.c0 IN (vt0.c0))))) ORDER BY DATETIME(((vt1.c0)=(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))=((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((('') NOT BETWEEN (vt1.c0) AND (vt0.c0)))||((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c0)) IN ()) ORDER BY DATETIME(((vt1.c0)==(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))==((vt0.c0)))) ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c0)) IN ()) WHERE ((((('') NOT BETWEEN (vt1.c0) AND (vt0.c0)))||((vt0.c0 IN (vt0.c0))))) ORDER BY DATETIME(((vt1.c0)=(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))=((vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON vt1.c0 INNER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (vt0.c0) ORDER BY (((NOT (vt0.c0))) NOTNULL), (((vt0.c0)>=(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt1.c0 INNER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (((NOT (vt0.c0))) NOTNULL), (((vt0.c0)>=(vt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON vt1.c0 INNER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (vt0.c0) ORDER BY (((NOT (vt0.c0))) NOTNULL), (((vt0.c0)>=(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt1.c0 INNER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (((NOT (vt0.c0))) NOTNULL), (((vt0.c0)>=(vt0.c0)) IN ()) ASC);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN v0 ON ((((((v0.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (0.24893653247794245)) WHERE (CASE WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY (((+ (v0.c0)))<=((vt1.c0 IN (vt0.c0)))), (((- (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN v0 ON ((((((v0.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (0.24893653247794245)) ORDER BY (((+ (v0.c0)))<=((vt1.c0 IN (vt0.c0)))), (((- (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN v0 ON ((((((v0.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (0.24893653247794245)) WHERE (CASE WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY (((+ (v0.c0)))<=((vt1.c0 IN (vt0.c0)))), (((- (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN v0 ON ((((((v0.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (0.24893653247794245)) ORDER BY (((+ (v0.c0)))<=((vt1.c0 IN (vt0.c0)))), (((- (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0)))GLOB(CAST(v0.c0 AS BLOB)))) ORDER BY ((((0x3bcfe5b6) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)IS(0.9545227495569194)), (x'' IN ()))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0 COLLATE NOCASE, (NOT (v0.c0)))))  NULLS FIRST, (((v0.c0) ISNULL) IN ()) ASC, (NOT (NULLIF(v0.c0, v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0)))GLOB(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY ((((0X3bcfe5b6) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)IS(0.9545227495569194)), (x'' IN ()))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0 COLLATE NOCASE, (NOT (v0.c0)))))  NULLS FIRST, (((v0.c0) ISNULL) IN ()) ASC, (NOT (NULLIF(v0.c0, v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0)))GLOB(CAST(v0.c0 AS BLOB)))) ORDER BY ((((0x3bcfe5b6) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)IS(0.9545227495569194)), (x'' IN ()))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0 COLLATE NOCASE, (NOT (v0.c0)))))  NULLS FIRST, (((v0.c0) ISNULL) IN ()) ASC, (NOT (NULLIF(v0.c0, v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0)))GLOB(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY ((((0X3bcfe5b6) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)IS(0.9545227495569194)), (x'' IN ()))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0 COLLATE NOCASE, (NOT (v0.c0)))))  NULLS FIRST, (((v0.c0) ISNULL) IN ()) ASC, (NOT (NULLIF(v0.c0, v0.c0))) ASC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((- (vt1.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((- (vt1.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((- (vt1.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0 NOT INDEXED, v0, vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN GLOB(v0.c0, vt1.c0) WHEN (v0.c0 IN (v0.c0)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN GLOB(v0.c0, vt1.c0) WHEN (v0.c0 IN (v0.c0)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0 NOT INDEXED, v0, vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN GLOB(v0.c0, vt1.c0) WHEN (v0.c0 IN (v0.c0)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN GLOB(v0.c0, vt1.c0) WHEN (v0.c0 IN (v0.c0)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((('0.8132787354938965'))<=((vt0.c0))))) AND ((((vt0.c0) ISNULL), (vt0.c0 IN (vt0.c0, vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((('0.8132787354938965'))<=((vt0.c0))))) AND ((((vt0.c0) ISNULL), (vt0.c0 IN (vt0.c0, vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((('0.8132787354938965'))<=((vt0.c0))))) AND ((((vt0.c0) ISNULL), (vt0.c0 IN (vt0.c0, vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((('0.8132787354938965'))<=((vt0.c0))))) AND ((((vt0.c0) ISNULL), (vt0.c0 IN (vt0.c0, vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((('0.8132787354938965'))<=((vt0.c0))))) AND ((((vt0.c0) ISNULL), (vt0.c0 IN (vt0.c0, vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (((vt0.c0))>((vt0.c0))) COLLATE BINARY;
SELECT * FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN ((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE (((('209076721')AND(v0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) ISNULL)  WHEN ((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE (((('209076721')AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN ((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE (((('209076721')AND(v0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) ISNULL)  WHEN ((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE (((('209076721')AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_patch(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS BLOB) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN (NOT (vt0.c0)) THEN MIN(vt0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_patch(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS BLOB) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN (NOT (vt0.c0)) THEN MIN(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_patch(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS BLOB) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN (NOT (vt0.c0)) THEN MIN(vt0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_patch(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS BLOB) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN (NOT (vt0.c0)) THEN MIN(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0.49533315440400827 ELSE v0.c0 END, ((v0.c0)*(v0.c0)))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0) ISNULL), x'a367')))) ORDER BY ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, x'')))))==((CAST(v0.c0 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0.49533315440400827 ELSE v0.c0 END, ((v0.c0)*(v0.c0)))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0) ISNULL), x'a367')))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, x'')))))==((CAST(v0.c0 AS REAL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0.49533315440400827 ELSE v0.c0 END, ((v0.c0)*(v0.c0)))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0) ISNULL), x'a367')))) ORDER BY ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, x'')))))==((CAST(v0.c0 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0.49533315440400827 ELSE v0.c0 END, ((v0.c0)*(v0.c0)))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0) ISNULL), x'a367')))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, x'')))))==((CAST(v0.c0 AS REAL))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(TYPEOF(DISTINCT NULL) AS REAL)) ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT NULL) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (CAST(TYPEOF(DISTINCT NULL) AS REAL)) ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT NULL) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0)));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()) WHERE (((vt1.c0) BETWEEN ('0.24893653247794245') AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN ('0.24893653247794245') AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()) WHERE (((vt1.c0) BETWEEN ('0.24893653247794245') AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN ('0.24893653247794245') AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt1 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()) WHERE (((vt1.c0) BETWEEN ('0.24893653247794245') AND (vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)IS(v0.c0)))OR(DATE('', v0.c0, v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)IS(v0.c0)))OR(DATE('', v0.c0, v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)IS(v0.c0)))OR(DATE('', v0.c0, v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)IS(v0.c0)))OR(DATE('', v0.c0, v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (SQLITE_VERSION()) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (SQLITE_VERSION()) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (SQLITE_VERSION()) ORDER BY NULL;
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (TYPEOF(((v0.c0)<<(vt0.c0)))) ORDER BY ((NULL) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((v0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((NULL) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (TYPEOF(((v0.c0)<<(vt0.c0)))) ORDER BY ((NULL) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((v0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((NULL) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0Xffffffff8161e602) ORDER BY ((vt0.c0)&((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((0Xffffffff8161e602) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)&((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0Xffffffff8161e602) ORDER BY ((vt0.c0)&((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((0Xffffffff8161e602) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)&((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0Xffffffff8161e602) ORDER BY ((vt0.c0)&((+ (vt0.c0))));
SELECT ALL * FROM vt0, vt1 WHERE ('-1528209185');
SELECT SUM(count) FROM (SELECT (('-1528209185') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('-1528209185');
SELECT SUM(count) FROM (SELECT (('-1528209185') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('-1528209185');
SELECT ALL * FROM vt1, vt0, v0 WHERE (CASE NULL  WHEN vt0.c0 THEN (- (vt0.c0)) WHEN (((vt1.c0))==((vt0.c0))) THEN (((v0.c0))==((x''))) WHEN LTRIM(0.6879542892854729, vt1.c0) THEN ((vt1.c0) ISNULL) ELSE (((vt0.c0))<=((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN vt0.c0 THEN (- (vt0.c0)) WHEN (((vt1.c0))==((vt0.c0))) THEN (((v0.c0))==((x''))) WHEN LTRIM(0.6879542892854729, vt1.c0) THEN ((vt1.c0) ISNULL) ELSE (((vt0.c0))<=((vt1.c0))) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE (CASE NULL  WHEN vt0.c0 THEN (- (vt0.c0)) WHEN (((vt1.c0))==((vt0.c0))) THEN (((v0.c0))==((x''))) WHEN LTRIM(0.6879542892854729, vt1.c0) THEN ((vt1.c0) ISNULL) ELSE (((vt0.c0))<=((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN vt0.c0 THEN (- (vt0.c0)) WHEN (((vt1.c0))==((vt0.c0))) THEN (((v0.c0))==((x''))) WHEN LTRIM(0.6879542892854729, vt1.c0) THEN ((vt1.c0) ISNULL) ELSE (((vt0.c0))<=((vt1.c0))) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT));
SELECT * FROM v0, vt0 WHERE (v0.c0) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (v0.c0) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS BLOB)) ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ()) DESC, CAST(((v0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ()) DESC, CAST(((v0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS BLOB)) ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ()) DESC, CAST(((v0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ()) DESC, CAST(((v0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt1.c0)*(vt1.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN '' ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)*(vt1.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN '' ELSE vt1.c0 END))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt1.c0)*(vt1.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN '' ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)*(vt1.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN '' ELSE vt1.c0 END))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM v0, vt0, vt1 WHERE (v0.c0) ORDER BY ((NULL) NOT BETWEEN (((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((NULL) NOT BETWEEN (((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt1 WHERE (v0.c0) ORDER BY ((NULL) NOT BETWEEN (((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((NULL) NOT BETWEEN (((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((vt1.c0 IN (v0.c0, vt1.c0, vt1.c0))) AND ((((vt1.c0))>((v0.c0)))))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((vt1.c0 IN (v0.c0, vt1.c0, vt1.c0))) AND ((((vt1.c0))>((v0.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((vt1.c0 IN (v0.c0, vt1.c0, vt1.c0))) AND ((((vt1.c0))>((v0.c0)))))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((vt1.c0 IN (v0.c0, vt1.c0, vt1.c0))) AND ((((vt1.c0))>((v0.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt1.c0 FULL OUTER JOIN v0 ON CAST(NULL AS REAL) WHERE (CAST((((vt0.c0))<>((vt0.c0))) AS NUMERIC)) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<>((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt1.c0 FULL OUTER JOIN v0 ON CAST(NULL AS REAL) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt1.c0 FULL OUTER JOIN v0 ON CAST(NULL AS REAL) WHERE (CAST((((vt0.c0))<>((vt0.c0))) AS NUMERIC)) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<>((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt1.c0 FULL OUTER JOIN v0 ON CAST(NULL AS REAL) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(TYPEOF(DISTINCT x'a9e9')));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(TYPEOF(DISTINCT x'a9e9'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(TYPEOF(DISTINCT x'a9e9')));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(TYPEOF(DISTINCT x'a9e9'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(TYPEOF(DISTINCT x'a9e9')));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOTNULL)))<=((TRIM(v0.c0, v0.c0))))) ORDER BY ((x'cc4c')OR((v0.c0 IN ()))) DESC, ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS FIRST, CASE (v0.c0 IN (v0.c0))  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) WHEN STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0)AND(v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOTNULL)))<=((TRIM(v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((x'cc4c')OR((v0.c0 IN ()))) DESC, ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS FIRST, CASE (v0.c0 IN (v0.c0))  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) WHEN STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0)AND(v0.c0)) END);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOTNULL)))<=((TRIM(v0.c0, v0.c0))))) ORDER BY ((x'cc4c')OR((v0.c0 IN ()))) DESC, ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS FIRST, CASE (v0.c0 IN (v0.c0))  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) WHEN STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0)AND(v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOTNULL)))<=((TRIM(v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((x'cc4c')OR((v0.c0 IN ()))) DESC, ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS FIRST, CASE (v0.c0 IN (v0.c0))  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) WHEN STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0)AND(v0.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1 NOT INDEXED FULL OUTER JOIN vt0 ON v0.c0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0, vt1 NOT INDEXED FULL OUTER JOIN vt0 ON v0.c0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (x'991a');
SELECT SUM(count) FROM (SELECT ((x'991a') IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (x'991a');
SELECT SUM(count) FROM (SELECT ((x'991a') IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (x'991a');
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0) NOT NULL));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((0.6821833774662894 COLLATE NOCASE)>=(((x'')GLOB(0.1648951194491315)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6821833774662894 COLLATE NOCASE)>=(((x'')GLOB(0.1648951194491315))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((0.6821833774662894 COLLATE NOCASE)>=(((x'')GLOB(0.1648951194491315)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6821833774662894 COLLATE NOCASE)>=(((x'')GLOB(0.1648951194491315))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((0.6821833774662894 COLLATE NOCASE)>=(((x'')GLOB(0.1648951194491315)))));
SELECT ALL * FROM v0, vt0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY (~ (v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY (~ (v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((rtreenode(vt0.c0, x'de70'))) AND ((((vt0.c0)*(vt0.c0)))))) ORDER BY CASE (~ (' '))  WHEN 0.08685927595862197 THEN LIKE(vt0.c0, v0.c0, '-') END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((rtreenode(vt0.c0, x'de70'))) AND ((((vt0.c0)*(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (~ (' '))  WHEN 0.08685927595862197 THEN LIKE(vt0.c0, v0.c0, '-') END ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((rtreenode(vt0.c0, x'de70'))) AND ((((vt0.c0)*(vt0.c0)))))) ORDER BY CASE (~ (' '))  WHEN 0.08685927595862197 THEN LIKE(vt0.c0, v0.c0, '-') END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((rtreenode(vt0.c0, x'de70'))) AND ((((vt0.c0)*(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (~ (' '))  WHEN 0.08685927595862197 THEN LIKE(vt0.c0, v0.c0, '-') END ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((rtreenode(vt0.c0, x'de70'))) AND ((((vt0.c0)*(vt0.c0)))))) ORDER BY CASE (~ (' '))  WHEN 0.08685927595862197 THEN LIKE(vt0.c0, v0.c0, '-') END ASC;
SELECT ALL * FROM vt0, v0 WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.2955680149353088)))) ORDER BY CAST(((vt0.c0)>=('')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (LIKELIHOOD(vt0.c0, 0.2955680149353088)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((vt0.c0)>=('')) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.2955680149353088)))) ORDER BY CAST(((vt0.c0)>=('')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (LIKELIHOOD(vt0.c0, 0.2955680149353088)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((vt0.c0)>=('')) AS REAL)  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (('i)ⴏY1%㍵pj') NOT BETWEEN (7.79302295E8) AND (vt1.c0))  WHEN x'' THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE RTRIM END WHERE ((+ (((0.99374291952075)<(vt1.c0))))) ORDER BY (((((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.99374291952075)<(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE (('i)ⴏY1%㍵pj') NOT BETWEEN (7.79302295E8) AND (vt1.c0))  WHEN x'' THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE RTRIM END ORDER BY (((((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (('i)ⴏY1%㍵pj') NOT BETWEEN (7.79302295E8) AND (vt1.c0))  WHEN x'' THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE RTRIM END WHERE ((+ (((0.99374291952075)<(vt1.c0))))) ORDER BY (((((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.99374291952075)<(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE (('i)ⴏY1%㍵pj') NOT BETWEEN (7.79302295E8) AND (vt1.c0))  WHEN x'' THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE RTRIM END ORDER BY (((((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (('i)ⴏY1%㍵pj') NOT BETWEEN (7.79302295E8) AND (vt1.c0))  WHEN x'' THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE RTRIM END WHERE ((+ (((0.99374291952075)<(vt1.c0))))) ORDER BY (((((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC);
SELECT ALL * FROM vt0 WHERE (highlight(vt0.c0, ((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt0.c0, ((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), UNLIKELY(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (highlight(vt0.c0, ((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt0.c0, ((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), UNLIKELY(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)>(vt0.c0)) COLLATE BINARY) ORDER BY ''  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY ''  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)>(vt0.c0)) COLLATE BINARY) ORDER BY ''  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY ''  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)>(vt0.c0)) COLLATE BINARY) ORDER BY ''  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((json_quote(vt1.c0))) AND ((NULL)))) ORDER BY ((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0)=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((json_quote(vt1.c0))) AND ((NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0)=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((json_quote(vt1.c0))) AND ((NULL)))) ORDER BY ((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0)=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((json_quote(vt1.c0))) AND ((NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0)=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((json_quote(vt1.c0))) AND ((NULL)))) ORDER BY ((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0)=(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((-1703587712 COLLATE RTRIM)) AND ((vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((-1703587712 COLLATE RTRIM)) AND ((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((-1703587712 COLLATE RTRIM)) AND ((vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((-1703587712 COLLATE RTRIM)) AND ((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((-1703587712 COLLATE RTRIM)) AND ((vt1.c0 COLLATE NOCASE))));
SELECT ALL * FROM v0, vt0, vt1 WHERE (0.4128596356971955) ORDER BY ((((CAST(8.31716226E8 AS REAL))AND(x'921f9ddb')))AND(CASE WHEN vt1.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((0.4128596356971955) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((CAST(8.31716226E8 AS REAL))AND(x'921f9ddb')))AND(CASE WHEN vt1.c0 THEN v0.c0 END)) DESC);
SELECT ALL * FROM v0, vt0, vt1 WHERE (0.4128596356971955) ORDER BY ((((CAST(8.31716226E8 AS REAL))AND(x'921f9ddb')))AND(CASE WHEN vt1.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((0.4128596356971955) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((CAST(8.31716226E8 AS REAL))AND(x'921f9ddb')))AND(CASE WHEN vt1.c0 THEN v0.c0 END)) DESC);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT * FROM v0, vt0 WHERE ((((((vt0.c0, v0.c0, vt0.c0))>(('386552321', vt0.c0, v0.c0))))>=((((vt0.c0, v0.c0, v0.c0))>=((vt0.c0, v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0))>(('386552321', vt0.c0, v0.c0))))>=((((vt0.c0, v0.c0, v0.c0))>=((vt0.c0, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c0, v0.c0, vt0.c0))>(('386552321', vt0.c0, v0.c0))))>=((((vt0.c0, v0.c0, v0.c0))>=((vt0.c0, v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0))>(('386552321', vt0.c0, v0.c0))))>=((((vt0.c0, v0.c0, v0.c0))>=((vt0.c0, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON '' WHERE ((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON '');
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON '' WHERE ((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON '');
SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt1 ON ((((((vt1.c0)) NOT BETWEEN ((0X3dd3c5de)) AND ((vt0.c0)))))<=((CAST(v0.c0 AS INTEGER)))) INNER JOIN vt0 ON vt1.c0 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(x'')))=((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(x'')))==((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON ((((((vt1.c0)) NOT BETWEEN ((0X3dd3c5de)) AND ((vt0.c0)))))<=((CAST(v0.c0 AS INTEGER)))) INNER JOIN vt0 ON vt1.c0);
SELECT COUNT(*) FROM v0 CROSS JOIN vt1 ON ((((((vt1.c0)) NOT BETWEEN ((0X3dd3c5de)) AND ((vt0.c0)))))<=((CAST(v0.c0 AS INTEGER)))) INNER JOIN vt0 ON vt1.c0 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(x'')))=((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(x'')))==((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON ((((((vt1.c0)) NOT BETWEEN ((0X3dd3c5de)) AND ((vt0.c0)))))<=((CAST(v0.c0 AS INTEGER)))) INNER JOIN vt0 ON vt1.c0);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN v0.c0 THEN (v0.c0 IN ()) END ASC, TYPEOF(v0.c0) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN v0.c0 THEN (v0.c0 IN ()) END ASC, TYPEOF(v0.c0) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN v0.c0 THEN (v0.c0 IN ()) END ASC, TYPEOF(v0.c0) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN v0.c0 THEN (v0.c0 IN ()) END ASC, TYPEOF(v0.c0) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN ())))) ORDER BY CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN ())))) ORDER BY CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (v0.c0) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)|('⺱㾇')))||(NULL COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)|('⺱㾇')))||(NULL COLLATE RTRIM)) DESC);
SELECT * FROM vt0, v0 WHERE (v0.c0) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)|('⺱㾇')))||(NULL COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)|('⺱㾇')))||(NULL COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM v0, vt1, vt0 WHERE (CASE ((vt1.c0)IS(vt1.c0))  WHEN (0.19192798213563056 IN (v0.c0)) THEN ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) END) ORDER BY (((- (vt1.c0))) BETWEEN ((((x'', vt0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '')))) AND (((((vt1.c0)AND(v0.c0)))AND(-4.17899123E8))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)IS(vt1.c0))  WHEN (0.19192798213563056 IN (v0.c0)) THEN ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((- (vt1.c0))) BETWEEN ((((x'', vt0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '')))) AND (((((vt1.c0)AND(v0.c0)))AND(-4.17899123E8))))  NULLS LAST);
SELECT * FROM v0, vt1, vt0 WHERE (CASE ((vt1.c0)IS(vt1.c0))  WHEN (0.19192798213563056 IN (v0.c0)) THEN ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) END) ORDER BY (((- (vt1.c0))) BETWEEN ((((x'', vt0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '')))) AND (((((vt1.c0)AND(v0.c0)))AND(-4.17899123E8))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)IS(vt1.c0))  WHEN (0.19192798213563056 IN (v0.c0)) THEN ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((- (vt1.c0))) BETWEEN ((((x'', vt0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '')))) AND (((((vt1.c0)AND(v0.c0)))AND(-4.17899123E8))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((((vt1.c0)AND(v0.c0)), (((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt1.c0)), (- (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(v0.c0)), (((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt1.c0)), (- (vt1.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((((vt1.c0)AND(v0.c0)), (((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt1.c0)), (- (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(v0.c0)), (((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt1.c0)), (- (vt1.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt1, vt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))+(0.04279829955803138 COLLATE BINARY))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))+(0.04279829955803138 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT * FROM vt1, vt0, v0 WHERE (((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))+(0.04279829955803138 COLLATE BINARY))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))+(0.04279829955803138 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0 WHERE (('2㵱' IN ()) COLLATE RTRIM) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN (0X309978a7, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('2㵱' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN (0x309978a7, v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (('2㵱' IN ()) COLLATE RTRIM) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN (0X309978a7, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('2㵱' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN (0x309978a7, v0.c0))))));
SELECT * FROM v0, vt0, vt1 WHERE (MAX(((v0.c0) IS FALSE), -26338743)) ORDER BY ((((vt0.c0)>(vt0.c0)))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((MAX(((v0.c0) IS FALSE), -26338743)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((vt0.c0)>(vt0.c0)))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC);
SELECT * FROM v0, vt0, vt1 WHERE (MAX(((v0.c0) IS FALSE), -26338743)) ORDER BY ((((vt0.c0)>(vt0.c0)))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((MAX(((v0.c0) IS FALSE), -26338743)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((vt0.c0)>(vt0.c0)))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY TRIM((vt1.c0 IN ())) ASC  NULLS FIRST, (((('1542812542')OR((- (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, (NOT (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY TRIM((vt1.c0 IN ())) ASC  NULLS FIRST, (((('1542812542')OR((- (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, (NOT (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY TRIM((vt1.c0 IN ())) ASC  NULLS FIRST, (((('1542812542')OR((- (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, (NOT (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY TRIM((vt1.c0 IN ())) ASC  NULLS FIRST, (((('1542812542')OR((- (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, (NOT (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY TRIM((vt1.c0 IN ())) ASC  NULLS FIRST, (((('1542812542')OR((- (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, (NOT (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (x'81b8') ORDER BY CASE WHEN -938840346 THEN INSTR(v0.c0, vt1.c0) END  NULLS FIRST, CASE WHEN '-14154871' THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'81b8') IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CASE WHEN -938840346 THEN INSTR(v0.c0, vt1.c0) END  NULLS FIRST, CASE WHEN '-14154871' THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (x'81b8') ORDER BY CASE WHEN -938840346 THEN INSTR(v0.c0, vt1.c0) END  NULLS FIRST, CASE WHEN '-14154871' THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'81b8') IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CASE WHEN -938840346 THEN INSTR(v0.c0, vt1.c0) END  NULLS FIRST, CASE WHEN '-14154871' THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON IFNULL(((v0.c0) ISNULL), ((v0.c0)<=(vt0.c0))) LEFT OUTER JOIN v0 ON LOWER((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) WHERE (vt1.c0) ORDER BY (CASE ''  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END IN ((+ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON IFNULL(((v0.c0) ISNULL), ((v0.c0)<=(vt0.c0))) LEFT OUTER JOIN v0 ON LOWER((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) ORDER BY (CASE ''  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END IN ((+ (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON IFNULL(((v0.c0) ISNULL), ((v0.c0)<=(vt0.c0))) LEFT OUTER JOIN v0 ON LOWER((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) WHERE (vt1.c0) ORDER BY (CASE ''  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END IN ((+ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON IFNULL(((v0.c0) ISNULL), ((v0.c0)<=(vt0.c0))) LEFT OUTER JOIN v0 ON LOWER((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) ORDER BY (CASE ''  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END IN ((+ (v0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)>(vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0) ISNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'ad50' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END, (((x''))>((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)>(vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'ad50' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END, (((x''))>((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)>(vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0) ISNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'ad50' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END, (((x''))>((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)>(vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'ad50' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END, (((x''))>((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)>(vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0) ISNULL)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'ad50' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END, (((x''))>((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN LIKE(vt0.c0, vt1.c0, 'A') THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE vt1.c0 END) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)%(vt1.c0))  WHEN LIKE(vt0.c0, vt1.c0, 'A') THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN LIKE(vt0.c0, vt1.c0, 'A') THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE vt1.c0 END) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)%(vt1.c0))  WHEN LIKE(vt0.c0, vt1.c0, 'A') THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN LIKE(vt0.c0, vt1.c0, 'A') THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE vt1.c0 END) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)+(v0.c0)) AS BLOB) WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)+(v0.c0)) AS BLOB));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)+(v0.c0)) AS BLOB) WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)+(v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (MAX(((-426058847) NOT BETWEEN (vt1.c0) AND (v0.c0)), v0.c0, x'', ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(((-426058847) NOT BETWEEN (vt1.c0) AND (v0.c0)), v0.c0, x'', ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (MAX(((-426058847) NOT BETWEEN (vt1.c0) AND (v0.c0)), v0.c0, x'', ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(((-426058847) NOT BETWEEN (vt1.c0) AND (v0.c0)), v0.c0, x'', ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')), ((vt1.c0) NOT NULL), ((vt1.c0)+(0.027565549907261455))))>=(((('815364263')+(vt0.c0)), (~ (vt1.c0)), ((vt1.c0) IS TRUE))))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL)))=(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')), ((vt1.c0) NOT NULL), ((vt1.c0)+(0.027565549907261455))))>=(((('815364263')+(vt0.c0)), (~ (vt1.c0)), ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL)))=(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')), ((vt1.c0) NOT NULL), ((vt1.c0)+(0.027565549907261455))))>=(((('815364263')+(vt0.c0)), (~ (vt1.c0)), ((vt1.c0) IS TRUE))))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL)))=(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')), ((vt1.c0) NOT NULL), ((vt1.c0)+(0.027565549907261455))))>=(((('815364263')+(vt0.c0)), (~ (vt1.c0)), ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL)))=(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')), ((vt1.c0) NOT NULL), ((vt1.c0)+(0.027565549907261455))))>=(((('815364263')+(vt0.c0)), (~ (vt1.c0)), ((vt1.c0) IS TRUE))))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL)))=(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON ((((((((((vt1.c0)%(vt0.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(CASE '-1703587712'  WHEN v0.c0 THEN vt1.c0 END)))OR(((vt0.c0)LIKE(-1.503579279E9)))))AND(((vt1.c0)IS NOT(vt0.c0)))) WHERE (((((vt0.c0, v0.c0, vt1.c0))==((vt0.c0, '_!dR', vt1.c0))) IN (PRINTF(v0.c0)))) ORDER BY (((((((vt1.c0))<=((v0.c0))))AND((~ (v0.c0)))))AND(((((((((0.43612661990929313)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR('1038409333')))) DESC  NULLS LAST, ((v0.c0)+(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, v0.c0, vt1.c0))=((vt0.c0, '_!dR', vt1.c0))) IN (PRINTF(v0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON ((((((((((vt1.c0)%(vt0.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(CASE '-1703587712'  WHEN v0.c0 THEN vt1.c0 END)))OR(((vt0.c0)LIKE(-1.503579279E9)))))AND(((vt1.c0)IS NOT(vt0.c0)))) ORDER BY (((((((vt1.c0))<=((v0.c0))))AND((~ (v0.c0)))))AND(((((((((0.43612661990929313)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR('1038409333')))) DESC  NULLS LAST, ((v0.c0)+(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON ((((((((((vt1.c0)%(vt0.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(CASE '-1703587712'  WHEN v0.c0 THEN vt1.c0 END)))OR(((vt0.c0)LIKE(-1.503579279E9)))))AND(((vt1.c0)IS NOT(vt0.c0)))) WHERE (((((vt0.c0, v0.c0, vt1.c0))==((vt0.c0, '_!dR', vt1.c0))) IN (PRINTF(v0.c0)))) ORDER BY (((((((vt1.c0))<=((v0.c0))))AND((~ (v0.c0)))))AND(((((((((0.43612661990929313)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR('1038409333')))) DESC  NULLS LAST, ((v0.c0)+(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, v0.c0, vt1.c0))=((vt0.c0, '_!dR', vt1.c0))) IN (PRINTF(v0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON ((((((((((vt1.c0)%(vt0.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(CASE '-1703587712'  WHEN v0.c0 THEN vt1.c0 END)))OR(((vt0.c0)LIKE(-1.503579279E9)))))AND(((vt1.c0)IS NOT(vt0.c0)))) ORDER BY (((((((vt1.c0))<=((v0.c0))))AND((~ (v0.c0)))))AND(((((((((0.43612661990929313)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR('1038409333')))) DESC  NULLS LAST, ((v0.c0)+(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON ((((((((((vt1.c0)%(vt0.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(CASE '-1703587712'  WHEN v0.c0 THEN vt1.c0 END)))OR(((vt0.c0)LIKE(-1.503579279E9)))))AND(((vt1.c0)IS NOT(vt0.c0)))) WHERE (((((vt0.c0, v0.c0, vt1.c0))==((vt0.c0, '_!dR', vt1.c0))) IN (PRINTF(v0.c0)))) ORDER BY (((((((vt1.c0))<=((v0.c0))))AND((~ (v0.c0)))))AND(((((((((0.43612661990929313)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR('1038409333')))) DESC  NULLS LAST, ((v0.c0)+(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY (((vt0.c0))!=((vt1.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0))!=((vt1.c0))) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY (((vt0.c0))!=((vt1.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0))!=((vt1.c0))) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY (((vt0.c0))!=((vt1.c0))) COLLATE RTRIM;
SELECT COUNT(*) FROM v0 WHERE (CASE TRIM(DISTINCT v0.c0, v0.c0)  WHEN CASE NULL  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) ORDER BY (+ ((('8404725657869161307')||(v0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)|(CAST(v0.c0 AS REAL))), LOWER(DISTINCT ((v0.c0)<(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT v0.c0, v0.c0)  WHEN CASE NULL  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (+ ((('8404725657869161307')||(v0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)|(CAST(v0.c0 AS REAL))), LOWER(DISTINCT ((v0.c0)<(v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE TRIM(DISTINCT v0.c0, v0.c0)  WHEN CASE NULL  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) ORDER BY (+ ((('8404725657869161307')||(v0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)|(CAST(v0.c0 AS REAL))), LOWER(DISTINCT ((v0.c0)<(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT v0.c0, v0.c0)  WHEN CASE NULL  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (+ ((('8404725657869161307')||(v0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)|(CAST(v0.c0 AS REAL))), LOWER(DISTINCT ((v0.c0)<(v0.c0)))  NULLS LAST);
SELECT * FROM vt1, vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (LOWER(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (LOWER(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (LOWER(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (LOWER(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN NULL WHEN (vt1.c0 IN ()) THEN (+ (vt0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(0x374facb8 AS TEXT) END) ORDER BY ((((('5''')) BETWEEN ((vt0.c0)) AND ((6.9480545E8)))) IS FALSE) DESC  NULLS LAST, ((((vt1.c0)<(vt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN ()) THEN NULL WHEN (vt1.c0 IN ()) THEN (+ (vt0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(0X374facb8 AS TEXT) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((('5''')) BETWEEN ((vt0.c0)) AND ((6.9480545E8)))) IS FALSE) DESC  NULLS LAST, ((((vt1.c0)<(vt1.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN NULL WHEN (vt1.c0 IN ()) THEN (+ (vt0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(0x374facb8 AS TEXT) END) ORDER BY ((((('5''')) BETWEEN ((vt0.c0)) AND ((6.9480545E8)))) IS FALSE) DESC  NULLS LAST, ((((vt1.c0)<(vt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN ()) THEN NULL WHEN (vt1.c0 IN ()) THEN (+ (vt0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(0X374facb8 AS TEXT) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((('5''')) BETWEEN ((vt0.c0)) AND ((6.9480545E8)))) IS FALSE) DESC  NULLS LAST, ((((vt1.c0)<(vt1.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN NULL WHEN (vt1.c0 IN ()) THEN (+ (vt0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(0x374facb8 AS TEXT) END) ORDER BY ((((('5''')) BETWEEN ((vt0.c0)) AND ((6.9480545E8)))) IS FALSE) DESC  NULLS LAST, ((((vt1.c0)<(vt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN x'' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN x'' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN x'' END);
SELECT ALL COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID());
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((((vt1.c0, vt0.c0, vt1.c0))<>((vt1.c0, v0.c0, v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt0.c0, vt1.c0))<>((vt1.c0, v0.c0, v0.c0)))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((((vt1.c0, vt0.c0, vt1.c0))<>((vt1.c0, v0.c0, v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt0.c0, vt1.c0))<>((vt1.c0, v0.c0, v0.c0)))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON '-647194424' WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON '-647194424');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON '-647194424' WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON '-647194424');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON '-647194424' WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0)AND(v0.c0)) THEN (- (v0.c0)) END) ORDER BY (- (((0Xffffffffa363ba6a)+(v0.c0)))) DESC, (((v0.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS INTEGER)))<((((('397172159', v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE RTRIM, (NOT (v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)AND(v0.c0)) THEN (- (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (- (((0Xffffffffa363ba6a)+(v0.c0)))) DESC, (((v0.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS INTEGER)))<((((('397172159', v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE RTRIM, (NOT (v0.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0)AND(v0.c0)) THEN (- (v0.c0)) END) ORDER BY (- (((0Xffffffffa363ba6a)+(v0.c0)))) DESC, (((v0.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS INTEGER)))<((((('397172159', v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE RTRIM, (NOT (v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)AND(v0.c0)) THEN (- (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (- (((0Xffffffffa363ba6a)+(v0.c0)))) DESC, (((v0.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS INTEGER)))<((((('397172159', v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE RTRIM, (NOT (v0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (TRIM(DISTINCT x'', NULL));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT x'', NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (TRIM(DISTINCT x'', NULL));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT x'', NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (TRIM(DISTINCT x'', NULL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM v0, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)>((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2347543766029182 WHEN vt0.c0 THEN '譑N?㵱8	J' WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((0.5658619266917992) IS TRUE)))), CAST(json_quote(vt0.c0) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2347543766029182 WHEN vt0.c0 THEN '譑N?㵱8	J' WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((0.5658619266917992) IS TRUE)))), CAST(json_quote(vt0.c0) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)>((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2347543766029182 WHEN vt0.c0 THEN '譑N?㵱8	J' WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((0.5658619266917992) IS TRUE)))), CAST(json_quote(vt0.c0) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2347543766029182 WHEN vt0.c0 THEN '譑N?㵱8	J' WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((0.5658619266917992) IS TRUE)))), CAST(json_quote(vt0.c0) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (QUOTE(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (QUOTE(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (QUOTE(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT * FROM vt0, v0 CROSS JOIN vt1 ON ((vt0.c0) NOTNULL) COLLATE NOCASE WHERE (CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON ((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT * FROM vt0, v0 CROSS JOIN vt1 ON ((vt0.c0) NOTNULL) COLLATE NOCASE WHERE (CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON ((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM v0, vt1, vt0 WHERE (((((((((CHAR(v0.c0))AND((((vt1.c0))<((vt1.c0))))))AND(((v0.c0) IS FALSE))))OR(((vt0.c0)==(vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))!=((((v0.c0)IS NOT(NULL))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((CHAR(v0.c0))AND((((vt1.c0))<((vt1.c0))))))AND(((v0.c0) IS FALSE))))OR(((vt0.c0)==(vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))!=((((v0.c0)IS NOT(NULL))))) DESC);
SELECT * FROM v0, vt1, vt0 WHERE (((((((((CHAR(v0.c0))AND((((vt1.c0))<((vt1.c0))))))AND(((v0.c0) IS FALSE))))OR(((vt0.c0)==(vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))!=((((v0.c0)IS NOT(NULL))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((CHAR(v0.c0))AND((((vt1.c0))<((vt1.c0))))))AND(((v0.c0) IS FALSE))))OR(((vt0.c0)==(vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))!=((((v0.c0)IS NOT(NULL))))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((- (v0.c0)) COLLATE BINARY) ORDER BY CAST(((v0.c0) NOTNULL) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(((v0.c0) NOTNULL) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((- (v0.c0)) COLLATE BINARY) ORDER BY CAST(((v0.c0) NOTNULL) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(((v0.c0) NOTNULL) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt1, v0, vt0 WHERE ((((LIKELIHOOD(vt1.c0, 0.34879318089448597)))>((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(vt1.c0, 0.34879318089448597)))>((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE ((((LIKELIHOOD(vt1.c0, 0.34879318089448597)))>((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(vt1.c0, 0.34879318089448597)))>((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END  WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) WHEN 'hx' THEN ((vt0.c0)==(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) THEN (((0.5548633934139954, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-755868020' WHEN v0.c0 THEN v0.c0 ELSE '!osN' END THEN ((vt0.c0)+(v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (0.8554464305063094) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END  WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) WHEN 'hx' THEN ((vt0.c0)==(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) THEN (((0.5548633934139954, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-755868020' WHEN v0.c0 THEN v0.c0 ELSE '!osN' END THEN ((vt0.c0)+(v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (0.8554464305063094) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END  WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) WHEN 'hx' THEN ((vt0.c0)==(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) THEN (((0.5548633934139954, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-755868020' WHEN v0.c0 THEN v0.c0 ELSE '!osN' END THEN ((vt0.c0)+(v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (0.8554464305063094) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END  WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) WHEN 'hx' THEN ((vt0.c0)==(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) THEN (((0.5548633934139954, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-755868020' WHEN v0.c0 THEN v0.c0 ELSE '!osN' END THEN ((vt0.c0)+(v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (0.8554464305063094) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((((vt1.c0)GLOB(x'4c91'))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((vt1.c0)GLOB(x'4c91'))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ('')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((((vt1.c0)GLOB(x'4c91'))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((vt1.c0)GLOB(x'4c91'))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ('')) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt1 CROSS JOIN vt0 ON ((0.9159103511476391)IS NOT(((vt1.c0)>>(v0.c0)))) WHERE (((((v0.c0)OR(CAST(vt1.c0 AS TEXT))))AND(vt0.c0 COLLATE BINARY))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END))>((((v0.c0)<>(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(CAST(vt1.c0 AS TEXT))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON ((0.9159103511476391)IS NOT(((vt1.c0)>>(v0.c0)))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END))>((((v0.c0)!=(vt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1 CROSS JOIN vt0 ON ((0.9159103511476391)IS NOT(((vt1.c0)>>(v0.c0)))) WHERE (((((v0.c0)OR(CAST(vt1.c0 AS TEXT))))AND(vt0.c0 COLLATE BINARY))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END))>((((v0.c0)<>(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(CAST(vt1.c0 AS TEXT))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON ((0.9159103511476391)IS NOT(((vt1.c0)>>(v0.c0)))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END))>((((v0.c0)!=(vt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY x'');
SELECT ALL * FROM vt0, v0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY x'');
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY (((x'' IN (vt1.c0, vt1.c0)))<<(CAST(vt1.c0 AS REAL))), (- (rtreenode(vt1.c0, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((x'' IN (vt1.c0, vt1.c0)))<<(CAST(vt1.c0 AS REAL))), (- (rtreenode(vt1.c0, vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY (((x'' IN (vt1.c0, vt1.c0)))<<(CAST(vt1.c0 AS REAL))), (- (rtreenode(vt1.c0, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((x'' IN (vt1.c0, vt1.c0)))<<(CAST(vt1.c0 AS REAL))), (- (rtreenode(vt1.c0, vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY (((x'' IN (vt1.c0, vt1.c0)))<<(CAST(vt1.c0 AS REAL))), (- (rtreenode(vt1.c0, vt1.c0)))  NULLS FIRST;
SELECT * FROM v0 WHERE (COALESCE(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END, v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END, v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (COALESCE(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END, v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END, v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT * FROM vt1, vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) END WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN ((- (vt1.c0))) AND (((v0.c0) NOT NULL)))) ORDER BY ((v0.c0)+(vt1.c0)) COLLATE RTRIM ASC, ((- (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) NOT BETWEEN ((- (vt1.c0))) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) END ORDER BY ((v0.c0)+(vt1.c0)) COLLATE RTRIM ASC, ((- (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) END WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN ((- (vt1.c0))) AND (((v0.c0) NOT NULL)))) ORDER BY ((v0.c0)+(vt1.c0)) COLLATE RTRIM ASC, ((- (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) NOT BETWEEN ((- (vt1.c0))) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) END ORDER BY ((v0.c0)+(vt1.c0)) COLLATE RTRIM ASC, ((- (vt0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt1 INNER JOIN vt0 ON '927968440' WHERE ('-182688413') ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END)|(INSTR(vt0.c0, 0.7585877574936802))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-182688413') IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '927968440' ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END)|(INSTR(vt0.c0, 0.7585877574936802))) DESC  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN vt0 ON '927968440' WHERE ('-182688413') ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END)|(INSTR(vt0.c0, 0.7585877574936802))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-182688413') IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '927968440' ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END)|(INSTR(vt0.c0, 0.7585877574936802))) DESC  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN vt0 ON '927968440' WHERE ('-182688413') ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END)|(INSTR(vt0.c0, 0.7585877574936802))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 2.1577073E7 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.5095860012138658)))))) ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(0.30548014419365177)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 2.1577073E7 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.5095860012138658)))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(0.30548014419365177)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 2.1577073E7 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.5095860012138658)))))) ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(0.30548014419365177)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 2.1577073E7 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.5095860012138658)))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(0.30548014419365177)) AS REAL) ASC);
SELECT * FROM vt1 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)IS((((v0.c0))<>((vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) WHERE ((((((vt1.c0))<((v0.c0)))) NOT BETWEEN (((vt0.c0)/('1504614472'))) AND (x'' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((v0.c0)))) NOT BETWEEN (((vt0.c0)/('1504614472'))) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)IS((((v0.c0))<>((vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)IS((((v0.c0))<>((vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) WHERE ((((((vt1.c0))<((v0.c0)))) NOT BETWEEN (((vt0.c0)/('1504614472'))) AND (x'' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((v0.c0)))) NOT BETWEEN (((vt0.c0)/('1504614472'))) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)IS((((v0.c0))<>((vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)>>(((vt0.c0) NOT NULL)))) ORDER BY UNLIKELY(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>>(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY UNLIKELY(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)>>(((vt0.c0) NOT NULL)))) ORDER BY UNLIKELY(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>>(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY UNLIKELY(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), LOWER(vt0.c0), (NOT (v0.c0)))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((v0.c0)<=(vt1.c0)))))) ORDER BY (- ((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), LOWER(vt0.c0), (NOT (v0.c0)))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((v0.c0)<=(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (- ((~ (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), LOWER(vt0.c0), (NOT (v0.c0)))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((v0.c0)<=(vt1.c0)))))) ORDER BY (- ((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), LOWER(vt0.c0), (NOT (v0.c0)))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((v0.c0)<=(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (- ((~ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1, v0 WHERE ((+ (((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0))))) ORDER BY ((((((((((((((vt1.c0)*(vt1.c0)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(v0.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(v0.c0)))OR(((v0.c0) IS TRUE))) DESC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0)+(vt1.c0)), ((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((((((((vt1.c0)*(vt1.c0)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(v0.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(v0.c0)))OR(((v0.c0) IS TRUE))) DESC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0)+(vt1.c0)), ((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((+ (((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0))))) ORDER BY ((((((((((((((vt1.c0)*(vt1.c0)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(v0.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(v0.c0)))OR(((v0.c0) IS TRUE))) DESC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0)+(vt1.c0)), ((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((((((((vt1.c0)*(vt1.c0)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))AND(v0.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(v0.c0)))OR(((v0.c0) IS TRUE))) DESC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0)+(vt1.c0)), ((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (HEX(DISTINCT vt1.c0) COLLATE BINARY) ORDER BY ((((vt1.c0)LIKE(vt1.c0)))<>(((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)LIKE(vt1.c0)))<>(((vt1.c0)<(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (HEX(DISTINCT vt1.c0) COLLATE BINARY) ORDER BY ((((vt1.c0)LIKE(vt1.c0)))<>(((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)LIKE(vt1.c0)))<>(((vt1.c0)<(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (HEX(DISTINCT vt1.c0) COLLATE BINARY) ORDER BY ((((vt1.c0)LIKE(vt1.c0)))<>(((vt1.c0)<(vt1.c0))));
SELECT COUNT(*) FROM vt1, v0 WHERE (x'') ORDER BY (((((((((- (vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(ROUND(vt1.c0, vt1.c0))))OR(((v0.c0)IS(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((((- (vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(ROUND(vt1.c0, vt1.c0))))OR(((v0.c0)IS(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1, v0 WHERE (x'') ORDER BY (((((((((- (vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(ROUND(vt1.c0, vt1.c0))))OR(((v0.c0)IS(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((((- (vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(ROUND(vt1.c0, vt1.c0))))OR(((v0.c0)IS(vt1.c0)))) ASC);
SELECT * FROM vt0 WHERE ('1855979250') ORDER BY NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('1855979250') IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE ('1855979250') ORDER BY NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('1855979250') IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE ('1855979250') ORDER BY NULL COLLATE NOCASE DESC;
SELECT ALL * FROM vt1 WHERE (((((((((0.24550302910150457)AND(-7.5586802E8)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.24550302910150457)AND(-7.5586802E8)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((0.24550302910150457)AND(-7.5586802E8)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.24550302910150457)AND(-7.5586802E8)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((0.24550302910150457)AND(-7.5586802E8)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL)));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (0x722eac22) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x722eac22) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (0x722eac22) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x722eac22) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (0x722eac22) ORDER BY vt1.c0  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (ABS(vt0.c0)) ORDER BY ((vt0.c0 COLLATE BINARY)=(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0 COLLATE BINARY)==(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (ABS(vt0.c0)) ORDER BY ((vt0.c0 COLLATE BINARY)=(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0 COLLATE BINARY)==(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0)))!=(((v0.c0)!=(v0.c0))))) ORDER BY (CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1290717819 THEN v0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))<>(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1290717819 THEN v0.c0 END IN ()));
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0)))!=(((v0.c0)!=(v0.c0))))) ORDER BY (CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1290717819 THEN v0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))<>(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -1290717819 THEN v0.c0 END IN ()));
SELECT ALL * FROM vt1, v0, vt0 WHERE (((((CAST(NULL AS TEXT))AND(((v0.c0)>(vt0.c0)))))OR(((vt0.c0)*(vt1.c0))))) ORDER BY CASE ((vt0.c0)LIKE(vt0.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END, COALESCE(DISTINCT vt1.c0, vt1.c0, vt0.c0, x'44a6', vt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(NULL AS TEXT))AND(((v0.c0)>(vt0.c0)))))OR(((vt0.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CASE ((vt0.c0)LIKE(vt0.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END, COALESCE(DISTINCT vt1.c0, vt1.c0, vt0.c0, x'44a6', vt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((((CAST(NULL AS TEXT))AND(((v0.c0)>(vt0.c0)))))OR(((vt0.c0)*(vt1.c0))))) ORDER BY CASE ((vt0.c0)LIKE(vt0.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END, COALESCE(DISTINCT vt1.c0, vt1.c0, vt0.c0, x'44a6', vt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(NULL AS TEXT))AND(((v0.c0)>(vt0.c0)))))OR(((vt0.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CASE ((vt0.c0)LIKE(vt0.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END, COALESCE(DISTINCT vt1.c0, vt1.c0, vt0.c0, x'44a6', vt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT)) ORDER BY ((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)||(((vt1.c0)<=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)||(((vt1.c0)<=(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT)) ORDER BY ((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)||(((vt1.c0)<=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)||(((vt1.c0)<=(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN v0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN v0 ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN v0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN v0 ORDER BY ((vt0.c0) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(((vt0.c0) ISNULL))))OR((+ (v0.c0))))) ORDER BY (- (rtreenode(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(((vt0.c0) ISNULL))))OR((+ (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (rtreenode(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(((vt0.c0) ISNULL))))OR((+ (v0.c0))))) ORDER BY (- (rtreenode(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(((vt0.c0) ISNULL))))OR((+ (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (rtreenode(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (+ ('xꄳ')) FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE))) WHERE (CASE ((((vt1.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.24893653247794245 WHEN NULL THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<<(v0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.24893653247794245 WHEN NULL THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<<(v0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (+ ('xꄳ')) FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (+ ('xꄳ')) FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE))) WHERE (CASE ((((vt1.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.24893653247794245 WHEN NULL THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<<(v0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.24893653247794245 WHEN NULL THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<<(v0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (+ ('xꄳ')) FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE NOCASE)))AND(((v0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)!=(vt1.c0)))GLOB(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (NOT ((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))) DESC, (((0.7042661857107735))<=((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)!=(vt1.c0)))GLOB(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (NOT ((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))) DESC, (((0.7042661857107735))<=((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)!=(vt1.c0)))GLOB(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (NOT ((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))) DESC, (((0.7042661857107735))<=((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)!=(vt1.c0)))GLOB(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (NOT ((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))) DESC, (((0.7042661857107735))<=((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((~ ((vt1.c0 IN (v0.c0, vt0.c0))))) ORDER BY (((vt0.c0 IN ()))<(0.8554464305063094)) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN (v0.c0, vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((vt0.c0 IN ()))<(0.8554464305063094)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((~ ((vt1.c0 IN (v0.c0, vt0.c0))))) ORDER BY (((vt0.c0 IN ()))<(0.8554464305063094)) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN (v0.c0, vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((vt0.c0 IN ()))<(0.8554464305063094)) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS BLOB)  WHEN -647194424 THEN vt0.c0 END WHERE ((((((('1855979250') IS FALSE))AND(CAST('45206864' AS INTEGER))))AND((~ (vt1.c0))))) ORDER BY CAST(vt1.c0 AS BLOB), ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c0))  NULLS FIRST, (+ (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('1855979250') IS FALSE))AND(CAST('45206864' AS INTEGER))))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS BLOB)  WHEN -647194424 THEN vt0.c0 END ORDER BY CAST(vt1.c0 AS BLOB), ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c0))  NULLS FIRST, (+ (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS BLOB)  WHEN -647194424 THEN vt0.c0 END WHERE ((((((('1855979250') IS FALSE))AND(CAST('45206864' AS INTEGER))))AND((~ (vt1.c0))))) ORDER BY CAST(vt1.c0 AS BLOB), ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c0))  NULLS FIRST, (+ (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('1855979250') IS FALSE))AND(CAST('45206864' AS INTEGER))))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS BLOB)  WHEN -647194424 THEN vt0.c0 END ORDER BY CAST(vt1.c0 AS BLOB), ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c0))  NULLS FIRST, (+ (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS BLOB)  WHEN -647194424 THEN vt0.c0 END WHERE ((((((('1855979250') IS FALSE))AND(CAST('45206864' AS INTEGER))))AND((~ (vt1.c0))))) ORDER BY CAST(vt1.c0 AS BLOB), ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c0))  NULLS FIRST, (+ (vt0.c0))  NULLS LAST;
SELECT * FROM v0 WHERE (((LIKELY(v0.c0))<((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 0.4128596356971955))))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0))<((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 0.4128596356971955)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((LIKELY(v0.c0))<((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 0.4128596356971955))))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0))<((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 0.4128596356971955)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((~ (vt0.c0))))<>((((vt0.c0)LIKE(vt0.c0)))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))!=((((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((~ (vt0.c0))))<>((((vt0.c0)LIKE(vt0.c0)))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))!=((((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c0)IS NOT(v0.c0)) COLLATE NOCASE WHERE ((((v0.c0 IN (vt1.c0)))!=(((v0.c0)<<(NULL))))) ORDER BY (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ('엞s%pNMb'))  NULLS FIRST, ((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))+((NOT (vt1.c0)))) DESC, 'IC1G8W(';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt1.c0)))!=(((v0.c0)<<(NULL))))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c0)IS NOT(v0.c0)) COLLATE NOCASE ORDER BY (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ('엞s%pNMb'))  NULLS FIRST, ((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))+((NOT (vt1.c0)))) DESC, 'IC1G8W(');
SELECT ALL * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c0)IS NOT(v0.c0)) COLLATE NOCASE WHERE ((((v0.c0 IN (vt1.c0)))!=(((v0.c0)<<(NULL))))) ORDER BY (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ('엞s%pNMb'))  NULLS FIRST, ((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))+((NOT (vt1.c0)))) DESC, 'IC1G8W(';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt1.c0)))!=(((v0.c0)<<(NULL))))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c0)IS NOT(v0.c0)) COLLATE NOCASE ORDER BY (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ('엞s%pNMb'))  NULLS FIRST, ((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))+((NOT (vt1.c0)))) DESC, 'IC1G8W(');
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((x'a883')OR(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(((((0.18100098273576393)AND(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((x'a883')OR(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(((((0.18100098273576393)AND(vt0.c0)))OR(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((x'a883')OR(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(((((0.18100098273576393)AND(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((x'a883')OR(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(((((0.18100098273576393)AND(vt0.c0)))OR(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((x'a883')OR(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(((((0.18100098273576393)AND(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT * FROM vt0, vt1 CROSS JOIN v0 ON ((((vt0.c0)||(vt1.c0))) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))) WHERE (v0.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON ((((vt0.c0)||(vt1.c0))) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))) ORDER BY vt1.c0);
SELECT * FROM vt0, vt1 CROSS JOIN v0 ON ((((vt0.c0)||(vt1.c0))) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))) WHERE (v0.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON ((((vt0.c0)||(vt1.c0))) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))) ORDER BY vt1.c0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<<(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<<(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB) WHERE ((((- (vt1.c0)))%(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB) WHERE ((((- (vt1.c0)))%(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB) WHERE ((((- (vt1.c0)))%(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((((((vt0.c0)OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND((vt1.c0 IN ()))))AND(((v0.c0)>>(vt0.c0)))))OR(((v0.c0)GLOB(vt1.c0)))))OR(((vt0.c0)>=(v0.c0)))))AND(v0.c0 COLLATE RTRIM))) ORDER BY CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND((vt1.c0 IN ()))))AND(((v0.c0)>>(vt0.c0)))))OR(((v0.c0)GLOB(vt1.c0)))))OR(((vt0.c0)>=(v0.c0)))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((((((vt0.c0)OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND((vt1.c0 IN ()))))AND(((v0.c0)>>(vt0.c0)))))OR(((v0.c0)GLOB(vt1.c0)))))OR(((vt0.c0)>=(v0.c0)))))AND(v0.c0 COLLATE RTRIM))) ORDER BY CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND((vt1.c0 IN ()))))AND(((v0.c0)>>(vt0.c0)))))OR(((v0.c0)GLOB(vt1.c0)))))OR(((vt0.c0)>=(v0.c0)))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0))) ORDER BY ((((ABS(DISTINCT v0.c0))OR(vt0.c0 COLLATE BINARY)))OR('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((ABS(DISTINCT v0.c0))OR(vt0.c0 COLLATE BINARY)))OR('')) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0))) ORDER BY ((((ABS(DISTINCT v0.c0))OR(vt0.c0 COLLATE BINARY)))OR('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((ABS(DISTINCT v0.c0))OR(vt0.c0 COLLATE BINARY)))OR('')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN '' THEN ((((0.4969960110404432)AND(vt1.c0)))OR(x'a7f2')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((((0.4969960110404432)AND(vt1.c0)))OR(x'a7f2')) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN '' THEN ((((0.4969960110404432)AND(vt1.c0)))OR(x'a7f2')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((((0.4969960110404432)AND(vt1.c0)))OR(x'a7f2')) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN '' THEN ((((0.4969960110404432)AND(vt1.c0)))OR(x'a7f2')) END);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND (((vt0.c0 IN ()))))) ORDER BY CASE WHEN ((vt1.c0)>(vt1.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0)>(vt1.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND (((vt0.c0 IN ()))))) ORDER BY CASE WHEN ((vt1.c0)>(vt1.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0)>(vt1.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND (((vt0.c0 IN ()))))) ORDER BY CASE WHEN ((vt1.c0)>(vt1.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY vt1.c0;
SELECT * FROM vt1, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM v0 WHERE ((((((v0.c0)<(v0.c0)), v0.c0 COLLATE NOCASE, ((((v0.c0)OR(v0.c0)))AND(v0.c0))))==(((+ (v0.c0)), (v0.c0 IN (v0.c0, 'PML(')), LTRIM(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<(v0.c0)), v0.c0 COLLATE NOCASE, ((((v0.c0)OR(v0.c0)))AND(v0.c0))))=(((+ (v0.c0)), (v0.c0 IN (v0.c0, 'PML(')), LTRIM(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)<(v0.c0)), v0.c0 COLLATE NOCASE, ((((v0.c0)OR(v0.c0)))AND(v0.c0))))==(((+ (v0.c0)), (v0.c0 IN (v0.c0, 'PML(')), LTRIM(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<(v0.c0)), v0.c0 COLLATE NOCASE, ((((v0.c0)OR(v0.c0)))AND(v0.c0))))=(((+ (v0.c0)), (v0.c0 IN (v0.c0, 'PML(')), LTRIM(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ('1855979250');
SELECT SUM(count) FROM (SELECT ALL (('1855979250') IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ('1855979250');
SELECT SUM(count) FROM (SELECT ALL (('1855979250') IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ('1855979250');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (COALESCE('45206864', (+ (v0.c0)), (+ (vt0.c0)), ((v0.c0)OR(v0.c0)))) ORDER BY CAST((- (vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE('45206864', (+ (v0.c0)), (+ (vt0.c0)), ((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((- (vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (COALESCE('45206864', (+ (v0.c0)), (+ (vt0.c0)), ((v0.c0)OR(v0.c0)))) ORDER BY CAST((- (vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE('45206864', (+ (v0.c0)), (+ (vt0.c0)), ((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((- (vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS TEXT));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c0))>((vt0.c0))))))AND((('431530146')+(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((((vt0.c0))>((vt0.c0))))))AND((('431530146')+(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c0))>((vt0.c0))))))AND((('431530146')+(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((((vt0.c0))>((vt0.c0))))))AND((('431530146')+(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM v0 WHERE ((~ ((+ (v0.c0))))) ORDER BY (((CASE v0.c0  WHEN NULL THEN NULL ELSE v0.c0 END))<=((((v0.c0)>(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((CASE v0.c0  WHEN NULL THEN NULL ELSE v0.c0 END))<=((((v0.c0)>(v0.c0))))) ASC);
SELECT ALL * FROM v0 WHERE ((~ ((+ (v0.c0))))) ORDER BY (((CASE v0.c0  WHEN NULL THEN NULL ELSE v0.c0 END))<=((((v0.c0)>(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((CASE v0.c0  WHEN NULL THEN NULL ELSE v0.c0 END))<=((((v0.c0)>(v0.c0))))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))=((vt0.c0))) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))=((vt0.c0))) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))=((vt0.c0))) END);
SELECT * FROM vt1 WHERE (((((x'')AND(((x'dc62') ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) DESC  NULLS FIRST, CASE vt1.c0 COLLATE RTRIM  WHEN (~ (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN x'633e' THEN '-1103154315' WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)LIKE(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((x'dc62') ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) DESC  NULLS FIRST, CASE vt1.c0 COLLATE RTRIM  WHEN (~ (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN x'633e' THEN '-1103154315' WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)LIKE(vt1.c0)) END);
SELECT * FROM vt1 WHERE (((((x'')AND(((x'dc62') ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) DESC  NULLS FIRST, CASE vt1.c0 COLLATE RTRIM  WHEN (~ (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN x'633e' THEN '-1103154315' WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)LIKE(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((x'dc62') ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) DESC  NULLS FIRST, CASE vt1.c0 COLLATE RTRIM  WHEN (~ (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN x'633e' THEN '-1103154315' WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)LIKE(vt1.c0)) END);
SELECT * FROM vt1 WHERE (((((x'')AND(((x'dc62') ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) DESC  NULLS FIRST, CASE vt1.c0 COLLATE RTRIM  WHEN (~ (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN x'633e' THEN '-1103154315' WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)LIKE(vt1.c0)) END;
SELECT ALL COUNT(*) FROM vt1 WHERE (json_insert((((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS BLOB), ((vt1.c0)>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS BLOB), ((vt1.c0)>(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_insert((((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS BLOB), ((vt1.c0)>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS BLOB), ((vt1.c0)>(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM v0, vt1 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)), (vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)), (vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)), (vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))AND(vt1.c0)), (vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))-(CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0, ((((((v0.c0) NOTNULL))AND(UNLIKELY(v0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR('-1700451645')))), vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))-(CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY vt0.c0, ((((((v0.c0) NOTNULL))AND(UNLIKELY(v0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR('-1700451645')))), vt1.c0 ASC);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))-(CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0, ((((((v0.c0) NOTNULL))AND(UNLIKELY(v0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR('-1700451645')))), vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))-(CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY vt0.c0, ((((((v0.c0) NOTNULL))AND(UNLIKELY(v0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR('-1700451645')))), vt1.c0 ASC);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (CASE vt1.c0  WHEN '427883459' THEN ((vt0.c0)-(vt1.c0)) WHEN CAST(x'6382' AS TEXT) THEN TYPEOF(vt1.c0) WHEN vt1.c0 THEN HEX(vt0.c0) WHEN (NOT (vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt0.c0)<<(vt1.c0)) THEN TIME(0.7832681019900813, vt0.c0, vt0.c0) END) ORDER BY (((~ (vt0.c0)))*((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN '427883459' THEN ((vt0.c0)-(vt1.c0)) WHEN CAST(x'6382' AS TEXT) THEN TYPEOF(vt1.c0) WHEN vt1.c0 THEN HEX(vt0.c0) WHEN (NOT (vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt0.c0)<<(vt1.c0)) THEN TIME(0.7832681019900813, vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((~ (vt0.c0)))*((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (CASE vt1.c0  WHEN '427883459' THEN ((vt0.c0)-(vt1.c0)) WHEN CAST(x'6382' AS TEXT) THEN TYPEOF(vt1.c0) WHEN vt1.c0 THEN HEX(vt0.c0) WHEN (NOT (vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt0.c0)<<(vt1.c0)) THEN TIME(0.7832681019900813, vt0.c0, vt0.c0) END) ORDER BY (((~ (vt0.c0)))*((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN '427883459' THEN ((vt0.c0)-(vt1.c0)) WHEN CAST(x'6382' AS TEXT) THEN TYPEOF(vt1.c0) WHEN vt1.c0 THEN HEX(vt0.c0) WHEN (NOT (vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt0.c0)<<(vt1.c0)) THEN TIME(0.7832681019900813, vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((~ (vt0.c0)))*((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (CASE vt1.c0  WHEN '427883459' THEN ((vt0.c0)-(vt1.c0)) WHEN CAST(x'6382' AS TEXT) THEN TYPEOF(vt1.c0) WHEN vt1.c0 THEN HEX(vt0.c0) WHEN (NOT (vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt0.c0)<<(vt1.c0)) THEN TIME(0.7832681019900813, vt0.c0, vt0.c0) END) ORDER BY (((~ (vt0.c0)))*((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (json_quote(((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_quote(((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (json_quote(((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_quote(((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN '譑MAgM&I#' THEN ((vt1.c0)IS(vt1.c0)) WHEN ((vt1.c0)AND(x'')) THEN 0.9236063733340041 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN '譑MAgM&I#' THEN ((vt1.c0)IS(vt1.c0)) WHEN ((vt1.c0)AND(x'')) THEN 0.9236063733340041 END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN '譑MAgM&I#' THEN ((vt1.c0)IS(vt1.c0)) WHEN ((vt1.c0)AND(x'')) THEN 0.9236063733340041 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN '譑MAgM&I#' THEN ((vt1.c0)IS(vt1.c0)) WHEN ((vt1.c0)AND(x'')) THEN 0.9236063733340041 END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN '譑MAgM&I#' THEN ((vt1.c0)IS(vt1.c0)) WHEN ((vt1.c0)AND(x'')) THEN 0.9236063733340041 END);
SELECT * FROM vt1, v0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)&((v0.c0 IN (v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC);
SELECT * FROM v0 WHERE (((v0.c0)&((v0.c0 IN (v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE)) ORDER BY (((vt1.c0 IN ()))OR(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((vt1.c0 IN ()))OR(v0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE)) ORDER BY (((vt1.c0 IN ()))OR(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((vt1.c0 IN ()))OR(v0.c0 COLLATE RTRIM)) ASC);
SELECT * FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))>((LOWER(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))>((LOWER(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))>((LOWER(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))>((LOWER(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) AND ((((vt0.c0))=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) AND ((((vt0.c0))==((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) AND ((((vt0.c0))=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) AND ((((vt0.c0))==((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) AND ((((vt0.c0))=((vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND ((vt1.c0 IN ())))) ORDER BY (vt1.c0 COLLATE BINARY IN ((((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, 0.02412158187255886 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE BINARY IN ((((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, 0.02412158187255886 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND ((vt1.c0 IN ())))) ORDER BY (vt1.c0 COLLATE BINARY IN ((((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, 0.02412158187255886 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE BINARY IN ((((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, 0.02412158187255886 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND ((vt1.c0 IN ())))) ORDER BY (vt1.c0 COLLATE BINARY IN ((((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, 0.02412158187255886 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0, vt0 WHERE (0.19192798213563056) ORDER BY (+ (TRIM(DISTINCT v0.c0)))  NULLS FIRST, (((((v0.c0))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)IS NOT(v0.c0))));
SELECT SUM(count) FROM (SELECT ((0.19192798213563056) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (+ (TRIM(DISTINCT v0.c0)))  NULLS FIRST, (((((v0.c0))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)IS NOT(v0.c0)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0, vt0 WHERE (0.19192798213563056) ORDER BY (+ (TRIM(DISTINCT v0.c0)))  NULLS FIRST, (((((v0.c0))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)IS NOT(v0.c0))));
SELECT SUM(count) FROM (SELECT ((0.19192798213563056) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (+ (TRIM(DISTINCT v0.c0)))  NULLS FIRST, (((((v0.c0))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)IS NOT(v0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((json_extract(vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(vt0.c0, vt0.c0)))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((NOT (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_extract(vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((NOT (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((json_extract(vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(vt0.c0, vt0.c0)))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((NOT (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_extract(vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((NOT (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))||(((vt1.c0) BETWEEN (vt1.c0) AND (x'8f72')))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))||(((vt1.c0) BETWEEN (vt1.c0) AND (x'8f72'))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))||(((vt1.c0) BETWEEN (vt1.c0) AND (x'8f72')))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))||(((vt1.c0) BETWEEN (vt1.c0) AND (x'8f72'))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN TRIM(v0.c0, v0.c0) WHEN (~ (v0.c0)) THEN (('YO~')GLOB(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END) ORDER BY CAST(v0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) ISNULL) THEN TRIM(v0.c0, v0.c0) WHEN (~ (v0.c0)) THEN (('YO~')GLOB(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN TRIM(v0.c0, v0.c0) WHEN (~ (v0.c0)) THEN (('YO~')GLOB(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END) ORDER BY CAST(v0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) ISNULL) THEN TRIM(v0.c0, v0.c0) WHEN (~ (v0.c0)) THEN (('YO~')GLOB(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS TEXT));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) WHERE ('815364263') ORDER BY ((((0.4209394279479315)AND((- (v0.c0)))))AND(((vt0.c0)>(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('815364263') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ORDER BY ((((0.4209394279479315)AND((- (v0.c0)))))AND(((vt0.c0)>(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) WHERE ('815364263') ORDER BY ((((0.4209394279479315)AND((- (v0.c0)))))AND(((vt0.c0)>(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('815364263') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ORDER BY ((((0.4209394279479315)AND((- (v0.c0)))))AND(((vt0.c0)>(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt1, v0, vt0 WHERE ((+ (LIKELIHOOD(DISTINCT vt0.c0, 0.8387651638532829)))) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) AS TEXT) ASC, ((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND (UNLIKELY(vt1.c0)))  NULLS LAST, '280887504';
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(DISTINCT vt0.c0, 0.8387651638532829)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) AS TEXT) ASC, ((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND (UNLIKELY(vt1.c0)))  NULLS LAST, '280887504');
SELECT ALL * FROM vt1, v0, vt0 WHERE ((+ (LIKELIHOOD(DISTINCT vt0.c0, 0.8387651638532829)))) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) AS TEXT) ASC, ((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND (UNLIKELY(vt1.c0)))  NULLS LAST, '280887504';
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(DISTINCT vt0.c0, 0.8387651638532829)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) AS TEXT) ASC, ((vt1.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND (UNLIKELY(vt1.c0)))  NULLS LAST, '280887504');
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE ((v0.c0)&(v0.c0))  WHEN (((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 COLLATE BINARY WHEN ((((((((vt1.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOTNULL) END) ORDER BY CAST(1.451287235E9 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)&(v0.c0))  WHEN (((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 COLLATE BINARY WHEN ((((((((vt1.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(1.451287235E9 AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE ((v0.c0)&(v0.c0))  WHEN (((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 COLLATE BINARY WHEN ((((((((vt1.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOTNULL) END) ORDER BY CAST(1.451287235E9 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)&(v0.c0))  WHEN (((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 COLLATE BINARY WHEN ((((((((vt1.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(1.451287235E9 AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS TEXT)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)GLOB(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS TEXT)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)GLOB(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS TEXT)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0) NOT NULL) WHERE ((- ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0) NOT NULL));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0) NOT NULL) WHERE ((- ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT ALL * FROM vt0, v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0)))+(CHANGES()))) ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE (~ (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN (+ (' ')) THEN ((vt0.c0)||(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))+(CHANGES()))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE (~ (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN (+ (' ')) THEN ((vt0.c0)||(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0)))+(CHANGES()))) ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE (~ (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN (+ (' ')) THEN ((vt0.c0)||(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))+(CHANGES()))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE (~ (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN (+ (' ')) THEN ((vt0.c0)||(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0)))+(CHANGES()))) ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE (~ (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN (+ (' ')) THEN ((vt0.c0)||(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON INSTR(v0.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY) LEFT OUTER JOIN vt1 ON (+ (CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON INSTR(v0.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY) LEFT OUTER JOIN vt1 ON (+ (CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON INSTR(v0.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY) LEFT OUTER JOIN vt1 ON (+ (CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON INSTR(v0.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY) LEFT OUTER JOIN vt1 ON (+ (CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)IS NOT(((vt1.c0)<=(vt1.c0))))) ORDER BY ((((((((((vt1.c0)<<(vt1.c0)))OR((((vt1.c0))<=((vt1.c0))))))AND((+ (-9.38840346E8)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)IS NOT(((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)<<(vt1.c0)))OR((((vt1.c0))<=((vt1.c0))))))AND((+ (-9.38840346E8)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)IS NOT(((vt1.c0)<=(vt1.c0))))) ORDER BY ((((((((((vt1.c0)<<(vt1.c0)))OR((((vt1.c0))<=((vt1.c0))))))AND((+ (-9.38840346E8)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)IS NOT(((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)<<(vt1.c0)))OR((((vt1.c0))<=((vt1.c0))))))AND((+ (-9.38840346E8)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)IS NOT(((vt1.c0)<=(vt1.c0))))) ORDER BY ((((((((((vt1.c0)<<(vt1.c0)))OR((((vt1.c0))<=((vt1.c0))))))AND((+ (-9.38840346E8)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT * FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(-1779392509)))OR(((vt0.c0)>(vt0.c0)))))AND((((NULL))<=((vt0.c0))))))OR(LIKELIHOOD(vt0.c0, 0.8165484195118574))))AND(((vt0.c0) IS TRUE)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(-1779392509)))OR(((vt0.c0)>(vt0.c0)))))AND((((NULL))<=((vt0.c0))))))OR(LIKELIHOOD(vt0.c0, 0.8165484195118574))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(-1779392509)))OR(((vt0.c0)>(vt0.c0)))))AND((((NULL))<=((vt0.c0))))))OR(LIKELIHOOD(vt0.c0, 0.8165484195118574))))AND(((vt0.c0) IS TRUE)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(-1779392509)))OR(((vt0.c0)>(vt0.c0)))))AND((((NULL))<=((vt0.c0))))))OR(LIKELIHOOD(vt0.c0, 0.8165484195118574))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(-1779392509)))OR(((vt0.c0)>(vt0.c0)))))AND((((NULL))<=((vt0.c0))))))OR(LIKELIHOOD(vt0.c0, 0.8165484195118574))))AND(((vt0.c0) IS TRUE)))) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((~ (vt0.c0))) BETWEEN (((v0.c0)!=(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) BETWEEN (((v0.c0)<>(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((~ (vt0.c0))) BETWEEN (((v0.c0)!=(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) BETWEEN (((v0.c0)<>(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM vt0, v0, vt1 WHERE (load_extension(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ((load_extension(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), SQLITE_VERSION())) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE (load_extension(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ((load_extension(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), SQLITE_VERSION())) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, vt1, v0 WHERE (((((vt1.c0)+(vt0.c0)))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((-588989111)))))) ORDER BY ((((vt1.c0)||(vt1.c0)))<=(STRFTIME(v0.c0, vt1.c0, '[>'))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)+(vt0.c0)))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((-588989111)))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((vt1.c0)||(vt1.c0)))<=(STRFTIME(v0.c0, vt1.c0, '[>'))) ASC);
SELECT * FROM vt0, vt1, v0 WHERE (((((vt1.c0)+(vt0.c0)))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((-588989111)))))) ORDER BY ((((vt1.c0)||(vt1.c0)))<=(STRFTIME(v0.c0, vt1.c0, '[>'))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)+(vt0.c0)))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((-588989111)))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((vt1.c0)||(vt1.c0)))<=(STRFTIME(v0.c0, vt1.c0, '[>'))) ASC);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((vt1.c0)<=(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((vt1.c0)<=(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((vt1.c0)<=(vt1.c0))) IS FALSE));
SELECT * FROM vt0, v0 WHERE ((((QUOTE(vt0.c0)))>=(((vt0.c0 IN (v0.c0, vt0.c0)))))) ORDER BY (NULL IN ());
SELECT SUM(count) FROM (SELECT ALL (((((QUOTE(vt0.c0)))>=(((vt0.c0 IN (v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NULL IN ()));
SELECT * FROM vt0, v0 WHERE ((((QUOTE(vt0.c0)))>=(((vt0.c0 IN (v0.c0, vt0.c0)))))) ORDER BY (NULL IN ());
SELECT SUM(count) FROM (SELECT ALL (((((QUOTE(vt0.c0)))>=(((vt0.c0 IN (v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NULL IN ()));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN v0 ON vt1.c0 WHERE ((CASE vt1.c0  WHEN v0.c0 THEN 0x71d98dc7 ELSE vt0.c0 END IN (vt0.c0 COLLATE BINARY))) ORDER BY (+ ((((v0.c0))!=((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN v0.c0 THEN 0x71d98dc7 ELSE vt0.c0 END IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN v0 ON vt1.c0 ORDER BY (+ ((((v0.c0))<>((v0.c0))))) ASC);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN v0 ON vt1.c0 WHERE ((CASE vt1.c0  WHEN v0.c0 THEN 0x71d98dc7 ELSE vt0.c0 END IN (vt0.c0 COLLATE BINARY))) ORDER BY (+ ((((v0.c0))!=((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN v0.c0 THEN 0x71d98dc7 ELSE vt0.c0 END IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN v0 ON vt1.c0 ORDER BY (+ ((((v0.c0))<>((v0.c0))))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (+ (vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (+ (vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1 WHERE (LOWER(((vt1.c0)<>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt1.c0)<>(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER(((vt1.c0)<>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt1.c0)<>(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER(((vt1.c0)<>(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((v0.c0)IS(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(vt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((v0.c0)IS(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(vt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (((((v0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (((((v0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)), CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)), CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)), CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)), CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)), CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN CAST(x'' AS TEXT) THEN CAST(vt0.c0 AS BLOB) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN CAST(x'' AS TEXT) THEN CAST(vt0.c0 AS BLOB) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN CAST(x'' AS TEXT) THEN CAST(vt0.c0 AS BLOB) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN CAST(x'' AS TEXT) THEN CAST(vt0.c0 AS BLOB) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN CAST(x'' AS TEXT) THEN CAST(vt0.c0 AS BLOB) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)IS(x'8ba4fd2c'))))!=((((v0.c0) NOT NULL))))) ORDER BY (('IC1G8W(') IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)IS(x'8ba4fd2c'))))!=((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM v0 ORDER BY (('IC1G8W(') IS TRUE) ASC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)IS(x'8ba4fd2c'))))!=((((v0.c0) NOT NULL))))) ORDER BY (('IC1G8W(') IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)IS(x'8ba4fd2c'))))!=((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM v0 ORDER BY (('IC1G8W(') IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0))))==((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0))))==((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))=((vt0.c0 IN ()))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((v0.c0)>=(vt0.c0)) ELSE (vt0.c0 IN ()) END LEFT OUTER JOIN v0 ON ((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))>>(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((v0.c0)>=(vt0.c0)) ELSE (vt0.c0 IN ()) END LEFT OUTER JOIN v0 ON ((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))>>(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((v0.c0)>=(vt0.c0)) ELSE (vt0.c0 IN ()) END LEFT OUTER JOIN v0 ON ((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))>>(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((v0.c0)>=(vt0.c0)) ELSE (vt0.c0 IN ()) END LEFT OUTER JOIN v0 ON ((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))>>(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7001567058384706) ORDER BY vt0.c0, ((((((((x'')AND((('-526937615')OR(vt0.c0)))))AND('1781428299')))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOTNULL))) ASC  NULLS LAST, CAST(((vt0.c0)/(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((0.7001567058384706) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((((x'')AND((('-526937615')OR(vt0.c0)))))AND('1781428299')))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOTNULL))) ASC  NULLS LAST, CAST(((vt0.c0)/(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7001567058384706) ORDER BY vt0.c0, ((((((((x'')AND((('-526937615')OR(vt0.c0)))))AND('1781428299')))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOTNULL))) ASC  NULLS LAST, CAST(((vt0.c0)/(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((0.7001567058384706) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((((x'')AND((('-526937615')OR(vt0.c0)))))AND('1781428299')))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOTNULL))) ASC  NULLS LAST, CAST(((vt0.c0)/(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7001567058384706) ORDER BY vt0.c0, ((((((((x'')AND((('-526937615')OR(vt0.c0)))))AND('1781428299')))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOTNULL))) ASC  NULLS LAST, CAST(((vt0.c0)/(vt0.c0)) AS INTEGER);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((vt1.c0 IN ()));
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0)-(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '445905822'))>=((((vt0.c0) BETWEEN ('927968440') AND (v0.c0)), ((v0.c0)<<(0.34334323860116645)), ABS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)-(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '445905822'))>=((((vt0.c0) BETWEEN ('927968440') AND (v0.c0)), ((v0.c0)<<(0.34334323860116645)), ABS(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0)-(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '445905822'))>=((((vt0.c0) BETWEEN ('927968440') AND (v0.c0)), ((v0.c0)<<(0.34334323860116645)), ABS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)-(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '445905822'))>=((((vt0.c0) BETWEEN ('927968440') AND (v0.c0)), ((v0.c0)<<(0.34334323860116645)), ABS(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt1, v0 WHERE (CASE WHEN ((((v0.c0)AND(vt1.c0)))AND(v0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE (('0.24550302910150457')LIKE(v0.c0)) END) ORDER BY ((((v0.c0) NOTNULL))<>(((0.5102963831904928) BETWEEN (vt1.c0) AND (' ')))), (((v0.c0 IN (v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)AND(vt1.c0)))AND(v0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE (('0.24550302910150457')LIKE(v0.c0)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c0) NOTNULL))!=(((0.5102963831904928) BETWEEN (vt1.c0) AND (' ')))), (((v0.c0 IN (v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (CASE WHEN ((((v0.c0)AND(vt1.c0)))AND(v0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE (('0.24550302910150457')LIKE(v0.c0)) END) ORDER BY ((((v0.c0) NOTNULL))<>(((0.5102963831904928) BETWEEN (vt1.c0) AND (' ')))), (((v0.c0 IN (v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)AND(vt1.c0)))AND(v0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE (('0.24550302910150457')LIKE(v0.c0)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c0) NOTNULL))!=(((0.5102963831904928) BETWEEN (vt1.c0) AND (' ')))), (((v0.c0 IN (v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, v0 WHERE (((HEX(DISTINCT vt1.c0)) BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt1.c0)) BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((HEX(DISTINCT vt1.c0)) BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt1.c0)) BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) LEFT OUTER JOIN v0 ON ((((x'') ISNULL)) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) WHERE ((((v0.c0 IN ()))+(v0.c0))) ORDER BY (((v0.c0)) BETWEEN (((-4.17899123E8 IN (0.06987462494254526)))) AND ((((NULL)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))+(v0.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) LEFT OUTER JOIN v0 ON ((((x'') ISNULL)) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) ORDER BY (((v0.c0)) BETWEEN (((-4.17899123E8 IN (0.06987462494254526)))) AND ((((NULL)<>(vt0.c0))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) LEFT OUTER JOIN v0 ON ((((x'') ISNULL)) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) WHERE ((((v0.c0 IN ()))+(v0.c0))) ORDER BY (((v0.c0)) BETWEEN (((-4.17899123E8 IN (0.06987462494254526)))) AND ((((NULL)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))+(v0.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) LEFT OUTER JOIN v0 ON ((((x'') ISNULL)) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) ORDER BY (((v0.c0)) BETWEEN (((-4.17899123E8 IN (0.06987462494254526)))) AND ((((NULL)<>(vt0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) ORDER BY 4.31530146E8;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY 4.31530146E8);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) ORDER BY 4.31530146E8;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY 4.31530146E8);
SELECT ALL * FROM v0, vt1 FULL OUTER JOIN vt0 ON x'' WHERE (((((('i0c뗂'))<((v0.c0))))GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((('i0c뗂'))<((v0.c0))))GLOB(vt1.c0))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON x'');
SELECT ALL * FROM v0, vt1 FULL OUTER JOIN vt0 ON x'' WHERE (((((('i0c뗂'))<((v0.c0))))GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((('i0c뗂'))<((v0.c0))))GLOB(vt1.c0))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON x'');
SELECT * FROM vt1, v0 WHERE ((((v0.c0 COLLATE RTRIM))<=(('0.2347543766029182'))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM))<=(('0.2347543766029182')))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((v0.c0 COLLATE RTRIM))<=(('0.2347543766029182'))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM))<=(('0.2347543766029182')))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY ((((NULL)OR(((vt1.c0) NOT NULL))))AND((((NULL, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.6414094366285239, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, vt1.c0, ((vt1.c0) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((NULL)OR(((vt1.c0) NOT NULL))))AND((((NULL, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.6414094366285239, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, vt1.c0, ((vt1.c0) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (''))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY ((((NULL)OR(((vt1.c0) NOT NULL))))AND((((NULL, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.6414094366285239, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, vt1.c0, ((vt1.c0) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((NULL)OR(((vt1.c0) NOT NULL))))AND((((NULL, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.6414094366285239, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, vt1.c0, ((vt1.c0) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (''))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY ((((NULL)OR(((vt1.c0) NOT NULL))))AND((((NULL, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.6414094366285239, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, vt1.c0, ((vt1.c0) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (''))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (CAST((('-973506461') NOT BETWEEN (vt0.c0) AND (0.3190108323335564)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((('-973506461') NOT BETWEEN (vt0.c0) AND (0.3190108323335564)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (CAST((('-973506461') NOT BETWEEN (vt0.c0) AND (0.3190108323335564)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((('-973506461') NOT BETWEEN (vt0.c0) AND (0.3190108323335564)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (CAST((('-973506461') NOT BETWEEN (vt0.c0) AND (0.3190108323335564)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (json_patch(vt0.c0, v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((json_patch(vt0.c0, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (json_patch(vt0.c0, v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((json_patch(vt0.c0, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((- (vt1.c0)))));
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (HEX(DISTINCT (- (vt1.c0)))) ORDER BY ((((('1036053369') BETWEEN ('8.') AND (vt1.c0))))==(((+ (vt1.c0)))))  NULLS LAST, LOWER(DISTINCT LOWER(DISTINCT vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (- (vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((('1036053369') BETWEEN ('8.') AND (vt1.c0))))==(((+ (vt1.c0)))))  NULLS LAST, LOWER(DISTINCT LOWER(DISTINCT vt1.c0)) ASC);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (HEX(DISTINCT (- (vt1.c0)))) ORDER BY ((((('1036053369') BETWEEN ('8.') AND (vt1.c0))))==(((+ (vt1.c0)))))  NULLS LAST, LOWER(DISTINCT LOWER(DISTINCT vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (- (vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((('1036053369') BETWEEN ('8.') AND (vt1.c0))))==(((+ (vt1.c0)))))  NULLS LAST, LOWER(DISTINCT LOWER(DISTINCT vt1.c0)) ASC);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (HEX(DISTINCT (- (vt1.c0)))) ORDER BY ((((('1036053369') BETWEEN ('8.') AND (vt1.c0))))==(((+ (vt1.c0)))))  NULLS LAST, LOWER(DISTINCT LOWER(DISTINCT vt1.c0)) ASC;
SELECT * FROM v0 CROSS JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, NULL)) AND ((x'', NULL, v0.c0)))) WHERE ((((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, (v0.c0 IN ()), (v0.c0 IN (v0.c0, vt0.c0)))) AND (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), rtreenode(vt0.c0, v0.c0))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, (v0.c0 IN ()), (v0.c0 IN (v0.c0, vt0.c0)))) AND (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), rtreenode(vt0.c0, v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, NULL)) AND ((x'', NULL, v0.c0)))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL) DESC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, NULL)) AND ((x'', NULL, v0.c0)))) WHERE ((((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, (v0.c0 IN ()), (v0.c0 IN (v0.c0, vt0.c0)))) AND (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), rtreenode(vt0.c0, v0.c0))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, (v0.c0 IN ()), (v0.c0 IN (v0.c0, vt0.c0)))) AND (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), rtreenode(vt0.c0, v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, NULL)) AND ((x'', NULL, v0.c0)))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL) DESC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, NULL)) AND ((x'', NULL, v0.c0)))) WHERE ((((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, (v0.c0 IN ()), (v0.c0 IN (v0.c0, vt0.c0)))) AND (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), rtreenode(vt0.c0, v0.c0))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0))=((vt1.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) DESC, ((vt0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))==((vt1.c0))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) DESC, ((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0))=((vt1.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) DESC, ((vt0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))==((vt1.c0))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) DESC, ((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0))=((vt1.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) DESC, ((vt0.c0 COLLATE RTRIM) NOTNULL);
SELECT ALL * FROM v0, vt1 WHERE (CASE v0.c0  WHEN (+ (vt1.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((vt1.c0) NOTNULL) END) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (TIME(v0.c0, 0.8274909604737752, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN (+ (vt1.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (TIME(v0.c0, 0.8274909604737752, vt1.c0))));
SELECT ALL * FROM v0, vt1 WHERE (CASE v0.c0  WHEN (+ (vt1.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((vt1.c0) NOTNULL) END) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (TIME(v0.c0, 0.8274909604737752, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN (+ (vt1.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (TIME(v0.c0, 0.8274909604737752, vt1.c0))));
SELECT * FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (NULL)), (NOT (vt1.c0)), ((vt1.c0)&(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), (vt1.c0 IN ()), ABS(DISTINCT vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NOT (NULL)), (NOT (vt1.c0)), ((vt1.c0)&(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), (vt1.c0 IN ()), ABS(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (NULL)), (NOT (vt1.c0)), ((vt1.c0)&(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), (vt1.c0 IN ()), ABS(DISTINCT vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NOT (NULL)), (NOT (vt1.c0)), ((vt1.c0)&(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), (vt1.c0 IN ()), ABS(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (NULL)), (NOT (vt1.c0)), ((vt1.c0)&(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), (vt1.c0 IN ()), ABS(DISTINCT vt1.c0)))));
SELECT * FROM vt1, v0 WHERE ((((CASE WHEN 0.2527195429000879 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE '' END))>((((vt1.c0)==(v0.c0)))))) ORDER BY CASE ((vt1.c0)>=(vt1.c0))  WHEN vt1.c0 THEN ((v0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN 0.2527195429000879 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE '' END))>((((vt1.c0)=(v0.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE ((vt1.c0)>=(vt1.c0))  WHEN vt1.c0 THEN ((v0.c0) NOT NULL) END);
SELECT * FROM vt1, v0 WHERE ((((CASE WHEN 0.2527195429000879 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE '' END))>((((vt1.c0)==(v0.c0)))))) ORDER BY CASE ((vt1.c0)>=(vt1.c0))  WHEN vt1.c0 THEN ((v0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN 0.2527195429000879 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE '' END))>((((vt1.c0)=(v0.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE ((vt1.c0)>=(vt1.c0))  WHEN vt1.c0 THEN ((v0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((CASE '1977763886'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '1977763886'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)=(vt1.c0))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((CASE '1977763886'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '1977763886'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)=(vt1.c0))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (vt0.c0) ORDER BY (- (((vt1.c0)=(0.995588410429307)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, CAST(((v0.c0) IS TRUE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (- (((vt1.c0)==(0.995588410429307)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, CAST(((v0.c0) IS TRUE) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (vt0.c0) ORDER BY (- (((vt1.c0)=(0.995588410429307)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, CAST(((v0.c0) IS TRUE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (- (((vt1.c0)==(0.995588410429307)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, CAST(((v0.c0) IS TRUE) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (vt0.c0)) COLLATE RTRIM WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (+ (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (vt0.c0)) COLLATE RTRIM WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (+ (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (vt0.c0)) COLLATE RTRIM WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- (((vt1.c0)IS(x''))))) ORDER BY (((NOT ('>u')))<<(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)IS(x''))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((NOT ('>u')))<<(((vt1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- (((vt1.c0)IS(x''))))) ORDER BY (((NOT ('>u')))<<(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)IS(x''))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((NOT ('>u')))<<(((vt1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- (((vt1.c0)IS(x''))))) ORDER BY (((NOT ('>u')))<<(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE (- (vt1.c0))  WHEN vt1.c0 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt1.c0))  WHEN vt1.c0 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE (- (vt1.c0))  WHEN vt1.c0 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt1.c0))  WHEN vt1.c0 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE (- (vt1.c0))  WHEN vt1.c0 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((((NULL))<=((v0.c0)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(((v0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((~ ((((NULL))<=((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>=(((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((((NULL))<=((v0.c0)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(((v0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((~ ((((NULL))<=((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>=(((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY (('1038409333') NOTNULL) ASC  NULLS LAST, ((((((vt0.c0)>=(v0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (('1038409333') NOTNULL) ASC  NULLS LAST, ((((((vt0.c0)>=(v0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY (('1038409333') NOTNULL) ASC  NULLS LAST, ((((((vt0.c0)>=(v0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (('1038409333') NOTNULL) ASC  NULLS LAST, ((((((vt0.c0)>=(v0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON CAST(v0.c0 AS REAL) COLLATE NOCASE WHERE (CAST(vt1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON CAST(v0.c0 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON CAST(v0.c0 AS REAL) COLLATE NOCASE WHERE (CAST(vt1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON CAST(v0.c0 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((((v0.c0)/(v0.c0))))!=((((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)/(v0.c0))))!=((((v0.c0)<=(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((((v0.c0)/(v0.c0))))!=((((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)/(v0.c0))))!=((((v0.c0)<=(v0.c0))))));
SELECT * FROM vt1 WHERE ((+ (((vt1.c0)==(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0)==(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0)==(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC;
SELECT * FROM v0 WHERE (0.8474969689920079);
SELECT SUM(count) FROM (SELECT ALL ((0.8474969689920079) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.8474969689920079);
SELECT SUM(count) FROM (SELECT ALL ((0.8474969689920079) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((((v0.c0)LIKE(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((((v0.c0)LIKE(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN vt1.c0 THEN 0Xffffffffa363ba6a ELSE v0.c0 END)-(vt1.c0 COLLATE BINARY)) WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN vt1.c0 THEN 0Xffffffffa363ba6a ELSE v0.c0 END)-(vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN vt1.c0 THEN 0Xffffffffa363ba6a ELSE v0.c0 END)-(vt1.c0 COLLATE BINARY)) WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN vt1.c0 THEN 0Xffffffffa363ba6a ELSE v0.c0 END)-(vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS REAL), (- (vt1.c0)))) AND ((vt0.c0, '{y', (vt1.c0 IN ()))))) ORDER BY ((((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS REAL), (- (vt1.c0)))) AND ((vt0.c0, '{y', (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS REAL), (- (vt1.c0)))) AND ((vt0.c0, '{y', (vt1.c0 IN ()))))) ORDER BY ((((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS REAL), (- (vt1.c0)))) AND ((vt0.c0, '{y', (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0)*(vt1.c0)))!=(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt1.c0)))!=(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0)*(vt1.c0)))!=(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt1.c0)))!=(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0)*(vt1.c0)))!=(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((json_valid(vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((json_valid(vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.333290164045299);
SELECT SUM(count) FROM (SELECT ALL ((0.333290164045299) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.333290164045299);
SELECT SUM(count) FROM (SELECT ALL ((0.333290164045299) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.333290164045299);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)&(vt0.c0)) IN (1.664259981E9, 0xffffffffdd2eabce)) WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt1.c0)) END) ORDER BY (((vt0.c0 IN ())) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt1.c0)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)&(vt0.c0)) IN (1.664259981E9, 0xffffffffdd2eabce)) ORDER BY (((vt0.c0 IN ())) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)&(vt0.c0)) IN (1.664259981E9, 0xffffffffdd2eabce)) WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt1.c0)) END) ORDER BY (((vt0.c0 IN ())) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt1.c0)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)&(vt0.c0)) IN (1.664259981E9, 0xffffffffdd2eabce)) ORDER BY (((vt0.c0 IN ())) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)&(vt0.c0)) IN (1.664259981E9, 0xffffffffdd2eabce)) WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt1.c0)) END) ORDER BY (((vt0.c0 IN ())) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)==(vt0.c0)), vt1.c0, vt1.c0 COLLATE RTRIM))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, x'd84c', CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)=(vt0.c0)), vt1.c0, vt1.c0 COLLATE RTRIM))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, x'd84c', CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)==(vt0.c0)), vt1.c0, vt1.c0 COLLATE RTRIM))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, x'd84c', CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)=(vt0.c0)), vt1.c0, vt1.c0 COLLATE RTRIM))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, x'd84c', CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)==(vt0.c0)), vt1.c0, vt1.c0 COLLATE RTRIM))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, x'd84c', CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END)))) ORDER BY vt0.c0;
SELECT ALL * FROM vt1, v0 WHERE ((2.80887504E8 IN ())) ORDER BY '<I#b散\r퓒.G'  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT (((2.80887504E8 IN ())) IS TRUE)  as count FROM vt1, v0 ORDER BY '<I#b散\r퓒.G'  NULLS LAST, v0.c0);
SELECT ALL * FROM vt1, v0 WHERE ((2.80887504E8 IN ())) ORDER BY '<I#b散\r퓒.G'  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT (((2.80887504E8 IN ())) IS TRUE)  as count FROM vt1, v0 ORDER BY '<I#b散\r퓒.G'  NULLS LAST, v0.c0);
SELECT * FROM vt1, v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (x'');
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(NULL))) NOT NULL)) ORDER BY (((vt0.c0, 0.09353857799359655, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(0.06551738910288185)))AND(vt0.c0)), (vt0.c0 IN ()))) AND ((((vt0.c0) IS FALSE), vt0.c0, 'H悘S^-I'))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(NULL))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, 0.09353857799359655, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(0.06551738910288185)))AND(vt0.c0)), (vt0.c0 IN ()))) AND ((((vt0.c0) IS FALSE), vt0.c0, 'H悘S^-I'))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(NULL))) NOT NULL)) ORDER BY (((vt0.c0, 0.09353857799359655, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(0.06551738910288185)))AND(vt0.c0)), (vt0.c0 IN ()))) AND ((((vt0.c0) IS FALSE), vt0.c0, 'H悘S^-I'))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(NULL))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, 0.09353857799359655, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(0.06551738910288185)))AND(vt0.c0)), (vt0.c0 IN ()))) AND ((((vt0.c0) IS FALSE), vt0.c0, 'H悘S^-I'))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(NULL))) NOT NULL)) ORDER BY (((vt0.c0, 0.09353857799359655, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(0.06551738910288185)))AND(vt0.c0)), (vt0.c0 IN ()))) AND ((((vt0.c0) IS FALSE), vt0.c0, 'H悘S^-I'))) ASC;
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((vt1.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY '711459226' DESC, CASE WHEN v0.c0 THEN '' END  NULLS FIRST, (- (vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY '711459226' DESC, CASE WHEN v0.c0 THEN '' END  NULLS FIRST, (- (vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((vt1.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY '711459226' DESC, CASE WHEN v0.c0 THEN '' END  NULLS FIRST, (- (vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY '711459226' DESC, CASE WHEN v0.c0 THEN '' END  NULLS FIRST, (- (vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)GLOB((- (vt0.c0)))) WHERE ((((vt1.c0 IN (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)GLOB((- (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)GLOB((- (vt0.c0)))) WHERE ((((vt1.c0 IN (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)GLOB((- (vt0.c0)))));
SELECT COUNT(*) FROM vt1 NOT INDEXED, v0 WHERE ((((v0.c0)) BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)))) AND ((IFNULL(x'', vt1.c0))))) ORDER BY ((((((((0.12253277956189679)AND((- (v0.c0)))))OR((v0.c0 IN ()))))OR(((2.1577073E7) BETWEEN (v0.c0) AND (NULL)))))AND(((vt1.c0) NOT NULL))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (0Xffffffffcb3f10c2) AND (NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)))) AND ((IFNULL(x'', vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((0.12253277956189679)AND((- (v0.c0)))))OR((v0.c0 IN ()))))OR(((2.1577073E7) BETWEEN (v0.c0) AND (NULL)))))AND(((vt1.c0) NOT NULL))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (0xffffffffcb3f10c2) AND (NULL))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NOT INDEXED, v0 WHERE ((((v0.c0)) BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)))) AND ((IFNULL(x'', vt1.c0))))) ORDER BY ((((((((0.12253277956189679)AND((- (v0.c0)))))OR((v0.c0 IN ()))))OR(((2.1577073E7) BETWEEN (v0.c0) AND (NULL)))))AND(((vt1.c0) NOT NULL))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (0Xffffffffcb3f10c2) AND (NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)))) AND ((IFNULL(x'', vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((0.12253277956189679)AND((- (v0.c0)))))OR((v0.c0 IN ()))))OR(((2.1577073E7) BETWEEN (v0.c0) AND (NULL)))))AND(((vt1.c0) NOT NULL))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (0xffffffffcb3f10c2) AND (NULL))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((('') BETWEEN (vt0.c0) AND (vt0.c0)))*((((((((('74717239')AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('') BETWEEN (vt0.c0) AND (vt0.c0)))*((((((((('74717239')AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((('') BETWEEN (vt0.c0) AND (vt0.c0)))*((((((((('74717239')AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('') BETWEEN (vt0.c0) AND (vt0.c0)))*((((((((('74717239')AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))>=(('t!\r['))))AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt0.c0) ISNULL))) WHERE ((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.9719726896152319))) ORDER BY ((vt0.c0) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.9719726896152319))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))>=(('t!\r['))))AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt0.c0) ISNULL))) ORDER BY ((vt0.c0) IS FALSE) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))>=(('t!\r['))))AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt0.c0) ISNULL))) WHERE ((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.9719726896152319))) ORDER BY ((vt0.c0) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.9719726896152319))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))>=(('t!\r['))))AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt0.c0) ISNULL))) ORDER BY ((vt0.c0) IS FALSE) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))>=(('t!\r['))))AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt0.c0) ISNULL))) WHERE ((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.9719726896152319))) ORDER BY ((vt0.c0) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON (NOT (((v0.c0)OR(v0.c0)))) WHERE (UPPER(((x'f9d9')*(v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(((x'f9d9')*(v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (NOT (((v0.c0)OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON (NOT (((v0.c0)OR(v0.c0)))) WHERE (UPPER(((x'f9d9')*(v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(((x'f9d9')*(v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (NOT (((v0.c0)OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((TRIM(DISTINCT vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'r(r\r}Tl' END)))OR(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (('1036053369')==(('' IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(DISTINCT vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'r(r\r}Tl' END)))OR(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (('1036053369')=(('' IN (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((TRIM(DISTINCT vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'r(r\r}Tl' END)))OR(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (('1036053369')==(('' IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(DISTINCT vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'r(r\r}Tl' END)))OR(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (('1036053369')=(('' IN (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((TRIM(DISTINCT vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN 'r(r\r}Tl' END)))OR(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (('1036053369')==(('' IN (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))!=(('o\r'))) DESC, 0X22ddbb58  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))!=(('o\r'))) DESC, 0X22ddbb58  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))!=(('o\r'))) DESC, 0X22ddbb58  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))!=(('o\r'))) DESC, 0X22ddbb58  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((CHANGES()))=((CASE v0.c0  WHEN v0.c0 THEN x'db2f99b0753d' WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CHANGES()))=((CASE v0.c0  WHEN v0.c0 THEN x'db2f99b0753d' WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((CHANGES()))=((CASE v0.c0  WHEN v0.c0 THEN x'db2f99b0753d' WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CHANGES()))=((CASE v0.c0  WHEN v0.c0 THEN x'db2f99b0753d' WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM v0 INNER JOIN vt1 ON '1287422734' WHERE (x'') ORDER BY x'8d7c' ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 INNER JOIN vt1 ON '1287422734' ORDER BY x'8d7c' ASC);
SELECT * FROM v0 INNER JOIN vt1 ON '1287422734' WHERE (x'') ORDER BY x'8d7c' ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 INNER JOIN vt1 ON '1287422734' ORDER BY x'8d7c' ASC);
SELECT * FROM v0 INNER JOIN vt1 ON '1287422734' WHERE (x'') ORDER BY x'8d7c' ASC;
SELECT ALL * FROM vt0, vt1 NATURAL JOIN v0 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN v0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN v0 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN v0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt1, vt0, v0 NOT INDEXED WHERE (0.14231774252830842);
SELECT SUM(count) FROM (SELECT ((0.14231774252830842) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 NOT INDEXED WHERE (0.14231774252830842);
SELECT SUM(count) FROM (SELECT ((0.14231774252830842) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON ((v0.c0 COLLATE RTRIM)IS NOT(((v0.c0)GLOB(vt1.c0)))) WHERE (CAST(0.10249459210946466 AS TEXT)) ORDER BY ((((v0.c0, vt0.c0, vt0.c0, 77040184, vt0.c0))>((v0.c0, v0.c0, vt1.c0, vt0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(((0Xffffffffdf10c417) BETWEEN ('752442875') AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.10249459210946466 AS TEXT)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON ((v0.c0 COLLATE RTRIM)IS NOT(((v0.c0)GLOB(vt1.c0)))) ORDER BY ((((v0.c0, vt0.c0, vt0.c0, 77040184, vt0.c0))>((v0.c0, v0.c0, vt1.c0, vt0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(((0xffffffffdf10c417) BETWEEN ('752442875') AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON ((v0.c0 COLLATE RTRIM)IS NOT(((v0.c0)GLOB(vt1.c0)))) WHERE (CAST(0.10249459210946466 AS TEXT)) ORDER BY ((((v0.c0, vt0.c0, vt0.c0, 77040184, vt0.c0))>((v0.c0, v0.c0, vt1.c0, vt0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(((0Xffffffffdf10c417) BETWEEN ('752442875') AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.10249459210946466 AS TEXT)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON ((v0.c0 COLLATE RTRIM)IS NOT(((v0.c0)GLOB(vt1.c0)))) ORDER BY ((((v0.c0, vt0.c0, vt0.c0, 77040184, vt0.c0))>((v0.c0, v0.c0, vt1.c0, vt0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(((0xffffffffdf10c417) BETWEEN ('752442875') AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON v0.c0 INNER JOIN v0 ON vt0.c0 WHERE (CAST(vt1.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON v0.c0 INNER JOIN v0 ON vt0.c0);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON v0.c0 INNER JOIN v0 ON vt0.c0 WHERE (CAST(vt1.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON v0.c0 INNER JOIN v0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('wr') ORDER BY '1037288926';
SELECT SUM(count) FROM (SELECT ALL (('wr') IS TRUE)  as count FROM vt0 ORDER BY '1037288926');
SELECT ALL COUNT(*) FROM vt0 WHERE ('wr') ORDER BY '1037288926';
SELECT SUM(count) FROM (SELECT ALL (('wr') IS TRUE)  as count FROM vt0 ORDER BY '1037288926');
SELECT ALL COUNT(*) FROM vt0 WHERE ('wr') ORDER BY '1037288926';
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN (v0.c0 IN ()) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN (v0.c0 IN ()) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN (v0.c0 IN ()) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN (v0.c0 IN ()) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY ROUND((NOT (v0.c0)), ((v0.c0) IS FALSE)) DESC, CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) NOTNULL) ELSE v0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ROUND((NOT (v0.c0)), ((v0.c0) IS FALSE)) DESC, CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) NOTNULL) ELSE v0.c0 END DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY ROUND((NOT (v0.c0)), ((v0.c0) IS FALSE)) DESC, CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) NOTNULL) ELSE v0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ROUND((NOT (v0.c0)), ((v0.c0) IS FALSE)) DESC, CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) NOTNULL) ELSE v0.c0 END DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, ((0.9753409885271116)IS(vt1.c0)), ((vt1.c0)==(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, TRIM(NULL, vt1.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) ISNULL), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, ((0.9753409885271116)IS(vt1.c0)), ((vt1.c0)=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, TRIM(NULL, vt1.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) ISNULL), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, ((0.9753409885271116)IS(vt1.c0)), ((vt1.c0)==(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, TRIM(NULL, vt1.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) ISNULL), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, ((0.9753409885271116)IS(vt1.c0)), ((vt1.c0)=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, TRIM(NULL, vt1.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) ISNULL), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, ((0.9753409885271116)IS(vt1.c0)), ((vt1.c0)==(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, TRIM(NULL, vt1.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) ISNULL), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))-((((vt0.c0))>=((vt0.c0)))))) ORDER BY ((((vt0.c0) IS TRUE))<<(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))-((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))<<(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))-((((vt0.c0))>=((vt0.c0)))))) ORDER BY ((((vt0.c0) IS TRUE))<<(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))-((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))<<(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))-((((vt0.c0))>=((vt0.c0)))))) ORDER BY ((((vt0.c0) IS TRUE))<<(vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN v0 WHERE (COALESCE(DISTINCT (vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (- (vt1.c0)), '-1290717819'));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (- (vt1.c0)), '-1290717819')) IS TRUE)  as count FROM vt1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN v0 WHERE (COALESCE(DISTINCT (vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (- (vt1.c0)), '-1290717819'));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (- (vt1.c0)), '-1290717819')) IS TRUE)  as count FROM vt1 NATURAL JOIN v0);
SELECT * FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((((vt0.c0))<((v0.c0)))) NOT NULL) WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=(((vt1.c0 IN (v0.c0)))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=(((vt1.c0 IN (v0.c0)))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((((vt0.c0))<((v0.c0)))) NOT NULL) ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((((vt0.c0))<((v0.c0)))) NOT NULL) WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=(((vt1.c0 IN (v0.c0)))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=(((vt1.c0 IN (v0.c0)))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((((vt0.c0))<((v0.c0)))) NOT NULL) ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((v0.c0 IN (vt1.c0, v0.c0)))/((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt1.c0, v0.c0)))/((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((v0.c0 IN (vt1.c0, v0.c0)))/((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt1.c0, v0.c0)))/((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(NULL)))OR(vt1.c0)) AS REAL)) ORDER BY (((+ (0.6898217347375649)))<<((~ (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(NULL)))OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((+ (0.6898217347375649)))<<((~ (vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(NULL)))OR(vt1.c0)) AS REAL)) ORDER BY (((+ (0.6898217347375649)))<<((~ (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(NULL)))OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((+ (0.6898217347375649)))<<((~ (vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(NULL)))OR(vt1.c0)) AS REAL)) ORDER BY (((+ (0.6898217347375649)))<<((~ (vt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR(vt1.c0))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR(vt1.c0))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (vt1.c0) ORDER BY (- ('c,O'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (- ('c,O'))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (vt1.c0) ORDER BY (- ('c,O'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (- ('c,O'))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (vt1.c0) ORDER BY (- ('c,O'))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((((vt1.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((((vt1.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((((vt1.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((((vt1.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((((vt1.c0))<>((vt0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0)OR(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0)))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))!=(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS BLOB))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0)))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))!=(v0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0)OR(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0)))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))!=(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS BLOB))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0)))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))!=(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((v0.c0)IS(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((v0.c0)IS(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(0.18100098273576393)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(0.18100098273576393)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(0.18100098273576393)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(0.18100098273576393)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(0.18100098273576393)))AND(vt0.c0)) IN ()));
SELECT * FROM v0, vt0 WHERE (((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE))) ORDER BY ((0.31166708822607314) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((0.31166708822607314) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE))) ORDER BY ((0.31166708822607314) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((0.31166708822607314) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY vt1.c0 DESC;
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ('');
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((((((0.7705673420491435))<=((vt0.c0))))%((((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((0.7705673420491435))<=((vt0.c0))))%((((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((((((0.7705673420491435))<=((vt0.c0))))%((((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((0.7705673420491435))<=((vt0.c0))))%((((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((((((0.7705673420491435))<=((vt0.c0))))%((((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (NULL) ORDER BY v0.c0 DESC  NULLS FIRST, vt1.c0  NULLS LAST, CASE rtreenode(0.6996687088087891, vt1.c0)  WHEN '' THEN (+ (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY v0.c0 DESC  NULLS FIRST, vt1.c0  NULLS LAST, CASE rtreenode(0.6996687088087891, vt1.c0)  WHEN '' THEN (+ (vt1.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (NULL) ORDER BY v0.c0 DESC  NULLS FIRST, vt1.c0  NULLS LAST, CASE rtreenode(0.6996687088087891, vt1.c0)  WHEN '' THEN (+ (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY v0.c0 DESC  NULLS FIRST, vt1.c0  NULLS LAST, CASE rtreenode(0.6996687088087891, vt1.c0)  WHEN '' THEN (+ (vt1.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)/(vt1.c0))) BETWEEN (x'') AND ('1171308601')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt1.c0))) BETWEEN (x'') AND ('1171308601'))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)/(vt1.c0))) BETWEEN (x'') AND ('1171308601')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt1.c0))) BETWEEN (x'') AND ('1171308601'))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)/(vt1.c0))) BETWEEN (x'') AND ('1171308601')));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('')), '', ((vt0.c0)>=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)GLOB(vt1.c0)), (((vt0.c0, v0.c0, vt1.c0))==((vt0.c0, vt1.c0, v0.c0))))))) ORDER BY COALESCE(((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (v0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('')), '', ((vt0.c0)>=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)GLOB(vt1.c0)), (((vt0.c0, v0.c0, vt1.c0))=((vt0.c0, vt1.c0, v0.c0))))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY COALESCE(((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('')), '', ((vt0.c0)>=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)GLOB(vt1.c0)), (((vt0.c0, v0.c0, vt1.c0))==((vt0.c0, vt1.c0, v0.c0))))))) ORDER BY COALESCE(((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (v0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('')), '', ((vt0.c0)>=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)GLOB(vt1.c0)), (((vt0.c0, v0.c0, vt1.c0))=((vt0.c0, vt1.c0, v0.c0))))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY COALESCE(((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(vt0.c0 AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(vt0.c0 AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ('1368416562');
SELECT SUM(count) FROM (SELECT ALL (('1368416562') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ('1368416562');
SELECT SUM(count) FROM (SELECT ALL (('1368416562') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ('1368416562');
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND((((vt0.c0))==((vt0.c0))))))AND(vt0.c0)))OR(vt0.c0))) ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(0.8852481384125062)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))AND((((vt0.c0))==((vt0.c0))))))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(0.8852481384125062)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND((((vt0.c0))==((vt0.c0))))))AND(vt0.c0)))OR(vt0.c0))) ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(0.8852481384125062)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))AND((((vt0.c0))==((vt0.c0))))))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(0.8852481384125062)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND((((vt0.c0))==((vt0.c0))))))AND(vt0.c0)))OR(vt0.c0))) ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(0.8852481384125062)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN x'' END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN x'' END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN x'' END);
SELECT COUNT(*) FROM vt1, v0 WHERE (0.24550302910150457 COLLATE BINARY COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE BINARY)<(SQLITE_COMPILEOPTION_GET(v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.24550302910150457 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0 COLLATE BINARY)<(SQLITE_COMPILEOPTION_GET(v0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (0.24550302910150457 COLLATE BINARY COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE BINARY)<(SQLITE_COMPILEOPTION_GET(v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.24550302910150457 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0 COLLATE BINARY)<(SQLITE_COMPILEOPTION_GET(v0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((v0.c0)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((v0.c0)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM v0, vt1 NATURAL JOIN vt0 WHERE (((CAST(0.8036896484899206 AS REAL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.8036896484899206 AS REAL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0, vt1 NATURAL JOIN vt0 WHERE (((CAST(0.8036896484899206 AS REAL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.8036896484899206 AS REAL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (CAST((((vt1.c0))>((v0.c0))) AS INTEGER)) ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN (- (-552549353)) THEN vt1.c0 WHEN CAST(v0.c0 AS REAL) THEN CAST(vt0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0))>((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, vt1 ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN (- (-552549353)) THEN vt1.c0 WHEN CAST(v0.c0 AS REAL) THEN CAST(vt0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (CAST((((vt1.c0))>((v0.c0))) AS INTEGER)) ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN (- (-552549353)) THEN vt1.c0 WHEN CAST(v0.c0 AS REAL) THEN CAST(vt0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0))>((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, vt1 ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN (- (-552549353)) THEN vt1.c0 WHEN CAST(v0.c0 AS REAL) THEN CAST(vt0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (+ (vt1.c0))))>((SQLITE_COMPILEOPTION_GET(vt1.c0), ((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (+ (vt1.c0))))>((SQLITE_COMPILEOPTION_GET(vt1.c0), ((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (+ (vt1.c0))))>((SQLITE_COMPILEOPTION_GET(vt1.c0), ((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (+ (vt1.c0))))>((SQLITE_COMPILEOPTION_GET(vt1.c0), ((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (+ (vt1.c0))))>((SQLITE_COMPILEOPTION_GET(vt1.c0), ((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOTNULL) CROSS JOIN vt1 ON TYPEOF(vt0.c0) COLLATE NOCASE COLLATE BINARY WHERE (((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (PRINTF(vt1.c0)) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (PRINTF(vt1.c0)) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOTNULL) CROSS JOIN vt1 ON TYPEOF(vt0.c0) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOTNULL) CROSS JOIN vt1 ON TYPEOF(vt0.c0) COLLATE NOCASE COLLATE BINARY WHERE (((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (PRINTF(vt1.c0)) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (PRINTF(vt1.c0)) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOTNULL) CROSS JOIN vt1 ON TYPEOF(vt0.c0) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOTNULL) CROSS JOIN vt1 ON TYPEOF(vt0.c0) COLLATE NOCASE COLLATE BINARY WHERE (((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (PRINTF(vt1.c0)) AND ((- (v0.c0)))));
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN ((x'2f6a')!=(vt1.c0)) THEN rtreenode(vt0.c0, v0.c0) ELSE ((v0.c0)&(v0.c0)) END) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'2f6a')!=(vt1.c0)) THEN rtreenode(vt0.c0, v0.c0) ELSE ((v0.c0)&(v0.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN ((x'2f6a')!=(vt1.c0)) THEN rtreenode(vt0.c0, v0.c0) ELSE ((v0.c0)&(v0.c0)) END) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'2f6a')!=(vt1.c0)) THEN rtreenode(vt0.c0, v0.c0) ELSE ((v0.c0)&(v0.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt1, vt0, v0 WHERE (((vt0.c0) NOT BETWEEN ((((v0.c0, '1910083015', v0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((v0.c0, v0.c0, vt1.c0)))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((((v0.c0, '1910083015', v0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((v0.c0, v0.c0, vt1.c0)))) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((vt0.c0) NOT BETWEEN ((((v0.c0, '1910083015', v0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((v0.c0, v0.c0, vt1.c0)))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((((v0.c0, '1910083015', v0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((v0.c0, v0.c0, vt1.c0)))) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))+((+ ('*K煄kWvC')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt0.c0)))+((+ ('*K煄kWvC'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))+((+ ('*K煄kWvC')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt0.c0)))+((+ ('*K煄kWvC'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))+((+ ('*K煄kWvC')))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-1608066680'))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-1608066680'))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-1608066680'))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-1608066680'))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-1608066680'))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE NULL  WHEN NULL THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN NULL THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE NULL  WHEN NULL THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN NULL THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE NULL  WHEN NULL THEN vt0.c0 END IN ()));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CASE NULL  WHEN v0.c0 THEN v0.c0 END))>(((((v0.c0))<=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((CASE NULL  WHEN v0.c0 THEN v0.c0 END))>(((((v0.c0))<=((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CASE NULL  WHEN v0.c0 THEN v0.c0 END))>(((((v0.c0))<=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((CASE NULL  WHEN v0.c0 THEN v0.c0 END))>(((((v0.c0))<=((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (((vt0.c0) IS FALSE))) WHERE (((((vt1.c0))<>((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0))!=((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (((vt0.c0) IS FALSE))) WHERE (((((vt1.c0))<>((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0))!=((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (((vt0.c0) IS FALSE))) WHERE (((((vt1.c0))<>((vt1.c0))) IN ()));
SELECT ALL * FROM vt0, v0, vt1 WHERE ((- (vt1.c0)) COLLATE RTRIM) ORDER BY ((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))!=((vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))<>((vt0.c0 COLLATE BINARY))) ASC);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((- (vt1.c0)) COLLATE RTRIM) ORDER BY ((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))!=((vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))<>((vt0.c0 COLLATE BINARY))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=(0X7f2ad2eb)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)>=(0x7f2ad2eb))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=(0X7f2ad2eb)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)>=(0x7f2ad2eb))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=(0X7f2ad2eb)));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((((vt1.c0) NOTNULL)))<((vt0.c0 COLLATE BINARY)))) ORDER BY ((((((v0.c0)OR(x'')))AND(v0.c0)))>=(((vt1.c0)<<(v0.c0)))) ASC  NULLS LAST, CAST(CASE vt0.c0  WHEN '-1221537699' THEN vt0.c0 ELSE vt1.c0 END AS INTEGER), (CAST(vt1.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOTNULL)))<((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt0 ORDER BY ((((((v0.c0)OR(x'')))AND(v0.c0)))>=(((vt1.c0)<<(v0.c0)))) ASC  NULLS LAST, CAST(CASE vt0.c0  WHEN '-1221537699' THEN vt0.c0 ELSE vt1.c0 END AS INTEGER), (CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((((vt1.c0) NOTNULL)))<((vt0.c0 COLLATE BINARY)))) ORDER BY ((((((v0.c0)OR(x'')))AND(v0.c0)))>=(((vt1.c0)<<(v0.c0)))) ASC  NULLS LAST, CAST(CASE vt0.c0  WHEN '-1221537699' THEN vt0.c0 ELSE vt1.c0 END AS INTEGER), (CAST(vt1.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOTNULL)))<((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt0 ORDER BY ((((((v0.c0)OR(x'')))AND(v0.c0)))>=(((vt1.c0)<<(v0.c0)))) ASC  NULLS LAST, CAST(CASE vt0.c0  WHEN '-1221537699' THEN vt0.c0 ELSE vt1.c0 END AS INTEGER), (CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN v0 ON 'E0KVጢ' WHERE (vt1.c0) ORDER BY CASE (((v0.c0))>((v0.c0)))  WHEN UNLIKELY(vt1.c0) THEN v0.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS BLOB) END, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN v0 ON 'E0KVጢ' ORDER BY CASE (((v0.c0))>((v0.c0)))  WHEN UNLIKELY(vt1.c0) THEN v0.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS BLOB) END, ''  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN v0 ON 'E0KVጢ' WHERE (vt1.c0) ORDER BY CASE (((v0.c0))>((v0.c0)))  WHEN UNLIKELY(vt1.c0) THEN v0.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS BLOB) END, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN v0 ON 'E0KVጢ' ORDER BY CASE (((v0.c0))>((v0.c0)))  WHEN UNLIKELY(vt1.c0) THEN v0.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS BLOB) END, ''  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN v0 ON 'E0KVጢ' WHERE (vt1.c0) ORDER BY CASE (((v0.c0))>((v0.c0)))  WHEN UNLIKELY(vt1.c0) THEN v0.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS BLOB) END, ''  NULLS LAST;
SELECT ALL * FROM vt1, vt0 CROSS JOIN v0 ON TOTAL_CHANGES() WHERE (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY CAST(TRIM(DISTINCT vt1.c0, vt1.c0) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN v0 ON TOTAL_CHANGES() ORDER BY CAST(TRIM(DISTINCT vt1.c0, vt1.c0) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 CROSS JOIN v0 ON TOTAL_CHANGES() WHERE (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY CAST(TRIM(DISTINCT vt1.c0, vt1.c0) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN v0 ON TOTAL_CHANGES() ORDER BY CAST(TRIM(DISTINCT vt1.c0, vt1.c0) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)>>(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)%(vt0.c0)) IN ()));
SELECT ALL * FROM v0 WHERE (CASE WHEN '' THEN CAST(v0.c0 AS TEXT) END) ORDER BY v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST, (NOT ((((v0.c0))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST, (NOT ((((v0.c0))>((v0.c0))))));
SELECT ALL * FROM v0 WHERE (CASE WHEN '' THEN CAST(v0.c0 AS TEXT) END) ORDER BY v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST, (NOT ((((v0.c0))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST, (NOT ((((v0.c0))>((v0.c0))))));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (((0.4391290938254392 IN ())) IS TRUE) CROSS JOIN vt0 ON vt0.c0 WHERE (((NULL) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON (((0.4391290938254392 IN ())) IS TRUE) CROSS JOIN vt0 ON vt0.c0);
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (((0.4391290938254392 IN ())) IS TRUE) CROSS JOIN vt0 ON vt0.c0 WHERE (((NULL) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON (((0.4391290938254392 IN ())) IS TRUE) CROSS JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt0.c0)/(vt1.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(0.8894130399112278 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt1.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(0.8894130399112278 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt0.c0)/(vt1.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(0.8894130399112278 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt1.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(0.8894130399112278 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT))<>(((0.2691210862518594) ISNULL)))) ORDER BY NULL, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))!=(((0.2691210862518594) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY NULL, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE ASC);
SELECT * FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT))<>(((0.2691210862518594) ISNULL)))) ORDER BY NULL, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))!=(((0.2691210862518594) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY NULL, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE ASC);
SELECT * FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT))<>(((0.2691210862518594) ISNULL)))) ORDER BY NULL, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-26338743') AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY CASE ''  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((x'')!=(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-26338743') AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ''  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((x'')<>(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-26338743') AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY CASE ''  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((x'')!=(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-26338743') AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ''  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((x'')<>(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-26338743') AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY CASE ''  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((x'')!=(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT * FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ('SꚶC');
SELECT SUM(count) FROM (SELECT (('SꚶC') IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ('SꚶC');
SELECT SUM(count) FROM (SELECT (('SꚶC') IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ('SꚶC');
SELECT * FROM vt0, v0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((v0.c0))) ELSE ((v0.c0)LIKE(v0.c0)) END) ORDER BY CAST(((0xfffffffff508d562)>>(v0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((v0.c0))) ELSE ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((0xfffffffff508d562)>>(v0.c0)) AS TEXT) DESC);
SELECT * FROM vt0, v0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((v0.c0))) ELSE ((v0.c0)LIKE(v0.c0)) END) ORDER BY CAST(((0xfffffffff508d562)>>(v0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((v0.c0))) ELSE ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((0xfffffffff508d562)>>(v0.c0)) AS TEXT) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT ALL * FROM v0, vt0, vt1 WHERE (((NULL COLLATE NOCASE)>(((0.10824982547550732) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CASE (NOT (v0.c0))  WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0) IS TRUE) END, CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST, 0X5b7ad4d2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)>(((0.10824982547550732) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CASE (NOT (v0.c0))  WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0) IS TRUE) END, CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST, 0x5b7ad4d2  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((NULL COLLATE NOCASE)>(((0.10824982547550732) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CASE (NOT (v0.c0))  WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0) IS TRUE) END, CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST, 0X5b7ad4d2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)>(((0.10824982547550732) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CASE (NOT (v0.c0))  WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0) IS TRUE) END, CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST, 0x5b7ad4d2  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((0.059806975059250256)) AND ((((vt0.c0) ISNULL)))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)>('236364401')))%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((rtreenode(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt1.c0 COLLATE BINARY))) ORDER BY (((+ (v0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((0.059806975059250256)) AND ((((vt0.c0) ISNULL)))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)>('236364401')))%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((+ (v0.c0))) NOT NULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((0.059806975059250256)) AND ((((vt0.c0) ISNULL)))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)>('236364401')))%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((rtreenode(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt1.c0 COLLATE BINARY))) ORDER BY (((+ (v0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((0.059806975059250256)) AND ((((vt0.c0) ISNULL)))) RIGHT OUTER JOIN v0 ON ((((vt1.c0)>('236364401')))%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((+ (v0.c0))) NOT NULL));
SELECT ALL * FROM vt0 WHERE ((0.5016896020310044 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.5016896020310044 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((0.5016896020310044 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.5016896020310044 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((0.5016896020310044 COLLATE RTRIM IN ()));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON 'e.' WHERE ((((vt0.c0)||(vt0.c0)) IN ())) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON 'e.' ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON 'e.' WHERE ((((vt0.c0)||(vt0.c0)) IN ())) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON 'e.' ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON 'e.' WHERE ((((vt0.c0)||(vt0.c0)) IN ())) ORDER BY v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((- (((((vt0.c0)OR(vt1.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt1.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((- (((((vt0.c0)OR(vt1.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt1.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM vt0, v0, vt1 WHERE (CAST(1.98687964E9 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.98687964E9 AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (CAST(1.98687964E9 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.98687964E9 AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN vt1 ON CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((v0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)>>(vt1.c0)) WHEN TYPEOF(vt0.c0) THEN CASE WHEN 0.7934926607177704 THEN vt0.c0 ELSE vt1.c0 END ELSE (((vt1.c0))<>((v0.c0))) END WHERE ((+ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((v0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)>>(vt1.c0)) WHEN TYPEOF(vt0.c0) THEN CASE WHEN 0.7934926607177704 THEN vt0.c0 ELSE vt1.c0 END ELSE (((vt1.c0))!=((v0.c0))) END);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN vt1 ON CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((v0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)>>(vt1.c0)) WHEN TYPEOF(vt0.c0) THEN CASE WHEN 0.7934926607177704 THEN vt0.c0 ELSE vt1.c0 END ELSE (((vt1.c0))<>((v0.c0))) END WHERE ((+ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((v0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)>>(vt1.c0)) WHEN TYPEOF(vt0.c0) THEN CASE WHEN 0.7934926607177704 THEN vt0.c0 ELSE vt1.c0 END ELSE (((vt1.c0))!=((v0.c0))) END);
SELECT COUNT(*) FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))==(('xh*M3Q'))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))=(('xh*M3Q')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))==(('xh*M3Q'))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))=(('xh*M3Q')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))==(('xh*M3Q'))));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY SUBSTR((vt0.c0 IN ()), ((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY SUBSTR((vt0.c0 IN ()), ((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY SUBSTR((vt0.c0 IN ()), ((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY SUBSTR((vt0.c0 IN ()), ((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY SUBSTR((vt0.c0 IN ()), ((vt0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((ABS(DISTINCT vt1.c0))IS NOT((~ ('^2Sᩉ?C/K')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((ABS(DISTINCT vt1.c0))IS NOT((~ ('^2Sᩉ?C/K')))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((ABS(DISTINCT vt1.c0))IS NOT((~ ('^2Sᩉ?C/K')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((ABS(DISTINCT vt1.c0))IS NOT((~ ('^2Sᩉ?C/K')))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((ABS(DISTINCT vt1.c0))IS NOT((~ ('^2Sᩉ?C/K')))) DESC;
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY 659815290;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY 659815290);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY 659815290;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY 659815290);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)<(vt1.c0)) ELSE (vt1.c0 IN ()) END) ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, x'287f', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((vt1.c0)<(vt1.c0)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, x'287f', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)<(vt1.c0)) ELSE (vt1.c0 IN ()) END) ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, x'287f', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((vt1.c0)<(vt1.c0)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, x'287f', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)<(vt1.c0)) ELSE (vt1.c0 IN ()) END) ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, x'287f', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))IS(v0.c0)) WHERE (MIN((~ (vt0.c0)), ((v0.c0) ISNULL))) ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST, (((((vt0.c0)LIKE(vt0.c0))))>(((NOT (0.5816329576961458)))))  NULLS FIRST, ((((vt0.c0)<>(vt0.c0)))>>(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN((~ (vt0.c0)), ((v0.c0) ISNULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))IS(v0.c0)) ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST, (((((vt0.c0)LIKE(vt0.c0))))>(((NOT (0.5816329576961458)))))  NULLS FIRST, ((((vt0.c0)<>(vt0.c0)))>>(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))IS(v0.c0)) WHERE (MIN((~ (vt0.c0)), ((v0.c0) ISNULL))) ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST, (((((vt0.c0)LIKE(vt0.c0))))>(((NOT (0.5816329576961458)))))  NULLS FIRST, ((((vt0.c0)<>(vt0.c0)))>>(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN((~ (vt0.c0)), ((v0.c0) ISNULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))IS(v0.c0)) ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST, (((((vt0.c0)LIKE(vt0.c0))))>(((NOT (0.5816329576961458)))))  NULLS FIRST, ((((vt0.c0)<>(vt0.c0)))>>(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((CASE v0.c0  WHEN NULL THEN v0.c0 END)||((NOT (v0.c0))))) ORDER BY ((UPPER(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (TRIM('g+ ?'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN NULL THEN v0.c0 END)||((NOT (v0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((UPPER(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (TRIM('g+ ?'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((CASE v0.c0  WHEN NULL THEN v0.c0 END)||((NOT (v0.c0))))) ORDER BY ((UPPER(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (TRIM('g+ ?'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN NULL THEN v0.c0 END)||((NOT (v0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((UPPER(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (TRIM('g+ ?'))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((TRIM(DISTINCT vt1.c0))AND(((vt0.c0)>(vt1.c0)))))OR((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT vt1.c0))AND(((vt0.c0)>(vt1.c0)))))OR((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((TRIM(DISTINCT vt1.c0))AND(((vt0.c0)>(vt1.c0)))))OR((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT vt1.c0))AND(((vt0.c0)>(vt1.c0)))))OR((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((TRIM(DISTINCT vt1.c0))AND(((vt0.c0)>(vt1.c0)))))OR((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt0.c0))))));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN ((- (vt1.c0))))) ORDER BY (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY)LIKE((vt0.c0 IN (vt1.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN ((- (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY)LIKE((vt0.c0 IN (vt1.c0, vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN ((- (vt1.c0))))) ORDER BY (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY)LIKE((vt0.c0 IN (vt1.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN ((- (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY)LIKE((vt0.c0 IN (vt1.c0, vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x'')) IN ((- (vt1.c0))))) ORDER BY (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY)LIKE((vt0.c0 IN (vt1.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.5713094185544603)) NOTNULL) ASC, ((NULL) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.5713094185544603)) NOTNULL) ASC, ((NULL) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.5713094185544603)) NOTNULL) ASC, ((NULL) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.5713094185544603)) NOTNULL) ASC, ((NULL) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.5713094185544603)) NOTNULL) ASC, ((NULL) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(UPPER(DISTINCT vt0.c0))))OR(177828961)));
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(UPPER(DISTINCT vt0.c0))))OR(177828961))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(UPPER(DISTINCT vt0.c0))))OR(177828961)));
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(UPPER(DISTINCT vt0.c0))))OR(177828961))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(UPPER(DISTINCT vt0.c0))))OR(177828961)));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM WHERE (CAST(CASE v0.c0  WHEN NULL THEN vt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN NULL THEN vt1.c0 END AS REAL)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM WHERE (CAST(CASE v0.c0  WHEN NULL THEN vt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN NULL THEN vt1.c0 END AS REAL)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) IN ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) IN ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) IN ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) ORDER BY ((((vt1.c0)GLOB(vt1.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c0))) ISNULL)  NULLS FIRST);
SELECT * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) ORDER BY ((((vt1.c0)GLOB(vt1.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c0))) ISNULL)  NULLS FIRST);
SELECT * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) ORDER BY ((((vt1.c0)GLOB(vt1.c0))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY ((('1420565312') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((('1420565312') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY ((('1420565312') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((('1420565312') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY ((('1420565312') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)IS NOT(vt1.c0)))LIKE(((vt0.c0) IS TRUE)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt1.c0)))LIKE(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)IS NOT(vt1.c0)))LIKE(((vt0.c0) IS TRUE)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt1.c0)))LIKE(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)IS NOT(vt1.c0)))LIKE(((vt0.c0) IS TRUE)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ()))))AND(((v0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT NULL))OR((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ()))))AND(((v0.c0)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ()))))AND(((v0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT NULL))OR((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ()))))AND(((v0.c0)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))=((QUOTE(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))==((QUOTE(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))=((QUOTE(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))==((QUOTE(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)<=(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE 0.005578584685345889 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)<=(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE 0.005578584685345889 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)<=(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE 0.005578584685345889 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)<=(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE 0.005578584685345889 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)<=(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE 0.005578584685345889 END)));
SELECT ALL * FROM vt0, vt1, v0 WHERE (((vt1.c0)LIKE(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)LIKE(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((vt1.c0)LIKE(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)LIKE(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)OR((~ (vt1.c0)))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR((~ (vt1.c0)))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)OR((~ (vt1.c0)))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR((~ (vt1.c0)))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)OR((~ (vt1.c0)))))AND((+ (vt0.c0)))));
SELECT * FROM vt1, v0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON 'y\rJ%E-*CQ' WHERE (((vt1.c0)-(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)-(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON 'y\rJ%E-*CQ');
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON 'y\rJ%E-*CQ' WHERE (((vt1.c0)-(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)-(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON 'y\rJ%E-*CQ');
SELECT COUNT(*) FROM v0, vt1 WHERE (LOWER(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END)) ORDER BY (((((vt1.c0, vt1.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0)))) BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT vt1.c0, 0.9936670945245087) ASC, ((CAST(v0.c0 AS NUMERIC)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((vt1.c0, vt1.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0)))) BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT vt1.c0, 0.9936670945245087) ASC, ((CAST(v0.c0 AS NUMERIC)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1 WHERE (LOWER(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END)) ORDER BY (((((vt1.c0, vt1.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0)))) BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT vt1.c0, 0.9936670945245087) ASC, ((CAST(v0.c0 AS NUMERIC)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((vt1.c0, vt1.c0, v0.c0))<((vt1.c0, v0.c0, vt1.c0)))) BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT vt1.c0, 0.9936670945245087) ASC, ((CAST(v0.c0 AS NUMERIC)) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) ORDER BY ('0.027565549907261455' IN (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((((v0.c0)OR(LOWER(DISTINCT v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 273449419 THEN x'edab' WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1, v0 ORDER BY ('0.027565549907261455' IN (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((((v0.c0)OR(LOWER(DISTINCT v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 273449419 THEN x'edab' WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) ORDER BY ('0.027565549907261455' IN (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((((v0.c0)OR(LOWER(DISTINCT v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 273449419 THEN x'edab' WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1, v0 ORDER BY ('0.027565549907261455' IN (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((((v0.c0)OR(LOWER(DISTINCT v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 273449419 THEN x'edab' WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY CAST(((v0.c0) NOT BETWEEN (0.275065785249065) AND (v0.c0)) AS INTEGER) ASC, ((PRINTF(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (0.275065785249065) AND (v0.c0)) AS INTEGER) ASC, ((PRINTF(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY CAST(((v0.c0) NOT BETWEEN (0.275065785249065) AND (v0.c0)) AS INTEGER) ASC, ((PRINTF(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (0.275065785249065) AND (v0.c0)) AS INTEGER) ASC, ((PRINTF(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)  NULLS LAST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))*(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))*(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))*(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))*(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((v0.c0)<(vt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<(vt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((v0.c0)<(vt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<(vt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 'j#艚' END AS TEXT)) ORDER BY '^92cAL' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN 'j#艚' END AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY '^92cAL' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 'j#艚' END AS TEXT)) ORDER BY '^92cAL' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN 'j#艚' END AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY '^92cAL' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 'j#艚' END AS TEXT)) ORDER BY '^92cAL' ASC  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED, v0, vt1 WHERE (((NOT (v0.c0)) IN ((NOT (v0.c0)), (('-855623324') NOTNULL)))) ORDER BY CAST((((vt0.c0, vt1.c0, 0xfffffffff03b5fc3, vt0.c0, vt0.c0))<=((vt1.c0, '\ruVB', v0.c0, vt0.c0, vt1.c0))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN ((NOT (v0.c0)), (('-855623324') NOTNULL)))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, vt1 ORDER BY CAST((((vt0.c0, vt1.c0, 0xfffffffff03b5fc3, vt0.c0, vt0.c0))<=((vt1.c0, '\ruVB', v0.c0, vt0.c0, vt1.c0))) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 NOT INDEXED, v0, vt1 WHERE (((NOT (v0.c0)) IN ((NOT (v0.c0)), (('-855623324') NOTNULL)))) ORDER BY CAST((((vt0.c0, vt1.c0, 0xfffffffff03b5fc3, vt0.c0, vt0.c0))<=((vt1.c0, '\ruVB', v0.c0, vt0.c0, vt1.c0))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN ((NOT (v0.c0)), (('-855623324') NOTNULL)))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, vt1 ORDER BY CAST((((vt0.c0, vt1.c0, 0xfffffffff03b5fc3, vt0.c0, vt0.c0))<=((vt1.c0, '\ruVB', v0.c0, vt0.c0, vt1.c0))) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9574634306549519)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9574634306549519)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9574634306549519)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9574634306549519)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9574634306549519)) AS TEXT));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM vt1, v0 FULL OUTER JOIN vt0 ON (((vt0.c0) NOTNULL) IN ()) WHERE (v0.c0) ORDER BY ((((((vt0.c0)==(v0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(ABS(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON (((vt0.c0) NOTNULL) IN ()) ORDER BY ((((((vt0.c0)==(v0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(ABS(vt1.c0))) ASC);
SELECT * FROM vt1, v0 FULL OUTER JOIN vt0 ON (((vt0.c0) NOTNULL) IN ()) WHERE (v0.c0) ORDER BY ((((((vt0.c0)==(v0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(ABS(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON (((vt0.c0) NOTNULL) IN ()) ORDER BY ((((((vt0.c0)==(v0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(ABS(vt1.c0))) ASC);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (0.7610693993717133) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.7610693993717133) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((v0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (0.7610693993717133) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.7610693993717133) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((v0.c0) ISNULL)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (IFNULL(DISTINCT ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), TRIM(v0.c0))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (v0.c0) AND (NULLIF(v0.c0, vt0.c0))) ASC  NULLS FIRST, CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN x'' THEN 1.368416562E9 END WHEN v0.c0 THEN ('-2010126056' IN ()) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), TRIM(v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (v0.c0) AND (NULLIF(v0.c0, vt0.c0))) ASC  NULLS FIRST, CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN x'' THEN 1.368416562E9 END WHEN v0.c0 THEN ('-2010126056' IN ()) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE BINARY END);
SELECT ALL * FROM vt0, v0 WHERE (IFNULL(DISTINCT ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), TRIM(v0.c0))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (v0.c0) AND (NULLIF(v0.c0, vt0.c0))) ASC  NULLS FIRST, CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN x'' THEN 1.368416562E9 END WHEN v0.c0 THEN ('-2010126056' IN ()) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), TRIM(v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (v0.c0) AND (NULLIF(v0.c0, vt0.c0))) ASC  NULLS FIRST, CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN x'' THEN 1.368416562E9 END WHEN v0.c0 THEN ('-2010126056' IN ()) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((((vt0.c0) NOT NULL), ((vt1.c0) NOTNULL), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((v0.c0)GLOB(vt0.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0)>=(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((((vt0.c0) NOT NULL), ((vt1.c0) NOTNULL), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((v0.c0)GLOB(vt0.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0)>=(v0.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((((vt0.c0) NOT NULL), ((vt1.c0) NOTNULL), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((v0.c0)GLOB(vt0.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0)>=(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((((vt0.c0) NOT NULL), ((vt1.c0) NOTNULL), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((v0.c0)GLOB(vt0.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0)>=(v0.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1 WHERE ((~ (ABS(DISTINCT vt1.c0)))) ORDER BY json_array('', (NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY json_array('', (NOT (vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((~ (ABS(DISTINCT vt1.c0)))) ORDER BY json_array('', (NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY json_array('', (NOT (vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((~ (ABS(DISTINCT vt1.c0)))) ORDER BY json_array('', (NOT (vt1.c0)));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM v0 WHERE (((ROUND(v0.c0, v0.c0)) BETWEEN (v0.c0) AND ((NOT (0.005578584685345889)))));
SELECT SUM(count) FROM (SELECT ((((ROUND(v0.c0, v0.c0)) BETWEEN (v0.c0) AND ((NOT (0.005578584685345889))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((ROUND(v0.c0, v0.c0)) BETWEEN (v0.c0) AND ((NOT (0.005578584685345889)))));
SELECT SUM(count) FROM (SELECT ((((ROUND(v0.c0, v0.c0)) BETWEEN (v0.c0) AND ((NOT (0.005578584685345889))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt0.c0)<=(vt0.c0))) NOT NULL)) ORDER BY ((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE NOCASE, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE NOCASE, vt1.c0  NULLS FIRST);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt0.c0)<=(vt0.c0))) NOT NULL)) ORDER BY ((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE NOCASE, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE NOCASE, vt1.c0  NULLS FIRST);
SELECT * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)||(vt0.c0)))AND('')))OR(((vt0.c0)&(v0.c0)))) WHERE (((v0.c0 COLLATE BINARY)LIKE((~ (vt1.c0))))) ORDER BY (NOT ((((v0.c0, v0.c0, vt1.c0))<((vt0.c0, v0.c0, v0.c0))))) ASC  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) BETWEEN ((vt1.c0 IN (vt0.c0))) AND ((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)LIKE((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)||(vt0.c0)))AND('')))OR(((vt0.c0)&(v0.c0)))) ORDER BY (NOT ((((v0.c0, v0.c0, vt1.c0))<((vt0.c0, v0.c0, v0.c0))))) ASC  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) BETWEEN ((vt1.c0 IN (vt0.c0))) AND ((~ (vt0.c0)))) ASC);
SELECT * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)||(vt0.c0)))AND('')))OR(((vt0.c0)&(v0.c0)))) WHERE (((v0.c0 COLLATE BINARY)LIKE((~ (vt1.c0))))) ORDER BY (NOT ((((v0.c0, v0.c0, vt1.c0))<((vt0.c0, v0.c0, v0.c0))))) ASC  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) BETWEEN ((vt1.c0 IN (vt0.c0))) AND ((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)LIKE((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)||(vt0.c0)))AND('')))OR(((vt0.c0)&(v0.c0)))) ORDER BY (NOT ((((v0.c0, v0.c0, vt1.c0))<((vt0.c0, v0.c0, v0.c0))))) ASC  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) BETWEEN ((vt1.c0 IN (vt0.c0))) AND ((~ (vt0.c0)))) ASC);
SELECT ALL * FROM vt1, v0 WHERE (((((TRIM(v0.c0))OR(vt1.c0 COLLATE RTRIM)))AND((('1897305011')||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(v0.c0))OR(vt1.c0 COLLATE RTRIM)))AND((('1897305011')||(v0.c0))))) IS TRUE)  as count FROM vt1, v0 NOT INDEXED);
SELECT ALL * FROM vt1, v0 WHERE (((((TRIM(v0.c0))OR(vt1.c0 COLLATE RTRIM)))AND((('1897305011')||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(v0.c0))OR(vt1.c0 COLLATE RTRIM)))AND((('1897305011')||(v0.c0))))) IS TRUE)  as count FROM vt1, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (((v0.c0)<=(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN '' END))) ORDER BY ((HEX(DISTINCT v0.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (((v0.c0)<=(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN '' END))) IS TRUE)  as count FROM v0 ORDER BY ((HEX(DISTINCT v0.c0)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (((v0.c0)<=(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN '' END))) ORDER BY ((HEX(DISTINCT v0.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (((v0.c0)<=(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN '' END))) IS TRUE)  as count FROM v0 ORDER BY ((HEX(DISTINCT v0.c0)) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((vt1.c0)OR(vt1.c0))))) ORDER BY (((v0.c0) IS FALSE) IN ()), ((((0.8704472599311653) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c0) IS FALSE) IN ()), ((((0.8704472599311653) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) ASC);
SELECT ALL * FROM vt1, v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((vt1.c0)OR(vt1.c0))))) ORDER BY (((v0.c0) IS FALSE) IN ()), ((((0.8704472599311653) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c0) IS FALSE) IN ()), ((((0.8704472599311653) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) ASC);
SELECT ALL * FROM vt0, v0 WHERE (CASE ((v0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 WHEN MIN(v0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((x'')) AND ((v0.c0))) WHEN (- (vt0.c0)) THEN ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c0)||(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 WHEN MIN(v0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((x'')) AND ((v0.c0))) WHEN (- (vt0.c0)) THEN ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c0)||(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END ASC);
SELECT ALL * FROM vt0, v0 WHERE (CASE ((v0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 WHEN MIN(v0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((x'')) AND ((v0.c0))) WHEN (- (vt0.c0)) THEN ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c0)||(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 WHEN MIN(v0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((x'')) AND ((v0.c0))) WHEN (- (vt0.c0)) THEN ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c0)||(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) ORDER BY ABS(DISTINCT vt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ABS(DISTINCT vt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) ORDER BY ABS(DISTINCT vt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ABS(DISTINCT vt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) ORDER BY ABS(DISTINCT vt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY 'w]' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY 'w]' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY 'w]' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY 'w]' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY 'w]' ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (json_array((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, NULL, vt0.c0))), ((vt0.c0)IS(vt1.c0)), CAST(vt1.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, NULL, vt0.c0))), ((vt0.c0)IS(vt1.c0)), CAST(vt1.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (json_array((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, NULL, vt0.c0))), ((vt0.c0)IS(vt1.c0)), CAST(vt1.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, NULL, vt0.c0))), ((vt0.c0)IS(vt1.c0)), CAST(vt1.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (json_array((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, NULL, vt0.c0))), ((vt0.c0)IS(vt1.c0)), CAST(vt1.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c0))<((((vt1.c0)==(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<((((vt1.c0)==(v0.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c0))<((((vt1.c0)==(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<((((vt1.c0)==(v0.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt1, v0, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((x'')>(vt0.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(vt1.c0)) THEN (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN load_extension(vt0.c0) THEN (NOT (1.7976931348623157E308)) WHEN ((vt1.c0)=(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((v0.c0)%(v0.c0)) END) ORDER BY ((((((vt0.c0)!=(v0.c0)))AND(((v0.c0) NOT NULL))))OR(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((x'')>(vt0.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(vt1.c0)) THEN (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN load_extension(vt0.c0) THEN (NOT (1.7976931348623157E308)) WHEN ((vt1.c0)==(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((v0.c0)%(v0.c0)) END) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((vt0.c0)<>(v0.c0)))AND(((v0.c0) NOT NULL))))OR(v0.c0))  NULLS FIRST);
SELECT * FROM vt1, v0, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((x'')>(vt0.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(vt1.c0)) THEN (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN load_extension(vt0.c0) THEN (NOT (1.7976931348623157E308)) WHEN ((vt1.c0)=(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((v0.c0)%(v0.c0)) END) ORDER BY ((((((vt0.c0)!=(v0.c0)))AND(((v0.c0) NOT NULL))))OR(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((x'')>(vt0.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(vt1.c0)) THEN (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN load_extension(vt0.c0) THEN (NOT (1.7976931348623157E308)) WHEN ((vt1.c0)==(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((v0.c0)%(v0.c0)) END) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((vt0.c0)<>(v0.c0)))AND(((v0.c0) NOT NULL))))OR(v0.c0))  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (UNLIKELY(DISTINCT vt1.c0)) ORDER BY (((')E9I' IN ()))/(((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((')E9I' IN ()))/(((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (UNLIKELY(DISTINCT vt1.c0)) ORDER BY (((')E9I' IN ()))/(((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((')E9I' IN ()))/(((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY x''  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) ISNULL) ASC  NULLS FIRST, TYPEOF(CAST(vt1.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) ISNULL) ASC  NULLS FIRST, TYPEOF(CAST(vt1.c0 AS NUMERIC)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY x''  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) ISNULL) ASC  NULLS FIRST, TYPEOF(CAST(vt1.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) ISNULL) ASC  NULLS FIRST, TYPEOF(CAST(vt1.c0 AS NUMERIC)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY x''  NULLS LAST, ((((vt1.c0)AND(vt1.c0))) ISNULL) ASC  NULLS FIRST, TYPEOF(CAST(vt1.c0 AS NUMERIC)) DESC;
SELECT * FROM v0 WHERE ((((v0.c0)>=(v0.c0)) IN ())) ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (NOT (NULL)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0)&(v0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)>=(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (NOT (NULL)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0)&(v0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)>=(v0.c0)) IN ())) ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (NOT (NULL)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0)&(v0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)>=(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (NOT (NULL)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0)&(v0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, x'', vt0.c0, v0.c0)) NOT BETWEEN (((+ (vt0.c0)), ABS(v0.c0), ((v0.c0)>>(v0.c0)), v0.c0, ((vt0.c0) NOTNULL))) AND ((80358924, ((v0.c0)<(vt0.c0)), ((vt0.c0)LIKE(vt0.c0)), (v0.c0 IN ()), CASE WHEN NULL THEN vt0.c0 END)))) ORDER BY CAST('1915661346' AS INTEGER)  NULLS FIRST, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, x'', vt0.c0, v0.c0)) NOT BETWEEN (((+ (vt0.c0)), ABS(v0.c0), ((v0.c0)>>(v0.c0)), v0.c0, ((vt0.c0) NOTNULL))) AND ((80358924, ((v0.c0)<(vt0.c0)), ((vt0.c0)LIKE(vt0.c0)), (v0.c0 IN ()), CASE WHEN NULL THEN vt0.c0 END)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST('1915661346' AS INTEGER)  NULLS FIRST, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((vt0.c0) ISNULL))) ASC);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, x'', vt0.c0, v0.c0)) NOT BETWEEN (((+ (vt0.c0)), ABS(v0.c0), ((v0.c0)>>(v0.c0)), v0.c0, ((vt0.c0) NOTNULL))) AND ((80358924, ((v0.c0)<(vt0.c0)), ((vt0.c0)LIKE(vt0.c0)), (v0.c0 IN ()), CASE WHEN NULL THEN vt0.c0 END)))) ORDER BY CAST('1915661346' AS INTEGER)  NULLS FIRST, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, x'', vt0.c0, v0.c0)) NOT BETWEEN (((+ (vt0.c0)), ABS(v0.c0), ((v0.c0)>>(v0.c0)), v0.c0, ((vt0.c0) NOTNULL))) AND ((80358924, ((v0.c0)<(vt0.c0)), ((vt0.c0)LIKE(vt0.c0)), (v0.c0 IN ()), CASE WHEN NULL THEN vt0.c0 END)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST('1915661346' AS INTEGER)  NULLS FIRST, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((vt0.c0) ISNULL))) ASC);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT));
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(((vt0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(((vt0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 NOT INDEXED);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(((vt0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(((vt0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, (+ (v0.c0)))) AND (((vt0.c0 IN ()), ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), IFNULL(v0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, (+ (v0.c0)))) AND (((vt0.c0 IN ()), ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), IFNULL(v0.c0, vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, (+ (v0.c0)))) AND (((vt0.c0 IN ()), ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), IFNULL(v0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, (+ (v0.c0)))) AND (((vt0.c0 IN ()), ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), IFNULL(v0.c0, vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((((((((((((CAST(v0.c0 AS BLOB))OR(((vt0.c0)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((NOT (vt0.c0)))))OR(((((vt0.c0)OR(v0.c0)))AND(x'')))))OR((((vt1.c0, 0.49533315440400827, v0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))) WHERE (x'bd4d' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'bd4d' COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((((((((((((CAST(v0.c0 AS BLOB))OR(((vt0.c0)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((NOT (vt0.c0)))))OR(((((vt0.c0)OR(v0.c0)))AND(x'')))))OR((((vt1.c0, 0.49533315440400827, v0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((((((((((((CAST(v0.c0 AS BLOB))OR(((vt0.c0)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((NOT (vt0.c0)))))OR(((((vt0.c0)OR(v0.c0)))AND(x'')))))OR((((vt1.c0, 0.49533315440400827, v0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))) WHERE (x'bd4d' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'bd4d' COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((((((((((((CAST(v0.c0 AS BLOB))OR(((vt0.c0)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE BINARY)))AND((NOT (vt0.c0)))))OR(((((vt0.c0)OR(v0.c0)))AND(x'')))))OR((((vt1.c0, 0.49533315440400827, v0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))));
SELECT ALL * FROM vt0 WHERE ((UNLIKELY(vt0.c0) IN ())) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE ((UNLIKELY(vt0.c0) IN ())) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE ((UNLIKELY(vt0.c0) IN ())) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) IS TRUE) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE ((((vt1.c0 IN ()))GLOB('')));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(''))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE ((((vt1.c0 IN ()))GLOB('')));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(''))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE ((((vt1.c0 IN ()))GLOB('')));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TRIM(vt0.c0) COLLATE NOCASE) ORDER BY (UNLIKELY(DISTINCT '989774832') IN ()) DESC  NULLS LAST, (NOT (vt0.c0 COLLATE NOCASE)) ASC, ((v0.c0)IS NOT(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (UNLIKELY(DISTINCT '989774832') IN ()) DESC  NULLS LAST, (NOT (vt0.c0 COLLATE NOCASE)) ASC, ((v0.c0)IS NOT(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TRIM(vt0.c0) COLLATE NOCASE) ORDER BY (UNLIKELY(DISTINCT '989774832') IN ()) DESC  NULLS LAST, (NOT (vt0.c0 COLLATE NOCASE)) ASC, ((v0.c0)IS NOT(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (UNLIKELY(DISTINCT '989774832') IN ()) DESC  NULLS LAST, (NOT (vt0.c0 COLLATE NOCASE)) ASC, ((v0.c0)IS NOT(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN (v0.c0 IN (x'4d66')) ELSE ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) END) ORDER BY 0.09494708798066598 ASC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN (v0.c0 IN (x'4d66')) ELSE ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY 0.09494708798066598 ASC);
SELECT * FROM v0 WHERE (CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN (v0.c0 IN (x'4d66')) ELSE ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) END) ORDER BY 0.09494708798066598 ASC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN (v0.c0 IN (x'4d66')) ELSE ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY 0.09494708798066598 ASC);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN v0 ON CAST(vt0.c0 AS BLOB) WHERE (SQLITE_COMPILEOPTION_USED(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(vt0.c0)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN v0 ON CAST(vt0.c0 AS BLOB));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN v0 ON CAST(vt0.c0 AS BLOB) WHERE (SQLITE_COMPILEOPTION_USED(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(vt0.c0)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) IS FALSE) RIGHT OUTER JOIN v0 ON CAST(vt0.c0 AS BLOB));
SELECT COUNT(*) FROM vt1, v0 WHERE ('-1528209185');
SELECT SUM(count) FROM (SELECT (('-1528209185') IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE ('-1528209185');
SELECT SUM(count) FROM (SELECT (('-1528209185') IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE ('-1528209185');
SELECT * FROM vt0, vt1, v0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY (~ (CASE WHEN vt0.c0 THEN '185761092' END)), CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (~ (CASE WHEN vt0.c0 THEN '185761092' END)), CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0, vt1, v0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY (~ (CASE WHEN vt0.c0 THEN '185761092' END)), CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (~ (CASE WHEN vt0.c0 THEN '185761092' END)), CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ())  NULLS FIRST, NULL COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ())  NULLS FIRST, NULL COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ())  NULLS FIRST, NULL COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ())  NULLS FIRST, NULL COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)/(vt0.c0)) THEN (~ (vt0.c0)) WHEN IFNULL(DISTINCT v0.c0, vt0.c0) THEN '-885059390' WHEN v0.c0 THEN NULL ELSE (0X3bdf6c5e IN ()) END WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((((((vt0.c0)AND(((vt0.c0)>=(v0.c0)))))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))OR(0xffffffffb7fe2d0f)))OR(TYPEOF(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)/(vt0.c0)) THEN (~ (vt0.c0)) WHEN IFNULL(DISTINCT v0.c0, vt0.c0) THEN '-885059390' WHEN v0.c0 THEN NULL ELSE (0X3bdf6c5e IN ()) END ORDER BY ((((((((vt0.c0)AND(((vt0.c0)>=(v0.c0)))))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))OR(0xffffffffb7fe2d0f)))OR(TYPEOF(DISTINCT vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)/(vt0.c0)) THEN (~ (vt0.c0)) WHEN IFNULL(DISTINCT v0.c0, vt0.c0) THEN '-885059390' WHEN v0.c0 THEN NULL ELSE (0X3bdf6c5e IN ()) END WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((((((vt0.c0)AND(((vt0.c0)>=(v0.c0)))))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))OR(0xffffffffb7fe2d0f)))OR(TYPEOF(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)/(vt0.c0)) THEN (~ (vt0.c0)) WHEN IFNULL(DISTINCT v0.c0, vt0.c0) THEN '-885059390' WHEN v0.c0 THEN NULL ELSE (0X3bdf6c5e IN ()) END ORDER BY ((((((((vt0.c0)AND(((vt0.c0)>=(v0.c0)))))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))OR(0xffffffffb7fe2d0f)))OR(TYPEOF(DISTINCT vt0.c0))) ASC);
SELECT * FROM vt1, v0 NATURAL JOIN vt0 WHERE (LOWER(vt0.c0 COLLATE NOCASE)) ORDER BY 0Xfffffffff321e422 DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN vt0 ORDER BY 0Xfffffffff321e422 DESC);
SELECT * FROM vt1, v0 NATURAL JOIN vt0 WHERE (LOWER(vt0.c0 COLLATE NOCASE)) ORDER BY 0Xfffffffff321e422 DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN vt0 ORDER BY 0Xfffffffff321e422 DESC);
SELECT * FROM vt1, v0 NATURAL JOIN vt0 WHERE (LOWER(vt0.c0 COLLATE NOCASE)) ORDER BY 0Xfffffffff321e422 DESC;
SELECT ALL * FROM vt0, v0 WHERE ((((x'')) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((x'') BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((x'')) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((x'') BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))|((((vt1.c0))==((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))|((((vt1.c0))=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))|((((vt1.c0))==((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))|((((vt1.c0))=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))|((((vt1.c0))==((vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((((((((((((v0.c0 IN ()))AND((- (vt0.c0)))))OR(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(x'')))AND(((v0.c0)OR(v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(LOWER(vt0.c0)))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM, CASE WHEN NULL THEN ((v0.c0)IS NOT(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((v0.c0 IN ()))AND((- (vt0.c0)))))OR(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(x'')))AND(((v0.c0)OR(v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(LOWER(vt0.c0)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM, CASE WHEN NULL THEN ((v0.c0)IS NOT(vt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((((((((((((v0.c0 IN ()))AND((- (vt0.c0)))))OR(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(x'')))AND(((v0.c0)OR(v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(LOWER(vt0.c0)))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM, CASE WHEN NULL THEN ((v0.c0)IS NOT(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((v0.c0 IN ()))AND((- (vt0.c0)))))OR(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(x'')))AND(((v0.c0)OR(v0.c0)))))AND(CAST(vt1.c0 AS REAL))))AND(LOWER(vt0.c0)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM, CASE WHEN NULL THEN ((v0.c0)IS NOT(vt1.c0)) END ASC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM))<>((NULL)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS FALSE))) DESC, (((((vt1.c0))<((vt1.c0)))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE RTRIM))<>((NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS FALSE))) DESC, (((((vt1.c0))<((vt1.c0)))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM))<>((NULL)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS FALSE))) DESC, (((((vt1.c0))<((vt1.c0)))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE RTRIM))<>((NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS FALSE))) DESC, (((((vt1.c0))<((vt1.c0)))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM))<>((NULL)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS FALSE))) DESC, (((((vt1.c0))<((vt1.c0)))) IS TRUE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN ())) ISNULL) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) ISNULL) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN ())) ISNULL) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) ISNULL) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM))));
SELECT * FROM v0 INNER JOIN vt1 ON load_extension(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) CROSS JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN v0.c0 COLLATE RTRIM ELSE 1.11021321E9 END WHERE (((CASE WHEN v0.c0 THEN vt1.c0 END)OR((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN vt1.c0 END)OR((~ (vt1.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON load_extension(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) CROSS JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN v0.c0 COLLATE RTRIM ELSE 1.11021321E9 END);
SELECT * FROM v0 INNER JOIN vt1 ON load_extension(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) CROSS JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN v0.c0 COLLATE RTRIM ELSE 1.11021321E9 END WHERE (((CASE WHEN v0.c0 THEN vt1.c0 END)OR((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN vt1.c0 END)OR((~ (vt1.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON load_extension(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) CROSS JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN v0.c0 COLLATE RTRIM ELSE 1.11021321E9 END);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN '-1848774872' WHEN 0.8132787354938965 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY CAST(x'' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN '-1848774872' WHEN 0.8132787354938965 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS INTEGER));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN '-1848774872' WHEN 0.8132787354938965 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY CAST(x'' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN '-1848774872' WHEN 0.8132787354938965 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS INTEGER));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN '-1848774872' WHEN 0.8132787354938965 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY CAST(x'' AS INTEGER);
SELECT * FROM vt1 WHERE (((vt1.c0)<(vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC);
SELECT * FROM vt1 WHERE (((vt1.c0)<(vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC);
SELECT * FROM vt1 WHERE (((vt1.c0)<(vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC;
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY) ORDER BY (((((v0.c0 IN (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND((('3t.W') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND((('3t.W') ISNULL))) ASC);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY) ORDER BY (((((v0.c0 IN (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND((('3t.W') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND((('3t.W') ISNULL))) ASC);
SELECT ALL * FROM vt1 WHERE ('140657336');
SELECT SUM(count) FROM (SELECT (('140657336') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('140657336');
SELECT SUM(count) FROM (SELECT (('140657336') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('140657336');
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((vt1.c0)>>(v0.c0)) COLLATE RTRIM) ORDER BY (NOT (SQLITE_SOURCE_ID())) DESC, ((((((((UPPER(vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<<(vt1.c0)))))OR((((vt1.c0))<>((v0.c0))))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST, (((- (vt1.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1 ORDER BY (NOT (SQLITE_SOURCE_ID())) DESC, ((((((((UPPER(vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<<(vt1.c0)))))OR((((vt1.c0))<>((v0.c0))))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST, (((- (vt1.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((vt1.c0)>>(v0.c0)) COLLATE RTRIM) ORDER BY (NOT (SQLITE_SOURCE_ID())) DESC, ((((((((UPPER(vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<<(vt1.c0)))))OR((((vt1.c0))<>((v0.c0))))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST, (((- (vt1.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1 ORDER BY (NOT (SQLITE_SOURCE_ID())) DESC, ((((((((UPPER(vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<<(vt1.c0)))))OR((((vt1.c0))<>((v0.c0))))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST, (((- (vt1.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE '659815290' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE '659815290' END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE '659815290' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE '659815290' END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE NOCASE) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE NOCASE) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN (NULL IN ()) ELSE ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((((((((vt0.c0) NOT NULL))AND((((vt0.c0, vt0.c0, vt0.c0))<>((0.9047417052398496, vt1.c0, vt0.c0))))))AND((NOT (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt1.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN (NULL IN ()) ELSE ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((vt0.c0) NOT NULL))AND((((vt0.c0, vt0.c0, vt0.c0))<>((0.9047417052398496, vt1.c0, vt0.c0))))))AND((NOT (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt1.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN (NULL IN ()) ELSE ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((((((((vt0.c0) NOT NULL))AND((((vt0.c0, vt0.c0, vt0.c0))<>((0.9047417052398496, vt1.c0, vt0.c0))))))AND((NOT (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt1.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN (NULL IN ()) ELSE ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((vt0.c0) NOT NULL))AND((((vt0.c0, vt0.c0, vt0.c0))<>((0.9047417052398496, vt1.c0, vt0.c0))))))AND((NOT (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt1.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN (NULL IN ()) ELSE ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((((((((vt0.c0) NOT NULL))AND((((vt0.c0, vt0.c0, vt0.c0))<>((0.9047417052398496, vt1.c0, vt0.c0))))))AND((NOT (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt1.c0));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (IFNULL(DISTINCT vt1.c0, vt1.c0)) AND (x''))) ORDER BY (+ (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) BETWEEN (IFNULL(DISTINCT vt1.c0, vt1.c0)) AND (x''))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, v0 ORDER BY (+ (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (IFNULL(DISTINCT vt1.c0, vt1.c0)) AND (x''))) ORDER BY (+ (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) BETWEEN (IFNULL(DISTINCT vt1.c0, vt1.c0)) AND (x''))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, v0 ORDER BY (+ (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1893438566');
SELECT SUM(count) FROM (SELECT (('-1893438566') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1893438566');
SELECT SUM(count) FROM (SELECT (('-1893438566') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1893438566');
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(4.85471682E8)))OR(vt1.c0)) AS BLOB)) ORDER BY 0.5488551011809291, ((((vt1.c0) NOTNULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(4.85471682E8)))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY 0.5488551011809291, ((((vt1.c0) NOTNULL)) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(4.85471682E8)))OR(vt1.c0)) AS BLOB)) ORDER BY 0.5488551011809291, ((((vt1.c0) NOTNULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(4.85471682E8)))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY 0.5488551011809291, ((((vt1.c0) NOTNULL)) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(4.85471682E8)))OR(vt1.c0)) AS BLOB)) ORDER BY 0.5488551011809291, ((((vt1.c0) NOTNULL)) ISNULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-742011866') ORDER BY vt1.c0  NULLS FIRST, (~ (NULL)) ASC;
SELECT SUM(count) FROM (SELECT (('-742011866') IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS FIRST, (~ (NULL)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-742011866') ORDER BY vt1.c0  NULLS FIRST, (~ (NULL)) ASC;
SELECT SUM(count) FROM (SELECT (('-742011866') IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS FIRST, (~ (NULL)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-742011866') ORDER BY vt1.c0  NULLS FIRST, (~ (NULL)) ASC;
SELECT ALL * FROM v0, vt0, vt1 WHERE ((((((vt1.c0))=((v0.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((v0.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt1 WHERE ((((((vt1.c0))=((v0.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((v0.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)IS(v0.c0)))||((+ (vt0.c0))))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(v0.c0)))||((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) ISNULL) DESC);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)IS(v0.c0)))||((+ (vt0.c0))))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(v0.c0)))||((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) ISNULL) DESC);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) ORDER BY (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))=(((- (v0.c0))))) ASC, ((LENGTH(v0.c0)) IS TRUE) ASC, (((NOT (vt0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (0xfffffffff87f9787) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))==(((- (v0.c0))))) ASC, ((LENGTH(v0.c0)) IS TRUE) ASC, (((NOT (vt0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (0xfffffffff87f9787) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) ORDER BY (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))=(((- (v0.c0))))) ASC, ((LENGTH(v0.c0)) IS TRUE) ASC, (((NOT (vt0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (0xfffffffff87f9787) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))==(((- (v0.c0))))) ASC, ((LENGTH(v0.c0)) IS TRUE) ASC, (((NOT (vt0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (0xfffffffff87f9787) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0)|(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)|(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0)|(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)|(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0)|(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY CASE WHEN ((0x800df61) NOTNULL) THEN (- (v0.c0)) END DESC, (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((CAST(0X1a93fb9e AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((0x800df61) NOTNULL) THEN (- (v0.c0)) END DESC, (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((CAST(0x1a93fb9e AS BLOB)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY CASE WHEN ((0x800df61) NOTNULL) THEN (- (v0.c0)) END DESC, (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((CAST(0X1a93fb9e AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((0x800df61) NOTNULL) THEN (- (v0.c0)) END DESC, (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((CAST(0x1a93fb9e AS BLOB)))));
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT ALL * FROM v0 WHERE ('-426058847');
SELECT SUM(count) FROM (SELECT (('-426058847') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-426058847');
SELECT SUM(count) FROM (SELECT (('-426058847') IS TRUE)  as count FROM v0);
SELECT * FROM vt1, v0, vt0 WHERE (((vt0.c0 IN (vt0.c0, v0.c0)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((v0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0, v0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((v0.c0)>=(vt0.c0))))));
SELECT * FROM vt1, v0, vt0 WHERE (((vt0.c0 IN (vt0.c0, v0.c0)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((v0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0, v0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((v0.c0)>=(vt0.c0))))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON LIKE(((vt0.c0) ISNULL), ((vt0.c0)%(vt0.c0)), '2') WHERE (CASE '痿Bꈀ?t(' COLLATE RTRIM  WHEN (((vt1.c0))>((vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE '' END) ORDER BY (((((+ (vt1.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR((~ (vt1.c0))))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(1320780606))) AND ((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '痿Bꈀ?t(' COLLATE RTRIM  WHEN (((vt1.c0))>((vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE '' END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON LIKE(((vt0.c0) ISNULL), ((vt0.c0)%(vt0.c0)), '2') ORDER BY (((((+ (vt1.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR((~ (vt1.c0))))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(1320780606))) AND ((NOT (vt1.c0)))) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON LIKE(((vt0.c0) ISNULL), ((vt0.c0)%(vt0.c0)), '2') WHERE (CASE '痿Bꈀ?t(' COLLATE RTRIM  WHEN (((vt1.c0))>((vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE '' END) ORDER BY (((((+ (vt1.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR((~ (vt1.c0))))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(1320780606))) AND ((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '痿Bꈀ?t(' COLLATE RTRIM  WHEN (((vt1.c0))>((vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE '' END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON LIKE(((vt0.c0) ISNULL), ((vt0.c0)%(vt0.c0)), '2') ORDER BY (((((+ (vt1.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR((~ (vt1.c0))))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(1320780606))) AND ((NOT (vt1.c0)))) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON LIKE(((vt0.c0) ISNULL), ((vt0.c0)%(vt0.c0)), '2') WHERE (CASE '痿Bꈀ?t(' COLLATE RTRIM  WHEN (((vt1.c0))>((vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE '' END) ORDER BY (((((+ (vt1.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR((~ (vt1.c0))))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(1320780606))) AND ((NOT (vt1.c0)))) ASC;
SELECT ALL * FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ((+ (vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((UNLIKELY(vt0.c0))AND(vt0.c0))) ORDER BY ((QUOTE('0.5488551011809291')) ISNULL) DESC, '-1898862922' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0))AND(vt0.c0))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((QUOTE('0.5488551011809291')) ISNULL) DESC, '-1898862922' DESC);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((UNLIKELY(vt0.c0))AND(vt0.c0))) ORDER BY ((QUOTE('0.5488551011809291')) ISNULL) DESC, '-1898862922' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0))AND(vt0.c0))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((QUOTE('0.5488551011809291')) ISNULL) DESC, '-1898862922' DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOTNULL)) NOTNULL) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL) WHERE ((((vt0.c0))!=(('>u'))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<>(('>u'))) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOTNULL)) NOTNULL) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOTNULL)) NOTNULL) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL) WHERE ((((vt0.c0))!=(('>u'))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<>(('>u'))) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOTNULL)) NOTNULL) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((((359920214)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((359920214)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((((359920214)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((359920214)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((NULL)AND(vt0.c0)))OR(0X3486e41b)) COLLATE RTRIM, ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)AND(vt0.c0)))OR(0X3486e41b)) COLLATE RTRIM, ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((NULL)AND(vt0.c0)))OR(0X3486e41b)) COLLATE RTRIM, ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)AND(vt0.c0)))OR(0X3486e41b)) COLLATE RTRIM, ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((NULL)AND(vt0.c0)))OR(0X3486e41b)) COLLATE RTRIM, ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1, vt0, v0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(0.949658869195364)) THEN CAST(vt1.c0 AS BLOB) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) THEN v0.c0 WHEN ((0.8437907086175237)/(v0.c0)) THEN ((v0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(0.949658869195364)) THEN CAST(vt1.c0 AS BLOB) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) THEN v0.c0 WHEN ((0.8437907086175237)/(v0.c0)) THEN ((v0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(0.949658869195364)) THEN CAST(vt1.c0 AS BLOB) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) THEN v0.c0 WHEN ((0.8437907086175237)/(v0.c0)) THEN ((v0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(0.949658869195364)) THEN CAST(vt1.c0 AS BLOB) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) THEN v0.c0 WHEN ((0.8437907086175237)/(v0.c0)) THEN ((v0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, v0, vt0 WHERE (vt0.c0) ORDER BY (((v0.c0 IN (v0.c0, vt0.c0)))||(((vt0.c0) NOT NULL))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<((- (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((v0.c0 IN (v0.c0, vt0.c0)))||(((vt0.c0) NOT NULL))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<((- (v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, v0, vt0 WHERE (vt0.c0) ORDER BY (((v0.c0 IN (v0.c0, vt0.c0)))||(((vt0.c0) NOT NULL))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<((- (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((v0.c0 IN (v0.c0, vt0.c0)))||(((vt0.c0) NOT NULL))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<((- (v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0, vt1, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON ((vt1.c0)OR(v0.c0)) COLLATE RTRIM WHERE (((vt1.c0)IS NOT((NOT (-211474333))))) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND ((((0X737f7d0b))=((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)IS NOT((NOT (-211474333))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((vt1.c0)OR(v0.c0)) COLLATE RTRIM ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND ((((0x737f7d0b))=((vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON ((vt1.c0)OR(v0.c0)) COLLATE RTRIM WHERE (((vt1.c0)IS NOT((NOT (-211474333))))) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND ((((0X737f7d0b))=((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)IS NOT((NOT (-211474333))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((vt1.c0)OR(v0.c0)) COLLATE RTRIM ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND ((((0x737f7d0b))=((vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (STRFTIME(v0.c0, v0.c0, v0.c0) COLLATE NOCASE) ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE, ((((v0.c0)/(v0.c0)))GLOB(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(v0.c0, v0.c0, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE, ((((v0.c0)/(v0.c0)))GLOB(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (STRFTIME(v0.c0, v0.c0, v0.c0) COLLATE NOCASE) ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE, ((((v0.c0)/(v0.c0)))GLOB(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(v0.c0, v0.c0, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE, ((((v0.c0)/(v0.c0)))GLOB(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt1.c0 IN ())))>((HEX(DISTINCT vt1.c0))))) ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))>((HEX(DISTINCT vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (v0.c0)) END);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt1.c0 IN ())))>((HEX(DISTINCT vt1.c0))))) ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))>((HEX(DISTINCT vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (v0.c0)) END);
SELECT ALL * FROM vt1 WHERE (json_object(vt1.c0, vt1.c0, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS NUMERIC))) ORDER BY ((((vt1.c0)GLOB(vt1.c0)))IS(CAST(vt1.c0 AS TEXT))), (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))!=((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((0.5548633934139954) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(vt1.c0, vt1.c0, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c0)))IS(CAST(vt1.c0 AS TEXT))), (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))!=((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((0.5548633934139954) NOT NULL))) ASC);
SELECT ALL * FROM vt1 WHERE (json_object(vt1.c0, vt1.c0, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS NUMERIC))) ORDER BY ((((vt1.c0)GLOB(vt1.c0)))IS(CAST(vt1.c0 AS TEXT))), (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))!=((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((0.5548633934139954) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(vt1.c0, vt1.c0, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c0)))IS(CAST(vt1.c0 AS TEXT))), (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))!=((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((0.5548633934139954) NOT NULL))) ASC);
SELECT * FROM v0, vt1 NATURAL JOIN vt0 WHERE ((+ (vt0.c0 COLLATE BINARY))) ORDER BY ((COALESCE(vt1.c0, vt0.c0)) BETWEEN (0.6900221790141894) AND (((vt0.c0)>=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN vt0 ORDER BY ((COALESCE(vt1.c0, vt0.c0)) BETWEEN (0.6900221790141894) AND (((vt0.c0)>=(vt1.c0)))) ASC);
SELECT * FROM v0, vt1 NATURAL JOIN vt0 WHERE ((+ (vt0.c0 COLLATE BINARY))) ORDER BY ((COALESCE(vt1.c0, vt0.c0)) BETWEEN (0.6900221790141894) AND (((vt0.c0)>=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN vt0 ORDER BY ((COALESCE(vt1.c0, vt0.c0)) BETWEEN (0.6900221790141894) AND (((vt0.c0)>=(vt1.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ (0.333290164045299)) COLLATE NOCASE) ORDER BY (((NOT (v0.c0)))*(((0.2087726622819056) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (0.333290164045299)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))*(((0.2087726622819056) IS TRUE))) DESC);
SELECT COUNT(*) FROM v0 WHERE ((+ (0.333290164045299)) COLLATE NOCASE) ORDER BY (((NOT (v0.c0)))*(((0.2087726622819056) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (0.333290164045299)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))*(((0.2087726622819056) IS TRUE))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((MIN(vt0.c0, vt0.c0, v0.c0, '5''', v0.c0, v0.c0)) IS FALSE)) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('淹Y_?!R0o'))))))AND((((vt0.c0))>((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((MIN(vt0.c0, vt0.c0, v0.c0, '5''', v0.c0, v0.c0)) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('淹Y_?!R0o'))))))AND((((vt0.c0))>((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((MIN(vt0.c0, vt0.c0, v0.c0, '5''', v0.c0, v0.c0)) IS FALSE)) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('淹Y_?!R0o'))))))AND((((vt0.c0))>((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((MIN(vt0.c0, vt0.c0, v0.c0, '5''', v0.c0, v0.c0)) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('淹Y_?!R0o'))))))AND((((vt0.c0))>((vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON v0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE WHERE ((+ (vt0.c0)) COLLATE RTRIM) ORDER BY CAST('Nnow%<' AS REAL) DESC  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt1 ON v0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE ORDER BY CAST('Nnow%<' AS REAL) DESC  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON v0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE WHERE ((+ (vt0.c0)) COLLATE RTRIM) ORDER BY CAST('Nnow%<' AS REAL) DESC  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt1 ON v0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE ORDER BY CAST('Nnow%<' AS REAL) DESC  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(TYPEOF(DISTINCT v0.c0) AS REAL) WHERE (((((((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN ()))))OR(((vt0.c0)=(vt0.c0)))))OR(((v0.c0) IS FALSE))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((v0.c0)<>(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN ()))))OR(((vt0.c0)==(vt0.c0)))))OR(((v0.c0) IS FALSE))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(TYPEOF(DISTINCT v0.c0) AS REAL) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((v0.c0)<>(vt0.c0)) END ASC);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(TYPEOF(DISTINCT v0.c0) AS REAL) WHERE (((((((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN ()))))OR(((vt0.c0)=(vt0.c0)))))OR(((v0.c0) IS FALSE))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((v0.c0)<>(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN ()))))OR(((vt0.c0)==(vt0.c0)))))OR(((v0.c0) IS FALSE))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(TYPEOF(DISTINCT v0.c0) AS REAL) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((v0.c0)<>(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((0.06757382415037061)*((((NULL)) BETWEEN ((0.3964617101459069)) AND ((v0.c0)))))) ORDER BY 12684561 DESC;
SELECT SUM(count) FROM (SELECT ((((0.06757382415037061)*((((NULL)) BETWEEN ((0.3964617101459069)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 12684561 DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((0.06757382415037061)*((((NULL)) BETWEEN ((0.3964617101459069)) AND ((v0.c0)))))) ORDER BY 12684561 DESC;
SELECT SUM(count) FROM (SELECT ((((0.06757382415037061)*((((NULL)) BETWEEN ((0.3964617101459069)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 12684561 DESC);
SELECT * FROM v0, vt1 WHERE (((((NOT (vt1.c0))))!=((((((v0.c0)AND(v0.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0))))!=((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((((NOT (vt1.c0))))!=((((((v0.c0)AND(v0.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0))))!=((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM vt1, vt0 NATURAL JOIN v0 WHERE (((CAST(vt0.c0 AS REAL))OR((vt1.c0 IN ())))) ORDER BY ('' IN ()) ASC  NULLS LAST, ((((((v0.c0)OR(vt0.c0)))AND(vt1.c0)))<(CAST(x'' AS REAL)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN v0 ORDER BY ('' IN ()) ASC  NULLS LAST, ((((((v0.c0)OR(vt0.c0)))AND(vt1.c0)))<(CAST(x'' AS REAL))));
SELECT * FROM vt1, vt0 NATURAL JOIN v0 WHERE (((CAST(vt0.c0 AS REAL))OR((vt1.c0 IN ())))) ORDER BY ('' IN ()) ASC  NULLS LAST, ((((((v0.c0)OR(vt0.c0)))AND(vt1.c0)))<(CAST(x'' AS REAL)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN v0 ORDER BY ('' IN ()) ASC  NULLS LAST, ((((((v0.c0)OR(vt0.c0)))AND(vt1.c0)))<(CAST(x'' AS REAL))));
SELECT * FROM vt1 WHERE (('KN' IN ())) ORDER BY (((((((('0.06987462494254526')AND(CAST(vt1.c0 AS BLOB))))AND(((x'') ISNULL))))OR(DATETIME(vt1.c0, 0.33222359854267325, vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))) DESC  NULLS LAST, COALESCE(((vt1.c0)>(vt1.c0)), '662779710')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('KN' IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((((('0.06987462494254526')AND(CAST(vt1.c0 AS BLOB))))AND(((x'') ISNULL))))OR(DATETIME(vt1.c0, 0.33222359854267325, vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))) DESC  NULLS LAST, COALESCE(((vt1.c0)>(vt1.c0)), '662779710')  NULLS FIRST);
SELECT * FROM vt1 WHERE (('KN' IN ())) ORDER BY (((((((('0.06987462494254526')AND(CAST(vt1.c0 AS BLOB))))AND(((x'') ISNULL))))OR(DATETIME(vt1.c0, 0.33222359854267325, vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))) DESC  NULLS LAST, COALESCE(((vt1.c0)>(vt1.c0)), '662779710')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('KN' IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((((('0.06987462494254526')AND(CAST(vt1.c0 AS BLOB))))AND(((x'') ISNULL))))OR(DATETIME(vt1.c0, 0.33222359854267325, vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))) DESC  NULLS LAST, COALESCE(((vt1.c0)>(vt1.c0)), '662779710')  NULLS FIRST);
SELECT * FROM vt1 WHERE (('KN' IN ())) ORDER BY (((((((('0.06987462494254526')AND(CAST(vt1.c0 AS BLOB))))AND(((x'') ISNULL))))OR(DATETIME(vt1.c0, 0.33222359854267325, vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))) DESC  NULLS LAST, COALESCE(((vt1.c0)>(vt1.c0)), '662779710')  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN v0 ON vt1.c0 WHERE ((((NULL))<=((((vt1.c0)IS(vt1.c0)))))) ORDER BY (NOT (((vt1.c0)&(vt1.c0)))) ASC  NULLS FIRST, '-1828144995' ASC;
SELECT SUM(count) FROM (SELECT (((((NULL))<=((((vt1.c0)IS(vt1.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON vt1.c0 ORDER BY (NOT (((vt1.c0)&(vt1.c0)))) ASC  NULLS FIRST, '-1828144995' ASC);
SELECT ALL * FROM vt1 INNER JOIN v0 ON vt1.c0 WHERE ((((NULL))<=((((vt1.c0)IS(vt1.c0)))))) ORDER BY (NOT (((vt1.c0)&(vt1.c0)))) ASC  NULLS FIRST, '-1828144995' ASC;
SELECT SUM(count) FROM (SELECT (((((NULL))<=((((vt1.c0)IS(vt1.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON vt1.c0 ORDER BY (NOT (((vt1.c0)&(vt1.c0)))) ASC  NULLS FIRST, '-1828144995' ASC);
SELECT ALL * FROM vt1 INNER JOIN v0 ON vt1.c0 WHERE ((((NULL))<=((((vt1.c0)IS(vt1.c0)))))) ORDER BY (NOT (((vt1.c0)&(vt1.c0)))) ASC  NULLS FIRST, '-1828144995' ASC;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT)) ORDER BY ((-910554194) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((-910554194) IS TRUE) ASC);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT)) ORDER BY ((-910554194) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((-910554194) IS TRUE) ASC);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT)) ORDER BY ((-910554194) IS TRUE) ASC;
SELECT * FROM vt1, vt0, v0 WHERE (vt1.c0) ORDER BY (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((highlight(vt1.c0, vt1.c0, x'7549', vt1.c0), (- (v0.c0)), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c0 COLLATE NOCASE))) ASC, ((((vt0.c0)>>(vt0.c0))) ISNULL) DESC, (((((vt0.c0))>=((vt0.c0))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((highlight(vt1.c0, vt1.c0, x'7549', vt1.c0), (- (v0.c0)), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c0 COLLATE NOCASE))) ASC, ((((vt0.c0)>>(vt0.c0))) ISNULL) DESC, (((((vt0.c0))>=((vt0.c0))))OR(x''))  NULLS FIRST);
SELECT * FROM vt1, vt0, v0 WHERE (vt1.c0) ORDER BY (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((highlight(vt1.c0, vt1.c0, x'7549', vt1.c0), (- (v0.c0)), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c0 COLLATE NOCASE))) ASC, ((((vt0.c0)>>(vt0.c0))) ISNULL) DESC, (((((vt0.c0))>=((vt0.c0))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((highlight(vt1.c0, vt1.c0, x'7549', vt1.c0), (- (v0.c0)), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c0 COLLATE NOCASE))) ASC, ((((vt0.c0)>>(vt0.c0))) ISNULL) DESC, (((((vt0.c0))>=((vt0.c0))))OR(x''))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)==(vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)=(vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)==(vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)=(vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)==(vt0.c0 COLLATE BINARY)) DESC;
SELECT * FROM vt0, v0 WHERE (((v0.c0)LIKE(((v0.c0)OR(x''))))) ORDER BY ((((v0.c0)<<(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)LIKE(((v0.c0)OR(x''))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)<<(vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((v0.c0)LIKE(((v0.c0)OR(x''))))) ORDER BY ((((v0.c0)<<(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)LIKE(((v0.c0)OR(x''))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)<<(vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM v0 WHERE (GLOB(0.970013767442283 COLLATE RTRIM, v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((GLOB(0.970013767442283 COLLATE RTRIM, v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (GLOB(0.970013767442283 COLLATE RTRIM, v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((GLOB(0.970013767442283 COLLATE RTRIM, v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (vt1.c0 IN ()) WHERE (vt1.c0) ORDER BY '-1190152740' ASC  NULLS LAST, CAST(((1.664259981E9) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (vt1.c0 IN ()) ORDER BY '-1190152740' ASC  NULLS LAST, CAST(((1.664259981E9) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (vt1.c0 IN ()) WHERE (vt1.c0) ORDER BY '-1190152740' ASC  NULLS LAST, CAST(((1.664259981E9) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (vt1.c0 IN ()) ORDER BY '-1190152740' ASC  NULLS LAST, CAST(((1.664259981E9) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (vt1.c0 IN ()) WHERE (vt1.c0) ORDER BY '-1190152740' ASC  NULLS LAST, CAST(((1.664259981E9) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c0)<(vt0.c0)) THEN ((vt0.c0) BETWEEN ('517967260') AND (v0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (v0.c0 IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) END) ORDER BY ((((v0.c0)<=(vt0.c0)))=(((v0.c0)GLOB(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<(vt0.c0)) THEN ((vt0.c0) BETWEEN ('517967260') AND (v0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (v0.c0 IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0)<=(vt0.c0)))=(((v0.c0)GLOB(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c0)<(vt0.c0)) THEN ((vt0.c0) BETWEEN ('517967260') AND (v0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (v0.c0 IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) END) ORDER BY ((((v0.c0)<=(vt0.c0)))=(((v0.c0)GLOB(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<(vt0.c0)) THEN ((vt0.c0) BETWEEN ('517967260') AND (v0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (v0.c0 IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0)<=(vt0.c0)))=(((v0.c0)GLOB(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (NULL);
SELECT * FROM v0 NOT INDEXED, vt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (ROUND(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) ORDER BY ((((((((LTRIM(0xffffffff8ed1a6b6, v0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(vt1.c0)) ASC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (0.6698609408913803)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((ROUND(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((((((LTRIM(0xffffffff8ed1a6b6, v0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(vt1.c0)) ASC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (0.6698609408913803)) AS INTEGER));
SELECT * FROM v0 NOT INDEXED, vt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (ROUND(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) ORDER BY ((((((((LTRIM(0xffffffff8ed1a6b6, v0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(vt1.c0)) ASC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (0.6698609408913803)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((ROUND(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((((((LTRIM(0xffffffff8ed1a6b6, v0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))OR(v0.c0 COLLATE NOCASE)))OR(vt1.c0)) ASC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (0.6698609408913803)) AS INTEGER));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))OR(v0.c0)) WHERE (UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))) ORDER BY (((('')>(vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))OR(v0.c0)) ORDER BY (((('')>(vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))OR(v0.c0)) WHERE (UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))) ORDER BY (((('')>(vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))OR(v0.c0)) ORDER BY (((('')>(vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)||(vt1.c0)))<(((vt1.c0) NOT NULL)))) ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt1.c0)))<(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 END DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)||(vt1.c0)))<(((vt1.c0) NOT NULL)))) ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt1.c0)))<(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 END DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)||(vt1.c0)))<(((vt1.c0) NOT NULL)))) ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 END DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((((v0.c0)LIKE(vt1.c0)))IS NOT((vt0.c0 IN ())))) ORDER BY (- (((vt1.c0) IS FALSE))) ASC  NULLS LAST, ((((vt1.c0))<=((vt0.c0))) IN (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(vt1.c0)))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (- (((vt1.c0) IS FALSE))) ASC  NULLS LAST, ((((vt1.c0))<=((vt0.c0))) IN (vt1.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((((v0.c0)LIKE(vt1.c0)))IS NOT((vt0.c0 IN ())))) ORDER BY (- (((vt1.c0) IS FALSE))) ASC  NULLS LAST, ((((vt1.c0))<=((vt0.c0))) IN (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(vt1.c0)))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (- (((vt1.c0) IS FALSE))) ASC  NULLS LAST, ((((vt1.c0))<=((vt0.c0))) IN (vt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('1711649116');
SELECT SUM(count) FROM (SELECT (('1711649116') IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('1711649116');
SELECT SUM(count) FROM (SELECT (('1711649116') IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('1711649116');
SELECT * FROM v0 WHERE ((((v0.c0)|(v0.c0)) IN ())) ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)|(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)|(v0.c0)) IN ())) ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)|(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 CROSS JOIN vt0 ON ((((((x'320b', vt0.c0, vt0.c0, v0.c0, v0.c0))=(('连U''*', v0.c0, v0.c0, v0.c0, v0.c0))), ((vt0.c0)|(v0.c0)), MAX(v0.c0, vt0.c0, '', vt0.c0)))==((((v0.c0)IS NOT(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST('\ruvb' AS NUMERIC)))) WHERE (((((- (v0.c0)), ((v0.c0)<=(v0.c0)), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR('-嘋2&颒<na')))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, JULIANDAY('989774832', 0.6236853437744732, v0.c0)))<(((v0.c0 IN ()), (+ (vt0.c0)), ((vt0.c0)<<(v0.c0)), ((vt0.c0)||(x'')), vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((- (v0.c0)), ((v0.c0)<=(v0.c0)), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR('-嘋2&颒<na')))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, JULIANDAY('989774832', 0.6236853437744732, v0.c0)))<(((v0.c0 IN ()), (+ (vt0.c0)), ((vt0.c0)<<(v0.c0)), ((vt0.c0)||(x'')), vt0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((x'320b', vt0.c0, vt0.c0, v0.c0, v0.c0))==(('连U''*', v0.c0, v0.c0, v0.c0, v0.c0))), ((vt0.c0)|(v0.c0)), MAX(v0.c0, vt0.c0, '', vt0.c0)))=((((v0.c0)IS NOT(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST('\ruvb' AS NUMERIC)))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((((((x'320b', vt0.c0, vt0.c0, v0.c0, v0.c0))=(('连U''*', v0.c0, v0.c0, v0.c0, v0.c0))), ((vt0.c0)|(v0.c0)), MAX(v0.c0, vt0.c0, '', vt0.c0)))==((((v0.c0)IS NOT(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST('\ruvb' AS NUMERIC)))) WHERE (((((- (v0.c0)), ((v0.c0)<=(v0.c0)), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR('-嘋2&颒<na')))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, JULIANDAY('989774832', 0.6236853437744732, v0.c0)))<(((v0.c0 IN ()), (+ (vt0.c0)), ((vt0.c0)<<(v0.c0)), ((vt0.c0)||(x'')), vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((- (v0.c0)), ((v0.c0)<=(v0.c0)), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR('-嘋2&颒<na')))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, JULIANDAY('989774832', 0.6236853437744732, v0.c0)))<(((v0.c0 IN ()), (+ (vt0.c0)), ((vt0.c0)<<(v0.c0)), ((vt0.c0)||(x'')), vt0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((x'320b', vt0.c0, vt0.c0, v0.c0, v0.c0))==(('连U''*', v0.c0, v0.c0, v0.c0, v0.c0))), ((vt0.c0)|(v0.c0)), MAX(v0.c0, vt0.c0, '', vt0.c0)))=((((v0.c0)IS NOT(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST('\ruvb' AS NUMERIC)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'');
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((v0.c0))>=((((0.888840861608747)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>=((((0.888840861608747)>>(vt0.c0)))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((v0.c0))>=((((0.888840861608747)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>=((((0.888840861608747)>>(vt0.c0)))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON 0.8704472599311653 INNER JOIN v0 ON TYPEOF(0X2cd95dfb) WHERE (((((TIME(vt1.c0, v0.c0, vt1.c0, v0.c0, NULL, v0.c0, v0.c0))OR(UNICODE(v0.c0))))AND(((v0.c0) NOT NULL)))) ORDER BY ((NULL)IS(((vt1.c0)OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((TIME(vt1.c0, v0.c0, vt1.c0, v0.c0, NULL, v0.c0, v0.c0))OR(UNICODE(v0.c0))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON 0.8704472599311653 INNER JOIN v0 ON TYPEOF(0X2cd95dfb) ORDER BY ((NULL)IS(((vt1.c0)OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON 0.8704472599311653 INNER JOIN v0 ON TYPEOF(0X2cd95dfb) WHERE (((((TIME(vt1.c0, v0.c0, vt1.c0, v0.c0, NULL, v0.c0, v0.c0))OR(UNICODE(v0.c0))))AND(((v0.c0) NOT NULL)))) ORDER BY ((NULL)IS(((vt1.c0)OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((TIME(vt1.c0, v0.c0, vt1.c0, v0.c0, NULL, v0.c0, v0.c0))OR(UNICODE(v0.c0))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON 0.8704472599311653 INNER JOIN v0 ON TYPEOF(0X2cd95dfb) ORDER BY ((NULL)IS(((vt1.c0)OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON 0.8704472599311653 INNER JOIN v0 ON TYPEOF(0X2cd95dfb) WHERE (((((TIME(vt1.c0, v0.c0, vt1.c0, v0.c0, NULL, v0.c0, v0.c0))OR(UNICODE(v0.c0))))AND(((v0.c0) NOT NULL)))) ORDER BY ((NULL)IS(((vt1.c0)OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) IS TRUE)) ORDER BY (CAST(vt1.c0 AS REAL) IN (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN (vt1.c0)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) IS TRUE)) ORDER BY (CAST(vt1.c0 AS REAL) IN (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN (vt1.c0)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) IS TRUE)) ORDER BY (CAST(vt1.c0 AS REAL) IN (vt1.c0)) DESC  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN vt1 ON ((((v0.c0)IS NOT(v0.c0))) BETWEEN ((NOT (vt1.c0))) AND ((v0.c0 IN (x'')))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((((v0.c0)IS NOT(v0.c0))) BETWEEN ((NOT (vt1.c0))) AND ((v0.c0 IN (x'')))));
SELECT * FROM v0 FULL OUTER JOIN vt1 ON ((((v0.c0)IS NOT(v0.c0))) BETWEEN ((NOT (vt1.c0))) AND ((v0.c0 IN (x'')))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((((v0.c0)IS NOT(v0.c0))) BETWEEN ((NOT (vt1.c0))) AND ((v0.c0 IN (x'')))));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0)<=(vt0.c0)) AS REAL) WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY NULLIF(DISTINCT v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))  NULLS LAST, UPPER(((vt0.c0)<=(v0.c0))) ASC  NULLS FIRST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)<=(vt0.c0)) WHEN '꽩7*q89' THEN ((vt0.c0)>=(v0.c0)) WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN -1437334913 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END THEN ((((vt1.c0)AND(x'f63a')))OR(v0.c0)) WHEN x'0f86' THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((v0.c0)-(NULL)) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0)<=(vt0.c0)) AS REAL) ORDER BY NULLIF(DISTINCT v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))  NULLS LAST, UPPER(((vt0.c0)<=(v0.c0))) ASC  NULLS FIRST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)<=(vt0.c0)) WHEN '꽩7*q89' THEN ((vt0.c0)>=(v0.c0)) WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN -1437334913 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END THEN ((((vt1.c0)AND(x'f63a')))OR(v0.c0)) WHEN x'0f86' THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((v0.c0)-(NULL)) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0)<=(vt0.c0)) AS REAL) WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY NULLIF(DISTINCT v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))  NULLS LAST, UPPER(((vt0.c0)<=(v0.c0))) ASC  NULLS FIRST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)<=(vt0.c0)) WHEN '꽩7*q89' THEN ((vt0.c0)>=(v0.c0)) WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN -1437334913 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END THEN ((((vt1.c0)AND(x'f63a')))OR(v0.c0)) WHEN x'0f86' THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((v0.c0)-(NULL)) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0)<=(vt0.c0)) AS REAL) ORDER BY NULLIF(DISTINCT v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))  NULLS LAST, UPPER(((vt0.c0)<=(v0.c0))) ASC  NULLS FIRST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)<=(vt0.c0)) WHEN '꽩7*q89' THEN ((vt0.c0)>=(v0.c0)) WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN -1437334913 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END THEN ((((vt1.c0)AND(x'f63a')))OR(v0.c0)) WHEN x'0f86' THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((v0.c0)-(NULL)) THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST('2013563256' COLLATE NOCASE AS REAL)) ORDER BY ((CASE WHEN v0.c0 THEN 'XFdf^E' ELSE v0.c0 END) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('2013563256' COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CASE WHEN v0.c0 THEN 'XFdf^E' ELSE v0.c0 END) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST('2013563256' COLLATE NOCASE AS REAL)) ORDER BY ((CASE WHEN v0.c0 THEN 'XFdf^E' ELSE v0.c0 END) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('2013563256' COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CASE WHEN v0.c0 THEN 'XFdf^E' ELSE v0.c0 END) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))) COLLATE NOCASE) ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))<(((v0.c0)>(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))<(((v0.c0)>(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))) COLLATE NOCASE) ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))<(((v0.c0)>(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))<(((v0.c0)>(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE ((((v0.c0, NULL, v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END, (~ (v0.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) IS FALSE), CASE 0X8fc4bff  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END, 0.8519888928576822))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, NULL, v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END, (~ (v0.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) IS FALSE), CASE 0x8fc4bff  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END, 0.8519888928576822)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((((v0.c0, NULL, v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END, (~ (v0.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) IS FALSE), CASE 0X8fc4bff  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END, 0.8519888928576822))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, NULL, v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END, (~ (v0.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) IS FALSE), CASE 0x8fc4bff  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END, 0.8519888928576822)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM vt0 WHERE (LIKE(json_array_length(vt0.c0), '-1703587712', 'O')) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(LIKELIHOOD(vt0.c0, 0.9538645292935196))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(json_array_length(vt0.c0), '-1703587712', 'O')) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(LIKELIHOOD(vt0.c0, 0.9538645292935196))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LIKE(json_array_length(vt0.c0), '-1703587712', 'O')) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(LIKELIHOOD(vt0.c0, 0.9538645292935196))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(json_array_length(vt0.c0), '-1703587712', 'O')) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(LIKELIHOOD(vt0.c0, 0.9538645292935196))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ('1977763886') ORDER BY (((vt1.c0)<>(vt1.c0)) IN (vt1.c0, (vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1977763886') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)!=(vt1.c0)) IN (vt1.c0, (vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ('1977763886') ORDER BY (((vt1.c0)<>(vt1.c0)) IN (vt1.c0, (vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1977763886') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)!=(vt1.c0)) IN (vt1.c0, (vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ('1977763886') ORDER BY (((vt1.c0)<>(vt1.c0)) IN (vt1.c0, (vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((- (NULL)), vt0.c0, TYPEOF(DISTINCT vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((- (NULL)), vt0.c0, TYPEOF(DISTINCT vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((- (NULL)), vt0.c0, TYPEOF(DISTINCT vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((- (NULL)), vt0.c0, TYPEOF(DISTINCT vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((- (NULL)), vt0.c0, TYPEOF(DISTINCT vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<>((vt0.c0)))))));
SELECT ALL * FROM vt0, v0 WHERE ((- (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((- (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON (((((- (v0.c0)))OR(((vt1.c0)IS NOT(vt0.c0)))))OR(vt0.c0)) INNER JOIN vt0 ON ((((((((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(v0.c0)))AND('\r睥W^hE㥤Z')))) WHERE (((vt1.c0 COLLATE BINARY)-('\r5M[')));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)-('\r5M['))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((((- (v0.c0)))OR(((vt1.c0)IS NOT(vt0.c0)))))OR(vt0.c0)) INNER JOIN vt0 ON ((((((((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(v0.c0)))AND('\r睥W^hE㥤Z')))));
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON (((((- (v0.c0)))OR(((vt1.c0)IS NOT(vt0.c0)))))OR(vt0.c0)) INNER JOIN vt0 ON ((((((((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(v0.c0)))AND('\r睥W^hE㥤Z')))) WHERE (((vt1.c0 COLLATE BINARY)-('\r5M[')));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)-('\r5M['))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((((- (v0.c0)))OR(((vt1.c0)IS NOT(vt0.c0)))))OR(vt0.c0)) INNER JOIN vt0 ON ((((((((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(v0.c0)))AND('\r睥W^hE㥤Z')))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(x''))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (x''))) ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (- ((vt1.c0 IN ())))  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(x''))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (x''))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (- ((vt1.c0 IN ())))  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(x''))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (x''))) ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (- ((vt1.c0 IN ())))  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(x''))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (x''))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (- ((vt1.c0 IN ())))  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(x''))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (x''))) ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (- ((vt1.c0 IN ())))  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0, vt1 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((vt1.c0) NOT NULL) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) END) ORDER BY LOWER(DISTINCT ((vt1.c0)<<(x''))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOTNULL)  WHEN ((vt1.c0) NOT NULL) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY LOWER(DISTINCT ((vt1.c0)<<(x''))) ASC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0, vt1 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((vt1.c0) NOT NULL) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) END) ORDER BY LOWER(DISTINCT ((vt1.c0)<<(x''))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOTNULL)  WHEN ((vt1.c0) NOT NULL) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY LOWER(DISTINCT ((vt1.c0)<<(x''))) ASC);
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (']愲')) THEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (']愲')) THEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (']愲')) THEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (']愲')) THEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE '1003480502' END) NOT BETWEEN (CAST(NULL AS REAL)) AND (IFNULL(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE '1003480502' END) NOT BETWEEN (CAST(NULL AS REAL)) AND (IFNULL(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE '1003480502' END) NOT BETWEEN (CAST(NULL AS REAL)) AND (IFNULL(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE '1003480502' END) NOT BETWEEN (CAST(NULL AS REAL)) AND (IFNULL(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) BETWEEN (vt0.c0) AND (0.8596429512939343)) COLLATE RTRIM) ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (vt0.c0) AND (0.8596429512939343)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((v0.c0) BETWEEN (vt0.c0) AND (0.8596429512939343)) COLLATE RTRIM) ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (vt0.c0) AND (0.8596429512939343)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, vt1, v0 WHERE (((((((((((v0.c0)-(v0.c0)))AND((+ (v0.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(-9223372036854775808)))OR(v0.c0)))))AND(((NULL)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)-(v0.c0)))AND((+ (v0.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(-9223372036854775808)))OR(v0.c0)))))AND(((NULL)>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE (((((((((((v0.c0)-(v0.c0)))AND((+ (v0.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(-9223372036854775808)))OR(v0.c0)))))AND(((NULL)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)-(v0.c0)))AND((+ (v0.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(-9223372036854775808)))OR(v0.c0)))))AND(((NULL)>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM v0 WHERE (((QUOTE(v0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((QUOTE(v0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((QUOTE(v0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((QUOTE(v0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL)) ORDER BY (+ (((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((((((((LOWER(DISTINCT v0.c0))AND(-1869347252)))AND(CAST(v0.c0 AS REAL))))OR(CASE 0.9186753670511829  WHEN v0.c0 THEN v0.c0 END)))OR((+ (v0.c0)))))AND((NOT (NULL)))))AND(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (+ (((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((((((((LOWER(DISTINCT v0.c0))AND(-1869347252)))AND(CAST(v0.c0 AS REAL))))OR(CASE 0.9186753670511829  WHEN v0.c0 THEN v0.c0 END)))OR((+ (v0.c0)))))AND((NOT (NULL)))))AND(CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL)) ORDER BY (+ (((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((((((((LOWER(DISTINCT v0.c0))AND(-1869347252)))AND(CAST(v0.c0 AS REAL))))OR(CASE 0.9186753670511829  WHEN v0.c0 THEN v0.c0 END)))OR((+ (v0.c0)))))AND((NOT (NULL)))))AND(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (+ (((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((((((((LOWER(DISTINCT v0.c0))AND(-1869347252)))AND(CAST(v0.c0 AS REAL))))OR(CASE 0.9186753670511829  WHEN v0.c0 THEN v0.c0 END)))OR((+ (v0.c0)))))AND((NOT (NULL)))))AND(CAST(v0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))>((vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))>((vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))>((vt0.c0))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)OR(v0.c0)) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((NOT ((+ (v0.c0))))) ORDER BY vt0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, LTRIM(NULL, v0.c0), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND ((v0.c0 COLLATE RTRIM, ((x'') BETWEEN (vt0.c0) AND (v0.c0)), (((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)OR(v0.c0)) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ORDER BY vt0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, LTRIM(NULL, v0.c0), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND ((v0.c0 COLLATE RTRIM, ((x'') BETWEEN (vt0.c0) AND (v0.c0)), (((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)OR(v0.c0)) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((NOT ((+ (v0.c0))))) ORDER BY vt0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, LTRIM(NULL, v0.c0), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND ((v0.c0 COLLATE RTRIM, ((x'') BETWEEN (vt0.c0) AND (v0.c0)), (((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)OR(v0.c0)) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ORDER BY vt0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, LTRIM(NULL, v0.c0), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) AND ((v0.c0 COLLATE RTRIM, ((x'') BETWEEN (vt0.c0) AND (v0.c0)), (((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((v0.c0 IN ()))<(((((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<(((((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((v0.c0 IN ()))<(((((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<(((((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0 WHERE ((((('K0Oh')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('K0Oh')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((('K0Oh')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('K0Oh')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((('378686356')OR(LOWER(v0.c0))))AND(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('378686356')OR(LOWER(v0.c0))))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((('378686356')OR(LOWER(v0.c0))))AND(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('378686356')OR(LOWER(v0.c0))))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)<=(vt0.c0)))LIKE(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt1 ON (+ (CAST('177828961' AS TEXT))) WHERE (((rtreenode(vt0.c0, v0.c0)) NOTNULL)) ORDER BY 'xfdf^e' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(vt0.c0, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)<=(vt0.c0)))LIKE(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt1 ON (+ (CAST('177828961' AS TEXT))) ORDER BY 'xfdf^e' DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)<=(vt0.c0)))LIKE(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt1 ON (+ (CAST('177828961' AS TEXT))) WHERE (((rtreenode(vt0.c0, v0.c0)) NOTNULL)) ORDER BY 'xfdf^e' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(vt0.c0, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)<=(vt0.c0)))LIKE(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt1 ON (+ (CAST('177828961' AS TEXT))) ORDER BY 'xfdf^e' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (UNICODE(v0.c0)))) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (0.01169524749616857) AND (v0.c0)))) AND ((((v0.c0) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (UNICODE(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (0.01169524749616857) AND (v0.c0)))) AND ((((v0.c0) IS TRUE)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (UNICODE(v0.c0)))) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (0.01169524749616857) AND (v0.c0)))) AND ((((v0.c0) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (UNICODE(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (0.01169524749616857) AND (v0.c0)))) AND ((((v0.c0) IS TRUE)))) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE ((- (((v0.c0)==(vt1.c0))))) ORDER BY CASE '-331519203'  WHEN (((v0.c0))<=((NULL))) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)=(vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE '-331519203'  WHEN (((v0.c0))<=((NULL))) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((- (((v0.c0)==(vt1.c0))))) ORDER BY CASE '-331519203'  WHEN (((v0.c0))<=((NULL))) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)=(vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE '-331519203'  WHEN (((v0.c0))<=((NULL))) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (0.005578584685345889) ORDER BY CAST(CHAR(vt1.c0) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.005578584685345889) IS TRUE)  as count FROM vt1 ORDER BY CAST(CHAR(vt1.c0) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (0.005578584685345889) ORDER BY CAST(CHAR(vt1.c0) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.005578584685345889) IS TRUE)  as count FROM vt1 ORDER BY CAST(CHAR(vt1.c0) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (0.005578584685345889) ORDER BY CAST(CHAR(vt1.c0) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS LAST, '2133512939' ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS LAST, '2133512939' ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS LAST, '2133512939' ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS LAST, '2133512939' ASC);
SELECT * FROM vt0, v0 CROSS JOIN vt1 ON ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (vt0.c0) ORDER BY vt1.c0 ASC, (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))>=(((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) ORDER BY vt1.c0 ASC, (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))>=(((~ (vt1.c0))))));
SELECT * FROM vt0, v0 CROSS JOIN vt1 ON ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (vt0.c0) ORDER BY vt1.c0 ASC, (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))>=(((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) ORDER BY vt1.c0 ASC, (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))>=(((~ (vt1.c0))))));
SELECT * FROM v0, vt1 NATURAL JOIN vt0 WHERE (0.3390316618796948) ORDER BY ((((((NULL)LIKE(1912474810)))OR(CAST(v0.c0 AS BLOB))))OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((0.3390316618796948) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN vt0 ORDER BY ((((((NULL)LIKE(1912474810)))OR(CAST(v0.c0 AS BLOB))))OR(CAST(vt1.c0 AS REAL))));
SELECT * FROM v0, vt1 NATURAL JOIN vt0 WHERE (0.3390316618796948) ORDER BY ((((((NULL)LIKE(1912474810)))OR(CAST(v0.c0 AS BLOB))))OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((0.3390316618796948) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN vt0 ORDER BY ((((((NULL)LIKE(1912474810)))OR(CAST(v0.c0 AS BLOB))))OR(CAST(vt1.c0 AS REAL))));
SELECT * FROM v0, vt1, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), CASE vt0.c0  WHEN 0.42044148845955254 THEN vt1.c0 END, ((vt0.c0) IS FALSE), vt1.c0, ((((v0.c0)AND(x'407e')))AND(vt1.c0)))) AND ((CAST(v0.c0 AS TEXT), ((v0.c0)|(vt1.c0)), ((((vt1.c0)AND(v0.c0)))AND(vt0.c0)), (vt1.c0 IN ()), (('1110213210') NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), CASE vt0.c0  WHEN 0.42044148845955254 THEN vt1.c0 END, ((vt0.c0) IS FALSE), vt1.c0, ((((v0.c0)AND(x'407e')))AND(vt1.c0)))) AND ((CAST(v0.c0 AS TEXT), ((v0.c0)|(vt1.c0)), ((((vt1.c0)AND(v0.c0)))AND(vt0.c0)), (vt1.c0 IN ()), (('1110213210') NOTNULL))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), CASE vt0.c0  WHEN 0.42044148845955254 THEN vt1.c0 END, ((vt0.c0) IS FALSE), vt1.c0, ((((v0.c0)AND(x'407e')))AND(vt1.c0)))) AND ((CAST(v0.c0 AS TEXT), ((v0.c0)|(vt1.c0)), ((((vt1.c0)AND(v0.c0)))AND(vt0.c0)), (vt1.c0 IN ()), (('1110213210') NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), CASE vt0.c0  WHEN 0.42044148845955254 THEN vt1.c0 END, ((vt0.c0) IS FALSE), vt1.c0, ((((v0.c0)AND(x'407e')))AND(vt1.c0)))) AND ((CAST(v0.c0 AS TEXT), ((v0.c0)|(vt1.c0)), ((((vt1.c0)AND(v0.c0)))AND(vt0.c0)), (vt1.c0 IN ()), (('1110213210') NOTNULL))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY json(vt1.c0 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY json(vt1.c0 COLLATE NOCASE)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY json(vt1.c0 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY json(vt1.c0 COLLATE NOCASE)  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (((vt1.c0)<=(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((vt1.c0)<=(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CHAR(0.6817242195298422, vt0.c0, v0.c0) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN CHAR(0.6817242195298422, vt0.c0, v0.c0) ELSE v0.c0 END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CHAR(0.6817242195298422, vt0.c0, v0.c0) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN CHAR(0.6817242195298422, vt0.c0, v0.c0) ELSE v0.c0 END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON json(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) WHERE ((- (vt1.c0)) COLLATE NOCASE) ORDER BY ((((v0.c0)=(vt1.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON json(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) ORDER BY ((((v0.c0)=(vt1.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON json(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) WHERE ((- (vt1.c0)) COLLATE NOCASE) ORDER BY ((((v0.c0)=(vt1.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON json(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) ORDER BY ((((v0.c0)=(vt1.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (((vt1.c0) NOT NULL))));
SELECT * FROM vt0, v0 WHERE (((CAST(x'33e6' AS INTEGER)) NOT BETWEEN ((+ (v0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'33e6' AS INTEGER)) NOT BETWEEN ((+ (v0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(x'33e6' AS INTEGER)) NOT BETWEEN ((+ (v0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'33e6' AS INTEGER)) NOT BETWEEN ((+ (v0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt1, vt0 FULL OUTER JOIN v0 ON (- (((vt0.c0)>>(vt1.c0)))) WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((vt0.c0 IN ())))) ORDER BY ((((((((((((CAST(v0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.08892224906921686 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(((v0.c0)&(v0.c0)))))AND((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN v0 ON (- (((vt0.c0)>>(vt1.c0)))) ORDER BY ((((((((((((CAST(v0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.08892224906921686 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(((v0.c0)&(v0.c0)))))AND((vt1.c0 IN ()))));
SELECT * FROM vt1, vt0 FULL OUTER JOIN v0 ON (- (((vt0.c0)>>(vt1.c0)))) WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((vt0.c0 IN ())))) ORDER BY ((((((((((((CAST(v0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.08892224906921686 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(((v0.c0)&(v0.c0)))))AND((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN v0 ON (- (((vt0.c0)>>(vt1.c0)))) ORDER BY ((((((((((((CAST(v0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.08892224906921686 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(((v0.c0)&(v0.c0)))))AND((vt1.c0 IN ()))));
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LIKE(v0.c0, 150670553, '\r') THEN ((v0.c0)AND(v0.c0)) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('AZhvcb4p')) THEN (v0.c0 IN ()) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE 0.32675705682058265 END DESC, ((((v0.c0)||(v0.c0)))IS NOT(TRIM(DISTINCT v0.c0))), ((((v0.c0)>>(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LIKE(v0.c0, 150670553, '\r') THEN ((v0.c0)AND(v0.c0)) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('AZhvcb4p')) THEN (v0.c0 IN ()) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE 0.32675705682058265 END DESC, ((((v0.c0)||(v0.c0)))IS NOT(TRIM(DISTINCT v0.c0))), ((((v0.c0)>>(v0.c0))) ISNULL) ASC);
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LIKE(v0.c0, 150670553, '\r') THEN ((v0.c0)AND(v0.c0)) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('AZhvcb4p')) THEN (v0.c0 IN ()) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE 0.32675705682058265 END DESC, ((((v0.c0)||(v0.c0)))IS NOT(TRIM(DISTINCT v0.c0))), ((((v0.c0)>>(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LIKE(v0.c0, 150670553, '\r') THEN ((v0.c0)AND(v0.c0)) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('AZhvcb4p')) THEN (v0.c0 IN ()) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE 0.32675705682058265 END DESC, ((((v0.c0)||(v0.c0)))IS NOT(TRIM(DISTINCT v0.c0))), ((((v0.c0)>>(v0.c0))) ISNULL) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.30548014419365177) AND (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (0.30548014419365177) AND (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.30548014419365177) AND (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (0.30548014419365177) AND (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.30548014419365177) AND (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)>(vt1.c0))))) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)>(vt1.c0))))) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)>(vt1.c0))))) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON RTRIM((vt1.c0 IN ())) WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON RTRIM((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON RTRIM((vt1.c0 IN ())) WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON RTRIM((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON RTRIM((vt1.c0 IN ())) WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END AS TEXT));
SELECT ALL * FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_USED((vt1.c0 IN ()))) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_USED((vt1.c0 IN ()))) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_USED((vt1.c0 IN ()))) ORDER BY (vt1.c0 IN ());
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((v0.c0 IN (v0.c0))))) ORDER BY (((0xa7d1ca9) IS TRUE) IN ()), ((((vt0.c0)OR(vt0.c0)))IS(((vt0.c0)IS NOT(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((0xa7d1ca9) IS TRUE) IN ()), ((((vt0.c0)OR(vt0.c0)))IS(((vt0.c0)IS NOT(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((v0.c0 IN (v0.c0))))) ORDER BY (((0xa7d1ca9) IS TRUE) IN ()), ((((vt0.c0)OR(vt0.c0)))IS(((vt0.c0)IS NOT(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((0xa7d1ca9) IS TRUE) IN ()), ((((vt0.c0)OR(vt0.c0)))IS(((vt0.c0)IS NOT(vt0.c0)))) ASC);
SELECT * FROM v0, vt1 CROSS JOIN vt0 ON CAST(vt0.c0 AS REAL) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT NULL) WHEN (((vt0.c0))=((vt1.c0))) THEN v0.c0 COLLATE BINARY WHEN CAST(v0.c0 AS INTEGER) THEN (((vt1.c0))<((x'5ea1'))) ELSE CASE vt0.c0  WHEN v0.c0 THEN '-989294783' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END) ORDER BY ((+ (v0.c0)) IN (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT NULL) WHEN (((vt0.c0))==((vt1.c0))) THEN v0.c0 COLLATE BINARY WHEN CAST(v0.c0 AS INTEGER) THEN (((vt1.c0))<((x'5ea1'))) ELSE CASE vt0.c0  WHEN v0.c0 THEN '-989294783' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON CAST(vt0.c0 AS REAL) ORDER BY ((+ (v0.c0)) IN (vt1.c0)) ASC);
SELECT * FROM v0, vt1 CROSS JOIN vt0 ON CAST(vt0.c0 AS REAL) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT NULL) WHEN (((vt0.c0))=((vt1.c0))) THEN v0.c0 COLLATE BINARY WHEN CAST(v0.c0 AS INTEGER) THEN (((vt1.c0))<((x'5ea1'))) ELSE CASE vt0.c0  WHEN v0.c0 THEN '-989294783' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END) ORDER BY ((+ (v0.c0)) IN (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT NULL) WHEN (((vt0.c0))==((vt1.c0))) THEN v0.c0 COLLATE BINARY WHEN CAST(v0.c0 AS INTEGER) THEN (((vt1.c0))<((x'5ea1'))) ELSE CASE vt0.c0  WHEN v0.c0 THEN '-989294783' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON CAST(vt0.c0 AS REAL) ORDER BY ((+ (v0.c0)) IN (vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((vt1.c0 IN ()))!=('-983726885')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN ()))<>('-983726885')) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((vt1.c0 IN ()))!=('-983726885')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN ()))<>('-983726885')) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((vt1.c0 IN ()))!=('-983726885')) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0))&(((vt0.c0)OR(vt0.c0)))), ((((CASE '0.30548014419365177'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.2087726622819056 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0))&(((vt0.c0)OR(vt0.c0)))), ((((CASE '0.30548014419365177'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.2087726622819056 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0))&(((vt0.c0)OR(vt0.c0)))), ((((CASE '0.30548014419365177'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.2087726622819056 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0))&(((vt0.c0)OR(vt0.c0)))), ((((CASE '0.30548014419365177'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.2087726622819056 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0))&(((vt0.c0)OR(vt0.c0)))), ((((CASE '0.30548014419365177'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.2087726622819056 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))) DESC;
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((x'')) AND ((((vt1.c0) NOT BETWEEN ('-1677885663') AND (vt1.c0)))))) ORDER BY (('0.5658619266917992')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((x'')) AND ((((vt1.c0) NOT BETWEEN ('-1677885663') AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('0.5658619266917992')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC  NULLS FIRST, vt1.c0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((x'')) AND ((((vt1.c0) NOT BETWEEN ('-1677885663') AND (vt1.c0)))))) ORDER BY (('0.5658619266917992')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((x'')) AND ((((vt1.c0) NOT BETWEEN ('-1677885663') AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('0.5658619266917992')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC  NULLS FIRST, vt1.c0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((x'')) AND ((((vt1.c0) NOT BETWEEN ('-1677885663') AND (vt1.c0)))))) ORDER BY (('0.5658619266917992')OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC  NULLS FIRST, vt1.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)/(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)/(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)/(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN (v0.c0)) END) ORDER BY v0.c0 DESC  NULLS LAST, (((NOT (v0.c0)))&(((v0.c0)&(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST, (((NOT (v0.c0)))&(((v0.c0)&(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN (v0.c0)) END) ORDER BY v0.c0 DESC  NULLS LAST, (((NOT (v0.c0)))&(((v0.c0)&(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST, (((NOT (v0.c0)))&(((v0.c0)&(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('yJ^')) THEN ((((((((NULL)AND(vt0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(vt0.c0)) ELSE ((v0.c0)>>(vt0.c0)) END) ORDER BY (- ((+ (vt1.c0)))) ASC, ((((((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt1.c0 AS TEXT))))OR((v0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))AND(x'f919')))OR((vt1.c0 IN ()))))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('yJ^')) THEN ((((((((NULL)AND(vt0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(vt0.c0)) ELSE ((v0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (- ((+ (vt1.c0)))) ASC, ((((((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt1.c0 AS TEXT))))OR((v0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))AND(x'f919')))OR((vt1.c0 IN ()))))OR(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('yJ^')) THEN ((((((((NULL)AND(vt0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(vt0.c0)) ELSE ((v0.c0)>>(vt0.c0)) END) ORDER BY (- ((+ (vt1.c0)))) ASC, ((((((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt1.c0 AS TEXT))))OR((v0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))AND(x'f919')))OR((vt1.c0 IN ()))))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('yJ^')) THEN ((((((((NULL)AND(vt0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(vt0.c0)) ELSE ((v0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (- ((+ (vt1.c0)))) ASC, ((((((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt1.c0 AS TEXT))))OR((v0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))AND(x'f919')))OR((vt1.c0 IN ()))))OR(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (-1756846176) ORDER BY CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0)GLOB(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1756846176) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0)GLOB(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (-1756846176) ORDER BY CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0)GLOB(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1756846176) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0)GLOB(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((+ (v0.c0)))LIKE((((vt1.c0))==((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))LIKE((((vt1.c0))==((v0.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((+ (v0.c0)))LIKE((((vt1.c0))==((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))LIKE((((vt1.c0))==((v0.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM v0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)>>(vt1.c0))))) ORDER BY TRIM(DISTINCT (vt1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY TRIM(DISTINCT (vt1.c0 IN ()))  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)>>(vt1.c0))))) ORDER BY TRIM(DISTINCT (vt1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY TRIM(DISTINCT (vt1.c0 IN ()))  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)>>(vt1.c0))))) ORDER BY TRIM(DISTINCT (vt1.c0 IN ()))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (0.19192798213563056);
SELECT SUM(count) FROM (SELECT ALL ((0.19192798213563056) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.19192798213563056);
SELECT SUM(count) FROM (SELECT ALL ((0.19192798213563056) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.19192798213563056);
SELECT * FROM vt1, v0, vt0 WHERE (UPPER(vt0.c0) COLLATE NOCASE) ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(vt0.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt1.c0) IS FALSE))))OR((x'2d20' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(vt0.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt1.c0) IS FALSE))))OR((x'2d20' IN ()))));
SELECT * FROM vt1, v0, vt0 WHERE (UPPER(vt0.c0) COLLATE NOCASE) ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(vt0.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt1.c0) IS FALSE))))OR((x'2d20' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(vt0.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt1.c0) IS FALSE))))OR((x'2d20' IN ()))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(x'7ca5')))AND(vt1.c0)))OR(vt1.c0)))AND(NULL)) END) ORDER BY CASE (((vt1.c0))>=((vt1.c0)))  WHEN ((NULL)OR(vt1.c0)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(x'7ca5')))AND(vt1.c0)))OR(vt1.c0)))AND(NULL)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE (((vt1.c0))>=((vt1.c0)))  WHEN ((NULL)OR(vt1.c0)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(x'7ca5')))AND(vt1.c0)))OR(vt1.c0)))AND(NULL)) END) ORDER BY CASE (((vt1.c0))>=((vt1.c0)))  WHEN ((NULL)OR(vt1.c0)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(x'7ca5')))AND(vt1.c0)))OR(vt1.c0)))AND(NULL)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE (((vt1.c0))>=((vt1.c0)))  WHEN ((NULL)OR(vt1.c0)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(x'7ca5')))AND(vt1.c0)))OR(vt1.c0)))AND(NULL)) END) ORDER BY CASE (((vt1.c0))>=((vt1.c0)))  WHEN ((NULL)OR(vt1.c0)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (0.08685927595862197);
SELECT SUM(count) FROM (SELECT ((0.08685927595862197) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.08685927595862197);
SELECT SUM(count) FROM (SELECT ((0.08685927595862197) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.08685927595862197);
SELECT ALL COUNT(*) FROM vt1, v0 INNER JOIN vt0 ON (('2143709627') NOTNULL) WHERE (CASE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN '?ṲXW' END  WHEN '-1779392509' COLLATE NOCASE THEN LOWER(vt0.c0) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN '?ṲXW' END  WHEN '-1779392509' COLLATE NOCASE THEN LOWER(vt0.c0) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1, v0 INNER JOIN vt0 ON (('2143709627') NOTNULL) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 INNER JOIN vt0 ON (('2143709627') NOTNULL) WHERE (CASE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN '?ṲXW' END  WHEN '-1779392509' COLLATE NOCASE THEN LOWER(vt0.c0) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN '?ṲXW' END  WHEN '-1779392509' COLLATE NOCASE THEN LOWER(vt0.c0) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1, v0 INNER JOIN vt0 ON (('2143709627') NOTNULL) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT NULL));
SELECT ALL * FROM vt1 NOT INDEXED, vt0, v0 WHERE (((x'') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, v0 WHERE (((x'') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (((((0.6900221790141894) ISNULL)))<((CAST(v0.c0 AS INTEGER)))) RIGHT OUTER JOIN vt1 ON x'' WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((0.6900221790141894) ISNULL)))<((CAST(v0.c0 AS INTEGER)))) RIGHT OUTER JOIN vt1 ON x'');
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (((((0.6900221790141894) ISNULL)))<((CAST(v0.c0 AS INTEGER)))) RIGHT OUTER JOIN vt1 ON x'' WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((0.6900221790141894) ISNULL)))<((CAST(v0.c0 AS INTEGER)))) RIGHT OUTER JOIN vt1 ON x'');
SELECT ALL * FROM vt1, vt0, v0 WHERE (((((v0.c0)AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((((v0.c0)AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY ((((((v0.c0) ISNULL))OR(LIKELY(vt0.c0))))AND((+ (v0.c0)))) DESC  NULLS LAST, (- (((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0) ISNULL))OR(LIKELY(vt0.c0))))AND((+ (v0.c0)))) DESC  NULLS LAST, (- (((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY ((((((v0.c0) ISNULL))OR(LIKELY(vt0.c0))))AND((+ (v0.c0)))) DESC  NULLS LAST, (- (((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0) ISNULL))OR(LIKELY(vt0.c0))))AND((+ (v0.c0)))) DESC  NULLS LAST, (- (((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))>>((v0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt1.c0)))<(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))>>((v0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((vt0.c0)OR(vt1.c0)))<(vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))>>((v0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt1.c0)))<(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))>>((v0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((vt0.c0)OR(vt1.c0)))<(vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((vt0.c0)/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) ORDER BY ((((x'')) BETWEEN ((vt1.c0)) AND ((x''))) IN (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, UNLIKELY('0.31166708822607314') COLLATE NOCASE  NULLS LAST, vt1.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((x'')) BETWEEN ((vt1.c0)) AND ((x''))) IN (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, UNLIKELY('0.31166708822607314') COLLATE NOCASE  NULLS LAST, vt1.c0 COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((vt0.c0)/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) ORDER BY ((((x'')) BETWEEN ((vt1.c0)) AND ((x''))) IN (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, UNLIKELY('0.31166708822607314') COLLATE NOCASE  NULLS LAST, vt1.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((x'')) BETWEEN ((vt1.c0)) AND ((x''))) IN (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, UNLIKELY('0.31166708822607314') COLLATE NOCASE  NULLS LAST, vt1.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY TIME(((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(vt0.c0)), ((v0.c0)|(v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY TIME(((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(vt0.c0)), ((v0.c0)|(v0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY TIME(((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(vt0.c0)), ((v0.c0)|(v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY TIME(((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(vt0.c0)), ((v0.c0)|(v0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0)-(vt0.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt0.c0) BETWEEN (2.36364401E8) AND (vt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)-(vt0.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt0.c0) BETWEEN (2.36364401E8) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0)-(vt0.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt0.c0) BETWEEN (2.36364401E8) AND (vt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)-(vt0.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt0.c0) BETWEEN (2.36364401E8) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0)-(vt0.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt0.c0) BETWEEN (2.36364401E8) AND (vt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON '-1260495622' INNER JOIN v0 ON v0.c0 WHERE (((CASE WHEN v0.c0 THEN '3⛍' ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN '3⛍' ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON '-1260495622' INNER JOIN v0 ON v0.c0);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON '-1260495622' INNER JOIN v0 ON v0.c0 WHERE (((CASE WHEN v0.c0 THEN '3⛍' ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN '3⛍' ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON '-1260495622' INNER JOIN v0 ON v0.c0);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((LIKELY(DISTINCT v0.c0)) NOTNULL) FULL OUTER JOIN v0 ON ((0.789470469402094)>(((v0.c0)&(vt1.c0)))) WHERE (((v0.c0) NOTNULL)) ORDER BY CHAR((v0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((LIKELY(DISTINCT v0.c0)) NOTNULL) FULL OUTER JOIN v0 ON ((0.789470469402094)>(((v0.c0)&(vt1.c0)))) ORDER BY CHAR((v0.c0 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((LIKELY(DISTINCT v0.c0)) NOTNULL) FULL OUTER JOIN v0 ON ((0.789470469402094)>(((v0.c0)&(vt1.c0)))) WHERE (((v0.c0) NOTNULL)) ORDER BY CHAR((v0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((LIKELY(DISTINCT v0.c0)) NOTNULL) FULL OUTER JOIN v0 ON ((0.789470469402094)>(((v0.c0)&(vt1.c0)))) ORDER BY CHAR((v0.c0 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((('SKG') NOTNULL) IN (vt0.c0))) ORDER BY CASE (- (NULL))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS NOT(0.3617864186512244)) END  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('SKG') NOTNULL) IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE (- (NULL))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS NOT(0.3617864186512244)) END  NULLS FIRST, NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((('SKG') NOTNULL) IN (vt0.c0))) ORDER BY CASE (- (NULL))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS NOT(0.3617864186512244)) END  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('SKG') NOTNULL) IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE (- (NULL))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS NOT(0.3617864186512244)) END  NULLS FIRST, NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((('SKG') NOTNULL) IN (vt0.c0))) ORDER BY CASE (- (NULL))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS NOT(0.3617864186512244)) END  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (LIKELIHOOD((~ (0.9686054182404562)), 0.6760867934174295)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((~ (0.9686054182404562)), 0.6760867934174295)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (LIKELIHOOD((~ (0.9686054182404562)), 0.6760867934174295)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((~ (0.9686054182404562)), 0.6760867934174295)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (LIKELIHOOD((~ (0.9686054182404562)), 0.6760867934174295)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ())) ORDER BY (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0))))) ASC);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ())) ORDER BY (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0))))) ASC);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ())) ORDER BY (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0))))) ASC;
SELECT * FROM vt0, vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt1.c0 WHEN ((0.2831528301861107) IS FALSE) THEN CAST(vt1.c0 AS TEXT) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) END) ORDER BY (+ (x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt1.c0 WHEN ((0.2831528301861107) IS FALSE) THEN CAST(vt1.c0 AS TEXT) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (x'')) DESC);
SELECT * FROM vt0, vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt1.c0 WHEN ((0.2831528301861107) IS FALSE) THEN CAST(vt1.c0 AS TEXT) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) END) ORDER BY (+ (x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt1.c0 WHEN ((0.2831528301861107) IS FALSE) THEN CAST(vt1.c0 AS TEXT) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (x'')) DESC);
SELECT * FROM vt0, vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN (vt0.c0 IN ()) THEN vt1.c0 WHEN ((0.2831528301861107) IS FALSE) THEN CAST(vt1.c0 AS TEXT) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) END) ORDER BY (+ (x'')) DESC;
SELECT * FROM vt1, v0 WHERE (0.7999977561856488) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.2693950289283902 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((1877989441))==((v0.c0)))) AND (((vt1.c0) NOT BETWEEN ('-1956221068') AND (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7999977561856488) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.2693950289283902 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((1877989441))=((v0.c0)))) AND (((vt1.c0) NOT BETWEEN ('-1956221068') AND (vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (0.7999977561856488) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.2693950289283902 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((1877989441))==((v0.c0)))) AND (((vt1.c0) NOT BETWEEN ('-1956221068') AND (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7999977561856488) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.2693950289283902 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((1877989441))=((v0.c0)))) AND (((vt1.c0) NOT BETWEEN ('-1956221068') AND (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0, vt1 WHERE (CAST('-896055347' AS REAL)) ORDER BY HEX(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-896055347' AS REAL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY HEX(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, vt1 WHERE (CAST('-896055347' AS REAL)) ORDER BY HEX(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-896055347' AS REAL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY HEX(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((CAST(0X4a1f9da3 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0x4a1f9da3 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((- (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((CAST(0X4a1f9da3 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0x4a1f9da3 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((- (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE NULL  WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN ()) ELSE '711459226' END) ORDER BY ((SUBSTR(v0.c0, v0.c0)) BETWEEN (((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN ()) ELSE '711459226' END) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY ((SUBSTR(v0.c0, v0.c0)) BETWEEN (((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE NULL  WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN ()) ELSE '711459226' END) ORDER BY ((SUBSTR(v0.c0, v0.c0)) BETWEEN (((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN ()) ELSE '711459226' END) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY ((SUBSTR(v0.c0, v0.c0)) BETWEEN (((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM v0, vt1 WHERE (CASE (NOT (v0.c0))  WHEN (- (vt1.c0)) THEN ((('0.08685927595862197'))<=((vt1.c0))) WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) WHEN (~ (v0.c0)) THEN HEX(v0.c0) WHEN ((v0.c0) ISNULL) THEN (((vt1.c0, v0.c0, v0.c0))>((v0.c0, 0x3de4de75, vt1.c0))) WHEN CAST(v0.c0 AS REAL) THEN ('-?zh缁' IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))AND(v0.c0)) END) ORDER BY (((((v0.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))))IS(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (v0.c0))  WHEN (- (vt1.c0)) THEN ((('0.08685927595862197'))<=((vt1.c0))) WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) WHEN (~ (v0.c0)) THEN HEX(v0.c0) WHEN ((v0.c0) ISNULL) THEN (((vt1.c0, v0.c0, v0.c0))>((v0.c0, 0X3de4de75, vt1.c0))) WHEN CAST(v0.c0 AS REAL) THEN ('-?zh缁' IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((v0.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))))IS(((vt1.c0) NOT NULL))) ASC);
SELECT * FROM v0, vt1 WHERE (CASE (NOT (v0.c0))  WHEN (- (vt1.c0)) THEN ((('0.08685927595862197'))<=((vt1.c0))) WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) WHEN (~ (v0.c0)) THEN HEX(v0.c0) WHEN ((v0.c0) ISNULL) THEN (((vt1.c0, v0.c0, v0.c0))>((v0.c0, 0x3de4de75, vt1.c0))) WHEN CAST(v0.c0 AS REAL) THEN ('-?zh缁' IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))AND(v0.c0)) END) ORDER BY (((((v0.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))))IS(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (v0.c0))  WHEN (- (vt1.c0)) THEN ((('0.08685927595862197'))<=((vt1.c0))) WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) WHEN (~ (v0.c0)) THEN HEX(v0.c0) WHEN ((v0.c0) ISNULL) THEN (((vt1.c0, v0.c0, v0.c0))>((v0.c0, 0X3de4de75, vt1.c0))) WHEN CAST(v0.c0 AS REAL) THEN ('-?zh缁' IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((v0.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))))IS(((vt1.c0) NOT NULL))) ASC);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)||(vt0.c0)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((0.29148871762928663))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((0.29148871762928663))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((0.29148871762928663))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((0.29148871762928663))));
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c0, '831716226')) BETWEEN (LIKELY(vt0.c0)) AND (CASE 0.5198961957030563  WHEN vt0.c0 THEN x'ff5f' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0, '831716226')) BETWEEN (LIKELY(vt0.c0)) AND (CASE 0.5198961957030563  WHEN vt0.c0 THEN x'ff5f' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c0, '831716226')) BETWEEN (LIKELY(vt0.c0)) AND (CASE 0.5198961957030563  WHEN vt0.c0 THEN x'ff5f' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0, '831716226')) BETWEEN (LIKELY(vt0.c0)) AND (CASE 0.5198961957030563  WHEN vt0.c0 THEN x'ff5f' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c0, '831716226')) BETWEEN (LIKELY(vt0.c0)) AND (CASE 0.5198961957030563  WHEN vt0.c0 THEN x'ff5f' ELSE vt0.c0 END)));
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY (((vt1.c0))!=((vt1.c0))) COLLATE RTRIM, ((((((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0) NOT BETWEEN (0.2596118954716021) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND((((NULL)) BETWEEN ((vt1.c0)) AND (('202461017'))))))OR(vt1.c0)))AND((NOT (vt1.c0)))))AND((vt1.c0 IN (185761092)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM, ((((((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0) NOT BETWEEN (0.2596118954716021) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND((((NULL)) BETWEEN ((vt1.c0)) AND (('202461017'))))))OR(vt1.c0)))AND((NOT (vt1.c0)))))AND((vt1.c0 IN (185761092)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY (((vt1.c0))!=((vt1.c0))) COLLATE RTRIM, ((((((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0) NOT BETWEEN (0.2596118954716021) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND((((NULL)) BETWEEN ((vt1.c0)) AND (('202461017'))))))OR(vt1.c0)))AND((NOT (vt1.c0)))))AND((vt1.c0 IN (185761092)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM, ((((((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0) NOT BETWEEN (0.2596118954716021) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND((((NULL)) BETWEEN ((vt1.c0)) AND (('202461017'))))))OR(vt1.c0)))AND((NOT (vt1.c0)))))AND((vt1.c0 IN (185761092)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY (((vt1.c0))!=((vt1.c0))) COLLATE RTRIM, ((((((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0) NOT BETWEEN (0.2596118954716021) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND((((NULL)) BETWEEN ((vt1.c0)) AND (('202461017'))))))OR(vt1.c0)))AND((NOT (vt1.c0)))))AND((vt1.c0 IN (185761092)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((x'')IS(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((x'')IS(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((x'')IS(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((x'')IS(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((x'')IS(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((TRIM(vt0.c0) IN ((((vt0.c0))>=((v0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/((+ ('-885059390')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(vt0.c0) IN ((((vt0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/((+ ('-885059390')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((TRIM(vt0.c0) IN ((((vt0.c0))>=((v0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/((+ ('-885059390')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(vt0.c0) IN ((((vt0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/((+ ('-885059390')))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (ABS(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (ABS(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (ABS(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(NULL)))AND((((vt0.c0))>((NULL))))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS('Dc]X\')) WHERE ((NOT ((~ (vt1.c0))))) ORDER BY ((v0.c0) NOTNULL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt1.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(NULL)))AND((((vt0.c0))>((NULL))))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS('Dc]X\')) ORDER BY ((v0.c0) NOTNULL) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(NULL)))AND((((vt0.c0))>((NULL))))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS('Dc]X\')) WHERE ((NOT ((~ (vt1.c0))))) ORDER BY ((v0.c0) NOTNULL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt1.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(NULL)))AND((((vt0.c0))>((NULL))))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS('Dc]X\')) ORDER BY ((v0.c0) NOTNULL) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(x'6885' AS INTEGER))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'6885' AS INTEGER))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(x'6885' AS INTEGER))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'6885' AS INTEGER))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(x'6885' AS INTEGER))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((v0.c0, v0.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))))) ORDER BY '-401361870'  NULLS LAST, vt0.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((v0.c0, v0.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0, v0 ORDER BY '-401361870'  NULLS LAST, vt0.c0 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((v0.c0, v0.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))))) ORDER BY '-401361870'  NULLS LAST, vt0.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((v0.c0, v0.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0, v0 ORDER BY '-401361870'  NULLS LAST, vt0.c0 COLLATE NOCASE DESC);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND((((('45206864')AND(v0.c0)))AND(NULL))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND((((('45206864')AND(v0.c0)))AND(NULL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'' ASC);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND((((('45206864')AND(v0.c0)))AND(NULL))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(v0.c0 AS TEXT))))AND((((('45206864')AND(v0.c0)))AND(NULL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON (TRIM(DISTINCT vt0.c0) IN ()) CROSS JOIN vt0 ON vt1.c0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (TRIM(DISTINCT vt0.c0) IN ()) CROSS JOIN vt0 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON (TRIM(DISTINCT vt0.c0) IN ()) CROSS JOIN vt0 ON vt1.c0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (TRIM(DISTINCT vt0.c0) IN ()) CROSS JOIN vt0 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON (TRIM(DISTINCT vt0.c0) IN ()) CROSS JOIN vt0 ON vt1.c0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(0.9715541400979731)))AND(vt0.c0)))IS('N(X'))) ORDER BY '1693432835' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0.9715541400979731)))AND(vt0.c0)))IS('N(X'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '1693432835' COLLATE NOCASE DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(0.9715541400979731)))AND(vt0.c0)))IS('N(X'))) ORDER BY '1693432835' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0.9715541400979731)))AND(vt0.c0)))IS('N(X'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '1693432835' COLLATE NOCASE DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(0.9715541400979731)))AND(vt0.c0)))IS('N(X'))) ORDER BY '1693432835' COLLATE NOCASE DESC;
SELECT * FROM vt0, v0, vt1 WHERE (CAST(v0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (CAST(v0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt1, v0, vt0 WHERE (711459226) ORDER BY ((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN '' ELSE vt1.c0 END)))OR(0.256161979767904)))OR(CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((711459226) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN '' ELSE vt1.c0 END)))OR(0.256161979767904)))OR(CAST(vt1.c0 AS BLOB)))  NULLS LAST);
SELECT * FROM vt1, v0, vt0 WHERE (711459226) ORDER BY ((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN '' ELSE vt1.c0 END)))OR(0.256161979767904)))OR(CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((711459226) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN '' ELSE vt1.c0 END)))OR(0.256161979767904)))OR(CAST(vt1.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (COALESCE(('-779831835' IN ()), vt1.c0)) ORDER BY (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, ((CASE WHEN vt1.c0 THEN 0.07666283084281711 END)/((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(('-779831835' IN ()), vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, ((CASE WHEN vt1.c0 THEN 0.07666283084281711 END)/((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (COALESCE(('-779831835' IN ()), vt1.c0)) ORDER BY (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, ((CASE WHEN vt1.c0 THEN 0.07666283084281711 END)/((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(('-779831835' IN ()), vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, ((CASE WHEN vt1.c0 THEN 0.07666283084281711 END)/((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (COALESCE(('-779831835' IN ()), vt1.c0)) ORDER BY (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, ((CASE WHEN vt1.c0 THEN 0.07666283084281711 END)/((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))) DESC;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<<(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))<<(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<<(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))<<(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<<(vt1.c0)));
SELECT * FROM vt0, v0, vt1 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((((((v0.c0) ISNULL))AND('-1714991967' COLLATE BINARY)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((((v0.c0) ISNULL))AND('-1714991967' COLLATE BINARY)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt0, v0, vt1 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((((((v0.c0) ISNULL))AND('-1714991967' COLLATE BINARY)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((((v0.c0) ISNULL))AND('-1714991967' COLLATE BINARY)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT ALL * FROM v0, vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE ('');
SELECT ALL * FROM vt1, v0, vt0 WHERE (((x'') IS TRUE) COLLATE NOCASE) ORDER BY CAST((+ (vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST((+ (vt0.c0)) AS TEXT) DESC);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((x'') IS TRUE) COLLATE NOCASE) ORDER BY CAST((+ (vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST((+ (vt0.c0)) AS TEXT) DESC);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((x'') IS TRUE) COLLATE NOCASE) ORDER BY CAST((+ (vt0.c0)) AS TEXT) DESC;
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY COALESCE(DISTINCT (vt0.c0 IN ()), json(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY COALESCE(DISTINCT (vt0.c0 IN ()), json(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY COALESCE(DISTINCT (vt0.c0 IN ()), json(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY COALESCE(DISTINCT (vt0.c0 IN ()), json(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) THEN vt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) THEN vt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) THEN vt0.c0 COLLATE NOCASE END;
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((NULL, vt0.c0, vt0.c0))) ELSE TIME(v0.c0, v0.c0, v0.c0) END) ORDER BY CAST((v0.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((NULL, vt0.c0, vt0.c0))) ELSE TIME(v0.c0, v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY CAST((v0.c0 IN ()) AS REAL));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((NULL, vt0.c0, vt0.c0))) ELSE TIME(v0.c0, v0.c0, v0.c0) END) ORDER BY CAST((v0.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((NULL, vt0.c0, vt0.c0))) ELSE TIME(v0.c0, v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY CAST((v0.c0 IN ()) AS REAL));
SELECT ALL * FROM v0, vt1 WHERE (COALESCE(DISTINCT CAST(x'' AS BLOB), ((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(x'' AS BLOB), ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (COALESCE(DISTINCT CAST(x'' AS BLOB), ((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(x'' AS BLOB), ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (COALESCE(DISTINCT CAST(x'' AS BLOB), ((v0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE ((((vt0.c0 IN ()))AND(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE ((((vt0.c0 IN ()))AND(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE ((((vt0.c0 IN ()))AND(((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((vt1.c0 IN (vt0.c0)))|(((v0.c0)<=(vt1.c0)))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE))LIKE(ABS(DISTINCT vt0.c0))) WHERE (((CASE vt1.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS NOT(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS NOT(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((vt1.c0 IN (vt0.c0)))|(((v0.c0)<=(vt1.c0)))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE))LIKE(ABS(DISTINCT vt0.c0))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((vt1.c0 IN (vt0.c0)))|(((v0.c0)<=(vt1.c0)))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE))LIKE(ABS(DISTINCT vt0.c0))) WHERE (((CASE vt1.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS NOT(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS NOT(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((vt1.c0 IN (vt0.c0)))|(((v0.c0)<=(vt1.c0)))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE))LIKE(ABS(DISTINCT vt0.c0))));
SELECT ALL * FROM vt1, v0 WHERE (((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS FALSE));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))%(CAST(vt1.c0 AS REAL)))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, ((vt1.c0)||(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))%(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, ((vt1.c0)||(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))%(CAST(vt1.c0 AS REAL)))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, ((vt1.c0)||(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))%(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, ((vt1.c0)||(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))%(CAST(vt1.c0 AS REAL)))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, ((vt1.c0)||(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (UNICODE(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNICODE(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNICODE(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)/(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) ORDER BY ((HEX(DISTINCT v0.c0))IS NOT('GfCN*+')) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)/(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((HEX(DISTINCT v0.c0))IS NOT('GfCN*+')) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)/(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) ORDER BY ((HEX(DISTINCT v0.c0))IS NOT('GfCN*+')) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)/(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((HEX(DISTINCT v0.c0))IS NOT('GfCN*+')) DESC);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((((((vt0.c0, v0.c0, vt0.c0))==((vt0.c0, vt0.c0, v0.c0)))) BETWEEN ('-1978700564') AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY ((TIME(v0.c0, vt1.c0, vt0.c0))&(LIKELIHOOD(v0.c0, 0.5408431289121922)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0))==((vt0.c0, vt0.c0, v0.c0)))) BETWEEN ('-1978700564') AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((TIME(v0.c0, vt1.c0, vt0.c0))&(LIKELIHOOD(v0.c0, 0.5408431289121922)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((((((vt0.c0, v0.c0, vt0.c0))==((vt0.c0, vt0.c0, v0.c0)))) BETWEEN ('-1978700564') AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY ((TIME(v0.c0, vt1.c0, vt0.c0))&(LIKELIHOOD(v0.c0, 0.5408431289121922)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0))==((vt0.c0, vt0.c0, v0.c0)))) BETWEEN ('-1978700564') AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((TIME(v0.c0, vt1.c0, vt0.c0))&(LIKELIHOOD(v0.c0, 0.5408431289121922)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((((vt1.c0))>=((x'')))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN ((((vt1.c0))>=((x'')))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((((vt1.c0))>=((x'')))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN ((((vt1.c0))>=((x'')))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((((vt1.c0))>=((x'')))) AND (CAST(vt1.c0 AS TEXT))));
SELECT * FROM v0 WHERE (((((v0.c0)>>(v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0)<(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0)<(v0.c0)))));
SELECT * FROM v0 WHERE (((((v0.c0)>>(v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0)<(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0)<(v0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt1.c0) ISNULL)))=((((('! pcq018'))!=((v0.c0)))))) INNER JOIN vt1 ON ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.c0 AS REAL))) WHERE ((((vt1.c0 IN ()))&(((vt0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))&(((vt0.c0)<(v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt1.c0) ISNULL)))==((((('! pcq018'))!=((v0.c0)))))) INNER JOIN vt1 ON ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt1.c0) ISNULL)))=((((('! pcq018'))!=((v0.c0)))))) INNER JOIN vt1 ON ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.c0 AS REAL))) WHERE ((((vt1.c0 IN ()))&(((vt0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))&(((vt0.c0)<(v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt1.c0) ISNULL)))==((((('! pcq018'))!=((v0.c0)))))) INNER JOIN vt1 ON ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM vt1 WHERE (' \') ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(CASE WHEN NULL THEN vt1.c0 END)))OR((('?{2!3	Jl') NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((' \') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(CASE WHEN NULL THEN vt1.c0 END)))OR((('?{2!3	Jl') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (' \') ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(CASE WHEN NULL THEN vt1.c0 END)))OR((('?{2!3	Jl') NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((' \') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(CASE WHEN NULL THEN vt1.c0 END)))OR((('?{2!3	Jl') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (' \') ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(CASE WHEN NULL THEN vt1.c0 END)))OR((('?{2!3	Jl') NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX((((vt0.c0, vt0.c0, vt0.c0, 1.762199612E9, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt0.c0, vt0.c0, vt0.c0, 1.762199612E9, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX((((vt0.c0, vt0.c0, vt0.c0, 1.762199612E9, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt0.c0, vt0.c0, vt0.c0, 1.762199612E9, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX((((vt0.c0, vt0.c0, vt0.c0, 1.762199612E9, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC;
SELECT ALL * FROM v0, vt1, vt0 WHERE ('Y⧟M') ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END IN ((((('\rh')OR(vt1.c0)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('Y⧟M') IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END IN ((((('\rh')OR(vt1.c0)))AND(v0.c0)))) DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ('Y⧟M') ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END IN ((((('\rh')OR(vt1.c0)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('Y⧟M') IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END IN ((((('\rh')OR(vt1.c0)))AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN (+ (v0.c0)) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN (+ (v0.c0)) THEN '' END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN (+ (v0.c0)) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN (+ (v0.c0)) THEN '' END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((('V뗂'))>((((vt0.c0) ISNULL))))) ORDER BY CAST(v0.c0 AS REAL) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) IN ())  NULLS FIRST, (+ (((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('V뗂'))>((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(v0.c0 AS REAL) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) IN ())  NULLS FIRST, (+ (((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt1, vt0, v0 WHERE (((('V뗂'))>((((vt0.c0) ISNULL))))) ORDER BY CAST(v0.c0 AS REAL) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) IN ())  NULLS FIRST, (+ (((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('V뗂'))>((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(v0.c0 AS REAL) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) IN ())  NULLS FIRST, (+ (((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((LTRIM(vt0.c0), (~ (x'9e2c')), CAST(0.3416136345820445 AS NUMERIC)))>=((v0.c0, CAST(v0.c0 AS REAL), (~ (vt0.c0))))) WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((LTRIM(vt0.c0), (~ (x'9e2c')), CAST(0.3416136345820445 AS NUMERIC)))>=((v0.c0, CAST(v0.c0 AS REAL), (~ (vt0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((LTRIM(vt0.c0), (~ (x'9e2c')), CAST(0.3416136345820445 AS NUMERIC)))>=((v0.c0, CAST(v0.c0 AS REAL), (~ (vt0.c0))))) WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((LTRIM(vt0.c0), (~ (x'9e2c')), CAST(0.3416136345820445 AS NUMERIC)))>=((v0.c0, CAST(v0.c0 AS REAL), (~ (vt0.c0))))));
SELECT * FROM v0 WHERE ((x'6534' IN ())) ORDER BY CASE ((NULL) IS TRUE)  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (v0.c0 IN ()) ELSE (('P7')/(0.0140144906321098)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'6534' IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE ((NULL) IS TRUE)  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (v0.c0 IN ()) ELSE (('P7')/(0.0140144906321098)) END  NULLS FIRST);
SELECT * FROM v0 WHERE ((x'6534' IN ())) ORDER BY CASE ((NULL) IS TRUE)  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (v0.c0 IN ()) ELSE (('P7')/(0.0140144906321098)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'6534' IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE ((NULL) IS TRUE)  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (v0.c0 IN ()) ELSE (('P7')/(0.0140144906321098)) END  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((('-84988504')>=(vt1.c0)))*((((vt1.c0))>=((vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0))!=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((('-84988504')>=(vt1.c0)))*((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0))!=((vt1.c0)))))));
SELECT ALL * FROM vt1 WHERE ((((('-84988504')>=(vt1.c0)))*((((vt1.c0))>=((vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0))!=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((('-84988504')>=(vt1.c0)))*((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0))!=((vt1.c0)))))));
SELECT ALL * FROM vt1 WHERE ((((('-84988504')>=(vt1.c0)))*((((vt1.c0))>=((vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0))!=((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CHANGES()) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN ('-2124290558') AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CHANGES()) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN ('-2124290558') AND (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CHANGES()) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN ('-2124290558') AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CHANGES()) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN ('-2124290558') AND (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CHANGES()) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN ('-2124290558') AND (vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY 'jc4i\' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY 'jc4i\' DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY 'jc4i\' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY 'jc4i\' DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY 'jc4i\' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(((vt1.c0)==(vt1.c0)))))AND((((vt1.c0, vt1.c0, '1855979250')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(((vt1.c0)=(vt1.c0)))))AND((((vt1.c0, vt1.c0, '1855979250')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(((vt1.c0)==(vt1.c0)))))AND((((vt1.c0, vt1.c0, '1855979250')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(((vt1.c0)=(vt1.c0)))))AND((((vt1.c0, vt1.c0, '1855979250')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(((vt1.c0)==(vt1.c0)))))AND((((vt1.c0, vt1.c0, '1855979250')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT * FROM v0, vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CASE (- (v0.c0))  WHEN ((v0.c0)>(x'')) THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN (((vt0.c0))<=((NULL))) WHEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) THEN TYPEOF(v0.c0) WHEN LIKE(vt0.c0, v0.c0) THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((v0.c0)>>(vt0.c0)) END WHERE (NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)<=(vt0.c0)))) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)<=(vt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE (- (v0.c0))  WHEN ((v0.c0)>(x'')) THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN (((vt0.c0))<=((NULL))) WHEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) THEN TYPEOF(v0.c0) WHEN LIKE(vt0.c0, v0.c0) THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((v0.c0)>>(vt0.c0)) END ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CASE (- (v0.c0))  WHEN ((v0.c0)>(x'')) THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN (((vt0.c0))<=((NULL))) WHEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) THEN TYPEOF(v0.c0) WHEN LIKE(vt0.c0, v0.c0) THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((v0.c0)>>(vt0.c0)) END WHERE (NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)<=(vt0.c0)))) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)<=(vt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE (- (v0.c0))  WHEN ((v0.c0)>(x'')) THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN (((vt0.c0))<=((NULL))) WHEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) THEN TYPEOF(v0.c0) WHEN LIKE(vt0.c0, v0.c0) THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((v0.c0)>>(vt0.c0)) END ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((NULL, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE)))) ORDER BY ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()));
SELECT * FROM vt0 WHERE ((((((NULL, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE)))) ORDER BY ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()));
SELECT * FROM vt0 WHERE ((((((NULL, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE)))) ORDER BY ((vt0.c0 IN ()) IN ());
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)>>(((vt0.c0)&(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)>>(((vt0.c0)&(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)>>(((vt0.c0)&(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)>>(((vt0.c0)&(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt0.c0) NOT BETWEEN ('-1388960500') AND (vt1.c0)), CAST(vt0.c0 AS NUMERIC)))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0))) WHERE ((NOT ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt0.c0) NOT BETWEEN ('-1388960500') AND (vt1.c0)), CAST(vt0.c0 AS NUMERIC)))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt0.c0) NOT BETWEEN ('-1388960500') AND (vt1.c0)), CAST(vt0.c0 AS NUMERIC)))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0))) WHERE ((NOT ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt0.c0) NOT BETWEEN ('-1388960500') AND (vt1.c0)), CAST(vt0.c0 AS NUMERIC)))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt0.c0) NOT BETWEEN ('-1388960500') AND (vt1.c0)), CAST(vt0.c0 AS NUMERIC)))<((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0))) WHERE ((NOT ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))));
SELECT * FROM vt1, vt0 NOT INDEXED, v0 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN NULLIF(DISTINCT v0.c0, vt0.c0) WHEN ((vt1.c0)|(v0.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN '' THEN '5\r' COLLATE NOCASE WHEN ((v0.c0) IS TRUE) THEN v0.c0 COLLATE BINARY WHEN ((1727000275)||(x'01c7')) THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS BLOB) THEN NULLIF(DISTINCT v0.c0, vt0.c0) WHEN ((vt1.c0)|(v0.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN '' THEN '5\r' COLLATE NOCASE WHEN ((v0.c0) IS TRUE) THEN v0.c0 COLLATE BINARY WHEN ((1727000275)||(x'01c7')) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0 NOT INDEXED, v0 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN NULLIF(DISTINCT v0.c0, vt0.c0) WHEN ((vt1.c0)|(v0.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN '' THEN '5\r' COLLATE NOCASE WHEN ((v0.c0) IS TRUE) THEN v0.c0 COLLATE BINARY WHEN ((1727000275)||(x'01c7')) THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS BLOB) THEN NULLIF(DISTINCT v0.c0, vt0.c0) WHEN ((vt1.c0)|(v0.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN '' THEN '5\r' COLLATE NOCASE WHEN ((v0.c0) IS TRUE) THEN v0.c0 COLLATE BINARY WHEN ((1727000275)||(x'01c7')) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((v0.c0 COLLATE NOCASE)OR((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE NOCASE)OR((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((v0.c0 COLLATE NOCASE)OR((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE NOCASE)OR((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (CASE NULLIF(vt1.c0, vt1.c0)  WHEN (~ (x'')) THEN vt0.c0 COLLATE NOCASE ELSE vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(vt1.c0, vt1.c0)  WHEN (~ (x'')) THEN vt0.c0 COLLATE NOCASE ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (CASE NULLIF(vt1.c0, vt1.c0)  WHEN (~ (x'')) THEN vt0.c0 COLLATE NOCASE ELSE vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(vt1.c0, vt1.c0)  WHEN (~ (x'')) THEN vt0.c0 COLLATE NOCASE ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (CASE NULLIF(vt1.c0, vt1.c0)  WHEN (~ (x'')) THEN vt0.c0 COLLATE NOCASE ELSE vt1.c0 COLLATE BINARY END);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE NOCASE ELSE (vt1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE NOCASE ELSE (vt1.c0 IN ()) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE NOCASE ELSE (vt1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE NOCASE ELSE (vt1.c0 IN ()) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE NOCASE ELSE (vt1.c0 IN ()) END;
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LIKELY(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LIKELY(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LIKELY(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((LIKELY(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((((((CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)OR(((v0.c0) NOT NULL))))AND(((v0.c0)<(vt0.c0)))))OR(CHANGES())))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)OR(((v0.c0) NOT NULL))))AND(((v0.c0)<(vt0.c0)))))OR(CHANGES())))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((((((CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)OR(((v0.c0) NOT NULL))))AND(((v0.c0)<(vt0.c0)))))OR(CHANGES())))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)OR(((v0.c0) NOT NULL))))AND(((v0.c0)<(vt0.c0)))))OR(CHANGES())))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN vt1 ON ((0.823262244881092)|(vt0.c0 COLLATE NOCASE)) WHERE (CAST(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) ORDER BY (+ ((((vt1.c0))=((v0.c0)))))  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN '1740524311' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN vt0.c0 ELSE (((v0.c0))=((vt1.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON ((0.823262244881092)|(vt0.c0 COLLATE NOCASE)) ORDER BY (+ ((((vt1.c0))=((v0.c0)))))  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN '1740524311' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN vt0.c0 ELSE (((v0.c0))=((vt1.c0))) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN vt1 ON ((0.823262244881092)|(vt0.c0 COLLATE NOCASE)) WHERE (CAST(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) ORDER BY (+ ((((vt1.c0))=((v0.c0)))))  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN '1740524311' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN vt0.c0 ELSE (((v0.c0))=((vt1.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON ((0.823262244881092)|(vt0.c0 COLLATE NOCASE)) ORDER BY (+ ((((vt1.c0))=((v0.c0)))))  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN '1740524311' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN vt0.c0 ELSE (((v0.c0))=((vt1.c0))) END ASC  NULLS LAST);
SELECT * FROM v0, vt1, vt0 WHERE (((((((((((v0.c0)<>(vt0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL))))AND(((vt0.c0)<>(v0.c0)))))AND(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)<>(vt0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL))))AND(((vt0.c0)!=(v0.c0)))))AND(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (((((((((((v0.c0)<>(vt0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL))))AND(((vt0.c0)<>(v0.c0)))))AND(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)<>(vt0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL))))AND(((vt0.c0)!=(v0.c0)))))AND(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0 INNER JOIN vt1 ON TRIM(((v0.c0)GLOB(vt1.c0))) WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END) BETWEEN (((((v0.c0)OR(vt1.c0)))AND(v0.c0))) AND (0X668e22e2)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END) BETWEEN (((((v0.c0)OR(vt1.c0)))AND(v0.c0))) AND (0x668e22e2))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON TRIM(((v0.c0)GLOB(vt1.c0))));
SELECT * FROM v0 INNER JOIN vt1 ON TRIM(((v0.c0)GLOB(vt1.c0))) WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END) BETWEEN (((((v0.c0)OR(vt1.c0)))AND(v0.c0))) AND (0X668e22e2)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END) BETWEEN (((((v0.c0)OR(vt1.c0)))AND(v0.c0))) AND (0x668e22e2))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON TRIM(((v0.c0)GLOB(vt1.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN 0X58215cbc END)OR(UNLIKELY(vt1.c0))))AND(CAST(v0.c0 AS REAL))))OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(((vt1.c0)OR(vt1.c0)))) WHERE (CAST(((vt1.c0) IS FALSE) AS INTEGER)) ORDER BY (+ (((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN 0x58215cbc END)OR(UNLIKELY(vt1.c0))))AND(CAST(v0.c0 AS REAL))))OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(((vt1.c0)OR(vt1.c0)))) ORDER BY (+ (((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))) DESC);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN 0X58215cbc END)OR(UNLIKELY(vt1.c0))))AND(CAST(v0.c0 AS REAL))))OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(((vt1.c0)OR(vt1.c0)))) WHERE (CAST(((vt1.c0) IS FALSE) AS INTEGER)) ORDER BY (+ (((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN 0x58215cbc END)OR(UNLIKELY(vt1.c0))))AND(CAST(v0.c0 AS REAL))))OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND(((vt1.c0)OR(vt1.c0)))) ORDER BY (+ (((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))) DESC);
SELECT * FROM v0 WHERE (((((x'', v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) IN (((v0.c0)IS(v0.c0)), (+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'', v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) IN (((v0.c0)IS(v0.c0)), (+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((x'', v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) IN (((v0.c0)IS(v0.c0)), (+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'', v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) IN (((v0.c0)IS(v0.c0)), (+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c0)<>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c0)<>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c0)<>(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((('-1016449398') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('-1016449398') NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((('-1016449398') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('-1016449398') NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((('-1016449398') NOTNULL));
SELECT ALL * FROM vt0, vt1, v0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((NULL IN ()));
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT ALL * FROM v0 WHERE (((0.8704472599311653)%((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.8704472599311653)%((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.8704472599311653)%((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.8704472599311653)%((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.8704472599311653)%((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY NULL;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5467229767521646 END COLLATE BINARY) ORDER BY CASE WHEN 0X287b1c9b THEN ((vt1.c0) NOT NULL) ELSE ((vt0.c0)/(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5467229767521646 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN 0x287b1c9b THEN ((vt1.c0) NOT NULL) ELSE ((vt0.c0)/(vt0.c0)) END);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5467229767521646 END COLLATE BINARY) ORDER BY CASE WHEN 0X287b1c9b THEN ((vt1.c0) NOT NULL) ELSE ((vt0.c0)/(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5467229767521646 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN 0x287b1c9b THEN ((vt1.c0) NOT NULL) ELSE ((vt0.c0)/(vt0.c0)) END);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5467229767521646 END COLLATE BINARY) ORDER BY CASE WHEN 0X287b1c9b THEN ((vt1.c0) NOT NULL) ELSE ((vt0.c0)/(vt0.c0)) END;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY (((((((((((vt0.c0))>=((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(1762376292)))))OR(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0))>=((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(1762376292)))))OR(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY (((((((((((vt0.c0))>=((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(1762376292)))))OR(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0))>=((vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(1762376292)))))OR(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) WHERE (((UNLIKELY(DISTINCT '-460143046'))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT '-460143046'))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) WHERE (((UNLIKELY(DISTINCT '-460143046'))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT '-460143046'))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY vt1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN 'hsc\r\n' ELSE (~ (vt0.c0)) END WHERE ((~ (IFNULL(DISTINCT vt1.c0, vt0.c0)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (IFNULL(DISTINCT vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN 'hsc\r\n' ELSE (~ (vt0.c0)) END ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN 'hsc\r\n' ELSE (~ (vt0.c0)) END WHERE ((~ (IFNULL(DISTINCT vt1.c0, vt0.c0)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (IFNULL(DISTINCT vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN 'hsc\r\n' ELSE (~ (vt0.c0)) END ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN 'hsc\r\n' ELSE (~ (vt0.c0)) END WHERE ((~ (IFNULL(DISTINCT vt1.c0, vt0.c0)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT * FROM vt0, v0 WHERE (((0.09060851688120919)>>(CASE v0.c0  WHEN vt0.c0 THEN '' WHEN 'E0KVጢ' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((0.09060851688120919)>>(CASE v0.c0  WHEN vt0.c0 THEN '' WHEN 'E0KVጢ' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS LAST, vt0.c0);
SELECT * FROM vt0, v0 WHERE (((0.09060851688120919)>>(CASE v0.c0  WHEN vt0.c0 THEN '' WHEN 'E0KVጢ' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((0.09060851688120919)>>(CASE v0.c0  WHEN vt0.c0 THEN '' WHEN 'E0KVጢ' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS LAST, vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CHANGES()) ORDER BY ((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))) DESC, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))) DESC, vt1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CHANGES()) ORDER BY ((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))) DESC, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))) DESC, vt1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((0.5293756470339899 COLLATE NOCASE)||(CAST(v0.c0 AS REAL))) LEFT OUTER JOIN v0 ON '-1221537699' WHERE (((((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((0.5293756470339899 COLLATE NOCASE)||(CAST(v0.c0 AS REAL))) LEFT OUTER JOIN v0 ON '-1221537699');
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((0.5293756470339899 COLLATE NOCASE)||(CAST(v0.c0 AS REAL))) LEFT OUTER JOIN v0 ON '-1221537699' WHERE (((((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((0.5293756470339899 COLLATE NOCASE)||(CAST(v0.c0 AS REAL))) LEFT OUTER JOIN v0 ON '-1221537699');
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (vt0.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((((NULL)|(v0.c0)))) AND ((((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((v0.c0)) NOT BETWEEN ((((NULL)|(v0.c0)))) AND ((((vt0.c0) ISNULL)))));
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (vt0.c0) ORDER BY (((v0.c0)) NOT BETWEEN ((((NULL)|(v0.c0)))) AND ((((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((v0.c0)) NOT BETWEEN ((((NULL)|(v0.c0)))) AND ((((vt0.c0) ISNULL)))));
SELECT * FROM vt0, v0 WHERE (CASE WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)==(v0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)=(v0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)==(v0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)=(v0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0, vt1 WHERE (HEX(CASE WHEN vt1.c0 THEN 0xffffffffad4c22b0 END)) ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN vt1.c0 THEN 0Xffffffffad4c22b0 END)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC);
SELECT ALL * FROM v0, vt1 WHERE (HEX(CASE WHEN vt1.c0 THEN 0xffffffffad4c22b0 END)) ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN vt1.c0 THEN 0Xffffffffad4c22b0 END)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((NOT (vt1.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt1, v0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-29229580')))))>((v0.c0 COLLATE RTRIM))) RIGHT OUTER JOIN vt1 ON 0.2837829178092268 WHERE (CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-29229580')))))>((v0.c0 COLLATE RTRIM))) RIGHT OUTER JOIN vt1 ON 0.2837829178092268);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-29229580')))))>((v0.c0 COLLATE RTRIM))) RIGHT OUTER JOIN vt1 ON 0.2837829178092268 WHERE (CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-29229580')))))>((v0.c0 COLLATE RTRIM))) RIGHT OUTER JOIN vt1 ON 0.2837829178092268);
SELECT * FROM vt0, v0, vt1 WHERE (((CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (((CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0 WHERE (CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN NULL THEN ((v0.c0)%(v0.c0)) ELSE v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN NULL THEN ((v0.c0)%(v0.c0)) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN NULL THEN ((v0.c0)%(v0.c0)) ELSE v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN NULL THEN ((v0.c0)%(v0.c0)) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY LIKELY(CAST(vt0.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELY(CAST(vt0.c0 AS NUMERIC)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY LIKELY(CAST(vt0.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELY(CAST(vt0.c0 AS NUMERIC)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY LIKELY(CAST(vt0.c0 AS NUMERIC)) DESC;
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((vt1.c0) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((vt1.c0) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((vt1.c0) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c0)))&(LIKELIHOOD(vt0.c0, 0.4139765389397565))) WHERE (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c0)))&(LIKELIHOOD(vt0.c0, 0.4139765389397565))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c0)))&(LIKELIHOOD(vt0.c0, 0.4139765389397565))) WHERE (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c0)))&(LIKELIHOOD(vt0.c0, 0.4139765389397565))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0))))>((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))<(((vt1.c0)-(vt1.c0)))) ASC  NULLS FIRST, ((((- (vt1.c0))))>((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)%(vt1.c0))))>((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))<(((vt1.c0)-(vt1.c0)))) ASC  NULLS FIRST, ((((- (vt1.c0))))>((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0))))>((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))<(((vt1.c0)-(vt1.c0)))) ASC  NULLS FIRST, ((((- (vt1.c0))))>((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)%(vt1.c0))))>((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))<(((vt1.c0)-(vt1.c0)))) ASC  NULLS FIRST, ((((- (vt1.c0))))>((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0))))>((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))<(((vt1.c0)-(vt1.c0)))) ASC  NULLS FIRST, ((((- (vt1.c0))))>((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) WHERE ((- (((vt1.c0) IS FALSE)))) ORDER BY ((ABS(vt1.c0)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ORDER BY ((ABS(vt1.c0)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) WHERE ((- (((vt1.c0) IS FALSE)))) ORDER BY ((ABS(vt1.c0)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ORDER BY ((ABS(vt1.c0)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) WHERE ((- (((vt1.c0) IS FALSE)))) ORDER BY ((ABS(vt1.c0)) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))<=((((vt1.c0, vt0.c0, v0.c0, vt0.c0, vt1.c0))<=((vt0.c0, x'', vt0.c0, vt1.c0, vt1.c0)))))) ORDER BY (~ ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))<=((((vt1.c0, vt0.c0, v0.c0, vt0.c0, vt1.c0))<=((vt0.c0, x'', vt0.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (~ ((- (vt0.c0)))));
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))<=((((vt1.c0, vt0.c0, v0.c0, vt0.c0, vt1.c0))<=((vt0.c0, x'', vt0.c0, vt1.c0, vt1.c0)))))) ORDER BY (~ ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))<=((((vt1.c0, vt0.c0, v0.c0, vt0.c0, vt1.c0))<=((vt0.c0, x'', vt0.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (~ ((- (vt0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0 COLLATE NOCASE))) ORDER BY '3A' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY '3A' ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0 COLLATE NOCASE))) ORDER BY '3A' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY '3A' ASC);
SELECT * FROM v0, vt1 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (x'') ORDER BY CASE (((vt0.c0))>((v0.c0)))  WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN ((v0.c0)OR(v0.c0)) THEN ((((v0.c0)OR(NULL)))OR(vt1.c0)) WHEN (~ (vt0.c0)) THEN ((x'') IS TRUE) ELSE (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CASE (((vt0.c0))>((v0.c0)))  WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN ((v0.c0)OR(v0.c0)) THEN ((((v0.c0)OR(NULL)))OR(vt1.c0)) WHEN (~ (vt0.c0)) THEN ((x'') IS TRUE) ELSE (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END DESC);
SELECT * FROM vt0, v0, vt1 WHERE (x'') ORDER BY CASE (((vt0.c0))>((v0.c0)))  WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN ((v0.c0)OR(v0.c0)) THEN ((((v0.c0)OR(NULL)))OR(vt1.c0)) WHEN (~ (vt0.c0)) THEN ((x'') IS TRUE) ELSE (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CASE (((vt0.c0))>((v0.c0)))  WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN ((v0.c0)OR(v0.c0)) THEN ((((v0.c0)OR(NULL)))OR(vt1.c0)) WHEN (~ (vt0.c0)) THEN ((x'') IS TRUE) ELSE (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END DESC);
SELECT ALL * FROM vt1, v0 WHERE (CAST(vt1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (CAST(vt1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN 0.3089980275530829 THEN vt1.c0 END)<<((vt1.c0 IN (vt1.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((vt1.c0 IN (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN 0.3089980275530829 THEN vt1.c0 END)<<((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((vt1.c0 IN (x'')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN 0.3089980275530829 THEN vt1.c0 END)<<((vt1.c0 IN (vt1.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((vt1.c0 IN (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN 0.3089980275530829 THEN vt1.c0 END)<<((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((vt1.c0 IN (x'')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN 0.3089980275530829 THEN vt1.c0 END)<<((vt1.c0 IN (vt1.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((vt1.c0 IN (x'')))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, v0, vt0 WHERE (CAST(((vt1.c0)<=(vt0.c0)) AS TEXT)) ORDER BY (((CAST(vt0.c0 AS BLOB)))=((NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)<=(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((CAST(vt0.c0 AS BLOB)))=((NULL COLLATE NOCASE))));
SELECT ALL * FROM vt1, v0, vt0 WHERE (CAST(((vt1.c0)<=(vt0.c0)) AS TEXT)) ORDER BY (((CAST(vt0.c0 AS BLOB)))=((NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)<=(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((CAST(vt0.c0 AS BLOB)))=((NULL COLLATE NOCASE))));
SELECT ALL * FROM v0 WHERE ((- (v0.c0))) ORDER BY ((CAST(0.220654489727641 AS INTEGER))<<(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))) ASC, CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(0.220654489727641 AS INTEGER))<<(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))) ASC, CHANGES() DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((- (v0.c0))) ORDER BY ((CAST(0.220654489727641 AS INTEGER))<<(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))) ASC, CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(0.220654489727641 AS INTEGER))<<(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))) ASC, CHANGES() DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (RTRIM(vt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (RTRIM(vt0.c0) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (RTRIM(vt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (RTRIM(vt0.c0) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (RTRIM(vt0.c0) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0, vt1, v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0x3192fb82);
SELECT SUM(count) FROM (SELECT ALL ((0x3192fb82) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0x3192fb82);
SELECT SUM(count) FROM (SELECT ALL ((0x3192fb82) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0x3192fb82);
SELECT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN x'75e9' END)>>(vt1.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN x'75e9' END)>>(vt1.c0 COLLATE RTRIM)) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN x'75e9' END)>>(vt1.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN x'75e9' END)>>(vt1.c0 COLLATE RTRIM)) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN x'75e9' END)>>(vt1.c0 COLLATE RTRIM)) DESC;
SELECT * FROM vt1, v0, vt0 WHERE (TRIM(vt1.c0) COLLATE BINARY) ORDER BY ((LIKELY(vt1.c0))+(((vt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((LIKELY(vt1.c0))+(((vt0.c0) NOT NULL))) DESC  NULLS LAST);
SELECT * FROM vt1, v0, vt0 WHERE (TRIM(vt1.c0) COLLATE BINARY) ORDER BY ((LIKELY(vt1.c0))+(((vt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((LIKELY(vt1.c0))+(((vt0.c0) NOT NULL))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))OR(x'' COLLATE BINARY)))OR(((vt1.c0)|(vt1.c0)))))OR(((vt1.c0)<(vt1.c0)))))OR((~ (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, vt1.c0 DESC, json((vt1.c0 IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))OR(x'' COLLATE BINARY)))OR(((vt1.c0)|(vt1.c0)))))OR(((vt1.c0)<(vt1.c0)))))OR((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, vt1.c0 DESC, json((vt1.c0 IN (vt1.c0))));
SELECT * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))OR(x'' COLLATE BINARY)))OR(((vt1.c0)|(vt1.c0)))))OR(((vt1.c0)<(vt1.c0)))))OR((~ (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, vt1.c0 DESC, json((vt1.c0 IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))OR(x'' COLLATE BINARY)))OR(((vt1.c0)|(vt1.c0)))))OR(((vt1.c0)<(vt1.c0)))))OR((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, vt1.c0 DESC, json((vt1.c0 IN (vt1.c0))));
SELECT * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))OR(x'' COLLATE BINARY)))OR(((vt1.c0)|(vt1.c0)))))OR(((vt1.c0)<(vt1.c0)))))OR((~ (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, vt1.c0 DESC, json((vt1.c0 IN (vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOTNULL)) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOTNULL)) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOTNULL)) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)||(vt1.c0)))) WHERE (((((v0.c0)||(v0.c0)))-(((((vt1.c0)OR(v0.c0)))AND(x'257b')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0)))-(((((vt1.c0)OR(v0.c0)))AND(x'257b'))))) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)||(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)||(vt1.c0)))) WHERE (((((v0.c0)||(v0.c0)))-(((((vt1.c0)OR(v0.c0)))AND(x'257b')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0)))-(((((vt1.c0)OR(v0.c0)))AND(x'257b'))))) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)||(vt1.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)||(vt0.c0)), ((((8.0358924E7)AND(vt0.c0)))OR(vt0.c0)), (vt1.c0 IN (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))), (vt0.c0 IN (vt0.c0))))) WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)||(vt0.c0)), ((((8.0358924E7)AND(vt0.c0)))OR(vt0.c0)), (vt1.c0 IN (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))), (vt0.c0 IN (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)||(vt0.c0)), ((((8.0358924E7)AND(vt0.c0)))OR(vt0.c0)), (vt1.c0 IN (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))), (vt0.c0 IN (vt0.c0))))) WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)||(vt0.c0)), ((((8.0358924E7)AND(vt0.c0)))OR(vt0.c0)), (vt1.c0 IN (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))), (vt0.c0 IN (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)||(vt0.c0)), ((((8.0358924E7)AND(vt0.c0)))OR(vt0.c0)), (vt1.c0 IN (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))), (vt0.c0 IN (vt0.c0))))) WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt1.c0)), (((v0.c0, vt0.c0, v0.c0))<((vt0.c0, vt1.c0, vt1.c0))), CAST(vt0.c0 AS REAL))) AND (((((v0.c0))>((''))), ((v0.c0)-(NULL)), CAST(vt0.c0 AS TEXT)))) DESC, (- (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt1.c0)), (((v0.c0, vt0.c0, v0.c0))<((vt0.c0, vt1.c0, vt1.c0))), CAST(vt0.c0 AS REAL))) AND (((((v0.c0))>((''))), ((v0.c0)-(NULL)), CAST(vt0.c0 AS TEXT)))) DESC, (- (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt1.c0)), (((v0.c0, vt0.c0, v0.c0))<((vt0.c0, vt1.c0, vt1.c0))), CAST(vt0.c0 AS REAL))) AND (((((v0.c0))>((''))), ((v0.c0)-(NULL)), CAST(vt0.c0 AS TEXT)))) DESC, (- (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt1.c0)), (((v0.c0, vt0.c0, v0.c0))<((vt0.c0, vt1.c0, vt1.c0))), CAST(vt0.c0 AS REAL))) AND (((((v0.c0))>((''))), ((v0.c0)-(NULL)), CAST(vt0.c0 AS TEXT)))) DESC, (- (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(vt0.c0, vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(vt0.c0, vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(vt0.c0, vt0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD((vt1.c0 IN ()), 0.5117079401523661) CROSS JOIN v0 ON CASE WHEN v0.c0 THEN (NOT (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN CAST(v0.c0 AS TEXT) WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(v0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN SUBSTR(vt1.c0, vt1.c0) THEN QUOTE(vt0.c0) ELSE (vt0.c0 IN ()) END WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ('' IN ()) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((NULL)LIKE(vt0.c0)) THEN 0.9795543013181415 WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE BINARY  WHEN ('' IN ()) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((NULL)LIKE(vt0.c0)) THEN 0.9795543013181415 WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE (~ (v0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD((vt1.c0 IN ()), 0.5117079401523661) CROSS JOIN v0 ON CASE WHEN v0.c0 THEN (NOT (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN CAST(v0.c0 AS TEXT) WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(v0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN SUBSTR(vt1.c0, vt1.c0) THEN QUOTE(vt0.c0) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD((vt1.c0 IN ()), 0.5117079401523661) CROSS JOIN v0 ON CASE WHEN v0.c0 THEN (NOT (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN CAST(v0.c0 AS TEXT) WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(v0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN SUBSTR(vt1.c0, vt1.c0) THEN QUOTE(vt0.c0) ELSE (vt0.c0 IN ()) END WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ('' IN ()) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((NULL)LIKE(vt0.c0)) THEN 0.9795543013181415 WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE BINARY  WHEN ('' IN ()) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((NULL)LIKE(vt0.c0)) THEN 0.9795543013181415 WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE (~ (v0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD((vt1.c0 IN ()), 0.5117079401523661) CROSS JOIN v0 ON CASE WHEN v0.c0 THEN (NOT (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN CAST(v0.c0 AS TEXT) WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(v0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN SUBSTR(vt1.c0, vt1.c0) THEN QUOTE(vt0.c0) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD((vt1.c0 IN ()), 0.5117079401523661) CROSS JOIN v0 ON CASE WHEN v0.c0 THEN (NOT (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN CAST(v0.c0 AS TEXT) WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(v0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN SUBSTR(vt1.c0, vt1.c0) THEN QUOTE(vt0.c0) ELSE (vt0.c0 IN ()) END WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ('' IN ()) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((NULL)LIKE(vt0.c0)) THEN 0.9795543013181415 WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE (~ (v0.c0)) END);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY TRIM(DISTINCT ''), CASE WHEN ((vt1.c0)||(vt1.c0)) THEN (- (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)>>(vt1.c0)) WHEN (+ (vt1.c0)) THEN vt1.c0 END  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST, 0.8437907086175237  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ''), CASE WHEN ((vt1.c0)||(vt1.c0)) THEN (- (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)>>(vt1.c0)) WHEN (+ (vt1.c0)) THEN vt1.c0 END  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST, 0.8437907086175237  NULLS LAST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY TRIM(DISTINCT ''), CASE WHEN ((vt1.c0)||(vt1.c0)) THEN (- (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)>>(vt1.c0)) WHEN (+ (vt1.c0)) THEN vt1.c0 END  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST, 0.8437907086175237  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ''), CASE WHEN ((vt1.c0)||(vt1.c0)) THEN (- (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)>>(vt1.c0)) WHEN (+ (vt1.c0)) THEN vt1.c0 END  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST, 0.8437907086175237  NULLS LAST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY TRIM(DISTINCT ''), CASE WHEN ((vt1.c0)||(vt1.c0)) THEN (- (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)>>(vt1.c0)) WHEN (+ (vt1.c0)) THEN vt1.c0 END  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST, 0.8437907086175237  NULLS LAST;
SELECT ALL * FROM vt1, vt0, v0 WHERE (CAST(((NULL) NOT NULL) AS NUMERIC)) ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST, (((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), CAST(v0.c0 AS INTEGER), (NOT (v0.c0)))) AND ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(x'43c4')), ((v0.c0)>=(vt1.c0)), x'')));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST, (((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), CAST(v0.c0 AS INTEGER), (NOT (v0.c0)))) AND ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(x'43c4')), ((v0.c0)>=(vt1.c0)), x''))));
SELECT ALL * FROM vt1, vt0, v0 WHERE (CAST(((NULL) NOT NULL) AS NUMERIC)) ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST, (((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), CAST(v0.c0 AS INTEGER), (NOT (v0.c0)))) AND ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(x'43c4')), ((v0.c0)>=(vt1.c0)), x'')));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST, (((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), CAST(v0.c0 AS INTEGER), (NOT (v0.c0)))) AND ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(x'43c4')), ((v0.c0)>=(vt1.c0)), x''))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (vt1.c0);
SELECT * FROM v0, vt0, vt1 WHERE (CAST('445905822' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('445905822' AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (CAST('445905822' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('445905822' AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM vt0, v0 WHERE (UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((0.3269866252740323) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((0.3269866252740323) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((0.3269866252740323) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((0.3269866252740323) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt1, v0 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE ((+ ((+ (vt1.c0))))) ORDER BY CAST(((('209076721')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC), ((json_remove(vt0.c0, v0.c0)) BETWEEN (0.5180566745159751) AND (((((v0.c0)OR(vt0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN vt0 ON vt1.c0 ORDER BY CAST(((('209076721')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC), ((json_remove(vt0.c0, v0.c0)) BETWEEN (0.5180566745159751) AND (((((v0.c0)OR(vt0.c0)))AND(v0.c0)))));
SELECT * FROM vt1, v0 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE ((+ ((+ (vt1.c0))))) ORDER BY CAST(((('209076721')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC), ((json_remove(vt0.c0, v0.c0)) BETWEEN (0.5180566745159751) AND (((((v0.c0)OR(vt0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN vt0 ON vt1.c0 ORDER BY CAST(((('209076721')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC), ((json_remove(vt0.c0, v0.c0)) BETWEEN (0.5180566745159751) AND (((((v0.c0)OR(vt0.c0)))AND(v0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0))<=((HEX(vt0.c0))))) ORDER BY ((vt0.c0)GLOB((((vt0.c0, 0.9728540513373212, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((HEX(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB((((vt0.c0, 0.9728540513373212, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0))<=((HEX(vt0.c0))))) ORDER BY ((vt0.c0)GLOB((((vt0.c0, 0.9728540513373212, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((HEX(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB((((vt0.c0, 0.9728540513373212, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0))<=((HEX(vt0.c0))))) ORDER BY ((vt0.c0)GLOB((((vt0.c0, 0.9728540513373212, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (vt1.c0 IN ()) WHEN '' THEN (-1689462093 IN ()) WHEN ((vt1.c0)<<(vt1.c0)) THEN 180936125 WHEN (vt1.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (vt1.c0 IN ()) WHEN '' THEN (-1689462093 IN ()) WHEN ((vt1.c0)<<(vt1.c0)) THEN 180936125 WHEN (vt1.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (vt1.c0 IN ()) WHEN '' THEN (-1689462093 IN ()) WHEN ((vt1.c0)<<(vt1.c0)) THEN 180936125 WHEN (vt1.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (vt1.c0 IN ()) WHEN '' THEN (-1689462093 IN ()) WHEN ((vt1.c0)<<(vt1.c0)) THEN 180936125 WHEN (vt1.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (vt1.c0 IN ()) WHEN '' THEN (-1689462093 IN ()) WHEN ((vt1.c0)<<(vt1.c0)) THEN 180936125 WHEN (vt1.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN ((((0.5470454317070982) BETWEEN (v0.c0) AND (NULL)))) AND ((0.4969960110404432))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((0.5470454317070982) BETWEEN (v0.c0) AND (NULL)))) AND ((0.4969960110404432)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN ((((0.5470454317070982) BETWEEN (v0.c0) AND (NULL)))) AND ((0.4969960110404432))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((0.5470454317070982) BETWEEN (v0.c0) AND (NULL)))) AND ((0.4969960110404432)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (MIN(((x'') NOT NULL), CAST(vt0.c0 AS TEXT), (vt1.c0 IN ()), 0.6698609408913803 COLLATE NOCASE)) ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((x'') NOT NULL), CAST(vt0.c0 AS TEXT), (vt1.c0 IN ()), 0.6698609408913803 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (MIN(((x'') NOT NULL), CAST(vt0.c0 AS TEXT), (vt1.c0 IN ()), 0.6698609408913803 COLLATE NOCASE)) ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((x'') NOT NULL), CAST(vt0.c0 AS TEXT), (vt1.c0 IN ()), 0.6698609408913803 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt0, v0, vt1 WHERE (((LOWER(vt1.c0))<<(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0))<<(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE (((LOWER(vt1.c0))<<(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0))<<(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ('1k' IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ('1k' IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ('1k' IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ('1k' IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ('1k' IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (0xfffffffff790a87f))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (0xfffffffff790a87f))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (0xfffffffff790a87f))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (0xfffffffff790a87f))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (0xfffffffff790a87f))) NOTNULL));
SELECT ALL * FROM vt0, v0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN (vt0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(0.5334522441887152))) AND ((vt0.c0 IN ())))) ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((v0.c0 IN (vt0.c0, v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(0.5334522441887152))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((v0.c0 IN (vt0.c0, v0.c0))))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN (vt0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(0.5334522441887152))) AND ((vt0.c0 IN ())))) ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((v0.c0 IN (vt0.c0, v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(0.5334522441887152))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((v0.c0 IN (vt0.c0, v0.c0))))) DESC);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS(CAST(v0.c0 AS REAL)))) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS(CAST(v0.c0 AS REAL)))) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0)>>(0.10249459210946466)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)>>(0.10249459210946466))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0)>>(0.10249459210946466)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)>>(0.10249459210946466))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0)>>(0.10249459210946466)))));
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ()), ((((vt0.c0)>>(vt1.c0)))|('638275755'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ()), ((((vt0.c0)>>(vt1.c0)))|('638275755'))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ()), ((((vt0.c0)>>(vt1.c0)))|('638275755'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ()), ((((vt0.c0)>>(vt1.c0)))|('638275755'))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ()), ((((vt0.c0)>>(vt1.c0)))|('638275755'))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((CASE vt0.c0  WHEN '815364263' THEN v0.c0 END) BETWEEN ((~ (vt1.c0))) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '815364263' THEN v0.c0 END) BETWEEN ((~ (vt1.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((CASE vt0.c0  WHEN '815364263' THEN v0.c0 END) BETWEEN ((~ (vt1.c0))) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '815364263' THEN v0.c0 END) BETWEEN ((~ (vt1.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((CASE vt0.c0  WHEN '815364263' THEN v0.c0 END) BETWEEN ((~ (vt1.c0))) AND ((NOT (vt0.c0)))));
SELECT * FROM v0 WHERE (((v0.c0) IS FALSE)) ORDER BY ((('831716226' IN (v0.c0))) IS TRUE), ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE, ((((CASE WHEN v0.c0 THEN 'weekday' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN (v0.c0)))))OR(v0.c0));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((('831716226' IN (v0.c0))) IS TRUE), ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE, ((((CASE WHEN v0.c0 THEN 'weekday' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN (v0.c0)))))OR(v0.c0)));
SELECT * FROM v0 WHERE (((v0.c0) IS FALSE)) ORDER BY ((('831716226' IN (v0.c0))) IS TRUE), ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE, ((((CASE WHEN v0.c0 THEN 'weekday' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN (v0.c0)))))OR(v0.c0));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((('831716226' IN (v0.c0))) IS TRUE), ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE, ((((CASE WHEN v0.c0 THEN 'weekday' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN (v0.c0)))))OR(v0.c0)));
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0)))<=(((vt1.c0) BETWEEN ('584956760') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))<=(((vt1.c0) BETWEEN ('584956760') AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0)))<=(((vt1.c0) BETWEEN ('584956760') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))<=(((vt1.c0) BETWEEN ('584956760') AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0)))<=(((vt1.c0) BETWEEN ('584956760') AND (vt1.c0)))));
SELECT ALL * FROM v0, vt0, vt1 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY ((((x'')OR(v0.c0)))OR((+ (vt0.c0)))), (((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN 0.5903269355759677 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((x'')OR(v0.c0)))OR((+ (vt0.c0)))), (((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN 0.5903269355759677 END))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt1 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY ((((x'')OR(v0.c0)))OR((+ (vt0.c0)))), (((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN 0.5903269355759677 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((x'')OR(v0.c0)))OR((+ (vt0.c0)))), (((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN 0.5903269355759677 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY CAST('0.6898217347375649' AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST('0.6898217347375649' AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY CAST('0.6898217347375649' AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST('0.6898217347375649' AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((- (COALESCE(vt1.c0, v0.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (COALESCE(vt1.c0, v0.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((- (COALESCE(vt1.c0, v0.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (COALESCE(vt1.c0, v0.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((- (COALESCE(vt1.c0, v0.c0, vt1.c0, vt1.c0))));
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))IS(vt1.c0 COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END ASC  NULLS LAST, load_extension((+ (vt1.c0))), (((NULL))!=(((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0)))IS(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN NULL THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END ASC  NULLS LAST, load_extension((+ (vt1.c0))), (((NULL))<>(((NOT (NULL))))));
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))IS(vt1.c0 COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END ASC  NULLS LAST, load_extension((+ (vt1.c0))), (((NULL))!=(((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0)))IS(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN NULL THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END ASC  NULLS LAST, load_extension((+ (vt1.c0))), (((NULL))<>(((NOT (NULL))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (-1.126879567E9)) AS NUMERIC) ASC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (-1.126879567E9)) AS NUMERIC) ASC, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (-1.126879567E9)) AS NUMERIC) ASC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (-1.126879567E9)) AS NUMERIC) ASC, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (-1.126879567E9)) AS NUMERIC) ASC, vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.7934926607177704 END)<(vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.7934926607177704 END)<(vt1.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.7934926607177704 END)<(vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.7934926607177704 END)<(vt1.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.7934926607177704 END)<(vt1.c0 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (x'308a');
SELECT SUM(count) FROM (SELECT ALL ((x'308a') IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (x'308a');
SELECT SUM(count) FROM (SELECT ALL ((x'308a') IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (x'308a');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((LIKELY(v0.c0))OR(0.8923107420651702)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELY(v0.c0))OR(0.8923107420651702)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((LIKELY(v0.c0))OR(0.8923107420651702)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELY(v0.c0))OR(0.8923107420651702)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) ISNULL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON (((0.5821281183342522 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (vt1.c0)) WHERE ((((vt1.c0)||(vt1.c0)) IN ())) ORDER BY ((UPPER(v0.c0)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) ASC, ((vt1.c0) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)||(vt1.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((0.5821281183342522 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (vt1.c0)) ORDER BY ((UPPER(v0.c0)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) ASC, ((vt1.c0) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON (((0.5821281183342522 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (vt1.c0)) WHERE ((((vt1.c0)||(vt1.c0)) IN ())) ORDER BY ((UPPER(v0.c0)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) ASC, ((vt1.c0) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)||(vt1.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((0.5821281183342522 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (vt1.c0)) ORDER BY ((UPPER(v0.c0)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) ASC, ((vt1.c0) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON (((0.5821281183342522 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (vt1.c0)) WHERE ((((vt1.c0)||(vt1.c0)) IN ())) ORDER BY ((UPPER(v0.c0)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) ASC, ((vt1.c0) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)<=(v0.c0)))<>((((v0.c0))<((NULL)))))) ORDER BY (((v0.c0, -1.779392509E9, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0, 'II9y')) AND (((~ (v0.c0)), ((((((((0.8390359830906529)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(v0.c0)))!=((((v0.c0))<((NULL)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, -1.779392509E9, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0, 'II9y')) AND (((~ (v0.c0)), ((((((((0.8390359830906529)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)<=(v0.c0)))<>((((v0.c0))<((NULL)))))) ORDER BY (((v0.c0, -1.779392509E9, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0, 'II9y')) AND (((~ (v0.c0)), ((((((((0.8390359830906529)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(v0.c0)))!=((((v0.c0))<((NULL)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, -1.779392509E9, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0, 'II9y')) AND (((~ (v0.c0)), ((((((((0.8390359830906529)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (SUBSTR(vt0.c0 COLLATE NOCASE, ((v0.c0)<<(vt0.c0)))) ORDER BY TRIM(DISTINCT v0.c0) COLLATE RTRIM ASC, CAST(NULL AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(vt0.c0 COLLATE NOCASE, ((v0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY TRIM(DISTINCT v0.c0) COLLATE RTRIM ASC, CAST(NULL AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (SUBSTR(vt0.c0 COLLATE NOCASE, ((v0.c0)<<(vt0.c0)))) ORDER BY TRIM(DISTINCT v0.c0) COLLATE RTRIM ASC, CAST(NULL AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(vt0.c0 COLLATE NOCASE, ((v0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY TRIM(DISTINCT v0.c0) COLLATE RTRIM ASC, CAST(NULL AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (QUOTE(((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (QUOTE(((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (QUOTE(((vt0.c0)|(vt0.c0))));
SELECT ALL * FROM vt1, v0, vt0 WHERE ((((vt1.c0 IN (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (v0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE ((((vt1.c0 IN (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (v0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((UPPER(vt1.c0))||(v0.c0 COLLATE RTRIM)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((UPPER(vt1.c0))||(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((UPPER(vt1.c0))||(v0.c0 COLLATE RTRIM)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((UPPER(vt1.c0))||(v0.c0 COLLATE RTRIM)));
SELECT * FROM vt1 WHERE ((+ ((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ ((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ ((((vt1.c0))>((vt1.c0))))));
SELECT ALL * FROM v0, vt1 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))AND((((v0.c0)) BETWEEN ((vt1.c0)) AND (('1171308601'))))))AND(NULL))) ORDER BY x'8eac' ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN (v0.c0, v0.c0)))AND((((v0.c0)) BETWEEN ((vt1.c0)) AND (('1171308601'))))))AND(NULL))) IS TRUE)  as count FROM v0, vt1 ORDER BY x'8eac' ASC);
SELECT ALL * FROM v0, vt1 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))AND((((v0.c0)) BETWEEN ((vt1.c0)) AND (('1171308601'))))))AND(NULL))) ORDER BY x'8eac' ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN (v0.c0, v0.c0)))AND((((v0.c0)) BETWEEN ((vt1.c0)) AND (('1171308601'))))))AND(NULL))) IS TRUE)  as count FROM v0, vt1 ORDER BY x'8eac' ASC);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((vt1.c0)/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)/(vt0.c0))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((vt1.c0)/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)/(vt0.c0))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((vt1.c0)/(vt0.c0)));
SELECT * FROM vt1 NOT INDEXED, v0 WHERE ((+ (v0.c0 COLLATE NOCASE))) ORDER BY ABS(DISTINCT 0Xffffffff8f62d04a) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0 ORDER BY ABS(DISTINCT 0xffffffff8f62d04a) DESC  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED, v0 WHERE ((+ (v0.c0 COLLATE NOCASE))) ORDER BY ABS(DISTINCT 0Xffffffff8f62d04a) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0 ORDER BY ABS(DISTINCT 0xffffffff8f62d04a) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (CASE ((((vt0.c0)AND(v0.c0)))AND(v0.c0))  WHEN (((0.995588410429307, v0.c0, vt0.c0))>=((-951573482, vt1.c0, '584956760'))) THEN ((((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(v0.c0)))AND(v0.c0))  WHEN (((0.995588410429307, v0.c0, vt0.c0))>=((-951573482, vt1.c0, '584956760'))) THEN ((((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (CASE ((((vt0.c0)AND(v0.c0)))AND(v0.c0))  WHEN (((0.995588410429307, v0.c0, vt0.c0))>=((-951573482, vt1.c0, '584956760'))) THEN ((((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(v0.c0)))AND(v0.c0))  WHEN (((0.995588410429307, v0.c0, vt0.c0))>=((-951573482, vt1.c0, '584956760'))) THEN ((((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON vt1.c0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (UNICODE(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (UNICODE(v0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (UNICODE(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (UNICODE(v0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)/(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)/(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)/(vt1.c0)))));
SELECT COUNT(*) FROM v0, vt1 WHERE (((CAST(vt1.c0 AS REAL))<<(DATE(v0.c0, v0.c0, NULL)))) ORDER BY (((0.3963859505300652)) NOT BETWEEN ((((v0.c0)-(vt1.c0)))) AND (((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))<<(DATE(v0.c0, v0.c0, NULL)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((0.3963859505300652)) NOT BETWEEN ((((v0.c0)-(vt1.c0)))) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM v0, vt1 WHERE (((CAST(vt1.c0 AS REAL))<<(DATE(v0.c0, v0.c0, NULL)))) ORDER BY (((0.3963859505300652)) NOT BETWEEN ((((v0.c0)-(vt1.c0)))) AND (((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))<<(DATE(v0.c0, v0.c0, NULL)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((0.3963859505300652)) NOT BETWEEN ((((v0.c0)-(vt1.c0)))) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>=((vt1.c0))))) AND (((((x''))>((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>=((vt1.c0))))) AND (((((x''))>((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>=((vt1.c0))))) AND (((((x''))>((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>=((vt1.c0))))) AND (((((x''))>((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>=((vt1.c0))))) AND (((((x''))>((vt1.c0)))))));
SELECT COUNT(*) FROM v0 WHERE ((((x'')) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)/(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)/(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((x'')) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)/(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)/(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)LIKE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c0)LIKE(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)LIKE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c0)LIKE(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)LIKE(vt1.c0))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((x'e2e07b92') NOT NULL) WHERE (((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) ORDER BY ((((json_insert(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))OR(json_valid(vt0.c0))))OR((((x'c24b', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0))<>((vt1.c0))) IN ()), ((((vt0.c0) IS FALSE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((x'e2e07b92') NOT NULL) ORDER BY ((((json_insert(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))OR(json_valid(vt0.c0))))OR((((x'c24b', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0))!=((vt1.c0))) IN ()), ((((vt0.c0) IS FALSE)) NOT NULL));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((x'e2e07b92') NOT NULL) WHERE (((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) ORDER BY ((((json_insert(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))OR(json_valid(vt0.c0))))OR((((x'c24b', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0))<>((vt1.c0))) IN ()), ((((vt0.c0) IS FALSE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((x'e2e07b92') NOT NULL) ORDER BY ((((json_insert(vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))OR(json_valid(vt0.c0))))OR((((x'c24b', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0))!=((vt1.c0))) IN ()), ((((vt0.c0) IS FALSE)) NOT NULL));
SELECT ALL * FROM vt0, vt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt1.c0)) WHEN ((NULL)==(vt1.c0)) THEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt1.c0)) WHEN ((NULL)==(vt1.c0)) THEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt1.c0)) WHEN ((NULL)==(vt1.c0)) THEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt1.c0)) WHEN ((NULL)==(vt1.c0)) THEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt1.c0)) WHEN ((NULL)==(vt1.c0)) THEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((LOWER(vt1.c0))/(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0))/(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((LOWER(vt1.c0))/(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0))/(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((LOWER(vt1.c0))/(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (TRIM(((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)), NULLIF(x'', vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)), NULLIF(x'', vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (TRIM(((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)), NULLIF(x'', vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)), NULLIF(x'', vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (TRIM(((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)), NULLIF(x'', vt0.c0)));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN vt1 ON '' WHERE ((((vt1.c0 COLLATE BINARY, ((v0.c0)<<(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))!=((x'', vt1.c0, (((v0.c0, vt1.c0, 663799955))<=((vt1.c0, v0.c0, vt1.c0))))))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE BINARY, ((v0.c0)<<(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))<>((x'', vt1.c0, (((v0.c0, vt1.c0, 663799955))<=((vt1.c0, v0.c0, vt1.c0))))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN vt1 ON '' ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN vt1 ON '' WHERE ((((vt1.c0 COLLATE BINARY, ((v0.c0)<<(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))!=((x'', vt1.c0, (((v0.c0, vt1.c0, 663799955))<=((vt1.c0, v0.c0, vt1.c0))))))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE BINARY, ((v0.c0)<<(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))<>((x'', vt1.c0, (((v0.c0, vt1.c0, 663799955))<=((vt1.c0, v0.c0, vt1.c0))))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN vt1 ON '' ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((INSTR(vt0.c0, v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((INSTR(vt0.c0, v0.c0) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((INSTR(vt0.c0, v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((INSTR(vt0.c0, v0.c0) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((INSTR(vt0.c0, v0.c0) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, vt1, v0 WHERE (MIN(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), x'')) ORDER BY (((((vt1.c0)-(vt0.c0))))<((((((x'')OR(vt0.c0)))AND(v0.c0))))), JULIANDAY(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 END, (- (v0.c0)), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), x'')) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((((vt1.c0)-(vt0.c0))))<((((((x'')OR(vt0.c0)))AND(v0.c0))))), JULIANDAY(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 END, (- (v0.c0)), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0 WHERE (MIN(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), x'')) ORDER BY (((((vt1.c0)-(vt0.c0))))<((((((x'')OR(vt0.c0)))AND(v0.c0))))), JULIANDAY(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 END, (- (v0.c0)), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), x'')) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((((vt1.c0)-(vt0.c0))))<((((((x'')OR(vt0.c0)))AND(v0.c0))))), JULIANDAY(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 END, (- (v0.c0)), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT * FROM v0, vt0 WHERE ((x'3e1f' IN (4.85471682E8, v0.c0 COLLATE NOCASE))) ORDER BY ((-9223372036854775808 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 'mn	')))) AND (CAST(v0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'3e1f' IN (4.85471682E8, v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((-9223372036854775808 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 'mn	')))) AND (CAST(v0.c0 AS BLOB))) ASC);
SELECT * FROM v0, vt0 WHERE ((x'3e1f' IN (4.85471682E8, v0.c0 COLLATE NOCASE))) ORDER BY ((-9223372036854775808 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 'mn	')))) AND (CAST(v0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'3e1f' IN (4.85471682E8, v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((-9223372036854775808 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 'mn	')))) AND (CAST(v0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c0 AS NUMERIC)))<>((v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS NUMERIC)))<>((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c0 AS NUMERIC)))<>((v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS NUMERIC)))<>((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(NULL AS INTEGER)) ORDER BY vt1.c0 DESC  NULLS LAST, (NOT (((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY vt1.c0 DESC  NULLS LAST, (NOT (((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(NULL AS INTEGER)) ORDER BY vt1.c0 DESC  NULLS LAST, (NOT (((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY vt1.c0 DESC  NULLS LAST, (NOT (((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(NULL AS INTEGER)) ORDER BY vt1.c0 DESC  NULLS LAST, (NOT (((vt1.c0) ISNULL)));
SELECT ALL * FROM vt1, v0, vt0 WHERE (CAST(((vt1.c0)<=(vt0.c0)) AS NUMERIC)) ORDER BY 'Hi\i' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, vt0 NOT INDEXED ORDER BY 'Hi\i' ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (CAST(((vt1.c0)<=(vt0.c0)) AS NUMERIC)) ORDER BY 'Hi\i' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, vt0 NOT INDEXED ORDER BY 'Hi\i' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))<(CASE 0.49656692254791246  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt1.c0))))<(CASE 0.49656692254791246  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))<(CASE 0.49656692254791246  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt1.c0))))<(CASE 0.49656692254791246  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))<(CASE 0.49656692254791246  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE ((0.27291895911626785 IN (((v0.c0) NOT NULL), v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((0.27291895911626785 IN (((v0.c0) NOT NULL), v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((0.27291895911626785 IN (((v0.c0) NOT NULL), v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((0.27291895911626785 IN (((v0.c0) NOT NULL), v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT ALL * FROM vt1, vt0, v0 WHERE (x'47bb') ORDER BY (- (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'47bb') IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (- (vt0.c0)) ASC);
SELECT ALL * FROM vt1, vt0, v0 WHERE (x'47bb') ORDER BY (- (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'47bb') IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (- (vt0.c0)) ASC);
SELECT ALL * FROM vt1, vt0, v0 WHERE (x'47bb') ORDER BY (- (vt0.c0)) ASC;
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(0.4175860030888605)))AND(v0.c0)) COLLATE BINARY WHERE (CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) ELSE ((v0.c0)+(vt1.c0)) END) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) ELSE ((v0.c0)+(vt1.c0)) END) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(0.4175860030888605)))AND(v0.c0)) COLLATE BINARY ORDER BY CHANGES() DESC);
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(0.4175860030888605)))AND(v0.c0)) COLLATE BINARY WHERE (CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) ELSE ((v0.c0)+(vt1.c0)) END) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) ELSE ((v0.c0)+(vt1.c0)) END) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(0.4175860030888605)))AND(v0.c0)) COLLATE BINARY ORDER BY CHANGES() DESC);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.28451078697839416)))-(NULL COLLATE NOCASE))) ORDER BY v0.c0, ((((v0.c0)GLOB(v0.c0)))GLOB(((((vt0.c0)AND(v0.c0)))AND(0.333290164045299))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.28451078697839416)))-(NULL COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY v0.c0, ((((v0.c0)GLOB(v0.c0)))GLOB(((((vt0.c0)AND(v0.c0)))AND(0.333290164045299)))));
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.28451078697839416)))-(NULL COLLATE NOCASE))) ORDER BY v0.c0, ((((v0.c0)GLOB(v0.c0)))GLOB(((((vt0.c0)AND(v0.c0)))AND(0.333290164045299))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.28451078697839416)))-(NULL COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY v0.c0, ((((v0.c0)GLOB(v0.c0)))GLOB(((((vt0.c0)AND(v0.c0)))AND(0.333290164045299)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY vt1.c0;
SELECT COUNT(*) FROM v0, vt0 WHERE (load_extension(((v0.c0)>>(vt0.c0)))) ORDER BY (((vt0.c0))<((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((v0.c0)>>(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0))<((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (load_extension(((v0.c0)>>(vt0.c0)))) ORDER BY (((vt0.c0))<((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((v0.c0)>>(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0))<((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0 IN ())))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) ORDER BY (LTRIM(v0.c0, v0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ())))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY (LTRIM(v0.c0, v0.c0) IN ())  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0 IN ())))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) ORDER BY (LTRIM(v0.c0, v0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ())))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY (LTRIM(v0.c0, v0.c0) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) BETWEEN ((((2.80887504E8))<>((vt1.c0)))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((~ (vt1.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN ((((2.80887504E8))!=((vt1.c0)))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt1.c0))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) BETWEEN ((((2.80887504E8))<>((vt1.c0)))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((~ (vt1.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN ((((2.80887504E8))!=((vt1.c0)))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt1.c0))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) BETWEEN ((((2.80887504E8))<>((vt1.c0)))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((~ (vt1.c0))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt1.c0)>=(vt1.c0)) IN ())) ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0)>(v0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)), ((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0)>(v0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)), ((vt0.c0)+(vt0.c0))))));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt1.c0)>=(vt1.c0)) IN ())) ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0)>(v0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)), ((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0)>(v0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)), ((vt0.c0)+(vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((+ (vt0.c0)));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((vt1.c0)!=(0Xffffffffaabaf096)))!=(v0.c0)) FULL OUTER JOIN vt1 ON vt0.c0 WHERE (LOWER('')) ORDER BY (+ (NULL)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((LOWER('')) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((vt1.c0)<>(0Xffffffffaabaf096)))<>(v0.c0)) FULL OUTER JOIN vt1 ON vt0.c0 ORDER BY (+ (NULL)) COLLATE RTRIM);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((vt1.c0)!=(0Xffffffffaabaf096)))!=(v0.c0)) FULL OUTER JOIN vt1 ON vt0.c0 WHERE (LOWER('')) ORDER BY (+ (NULL)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((LOWER('')) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((vt1.c0)<>(0Xffffffffaabaf096)))<>(v0.c0)) FULL OUTER JOIN vt1 ON vt0.c0 ORDER BY (+ (NULL)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON json_extract(((((((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(v0.c0)), ((v0.c0) IS FALSE), CAST(v0.c0 AS REAL), LOWER(v0.c0), NULL, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) WHERE (CASE ((((v0.c0)OR('')))AND(vt1.c0))  WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE x'' END) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR('')))AND(vt1.c0))  WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE x'' END) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON json_extract(((((((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(v0.c0)), ((v0.c0) IS FALSE), CAST(v0.c0 AS REAL), LOWER(v0.c0), NULL, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON json_extract(((((((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(v0.c0)), ((v0.c0) IS FALSE), CAST(v0.c0 AS REAL), LOWER(v0.c0), NULL, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) WHERE (CASE ((((v0.c0)OR('')))AND(vt1.c0))  WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE x'' END) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR('')))AND(vt1.c0))  WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE x'' END) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON json_extract(((((((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(v0.c0)), ((v0.c0) IS FALSE), CAST(v0.c0 AS REAL), LOWER(v0.c0), NULL, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)%(NULL)))AND(((x'58a63b9f') BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>=(v0.c0))))) ORDER BY IFNULL(UNLIKELY(v0.c0), ((v0.c0)>(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)%(NULL)))AND(((x'58a63b9f') BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(UNLIKELY(v0.c0), ((v0.c0)>(v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)%(NULL)))AND(((x'58a63b9f') BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>=(v0.c0))))) ORDER BY IFNULL(UNLIKELY(v0.c0), ((v0.c0)>(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)%(NULL)))AND(((x'58a63b9f') BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(UNLIKELY(v0.c0), ((v0.c0)>(v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((v0.c0)&(v0.c0)) COLLATE BINARY) ORDER BY HEX(((v0.c0)<>(vt1.c0))), (((v0.c0, vt0.c0, vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((vt0.c0)>(vt1.c0)), 0.5822365537239411, CAST(v0.c0 AS REAL), vt1.c0)) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), TRIM(v0.c0, v0.c0), x''))) DESC  NULLS LAST, 984687621;
SELECT SUM(count) FROM (SELECT ((((v0.c0)&(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY HEX(((v0.c0)!=(vt1.c0))), (((v0.c0, vt0.c0, vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((vt0.c0)>(vt1.c0)), 0.5822365537239411, CAST(v0.c0 AS REAL), vt1.c0)) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), TRIM(v0.c0, v0.c0), x''))) DESC  NULLS LAST, 984687621);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((v0.c0)&(v0.c0)) COLLATE BINARY) ORDER BY HEX(((v0.c0)<>(vt1.c0))), (((v0.c0, vt0.c0, vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((vt0.c0)>(vt1.c0)), 0.5822365537239411, CAST(v0.c0 AS REAL), vt1.c0)) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), TRIM(v0.c0, v0.c0), x''))) DESC  NULLS LAST, 984687621;
SELECT SUM(count) FROM (SELECT ((((v0.c0)&(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY HEX(((v0.c0)!=(vt1.c0))), (((v0.c0, vt0.c0, vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), ((vt0.c0)>(vt1.c0)), 0.5822365537239411, CAST(v0.c0 AS REAL), vt1.c0)) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), TRIM(v0.c0, v0.c0), x''))) DESC  NULLS LAST, 984687621);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY '-1848774872', TYPEOF(vt1.c0) DESC, (((vt1.c0, vt1.c0, '1036053369', vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)<('-1276831885')), (vt1.c0 IN ()), ((vt1.c0)>(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), 0xffffffffb0dc7868, UPPER(DISTINCT vt1.c0), ((vt1.c0) NOT NULL), ((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-1848774872', TYPEOF(vt1.c0) DESC, (((vt1.c0, vt1.c0, '1036053369', vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)<('-1276831885')), (vt1.c0 IN ()), ((vt1.c0)>(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), 0Xffffffffb0dc7868, UPPER(DISTINCT vt1.c0), ((vt1.c0) NOT NULL), ((vt1.c0) IS TRUE)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY '-1848774872', TYPEOF(vt1.c0) DESC, (((vt1.c0, vt1.c0, '1036053369', vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)<('-1276831885')), (vt1.c0 IN ()), ((vt1.c0)>(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), 0xffffffffb0dc7868, UPPER(DISTINCT vt1.c0), ((vt1.c0) NOT NULL), ((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-1848774872', TYPEOF(vt1.c0) DESC, (((vt1.c0, vt1.c0, '1036053369', vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)<('-1276831885')), (vt1.c0 IN ()), ((vt1.c0)>(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), 0Xffffffffb0dc7868, UPPER(DISTINCT vt1.c0), ((vt1.c0) NOT NULL), ((vt1.c0) IS TRUE)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY '-1848774872', TYPEOF(vt1.c0) DESC, (((vt1.c0, vt1.c0, '1036053369', vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)<('-1276831885')), (vt1.c0 IN ()), ((vt1.c0)>(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), 0xffffffffb0dc7868, UPPER(DISTINCT vt1.c0), ((vt1.c0) NOT NULL), ((vt1.c0) IS TRUE))));
SELECT * FROM vt0, vt1 WHERE (json_object(((vt0.c0)IS(vt1.c0)), ((vt1.c0)<<('JiY㵱9m^5')))) ORDER BY (((((((vt0.c0))<=((vt0.c0))))OR(NULL)))AND(x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object(((vt0.c0)IS(vt1.c0)), ((vt1.c0)<<('JiY㵱9m^5')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((vt0.c0))<=((vt0.c0))))OR(NULL)))AND(x'')) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (json_object(((vt0.c0)IS(vt1.c0)), ((vt1.c0)<<('JiY㵱9m^5')))) ORDER BY (((((((vt0.c0))<=((vt0.c0))))OR(NULL)))AND(x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object(((vt0.c0)IS(vt1.c0)), ((vt1.c0)<<('JiY㵱9m^5')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((vt0.c0))<=((vt0.c0))))OR(NULL)))AND(x'')) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON (('U3ZBO')==(CAST(vt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE WHERE ('7Rg');
SELECT SUM(count) FROM (SELECT ALL (('7Rg') IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON (('U3ZBO')==(CAST(vt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON (('U3ZBO')==(CAST(vt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE WHERE ('7Rg');
SELECT SUM(count) FROM (SELECT ALL (('7Rg') IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON (('U3ZBO')==(CAST(vt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (UNLIKELY('\V*IB''GSf')) ORDER BY (((NOT (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY('\V*IB''GSf')) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (((NOT (vt0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (UNLIKELY('\V*IB''GSf')) ORDER BY (((NOT (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY('\V*IB''GSf')) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (((NOT (vt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))%('-2002471146')) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))%('-2002471146')) ASC);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))%('-2002471146')) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))%('-2002471146')) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY ((('')) NOT BETWEEN ((((vt0.c0)&(vt0.c0)))) AND ((x'')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('')) NOT BETWEEN ((((vt0.c0)&(vt0.c0)))) AND ((x''))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY ((('')) NOT BETWEEN ((((vt0.c0)&(vt0.c0)))) AND ((x'')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('')) NOT BETWEEN ((((vt0.c0)&(vt0.c0)))) AND ((x''))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY ((('')) NOT BETWEEN ((((vt0.c0)&(vt0.c0)))) AND ((x'')));
SELECT ALL * FROM v0, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN v0 WHERE ('Q G\nꄳk') ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (('Q G\nꄳk') IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN v0 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN v0 WHERE ('Q G\nꄳk') ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (('Q G\nꄳk') IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN v0 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (CASE NULL  WHEN (vt1.c0 IN ()) THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (vt1.c0 IN ()) THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE NULL  WHEN (vt1.c0 IN ()) THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (vt1.c0 IN ()) THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE NULL  WHEN (vt1.c0 IN ()) THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END);
SELECT * FROM vt0 WHERE (CAST('8.' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('8.' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST('8.' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('8.' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST('8.' AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT * FROM vt0, v0 NOT INDEXED WHERE ((((((v0.c0 IN ()))AND('833678343')))AND(((v0.c0)OR(v0.c0))))) ORDER BY ((((+ (v0.c0))))<>((CAST(v0.c0 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND('833678343')))AND(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY ((((+ (v0.c0))))!=((CAST(v0.c0 AS TEXT))))  NULLS LAST);
SELECT * FROM vt0, v0 NOT INDEXED WHERE ((((((v0.c0 IN ()))AND('833678343')))AND(((v0.c0)OR(v0.c0))))) ORDER BY ((((+ (v0.c0))))<>((CAST(v0.c0 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND('833678343')))AND(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY ((((+ (v0.c0))))!=((CAST(v0.c0 AS TEXT))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(((v0.c0)=(v0.c0)) AS INTEGER) INNER JOIN v0 ON ((v0.c0)<=(vt1.c0)) COLLATE NOCASE WHERE (CAST(CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE v0.c0 END AS NUMERIC)) ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((v0.c0)=(v0.c0)) AS INTEGER) INNER JOIN v0 ON ((v0.c0)<=(vt1.c0)) COLLATE NOCASE ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(((v0.c0)=(v0.c0)) AS INTEGER) INNER JOIN v0 ON ((v0.c0)<=(vt1.c0)) COLLATE NOCASE WHERE (CAST(CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE v0.c0 END AS NUMERIC)) ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt1.c0 THEN NULL ELSE v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((v0.c0)=(v0.c0)) AS INTEGER) INNER JOIN v0 ON ((v0.c0)<=(vt1.c0)) COLLATE NOCASE ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((HEX(v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END)))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((HEX(v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, vt1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((HEX(v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END)))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((HEX(v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, vt1.c0 ASC  NULLS LAST);
SELECT * FROM vt1, vt0, v0 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1, vt0, v0 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(DISTINCT v0.c0))>=(CAST(v0.c0 AS BLOB)))) ORDER BY (((((v0.c0)!=(v0.c0))))<=((CAST(v0.c0 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT v0.c0))>=(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)<>(v0.c0))))<=((CAST(v0.c0 AS TEXT)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(DISTINCT v0.c0))>=(CAST(v0.c0 AS BLOB)))) ORDER BY (((((v0.c0)!=(v0.c0))))<=((CAST(v0.c0 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT v0.c0))>=(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)<>(v0.c0))))<=((CAST(v0.c0 AS TEXT)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (UNLIKELY(CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (UNLIKELY(CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (UNLIKELY(CAST(vt1.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((((vt1.c0))!=((v0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<>((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((((vt1.c0))!=((v0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<>((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM vt0, v0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((vt0.c0))!=((vt0.c0))), '-647194424'))>=(((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (- (0Xffffffffe7175d8d))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((vt0.c0))<>((vt0.c0))), '-647194424'))>=(((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (- (0Xffffffffe7175d8d)))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((vt0.c0))!=((vt0.c0))), '-647194424'))>=(((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (- (0Xffffffffe7175d8d))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((vt0.c0))<>((vt0.c0))), '-647194424'))>=(((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (- (0Xffffffffe7175d8d)))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((vt1.c0)IS(NULL)))*((NOT (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS(NULL)))*((NOT (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((vt1.c0)IS(NULL)))*((NOT (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS(NULL)))*((NOT (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((vt1.c0)IS(NULL)))*((NOT (vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE) INNER JOIN v0 ON (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN (((vt1.c0)>=(v0.c0)))) WHERE (CASE (((vt1.c0, x'', vt0.c0))!=((v0.c0, v0.c0, vt1.c0)))  WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END ELSE CASE WHEN NULL THEN vt1.c0 END END) ORDER BY ((((vt1.c0)LIKE(v0.c0))) IS TRUE) ASC  NULLS LAST, ((((- (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0, x'', vt0.c0))!=((v0.c0, v0.c0, vt1.c0)))  WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END ELSE CASE WHEN NULL THEN vt1.c0 END END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE) INNER JOIN v0 ON (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN (((vt1.c0)>=(v0.c0)))) ORDER BY ((((vt1.c0)LIKE(v0.c0))) IS TRUE) ASC  NULLS LAST, ((((- (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE) INNER JOIN v0 ON (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN (((vt1.c0)>=(v0.c0)))) WHERE (CASE (((vt1.c0, x'', vt0.c0))!=((v0.c0, v0.c0, vt1.c0)))  WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END ELSE CASE WHEN NULL THEN vt1.c0 END END) ORDER BY ((((vt1.c0)LIKE(v0.c0))) IS TRUE) ASC  NULLS LAST, ((((- (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0, x'', vt0.c0))!=((v0.c0, v0.c0, vt1.c0)))  WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END ELSE CASE WHEN NULL THEN vt1.c0 END END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE) INNER JOIN v0 ON (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN (((vt1.c0)>=(v0.c0)))) ORDER BY ((((vt1.c0)LIKE(v0.c0))) IS TRUE) ASC  NULLS LAST, ((((- (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)%(NULL)))) AND (('-1290717819')))) ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) ELSE v0.c0 COLLATE RTRIM END, CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)%(NULL)))) AND (('-1290717819')))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) ELSE v0.c0 COLLATE RTRIM END, CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)%(NULL)))) AND (('-1290717819')))) ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) ELSE v0.c0 COLLATE RTRIM END, CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)%(NULL)))) AND (('-1290717819')))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) ELSE v0.c0 COLLATE RTRIM END, CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN vt1 ON LIKELY(DISTINCT ((((v0.c0)AND(v0.c0)))AND('Als,껙*'))) WHERE (((TRIM(DISTINCT vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)LIKE(vt0.c0))))) ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON LIKELY(DISTINCT ((((v0.c0)AND(v0.c0)))AND('Als,껙*'))) ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN vt1 ON LIKELY(DISTINCT ((((v0.c0)AND(v0.c0)))AND('Als,껙*'))) WHERE (((TRIM(DISTINCT vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)LIKE(vt0.c0))))) ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON LIKELY(DISTINCT ((((v0.c0)AND(v0.c0)))AND('Als,껙*'))) ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN vt1 ON LIKELY(DISTINCT ((((v0.c0)AND(v0.c0)))AND('Als,껙*'))) WHERE (((TRIM(DISTINCT vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)LIKE(vt0.c0))))) ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON UNLIKELY('1096200430') CROSS JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER) WHERE ((((vt1.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND (((('-552549353')GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND (((('-552549353')GLOB(v0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON UNLIKELY('1096200430') CROSS JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON UNLIKELY('1096200430') CROSS JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER) WHERE ((((vt1.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND (((('-552549353')GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND (((('-552549353')GLOB(v0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON UNLIKELY('1096200430') CROSS JOIN v0 ON CAST(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER));
SELECT COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)))) AND (((+ (vt1.c0)), v0.c0 COLLATE NOCASE, '?Ib鍿'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)))) AND (((+ (vt1.c0)), v0.c0 COLLATE NOCASE, '?Ib鍿')))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)))) AND (((+ (vt1.c0)), v0.c0 COLLATE NOCASE, '?Ib鍿'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)))) AND (((+ (vt1.c0)), v0.c0 COLLATE NOCASE, '?Ib鍿')))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY json(vt1.c0) COLLATE NOCASE  NULLS FIRST, CAST((+ (vt1.c0)) AS NUMERIC) DESC, CAST(CAST(x'b165' AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY json(vt1.c0) COLLATE NOCASE  NULLS FIRST, CAST((+ (vt1.c0)) AS NUMERIC) DESC, CAST(CAST(x'b165' AS REAL) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY json(vt1.c0) COLLATE NOCASE  NULLS FIRST, CAST((+ (vt1.c0)) AS NUMERIC) DESC, CAST(CAST(x'b165' AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY json(vt1.c0) COLLATE NOCASE  NULLS FIRST, CAST((+ (vt1.c0)) AS NUMERIC) DESC, CAST(CAST(x'b165' AS REAL) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))==((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))==((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))==((vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))%((NULL IN ())))) ORDER BY (+ (((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))AND('445905822')))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))%((NULL IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))AND('445905822')))OR(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))%((NULL IN ())))) ORDER BY (+ (((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))AND('445905822')))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))%((NULL IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))AND('445905822')))OR(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))%((NULL IN ())))) ORDER BY (+ (((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))AND('445905822')))OR(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE (CASE NULLIF(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0))>((vt0.c0))) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.9156121357541929) WHEN vt0.c0 COLLATE RTRIM THEN (NULL IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0))>((vt0.c0))) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.9156121357541929) WHEN vt0.c0 COLLATE RTRIM THEN (NULL IN (vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE (CASE NULLIF(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0))>((vt0.c0))) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.9156121357541929) WHEN vt0.c0 COLLATE RTRIM THEN (NULL IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0))>((vt0.c0))) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.9156121357541929) WHEN vt0.c0 COLLATE RTRIM THEN (NULL IN (vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM vt0, vt1, v0 WHERE (((2.09076721E8 COLLATE BINARY)&(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((2.09076721E8 COLLATE BINARY)&(x''))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((2.09076721E8 COLLATE BINARY)&(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((2.09076721E8 COLLATE BINARY)&(x''))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((2.09076721E8 COLLATE BINARY)&(x'')));
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON (CAST(vt0.c0 AS TEXT) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE vt1.c0 COLLATE NOCASE END WHERE ('珺LF,kY#') ORDER BY (((v0.c0)<(vt0.c0)) IN ()) ASC, ((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('珺LF,kY#') IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (CAST(vt0.c0 AS TEXT) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE vt1.c0 COLLATE NOCASE END ORDER BY (((v0.c0)<(vt0.c0)) IN ()) ASC, ((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON (CAST(vt0.c0 AS TEXT) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE vt1.c0 COLLATE NOCASE END WHERE ('珺LF,kY#') ORDER BY (((v0.c0)<(vt0.c0)) IN ()) ASC, ((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('珺LF,kY#') IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (CAST(vt0.c0 AS TEXT) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE vt1.c0 COLLATE NOCASE END ORDER BY (((v0.c0)<(vt0.c0)) IN ()) ASC, ((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON (CAST(vt0.c0 AS TEXT) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((vt1.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE vt1.c0 COLLATE NOCASE END WHERE ('珺LF,kY#') ORDER BY (((v0.c0)<(vt0.c0)) IN ()) ASC, ((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0 WHERE ((((- (0.5365949399582022))) BETWEEN (((NULL)IS NOT(vt1.c0))) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (0.5365949399582022))) BETWEEN (((NULL)IS NOT(vt1.c0))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE ((((- (0.5365949399582022))) BETWEEN (((NULL)IS NOT(vt1.c0))) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (0.5365949399582022))) BETWEEN (((NULL)IS NOT(vt1.c0))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE ((((- (0.5365949399582022))) BETWEEN (((NULL)IS NOT(vt1.c0))) AND ((- (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((((v0.c0) IS FALSE), CAST(v0.c0 AS NUMERIC), ((vt0.c0) IS TRUE)))=((0.8137236218328385, CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) ORDER BY CAST(json_extract(vt0.c0, vt0.c0) AS REAL) ASC  NULLS FIRST, 1696040838 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) IS FALSE), CAST(v0.c0 AS NUMERIC), ((vt0.c0) IS TRUE)))=((0.8137236218328385, CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST(json_extract(vt0.c0, vt0.c0) AS REAL) ASC  NULLS FIRST, 1696040838 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((((v0.c0) IS FALSE), CAST(v0.c0 AS NUMERIC), ((vt0.c0) IS TRUE)))=((0.8137236218328385, CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) ORDER BY CAST(json_extract(vt0.c0, vt0.c0) AS REAL) ASC  NULLS FIRST, 1696040838 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) IS FALSE), CAST(v0.c0 AS NUMERIC), ((vt0.c0) IS TRUE)))=((0.8137236218328385, CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST(json_extract(vt0.c0, vt0.c0) AS REAL) ASC  NULLS FIRST, 1696040838 ASC  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0)AND('D!( r㖅')))OR(CASE v0.c0  WHEN vt0.c0 THEN NULL END)) LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(CASE WHEN '-1715369135' THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0)) WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)GLOB(vt0.c0))) AND ('qm8	*(Z?'));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0)AND('D!( r㖅')))OR(CASE v0.c0  WHEN vt0.c0 THEN NULL END)) LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(CASE WHEN '-1715369135' THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0)) ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)GLOB(vt0.c0))) AND ('qm8	*(Z?')));
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0)AND('D!( r㖅')))OR(CASE v0.c0  WHEN vt0.c0 THEN NULL END)) LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(CASE WHEN '-1715369135' THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0)) WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)GLOB(vt0.c0))) AND ('qm8	*(Z?'));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0)AND('D!( r㖅')))OR(CASE v0.c0  WHEN vt0.c0 THEN NULL END)) LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(CASE WHEN '-1715369135' THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0)) ORDER BY (((vt1.c0 IN ())) BETWEEN (((vt1.c0)GLOB(vt0.c0))) AND ('qm8	*(Z?')));
SELECT ALL * FROM v0 CROSS JOIN vt1 ON (((v0.c0)) NOT BETWEEN (((NOT (521093982)))) AND ((((vt1.c0)>(7.52442875E8))))) WHERE (vt1.c0) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON (((v0.c0)) NOT BETWEEN (((NOT (521093982)))) AND ((((vt1.c0)>(7.52442875E8))))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c0 AS BLOB) END);
SELECT ALL * FROM v0 CROSS JOIN vt1 ON (((v0.c0)) NOT BETWEEN (((NOT (521093982)))) AND ((((vt1.c0)>(7.52442875E8))))) WHERE (vt1.c0) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON (((v0.c0)) NOT BETWEEN (((NOT (521093982)))) AND ((((vt1.c0)>(7.52442875E8))))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c0 AS BLOB) END);
SELECT ALL * FROM vt0 WHERE (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (json_array_length(vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (json_array_length(vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF('0.30548014419365177', vt1.c0)) ISNULL)) ORDER BY CAST((vt1.c0 IN ()) AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>>((NOT (vt1.c0))))  NULLS LAST, (((((vt1.c0)-(vt1.c0))))>=(((vt1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULLIF('0.30548014419365177', vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>>((NOT (vt1.c0))))  NULLS LAST, (((((vt1.c0)-(vt1.c0))))>=(((vt1.c0 IN ())))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF('0.30548014419365177', vt1.c0)) ISNULL)) ORDER BY CAST((vt1.c0 IN ()) AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>>((NOT (vt1.c0))))  NULLS LAST, (((((vt1.c0)-(vt1.c0))))>=(((vt1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULLIF('0.30548014419365177', vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>>((NOT (vt1.c0))))  NULLS LAST, (((((vt1.c0)-(vt1.c0))))>=(((vt1.c0 IN ())))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF('0.30548014419365177', vt1.c0)) ISNULL)) ORDER BY CAST((vt1.c0 IN ()) AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>>((NOT (vt1.c0))))  NULLS LAST, (((((vt1.c0)-(vt1.c0))))>=(((vt1.c0 IN ())))) DESC;
SELECT ALL * FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((vt1.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((+ (vt1.c0)), v0.c0) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(vt1.c0 COLLATE BINARY))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((+ (vt1.c0)), v0.c0) ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((+ (vt1.c0)), v0.c0) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(vt1.c0 COLLATE BINARY))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((+ (vt1.c0)), v0.c0) ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0)<(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)<(vt1.c0)) IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0)<(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)<(vt1.c0)) IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0)<(vt1.c0)) IN ()));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (((vt1.c0) IS TRUE))) FULL OUTER JOIN vt1 ON NULL WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((0.5834573182059302) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND ('-1112219821')) DESC, (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))AND(v0.c0)), (NOT (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((v0.c0, ((vt0.c0)+(x'6704')), ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((vt1.c0) IS TRUE))) FULL OUTER JOIN vt1 ON NULL ORDER BY ((0.5834573182059302) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND ('-1112219821')) DESC, (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))AND(v0.c0)), (NOT (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((v0.c0, ((vt0.c0)+(x'6704')), ABS(vt0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (((vt1.c0) IS TRUE))) FULL OUTER JOIN vt1 ON NULL WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((0.5834573182059302) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND ('-1112219821')) DESC, (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))AND(v0.c0)), (NOT (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((v0.c0, ((vt0.c0)+(x'6704')), ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((vt1.c0) IS TRUE))) FULL OUTER JOIN vt1 ON NULL ORDER BY ((0.5834573182059302) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND ('-1112219821')) DESC, (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))AND(v0.c0)), (NOT (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((v0.c0, ((vt0.c0)+(x'6704')), ABS(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CAST('1223035204' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('1223035204' AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CAST('1223035204' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('1223035204' AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CAST('1223035204' AS BLOB));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN (v0.c0, v0.c0, v0.c0)) IN ())) ORDER BY x''  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN ((((v0.c0))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN (v0.c0, v0.c0, v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY x''  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN ((((v0.c0))<=((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN (v0.c0, v0.c0, v0.c0)) IN ())) ORDER BY x''  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN ((((v0.c0))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN (v0.c0, v0.c0, v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY x''  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN ((((v0.c0))<=((v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT ((vt1.c0)|(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt1.c0)|(v0.c0)))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT ((vt1.c0)|(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt1.c0)|(v0.c0)))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT ALL * FROM vt0, vt1, v0 WHERE (((json_quote(v0.c0)) BETWEEN (x'') AND (x'36e4'))) ORDER BY '0.7934926607177704', 0Xffffffffbc61dd14;
SELECT SUM(count) FROM (SELECT ((((json_quote(v0.c0)) BETWEEN (x'') AND (x'36e4'))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY '0.7934926607177704', 0xffffffffbc61dd14);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((json_quote(v0.c0)) BETWEEN (x'') AND (x'36e4'))) ORDER BY '0.7934926607177704', 0Xffffffffbc61dd14;
SELECT SUM(count) FROM (SELECT ((((json_quote(v0.c0)) BETWEEN (x'') AND (x'36e4'))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY '0.7934926607177704', 0xffffffffbc61dd14);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt1.c0) NOT NULL))>>(LTRIM(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))>>(LTRIM(v0.c0)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt1.c0) NOT NULL))>>(LTRIM(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))>>(LTRIM(v0.c0)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)%(vt0.c0)))GLOB(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))GLOB(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)%(vt0.c0)))GLOB(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))GLOB(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0))/(((vt1.c0)IS(vt1.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0))/(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULL ASC);
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0))/(((vt1.c0)IS(vt1.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0))/(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULL ASC);
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0))/(((vt1.c0)IS(vt1.c0))))) ORDER BY NULL ASC;
SELECT * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON MIN(vt0.c0, vt0.c0, v0.c0, vt0.c0) COLLATE RTRIM WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN '.mJ' THEN ',渖{(N{PA' WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) ELSE (((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN '.mJ' THEN ',渖{(N{PA' WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) ELSE (((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN vt0 ON MIN(vt0.c0, vt0.c0, v0.c0, vt0.c0) COLLATE RTRIM);
SELECT * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON MIN(vt0.c0, vt0.c0, v0.c0, vt0.c0) COLLATE RTRIM WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN '.mJ' THEN ',渖{(N{PA' WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) ELSE (((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN '.mJ' THEN ',渖{(N{PA' WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) ELSE (((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN vt0 ON MIN(vt0.c0, vt0.c0, v0.c0, vt0.c0) COLLATE RTRIM);
SELECT ALL * FROM vt0, v0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY 0xffffffffa48a023f, (- ((v0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY 0Xffffffffa48a023f, (- ((v0.c0 IN (vt0.c0)))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY 0xffffffffa48a023f, (- ((v0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY 0Xffffffffa48a023f, (- ((v0.c0 IN (vt0.c0)))) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))IS(vt0.c0))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))IS(vt0.c0))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) IS TRUE));
SELECT * FROM v0, vt0, vt1 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END  WHEN vt0.c0 THEN 0.449629856161471 END) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (NULL) AND (UPPER(vt0.c0))) DESC, v0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END  WHEN vt0.c0 THEN 0.449629856161471 END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (NULL) AND (UPPER(vt0.c0))) DESC, v0.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0, vt0, vt1 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END  WHEN vt0.c0 THEN 0.449629856161471 END) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (NULL) AND (UPPER(vt0.c0))) DESC, v0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END  WHEN vt0.c0 THEN 0.449629856161471 END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (NULL) AND (UPPER(vt0.c0))) DESC, v0.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))<(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0))<(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))<(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0))<(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))<(vt1.c0)));
SELECT COUNT(*) FROM v0 WHERE (((((((((((x'') BETWEEN ('|)g4Ln{') AND (v0.c0)))AND(((v0.c0)|(-1.7976931348623157E308)))))AND(v0.c0)))OR(UPPER(DISTINCT v0.c0))))AND(NULLIF(x'', v0.c0)))) ORDER BY LIKELY(v0.c0) COLLATE BINARY ASC, 'lm';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'') BETWEEN ('|)g4Ln{') AND (v0.c0)))AND(((v0.c0)|(-1.7976931348623157E308)))))AND(v0.c0)))OR(UPPER(DISTINCT v0.c0))))AND(NULLIF(x'', v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(v0.c0) COLLATE BINARY ASC, 'lm');
SELECT COUNT(*) FROM v0 WHERE (((((((((((x'') BETWEEN ('|)g4Ln{') AND (v0.c0)))AND(((v0.c0)|(-1.7976931348623157E308)))))AND(v0.c0)))OR(UPPER(DISTINCT v0.c0))))AND(NULLIF(x'', v0.c0)))) ORDER BY LIKELY(v0.c0) COLLATE BINARY ASC, 'lm';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'') BETWEEN ('|)g4Ln{') AND (v0.c0)))AND(((v0.c0)|(-1.7976931348623157E308)))))AND(v0.c0)))OR(UPPER(DISTINCT v0.c0))))AND(NULLIF(x'', v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(v0.c0) COLLATE BINARY ASC, 'lm');
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT * FROM vt0, v0, vt1 WHERE ((((((+ (vt1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(((v0.c0)=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(((v0.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE ((((((+ (vt1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(((v0.c0)=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(((v0.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))));
SELECT COUNT(*) FROM vt1, v0 WHERE (x'') ORDER BY (~ (CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, v0 ORDER BY (~ (CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (x'') ORDER BY (~ (CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, v0 ORDER BY (~ (CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST, x'' ASC);
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST, x'' ASC);
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST, x'' ASC;
SELECT COUNT(*) FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) NOTNULL) WHERE (CAST((('挛B\쵱''L')LIKE(0.07025753908153098)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((('挛B\쵱''L')LIKE(0.07025753908153098)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) NOTNULL));
SELECT COUNT(*) FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) NOTNULL) WHERE (CAST((('挛B\쵱''L')LIKE(0.07025753908153098)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((('挛B\쵱''L')LIKE(0.07025753908153098)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) NOTNULL));
SELECT COUNT(*) FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) NOTNULL) WHERE (CAST((('挛B\쵱''L')LIKE(0.07025753908153098)) AS NUMERIC));
SELECT * FROM vt1 WHERE ((('-1682595342')<<(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((('-1682595342')<<(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('-1682595342')<<(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((('-1682595342')<<(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('-1682595342')<<(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) CROSS JOIN v0 ON (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, vt1.c0, v0.c0))))>>(((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) CROSS JOIN v0 ON (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, vt1.c0, v0.c0))))>>(((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) CROSS JOIN v0 ON (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, vt1.c0, v0.c0))))>>(((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) CROSS JOIN v0 ON (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, vt1.c0, v0.c0))))>>(((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0.7842573649225831 COLLATE NOCASE)||(CAST(v0.c0 AS INTEGER)))) ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST, IFNULL(v0.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7842573649225831 COLLATE NOCASE)||(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST, IFNULL(v0.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST);
SELECT * FROM v0 WHERE (((0.7842573649225831 COLLATE NOCASE)||(CAST(v0.c0 AS INTEGER)))) ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST, IFNULL(v0.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7842573649225831 COLLATE NOCASE)||(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST, IFNULL(v0.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0)||(v0.c0)) AS INTEGER)) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)||(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((~ (vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0)||(v0.c0)) AS INTEGER)) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)||(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((~ (vt0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (((UNLIKELY(vt0.c0)) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.33459796158354427)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0)) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.33459796158354427)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM v0, vt0 WHERE (((UNLIKELY(vt0.c0)) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.33459796158354427)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0)) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.33459796158354427)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0 IN ()))/((('0.4969960110404432') BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(v0.c0)) IN ((((('0.32675705682058265')AND(vt1.c0)))OR(x''))))  NULLS LAST, v0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))/((('0.4969960110404432') BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(v0.c0)) IN ((((('0.32675705682058265')AND(vt1.c0)))OR(x''))))  NULLS LAST, v0.c0 COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0 IN ()))/((('0.4969960110404432') BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(v0.c0)) IN ((((('0.32675705682058265')AND(vt1.c0)))OR(x''))))  NULLS LAST, v0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))/((('0.4969960110404432') BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))AND(vt1.c0)))OR(v0.c0)) IN ((((('0.32675705682058265')AND(vt1.c0)))OR(x''))))  NULLS LAST, v0.c0 COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN ((vt1.c0)IS(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY ((((((((IFNULL(v0.c0, vt1.c0))AND(((vt0.c0)-(NULL)))))OR(((vt0.c0)/(vt1.c0)))))OR(((v0.c0)!=(vt0.c0)))))OR(((('HX')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN ((vt1.c0)IS(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((((((IFNULL(v0.c0, vt1.c0))AND(((vt0.c0)-(NULL)))))OR(((vt0.c0)/(vt1.c0)))))OR(((v0.c0)<>(vt0.c0)))))OR(((('HX')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN ((vt1.c0)IS(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY ((((((((IFNULL(v0.c0, vt1.c0))AND(((vt0.c0)-(NULL)))))OR(((vt0.c0)/(vt1.c0)))))OR(((v0.c0)!=(vt0.c0)))))OR(((('HX')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN ((vt1.c0)IS(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((((((IFNULL(v0.c0, vt1.c0))AND(((vt0.c0)-(NULL)))))OR(((vt0.c0)/(vt1.c0)))))OR(((v0.c0)<>(vt0.c0)))))OR(((('HX')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (vt1.c0) ORDER BY 0.678807649126998 ASC, ((((x'')OR(CAST(v0.c0 AS BLOB))))OR(UNLIKELY(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY 0.678807649126998 ASC, ((((x'')OR(CAST(v0.c0 AS BLOB))))OR(UNLIKELY(DISTINCT v0.c0))));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (vt1.c0) ORDER BY 0.678807649126998 ASC, ((((x'')OR(CAST(v0.c0 AS BLOB))))OR(UNLIKELY(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY 0.678807649126998 ASC, ((((x'')OR(CAST(v0.c0 AS BLOB))))OR(UNLIKELY(DISTINCT v0.c0))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((~ ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (v0.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((~ ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (v0.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM v0 WHERE ((NULL COLLATE RTRIM IN ())) ORDER BY ((0.14231774252830842) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((NULL COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0 ORDER BY ((0.14231774252830842) ISNULL) DESC);
SELECT * FROM v0 WHERE ((NULL COLLATE RTRIM IN ())) ORDER BY ((0.14231774252830842) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((NULL COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0 ORDER BY ((0.14231774252830842) ISNULL) DESC);
SELECT * FROM v0 WHERE ((NULL COLLATE RTRIM IN ())) ORDER BY ((0.14231774252830842) ISNULL) DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))>=(((NOT (20164007)))))) ORDER BY -804757555;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=(((NOT (20164007)))))) IS TRUE)  as count FROM vt1 ORDER BY -804757555);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))>=(((NOT (20164007)))))) ORDER BY -804757555;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=(((NOT (20164007)))))) IS TRUE)  as count FROM vt1 ORDER BY -804757555);
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) IS TRUE) IN ()) FULL OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE WHERE ((('')+(((((v0.c0)OR(vt0.c0)))OR(0X27a3fb23))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, 0.8852481384125062, IFNULL((vt0.c0 IN ()), '-14154871')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')+(((((v0.c0)OR(vt0.c0)))OR(0x27a3fb23))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) IS TRUE) IN ()) FULL OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, 0.8852481384125062, IFNULL((vt0.c0 IN ()), '-14154871')  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) IS TRUE) IN ()) FULL OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE WHERE ((('')+(((((v0.c0)OR(vt0.c0)))OR(0X27a3fb23))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, 0.8852481384125062, IFNULL((vt0.c0 IN ()), '-14154871')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')+(((((v0.c0)OR(vt0.c0)))OR(0x27a3fb23))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) IS TRUE) IN ()) FULL OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, 0.8852481384125062, IFNULL((vt0.c0 IN ()), '-14154871')  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) IS TRUE) IN ()) FULL OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE WHERE ((('')+(((((v0.c0)OR(vt0.c0)))OR(0X27a3fb23))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, 0.8852481384125062, IFNULL((vt0.c0 IN ()), '-14154871')  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((NULL IN ()))<(((vt0.c0)*(vt0.c0)))) WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((NULL IN ()))<(((vt0.c0)*(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((NULL IN ()))<(((vt0.c0)*(vt0.c0)))) WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((NULL IN ()))<(((vt0.c0)*(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((NULL IN ()))<(((vt0.c0)*(vt0.c0)))) WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))));
SELECT * FROM vt1 WHERE (((((((vt1.c0))>=((vt1.c0)))))<((CAST(vt1.c0 AS REAL))))) ORDER BY TYPEOF(DISTINCT vt1.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0))>=((vt1.c0)))))<((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(DISTINCT vt1.c0) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((((vt1.c0))>=((vt1.c0)))))<((CAST(vt1.c0 AS REAL))))) ORDER BY TYPEOF(DISTINCT vt1.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0))>=((vt1.c0)))))<((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(DISTINCT vt1.c0) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((((vt1.c0))>=((vt1.c0)))))<((CAST(vt1.c0 AS REAL))))) ORDER BY TYPEOF(DISTINCT vt1.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt0.c0) ISNULL))AND(((v0.c0)<<(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))AND(((v0.c0)<<(NULL))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt0.c0) ISNULL))AND(((v0.c0)<<(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))AND(((v0.c0)<<(NULL))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN NULL THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)>(vt1.c0)) WHEN (- (vt1.c0)) THEN (((vt1.c0))>((''))) ELSE ((vt1.c0)LIKE(vt1.c0)) END) ORDER BY vt1.c0, (((((vt1.c0, '2063177002', vt1.c0))==((0.8554464305063094, vt1.c0, vt1.c0))))/(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN NULL THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)>(vt1.c0)) WHEN (- (vt1.c0)) THEN (((vt1.c0))>((''))) ELSE ((vt1.c0)LIKE(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((((vt1.c0, '2063177002', vt1.c0))==((0.8554464305063094, vt1.c0, vt1.c0))))/(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN NULL THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)>(vt1.c0)) WHEN (- (vt1.c0)) THEN (((vt1.c0))>((''))) ELSE ((vt1.c0)LIKE(vt1.c0)) END) ORDER BY vt1.c0, (((((vt1.c0, '2063177002', vt1.c0))==((0.8554464305063094, vt1.c0, vt1.c0))))/(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN NULL THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)>(vt1.c0)) WHEN (- (vt1.c0)) THEN (((vt1.c0))>((''))) ELSE ((vt1.c0)LIKE(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((((vt1.c0, '2063177002', vt1.c0))==((0.8554464305063094, vt1.c0, vt1.c0))))/(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN NULL THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)>(vt1.c0)) WHEN (- (vt1.c0)) THEN (((vt1.c0))>((''))) ELSE ((vt1.c0)LIKE(vt1.c0)) END) ORDER BY vt1.c0, (((((vt1.c0, '2063177002', vt1.c0))==((0.8554464305063094, vt1.c0, vt1.c0))))/(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT * FROM vt0 INNER JOIN v0 ON CASE WHEN (NOT (vt1.c0)) THEN (NOT (vt0.c0)) END RIGHT OUTER JOIN vt1 ON ((((((((((((v0.c0 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt1.c0) NOT NULL))))OR(CAST(v0.c0 AS TEXT))))AND(((((0.06757382415037061)OR(vt0.c0)))OR(vt1.c0)))))AND(((v0.c0)>>(vt1.c0)))) WHERE ((((v0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND (('-1221537699', v0.c0, v0.c0))), CAST(vt0.c0 AS INTEGER), (('1515354679')>>(NULL)))) AND ((vt1.c0, ((((NULL)AND(vt0.c0)))OR(vt1.c0)), LOWER(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND (('-1221537699', v0.c0, v0.c0))), CAST(vt0.c0 AS INTEGER), (('1515354679')>>(NULL)))) AND ((vt1.c0, ((((NULL)AND(vt0.c0)))OR(vt1.c0)), LOWER(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN (NOT (vt1.c0)) THEN (NOT (vt0.c0)) END RIGHT OUTER JOIN vt1 ON ((((((((((((v0.c0 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt1.c0) NOT NULL))))OR(CAST(v0.c0 AS TEXT))))AND(((((0.06757382415037061)OR(vt0.c0)))OR(vt1.c0)))))AND(((v0.c0)>>(vt1.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON CASE WHEN (NOT (vt1.c0)) THEN (NOT (vt0.c0)) END RIGHT OUTER JOIN vt1 ON ((((((((((((v0.c0 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt1.c0) NOT NULL))))OR(CAST(v0.c0 AS TEXT))))AND(((((0.06757382415037061)OR(vt0.c0)))OR(vt1.c0)))))AND(((v0.c0)>>(vt1.c0)))) WHERE ((((v0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND (('-1221537699', v0.c0, v0.c0))), CAST(vt0.c0 AS INTEGER), (('1515354679')>>(NULL)))) AND ((vt1.c0, ((((NULL)AND(vt0.c0)))OR(vt1.c0)), LOWER(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND (('-1221537699', v0.c0, v0.c0))), CAST(vt0.c0 AS INTEGER), (('1515354679')>>(NULL)))) AND ((vt1.c0, ((((NULL)AND(vt0.c0)))OR(vt1.c0)), LOWER(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN (NOT (vt1.c0)) THEN (NOT (vt0.c0)) END RIGHT OUTER JOIN vt1 ON ((((((((((((v0.c0 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt1.c0) NOT NULL))))OR(CAST(v0.c0 AS TEXT))))AND(((((0.06757382415037061)OR(vt0.c0)))OR(vt1.c0)))))AND(((v0.c0)>>(vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN vt0 ON (('LG.GUpx叅h')>=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END)<(((((v0.c0)AND(NULL)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END)<(((((v0.c0)AND(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON (('LG.GUpx叅h')>=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN vt0 ON (('LG.GUpx叅h')>=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END)<(((((v0.c0)AND(NULL)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END)<(((((v0.c0)AND(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON (('LG.GUpx叅h')>=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (x'ecfb') AND ((vt1.c0 IN ())))) ORDER BY CASE WHEN (+ (v0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN NULL END ELSE CAST(vt1.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (x'ecfb') AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CASE WHEN (+ (v0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN NULL END ELSE CAST(vt1.c0 AS BLOB) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (x'ecfb') AND ((vt1.c0 IN ())))) ORDER BY CASE WHEN (+ (v0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN NULL END ELSE CAST(vt1.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (x'ecfb') AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CASE WHEN (+ (v0.c0)) THEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN NULL END ELSE CAST(vt1.c0 AS BLOB) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0x7c8f292e) AND (vt1.c0))) AND (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0X7c8f292e) AND (vt1.c0))) AND (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE ((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0x7c8f292e) AND (vt1.c0))) AND (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0X7c8f292e) AND (vt1.c0))) AND (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt1, vt0 WHERE ((((0.052735874302652364))>=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{悘')))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.052735874302652364))>=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{悘'))))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((0.052735874302652364))>=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{悘')))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.052735874302652364))>=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{悘'))))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((0.052735874302652364))>=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{悘')))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((CAST(v0.c0 AS NUMERIC), ((v0.c0)>=(v0.c0)), (((v0.c0))<=((v0.c0)))))>((0xfffffffff6f18ebb, CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((CAST(v0.c0 AS NUMERIC), ((v0.c0)>=(v0.c0)), (((v0.c0))<=((v0.c0)))))>((0Xfffffffff6f18ebb, CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((CAST(v0.c0 AS NUMERIC), ((v0.c0)>=(v0.c0)), (((v0.c0))<=((v0.c0)))))>((0xfffffffff6f18ebb, CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((CAST(v0.c0 AS NUMERIC), ((v0.c0)>=(v0.c0)), (((v0.c0))<=((v0.c0)))))>((0Xfffffffff6f18ebb, CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((vt1.c0) IS FALSE) FULL OUTER JOIN vt0 ON 0xffffffffdd2eabce WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((vt1.c0) IS FALSE) FULL OUTER JOIN vt0 ON 0xffffffffdd2eabce);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((vt1.c0) IS FALSE) FULL OUTER JOIN vt0 ON 0xffffffffdd2eabce WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((vt1.c0) IS FALSE) FULL OUTER JOIN vt0 ON 0xffffffffdd2eabce);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY (+ (LOWER(v0.c0)))  NULLS FIRST, (- (((v0.c0)>>(v0.c0)))), CASE WHEN v0.c0 THEN ((v0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (+ (LOWER(v0.c0)))  NULLS FIRST, (- (((v0.c0)>>(v0.c0)))), CASE WHEN v0.c0 THEN ((v0.c0) ISNULL) END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY (+ (LOWER(v0.c0)))  NULLS FIRST, (- (((v0.c0)>>(v0.c0)))), CASE WHEN v0.c0 THEN ((v0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (+ (LOWER(v0.c0)))  NULLS FIRST, (- (((v0.c0)>>(v0.c0)))), CASE WHEN v0.c0 THEN ((v0.c0) ISNULL) END DESC);
SELECT ALL * FROM v0, vt0 WHERE ((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(CAST(v0.c0 AS INTEGER))))AND(((vt0.c0)AND(vt0.c0)))))OR(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(CAST(v0.c0 AS INTEGER))))AND(((vt0.c0)AND(vt0.c0)))))OR(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(CAST(v0.c0 AS INTEGER))))AND(((vt0.c0)AND(vt0.c0)))))OR(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(CAST(v0.c0 AS INTEGER))))AND(((vt0.c0)AND(vt0.c0)))))OR(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)<<(0.08892224906921686))))) ORDER BY ((((((x'')/(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(json_type(vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)<<(0.08892224906921686))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((x'')/(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(json_type(vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)<<(0.08892224906921686))))) ORDER BY ((((((x'')/(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(json_type(vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)<<(0.08892224906921686))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((x'')/(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(json_type(vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE ((- (((v0.c0)>=('2083326789'))))) ORDER BY x'485b' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)>=('2083326789'))))) IS TRUE)  as count FROM v0 ORDER BY x'485b' DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((- (((v0.c0)>=('2083326789'))))) ORDER BY x'485b' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)>=('2083326789'))))) IS TRUE)  as count FROM v0 ORDER BY x'485b' DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))*(v0.c0 COLLATE NOCASE))) ORDER BY (+ (v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))*(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))*(v0.c0 COLLATE NOCASE))) ORDER BY (+ (v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))*(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (IFNULL((('')IS(vt1.c0)), (((v0.c0)) NOT BETWEEN (('쏰7\r5')) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((('')IS(vt1.c0)), (((v0.c0)) NOT BETWEEN (('쏰7\r5')) AND ((v0.c0))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (IFNULL((('')IS(vt1.c0)), (((v0.c0)) NOT BETWEEN (('쏰7\r5')) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((('')IS(vt1.c0)), (((v0.c0)) NOT BETWEEN (('쏰7\r5')) AND ((v0.c0))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (IFNULL((('')IS(vt1.c0)), (((v0.c0)) NOT BETWEEN (('쏰7\r5')) AND ((v0.c0)))));
SELECT ALL * FROM v0 WHERE (CAST(((NULL)|(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)|(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(((NULL)|(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)|(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 INNER JOIN vt1 ON ((LOWER(DISTINCT v0.c0)) ISNULL) LEFT OUTER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)), (((vt1.c0))>=((v0.c0))), (- (v0.c0)))) AND (((- (x'')), v0.c0, vt0.c0))) WHERE ((((((((((NULL IN ()))AND(CAST(0.7693648533521384 AS TEXT))))OR(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(0.7126869638452608)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN ()))AND(CAST(0.7693648533521384 AS TEXT))))OR(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(0.7126869638452608))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON ((LOWER(DISTINCT v0.c0)) ISNULL) LEFT OUTER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)), (((vt1.c0))>=((v0.c0))), (- (v0.c0)))) AND (((- (x'')), v0.c0, vt0.c0))));
SELECT ALL * FROM v0 INNER JOIN vt1 ON ((LOWER(DISTINCT v0.c0)) ISNULL) LEFT OUTER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)), (((vt1.c0))>=((v0.c0))), (- (v0.c0)))) AND (((- (x'')), v0.c0, vt0.c0))) WHERE ((((((((((NULL IN ()))AND(CAST(0.7693648533521384 AS TEXT))))OR(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(0.7126869638452608)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN ()))AND(CAST(0.7693648533521384 AS TEXT))))OR(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(0.7126869638452608))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON ((LOWER(DISTINCT v0.c0)) ISNULL) LEFT OUTER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)), (((vt1.c0))>=((v0.c0))), (- (v0.c0)))) AND (((- (x'')), v0.c0, vt0.c0))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (vt0.c0 IN (vt0.c0)), 0Xffffffff882fe918))>=(((NOT (v0.c0)), vt0.c0, 0.5072652943213278))) WHERE ((~ (CASE WHEN vt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (vt0.c0 IN (vt0.c0)), 0xffffffff882fe918))>=(((NOT (v0.c0)), vt0.c0, 0.5072652943213278))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (vt0.c0 IN (vt0.c0)), 0Xffffffff882fe918))>=(((NOT (v0.c0)), vt0.c0, 0.5072652943213278))) WHERE ((~ (CASE WHEN vt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (vt0.c0 IN (vt0.c0)), 0xffffffff882fe918))>=(((NOT (v0.c0)), vt0.c0, 0.5072652943213278))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0)%(NULL)))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC, LIKELIHOOD(DISTINCT TRIM(vt0.c0), 0.37634623455305194);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0)%(NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC, LIKELIHOOD(DISTINCT TRIM(vt0.c0), 0.37634623455305194));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0)%(NULL)))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC, LIKELIHOOD(DISTINCT TRIM(vt0.c0), 0.37634623455305194);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0)%(NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC, LIKELIHOOD(DISTINCT TRIM(vt0.c0), 0.37634623455305194));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0)%(NULL)))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC, LIKELIHOOD(DISTINCT TRIM(vt0.c0), 0.37634623455305194);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))%(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))%(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))%(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))%(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))%(x'')));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (~ ('N5jsL?郄' COLLATE NOCASE)), ((CAST(vt0.c0 AS REAL)) BETWEEN (-1543972770) AND (vt0.c0 COLLATE RTRIM)), ((((vt0.c0) NOTNULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (~ ('N5jsL?郄' COLLATE NOCASE)), ((CAST(vt0.c0 AS REAL)) BETWEEN (-1543972770) AND (vt0.c0 COLLATE RTRIM)), ((((vt0.c0) NOTNULL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (~ ('N5jsL?郄' COLLATE NOCASE)), ((CAST(vt0.c0 AS REAL)) BETWEEN (-1543972770) AND (vt0.c0 COLLATE RTRIM)), ((((vt0.c0) NOTNULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (~ ('N5jsL?郄' COLLATE NOCASE)), ((CAST(vt0.c0 AS REAL)) BETWEEN (-1543972770) AND (vt0.c0 COLLATE RTRIM)), ((((vt0.c0) NOTNULL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (~ ('N5jsL?郄' COLLATE NOCASE)), ((CAST(vt0.c0 AS REAL)) BETWEEN (-1543972770) AND (vt0.c0 COLLATE RTRIM)), ((((vt0.c0) NOTNULL)) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0)>=('bM+L9.')))) ORDER BY ((LIKELY(v0.c0))*(ABS(v0.c0)))  NULLS LAST, ((((vt1.c0)AND(((('-1088614606', v0.c0, vt1.c0, v0.c0, v0.c0, v0.c0, v0.c0))=((v0.c0, vt1.c0, v0.c0, v0.c0, vt1.c0, vt1.c0, vt1.c0))))))OR((('927968440')%(vt1.c0)))), v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt1.c0)>=('bM+L9.')))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((LIKELY(v0.c0))*(ABS(v0.c0)))  NULLS LAST, ((((vt1.c0)AND(((('-1088614606', v0.c0, vt1.c0, v0.c0, v0.c0, v0.c0, v0.c0))==((v0.c0, vt1.c0, v0.c0, v0.c0, vt1.c0, vt1.c0, vt1.c0))))))OR((('927968440')%(vt1.c0)))), v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0)>=('bM+L9.')))) ORDER BY ((LIKELY(v0.c0))*(ABS(v0.c0)))  NULLS LAST, ((((vt1.c0)AND(((('-1088614606', v0.c0, vt1.c0, v0.c0, v0.c0, v0.c0, v0.c0))=((v0.c0, vt1.c0, v0.c0, v0.c0, vt1.c0, vt1.c0, vt1.c0))))))OR((('927968440')%(vt1.c0)))), v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt1.c0)>=('bM+L9.')))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((LIKELY(v0.c0))*(ABS(v0.c0)))  NULLS LAST, ((((vt1.c0)AND(((('-1088614606', v0.c0, vt1.c0, v0.c0, v0.c0, v0.c0, v0.c0))==((v0.c0, vt1.c0, v0.c0, v0.c0, vt1.c0, vt1.c0, vt1.c0))))))OR((('927968440')%(vt1.c0)))), v0.c0 ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE)) ORDER BY ((~ (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE)) ORDER BY ((~ (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE)) ORDER BY ((~ (vt0.c0)) IN ()) DESC;
SELECT ALL * FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (NULL);
SELECT * FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS REAL)) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT * FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS REAL)) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)AND(x'')))OR(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(x'')))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)AND(x'')))OR(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(x'')))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM v0, vt1 WHERE ((~ ((~ (vt1.c0))))) ORDER BY ((((QUOTE(v0.c0))AND('329964684')))AND('pp㥤g')) ASC  NULLS LAST, CASE WHEN LTRIM(vt1.c0) THEN vt1.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((QUOTE(v0.c0))AND('329964684')))AND('pp㥤g')) ASC  NULLS LAST, CASE WHEN LTRIM(vt1.c0) THEN vt1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM v0, vt1 WHERE ((~ ((~ (vt1.c0))))) ORDER BY ((((QUOTE(v0.c0))AND('329964684')))AND('pp㥤g')) ASC  NULLS LAST, CASE WHEN LTRIM(vt1.c0) THEN vt1.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((QUOTE(v0.c0))AND('329964684')))AND('pp㥤g')) ASC  NULLS LAST, CASE WHEN LTRIM(vt1.c0) THEN vt1.c0 COLLATE RTRIM END);
SELECT ALL * FROM v0 WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY ((v0.c0)&(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)&(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY ((v0.c0)&(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)&(v0.c0 COLLATE BINARY)));
SELECT * FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0)!=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0)!=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0)!=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0)!=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0)!=(vt1.c0)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))&(vt0.c0))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))AND(LTRIM(NULL, vt0.c0))))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((TYPEOF(DISTINCT vt0.c0))*(CAST(vt0.c0 AS INTEGER))) DESC, CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN x'' ELSE (~ (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))&(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS TEXT))AND(LTRIM(NULL, vt0.c0))))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((TYPEOF(DISTINCT vt0.c0))*(CAST(vt0.c0 AS INTEGER))) DESC, CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN x'' ELSE (~ (vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))&(vt0.c0))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))AND(LTRIM(NULL, vt0.c0))))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((TYPEOF(DISTINCT vt0.c0))*(CAST(vt0.c0 AS INTEGER))) DESC, CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN x'' ELSE (~ (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))&(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS TEXT))AND(LTRIM(NULL, vt0.c0))))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((TYPEOF(DISTINCT vt0.c0))*(CAST(vt0.c0 AS INTEGER))) DESC, CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN x'' ELSE (~ (vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))&(vt0.c0))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))AND(LTRIM(NULL, vt0.c0))))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((TYPEOF(DISTINCT vt0.c0))*(CAST(vt0.c0 AS INTEGER))) DESC, CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN x'' ELSE (~ (vt0.c0)) END DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((CAST(NULL AS BLOB)))>((x''))));
SELECT SUM(count) FROM (SELECT (((((CAST(NULL AS BLOB)))>((x'')))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((CAST(NULL AS BLOB)))>((x''))));
SELECT SUM(count) FROM (SELECT (((((CAST(NULL AS BLOB)))>((x'')))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((CAST(NULL AS BLOB)))>((x''))));
SELECT * FROM vt1 WHERE (DATE(vt1.c0, x'd466', vt1.c0, vt1.c0, vt1.c0, '87', vt1.c0) COLLATE BINARY) ORDER BY LOWER((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0, x'd466', vt1.c0, vt1.c0, vt1.c0, '87', vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY LOWER((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (DATE(vt1.c0, x'd466', vt1.c0, vt1.c0, vt1.c0, '87', vt1.c0) COLLATE BINARY) ORDER BY LOWER((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0, x'd466', vt1.c0, vt1.c0, vt1.c0, '87', vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY LOWER((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (DATE(vt1.c0, x'd466', vt1.c0, vt1.c0, vt1.c0, '87', vt1.c0) COLLATE BINARY) ORDER BY LOWER((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))-(('-215882718' IN ()))) FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))AND(LIKELY(vt1.c0))))AND(CASE v0.c0  WHEN 1.037288926E9 THEN 0Xffffffffe7175d8d WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))-(('-215882718' IN ()))) FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))AND(LIKELY(vt1.c0))))AND(CASE v0.c0  WHEN 1.037288926E9 THEN 0xffffffffe7175d8d WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))-(('-215882718' IN ()))) FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))AND(LIKELY(vt1.c0))))AND(CASE v0.c0  WHEN 1.037288926E9 THEN 0Xffffffffe7175d8d WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))-(('-215882718' IN ()))) FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))AND(LIKELY(vt1.c0))))AND(CASE v0.c0  WHEN 1.037288926E9 THEN 0xffffffffe7175d8d WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((NOT (vt1.c0))))=((HEX(vt0.c0)))) WHERE ((+ (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) ORDER BY (0.8369604155427293 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((NOT (vt1.c0))))==((HEX(vt0.c0)))) ORDER BY (0.8369604155427293 IN ()) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((NOT (vt1.c0))))=((HEX(vt0.c0)))) WHERE ((+ (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) ORDER BY (0.8369604155427293 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((NOT (vt1.c0))))==((HEX(vt0.c0)))) ORDER BY (0.8369604155427293 IN ()) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((NOT (vt1.c0))))=((HEX(vt0.c0)))) WHERE ((+ (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) ORDER BY (0.8369604155427293 IN ()) DESC;
SELECT ALL * FROM vt0, v0, vt1 WHERE (((CAST(v0.c0 AS INTEGER))<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER))<=(NULL))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE (((CAST(v0.c0 AS INTEGER))<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER))<=(NULL))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((vt0.c0)%(v0.c0)) THEN ((v0.c0)-(vt0.c0)) WHEN ((v0.c0)AND(vt0.c0)) THEN CAST(0.9005301463303385 AS TEXT) WHEN json_patch(NULL, v0.c0) THEN (NOT (vt0.c0)) END WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE NOCASE))) ORDER BY v0.c0 DESC, CASE WHEN (- (v0.c0)) THEN '' COLLATE NOCASE ELSE vt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((vt0.c0)%(v0.c0)) THEN ((v0.c0)-(vt0.c0)) WHEN ((v0.c0)AND(vt0.c0)) THEN CAST(0.9005301463303385 AS TEXT) WHEN json_patch(NULL, v0.c0) THEN (NOT (vt0.c0)) END ORDER BY v0.c0 DESC, CASE WHEN (- (v0.c0)) THEN '' COLLATE NOCASE ELSE vt0.c0 END  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((vt0.c0)%(v0.c0)) THEN ((v0.c0)-(vt0.c0)) WHEN ((v0.c0)AND(vt0.c0)) THEN CAST(0.9005301463303385 AS TEXT) WHEN json_patch(NULL, v0.c0) THEN (NOT (vt0.c0)) END WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE NOCASE))) ORDER BY v0.c0 DESC, CASE WHEN (- (v0.c0)) THEN '' COLLATE NOCASE ELSE vt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((vt0.c0)%(v0.c0)) THEN ((v0.c0)-(vt0.c0)) WHEN ((v0.c0)AND(vt0.c0)) THEN CAST(0.9005301463303385 AS TEXT) WHEN json_patch(NULL, v0.c0) THEN (NOT (vt0.c0)) END ORDER BY v0.c0 DESC, CASE WHEN (- (v0.c0)) THEN '' COLLATE NOCASE ELSE vt0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((((v0.c0 IN (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND ((- (v0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((((v0.c0 IN (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND ((- (v0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (v0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) BETWEEN (v0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (v0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) BETWEEN (v0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS BLOB));
SELECT * FROM v0, vt0, vt1 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN '1e500' ELSE vt0.c0 END)&((vt1.c0 IN ())))) ORDER BY (+ (v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN '1e500' ELSE vt0.c0 END)&((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (+ (v0.c0)) COLLATE NOCASE);
SELECT * FROM v0, vt0, vt1 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN '1e500' ELSE vt0.c0 END)&((vt1.c0 IN ())))) ORDER BY (+ (v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN '1e500' ELSE vt0.c0 END)&((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (+ (v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN ((v0.c0)OR(NULL)) THEN ((vt0.c0) IS TRUE) WHEN ((v0.c0) ISNULL) THEN v0.c0 COLLATE BINARY WHEN '8.' THEN CAST(vt0.c0 AS REAL) ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN ((v0.c0)OR(NULL)) THEN ((vt0.c0) IS TRUE) WHEN ((v0.c0) ISNULL) THEN v0.c0 COLLATE BINARY WHEN '8.' THEN CAST(vt0.c0 AS REAL) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN ((v0.c0)OR(NULL)) THEN ((vt0.c0) IS TRUE) WHEN ((v0.c0) ISNULL) THEN v0.c0 COLLATE BINARY WHEN '8.' THEN CAST(vt0.c0 AS REAL) ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN ((v0.c0)OR(NULL)) THEN ((vt0.c0) IS TRUE) WHEN ((v0.c0) ISNULL) THEN v0.c0 COLLATE BINARY WHEN '8.' THEN CAST(vt0.c0 AS REAL) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE (((CAST(vt0.c0 AS NUMERIC))>((('-1900749153') BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))>((('-1900749153') BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE (((CAST(vt0.c0 AS NUMERIC))>((('-1900749153') BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))>((('-1900749153') BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE (((CAST(vt0.c0 AS NUMERIC))>((('-1900749153') BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN -1.82688413E8 ELSE v0.c0 END IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (+ (v0.c0)) WHEN ((('\rh'))=((x''))) THEN ((v0.c0)=(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)<>(v0.c0)) END ASC, (((v0.c0))<>(((v0.c0 IN (NULL, v0.c0))))), v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN -1.82688413E8 ELSE v0.c0 END IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (+ (v0.c0)) WHEN ((('\rh'))=((x''))) THEN ((v0.c0)=(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)<>(v0.c0)) END ASC, (((v0.c0))<>(((v0.c0 IN (NULL, v0.c0))))), v0.c0 DESC);
SELECT ALL * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN -1.82688413E8 ELSE v0.c0 END IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (+ (v0.c0)) WHEN ((('\rh'))=((x''))) THEN ((v0.c0)=(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)<>(v0.c0)) END ASC, (((v0.c0))<>(((v0.c0 IN (NULL, v0.c0))))), v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN -1.82688413E8 ELSE v0.c0 END IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (+ (v0.c0)) WHEN ((('\rh'))=((x''))) THEN ((v0.c0)=(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)<>(v0.c0)) END ASC, (((v0.c0))<>(((v0.c0 IN (NULL, v0.c0))))), v0.c0 DESC);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY ((((v0.c0)IS(vt0.c0)))*((v0.c0 IN ())))  NULLS LAST, COALESCE(MIN(vt1.c0, vt0.c0, v0.c0, v0.c0), ((v0.c0) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((v0.c0)IS(vt0.c0)))*((v0.c0 IN ())))  NULLS LAST, COALESCE(MIN(vt1.c0, vt0.c0, v0.c0, v0.c0), ((v0.c0) ISNULL))  NULLS LAST);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY ((((v0.c0)IS(vt0.c0)))*((v0.c0 IN ())))  NULLS LAST, COALESCE(MIN(vt1.c0, vt0.c0, v0.c0, v0.c0), ((v0.c0) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((v0.c0)IS(vt0.c0)))*((v0.c0 IN ())))  NULLS LAST, COALESCE(MIN(vt1.c0, vt0.c0, v0.c0, v0.c0), ((v0.c0) ISNULL))  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT * FROM vt1 WHERE ((UPPER(vt1.c0) IN ())) ORDER BY ((0.789470469402094) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(vt1.c0) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((0.789470469402094) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((UPPER(vt1.c0) IN ())) ORDER BY ((0.789470469402094) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(vt1.c0) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((0.789470469402094) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((UPPER(vt1.c0) IN ())) ORDER BY ((0.789470469402094) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (LTRIM(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LTRIM(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (vt1.c0) ORDER BY CASE LTRIM(v0.c0, v0.c0)  WHEN vt1.c0 THEN vt1.c0 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN (v0.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) ELSE ((v0.c0)<(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE LTRIM(v0.c0, v0.c0)  WHEN vt1.c0 THEN vt1.c0 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN (v0.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) ELSE ((v0.c0)<(vt1.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (vt1.c0) ORDER BY CASE LTRIM(v0.c0, v0.c0)  WHEN vt1.c0 THEN vt1.c0 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN (v0.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) ELSE ((v0.c0)<(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE LTRIM(v0.c0, v0.c0)  WHEN vt1.c0 THEN vt1.c0 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN (v0.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) ELSE ((v0.c0)<(vt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON CASE 0.4928320531815561  WHEN (NOT (v0.c0)) THEN (+ (v0.c0)) ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-687965451', v0.c0))) END WHERE (CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON CASE 0.4928320531815561  WHEN (NOT (v0.c0)) THEN (+ (v0.c0)) ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-687965451', v0.c0))) END);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON CASE 0.4928320531815561  WHEN (NOT (v0.c0)) THEN (+ (v0.c0)) ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-687965451', v0.c0))) END WHERE (CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON CASE 0.4928320531815561  WHEN (NOT (v0.c0)) THEN (+ (v0.c0)) ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-687965451', v0.c0))) END);
SELECT ALL * FROM v0, vt1 WHERE (((vt1.c0) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0) IS TRUE)))) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND (((((v0.c0))>=((NULL)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND (((((v0.c0))>=((NULL)))))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((vt1.c0) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0) IS TRUE)))) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND (((((v0.c0))>=((NULL)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND (((((v0.c0))>=((NULL)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((((v0.c0)%(v0.c0)))OR(((v0.c0) NOTNULL)))) ORDER BY 0.6556872581705948 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c0)))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY 0.6556872581705948 DESC);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((((v0.c0)%(v0.c0)))OR(((v0.c0) NOTNULL)))) ORDER BY 0.6556872581705948 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c0)))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY 0.6556872581705948 DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR(vt0.c0)))AND((((vt1.c0, NULL, NULL, vt0.c0, vt1.c0)) BETWEEN ((0.5587501242894316, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))))OR(CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))OR(vt0.c0)))AND((((vt1.c0, NULL, NULL, vt0.c0, vt1.c0)) BETWEEN ((0.5587501242894316, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))))OR(CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR(vt0.c0)))AND((((vt1.c0, NULL, NULL, vt0.c0, vt1.c0)) BETWEEN ((0.5587501242894316, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))))OR(CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))OR(vt0.c0)))AND((((vt1.c0, NULL, NULL, vt0.c0, vt1.c0)) BETWEEN ((0.5587501242894316, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))))OR(CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR(vt0.c0)))AND((((vt1.c0, NULL, NULL, vt0.c0, vt1.c0)) BETWEEN ((0.5587501242894316, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))))OR(CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)*(vt1.c0)) IN ((((v0.c0, v0.c0, v0.c0))<>((vt1.c0, vt1.c0, vt0.c0))))) INNER JOIN v0 ON SUBSTR(((NULL)%(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END) WHERE ((((((v0.c0) ISNULL)))<>((((vt1.c0)<<(v0.c0)))))) ORDER BY v0.c0  NULLS LAST, json_array_length(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) ISNULL)))<>((((vt1.c0)<<(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)*(vt1.c0)) IN ((((v0.c0, v0.c0, v0.c0))<>((vt1.c0, vt1.c0, vt0.c0))))) INNER JOIN v0 ON SUBSTR(((NULL)%(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END) ORDER BY v0.c0  NULLS LAST, json_array_length(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)*(vt1.c0)) IN ((((v0.c0, v0.c0, v0.c0))<>((vt1.c0, vt1.c0, vt0.c0))))) INNER JOIN v0 ON SUBSTR(((NULL)%(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END) WHERE ((((((v0.c0) ISNULL)))<>((((vt1.c0)<<(v0.c0)))))) ORDER BY v0.c0  NULLS LAST, json_array_length(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) ISNULL)))<>((((vt1.c0)<<(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)*(vt1.c0)) IN ((((v0.c0, v0.c0, v0.c0))<>((vt1.c0, vt1.c0, vt0.c0))))) INNER JOIN v0 ON SUBSTR(((NULL)%(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END) ORDER BY v0.c0  NULLS LAST, json_array_length(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN vt1 ON x'' WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN vt1 ON x'');
SELECT ALL * FROM v0 INNER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN vt1 ON x'' WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN vt1 ON x'');
SELECT * FROM v0, vt0, vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN (LOWER(v0.c0)) AND (((vt0.c0)&(vt0.c0))))) ORDER BY ((vt0.c0)>>('<2y敇' COLLATE RTRIM))  NULLS FIRST, (((vt0.c0)<=(x'')) IN (0.06626369901908258)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) BETWEEN (LOWER(v0.c0)) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((vt0.c0)>>('<2y敇' COLLATE RTRIM))  NULLS FIRST, (((vt0.c0)<=(x'')) IN (0.06626369901908258)) ASC);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN (LOWER(v0.c0)) AND (((vt0.c0)&(vt0.c0))))) ORDER BY ((vt0.c0)>>('<2y敇' COLLATE RTRIM))  NULLS FIRST, (((vt0.c0)<=(x'')) IN (0.06626369901908258)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) BETWEEN (LOWER(v0.c0)) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((vt0.c0)>>('<2y敇' COLLATE RTRIM))  NULLS FIRST, (((vt0.c0)<=(x'')) IN (0.06626369901908258)) ASC);
SELECT * FROM vt0 WHERE (UPPER((vt0.c0 IN ()))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (UPPER((vt0.c0 IN ()))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (UPPER((vt0.c0 IN ()))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE x''  WHEN NULL THEN (NOT (0Xffffffffa9cd9bf8)) END LEFT OUTER JOIN v0 ON (((v0.c0 COLLATE NOCASE))>=((((vt1.c0) IS FALSE)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE x''  WHEN NULL THEN (NOT (0xffffffffa9cd9bf8)) END LEFT OUTER JOIN v0 ON (((v0.c0 COLLATE NOCASE))>=((((vt1.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE x''  WHEN NULL THEN (NOT (0Xffffffffa9cd9bf8)) END LEFT OUTER JOIN v0 ON (((v0.c0 COLLATE NOCASE))>=((((vt1.c0) IS FALSE)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE x''  WHEN NULL THEN (NOT (0xffffffffa9cd9bf8)) END LEFT OUTER JOIN v0 ON (((v0.c0 COLLATE NOCASE))>=((((vt1.c0) IS FALSE)))));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((v0.c0)%(vt0.c0)))>=(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(vt0.c0)))>=(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((v0.c0)%(vt0.c0)))>=(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(vt0.c0)))>=(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(HEX(vt0.c0)) WHERE (('sw#''\n' COLLATE BINARY IN ())) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((('sw#''\n' COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(HEX(vt0.c0)) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(HEX(vt0.c0)) WHERE (('sw#''\n' COLLATE BINARY IN ())) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((('sw#''\n' COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(HEX(vt0.c0)) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC);
SELECT * FROM vt0, vt1, v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT * FROM vt1, v0, vt0 WHERE (CAST('-#dZ' AS REAL)) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (NOT (vt1.c0)) WHEN ((vt0.c0)|(v0.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS NOT(x'')) THEN CAST(vt1.c0 AS NUMERIC) ELSE x'' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-#dZ' AS REAL)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (NOT (vt1.c0)) WHEN ((vt0.c0)|(v0.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS NOT(x'')) THEN CAST(vt1.c0 AS NUMERIC) ELSE x'' END DESC);
SELECT * FROM vt1, v0, vt0 WHERE (CAST('-#dZ' AS REAL)) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (NOT (vt1.c0)) WHEN ((vt0.c0)|(v0.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS NOT(x'')) THEN CAST(vt1.c0 AS NUMERIC) ELSE x'' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-#dZ' AS REAL)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (NOT (vt1.c0)) WHEN ((vt0.c0)|(v0.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS NOT(x'')) THEN CAST(vt1.c0 AS NUMERIC) ELSE x'' END DESC);
SELECT * FROM vt1, v0, vt0 WHERE (CAST('-#dZ' AS REAL)) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (NOT (vt1.c0)) WHEN ((vt0.c0)|(v0.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS NOT(x'')) THEN CAST(vt1.c0 AS NUMERIC) ELSE x'' END DESC;
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (v0.c0) ORDER BY ((((((((((((NULL)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR('-455477998')))AND((NOT (vt1.c0)))))OR(1065333683)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((((((NULL)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR('-455477998')))AND((NOT (vt1.c0)))))OR(1065333683)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (v0.c0) ORDER BY ((((((((((((NULL)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR('-455477998')))AND((NOT (vt1.c0)))))OR(1065333683)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((((((NULL)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR('-455477998')))AND((NOT (vt1.c0)))))OR(1065333683)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(x'') COLLATE BINARY) ORDER BY vt0.c0, ((((((vt0.c0))=((vt0.c0))), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS BLOB)))==((((vt0.c0)=(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(x'') COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((vt0.c0))==((vt0.c0))), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS BLOB)))==((((vt0.c0)==(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(x'') COLLATE BINARY) ORDER BY vt0.c0, ((((((vt0.c0))=((vt0.c0))), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS BLOB)))==((((vt0.c0)=(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(x'') COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((vt0.c0))==((vt0.c0))), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS BLOB)))==((((vt0.c0)==(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(x'') COLLATE BINARY) ORDER BY vt0.c0, ((((((vt0.c0))=((vt0.c0))), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS BLOB)))==((((vt0.c0)=(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) END;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY WHERE (-300641957);
SELECT SUM(count) FROM (SELECT ALL ((-300641957) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY WHERE (-300641957);
SELECT SUM(count) FROM (SELECT ALL ((-300641957) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY WHERE (-300641957);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (JULIANDAY((- (v0.c0)), CAST(v0.c0 AS BLOB), LIKELIHOOD(vt0.c0, 0.9622806316882827))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((JULIANDAY((- (v0.c0)), CAST(v0.c0 AS BLOB), LIKELIHOOD(vt0.c0, 0.9622806316882827))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (JULIANDAY((- (v0.c0)), CAST(v0.c0 AS BLOB), LIKELIHOOD(vt0.c0, 0.9622806316882827))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((JULIANDAY((- (v0.c0)), CAST(v0.c0 AS BLOB), LIKELIHOOD(vt0.c0, 0.9622806316882827))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY v0.c0);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL COLLATE RTRIM)IS NOT(0xffffffffd96c98c8))) ORDER BY vt0.c0, CAST(CAST(x'' AS TEXT) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM)IS NOT(0Xffffffffd96c98c8))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, CAST(CAST(x'' AS TEXT) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL COLLATE RTRIM)IS NOT(0xffffffffd96c98c8))) ORDER BY vt0.c0, CAST(CAST(x'' AS TEXT) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM)IS NOT(0Xffffffffd96c98c8))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, CAST(CAST(x'' AS TEXT) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL COLLATE RTRIM)IS NOT(0xffffffffd96c98c8))) ORDER BY vt0.c0, CAST(CAST(x'' AS TEXT) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (LIKELY(DISTINCT ((vt1.c0)&(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt1.c0)&(v0.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (LIKELY(DISTINCT ((vt1.c0)&(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt1.c0)&(v0.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))IS NOT(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0)))IS NOT(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))IS NOT(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0)))IS NOT(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))IS NOT(vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt1 INNER JOIN vt0 ON ((v0.c0) BETWEEN ((((vt0.c0))=((vt1.c0)))) AND (((v0.c0)!=(v0.c0)))) CROSS JOIN v0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE WHERE (CASE x''  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN TYPEOF(DISTINCT vt1.c0) END) ORDER BY 'x>Z1DN' DESC  NULLS FIRST, (((vt0.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN TYPEOF(DISTINCT vt1.c0) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((v0.c0) BETWEEN ((((vt0.c0))=((vt1.c0)))) AND (((v0.c0)!=(v0.c0)))) CROSS JOIN v0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE ORDER BY 'x>Z1DN' DESC  NULLS FIRST, (((vt0.c0) NOTNULL) IN ()));
SELECT * FROM vt1 INNER JOIN vt0 ON ((v0.c0) BETWEEN ((((vt0.c0))=((vt1.c0)))) AND (((v0.c0)!=(v0.c0)))) CROSS JOIN v0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE WHERE (CASE x''  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN TYPEOF(DISTINCT vt1.c0) END) ORDER BY 'x>Z1DN' DESC  NULLS FIRST, (((vt0.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN TYPEOF(DISTINCT vt1.c0) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((v0.c0) BETWEEN ((((vt0.c0))=((vt1.c0)))) AND (((v0.c0)!=(v0.c0)))) CROSS JOIN v0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE ORDER BY 'x>Z1DN' DESC  NULLS FIRST, (((vt0.c0) NOTNULL) IN ()));
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((0.2309625004390614)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((0.2309625004390614)!=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((0.2309625004390614)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((0.2309625004390614)!=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (COALESCE(vt0.c0 COLLATE NOCASE, (('-426058847')<>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt0.c0 COLLATE NOCASE, (('-426058847')<>(vt1.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (COALESCE(vt0.c0 COLLATE NOCASE, (('-426058847')<>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt0.c0 COLLATE NOCASE, (('-426058847')<>(vt1.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (COALESCE(vt0.c0 COLLATE NOCASE, (('-426058847')<>(vt1.c0))));
SELECT * FROM v0, vt1 WHERE (CAST(((vt1.c0) IS TRUE) AS INTEGER)) ORDER BY CAST(-14154871 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(-14154871 COLLATE NOCASE AS BLOB) ASC);
SELECT * FROM v0, vt1 WHERE (CAST(((vt1.c0) IS TRUE) AS INTEGER)) ORDER BY CAST(-14154871 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(-14154871 COLLATE NOCASE AS BLOB) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ())  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7978511427036636) AND (((v0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ())  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7978511427036636) AND (((v0.c0) IS TRUE))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ())  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7978511427036636) AND (((v0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ())  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7978511427036636) AND (((v0.c0) IS TRUE))) ASC);
SELECT * FROM v0, vt1 WHERE (CASE WHEN 0.04045274517817665 THEN vt1.c0 WHEN 244848847 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.04045274517817665 THEN vt1.c0 WHEN 244848847 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE (CASE WHEN 0.04045274517817665 THEN vt1.c0 WHEN 244848847 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.04045274517817665 THEN vt1.c0 WHEN 244848847 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY ((((v0.c0)*(vt0.c0)))<(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((v0.c0)*(vt0.c0)))<(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, vt1, v0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY ((((v0.c0)*(vt0.c0)))<(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((v0.c0)*(vt0.c0)))<(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM v0 NOT INDEXED, vt1 WHERE (LIKELY((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((NOT (v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0 NOT INDEXED, vt1 WHERE (LIKELY((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((NOT (v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((v0.c0 IN ()) IN (vt0.c0, LTRIM(vt1.c0, vt1.c0)))) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN (vt0.c0, LTRIM(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((v0.c0 IN ()) IN (vt0.c0, LTRIM(vt1.c0, vt1.c0)))) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN (vt0.c0, LTRIM(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((v0.c0 IN ()) IN (vt0.c0, LTRIM(vt1.c0, vt1.c0)))) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (((json_array(v0.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0, vt1.c0))OR(((v0.c0) NOTNULL)))) ORDER BY (((((vt1.c0))==((vt1.c0))))AND(TRIM(DISTINCT v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(v0.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0, vt1.c0))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, v0, vt0 NOT INDEXED ORDER BY (((((vt1.c0))=((vt1.c0))))AND(TRIM(DISTINCT v0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (((json_array(v0.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0, vt1.c0))OR(((v0.c0) NOTNULL)))) ORDER BY (((((vt1.c0))==((vt1.c0))))AND(TRIM(DISTINCT v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(v0.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0, vt1.c0))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, v0, vt0 NOT INDEXED ORDER BY (((((vt1.c0))=((vt1.c0))))AND(TRIM(DISTINCT v0.c0))) ASC);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ((((vt1.c0, vt0.c0, v0.c0, NULL, vt0.c0, vt1.c0, v0.c0, 494194117, vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (vt1.c0 IN ()), (NOT (vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((v0.c0) IS FALSE), (((v0.c0))!=((vt1.c0))), v0.c0, (NOT (vt0.c0)), ((((x'5875')OR(0Xffffffffbcd52eb1)))OR(v0.c0)))) AND ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)GLOB(v0.c0)), (vt0.c0 IN (vt1.c0, v0.c0)), CAST(vt0.c0 AS INTEGER), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY, v0.c0)))) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c0, v0.c0, NULL, vt0.c0, vt1.c0, v0.c0, 494194117, vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (vt1.c0 IN ()), (NOT (vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((v0.c0) IS FALSE), (((v0.c0))!=((vt1.c0))), v0.c0, (NOT (vt0.c0)), ((((x'5875')OR(0Xffffffffbcd52eb1)))OR(v0.c0)))) AND ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)GLOB(v0.c0)), (vt0.c0 IN (vt1.c0, v0.c0)), CAST(vt0.c0 AS INTEGER), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY, v0.c0)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ((((vt1.c0, vt0.c0, v0.c0, NULL, vt0.c0, vt1.c0, v0.c0, 494194117, vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (vt1.c0 IN ()), (NOT (vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((v0.c0) IS FALSE), (((v0.c0))!=((vt1.c0))), v0.c0, (NOT (vt0.c0)), ((((x'5875')OR(0Xffffffffbcd52eb1)))OR(v0.c0)))) AND ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)GLOB(v0.c0)), (vt0.c0 IN (vt1.c0, v0.c0)), CAST(vt0.c0 AS INTEGER), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY, v0.c0)))) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c0, v0.c0, NULL, vt0.c0, vt1.c0, v0.c0, 494194117, vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (vt1.c0 IN ()), (NOT (vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((v0.c0) IS FALSE), (((v0.c0))!=((vt1.c0))), v0.c0, (NOT (vt0.c0)), ((((x'5875')OR(0Xffffffffbcd52eb1)))OR(v0.c0)))) AND ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)GLOB(v0.c0)), (vt0.c0 IN (vt1.c0, v0.c0)), CAST(vt0.c0 AS INTEGER), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY, v0.c0)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt1, v0, vt0 WHERE (LIKELY(DISTINCT vt0.c0 COLLATE RTRIM)) ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC, (((+ (vt1.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC, (((+ (vt1.c0))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt1, v0, vt0 WHERE (LIKELY(DISTINCT vt0.c0 COLLATE RTRIM)) ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC, (((+ (vt1.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC, (((+ (vt1.c0))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)GLOB(v0.c0)))IS NOT(DATETIME(vt1.c0, vt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON vt0.c0 WHERE (vt1.c0) ORDER BY NULL  NULLS LAST, x''  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt1.c0)AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)GLOB(v0.c0)))IS NOT(DATETIME(vt1.c0, vt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON vt0.c0 ORDER BY NULL  NULLS LAST, x''  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt1.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)GLOB(v0.c0)))IS NOT(DATETIME(vt1.c0, vt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON vt0.c0 WHERE (vt1.c0) ORDER BY NULL  NULLS LAST, x''  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt1.c0)AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)GLOB(v0.c0)))IS NOT(DATETIME(vt1.c0, vt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON vt0.c0 ORDER BY NULL  NULLS LAST, x''  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt1.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY PRINTF((vt0.c0 IN (-1222122337, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY PRINTF((vt0.c0 IN (-1222122337, vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY PRINTF((vt0.c0 IN (-1222122337, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY PRINTF((vt0.c0 IN (-1222122337, vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY PRINTF((vt0.c0 IN (-1222122337, vt0.c0)));
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)|(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('779302295')) THEN v0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)|(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('779302295')) THEN v0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)|(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('779302295')) THEN v0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)|(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('779302295')) THEN v0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM vt0, vt1 NATURAL JOIN v0 WHERE (CASE (vt0.c0 IN ())  WHEN (- ('꽩7*q89')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END WHEN CASE vt0.c0  WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 2.1577073E7 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN (- ('꽩7*q89')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END WHEN CASE vt0.c0  WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 2.1577073E7 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN v0);
SELECT * FROM vt0, vt1 NATURAL JOIN v0 WHERE (CASE (vt0.c0 IN ())  WHEN (- ('꽩7*q89')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END WHEN CASE vt0.c0  WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 2.1577073E7 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN (- ('꽩7*q89')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END WHEN CASE vt0.c0  WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 2.1577073E7 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN v0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(TRIM(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(TRIM(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(TRIM(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(TRIM(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(TRIM(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (ABS(DISTINCT DATE(vt1.c0, v0.c0, vt0.c0))) ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, x'', v0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT DATE(vt1.c0, v0.c0, vt0.c0))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, x'', v0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (ABS(DISTINCT DATE(vt1.c0, v0.c0, vt0.c0))) ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, x'', v0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT DATE(vt1.c0, v0.c0, vt0.c0))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, x'', v0.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((NULL) IS FALSE) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt0 WHERE (((NULL) IS FALSE) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt0 WHERE (((NULL) IS FALSE) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB) DESC;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE ((vt1.c0)OR(vt0.c0))  WHEN (+ (vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt0.c0) ISNULL) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 END) ORDER BY 'tmnRp';
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)OR(vt0.c0))  WHEN (+ (vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt0.c0) ISNULL) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY 'tmnRp');
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE ((vt1.c0)OR(vt0.c0))  WHEN (+ (vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt0.c0) ISNULL) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 END) ORDER BY 'tmnRp';
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)OR(vt0.c0))  WHEN (+ (vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt0.c0) ISNULL) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY 'tmnRp');
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE ((vt1.c0)OR(vt0.c0))  WHEN (+ (vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt0.c0) ISNULL) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 END) ORDER BY 'tmnRp';
SELECT ALL * FROM vt1 INNER JOIN vt0 ON TIME(vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (x'cfef')), 0.8477909855155861, ((vt1.c0) BETWEEN ('-2010126056') AND (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(0xffffffffd09602da))) WHERE ((((vt1.c0)) NOT BETWEEN (('')) AND ((x''))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (('')) AND ((x''))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TIME(vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (x'cfef')), 0.8477909855155861, ((vt1.c0) BETWEEN ('-2010126056') AND (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(0Xffffffffd09602da))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON TIME(vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (x'cfef')), 0.8477909855155861, ((vt1.c0) BETWEEN ('-2010126056') AND (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(0xffffffffd09602da))) WHERE ((((vt1.c0)) NOT BETWEEN (('')) AND ((x''))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (('')) AND ((x''))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TIME(vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (x'cfef')), 0.8477909855155861, ((vt1.c0) BETWEEN ('-2010126056') AND (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(0Xffffffffd09602da))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON TIME(vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (x'cfef')), 0.8477909855155861, ((vt1.c0) BETWEEN ('-2010126056') AND (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(0xffffffffd09602da))) WHERE ((((vt1.c0)) NOT BETWEEN (('')) AND ((x''))) COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0, 0.7377696966445261)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN (vt1.c0, 0.7377696966445261)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0, 0.7377696966445261)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN (vt1.c0, 0.7377696966445261)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0, 0.7377696966445261)) AS TEXT));
SELECT ALL * FROM v0 WHERE ((- (v0.c0)) COLLATE NOCASE) ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)IS NOT(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) NOTNULL) THEN ((v0.c0)OR('2㵱')) ELSE UNLIKELY(DISTINCT v0.c0) END;
SELECT SUM(count) FROM (SELECT (((- (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)IS NOT(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) NOTNULL) THEN ((v0.c0)OR('2㵱')) ELSE UNLIKELY(DISTINCT v0.c0) END);
SELECT ALL * FROM v0 WHERE ((- (v0.c0)) COLLATE NOCASE) ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)IS NOT(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) NOTNULL) THEN ((v0.c0)OR('2㵱')) ELSE UNLIKELY(DISTINCT v0.c0) END;
SELECT SUM(count) FROM (SELECT (((- (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)IS NOT(v0.c0)) THEN (- (v0.c0)) WHEN ((v0.c0) NOTNULL) THEN ((v0.c0)OR('2㵱')) ELSE UNLIKELY(DISTINCT v0.c0) END);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((+ (NULL))) ORDER BY ((((vt0.c0) BETWEEN (0Xffffffff92ef2ef5) AND (vt1.c0))) BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (x'fe75')) ASC, (NOT (CAST(v0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (0xffffffff92ef2ef5) AND (vt1.c0))) BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (x'fe75')) ASC, (NOT (CAST(v0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((+ (NULL))) ORDER BY ((((vt0.c0) BETWEEN (0Xffffffff92ef2ef5) AND (vt1.c0))) BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (x'fe75')) ASC, (NOT (CAST(v0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (0xffffffff92ef2ef5) AND (vt1.c0))) BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (x'fe75')) ASC, (NOT (CAST(v0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM vt1, v0, vt0 WHERE ((((- (vt1.c0)))&(CHAR(vt1.c0)))) ORDER BY ('-500767939' IN ('-1700451645' COLLATE BINARY)) DESC, CAST(((vt1.c0)GLOB(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))&(CHAR(vt1.c0)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ('-500767939' IN ('-1700451645' COLLATE BINARY)) DESC, CAST(((vt1.c0)GLOB(vt0.c0)) AS BLOB));
SELECT * FROM vt1, v0, vt0 WHERE ((((- (vt1.c0)))&(CHAR(vt1.c0)))) ORDER BY ('-500767939' IN ('-1700451645' COLLATE BINARY)) DESC, CAST(((vt1.c0)GLOB(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))&(CHAR(vt1.c0)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ('-500767939' IN ('-1700451645' COLLATE BINARY)) DESC, CAST(((vt1.c0)GLOB(vt0.c0)) AS BLOB));
SELECT * FROM vt1, v0, vt0 WHERE ((((- (vt1.c0)))&(CHAR(vt1.c0)))) ORDER BY ('-500767939' IN ('-1700451645' COLLATE BINARY)) DESC, CAST(((vt1.c0)GLOB(vt0.c0)) AS BLOB);
SELECT COUNT(*) FROM vt1 WHERE ((- ((NOT (vt1.c0))))) ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)-(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt1.c0)) WHEN -9.73506461E8 THEN ((vt1.c0)||(vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) WHEN (((vt1.c0))<>((vt1.c0))) THEN json_object(vt1.c0, vt1.c0) END ASC;
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)-(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt1.c0)) WHEN -9.73506461E8 THEN ((vt1.c0)||(vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) WHEN (((vt1.c0))<>((vt1.c0))) THEN json_object(vt1.c0, vt1.c0) END ASC);
SELECT COUNT(*) FROM vt1 WHERE ((- ((NOT (vt1.c0))))) ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)-(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt1.c0)) WHEN -9.73506461E8 THEN ((vt1.c0)||(vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) WHEN (((vt1.c0))<>((vt1.c0))) THEN json_object(vt1.c0, vt1.c0) END ASC;
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)-(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt1.c0)) WHEN -9.73506461E8 THEN ((vt1.c0)||(vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) WHEN (((vt1.c0))<>((vt1.c0))) THEN json_object(vt1.c0, vt1.c0) END ASC);
SELECT COUNT(*) FROM vt1 WHERE ((- ((NOT (vt1.c0))))) ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)-(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt1.c0)) WHEN -9.73506461E8 THEN ((vt1.c0)||(vt1.c0)) WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) WHEN (((vt1.c0))<>((vt1.c0))) THEN json_object(vt1.c0, vt1.c0) END ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC));
SELECT * FROM vt1, vt0, v0 WHERE ('') ORDER BY LAST_INSERT_ROWID() COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY LAST_INSERT_ROWID() COLLATE BINARY  NULLS LAST);
SELECT * FROM vt1, vt0, v0 WHERE ('') ORDER BY LAST_INSERT_ROWID() COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY LAST_INSERT_ROWID() COLLATE BINARY  NULLS LAST);
SELECT * FROM vt1, vt0, v0 WHERE ('') ORDER BY LAST_INSERT_ROWID() COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON CASE (('\r/Aw{')=(vt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN ((((((((((((vt0.c0)AND(0.6282338501121963)))OR(1897305011)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((v0.c0)/(vt0.c0)) END WHERE (SUBSTR(CAST(vt1.c0 AS BLOB), v0.c0)) ORDER BY ((vt1.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(CAST(vt1.c0 AS BLOB), v0.c0)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON CASE (('\r/Aw{')=(vt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN ((((((((((((vt0.c0)AND(0.6282338501121963)))OR(1897305011)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((v0.c0)/(vt0.c0)) END ORDER BY ((vt1.c0 IN ()) IN ()) DESC);
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON CASE (('\r/Aw{')=(vt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN ((((((((((((vt0.c0)AND(0.6282338501121963)))OR(1897305011)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((v0.c0)/(vt0.c0)) END WHERE (SUBSTR(CAST(vt1.c0 AS BLOB), v0.c0)) ORDER BY ((vt1.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(CAST(vt1.c0 AS BLOB), v0.c0)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON CASE (('\r/Aw{')=(vt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN ((((((((((((vt0.c0)AND(0.6282338501121963)))OR(1897305011)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((v0.c0)/(vt0.c0)) END ORDER BY ((vt1.c0 IN ()) IN ()) DESC);
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>=((NULLIF(DISTINCT vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER)))>=((NULLIF(DISTINCT vt1.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>=((NULLIF(DISTINCT vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER)))>=((NULLIF(DISTINCT vt1.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>=((NULLIF(DISTINCT vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN vt1 ON ((json_remove(v0.c0, vt0.c0)) BETWEEN (((((v0.c0)OR(vt0.c0)))OR(vt1.c0))) AND (vt0.c0)) INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS FALSE) WHERE (CASE WHEN (0.35259474971828086 IN ()) THEN ((vt1.c0)<=(v0.c0)) ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (0.35259474971828086 IN ()) THEN ((vt1.c0)<=(v0.c0)) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON ((json_remove(v0.c0, vt0.c0)) BETWEEN (((((v0.c0)OR(vt0.c0)))OR(vt1.c0))) AND (vt0.c0)) INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS FALSE));
SELECT * FROM v0 CROSS JOIN vt1 ON ((json_remove(v0.c0, vt0.c0)) BETWEEN (((((v0.c0)OR(vt0.c0)))OR(vt1.c0))) AND (vt0.c0)) INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS FALSE) WHERE (CASE WHEN (0.35259474971828086 IN ()) THEN ((vt1.c0)<=(v0.c0)) ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (0.35259474971828086 IN ()) THEN ((vt1.c0)<=(v0.c0)) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON ((json_remove(v0.c0, vt0.c0)) BETWEEN (((((v0.c0)OR(vt0.c0)))OR(vt1.c0))) AND (vt0.c0)) INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS FALSE));
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, UNLIKELY(CAST(0.8563308518997692 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, UNLIKELY(CAST(0.8563308518997692 AS TEXT)) ASC);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, UNLIKELY(CAST(0.8563308518997692 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, UNLIKELY(CAST(0.8563308518997692 AS TEXT)) ASC);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))>=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, UNLIKELY(CAST(0.8563308518997692 AS TEXT)) ASC;
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)*(v0.c0)), x'')) AND ((v0.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)*(v0.c0)), x'')) AND ((v0.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)*(v0.c0)), x'')) AND ((v0.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)*(v0.c0)), x'')) AND ((v0.c0, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>=(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (~ ((((vt0.c0))!=((vt0.c0))))) WHERE (((((NULL)>>(vt0.c0))) IS FALSE)) ORDER BY (((vt1.c0 IN ()))<<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (~ ((((vt0.c0))<>((vt0.c0))))) ORDER BY (((vt1.c0 IN ()))<<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (~ ((((vt0.c0))!=((vt0.c0))))) WHERE (((((NULL)>>(vt0.c0))) IS FALSE)) ORDER BY (((vt1.c0 IN ()))<<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (~ ((((vt0.c0))<>((vt0.c0))))) ORDER BY (((vt1.c0 IN ()))<<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (~ ((((vt0.c0))!=((vt0.c0))))) WHERE (((((NULL)>>(vt0.c0))) IS FALSE)) ORDER BY (((vt1.c0 IN ()))<<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM v0, vt1 WHERE ((((v0.c0 COLLATE RTRIM))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)))) ORDER BY (~ (((vt1.c0)IS(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (~ (((vt1.c0)IS(vt1.c0)))));
SELECT * FROM v0, vt1 WHERE ((((v0.c0 COLLATE RTRIM))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)))) ORDER BY (~ (((vt1.c0)IS(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (~ (((vt1.c0)IS(vt1.c0)))));
SELECT * FROM v0, vt0, vt1 WHERE (CASE CASE NULL  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END  WHEN x'e50b' THEN v0.c0 COLLATE BINARY ELSE vt1.c0 END) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE NULL  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END  WHEN x'e50b' THEN v0.c0 COLLATE BINARY ELSE vt1.c0 END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY vt1.c0 DESC);
SELECT * FROM v0, vt0, vt1 WHERE (CASE CASE NULL  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END  WHEN x'e50b' THEN v0.c0 COLLATE BINARY ELSE vt1.c0 END) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE NULL  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END  WHEN x'e50b' THEN v0.c0 COLLATE BINARY ELSE vt1.c0 END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY vt1.c0 DESC);
SELECT COUNT(*) FROM v0, vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE NOCASE WHERE (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE BINARY) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE NOCASE ORDER BY vt1.c0);
SELECT COUNT(*) FROM v0, vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE NOCASE WHERE (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE BINARY) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE NOCASE ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE BINARY) ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)AND('431530146')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)AND('431530146')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE BINARY) ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)AND('431530146')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)AND('431530146')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE BINARY) ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)AND('431530146')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (CASE WHEN ((vt0.c0)>(vt1.c0)) THEN v0.c0 END) ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))>=((vt0.c0)))) AND ((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>(vt1.c0)) THEN v0.c0 END) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))>=((vt0.c0)))) AND ((+ (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (CASE WHEN ((vt0.c0)>(vt1.c0)) THEN v0.c0 END) ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))>=((vt0.c0)))) AND ((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>(vt1.c0)) THEN v0.c0 END) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))>=((vt0.c0)))) AND ((+ (vt0.c0)))) DESC);
SELECT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0, vt1, vt0 WHERE ((NOT (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM v0, vt1, vt0 WHERE ((NOT (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((((((((((v0.c0))>((0.6586742494545671))))OR(CAST(vt1.c0 AS BLOB))))OR(vt0.c0)))AND(HEX(vt1.c0))))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, CASE WHEN ((x'a97e')%(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN '-1553745302' THEN vt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((((((((((v0.c0))>((0.6586742494545671))))OR(CAST(vt1.c0 AS BLOB))))OR(vt0.c0)))AND(HEX(vt1.c0))))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, CASE WHEN ((x'a97e')%(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN '-1553745302' THEN vt1.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((((((((((v0.c0))>((0.6586742494545671))))OR(CAST(vt1.c0 AS BLOB))))OR(vt0.c0)))AND(HEX(vt1.c0))))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, CASE WHEN ((x'a97e')%(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN '-1553745302' THEN vt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((((((((((v0.c0))>((0.6586742494545671))))OR(CAST(vt1.c0 AS BLOB))))OR(vt0.c0)))AND(HEX(vt1.c0))))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, CASE WHEN ((x'a97e')%(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN '-1553745302' THEN vt1.c0 END END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, v0 WHERE (LENGTH((0.43567288510346025 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((LENGTH((0.43567288510346025 IN (v0.c0)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (LENGTH((0.43567288510346025 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((LENGTH((0.43567288510346025 IN (v0.c0)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)==(vt1.c0))))<=((vt1.c0)))) ORDER BY ((((vt1.c0 IN ())))>=((((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)=(vt1.c0))))<=((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0 IN ())))>=((((vt1.c0)=(vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)==(vt1.c0))))<=((vt1.c0)))) ORDER BY ((((vt1.c0 IN ())))>=((((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)=(vt1.c0))))<=((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0 IN ())))>=((((vt1.c0)=(vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)==(vt1.c0))))<=((vt1.c0)))) ORDER BY ((((vt1.c0 IN ())))>=((((vt1.c0)==(vt1.c0)))));
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), vt0.c0, ((vt0.c0)*(vt1.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END, CAST(v0.c0 AS INTEGER), json_array_length(vt1.c0, x''))))) ORDER BY ((vt1.c0)/(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), vt0.c0, ((vt0.c0)*(vt1.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END, CAST(v0.c0 AS INTEGER), json_array_length(vt1.c0, x''))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((vt1.c0)/(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), vt0.c0, ((vt0.c0)*(vt1.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END, CAST(v0.c0 AS INTEGER), json_array_length(vt1.c0, x''))))) ORDER BY ((vt1.c0)/(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), vt0.c0, ((vt0.c0)*(vt1.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END, CAST(v0.c0 AS INTEGER), json_array_length(vt1.c0, x''))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((vt1.c0)/(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, v0 WHERE (((((((vt1.c0))>((vt1.c0))), '1613830555', NULL))<((NULL COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (('-855623324') NOT BETWEEN (vt1.c0) AND (v0.c0)))))) ORDER BY ((x'bb72') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0))>((vt1.c0))), '1613830555', NULL))<((NULL COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (('-855623324') NOT BETWEEN (vt1.c0) AND (v0.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY ((x'bb72') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE (((((((vt1.c0))>((vt1.c0))), '1613830555', NULL))<((NULL COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (('-855623324') NOT BETWEEN (vt1.c0) AND (v0.c0)))))) ORDER BY ((x'bb72') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0))>((vt1.c0))), '1613830555', NULL))<((NULL COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (('-855623324') NOT BETWEEN (vt1.c0) AND (v0.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY ((x'bb72') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE (((((((vt1.c0))>((vt1.c0))), '1613830555', NULL))<((NULL COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (('-855623324') NOT BETWEEN (vt1.c0) AND (v0.c0)))))) ORDER BY ((x'bb72') BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)>(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON LIKELY(CAST(vt1.c0 AS BLOB)) WHERE (CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (x'')) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON LIKELY(CAST(vt1.c0 AS BLOB)));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON LIKELY(CAST(vt1.c0 AS BLOB)) WHERE (CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (x'')) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON LIKELY(CAST(vt1.c0 AS BLOB)));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON LIKELY(CAST(vt1.c0 AS BLOB)) WHERE (CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (x'')) END);
SELECT * FROM v0, vt0 WHERE (v0.c0) ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(0.16708223655845522)))IS(((v0.c0)*(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(0.16708223655845522)))IS(((v0.c0)*(v0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (v0.c0) ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(0.16708223655845522)))IS(((v0.c0)*(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(0.16708223655845522)))IS(((v0.c0)*(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((('1504614472', vt0.c0, vt0.c0)) NOT BETWEEN (((((x'', NULL, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, 'K!'))), v0.c0 COLLATE NOCASE, CAST('G0' AS BLOB))) AND ((vt0.c0, vt0.c0, (((v0.c0))<((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((('1504614472', vt0.c0, vt0.c0)) NOT BETWEEN (((((x'', NULL, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, 'K!'))), v0.c0 COLLATE NOCASE, CAST('G0' AS BLOB))) AND ((vt0.c0, vt0.c0, (((v0.c0))<((v0.c0))))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((('1504614472', vt0.c0, vt0.c0)) NOT BETWEEN (((((x'', NULL, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, 'K!'))), v0.c0 COLLATE NOCASE, CAST('G0' AS BLOB))) AND ((vt0.c0, vt0.c0, (((v0.c0))<((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((('1504614472', vt0.c0, vt0.c0)) NOT BETWEEN (((((x'', NULL, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, 'K!'))), v0.c0 COLLATE NOCASE, CAST('G0' AS BLOB))) AND ((vt0.c0, vt0.c0, (((v0.c0))<((v0.c0))))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0, vt1 WHERE ((((- (vt1.c0))) BETWEEN (v0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY COALESCE(DISTINCT ((vt0.c0)IS NOT(v0.c0)), (- (vt0.c0)), ((v0.c0)*(v0.c0)), ((vt1.c0)||(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) BETWEEN (v0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY COALESCE(DISTINCT ((vt0.c0)IS NOT(v0.c0)), (- (vt0.c0)), ((v0.c0)*(v0.c0)), ((vt1.c0)||(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0, vt1 WHERE ((((- (vt1.c0))) BETWEEN (v0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY COALESCE(DISTINCT ((vt0.c0)IS NOT(v0.c0)), (- (vt0.c0)), ((v0.c0)*(v0.c0)), ((vt1.c0)||(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) BETWEEN (v0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY COALESCE(DISTINCT ((vt0.c0)IS NOT(v0.c0)), (- (vt0.c0)), ((v0.c0)*(v0.c0)), ((vt1.c0)||(vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((+ (vt1.c0)))IS(((0Xffffffffb10e8b54) BETWEEN (v0.c0) AND (0xffffffffd449c479)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))IS(((0xffffffffb10e8b54) BETWEEN (v0.c0) AND (0xffffffffd449c479))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((+ (vt1.c0)))IS(((0Xffffffffb10e8b54) BETWEEN (v0.c0) AND (0xffffffffd449c479)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))IS(((0xffffffffb10e8b54) BETWEEN (v0.c0) AND (0xffffffffd449c479))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM v0, vt1 WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0, vt1 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0, vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((vt1.c0) NOTNULL))))) ORDER BY 'f4s' DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((vt1.c0) NOTNULL))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY 'f4s' DESC);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((vt1.c0) NOTNULL))))) ORDER BY 'f4s' DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((vt1.c0) NOTNULL))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY 'f4s' DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY LIKELY(vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(vt1.c0) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY LIKELY(vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(vt1.c0) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY LIKELY(vt1.c0) DESC;
SELECT * FROM v0, vt1 WHERE (x'') ORDER BY LIKELY(((v0.c0)GLOB(vt1.c0)))  NULLS LAST, ((load_extension(NULL, v0.c0))%(('-1290717819' IN (v0.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt1 ORDER BY LIKELY(((v0.c0)GLOB(vt1.c0)))  NULLS LAST, ((load_extension(NULL, v0.c0))%(('-1290717819' IN (v0.c0, vt1.c0)))) DESC);
SELECT * FROM v0, vt1 WHERE (x'') ORDER BY LIKELY(((v0.c0)GLOB(vt1.c0)))  NULLS LAST, ((load_extension(NULL, v0.c0))%(('-1290717819' IN (v0.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt1 ORDER BY LIKELY(((v0.c0)GLOB(vt1.c0)))  NULLS LAST, ((load_extension(NULL, v0.c0))%(('-1290717819' IN (v0.c0, vt1.c0)))) DESC);
SELECT * FROM vt0, vt1, v0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM v0, vt0 WHERE ((CAST('' AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST('' AS BLOB) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((CAST('' AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST('' AS BLOB) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((CAST('' AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON v0.c0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON v0.c0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON v0.c0);
SELECT ALL * FROM vt0, v0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (PRINTF(v0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (PRINTF(v0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (PRINTF(v0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (PRINTF(v0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.28673524692860275)) NOT BETWEEN ((+ (7.11459226E8))) AND (TOTAL_CHANGES()))) ORDER BY '0.04279829955803138' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt0.c0, 0.28673524692860275)) NOT BETWEEN ((+ (7.11459226E8))) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY '0.04279829955803138' COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.28673524692860275)) NOT BETWEEN ((+ (7.11459226E8))) AND (TOTAL_CHANGES()))) ORDER BY '0.04279829955803138' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt0.c0, 0.28673524692860275)) NOT BETWEEN ((+ (7.11459226E8))) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY '0.04279829955803138' COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.28673524692860275)) NOT BETWEEN ((+ (7.11459226E8))) AND (TOTAL_CHANGES()))) ORDER BY '0.04279829955803138' COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (json_type((((0.501096735603736)) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_type((((0.501096735603736)) BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (json_type((((0.501096735603736)) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_type((((0.501096735603736)) BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((vt1.c0 IN ())))<=((v0.c0 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON ((x'')IS NOT((~ (vt0.c0)))) WHERE (vt1.c0) ORDER BY NULL COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ('>Z3r!叅M') AND (LAST_INSERT_ROWID())) DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((vt1.c0 IN ())))<=((v0.c0 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON ((x'')IS NOT((~ (vt0.c0)))) ORDER BY NULL COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ('>Z3r!叅M') AND (LAST_INSERT_ROWID())) DESC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((vt1.c0 IN ())))<=((v0.c0 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON ((x'')IS NOT((~ (vt0.c0)))) WHERE (vt1.c0) ORDER BY NULL COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ('>Z3r!叅M') AND (LAST_INSERT_ROWID())) DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((vt1.c0 IN ())))<=((v0.c0 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON ((x'')IS NOT((~ (vt0.c0)))) ORDER BY NULL COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ('>Z3r!叅M') AND (LAST_INSERT_ROWID())) DESC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((('-1695337232'))==((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) ORDER BY (((0.8512065153914684)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((vt0.c0))) ASC, CASE vt1.c0 COLLATE NOCASE  WHEN ((vt0.c0) NOTNULL) THEN 'tZ*' ELSE ((('0.9275791777877976')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-1695337232'))=((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((0.8512065153914684)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((vt0.c0))) ASC, CASE vt1.c0 COLLATE NOCASE  WHEN ((vt0.c0) NOTNULL) THEN 'tZ*' ELSE ((('0.9275791777877976')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((('-1695337232'))==((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) ORDER BY (((0.8512065153914684)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((vt0.c0))) ASC, CASE vt1.c0 COLLATE NOCASE  WHEN ((vt0.c0) NOTNULL) THEN 'tZ*' ELSE ((('0.9275791777877976')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-1695337232'))=((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((0.8512065153914684)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((vt0.c0))) ASC, CASE vt1.c0 COLLATE NOCASE  WHEN ((vt0.c0) NOTNULL) THEN 'tZ*' ELSE ((('0.9275791777877976')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((CAST(vt0.c0 AS INTEGER))+(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))+(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((CAST(vt0.c0 AS INTEGER))+(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))+(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((CAST(vt0.c0 AS INTEGER))+(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT * FROM vt0, v0, vt1 WHERE (json_valid((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))) ORDER BY ((CAST(v0.c0 AS NUMERIC))+(vt1.c0 COLLATE NOCASE))  NULLS FIRST, (+ (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) DESC, CASE CAST(-426058847 AS BLOB)  WHEN ((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN 0.7621302557953195 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_valid((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((CAST(v0.c0 AS NUMERIC))+(vt1.c0 COLLATE NOCASE))  NULLS FIRST, (+ (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) DESC, CASE CAST(-426058847 AS BLOB)  WHEN ((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN 0.7621302557953195 COLLATE BINARY END  NULLS LAST);
SELECT * FROM vt0, v0, vt1 WHERE (json_valid((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))) ORDER BY ((CAST(v0.c0 AS NUMERIC))+(vt1.c0 COLLATE NOCASE))  NULLS FIRST, (+ (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) DESC, CASE CAST(-426058847 AS BLOB)  WHEN ((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN 0.7621302557953195 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_valid((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((CAST(v0.c0 AS NUMERIC))+(vt1.c0 COLLATE NOCASE))  NULLS FIRST, (+ (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) DESC, CASE CAST(-426058847 AS BLOB)  WHEN ((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN 0.7621302557953195 COLLATE BINARY END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0)));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (- ((vt0.c0 IN ()))) FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) NOTNULL) WHEN vt0.c0 THEN (+ (vt1.c0)) WHEN 0.6413921258813831 THEN NULL COLLATE RTRIM WHEN ((vt0.c0)%(vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN v0.c0 END WHERE ((((+ (vt1.c0)))>>(v0.c0))) ORDER BY ((((((v0.c0)OR(vt1.c0)))AND(v0.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND (((0.712846144523286)GLOB(0.7623320675031277)))) DESC, (LIKE(vt0.c0, vt0.c0) IN ()) ASC, CAST(vt1.c0 COLLATE BINARY AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))>>(v0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (- ((vt0.c0 IN ()))) FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) NOTNULL) WHEN vt0.c0 THEN (+ (vt1.c0)) WHEN 0.6413921258813831 THEN NULL COLLATE RTRIM WHEN ((vt0.c0)%(vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN v0.c0 END ORDER BY ((((((v0.c0)OR(vt1.c0)))AND(v0.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND (((0.712846144523286)GLOB(0.7623320675031277)))) DESC, (LIKE(vt0.c0, vt0.c0) IN ()) ASC, CAST(vt1.c0 COLLATE BINARY AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (- ((vt0.c0 IN ()))) FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) NOTNULL) WHEN vt0.c0 THEN (+ (vt1.c0)) WHEN 0.6413921258813831 THEN NULL COLLATE RTRIM WHEN ((vt0.c0)%(vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN v0.c0 END WHERE ((((+ (vt1.c0)))>>(v0.c0))) ORDER BY ((((((v0.c0)OR(vt1.c0)))AND(v0.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND (((0.712846144523286)GLOB(0.7623320675031277)))) DESC, (LIKE(vt0.c0, vt0.c0) IN ()) ASC, CAST(vt1.c0 COLLATE BINARY AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))>>(v0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (- ((vt0.c0 IN ()))) FULL OUTER JOIN vt1 ON CASE WHEN (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) NOTNULL) WHEN vt0.c0 THEN (+ (vt1.c0)) WHEN 0.6413921258813831 THEN NULL COLLATE RTRIM WHEN ((vt0.c0)%(vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN v0.c0 END ORDER BY ((((((v0.c0)OR(vt1.c0)))AND(v0.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND (((0.712846144523286)GLOB(0.7623320675031277)))) DESC, (LIKE(vt0.c0, vt0.c0) IN ()) ASC, CAST(vt1.c0 COLLATE BINARY AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (((NOT (vt0.c0)))*(((vt0.c0) NOT BETWEEN ('202461017') AND (vt0.c0)))) ASC, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))*(((vt0.c0) NOT BETWEEN ('202461017') AND (vt0.c0)))) ASC, NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (((NOT (vt0.c0)))*(((vt0.c0) NOT BETWEEN ('202461017') AND (vt0.c0)))) ASC, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))*(((vt0.c0) NOT BETWEEN ('202461017') AND (vt0.c0)))) ASC, NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (((NOT (vt0.c0)))*(((vt0.c0) NOT BETWEEN ('202461017') AND (vt0.c0)))) ASC, NULL DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, vt1, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (NULLIF(vt1.c0, vt0.c0)) AND (((vt0.c0) IS TRUE)))) ORDER BY (NOT (0.4391290938254392)) ASC  NULLS FIRST, (((vt0.c0 IN ())) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) NOT BETWEEN (NULLIF(vt1.c0, vt0.c0)) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (0.4391290938254392)) ASC  NULLS FIRST, (((vt0.c0 IN ())) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (NULLIF(vt1.c0, vt0.c0)) AND (((vt0.c0) IS TRUE)))) ORDER BY (NOT (0.4391290938254392)) ASC  NULLS FIRST, (((vt0.c0 IN ())) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) NOT BETWEEN (NULLIF(vt1.c0, vt0.c0)) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (0.4391290938254392)) ASC  NULLS FIRST, (((vt0.c0 IN ())) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (NULLIF(vt1.c0, vt0.c0)) AND (((vt0.c0) IS TRUE)))) ORDER BY (NOT (0.4391290938254392)) ASC  NULLS FIRST, (((vt0.c0 IN ())) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((+ (vt1.c0))) IS TRUE)) ORDER BY '1542812542'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt1 ORDER BY '1542812542'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((+ (vt1.c0))) IS TRUE)) ORDER BY '1542812542'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt1 ORDER BY '1542812542'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((+ (vt1.c0))) IS TRUE)) ORDER BY '1542812542'  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((0.9547349153227911) BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((0.9547349153227911) BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((0.9547349153227911) BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((0.9547349153227911) BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((0.9547349153227911) BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ())) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((vt0.c0 IN (vt0.c0)) IN ((('-804980016') IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((vt0.c0 IN (vt0.c0)) IN ((('-804980016') IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ())) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((vt0.c0 IN (vt0.c0)) IN ((('-804980016') IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((vt0.c0 IN (vt0.c0)) IN ((('-804980016') IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ())) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((vt0.c0 IN (vt0.c0)) IN ((('-804980016') IS FALSE)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((x'c2f2', vt0.c0, 0xffffffff8e71b28f))<((vt1.c0, vt1.c0, vt1.c0))))|(LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'c2f2', vt0.c0, 0xffffffff8e71b28f))<((vt1.c0, vt1.c0, vt1.c0))))|(LOWER(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((x'c2f2', vt0.c0, 0xffffffff8e71b28f))<((vt1.c0, vt1.c0, vt1.c0))))|(LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'c2f2', vt0.c0, 0xffffffff8e71b28f))<((vt1.c0, vt1.c0, vt1.c0))))|(LOWER(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((x'c2f2', vt0.c0, 0xffffffff8e71b28f))<((vt1.c0, vt1.c0, vt1.c0))))|(LOWER(vt1.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((((-299816990)OR(vt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN v0 ON (((('yo~')AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((NULL) IS FALSE))) WHERE (((((((((((((((vt0.c0)>=(vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR((+ (vt1.c0)))))AND(((vt0.c0)LIKE(vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(v0.c0)))OR(((vt0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)>=(vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR((+ (vt1.c0)))))AND(((vt0.c0)LIKE(vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(v0.c0)))OR(((vt0.c0)>>(v0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((((-299816990)OR(vt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN v0 ON (((('yo~')AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((NULL) IS FALSE))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((((-299816990)OR(vt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN v0 ON (((('yo~')AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((NULL) IS FALSE))) WHERE (((((((((((((((vt0.c0)>=(vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR((+ (vt1.c0)))))AND(((vt0.c0)LIKE(vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(v0.c0)))OR(((vt0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)>=(vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR((+ (vt1.c0)))))AND(((vt0.c0)LIKE(vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(v0.c0)))OR(((vt0.c0)>>(v0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((((-299816990)OR(vt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN v0 ON (((('yo~')AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((NULL) IS FALSE))));
SELECT ALL * FROM v0, vt0, vt1 WHERE ((vt0.c0 COLLATE NOCASE IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), ((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), ((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE ((vt0.c0 COLLATE NOCASE IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), ((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), ((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 NATURAL JOIN vt0 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, vt1 NATURAL JOIN vt0 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND ('-1891720704')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND ('-1891720704')) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND ('-1891720704')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND ('-1891720704')) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE (((v0.c0)*(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)*(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE (((v0.c0)*(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)*(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT * FROM vt1, v0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (json_array(vt1.c0, v0.c0)) AND (((vt1.c0) IS FALSE)))) ORDER BY CAST(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) NOT BETWEEN (json_array(vt1.c0, v0.c0)) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (json_array(vt1.c0, v0.c0)) AND (((vt1.c0) IS FALSE)))) ORDER BY CAST(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) NOT BETWEEN (json_array(vt1.c0, v0.c0)) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN ()))OR(CHANGES())))AND(vt1.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (- (((vt1.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN ()))OR(CHANGES())))AND(vt1.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN ()))OR(CHANGES())))AND(vt1.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (- (((vt1.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN ()))OR(CHANGES())))AND(vt1.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN ()))OR(CHANGES())))AND(vt1.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (- (((vt1.c0) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((vt1.c0 IN (vt0.c0, v0.c0))) ISNULL)) ORDER BY -1528209185 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt0.c0, v0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY -1528209185 DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((vt1.c0 IN (vt0.c0, v0.c0))) ISNULL)) ORDER BY -1528209185 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt0.c0, v0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY -1528209185 DESC);
SELECT ALL * FROM vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM v0 WHERE (ABS(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (ABS(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)IS(NULL)) THEN TRIM(DISTINCT v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)IS(NULL)) THEN TRIM(DISTINCT v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)IS(NULL)) THEN TRIM(DISTINCT v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)IS(NULL)) THEN TRIM(DISTINCT v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED WHERE ((CASE vt0.c0  WHEN '' THEN vt0.c0 END IN ('1910083015', ((vt0.c0) BETWEEN (x'') AND (x'017d')))));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN '' THEN vt0.c0 END IN ('1910083015', ((vt0.c0) BETWEEN (x'') AND (x'017d'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ((CASE vt0.c0  WHEN '' THEN vt0.c0 END IN ('1910083015', ((vt0.c0) BETWEEN (x'') AND (x'017d')))));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN '' THEN vt0.c0 END IN ('1910083015', ((vt0.c0) BETWEEN (x'') AND (x'017d'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ((CASE vt0.c0  WHEN '' THEN vt0.c0 END IN ('1910083015', ((vt0.c0) BETWEEN (x'') AND (x'017d')))));
SELECT ALL * FROM v0 WHERE (CAST(LIKE(v0.c0, v0.c0) AS REAL)) ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(v0.c0, v0.c0) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(LIKE(v0.c0, v0.c0) AS REAL)) ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(v0.c0, v0.c0) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (NULL) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((((v0.c0)<(v0.c0)))||(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CAST((((vt0.c0))==((v0.c0))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((((v0.c0)<(v0.c0)))||(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CAST((((vt0.c0))==((v0.c0))) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (NULL) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((((v0.c0)<(v0.c0)))||(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CAST((((vt0.c0))==((v0.c0))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((((v0.c0)<(v0.c0)))||(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CAST((((vt0.c0))==((v0.c0))) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((SUBSTR(vt0.c0, vt0.c0)) ISNULL)) ORDER BY vt1.c0, (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) DESC, (((((vt0.c0))=((0.5134918766961979)))) NOT BETWEEN ((~ (vt0.c0))) AND ('セG' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c0, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0, (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) DESC, (((((vt0.c0))=((0.5134918766961979)))) NOT BETWEEN ((~ (vt0.c0))) AND ('セG' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((SUBSTR(vt0.c0, vt0.c0)) ISNULL)) ORDER BY vt1.c0, (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) DESC, (((((vt0.c0))=((0.5134918766961979)))) NOT BETWEEN ((~ (vt0.c0))) AND ('セG' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c0, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0, (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) DESC, (((((vt0.c0))=((0.5134918766961979)))) NOT BETWEEN ((~ (vt0.c0))) AND ('セG' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((SUBSTR(vt0.c0, vt0.c0)) ISNULL)) ORDER BY vt1.c0, (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) DESC, (((((vt0.c0))=((0.5134918766961979)))) NOT BETWEEN ((~ (vt0.c0))) AND ('セG' COLLATE NOCASE));
SELECT ALL * FROM vt0, vt1, v0 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, v0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN v0.c0 ELSE '줣Ub?\rar\' END) ISNULL) WHERE (((v0.c0)<(vt0.c0)) COLLATE BINARY) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ('180936125') AND ((((NULL))<((vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN v0.c0 ELSE '줣Ub?\rar\' END) ISNULL) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ('180936125') AND ((((NULL))<((vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0, v0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN v0.c0 ELSE '줣Ub?\rar\' END) ISNULL) WHERE (((v0.c0)<(vt0.c0)) COLLATE BINARY) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ('180936125') AND ((((NULL))<((vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN v0.c0 ELSE '줣Ub?\rar\' END) ISNULL) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ('180936125') AND ((((NULL))<((vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((ABS(DISTINCT vt1.c0))) AND ((((vt1.c0)-(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((ABS(DISTINCT vt1.c0))) AND ((((vt1.c0)-(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((ABS(DISTINCT vt1.c0))) AND ((((vt1.c0)-(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((ABS(DISTINCT vt1.c0))) AND ((((vt1.c0)-(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((ABS(DISTINCT vt1.c0))) AND ((((vt1.c0)-(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)=('8.')) IN (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))<=(vt0.c0)) DESC  NULLS FIRST, (- ('387206984')) DESC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)==('8.')) IN (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))<=(vt0.c0)) DESC  NULLS FIRST, (- ('387206984')) DESC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)=('8.')) IN (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))<=(vt0.c0)) DESC  NULLS FIRST, (- ('387206984')) DESC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)==('8.')) IN (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))<=(vt0.c0)) DESC  NULLS FIRST, (- ('387206984')) DESC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)=('8.')) IN (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))<=(vt0.c0)) DESC  NULLS FIRST, (- ('387206984')) DESC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB);
SELECT ALL * FROM vt1, v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((vt1.c0)AND(NULL)))OR(x''))) IS FALSE) INNER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) ISNULL) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((((vt1.c0)AND(NULL)))OR(x''))) IS FALSE) INNER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((vt1.c0)AND(NULL)))OR(x''))) IS FALSE) INNER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) ISNULL) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((((vt1.c0)AND(NULL)))OR(x''))) IS FALSE) INNER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) ISNULL));
SELECT * FROM vt1 WHERE ('-57187514');
SELECT SUM(count) FROM (SELECT (('-57187514') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('-57187514');
SELECT SUM(count) FROM (SELECT (('-57187514') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('-57187514');
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(SQLITE_COMPILEOPTION_GET(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(SQLITE_COMPILEOPTION_GET(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((~ (v0.c0)) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS REAL))-(vt0.c0 COLLATE RTRIM)) ASC, (((vt0.c0) NOT NULL) IN (v0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0)IS NOT(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((CAST(vt1.c0 AS REAL))-(vt0.c0 COLLATE RTRIM)) ASC, (((vt0.c0) NOT NULL) IN (v0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0)IS NOT(vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((~ (v0.c0)) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS REAL))-(vt0.c0 COLLATE RTRIM)) ASC, (((vt0.c0) NOT NULL) IN (v0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0)IS NOT(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((CAST(vt1.c0 AS REAL))-(vt0.c0 COLLATE RTRIM)) ASC, (((vt0.c0) NOT NULL) IN (v0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0)IS NOT(vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE (NULL IN ())  WHEN json_object(v0.c0, v0.c0, v0.c0, vt1.c0) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN json_object(v0.c0, v0.c0, v0.c0, vt1.c0) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE (NULL IN ())  WHEN json_object(v0.c0, v0.c0, v0.c0, vt1.c0) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN json_object(v0.c0, v0.c0, v0.c0, vt1.c0) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((((vt1.c0, v0.c0, vt1.c0))=((NULL, 0.30548014419365177, v0.c0)))))<(((((v0.c0, vt1.c0, v0.c0, v0.c0, 0.6960422557327159, vt1.c0, NULL))>((vt1.c0, v0.c0, vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((((vt1.c0, v0.c0, vt1.c0))=((NULL, 0.30548014419365177, v0.c0)))))<(((((v0.c0, vt1.c0, v0.c0, v0.c0, 0.6960422557327159, vt1.c0, NULL))>((vt1.c0, v0.c0, vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((((vt1.c0, v0.c0, vt1.c0))=((NULL, 0.30548014419365177, v0.c0)))))<(((((v0.c0, vt1.c0, v0.c0, v0.c0, 0.6960422557327159, vt1.c0, NULL))>((vt1.c0, v0.c0, vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((((vt1.c0, v0.c0, vt1.c0))=((NULL, 0.30548014419365177, v0.c0)))))<(((((v0.c0, vt1.c0, v0.c0, v0.c0, 0.6960422557327159, vt1.c0, NULL))>((vt1.c0, v0.c0, vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN '-1311815909' THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN ((NULL) NOTNULL) WHEN (~ (v0.c0)) THEN (v0.c0 IN (v0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY '177828961';
SELECT SUM(count) FROM (SELECT ((CASE WHEN '-1311815909' THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN ((NULL) NOTNULL) WHEN (~ (v0.c0)) THEN (v0.c0 IN (v0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, v0 ORDER BY '177828961');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN '-1311815909' THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN ((NULL) NOTNULL) WHEN (~ (v0.c0)) THEN (v0.c0 IN (v0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY '177828961';
SELECT SUM(count) FROM (SELECT ((CASE WHEN '-1311815909' THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN ((NULL) NOTNULL) WHEN (~ (v0.c0)) THEN (v0.c0 IN (v0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, v0 ORDER BY '177828961');
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((vt0.c0)>=(v0.c0))) NOTNULL) WHERE ((((v0.c0 IN ()))%(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))%(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c0)>=(v0.c0))) NOTNULL));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((vt0.c0)>=(v0.c0))) NOTNULL) WHERE ((((v0.c0 IN ()))%(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))%(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c0)>=(v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (((((((vt1.c0)<=(v0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)<=(v0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (((((((vt1.c0)<=(v0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)<=(v0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM v0, vt0, vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY x''  NULLS LAST, (((v0.c0 IN ()))<((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY x''  NULLS LAST, (((v0.c0 IN ()))<((NOT (vt0.c0)))) DESC);
SELECT * FROM v0, vt0, vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY x''  NULLS LAST, (((v0.c0 IN ()))<((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY x''  NULLS LAST, (((v0.c0 IN ()))<((NOT (vt0.c0)))) DESC);
SELECT * FROM v0, vt0, vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY x''  NULLS LAST, (((v0.c0 IN ()))<((NOT (vt0.c0)))) DESC;
SELECT ALL * FROM vt1 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0))<=((vt1.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((vt0.c0)>=(v0.c0)))) FULL OUTER JOIN vt0 ON ((-1368336192) NOT BETWEEN (vt1.c0) AND (v0.c0)) COLLATE RTRIM WHERE ('-1614139103') ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) NOT BETWEEN (json(vt0.c0)) AND (CAST(v0.c0 AS NUMERIC))) DESC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(DISTINCT v0.c0, '-882929428')) AND (CAST(vt1.c0 AS TEXT))), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1614139103') IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0))<=((vt1.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((vt0.c0)>=(v0.c0)))) FULL OUTER JOIN vt0 ON ((-1368336192) NOT BETWEEN (vt1.c0) AND (v0.c0)) COLLATE RTRIM ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) NOT BETWEEN (json(vt0.c0)) AND (CAST(v0.c0 AS NUMERIC))) DESC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(DISTINCT v0.c0, '-882929428')) AND (CAST(vt1.c0 AS TEXT))), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) ASC);
SELECT ALL * FROM vt1 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0))<=((vt1.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((vt0.c0)>=(v0.c0)))) FULL OUTER JOIN vt0 ON ((-1368336192) NOT BETWEEN (vt1.c0) AND (v0.c0)) COLLATE RTRIM WHERE ('-1614139103') ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) NOT BETWEEN (json(vt0.c0)) AND (CAST(v0.c0 AS NUMERIC))) DESC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(DISTINCT v0.c0, '-882929428')) AND (CAST(vt1.c0 AS TEXT))), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1614139103') IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0))<=((vt1.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((vt0.c0)>=(v0.c0)))) FULL OUTER JOIN vt0 ON ((-1368336192) NOT BETWEEN (vt1.c0) AND (v0.c0)) COLLATE RTRIM ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) NOT BETWEEN (json(vt0.c0)) AND (CAST(v0.c0 AS NUMERIC))) DESC, ((v0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(DISTINCT v0.c0, '-882929428')) AND (CAST(vt1.c0 AS TEXT))), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (x'', vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (x'', vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (x'', vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (x'', vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (x'', vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (NULL);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'vw7Tu 뵉\nF' END ELSE CAST('15654500' AS REAL) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))) ASC  NULLS LAST, (- ((((x'8e3d'))<((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'vw7Tu 뵉\nF' END ELSE CAST('15654500' AS REAL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))) ASC  NULLS LAST, (- ((((x'8e3d'))<((vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'vw7Tu 뵉\nF' END ELSE CAST('15654500' AS REAL) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))) ASC  NULLS LAST, (- ((((x'8e3d'))<((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'vw7Tu 뵉\nF' END ELSE CAST('15654500' AS REAL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))) ASC  NULLS LAST, (- ((((x'8e3d'))<((vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'vw7Tu 뵉\nF' END ELSE CAST('15654500' AS REAL) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))))) ASC  NULLS LAST, (- ((((x'8e3d'))<((vt1.c0)))))  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY)) RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE RTRIM WHERE ((((((v0.c0))>=((vt0.c0)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), (+ (vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (vt1.c0 IN ()), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0))))), (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), CAST(vt1.c0 AS BLOB), ((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS BLOB), ((v0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((vt0.c0)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY)) RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE RTRIM ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), (+ (vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (vt1.c0 IN ()), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0))))), (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), CAST(vt1.c0 AS BLOB), ((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS BLOB), ((v0.c0) NOT NULL)))) DESC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY)) RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE RTRIM WHERE ((((((v0.c0))>=((vt0.c0)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), (+ (vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (vt1.c0 IN ()), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0))))), (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), CAST(vt1.c0 AS BLOB), ((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS BLOB), ((v0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((vt0.c0)))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY)) RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE RTRIM ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), (+ (vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (vt1.c0 IN ()), ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0))))), (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), CAST(vt1.c0 AS BLOB), ((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS BLOB), ((v0.c0) NOT NULL)))) DESC  NULLS LAST);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0)OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0)OR(x''))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0)OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0)OR(x''))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ('-2040240577');
SELECT SUM(count) FROM (SELECT (('-2040240577') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ('-2040240577');
SELECT SUM(count) FROM (SELECT (('-2040240577') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ('-2040240577');
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS FALSE)  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS FALSE)  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (v0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0 IN (v0.c0, v0.c0)))>((vt0.c0 IN (v0.c0))))) ORDER BY ((((vt0.c0 IN (0.939462038457692, vt0.c0)), 0.33749484657622975, JULIANDAY(vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((v0.c0)AND(-5.88989111E8)))AND(-5.88989111E8)), json_patch(v0.c0, v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, v0.c0)))>((vt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0 IN (0.939462038457692, vt0.c0)), 0.33749484657622975, JULIANDAY(vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((v0.c0)AND(-5.88989111E8)))AND(-5.88989111E8)), json_patch(v0.c0, v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0 IN (v0.c0, v0.c0)))>((vt0.c0 IN (v0.c0))))) ORDER BY ((((vt0.c0 IN (0.939462038457692, vt0.c0)), 0.33749484657622975, JULIANDAY(vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((v0.c0)AND(-5.88989111E8)))AND(-5.88989111E8)), json_patch(v0.c0, v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, v0.c0)))>((vt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0 IN (0.939462038457692, vt0.c0)), 0.33749484657622975, JULIANDAY(vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((v0.c0)AND(-5.88989111E8)))AND(-5.88989111E8)), json_patch(v0.c0, v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (((LIKE(v0.c0, x''))/(((v0.c0)==(v0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(v0.c0, x''))/(((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((LIKE(v0.c0, x''))/(((v0.c0)==(v0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(v0.c0, x''))/(((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, v0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, v0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)>(vt0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL) ASC);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)>(vt0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL) ASC);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)>(vt0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN (((vt0.c0)/(v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND (0.6484214142165903))))) ORDER BY json_valid(((v0.c0)|(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN (((vt0.c0)/(v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND (0.6484214142165903))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY json_valid(((v0.c0)|(vt1.c0))));
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN (((vt0.c0)/(v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND (0.6484214142165903))))) ORDER BY json_valid(((v0.c0)|(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN (((vt0.c0)/(v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND (0.6484214142165903))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY json_valid(((v0.c0)|(vt1.c0))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER))/(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))/(vt0.c0)));
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER))/(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))/(vt0.c0)));
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER))/(vt0.c0));
SELECT COUNT(*) FROM vt1 WHERE (((((LIKELIHOOD(vt1.c0, 0.828449855829884))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0)<=(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, 'Rpm')) NOT BETWEEN (((((vt1.c0))!=((vt1.c0))), (vt1.c0 IN ()), vt1.c0)) AND (((vt1.c0 IN ()), ((((vt1.c0)OR(NULL)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(vt1.c0, 0.828449855829884))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, 'Rpm')) NOT BETWEEN (((((vt1.c0))<>((vt1.c0))), (vt1.c0 IN ()), vt1.c0)) AND (((vt1.c0 IN ()), ((((vt1.c0)OR(NULL)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((LIKELIHOOD(vt1.c0, 0.828449855829884))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0)<=(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, 'Rpm')) NOT BETWEEN (((((vt1.c0))!=((vt1.c0))), (vt1.c0 IN ()), vt1.c0)) AND (((vt1.c0 IN ()), ((((vt1.c0)OR(NULL)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(vt1.c0, 0.828449855829884))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, 'Rpm')) NOT BETWEEN (((((vt1.c0))<>((vt1.c0))), (vt1.c0 IN ()), vt1.c0)) AND (((vt1.c0 IN ()), ((((vt1.c0)OR(NULL)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((LIKELIHOOD(vt1.c0, 0.828449855829884))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0)<=(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, 'Rpm')) NOT BETWEEN (((((vt1.c0))!=((vt1.c0))), (vt1.c0 IN ()), vt1.c0)) AND (((vt1.c0 IN ()), ((((vt1.c0)OR(NULL)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0))))) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (0.872989048786385) ORDER BY CASE CASE WHEN 8.311590157122906E-4 THEN v0.c0 END  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (((('180936125')OR(v0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((((v0.c0)+(v0.c0)))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.872989048786385) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CASE WHEN 8.311590157122906E-4 THEN v0.c0 END  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (((('180936125')OR(v0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((((v0.c0)+(v0.c0)))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.872989048786385) ORDER BY CASE CASE WHEN 8.311590157122906E-4 THEN v0.c0 END  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (((('180936125')OR(v0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((((v0.c0)+(v0.c0)))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.872989048786385) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CASE WHEN 8.311590157122906E-4 THEN v0.c0 END  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (((('180936125')OR(v0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((((v0.c0)+(v0.c0)))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN SQLITE_VERSION() THEN ((vt0.c0) ISNULL) WHEN (((vt1.c0, x'', vt1.c0))<((v0.c0, vt0.c0, v0.c0))) THEN ((v0.c0)/(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END END FULL OUTER JOIN v0 ON ((vt0.c0) IS TRUE) WHERE ((1849216529 IN ()));
SELECT SUM(count) FROM (SELECT (((1849216529 IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN SQLITE_VERSION() THEN ((vt0.c0) ISNULL) WHEN (((vt1.c0, x'', vt1.c0))<((v0.c0, vt0.c0, v0.c0))) THEN ((v0.c0)/(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END END FULL OUTER JOIN v0 ON ((vt0.c0) IS TRUE));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN SQLITE_VERSION() THEN ((vt0.c0) ISNULL) WHEN (((vt1.c0, x'', vt1.c0))<((v0.c0, vt0.c0, v0.c0))) THEN ((v0.c0)/(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END END FULL OUTER JOIN v0 ON ((vt0.c0) IS TRUE) WHERE ((1849216529 IN ()));
SELECT SUM(count) FROM (SELECT (((1849216529 IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN SQLITE_VERSION() THEN ((vt0.c0) ISNULL) WHEN (((vt1.c0, x'', vt1.c0))<((v0.c0, vt0.c0, v0.c0))) THEN ((v0.c0)/(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) NOTNULL) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END END FULL OUTER JOIN v0 ON ((vt0.c0) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))-((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))-((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))-((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))-((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0, vt1 WHERE (MAX(((vt0.c0)|(vt1.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((MAX(((vt0.c0)|(vt1.c0)), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (MAX(((vt0.c0)|(vt1.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((MAX(((vt0.c0)|(vt1.c0)), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (MAX(((vt0.c0)|(vt1.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((CAST(vt1.c0 AS REAL))>>(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST, ((x'447e')>>(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))>>(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST, ((x'447e')>>(x'')) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((CAST(vt1.c0 AS REAL))>>(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST, ((x'447e')>>(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))>>(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST, ((x'447e')>>(x'')) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((CAST(vt1.c0 AS REAL))>>(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST, ((x'447e')>>(x'')) ASC;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))>(UNLIKELY(DISTINCT vt1.c0)))) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))>(UNLIKELY(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT NULL));
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))>(UNLIKELY(DISTINCT vt1.c0)))) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))>(UNLIKELY(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT NULL));
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))>(UNLIKELY(DISTINCT vt1.c0)))) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0))) NOT NULL);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (vt0.c0) ORDER BY ((((v0.c0)OR(vt1.c0)))AND(v0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((v0.c0)OR(vt1.c0)))AND(v0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (vt0.c0) ORDER BY ((((v0.c0)OR(vt1.c0)))AND(v0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((v0.c0)OR(vt1.c0)))AND(v0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt1.c0) BETWEEN (1568693013) AND (vt0.c0)) IN (CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((v0.c0) ISNULL))))  NULLS FIRST, vt0.c0  NULLS FIRST, TRIM(DISTINCT (NOT (vt1.c0)), (NOT (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (1568693013) AND (vt0.c0)) IN (CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((v0.c0) ISNULL))))  NULLS FIRST, vt0.c0  NULLS FIRST, TRIM(DISTINCT (NOT (vt1.c0)), (NOT (v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt1.c0) BETWEEN (1568693013) AND (vt0.c0)) IN (CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((v0.c0) ISNULL))))  NULLS FIRST, vt0.c0  NULLS FIRST, TRIM(DISTINCT (NOT (vt1.c0)), (NOT (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (1568693013) AND (vt0.c0)) IN (CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((v0.c0) ISNULL))))  NULLS FIRST, vt0.c0  NULLS FIRST, TRIM(DISTINCT (NOT (vt1.c0)), (NOT (v0.c0)))  NULLS FIRST);
SELECT * FROM vt0, vt1, v0 WHERE (((('-1118310329')) NOT BETWEEN ((((v0.c0)IS NOT(vt0.c0)))) AND (((NOT (x'e714'))))));
SELECT SUM(count) FROM (SELECT ((((('-1118310329')) NOT BETWEEN ((((v0.c0)IS NOT(vt0.c0)))) AND (((NOT (x'e714')))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE (((('-1118310329')) NOT BETWEEN ((((v0.c0)IS NOT(vt0.c0)))) AND (((NOT (x'e714'))))));
SELECT SUM(count) FROM (SELECT ((((('-1118310329')) NOT BETWEEN ((((v0.c0)IS NOT(vt0.c0)))) AND (((NOT (x'e714')))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((v0.c0 IN (vt1.c0)))<=(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (vt1.c0)))<=(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(((v0.c0) IS TRUE))));
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((v0.c0 IN (vt1.c0)))<=(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (vt1.c0)))<=(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((CAST(vt1.c0 AS REAL))IS NOT(((v0.c0) IS TRUE))));
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE))LIKE(json_array(vt1.c0, v0.c0))) WHERE (highlight(((vt1.c0) IS TRUE), TOTAL_CHANGES(), ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((vt1.c0) IS TRUE), TOTAL_CHANGES(), ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE))LIKE(json_array(vt1.c0, v0.c0))));
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE))LIKE(json_array(vt1.c0, v0.c0))) WHERE (highlight(((vt1.c0) IS TRUE), TOTAL_CHANGES(), ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((vt1.c0) IS TRUE), TOTAL_CHANGES(), ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS TRUE))LIKE(json_array(vt1.c0, v0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (LOWER(((v0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((v0.c0)%(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (LOWER(((v0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((v0.c0)%(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ORDER BY (((NOT (v0.c0)))<=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))), (((((v0.c0, v0.c0, v0.c0))<((-690359935, v0.c0, v0.c0)))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))<=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))), (((((v0.c0, v0.c0, v0.c0))<((-690359935, v0.c0, v0.c0)))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ORDER BY (((NOT (v0.c0)))<=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))), (((((v0.c0, v0.c0, v0.c0))<((-690359935, v0.c0, v0.c0)))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))<=(((((v0.c0)AND(v0.c0)))AND(v0.c0)))), (((((v0.c0, v0.c0, v0.c0))<((-690359935, v0.c0, v0.c0)))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((STRFTIME(vt1.c0, v0.c0, v0.c0))OR(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(NULL)))))AND((((vt0.c0))<=((v0.c0))))) CROSS JOIN vt1 ON vt1.c0 WHERE (TRIM((- (vt0.c0)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((- (vt0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((STRFTIME(vt1.c0, v0.c0, v0.c0))OR(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(NULL)))))AND((((vt0.c0))<=((v0.c0))))) CROSS JOIN vt1 ON vt1.c0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((STRFTIME(vt1.c0, v0.c0, v0.c0))OR(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(NULL)))))AND((((vt0.c0))<=((v0.c0))))) CROSS JOIN vt1 ON vt1.c0 WHERE (TRIM((- (vt0.c0)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((- (vt0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((STRFTIME(vt1.c0, v0.c0, v0.c0))OR(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(NULL)))))AND((((vt0.c0))<=((v0.c0))))) CROSS JOIN vt1 ON vt1.c0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL * FROM vt1, v0 WHERE (((((v0.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE BINARY) AND ((x'' IN ())))) ORDER BY CAST((~ (vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE BINARY) AND ((x'' IN ())))) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY CAST((~ (vt1.c0)) AS INTEGER) DESC);
SELECT ALL * FROM vt1, v0 WHERE (((((v0.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE BINARY) AND ((x'' IN ())))) ORDER BY CAST((~ (vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE BINARY) AND ((x'' IN ())))) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY CAST((~ (vt1.c0)) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, ((-1.60806668E9) BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(v0.c0)), ((vt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, ((-1.60806668E9) BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(v0.c0)), ((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, ((-1.60806668E9) BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(v0.c0)), ((vt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, ((-1.60806668E9) BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(v0.c0)), ((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((((vt0.c0)AND(x'3ccd0d08')))OR(vt0.c0)) IN ())) ORDER BY CAST(((-474973828)IS NOT(vt1.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(x'3ccd0d08')))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CAST(((-474973828)IS NOT(vt1.c0)) AS REAL) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((((vt0.c0)AND(x'3ccd0d08')))OR(vt0.c0)) IN ())) ORDER BY CAST(((-474973828)IS NOT(vt1.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(x'3ccd0d08')))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CAST(((-474973828)IS NOT(vt1.c0)) AS REAL) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((((vt0.c0)AND(x'3ccd0d08')))OR(vt0.c0)) IN ())) ORDER BY CAST(((-474973828)IS NOT(vt1.c0)) AS REAL) ASC;
SELECT * FROM v0 WHERE (CAST((~ (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST((~ (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY (+ (CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (+ (CAST(v0.c0 AS REAL))));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY (+ (CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (+ (CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (NULL) AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (NULL) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (NULL) AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (NULL) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, 'g4')) AND ((v0.c0, v0.c0, vt1.c0))))+(v0.c0))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, 'g4')) AND ((v0.c0, v0.c0, vt1.c0))))+(v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, 'g4')) AND ((v0.c0, v0.c0, vt1.c0))))+(v0.c0))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, 'g4')) AND ((v0.c0, v0.c0, vt1.c0))))+(v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE)))) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0))%(((vt1.c0)<>(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0))%(((vt1.c0)!=(vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE)))) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0))%(((vt1.c0)<>(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0))%(((vt1.c0)!=(vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE)))) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0))%(((vt1.c0)<>(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE (((CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNICODE((- (vt0.c0)))) ORDER BY (((vt0.c0, 0.10249459210946466, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), CASE '142017171'  WHEN x'' THEN 1.171308601E9 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB))) AND (((- (0.5817663723645767)), (- (vt0.c0)), ((vt0.c0)>(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNICODE((- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, 0.10249459210946466, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), CASE '142017171'  WHEN x'' THEN 1.171308601E9 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB))) AND (((- (0.5817663723645767)), (- (vt0.c0)), ((vt0.c0)>(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UNICODE((- (vt0.c0)))) ORDER BY (((vt0.c0, 0.10249459210946466, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), CASE '142017171'  WHEN x'' THEN 1.171308601E9 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB))) AND (((- (0.5817663723645767)), (- (vt0.c0)), ((vt0.c0)>(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNICODE((- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, 0.10249459210946466, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), CASE '142017171'  WHEN x'' THEN 1.171308601E9 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB))) AND (((- (0.5817663723645767)), (- (vt0.c0)), ((vt0.c0)>(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UNICODE((- (vt0.c0)))) ORDER BY (((vt0.c0, 0.10249459210946466, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)), CASE '142017171'  WHEN x'' THEN 1.171308601E9 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB))) AND (((- (0.5817663723645767)), (- (vt0.c0)), ((vt0.c0)>(vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM v0, vt1, vt0 WHERE ((~ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((~ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN CASE -5.52549353E8  WHEN '1723345063' THEN vt1.c0 END THEN CASE WHEN 0x570b775d THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN -978097055 THEN vt0.c0 ELSE '' END ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN CASE -5.52549353E8  WHEN '1723345063' THEN vt1.c0 END THEN CASE WHEN 0X570b775d THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN -978097055 THEN vt0.c0 ELSE '' END ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN CASE -5.52549353E8  WHEN '1723345063' THEN vt1.c0 END THEN CASE WHEN 0x570b775d THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN -978097055 THEN vt0.c0 ELSE '' END ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN CASE -5.52549353E8  WHEN '1723345063' THEN vt1.c0 END THEN CASE WHEN 0X570b775d THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN -978097055 THEN vt0.c0 ELSE '' END ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(vt1.c0 AS BLOB), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(vt1.c0 AS BLOB), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(vt1.c0 AS BLOB), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(vt1.c0 AS BLOB), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(vt1.c0 AS BLOB), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0) IS TRUE) IN ()) WHERE ((((- (vt0.c0)))==(vt0.c0))) ORDER BY (- (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))==(vt0.c0))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0) IS TRUE) IN ()) ORDER BY (- (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0) IS TRUE) IN ()) WHERE ((((- (vt0.c0)))==(vt0.c0))) ORDER BY (- (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))==(vt0.c0))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0) IS TRUE) IN ()) ORDER BY (- (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0) IS TRUE) IN ()) WHERE ((((- (vt0.c0)))==(vt0.c0))) ORDER BY (- (vt0.c0 COLLATE RTRIM));
SELECT * FROM vt1, v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))OR((((vt1.c0))>=((vt1.c0))))))AND('dt'))) ORDER BY (((vt1.c0)<=(vt1.c0)) IN (CASE vt1.c0  WHEN 0Xffffffffcb3f10c2 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS BLOB))OR((((vt1.c0))>=((vt1.c0))))))AND('dt'))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)<=(vt1.c0)) IN (CASE vt1.c0  WHEN 0xffffffffcb3f10c2 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))OR((((vt1.c0))>=((vt1.c0))))))AND('dt'))) ORDER BY (((vt1.c0)<=(vt1.c0)) IN (CASE vt1.c0  WHEN 0Xffffffffcb3f10c2 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS BLOB))OR((((vt1.c0))>=((vt1.c0))))))AND('dt'))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)<=(vt1.c0)) IN (CASE vt1.c0  WHEN 0xffffffffcb3f10c2 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))OR((((vt1.c0))>=((vt1.c0))))))AND('dt'))) ORDER BY (((vt1.c0)<=(vt1.c0)) IN (CASE vt1.c0  WHEN 0Xffffffffcb3f10c2 THEN vt1.c0 END));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((vt1.c0)+(LOWER(v0.c0)))) ORDER BY (~ (vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(LOWER(v0.c0)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (~ (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((vt1.c0)+(LOWER(v0.c0)))) ORDER BY (~ (vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(LOWER(v0.c0)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (~ (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (json_patch(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (json_patch(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (json_patch(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (json_patch(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM vt1 WHERE (((~ ('1740745454')) IN ((vt1.c0 IN ())))) ORDER BY ((((((vt1.c0)<(vt1.c0)))OR(NULL)))OR(vt1.c0 COLLATE BINARY)), ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'' END)AND(((vt1.c0) ISNULL))))OR(LIKE(vt1.c0, vt1.c0, 'n')));
SELECT SUM(count) FROM (SELECT ((((~ ('1740745454')) IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)<(vt1.c0)))OR(NULL)))OR(vt1.c0 COLLATE BINARY)), ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'' END)AND(((vt1.c0) ISNULL))))OR(LIKE(vt1.c0, vt1.c0, 'n'))));
SELECT * FROM vt1 WHERE (((~ ('1740745454')) IN ((vt1.c0 IN ())))) ORDER BY ((((((vt1.c0)<(vt1.c0)))OR(NULL)))OR(vt1.c0 COLLATE BINARY)), ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'' END)AND(((vt1.c0) ISNULL))))OR(LIKE(vt1.c0, vt1.c0, 'n')));
SELECT SUM(count) FROM (SELECT ((((~ ('1740745454')) IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)<(vt1.c0)))OR(NULL)))OR(vt1.c0 COLLATE BINARY)), ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'' END)AND(((vt1.c0) ISNULL))))OR(LIKE(vt1.c0, vt1.c0, 'n'))));
SELECT * FROM vt1 WHERE (((~ ('1740745454')) IN ((vt1.c0 IN ())))) ORDER BY ((((((vt1.c0)<(vt1.c0)))OR(NULL)))OR(vt1.c0 COLLATE BINARY)), ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'' END)AND(((vt1.c0) ISNULL))))OR(LIKE(vt1.c0, vt1.c0, 'n')));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY ((COALESCE(v0.c0, v0.c0)) NOT BETWEEN ((+ (vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((COALESCE(v0.c0, v0.c0)) NOT BETWEEN ((+ (vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY ((COALESCE(v0.c0, v0.c0)) NOT BETWEEN ((+ (vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((COALESCE(v0.c0, v0.c0)) NOT BETWEEN ((+ (vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0))==((vt0.c0))))&(((v0.c0) ISNULL)))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))=((vt0.c0))))&(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0))==((vt0.c0))))&(((v0.c0) ISNULL)))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))=((vt0.c0))))&(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((~ (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE ((~ (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0 WHERE (UNICODE((((v0.c0)) BETWEEN (('-1887966847')) AND ((v0.c0))))) ORDER BY ((((v0.c0))==((v0.c0))) IN (((v0.c0)IS(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((((v0.c0)) BETWEEN (('-1887966847')) AND ((v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0))==((v0.c0))) IN (((v0.c0)IS(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (UNICODE((((v0.c0)) BETWEEN (('-1887966847')) AND ((v0.c0))))) ORDER BY ((((v0.c0))==((v0.c0))) IN (((v0.c0)IS(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((((v0.c0)) BETWEEN (('-1887966847')) AND ((v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0))==((v0.c0))) IN (((v0.c0)IS(v0.c0)))) DESC);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.1465946233749469)) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.1465946233749469)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE))));
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.1465946233749469)) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.1465946233749469)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE))));
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.1465946233749469)) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE)));
SELECT * FROM v0 WHERE (json(CAST(NULL AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((json(CAST(NULL AS INTEGER))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json(CAST(NULL AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((json(CAST(NULL AS INTEGER))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json(CAST(NULL AS INTEGER)));
SELECT COUNT(*) FROM vt0, v0, vt1 NOT INDEXED WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))) ORDER BY (((vt1.c0 IN (vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0, v0, vt1 NOT INDEXED WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))) ORDER BY (((vt1.c0 IN (vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0, v0, vt1 NOT INDEXED WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))) ORDER BY (((vt1.c0 IN (vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))LIKE(COALESCE(vt1.c0, vt1.c0)))) ORDER BY ((((vt1.c0)IS(vt1.c0)))>=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))LIKE(COALESCE(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS(vt1.c0)))>=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))LIKE(COALESCE(vt1.c0, vt1.c0)))) ORDER BY ((((vt1.c0)IS(vt1.c0)))>=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))LIKE(COALESCE(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS(vt1.c0)))>=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))LIKE(COALESCE(vt1.c0, vt1.c0)))) ORDER BY ((((vt1.c0)IS(vt1.c0)))>=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((((((((NULL IN ()))AND(IFNULL(vt1.c0, v0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(v0.c0)))AND((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((NULL IN ()))AND(IFNULL(vt1.c0, v0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(v0.c0)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((((((((NULL IN ()))AND(IFNULL(vt1.c0, v0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(v0.c0)))AND((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((NULL IN ()))AND(IFNULL(vt1.c0, v0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(v0.c0)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((((((((NULL IN ()))AND(IFNULL(vt1.c0, v0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(v0.c0)))AND((v0.c0 IN ()))));
SELECT ALL * FROM vt1 WHERE ((COALESCE(DISTINCT NULL, vt1.c0, vt1.c0, vt1.c0) IN ())) ORDER BY CASE (vt1.c0 IN ())  WHEN 'jIZ[q,h\nT' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)GLOB(vt1.c0)) END ASC, 0.7585877574936802 DESC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(x'')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT NULL, vt1.c0, vt1.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN 'jIZ[q,h\nT' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)GLOB(vt1.c0)) END ASC, 0.7585877574936802 DESC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(x'')) END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((COALESCE(DISTINCT NULL, vt1.c0, vt1.c0, vt1.c0) IN ())) ORDER BY CASE (vt1.c0 IN ())  WHEN 'jIZ[q,h\nT' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)GLOB(vt1.c0)) END ASC, 0.7585877574936802 DESC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(x'')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT NULL, vt1.c0, vt1.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN 'jIZ[q,h\nT' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)GLOB(vt1.c0)) END ASC, 0.7585877574936802 DESC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(x'')) END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((COALESCE(DISTINCT NULL, vt1.c0, vt1.c0, vt1.c0) IN ())) ORDER BY CASE (vt1.c0 IN ())  WHEN 'jIZ[q,h\nT' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)GLOB(vt1.c0)) END ASC, 0.7585877574936802 DESC  NULLS LAST, CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(x'')) END  NULLS LAST;
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((v0.c0)>=(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)>=(v0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((v0.c0)>=(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)>=(v0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((v0.c0)>=(v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL) WHERE (CAST(0.7729860072420104 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.7729860072420104 AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL) WHERE (CAST(0.7729860072420104 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.7729860072420104 AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON MAX(CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END, ((v0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END, ((v0.c0)GLOB(vt0.c0)), (v0.c0 IN (vt1.c0))) INNER JOIN v0 ON ((vt1.c0) ISNULL) WHERE ((((+ (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON MAX(CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END, ((v0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END, ((v0.c0)GLOB(vt0.c0)), (v0.c0 IN (vt1.c0))) INNER JOIN v0 ON ((vt1.c0) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON MAX(CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END, ((v0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END, ((v0.c0)GLOB(vt0.c0)), (v0.c0 IN (vt1.c0))) INNER JOIN v0 ON ((vt1.c0) ISNULL) WHERE ((((+ (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON MAX(CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END, ((v0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END, ((v0.c0)GLOB(vt0.c0)), (v0.c0 IN (vt1.c0))) INNER JOIN v0 ON ((vt1.c0) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON MAX(CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END, ((v0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END, ((v0.c0)GLOB(vt0.c0)), (v0.c0 IN (vt1.c0))) INNER JOIN v0 ON ((vt1.c0) ISNULL) WHERE ((((+ (vt0.c0))) IS FALSE));
SELECT * FROM vt0, vt1 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))))AND(((0.8259277342028901)>=(vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS BLOB))AND(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))))AND(((0.8259277342028901)>=(vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))))AND(((0.8259277342028901)>=(vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS BLOB))AND(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))))AND(((0.8259277342028901)>=(vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))))AND(((0.8259277342028901)>=(vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM v0 WHERE (DATETIME(v0.c0, v0.c0, v0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(v0.c0, v0.c0, v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (DATETIME(v0.c0, v0.c0, v0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(v0.c0, v0.c0, v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0, vt1 WHERE (((((((((LENGTH(vt1.c0))OR(((vt1.c0) IS FALSE))))OR(1527063637 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR('1762199612')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LENGTH(vt1.c0))OR(((vt1.c0) IS FALSE))))OR(1527063637 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR('1762199612'))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((((((LENGTH(vt1.c0))OR(((vt1.c0) IS FALSE))))OR(1527063637 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR('1762199612')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LENGTH(vt1.c0))OR(((vt1.c0) IS FALSE))))OR(1527063637 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR('1762199612'))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0 WHERE ((- ((((0Xffffffff802ca36d)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((0xffffffff802ca36d)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((((0Xffffffff802ca36d)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((0xffffffff802ca36d)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((((0Xffffffff802ca36d)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
