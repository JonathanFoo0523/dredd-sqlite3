-- Time: 2024/06/09 10:20:47
-- Database: database46
-- Database version: 3.40.0
-- seed value: 3494751746
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 6ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 9ms;
PRAGMA temp.busy_timeout = 6035672996118493197; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-29888498 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1622797752 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-2092130128 sz=-1847334497 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1578590856'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1439788897'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.19829744729972665) NOT BETWEEN ('0.19829744729972665') AND (-1444157595)))>=(((0.5119959050013365) BETWEEN (NULL) AND ('')))); -- 6ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)GLOB(NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1847334497 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.5119959050013365') ISNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1622797752 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.0865525215935753 THEN NULL ELSE 0.5796041400989729 END) NOT BETWEEN (ABS(x'')) AND (((-2.9888498E7)/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1439788897 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.04387236000401484; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1243810266 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(NULL, -1.847334497E9))LIKE(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=536291481 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=583785474 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((LIKELIHOOD('602867042', 0.7382044134968831))) AND ((0.013589184578792768 COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1059898498 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-346061693 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1877312887' IN ()))<<(CAST('-100628807' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('-2092130128')))OR(NULL)))>=((-3.46061693E8 IN (0.6830124886392536)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=528748632 noskipscan'); -- 11ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0865525215935753; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0.3110950659570163  WHEN x'' THEN NULL ELSE NULL END  WHEN (((NULL))<=((5.28748632E8))) THEN ((((NULL)AND(x'')))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=870486518 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-873687151'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-873687151 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.4213430162940228 IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1563914637 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.38791571354350907 AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 7ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1648269919'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'')*('K')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1799220170 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1053797444'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=1927742664'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 sz=-1563914637 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1243810266 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL))IS NOT(((0.02582518033511816) NOT BETWEEN (0.5259164637704737) AND ('509982183')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (highlight(NULL, x'', 0xffffffffe5fb0c6c, '(뭅)'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2097695965 sz=-100628807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.49666688289121996))) NOT BETWEEN ((((NULL))>=((-1353174813)))) AND (((0Xffffffffab38f56e)<<(0.7856780774516412)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 16ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-873687151 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-2092130128 -1622797752 sz=-346061693 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-29888498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=200165553'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 110284882'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'', x'', -1958639808))>=((x'ceb4', NULL, 0.6797957292188584))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=536291481'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((')^')AND(x'c2b2')))AND(NULL))  WHEN ((NULL)IS(NULL)) THEN ((-8.73687151E8)==('')) ELSE ((x'9c4b') BETWEEN (NULL) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH((NOT (x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x4c877bc8) NOT BETWEEN (DATE(NULL, 0Xffffffffcbec9791, x'', x'', 1578590856)) AND ((('1945402961')AND('2097695965')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-29888498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.09178087380542332)AND('-367054409')))AND('')))<=((('2097695965')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1497955093'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL END)<(CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 9ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '', 0xfffffffffa4c70db)) BETWEEN (('', NULL, 0.013589184578792768)) AND ((x'', 0X73f47e51, '')))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-854634604 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('-89277087')AND(NULL)))OR(-3.46061693E8)))AND(0.5922087202739545)))OR(0.1044999042849496)))AND(-1.648269919E9)))AND('-1401653528'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1638936209 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'eaaa' THEN (NOT (x'2ca8')) ELSE '2097695965' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-762589539'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((x'') ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=843400464 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1945402961 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 1964823682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-785301464'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE 0.7493008023396567  WHEN '' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('f]')) BETWEEN (((('	Y?') BETWEEN (NULL) AND (x'')))) AND ((((NULL) NOT BETWEEN (NULL) AND ('-1e500'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NOT ('-759787623')))OR((('0') NOTNULL))))OR(0xffffffffdbd08a56 COLLATE BINARY)))OR(CASE WHEN x'' THEN 0.939867479065246 WHEN 0.5688251826210151 THEN '200165553' WHEN 0.013589184578792768 THEN NULL ELSE 0x28b556a9 END)))AND(CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELIHOOD(x'', 0.065051256311361))OR((('-797618810') NOTNULL))))AND((('1578590856')&('-1772423512')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-206457379'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=698102322 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'fe24')<=(0x468731e5)))LIKE(x'6381' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-803107874 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-803107874'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1183265253'))>(('-436532116'))))&((('Y2292066169748244015:3907437467073864990 1234:-4939703162414302619:-8֩YetW') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-100628807 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-785306281 sz=-1864956691'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-245368789 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')AND(0.4617606811351752)))OR('-100628807')))OR(NULL)))AND('-1563914637')))OR(0.6154136887816972)))OR(x'')))*(CASE WHEN '1578590856' THEN 0.6751014994668184 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((2005079615) NOTNULL) IN ((((NULL)) NOT BETWEEN ((0x33e291f6)) AND (('-F''邟'))), 1675814890)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-177464849'); -- 7ms;
DELETE FROM sqlite_stat1 WHERE (((-1.958639808E9, 0X60d33636, 0xffffffffc6af3331)) BETWEEN ((((x'')>(x'')), (~ (0.781603439545618)), ('-1053797444' IN ()))) AND (((- ('1262504668')), json_extract(')^', NULL, '-1286896822', ''), QUOTE('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 0 sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.04387236000401484 COLLATE BINARY  WHEN ((0.02582518033511816)+('*S砂3p?M^<')) THEN IFNULL('1183634828', NULL) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1170164643 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1439788897 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (LOWER(x'0642'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=312456605 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '7R>>Ke'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-360826883 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.7976931348623157E308 COLLATE RTRIM)-(CASE 0.46521260651089136  WHEN 0.7698762420592986 THEN 'lGkY3M' WHEN 0.032663693749514056 THEN NULL WHEN 0.4102313295084947 THEN x'3f7c' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(0.5252398530563355, -1.286896822E9))=(CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('''~' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-727276855 1594942002 sz=2043715512 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT NULL, NULL))>>(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1497955093')) BETWEEN ((((0X41e59d60) NOT BETWEEN ('-873687151') AND (x'd5d0')))) AND ((x'9ce3' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-206457379 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-961596623' IN ()) IN (((NULL)LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-738510061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'4b0d') NOTNULL)  WHEN (NULL IN ()) THEN CAST(x'' AS TEXT) ELSE (x'' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('S*JC' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE NULL  WHEN NULL THEN NULL END  WHEN (((x'6bbe')) NOT BETWEEN ((0X73f47e51)) AND ((0.7709822622799296))) THEN COALESCE(DISTINCT 1290963931, 0Xffffffffbff4d778) WHEN (((0.062068985871848614)) NOT BETWEEN ((1.183265253E9)) AND ((0.7709822622799296))) THEN (((((((((((('-76015983')OR(x'')))OR(NULL)))OR(NULL)))AND(NULL)))OR('qaQZ᠆&kys')))AND(NULL)) WHEN ((('', ',A}a%O', NULL)) BETWEEN (('qaQZ᠆&kys', '-77210992', x'')) AND ((0.3175934652519572, 0.18999093943038636, '0.7856780774516412'))) THEN ((-1.439788897E9)-(0.2615940358921547)) ELSE (((NULL)) BETWEEN ((NULL)) AND ((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=(CASE WHEN x'' THEN 0.5471176986901561 WHEN '843400464' THEN NULL WHEN NULL THEN NULL ELSE 'lgky3m' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-77210992)>=(0.6493002124014543))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((NULL) NOT BETWEEN ('0.3110950659570163') AND (0.690024964709358))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1231449128 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1170164643'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1231449128 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.28545031948369537)AND(NULL)))AND(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') IS TRUE)))<(((((x''))=(('04<zDl洋Q')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-2121518518'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(0Xfffffffff7d98db4); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1106714555'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -8.33373371E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('') AND (NULL))) NOT BETWEEN (((('-f''邟')) NOT BETWEEN ((0.04822436411519582)) AND ((x'50ea')))) AND (((('	')) NOT BETWEEN ((-7.62589539E8)) AND ((0.0938238901115841))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((x'dffb') NOT BETWEEN ('-607090090') AND (0X6b775ce9)), ((((((((x'8bf25512')AND(x'')))OR(NULL)))OR(NULL)))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '733740108 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1696217640 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1097872635 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1286896822 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '181534833 796587423 sz=1578590856 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=146634754'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-615137496 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-730734126 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))LIKE(CASE x'6267'  WHEN -3.67054409E8 THEN -844587470 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2005079615 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT CASE WHEN '-1760790878' THEN 0X6b2b05a9 WHEN NULL THEN x'' WHEN 'c' THEN 0.37598581644154716 END, (('1e500') BETWEEN ('-803107874') AND (0.2508474191386755))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(602867042 AS BLOB)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)AND(0.5259164637704737)))OR(818922551))  WHEN ((('1183265253')) BETWEEN ((-1491823721)) AND (('-1760790878'))) THEN 0.19653150585783963 COLLATE RTRIM ELSE ((NULL) NOT BETWEEN ('') AND ('-1097309304')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-996431114 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=500369260 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6154136887816972, ((((NULL)OR(NULL)))OR(0.9795361669942605)), 1006521624 COLLATE BINARY))!=(((~ ('0.19653150585783963')), (('F2xJ?|wS') IS FALSE), ((1568049101) BETWEEN ('312456605') AND (3.12456605E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1993618322 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '1332168183 sz=-806221448'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=169979443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '4 sz=602867042 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.04387236000401484) BETWEEN ('5}') AND (0x4cf28bdb)) IN ((('G?') NOT BETWEEN (0.43738897230971363) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1323631674 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1440726091 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TIME(0.9099716874840437, '-l-MtU\n)Y', x''))<=((+ (0.49884502276545173)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('C&N1HdvP') IS FALSE)) BETWEEN (NULLIF(NULL, NULL)) AND (((x'5aa8') NOT BETWEEN (NULL) AND (0.28545031948369537)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-859907393 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATE(x'', NULL, 'O\'))>=(((-214689022) BETWEEN (0.5072453204821572) AND (x'873b')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '936732459 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=460223398 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=654572218'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('	G') NOT BETWEEN (x'bd4e38a2') AND (0.18049170529382574))  WHEN ((x'71ff9bc5') IS FALSE) THEN ((NULL) IS FALSE) WHEN ((0.14356636042047954) NOT BETWEEN (x'') AND (0.4102313295084947)) THEN HEX(DISTINCT NULL) WHEN ((x'')||(0.37456515213522634)) THEN ((NULL) NOT BETWEEN ('DbL') AND (0.711214449090796)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')AND(1889285727)))OR(NULL)))AND(0.4213430162940228)))OR('oO')))OR(NULL)))AND('梖ꬔx9'))) BETWEEN (((0.8082422954848238)|(x'420b'))) AND (((NULL) NOT BETWEEN (x'6e9fc5db') AND (0xffffffff9dc165a1)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 -1063698869 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '1467314134' THEN '509982183' END THEN (('536291481')*(x'')) ELSE CAST('-f''邟' AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1864843930 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-650978243 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1342049804 sz=1179687408 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('-1039637779')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=740614304 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1624454710'  WHEN NULL THEN x'cf70' WHEN '528748632' THEN NULL WHEN -134559689 THEN 0x22cbdc02 ELSE NULL END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1014871261 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)&('1224951760')) THEN ((0.865516876139171) BETWEEN ('557624084') AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1283947464 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '369182707 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1881288634'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (STRFTIME('o[>t\\z7', -1547872948, x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM((('-762589539')GLOB(2.00165553E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1604230071 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-575497800 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (x'92df' IN (NULL)), CASE WHEN NULL THEN '' ELSE x'2f2e' END, ((x'')<=('-1439788897')), UNLIKELY(DISTINCT x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('0.3110950659570163')))|(((((((((0x4c877bc8)OR(NULL)))OR('0.4213430162940228')))OR(0Xffffffffaab3cef6)))AND(0X6fe58577)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0xffffffff9b79766a  WHEN NULL THEN 312456605 END AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-759787623 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=902163024'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1498257262'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1958306921'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1967823929'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ('' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 0 sz=-2080692967 noskipscan'); -- 5ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('	y?')))<(0.16405245912844113)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS INTEGER) IN (CAST('1327960165' AS TEXT), ((0.9296068244887435) NOT BETWEEN (NULL) AND ('O+	,U5DE')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1400255003 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.8677175453975614 IN ('C||\')) THEN x'' COLLATE BINARY WHEN CASE WHEN '-643101305' THEN '-245368789' WHEN x'' THEN '' WHEN NULL THEN -1.864956691E9 END THEN ((0xffffffffa2c88e73) NOTNULL) WHEN CASE NULL  WHEN x'' THEN NULL ELSE NULL END THEN 0.8963491805445057 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((TRIM(0.9323808377688538, x''), ((((((((NULL)OR(-1.097309304E9)))AND(0.5922087202739545)))AND(0.9359335815994294)))OR(x'')), CASE WHEN 0xffffffff965af6a8 THEN x'e435' ELSE 'tv<' END))>((((('-1549107898')) NOT BETWEEN ((x'')) AND ((-985026785))), ((0Xffffffffa9ebe765) BETWEEN (0.0552770434423947) AND ('-785301464')), CASE WHEN '-1286896822' THEN 1283947464 ELSE NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-803107874 sz=1183265253 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-386420663 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3273331141549234)AND('悒qX')))OR(NULL))) BETWEEN (((0Xfffffffff76d8d40)IS NOT(1624454710))) AND (-1485589104 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1652793373 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN x'bc8b8251' WHEN x'' THEN x'cb98' WHEN 0.8037855442386158 THEN NULL END)IS(CAST(0.9121469104874155 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((698102322) NOTNULL))|((((('2043715512')AND(0.13691137270224785)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=784815754'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1453689737'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-996431114 -1623401937 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('-1097309304', 0.20660410030222454)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '709982096 sz=984424358'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (770723263) AND (328320922)))AND((((('-367054409')OR(NULL)))OR(x'')))))AND(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-567357835 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=994215847 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(0xffffffffcf8b64cc AS TEXT) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=834042718'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1446773124 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=2097695965 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1097872635'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((-8.54634604E8, '-l-MtU\n)Y', x'', 0.10939017997576606, 'P\r荃')) NOT BETWEEN ((x'', x'', 'F''''[', '-1799220170', x'')) AND ((NULL, x'', 0.9940155806865679, x'', x''))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('782656074')) NOT BETWEEN ((x'3002')) AND (('C&N1HdvP'))))=(((((0X6d190060)OR(x'')))OR('1663386877')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((('')>=(0.20654661939541596))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'076f')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (x'7eb3', NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1696217640'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-803107874 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1541270686 sz=1119511427 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1183265253 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')/(0.703758009141312)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1807655667'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2089206879'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1648269919 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-650978243 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-22041423' COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>(0.4932087292827826)))<('L55mCd')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'b68e')IS NOT(0.38791571354350907)))&(0.9054977837361244)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-607090090'); -- 9ms;
DELETE FROM sqlite_stat1 WHERE 0.36922740880031735; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(0.31330410607016457)))AND(x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1183265253'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1894902253 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN 0.3118451563807698 THEN 0.36922740880031735 END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xfffffffff80bcce8)AND(0.832362552958898)))AND(((x'')<<(1675814890)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('') NOT BETWEEN (0.26887461812140534) AND ('')) THEN 0x3360b320 ELSE CASE WHEN '91749059' THEN x'' ELSE '(뭅)' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=403294416 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB('-1915328863'))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=110284882 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 -730734126 sz=-49848772 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1931675234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-100628807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE RTRIM THEN ((((((((0.8963491805445057)OR(0.10983906359310336)))AND('1283947464')))OR(x'')))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6859054673535633; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1944136366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(CASE WHEN 0.27473909009290565 THEN 0X717e1c0a WHEN x'd424' THEN '' WHEN NULL THEN x'ac7f' ELSE '' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 1594942002'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1540421129 unordered noskipscan'); -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('f KA%')) BETWEEN ((CASE WHEN '' THEN x'' END)) AND (((((0.7527302798039502, '-333051912', '梖ꬔx9')) NOT BETWEEN (('', x'', x'985e')) AND ((x'', x'e421', -454189404)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((1663616321)OR(NULL)))AND('bb교oS7nl')))AND(NULL)))OR('2140581293')))OR(x'')))OR('1262504668')))OR((NULL IN (NULL)))))AND(((0Xffffffff95842fe5)IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=230422990'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=323413320 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('흦!')AND('-425929690')))AND(NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1239808550 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 13ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=995994857 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1900660738 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')>>(NULL)))AND(CASE WHEN 0.7055184278148533 THEN NULL END)))OR(SQLITE_VERSION())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1441067040 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=1802984681 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2.121518518E9)*(((0.21381645733399335)%(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=590040734 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((715739270 IN (NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE -360826883; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOTNULL))AND(CASE WHEN 0.8711458452680779 THEN '2005079615' END)))AND(((('1224329924'))<=(('-996431114'))))))AND(((NULL) BETWEEN (x'd9174ff6') AND (x'')))))OR(CASE WHEN -420143295 THEN 0.9054977837361244 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKE(591639618, 0.6154136887816972, 'E'))AND(CAST(0.0938238901115841 AS BLOB))))OR('H诞')); -- 10ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND(((x'')==('HWL	0')))))OR((((NULL, 0.17657780788631405, x'4bfb'))<((x'd97c', '?', 0x1))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)||(rtreenode('0.6493002124014543', x'b531'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')<<(ABS(DISTINCT 0.40165367828617327))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-29888498 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffaf5830e3)/(x'')))<(((x'')%(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7294847765146691; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-91258478'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(-390831847)))AND('Sy')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=200165553'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('괄T[]') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('	g')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-984151722 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((('0.9099716874840437')) NOT BETWEEN ((NULL)) AND ((x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-723199944 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)GLOB('D\rO9PoJv')) THEN 0.42555793802646014 ELSE ((NULL) NOT BETWEEN (x'') AND (0X5ae3afb6)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=536291481 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-783965906 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-553731329 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '200165553 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '665287890 sz=-309009323 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=2127219707 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-851011809 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-867166414 sz=-436532116 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1589291699 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (ABS(DISTINCT -436532116))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=963309246 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1014746601'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) BETWEEN ('FALSE') AND (0.6176085446937517)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-136737356'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 46494530 sz=-797618810 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5922087202739545)<('')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1831554335 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1080540443 IN ())))>=((CASE WHEN '1097872635' THEN x'67f2' ELSE '\hKk<bDH\r' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((('-1799220170')GLOB(x'')), ((((0.7010903720624376)AND('1927742664')))AND('utcAWD[!Vs*'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 468054797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -1981051775'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 sz=1290963931 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-1940253735') NOT BETWEEN (x'') AND ('0.0865525215935753'))) BETWEEN ((((x'dabdbf16'))==((NULL)))) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.14118422233597827)>(0.11067810764204566)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1696217640'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1538388197 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffff8ee90ade)AND('')))AND(''))) NOT BETWEEN ((- ('-346061693'))) AND (((((x'53c8c821')AND('D\rO9PoJv')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('' AS BLOB), ((0.832362552958898) ISNULL), CAST(x'' AS TEXT), (((0.42326820829516654))<=((''))), ((-1934971097) NOT BETWEEN (NULL) AND (0.0055059526106965295))))>=((x'', NULLIF(DISTINCT NULL, '0.46521260651089136'), ((x'8d179341')IS(x'9c7b')), x'', ((0.49884502276545173) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1624454710 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<=(NULL)))<=(((((((((((((-466411669)AND(0x515aab2c)))AND('')))OR('0.13691137270224785')))OR(x'')))AND(x'')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=51759191 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=2001033531 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-6766948 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=591299482 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'b69d' IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-293725177 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '181534833 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 7.96587423E8 THEN '-873687151' END)IS NOT(CASE WHEN NULL THEN '0.5119959050013365' ELSE 0.687688250732528 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1306069842 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1497157250'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1005077500 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((json(NULL))OR(TOTAL_CHANGES())))AND(CASE ''  WHEN 0Xffffffffd60845e5 THEN '-1062108797' WHEN NULL THEN NULL WHEN 0.26127023865012045 THEN '' ELSE 'S''' END)))OR((((x'')) BETWEEN ((0.690024964709358)) AND ((-1053797444))))))OR(((0.7143674629412342) BETWEEN (0.3955326048463439) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.638936209E9)>=(0.41258489439095436)))AND(((NULL)*(NULL)))))AND(((('870486518', 'IQy(诞''	', '-367981323')) NOT BETWEEN ((x'', NULL, x'4f47')) AND ((x'79f8', '0.11067810764204566', '梖ꬔX9'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -1846941424  WHEN NULL THEN x'' ELSE x'85bb' END) NOT BETWEEN ((+ (NULL))) AND (((NULL)>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2029495648 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('-785301464')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-821344124 sz=-29888498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-2012484050'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '4 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=937883232 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1457912654 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1606881931 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1453469308 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((((-2019934067)AND('-1059898498')))AND('-1429289101')))AND('5J禴''\rQB')))OR('D')))AND(0.607717728471268)))OR((+ (x'')))))OR((((x'')) NOT BETWEEN ((NULL)) AND (('QMᐏZ'))))))AND(((x'') IS TRUE))))OR(CAST(0.14772041428208105 AS NUMERIC))))AND(((((NULL)OR('0.42326820829516654')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0.23152740581664666  WHEN 'TAR' THEN NULL END  WHEN (0.8711458452680779 IN ()) THEN NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.9756254224484561 IN ())  WHEN ((((NULL)OR(0xffffffffac75342b)))AND('')) THEN ((1148318394)<>(0.13302896771524153)) WHEN (((('-170009571')AND('')))OR(x'')) THEN TYPEOF(NULL) WHEN CASE 7.33740108E8  WHEN x'' THEN -1.444157595E9 WHEN '-1722681638' THEN x'' WHEN 8.43400464E8 THEN '4nkqUAm' ELSE '-1497955093' END THEN '-820453748' COLLATE BINARY WHEN (('-1381000004') IS FALSE) THEN ((x'7444') NOT BETWEEN ('-1386773414') AND (x'')) WHEN ((0X1c616aaa)>=('')) THEN (((((((('a2')AND('-2077101410')))AND(NULL)))AND(x'5aad')))OR(0x0)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)*(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1105125819 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1720520766') NOTNULL) IN (CASE WHEN 0.33202726284982853 THEN 'mB! ' ELSE '' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (NULL) AND (0.7010903720624376)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.28538259303889135)>=('-1808021398')))&(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 -1164387002 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1447104201 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1968758045 106760428 sz=2062139168'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 1486487076 sz=1802984681 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1170164643 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-873687151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-1801251405'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-77210992 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2005079615 863934059 sz=778839123 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2120349710 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)+(((-1105154707) NOT BETWEEN (x'') AND (2009208838)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2097695965 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2092130128 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((x'', x'', NULL)) NOT BETWEEN (('108297421', x'', NULL)) AND ((1.62445471E9, '308917498', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1060034224 sz=273390979 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-785026969 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('lH퍄lR')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_VERSION()) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('''~')GLOB(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-615137496') BETWEEN ('-607090090') AND (NULL)))AND((((((((('')OR(x'')))OR(x'')))AND(x'2a39')))OR(NULL)))))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-762589539 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL))=((('-803107874') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((QUOTE('')))>((((NULL)IS NOT(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x'6436'  WHEN x'81d56933' THEN 0.537517335955548 WHEN 0.26543532422969573 THEN 0xffffffffa452701f WHEN x'' THEN x'99c9' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 -1178235471 sz=-1235974547 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-785301464 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1193613255 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1356042105'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1170164643; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-346061693 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1014569659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-347720572'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=431893892 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=-1648269919'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(CAST(x'' AS NUMERIC))))OR((~ (2.043715512E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1597067256 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))AND(0X387fc302)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -525584244 sz=788947992'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 1842786362, x'')) NOT BETWEEN (((('0.49666688289121996') IS TRUE), (NULL IN (0.4302047222979022)), '4' COLLATE RTRIM)) AND ((STRFTIME(0.8615601557872569, '-1807894342', NULL), -901886682 COLLATE BINARY, CASE x''  WHEN 0.05167712263230051 THEN 0.7294847765146691 ELSE -7.30734126E8 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (590478205 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid((('0.09178087380542332') NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1422330514'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('2043715512', 'L55mCd', NULL, NULL, NULL))<((NULL, 0xffffffffa4d035fb, NULL, x'25fda6e0', '0.38791571354350907'))))-(TRIM(0.04387236000401484, '-1353174813'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1782338997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1760790878 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 733740108 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.22814730777523307)OR(0.04142572730525185)))OR('mxpG⦌9U}'))  WHEN x'227f' COLLATE RTRIM THEN ((NULL) BETWEEN ('uC') AND (NULL)) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1450996924 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOT BETWEEN ((0x72e330d4 IN ())) AND (0.4385549560083105)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('c') BETWEEN (0.043422743205085546) AND (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'c83b' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2009208838 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '0.04387236000401484' COLLATE BINARY  WHEN ((',?\')=(x'')) THEN 0.6159861153664631 COLLATE RTRIM ELSE ((x'') IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffff98fba1a8)OR(0xffffffff9256a89d)))AND(-7.30734126E8))) BETWEEN ((- (x''))) AND (CASE WHEN NULL THEN NULL ELSE '-327763705' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1877312887 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1439788897')OR(x'')))OR(0.11912681807988057)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)OR(0.10983906359310336)))AND(0.5208186199563025)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=484152460 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1306743509 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1059898498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1007564735 sz=-1526463470 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=181334729'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '710282871 sz=-1170164643 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'0292'  WHEN 0Xffffffffa689587d THEN '1354257856' WHEN NULL THEN NULL WHEN '0.42326820829516654' THEN 'l2<^峩k.' END)<(((NULL)>=('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x''))GLOB((((x'', x'91fe7f94', NULL))>((x'c632', NULL, 0.7493008023396567))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5922087202739545, ']AZ殃g', '6('))<=((-730734126, 0.1770749826600745, '0.0')))) BETWEEN (NULL COLLATE BINARY) AND (CASE WHEN 604299418 THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-48776875 sz=320698368 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1.231449128E9 COLLATE NOCASE AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('k9' COLLATE BINARY)-((((NULL))!=((' ['))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-873687151 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.21070886268374667)|('s-')))AND((((-1422330514, x'', x'')) BETWEEN ((20233544, -706656656, x'')) AND ((0.847242972731715, NULL, 'cG2|o+X'))))))AND(((((NULL)OR('J-')))OR('o[>t\\z7')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-797618810 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-2100585055'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1964823682 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('-738510061')))AND(-944574603)))+(CASE WHEN NULL THEN 'ad#䎃UIc嚩' WHEN x'1b2d' THEN 0.564141775004232 WHEN x'' THEN '-910789975' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('7R>>Ke') IS TRUE)  WHEN (('h6R((eQ') ISNULL) THEN ((-1.286896822E9) ISNULL) ELSE ((x'') BETWEEN ('0.19829744729972665') AND ('-1784572624')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN x'' THEN -1189342395 END IN (((0.4473412118820018)!=('759713755')), SQLITE_VERSION())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT x'2f57' COLLATE BINARY, CASE ''  WHEN 0.8251401376247179 THEN '952135978' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1491823721'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('-1847334497')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-177464849 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1770912711 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-367054409 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=75384689 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=539536879 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1503571927'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'757e') IS FALSE) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')/(0.4099327524166181)))*((('1774493498') NOT BETWEEN (0.32949243070147627) AND (0.028108048243332795)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('a')) IN (((NULL)%('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=536291481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKELIHOOD(DISTINCT '1964823682', 0.22575547647072913)))<(((((('0.27473909009290565')OR('-1231449128')))OR('0.9940155806865679'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('烛2M}꨸' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1622797752 -615137496 sz=958555576'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '481167890'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-666743681'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')IS(''))))>(((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=146634754 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1627981553 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=626064224'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_type('-1059898498') IN (CAST(NULL AS NUMERIC), ((((0.4534363964283509)OR(x'')))OR('&\r\n3')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '8m6pBGTJ}' THEN NULL END)*(((-9.61596623E8)==('0.8711458452680779')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('-1552636654' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1207158762'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-2140902443 sz=2093589270 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=536291481'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=2095107135 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=528748632 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '', (('146634754')LIKE(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1955912766 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CAST('-1053797444' AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1111594367 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((x'4edb') BETWEEN (NULL) AND ('542801509'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2092130128 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1953537603 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1919888472 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1437296967 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.945402961E9) IS TRUE))<(((x'')>=('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=918898552 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((x'4fb2') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LTRIM(NULL, -9.61596623E8) THEN (((x'5dcc'))<((''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1263197429 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*('-1879287184'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1097872635 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1243810266 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.9940155806865679' COLLATE NOCASE) BETWEEN (CAST('-892221506' AS INTEGER)) AND ((0Xffffffff9e899ece IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x651a3a28) BETWEEN ('lz') AND (0Xffffffffb5c965b5))))>((((NULL)>>(0.5257623727671191))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1027524598 sz=2118694623 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD('-89277087', 0.1174404637703278) THEN ((x'') NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '796587423 0 sz=-1841854277 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=181534833'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1456274727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1444157595 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(x'5c7f')))<((('}G*,+s') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7010903720624376 COLLATE BINARY) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-615137496'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1760790878 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(-1597615214 AS NUMERIC))AND(((((NULL)AND(0.4448750020775456)))AND(0.41258489439095436)))))AND(CAST(0.5445359850130849 AS NUMERIC))))AND((NULL IN ()))))OR((('0.3175934652519572') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1760790878'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'39fe') BETWEEN ('0.37598581644154716') AND (0x1f1375b4)))AND(CASE WHEN x'' THEN -1.170164643E9 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '1578590856 sz=1474321147'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=832325601 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0Xfffffffff61bd250)OR(x'')))AND(x'0966ff16')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1660772139 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-436532116 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN CASE WHEN 'lGkY3M' THEN NULL ELSE NULL END THEN x'' WHEN (((x''))>((NULL))) THEN JULIANDAY(NULL, '-1401653528', NULL) WHEN (((NULL, 'soJ7G^J<U', x'', NULL, NULL))<=((0.3175934652519572, ']W', '彧帶Jy', '-89277087', -3.67054409E8))) THEN (('1757531885') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-206457379 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-799487333' AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1988624818 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT NULL))/((('')=('2081345558')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))==(((-1.36737356E8)<('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1772423512 sz=237236752 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2003979450 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '쐷\r6f|'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1484002813 0 sz=-1027404639 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffc78f3267; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOTNULL)))!=((('528748632' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1923563708 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'3191') BETWEEN (NULL) AND ('-1563914637')))AND(-1243810266 COLLATE NOCASE)))AND((('-1958639808')<(x'f22f')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1847334497 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1998672898' AS REAL))<<(((0x41dea004) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'63b7'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-759787623 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<<((-2.121518518E9 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1950822346 sz=602867042 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1563914637 -1710801547 sz=-177464849 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'72b7'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '4 1183265253 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', -770653216, 0.12586826894054715)) BETWEEN ((((((0.5807268803151274)OR('1675814890')))OR('}G*,+S')), json_extract(0.40555578306663054, '1797821842', '-360826883', ''), CAST('' AS REAL))) AND ((((x'') NOT BETWEEN (x'') AND (x'8f8a')), (((',?')) NOT BETWEEN ((x'')) AND (('_qtsxSzm'))), (('')<<(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1742181914 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-206457379 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1444612983 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-785301464' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((523177552)>(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1578590856 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1074473096 -727276855 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-303098221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (NOT ('1945402961'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1694677566 698102322'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(NULL)))AND(NULL)))OR(-1.760790878E9)))OR(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 -607090090 sz=331007599'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-768584939'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X5dcb1aa8)LIKE(0.5471176986901561)))OR('-H鳽x' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1348175953'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1951568951 sz=-23460535'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '433623421' THEN x'' END THEN json(NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1557146343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1059898498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1373648296 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1642709401 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 2 sz=866900985'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7294406955273759)*(NULL)))AND(CASE NULL  WHEN '悒qX' THEN -1.439788897E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 -1648269919 sz=-252455379 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 0 sz=-738510061 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-961596623 0 sz=-1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN ('') AND (NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '1965898269 sz=-360826883 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '525068170 -532092193'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1142329304 sz=-2092130128 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN '602867042' THEN x'' ELSE x'' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1768221857'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'9b33')) NOT BETWEEN ((((((((((NULL)OR(-1.444157595E9)))AND(x'')))AND(NULL)))AND(0.15984353321282074)))) AND ((0.6176085446937517 COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-77210992 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=614541129 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 'Z'  WHEN -3.60826883E8 THEN x'' WHEN 0x5aa5b81e THEN x'' WHEN NULL THEN '4' ELSE x'' END IN ((((((((('')OR(0.09024546709904346)))OR(0.7443321689693377)))AND(x'c1d9')))AND(0.022060828080229578)), ((('1802984681'))=((4.6836012119377823E-4))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1877312887 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1401653528')>>('()'))))==(((~ (0.13491832233133316))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('f#D' COLLATE NOCASE) BETWEEN ((('*v')*(0.9791200866441953))) AND (0X53a7eaec)); -- 0ms;
CREATE VIRTUAL TABLE rt69 USING rtree(c0, c1, c2); -- 40ms;
UPDATE OR ROLLBACK rt0 SET c1='0.9121469104874155' WHERE CAST(((rt0.c3) IS TRUE) AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.9780698993844431); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER , c1 INTEGER , c2 BLOB , c3 INT , c4 TEXT , c5 INTEGER , c6 INTEGER ); -- 1ms;
UPDATE OR REPLACE rt69 SET c0='1761157512'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt69 SET c0=0x49046bc2, c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1='LNNlVs_' WHERE ((((((((t0.c4)AND(0.7195786764506926)))OR(t0.c4)))OR(((t0.c0) BETWEEN (t0.c5) AND (t0.c6)))))OR(json_quote(t0.c1))); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' sz=1183265253 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-81808654'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=202692980 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-487842661 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((- (0.4235149283971733)))AND('-1900280167' COLLATE RTRIM)))AND(CASE WHEN '-1958639808' THEN x'0d31' ELSE x'f436' END)))OR(((-1.958639808E9)>=(2043715512)))))AND((('504255879')LIKE(NULL)))))OR((('843400464') NOT BETWEEN (-1143049727) AND (NULL)))))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) NOT BETWEEN (CAST(NULL AS REAL)) AND ((('-222566774') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS FALSE) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=2097695965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1622548231 sz=385983633'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-367054409'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1882954816 sz=-732992581 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1283947464')-(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-76015983'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=611023175 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', '2 sz=-76015983'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9396619724225503)||(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.6970605504987953 THEN NULL END) NOT BETWEEN ((((('7&x7')AND('')))AND(x''))) AND (x'd9b4' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=245007992 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((1.183265253E9)==(x'b774')) THEN (('M⿇') NOTNULL) WHEN (('')GLOB(0.26127023865012045)) THEN CASE WHEN 0.7439061153398236 THEN x'' ELSE x'' END WHEN (((NULL, '-1799220170', 0.47505174271280837))=((x'', x'c260', '-136737356'))) THEN (NOT (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ' sz=-124929122 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHAR(0.0938238901115841))!=((~ ('-1053797444')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '1945402961 sz=408746325 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')GLOB('-1315814307'))  WHEN load_extension(NULL) THEN LOWER(x'') WHEN ((0.3156831979671858)GLOB(NULL)) THEN ((NULL) IS TRUE) WHEN x'' COLLATE RTRIM THEN (('0.7010903720624376')<=('-786180960')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)=(((0.7811568130874085) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', '4 146634754 sz=-29888498 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'526d' IN (-7.7210992E7)))=(((((((((x'af8f')AND(x'29eb')))AND(0.9315174278476566)))OR(-8.03107874E8)))OR(0X2ed62e2d)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1139224561 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-436532116 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', ' sz=-652590783 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.6797957292188584) AND (682972841))) NOT BETWEEN (IFNULL(-1655793132, '')) AND ((0.8202519085032882 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1060920777'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=945936329 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))<>(CASE WHEN -785301464 THEN 'v9' ELSE '-522423734' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1053797444 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN '-1974784394' THEN NULL WHEN '-297425872' THEN 0Xffffffffc13053bc WHEN x'5819' THEN '' ELSE 0.49335427611050797 END, CASE NULL  WHEN -785306281 THEN NULL ELSE x'38e1' END, x'' COLLATE BINARY))<(((('9PaH,l\r')*(NULL)), (((NULL)) BETWEEN ((x'')) AND ((x''))), (NOT ('s-'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=833715752 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1964823682'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2 -163850952 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL, NULL, NULL))<(('aZauS', '1106714555', NULL))))AND(((NULL) ISNULL))))AND((((-1.563914637E9)) BETWEEN (('1624454710')) AND ((0.7010903720624376))))))OR((x'' IN ()))))AND(((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' sz=-1353174813'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' sz=1297482204 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-245496548 1661247481 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2 sz=445138654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=362823267 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5553315259014033)*('XQ')))<=(((NULL)IS('0.8711458452680779')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2 sz=1942671390 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)*(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((312456605)%(0.4547330750737174)))LIKE(LTRIM(x'f3ff', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', '0 sz=1684747049 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (((0xffffffffdb55bf28)) NOT BETWEEN (('698248459')) AND ((NULL))), CASE 'Lq'  WHEN NULL THEN 0.2011793950779448 ELSE 0.4073618409454892 END, x'2c33', CAST(NULL AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0Xfffffffffd61e72d)) AND ((0.9814288221117156))))=(LTRIM(NULL, '1272343251'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.539903736001274)AND(NULL)))AND(NULL)))AND((~ ('0.4932087292827826')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', '611920815 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'')) NOT BETWEEN ((x'')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT '!YQ', x'') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(COALESCE(x'', NULL), (('1821056361')GLOB(x'52d50f5f'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1940259605 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-699596067'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1490759066')*(0.735738769476509)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-525275920 870486518 sz=1731737637 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1964823682'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1584981288 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '1984960585 sz=-1980552513 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=-471282286'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-2049698083'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS(x'1b2d')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=964579859 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((x'')OR(x'')))AND(NULL)))OR('')))AND('-245368789')) THEN ((NULL) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-730734126'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)AND('')))AND(NULL)))OR('-241930450')))OR(NULL))))<((TYPEOF(DISTINCT -1183272910)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1179112845 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-785301464 sz=-1633422572 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5682108616272805) ISNULL))<(((0.14130317735721354)=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', '-940700933'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (0.802924249788279) AND (x'')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-71179235 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '' THEN '733740108' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM(DISTINCT 0.40545269766180836) THEN (((x'', '-833373371', '뭅_')) NOT BETWEEN ((-7.27276855E8, x'', NULL)) AND ((0.3999641367329331, '', 0.17657780788631405))) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', ' sz=818922551 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', '-1251383104 0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1648269919 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(UNICODE(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2121518518 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' sz=509982183 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1877461530 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.781603439545618 THEN x'43c8' ELSE -1207447115 END)AND(CAST(x'' AS REAL))))AND(((x'')|(0Xac1373d)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6776336206495364))>((NULL)))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' sz=698248459 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-797618810 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4859137882241007)) NOT BETWEEN (('-1154463336')) AND ((0.4102313295084947))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (1e500))  WHEN CAST(0x509210fe AS TEXT) THEN CASE WHEN NULL THEN NULL END WHEN (+ (NULL)) THEN (('c32i^zk*d') NOT NULL) WHEN CAST('' AS BLOB) THEN CASE WHEN '-66444665' THEN x'df29' WHEN x'' THEN 'f5O' WHEN '' THEN 1.578590856E9 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '630624055'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ' sz=509982183'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-2014221339' THEN NULL WHEN '-1069609649' THEN '429268802' WHEN x'' THEN '[]J' END)%((('?~')%(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((x'') NOT NULL), (('1064175266')>(0.7421464226723811))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_array_length('F<tAD⣖5pJ') AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1624019235 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1883740121' THEN 'o\' WHEN x'' THEN NULL WHEN 1191403735 THEN 0.7660542833163557 END IN ((NOT ('1290963931')), CAST('gP' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1183634828'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', x'', 0.38791571354350907)) NOT BETWEEN (('nR[#bw', x'', x'')) AND (('-0.0', '>*IL^A̗C', 0.02125763365341593))))IS((((x'1152')) BETWEEN (('2005079615')) AND (('345968532'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1578590856 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((((NULL)OR(x'')))OR(0.4153777795660454)))AND('v')))OR(NULL)))AND(x'dc56')))AND(-1479374244)))OR((((('tFHo')OR(0x75942557)))OR(x'ae10')))))OR(CAST(NULL AS BLOB))))AND(2086668440)))AND((((('0.20660410030222454')OR('0.04822436411519582')))OR(0.6548027602878751)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8255936786719839) ISNULL)) NOT BETWEEN ((~ ('J^'))) AND (CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELY('0.6859054673535633'))OR((0.7147023951793713 IN (6.98248459E8, 0.032663693749514056)))))AND((((0xffffffffbff4d778)) BETWEEN (('')) AND (('-961596623'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2034369139 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1964823682'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')*(0.8447700239958391)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR('')))AND(0xffffffff99c98e99)))AND(x'2c38')))AND('-346061693'))) BETWEEN (((NULL)<(NULL))) AND ((+ ('396721389')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.14513252095103857)<=('172142329')) IN (NULLIF(0.7690376563674965, '0.5259164637704737'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1243810266 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((200165553))=((1674514786))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' sz=-1927803647 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '1084727966 1615995257 sz=-844587470 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=181534833 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-527627713 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-206457379') BETWEEN (x'1a7b') AND (NULL)))AND(CAST(0.4219323436453153 AS TEXT))))AND((((x'')) BETWEEN ((0.639525483841991)) AND ((-1887746761))))))OR(CAST('200165553' AS BLOB))))AND((+ (1804817551)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1231449128 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '2 733740108 sz=-2135172181 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' sz=425700413'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1226837671'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1035336159 sz=-443912887 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ ('-1074473096')))OR(((NULL) IS FALSE))))OR(((0Xffffffffa9ef477e) IS FALSE))))OR((+ ('1489723799')))))AND(CAST(1630594102 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.7976931348623157E308 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=602867042 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=957596555'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-854634604'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1422330514'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN (0.21667970079999965, NULL)), (((0.3120932268390887, '-245368789', x''))==((0.7124015234740285, 0.26127023865012045, 0.887505655259143))), (NULL IN ())))==((((NULL) BETWEEN (x'') AND ('CoO\햌U')), CAST(0.49884502276545173 AS BLOB), TYPEOF(DISTINCT 0.977183841005072)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '536291481'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1797981609')|(787353853)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-635345550 sz=-775993392 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 2 sz=1997379696 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1703705550 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-95653669'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1105567072'))>=((0.5698044375958125))), '1165810990' COLLATE RTRIM, (((((((('-762589539')AND('1x~햌OD*')))OR(x'8072')))AND(x'')))OR(NULL))))<((NULL COLLATE RTRIM, ((-7.7210992E7) NOT BETWEEN (x'3170') AND (NULL)), x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1706198918' THEN x'' WHEN x'a9b0' THEN NULL WHEN x'' THEN 0.9105583872015374 ELSE 'i趴.	' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-727276855 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1068659515 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', '1504850520 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '509982183' THEN NULL WHEN '-996431114' THEN 0.21381645733399335 WHEN NULL THEN '1351916348' END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.19653150585783963')OR(5.429900458064907E-4)))AND(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-367054409 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', '-1074473096 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.1507955125698135)))<<(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=2043715512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1340274296 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1612190347 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('sK')) NOT BETWEEN ((0.5774516847022976)) AND (('7c_')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND ('-49479077')))IS(((x'') BETWEEN ('') AND (-1648269919)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-56457390 sz=-674133844 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-996431114 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.29476423718683087) BETWEEN (x'') AND (0.5368028774280781))) NOT BETWEEN (0.6167595160100932 COLLATE NOCASE) AND ((('-1059898498') BETWEEN (NULL) AND ('1418976759')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' sz=181534833'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=498149210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ' sz=58283218 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULLIF('', NULL)))>((((((x'48bb')AND(0.49590591542822515)))OR('-438957281'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))<=((x'')))))<=((((0.252688252902181) ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 -436532116 sz=-1638936209'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-996431114 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', ' sz=-2092130128'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-245368789 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=181534833 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' sz=602867042 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('8')AND(NULL)))AND(NULL))  WHEN ((((0.004911372306016126)OR(x'fdb1')))AND(x'')) THEN ((1955993112)*(0xfffffffffce3b433)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1974455009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))=(CASE x''  WHEN '-2121518518' THEN 0.33104221964024205 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'dee6' COLLATE BINARY  WHEN ((((0.2622145686578282)AND(NULL)))AND(-7.59787623E8)) THEN (((x'', NULL, x'')) BETWEEN (('-762589539', -1.622797752E9, NULL)) AND ((NULL, '395694448', 0.1323714271025096))) ELSE (('-902769300')AND(0.5252398530563355)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1781579421'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-1049282025 -650978243 sz=221655527 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ' sz=204819702'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '323575154 0 sz=-727276855 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(0.01607168312376439 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', '0 sz=1698766935 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1509186254 sz=1183634828 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1104752471 4 sz=337606131 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', '243695293 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-100811548 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((STRFTIME(0.31330410607016457, '698102322', 'E읃u,++*'))) AND (((('684743250') BETWEEN (NULL) AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_valid('')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE ''  WHEN '-738510061' THEN 0.3171802145872723 END THEN CASE NULL  WHEN x'c1a46d39' THEN '0.9296068244887435' ELSE 'AaE' END WHEN NULL COLLATE NOCASE THEN NULL COLLATE BINARY WHEN CAST(1438596467 AS INTEGER) THEN x'3e89ee45' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', '0 1035603422 sz=-1813123354 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', '4 sz=1105567072 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', '0 sz=521159805 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1651103737') NOT NULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=710849567 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9165890124825122)) BETWEEN (('_qBm')) AND ((0.2811000301466412))))GLOB(CAST('-2080517918' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1327643567'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' sz=1765697275'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-163037578 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=528748632'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-198689411 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1772423512 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=346606260 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '1867318809 sz=-1473290912 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-2021441706 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=624878455 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1437600584 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '44435597 4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Pe')*(x''))) BETWEEN (((((((((x'')OR(x'56c5')))AND(0xbee48b1)))OR(0.1991982705321661)))OR('2043715512'))) AND (CASE 'YV*'  WHEN '	E' THEN NULL WHEN NULL THEN NULL WHEN x'' THEN '5J禴''\rQc' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1262504668'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))==((NULL)))) BETWEEN ((NOT (-6.15137496E8))) AND (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.25100155126368906)))/((('mL2\n/K/') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1146559976 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>>(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1648269919 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((((((NULL)AND('-329060760')))AND(0.07398857380792756)))OR(NULL)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER('(뭅)'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-730734126' IN ()) IN ((NOT ('-1243810266')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('310928302' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '107405525 sz=1517925579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', '733740108'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X3b2e0014 COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-961596623 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-H鳽X') NOT BETWEEN ('-854634604') AND ('-89277087')))LIKE((((x'')) BETWEEN ((x'')) AND (('-530330192'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.5772363269420571)AND(x'')))AND(0.24575900172989296))  WHEN CASE WHEN x'' THEN '0.43738897230971363' ELSE 0.5742424288791464 END THEN (NOT (x'')) WHEN NULL COLLATE RTRIM THEN ((x'')GLOB(x'1a087b14')) WHEN ((('{}'))<=((x''))) THEN CASE WHEN x'de34808d2d45' THEN x'' ELSE x'' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2W'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1285598074')<<(NULL))))==((((((NULL)OR(0.15247771972358037)))AND('-1645060281'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1964823682') ISNULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', ' sz=698102322 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) NOT BETWEEN ((100464171)) AND ((NULL))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=733740108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '-844587470 sz=-1715474529 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.19653150585783963 THEN 0.15863319255972563 WHEN '227463858' THEN '-1444157595' WHEN x'' THEN NULL ELSE 0.8039401096565794 END)IS NOT(((NULL)<=('714391775')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) NOT BETWEEN (-1.7976931348623157E308) AND (TRIM(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN x'' ELSE 1.7976931348623157E308 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '-2020092576 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '4 sz=-1958639808 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'50ace02a')-(0.3522814178755025))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ ('()')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1322015660 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=1195912370 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'37b4')GLOB('^0%kuTh\ne'))))<>((-89277087 COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)<<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1231449128 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=146634754 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOT BETWEEN ((((NULL))>=((0.6519287768390468)))) AND (LIKELY(DISTINCT 0.19055740634919283))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-238841318 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1903720994 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' sz=-895336639 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE ''  WHEN NULL THEN '-1638936209' WHEN '1107799674' THEN 'Z' WHEN 0.04590315790677102 THEN 0X7916811c WHEN '蕷P-<LR*y' THEN 0.05445053449892512 WHEN 0.20881253088924423 THEN NULL ELSE '-844587470' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('p{f')))AND('274047137')))AND(x'')))OR('698248459')))|((('-89277087') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))AND('-1914169684')))<<((('5B')/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM(DISTINCT '733740108', 0.34446128009172416) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=818922551 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-291960751'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-95653669 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-8.4458747E8)&(x'')))*(json_remove(NULL, '-107008322'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=2009208838 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' sz=528748632'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-860152233 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)GLOB(146634754)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((0.9268587624254044 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-788721448 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', '0 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-961596623 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('')AND(0.6723572270255761)))AND(x'3fd2')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' sz=1637157521 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-884802807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0865525215935753; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '4 sz=1183265253 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-360230161 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' sz=-499674280 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Ṣ3Z斡]{2_y' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1241792117 sz=122154649 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1032371343 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('')>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-76015983 2 sz=1927742664 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))LIKE((('1578590856')&('-797618810')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('Y2292066169748244015:3907437467073864990 1234:-4939703162414302619:-8֩YetW'))>(('bb교oS7nl'))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN (((NULL) IS FALSE)) AND (0.9199081103536371)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) BETWEEN (LOWER(-4.36532116E8)) AND ((('0.9795361669942605')%(0x36825a15)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (x'9546') AND (NULL)) AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=1657005479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('흦!')+(0.03219189552371138)))OR(x'' COLLATE NOCASE)))OR((x'' IN (NULL)))))AND(CAST(x'5a1e24fa' AS BLOB))))OR(((0.4932087292827826)||('''\r3p7')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-360826883'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '761685528 -890030028 sz=-1861691364 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)&('MX')) THEN 0.9940155806865679 COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE '1697390773'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=796587423'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-563631323 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' sz=818922551'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-346061693' COLLATE NOCASE) BETWEEN (0.3761642793724638 COLLATE NOCASE) AND (UNICODE(6.82972841E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '2 -1896791869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-490118675 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' sz=-664203934 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-1727192608 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1497955093 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2023137461 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-746010617 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '-367054409 sz=2009208838 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=1797981609'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1630223827 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.15950401897561428) AND ('1591648829'))) BETWEEN ((NOT ('\rj'))) AND (CASE WHEN 0.06603038038255371 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-1591109748 -101941155 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.26127023865012045' IN (0x299c3232, -797618810)))GLOB((('-293163051') BETWEEN (x'') AND (0x4c877bc8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.49884502276545173') ISNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, '')) NOT BETWEEN ((((((NULL)AND(x'db969ee2')))AND(NULL)), ((('-1907020340')) BETWEEN (('')) AND ((0.22218396889007874))), ((1999256498)+(0.20685467581123396)))) AND (((('460749879') NOTNULL), CASE 'f2xj?|ws'  WHEN x'a14b' THEN '698248459' WHEN '᧯	\r+ ?\' THEN NULL WHEN '0.865516876139171' THEN '-1054102353' WHEN -95653669 THEN NULL WHEN '-1563914637' THEN 89606133 ELSE '536291481' END, ((0.3427733299166411)=(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1411785049 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (-545148383) AND ('[]')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ ('CAux/vf')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-814087954 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.42555793802646014 AS TEXT))*((('.%') NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) NOT BETWEEN (((x'')%(NULL))) AND (((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5982052323295979) IS FALSE) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' sz=1044676918 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1597099506 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '2006502635' COLLATE RTRIM  WHEN CAST(NULL AS TEXT) THEN (- ('-1847334497')) WHEN (- (NULL)) THEN (~ (0.16594431513192387)) WHEN 'i>mO8_' COLLATE BINARY THEN rtreenode(0.832362552958898, 0.7143674629412342) ELSE 'maJt]0]o' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '2043277895 sz=1648924344'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'f745' COLLATE BINARY) BETWEEN (((x'1538') IS FALSE)) AND (0.8638729295792605)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', '-262828920 sz=-258078229 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=339150225 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-870780140 sz=-833373371'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-961596623')/('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(0x8bd7802) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN CASE WHEN '-2124725485' THEN NULL ELSE -2072460547 END THEN ((x'') NOTNULL) WHEN CASE 0.25572215544753885  WHEN 0.18049170529382574 THEN '-1059898498' WHEN -62896450 THEN '1927742664' WHEN NULL THEN 'nQbH' ELSE 0xffffffffa52b463d END THEN ((((((((NULL)OR(0.9923481778379697)))AND('1019920513')))OR(x'4bcb')))AND(0.7726288118946654)) WHEN ((x'4f97')>(NULL)) THEN ((x'd52c') IS TRUE) ELSE (0xfffffffffcd54680 IN ('䀨ckasr3VR', x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('-854634604') AND ('-1869441531')))+(CAST('717360710' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=834662883 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1444157595 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('쏽}') BETWEEN (x'') AND (NULL)))/(0.04977416607798224)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.7010903720624376 COLLATE RTRIM)OR('583785474')))OR(((-298802173) NOT BETWEEN (x'') AND (0.14320934207394476)))))OR(((NULL) NOT BETWEEN (x'') AND (1.81534833E8)))))OR((~ ('n')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('9223372036854775807') BETWEEN (0x1e65b5e7) AND (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('f#D')*('-1231449128')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '2125731939'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (((0.12514794300922727) NOT BETWEEN (1253940631) AND (0xffffffffc495d4bd)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'699b' COLLATE NOCASE  WHEN ((((NULL)AND(0.5960562192047398)))AND('870486518')) THEN x'' ELSE CAST(x'4879' AS BLOB) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.772423512E9) BETWEEN (NULL) AND (NULL)))OR(((1117432214)>>('509982183')))))OR('bIO(Y\n*Y_')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((highlight('e>0Ey5L3', x'', 0.040225829746412645, 0.5989885845262871))OR(CASE x''  WHEN x'bc70' THEN '-854634604' ELSE NULL END)))OR((((0.39504345919584993, x'', '1094786988')) NOT BETWEEN (('', 0.7985979480651566, '312456605')) AND (('698102322', x'', 'b2'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1856819759 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1176128929 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', '1097872635 -1530746930 sz=-1298451160 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1638936209 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5973628820358674)LIKE((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-885332084 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1790931290 sz=1524988674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1401653528' AS TEXT))IS NOT(MIN('-1053797444', -1.958639808E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=431121708 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((0.48358996539612753)%('''B'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X79d09fb8 IN (x'bdf8')))AND(LOWER(0.10111155280005779))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1478151609 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffba40b45d IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0.7155155293953082 THEN x'' ELSE '-368257384' END  WHEN (x'' IN (-1781138970, 0.05555106986031999)) THEN ((x'')>>(x'')) ELSE 0x528c4493 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.42190242518375687; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-727276855' AS BLOB) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1175587319 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' sz=-95653669 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'' THEN NULL WHEN NULL THEN 0.3306625450169445 WHEN x'133c' THEN 'a%pxHE8.' END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=337673856 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.45877287131181366) IS FALSE) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-858505311 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=322821208 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '-235347312 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2092130128)|(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (0.3273331141549234 IN ('-1958639808'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-136737356'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.4102313295084947 AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((+ (-100628807)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-538827785 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('528748632')*('1802984681'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' sz=-738510061 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 1902519859'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((-1.243810266E9)IS(((x'')-('-92949074')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1353174813'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('zh{拝.K2_')AND(NULL)))OR(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-1202904589 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1319998175'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=347217434 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-2102606303 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 1578590856 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('0.10939017997576606'))) BETWEEN (COALESCE(NULL, -1509362751)) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' sz=-548256054 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '509982183 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.5334888606392784 ELSE 1.7976931348623157E308 END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=528748632 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((271672845 IN ('-833373371')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=599601623 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7294847765146691)GLOB(0.8116376017206512))) NOT BETWEEN (((1797981609) NOT BETWEEN (NULL) AND ('-1059898498'))) AND (CAST(5.36291481E8 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1847023700 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-650978243 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.09178087380542332) NOT BETWEEN (NULL) AND ('-1563914637')))AND(((NULL)>>(NULL)))))AND(TYPEOF(x'cddf'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1') BETWEEN (0x5f1b44f9) AND ('k<Coz*'))  WHEN x'' COLLATE NOCASE THEN ((0.589747994557233)IS NOT('r,OHv')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'19a2' COLLATE RTRIM)*((((NULL, 2108220970, 'ct', 0.40660585345417066, 0.5471176986901561)) BETWEEN ((0.39789407563903245, '|*bkU4', x'', 0.7703334108740224, NULL)) AND ((0.062068985871848614, NULL, '1951794329', NULL, -627086864))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'c4b975acd807')-(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1572496449 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '202719741 0 sz=129521254 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=774762734 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-888840069'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=324568097 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1337803077'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' sz=1594942002'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.958639808E9)>>('')))IS('1068904830' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0x672006b8 AS TEXT)) NOT BETWEEN (((x'')&(-1.422330514E9))) AND ((((x'5806', NULL, 0.6831324252023977)) NOT BETWEEN ((NULL, '1926499917', 0.41906541021526833)) AND ((0.41887974007974726, 1732661122, 0.31330410607016457))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1290156573'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' sz=665321691 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-597973609 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-196834943'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1883025322 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-785306281 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-261762658'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=1783077621 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=818227861 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) BETWEEN (((0.20821152172653024)OR('	p'))) AND (CAST(0.5722584759356639 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((',j[6A]Jk洋')) NOT BETWEEN ((0.15742989787421513)) AND ((NULL))))OR(x'a3ab')))AND(CAST(NULL AS NUMERIC))))OR(x'' COLLATE NOCASE)))OR(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=194412241'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-8.4458747E8) BETWEEN (((((NULL)OR(x'38fa')))OR(NULL))) AND (CAST('2' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1401653528 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' sz=-213960872 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('D+<a>澼i')) NOT BETWEEN ((((x'1268')<(0xffffffffb7a652ce)))) AND ((((NULL) NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0X10c927c6 COLLATE NOCASE)OR((+ (x'')))))AND((NULL IN (0.9419329215522418, NULL)))))OR((('&㇥2n7E֩	') NOT NULL))))OR(((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2126143537 sz=821125456 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'2e4d')<<(471506121)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2009208838')AND(0.9721385241586111)))&((NULL IN (-1648269919)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' sz=2043366225 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1996616284'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1404441517 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('0.1044999042849496')) NOT BETWEEN ((x'')) AND ((x'11b6'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (0.9931406798758138)) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ' sz=-306661853 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((x'6775') NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-336093926 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (TYPEOF(0.7404969300638393))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (1484473713)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('R5') ISNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME(0.29655876063804154, NULL, x'')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' sz=509982183 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-928758552 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-171706342'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1252632893 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=583785474 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN -9.5653669E7 ELSE 1695164610 END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=672536720 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' sz=-436532116 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))IS NOT(((('th')) NOT BETWEEN (('>\n')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('496882816') BETWEEN (x'') AND (1.927742664E9)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1106714555 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1976971296 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0Xffffffff9b14b2c3)) AND ((0.5667998026136942)))) NOT BETWEEN ((~ (0.7585627960468061))) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN (NULL COLLATE BINARY) AND (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=-1997920343'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1185095436 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '0 sz=263386907'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '1729342927 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('	濚') NOT BETWEEN (0.5891258262253626) AND (0.7362361978008204))  WHEN CASE WHEN NULL THEN NULL ELSE 682972841 END THEN (((-1829198426))<=(('-797618810'))) ELSE x'' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=885405224 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=686484660 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' sz=-649574170 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0xffffffffe5fb0c6c))!=(('1104848479'))))OR((x'6648' IN ()))))OR(0.3110950659570163)))AND((- (NULL)))))OR((((409116021)) BETWEEN (('-785306281')) AND (('-1193846654'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1230200301'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-134064989'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt69', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('*뗝') NOT BETWEEN ('v(') AND ('-1491823721')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=597603685 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-752724717 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=769864807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-9223372036854775808 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB((((0xffffffffe295fe94, -95653669, NULL))<=((x'd132', x'', -1874228235))), json_remove('1484829525', 'v.K')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN (NULL)))AND(CASE WHEN '-117132578' THEN -0.0 WHEN 0.12948568918986425 THEN '0.7055184278148533' WHEN NULL THEN '-1095821852' WHEN 528748632 THEN NULL WHEN NULL THEN -29888498 END)))OR('u[ZU厼N')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt69', '1626506055 sz=195757742'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' sz=1842662552 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' sz=79901644'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-1655369890 4 -1622797752 sz=1283947464 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)>=(x'6af1' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' sz=2004797556'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.7353943962873349)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1892033846 sz=110284882 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=685639694 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', '634183869 2 sz=-1127416532'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) BETWEEN (CAST('Vi' AS TEXT)) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.097309304E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN 0X136a8789 ELSE x'' END COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-367054409'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1653231390'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)IS((('FALSE') BETWEEN (x'') AND (x'09e4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', '1665644319 1877312887 sz=1595703324 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('-854634604') AND (NULL)))IS NOT(((x'') BETWEEN (0.9383930690400624) AND (-286093080)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 't0', ' sz=-1018647647 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (0.40165367828617327))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.05015313884552952)GLOB(NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ('&\r\n3' IN ()), ((((0X6ca4b216)OR(0xffffffffa3596efb)))AND(-1847334497))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'rt69', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=251871624 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ',yҺ,%䖷'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')AND(-1741052890)))OR('1218742459'))))>=((CASE WHEN x'c7f41d37' THEN 0.6182720897769042 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt69', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.28151944851438515)AND(-6.0709009E8)))AND(x'')))/((('&VjNAv?') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt69', 'sqlite_autoindex_vt1_segdir_1', ' sz=870486518 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((-2.45368789E8) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-590025447')AND(1121168369)))AND('')))AND(NULL COLLATE NOCASE)))OR(0x7dd9aa1b)); -- 0ms;
INSERT OR ABORT INTO t0(c1, c4) VALUES (x'', x''); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c4 TO c98; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR ABORT rt69 SET c2=0.9296068244887435; -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE OR REPLACE rt69 SET (c2)=(x'b5eb'); -- 0ms;
INSERT OR FAIL INTO rt69(c1, c0) VALUES (0X4171623a, NULL), (0.0765759248984077, '-1942788715'), (2.00165553E8, x'f6d6'); -- 2ms;
INSERT OR FAIL INTO rt69(c2) VALUES ('Xh'), ('*cT䔐M'), (0x480b334); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c3=-1968490419; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x''; -- 0ms;
REINDEX BINARY; -- 1ms;
INSERT OR IGNORE INTO rt69(c2, c0) VALUES (0.19532338592771403, -9223372036854775808); -- 0ms;
CREATE UNIQUE INDEX i99 ON t1(CAST(((((c1)OR(c6)))AND(c5)) AS TEXT) COLLATE NOCASE DESC,c1 COLLATE BINARY,(~ ((c98 IN (c0, c6)))) COLLATE NOCASE DESC,((((c5)AND(c98)))&((+ (c3)))) DESC,(~ (CAST(c0 AS REAL))) ASC,HEX(CASE WHEN c98 THEN c1 WHEN c0 THEN c2 WHEN c98 THEN '' END) COLLATE NOCASE DESC,((((NULL))!=((x''))) IN ()) COLLATE NOCASE DESC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=870486518'); -- 0ms;
ROLLBACK TRANSACTION; -- 11ms;
UPDATE OR IGNORE vt1 SET c0=0xffffffff98fcc2d0 WHERE (((CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<>(((((vt1.c0)) NOT BETWEEN (('')) AND ((vt1.c0)))))); -- 0ms;
UPDATE OR ABORT vt1 SET c0=x'', c0='-957732891', c0=0xffffffff94c21436; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0xffffffffca626dde); -- 14ms;
PRAGMA secure_delete; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0)=(0.7143674629412342) WHERE ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM; -- 0ms;
UPDATE rt0 SET (c1, c0)=('', 0.8291298793571128) WHERE ((NULLIF(DISTINCT rt0.c2, rt0.c1))||(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
REINDEX; -- 10ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (''); -- 10ms;
COMMIT; -- 0ms;
ANALYZE; -- 1ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA threads = 583491232797544940; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA threads; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1, c2) VALUES (0.07998370622767192, '', x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1, c3)=(NULL, 0Xffffffffa4771c8a, 'ⱉi嬚''8Z') WHERE ((rt0.c1)<(rt0.c0)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.8524980249232552); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 569207770);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 285648617); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '36516'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 914069743); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '65189'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1430314454); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (0.6508304190037227, x''), ('-996431114', ''), (0xfffffffff06af84a, '-136737356'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('509982183'); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
UPDATE vt1 SET (c0)=('\\') WHERE (~ (HEX(vt1.c0))); -- 0ms;
COMMIT TRANSACTION; -- 2ms;
INSERT OR IGNORE INTO rt0 VALUES ('0.8677175453975614', NULL, '', 1877312887); -- 0ms;
UPDATE rt0 SET c1=0X1ff72899 WHERE ((rt0.c1 COLLATE NOCASE) IS FALSE); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'') WHERE (NOT ((((rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c1))>((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c3))))); -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (NULL), ('-2019926214'), (0.42555793802646014); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c2) VALUES ('1991781600', 0.7528285838160008, x'd199'), (x'097b', NULL, x'd291'), (x'1486', '*~d?audo', 1.802984681E9); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-833373371), (NULL), (0.7856780774516412); -- 0ms;
UPDATE vt1 SET c0=NULL WHERE (CAST(vt1.c0 AS NUMERIC) IN (((vt1.c0) NOT NULL))); -- 2ms;
PRAGMA cache_spill = true; -- 1ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''), (0.8148321144205988), (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'b94b') WHERE (((vt1.c0)>=(vt1.c0)) IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c2, c0)=('-f''邟', ''')', 2.00165553E8) WHERE ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c0) VALUES (NULL, 0.7093705977041505, -7.27276855E8); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=NULL; -- 21ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOTNULL)) ORDER BY (rt0.c3 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOTNULL)) ORDER BY (rt0.c3 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOTNULL)) ORDER BY (rt0.c3 IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((load_extension(0.25369758127445396)) NOT BETWEEN ((((rt0.c2, 1578590856, rt0.c2))<>((rt0.c3, rt0.c3, rt0.c0)))) AND (((vt1.c0)GLOB(rt0.c1)))) WHERE (rt0.c2) ORDER BY CASE rt0.c1  WHEN (rt0.c0 IN ()) THEN json_array_length(vt1.c0, 0.9734393425120852) WHEN 0X119215a0 THEN load_extension(rt0.c3, rt0.c0) WHEN ((rt0.c2)&(rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE (+ (rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((load_extension(0.25369758127445396)) NOT BETWEEN ((((rt0.c2, 1578590856, rt0.c2))<>((rt0.c3, rt0.c3, rt0.c0)))) AND (((vt1.c0)GLOB(rt0.c1)))) ORDER BY CASE rt0.c1  WHEN (rt0.c0 IN ()) THEN json_array_length(vt1.c0, 0.9734393425120852) WHEN 0x119215a0 THEN load_extension(rt0.c3, rt0.c0) WHEN ((rt0.c2)&(rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE (+ (rt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((load_extension(0.25369758127445396)) NOT BETWEEN ((((rt0.c2, 1578590856, rt0.c2))<>((rt0.c3, rt0.c3, rt0.c0)))) AND (((vt1.c0)GLOB(rt0.c1)))) WHERE (rt0.c2) ORDER BY CASE rt0.c1  WHEN (rt0.c0 IN ()) THEN json_array_length(vt1.c0, 0.9734393425120852) WHEN 0X119215a0 THEN load_extension(rt0.c3, rt0.c0) WHEN ((rt0.c2)&(rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE (+ (rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((load_extension(0.25369758127445396)) NOT BETWEEN ((((rt0.c2, 1578590856, rt0.c2))<>((rt0.c3, rt0.c3, rt0.c0)))) AND (((vt1.c0)GLOB(rt0.c1)))) ORDER BY CASE rt0.c1  WHEN (rt0.c0 IN ()) THEN json_array_length(vt1.c0, 0.9734393425120852) WHEN 0x119215a0 THEN load_extension(rt0.c3, rt0.c0) WHEN ((rt0.c2)&(rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE (+ (rt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))LIKE(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))LIKE(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))LIKE(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))LIKE(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))LIKE(rt0.c2)));
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))AND(NULL)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))<(1183265253 COLLATE BINARY))) ORDER BY CAST((vt1.c0 IN ()) AS REAL), 'Svr8IJ' ASC, (((vt1.c0 COLLATE RTRIM, ((((((((vt1.c0)AND(6.82972841E8)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<(((vt1.c0 IN ()), vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), (NOT ('-0.0')), IFNULL(vt1.c0, NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(vt1.c0)))<(1183265253 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS REAL), 'Svr8IJ' ASC, (((vt1.c0 COLLATE RTRIM, ((((((((vt1.c0)AND(6.82972841E8)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<(((vt1.c0 IN ()), vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), (NOT ('-0.0')), IFNULL(vt1.c0, NULL)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))<(1183265253 COLLATE BINARY))) ORDER BY CAST((vt1.c0 IN ()) AS REAL), 'Svr8IJ' ASC, (((vt1.c0 COLLATE RTRIM, ((((((((vt1.c0)AND(6.82972841E8)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<(((vt1.c0 IN ()), vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), (NOT ('-0.0')), IFNULL(vt1.c0, NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(vt1.c0)))<(1183265253 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS REAL), 'Svr8IJ' ASC, (((vt1.c0 COLLATE RTRIM, ((((((((vt1.c0)AND(6.82972841E8)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<(((vt1.c0 IN ()), vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), (NOT ('-0.0')), IFNULL(vt1.c0, NULL)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))<(1183265253 COLLATE BINARY))) ORDER BY CAST((vt1.c0 IN ()) AS REAL), 'Svr8IJ' ASC, (((vt1.c0 COLLATE RTRIM, ((((((((vt1.c0)AND(6.82972841E8)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<(((vt1.c0 IN ()), vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), (NOT ('-0.0')), IFNULL(vt1.c0, NULL)))) DESC;
SELECT ALL * FROM rt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ('');
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((rt0.c2 IN (rt0.c2, rt0.c0)) AS INTEGER)) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN HEX(rt0.c2) THEN ((0.5194707954381085) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c2, rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN HEX(rt0.c2) THEN ((0.5194707954381085) NOTNULL) END DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((rt0.c2 IN (rt0.c2, rt0.c0)) AS INTEGER)) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN HEX(rt0.c2) THEN ((0.5194707954381085) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c2, rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN HEX(rt0.c2) THEN ((0.5194707954381085) NOTNULL) END DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((rt0.c2 IN (rt0.c2, rt0.c0)) AS INTEGER)) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN HEX(rt0.c2) THEN ((0.5194707954381085) NOTNULL) END DESC;
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)<(vt1.c0))  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<(vt1.c0))  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)<(vt1.c0))  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<(vt1.c0))  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)<(vt1.c0))  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((0.5119959050013365)|(((vt1.c0) IS TRUE)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))-(ABS(vt1.c0))) DESC  NULLS FIRST, CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((((0.5119959050013365)|(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))-(ABS(vt1.c0))) DESC  NULLS FIRST, CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END END);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((0.5119959050013365)|(((vt1.c0) IS TRUE)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))-(ABS(vt1.c0))) DESC  NULLS FIRST, CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((((0.5119959050013365)|(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))-(ABS(vt1.c0))) DESC  NULLS FIRST, CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END END);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((0.5119959050013365)|(((vt1.c0) IS TRUE)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))-(ABS(vt1.c0))) DESC  NULLS FIRST, CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END END;
SELECT COUNT(*) FROM rt0 WHERE (((CASE '-YlD跈nE'  WHEN rt0.c2 THEN rt0.c2 END)GLOB((('[Y]') NOT NULL)))) ORDER BY (813319365 IN ((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-YlD跈nE'  WHEN rt0.c2 THEN rt0.c2 END)GLOB((('[Y]') NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (813319365 IN ((NOT (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE '-YlD跈nE'  WHEN rt0.c2 THEN rt0.c2 END)GLOB((('[Y]') NOT NULL)))) ORDER BY (813319365 IN ((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-YlD跈nE'  WHEN rt0.c2 THEN rt0.c2 END)GLOB((('[Y]') NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (813319365 IN ((NOT (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE '-YlD跈nE'  WHEN rt0.c2 THEN rt0.c2 END)GLOB((('[Y]') NOT NULL)))) ORDER BY (813319365 IN ((NOT (rt0.c2))));
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (~ (rt0.c0)) COLLATE RTRIM WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN (- (0.3595332179816817)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN (- (0.3595332179816817)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (~ (rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (~ (rt0.c0)) COLLATE RTRIM WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN (- (0.3595332179816817)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN (- (0.3595332179816817)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (~ (rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (~ (rt0.c0)) COLLATE RTRIM WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN (- (0.3595332179816817)) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN ())))>=(((~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ())))>=(((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN ())))>=(((~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ())))>=(((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN ())))>=(((~ (rt0.c3))))));
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR('-759787623')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR('-759787623')) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR('-759787623')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR('-759787623')) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR('-759787623')) AS REAL));
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((vt1.c0)||(rt0.c1)) AS INTEGER)) ORDER BY HEX((((rt0.c0))>=((rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)||(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY HEX((((rt0.c0))>=((rt0.c0)))) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((vt1.c0)||(rt0.c1)) AS INTEGER)) ORDER BY HEX((((rt0.c0))>=((rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)||(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY HEX((((rt0.c0))>=((rt0.c0)))) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((vt1.c0)||(rt0.c1)) AS INTEGER)) ORDER BY HEX((((rt0.c0))>=((rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE BINARY WHERE ((((~ (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE BINARY WHERE ((((~ (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE BINARY WHERE ((((~ (vt1.c0))) IS FALSE));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c1)))) AND (CAST(rt0.c3 AS NUMERIC))) WHERE (((((rt0.c2)|(rt0.c3))) BETWEEN ((+ (rt0.c0))) AND (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c3))) BETWEEN ((+ (rt0.c0))) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c1)))) AND (CAST(rt0.c3 AS NUMERIC))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c1)))) AND (CAST(rt0.c3 AS NUMERIC))) WHERE (((((rt0.c2)|(rt0.c3))) BETWEEN ((+ (rt0.c0))) AND (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c3))) BETWEEN ((+ (rt0.c0))) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c1)))) AND (CAST(rt0.c3 AS NUMERIC))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c1)))) AND (CAST(rt0.c3 AS NUMERIC))) WHERE (((((rt0.c2)|(rt0.c3))) BETWEEN ((+ (rt0.c0))) AND (vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 WHERE (((LIKE(vt1.c0, vt1.c0, 'q')) NOT BETWEEN (x'465d16da') AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY)LIKE(((((x'')OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c0, vt1.c0, 'q')) NOT BETWEEN (x'465d16da') AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)LIKE(((((x'')OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((LIKE(vt1.c0, vt1.c0, 'q')) NOT BETWEEN (x'465d16da') AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY)LIKE(((((x'')OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c0, vt1.c0, 'q')) NOT BETWEEN (x'465d16da') AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)LIKE(((((x'')OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((LIKE(vt1.c0, vt1.c0, 'q')) NOT BETWEEN (x'465d16da') AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY)LIKE(((((x'')OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN (rt0.c2 IN (vt1.c0, vt1.c0)) ELSE ((rt0.c3) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN (rt0.c2 IN (vt1.c0, vt1.c0)) ELSE ((rt0.c3) NOT NULL) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN (rt0.c2 IN (vt1.c0, vt1.c0)) ELSE ((rt0.c3) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN (rt0.c2 IN (vt1.c0, vt1.c0)) ELSE ((rt0.c3) NOT NULL) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) THEN (rt0.c2 IN (vt1.c0, vt1.c0)) ELSE ((rt0.c3) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (('e!') ISNULL) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c2 END) ORDER BY (~ (((vt1.c0)<=(rt0.c3)))) ASC, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('e!') ISNULL) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c2 END) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED ORDER BY (~ (((vt1.c0)<=(rt0.c3)))) ASC, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (('e!') ISNULL) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c2 END) ORDER BY (~ (((vt1.c0)<=(rt0.c3)))) ASC, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('e!') ISNULL) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c2 END) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED ORDER BY (~ (((vt1.c0)<=(rt0.c3)))) ASC, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (('e!') ISNULL) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c2 END) ORDER BY (~ (((vt1.c0)<=(rt0.c3)))) ASC, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL)) ORDER BY LIKELY(DISTINCT (vt1.c0 IN ()))  NULLS LAST, CAST((('	')-(vt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(DISTINCT (vt1.c0 IN ()))  NULLS LAST, CAST((('	')-(vt1.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL)) ORDER BY LIKELY(DISTINCT (vt1.c0 IN ()))  NULLS LAST, CAST((('	')-(vt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(DISTINCT (vt1.c0 IN ()))  NULLS LAST, CAST((('	')-(vt1.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL)) ORDER BY LIKELY(DISTINCT (vt1.c0 IN ()))  NULLS LAST, CAST((('	')-(vt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1, rt0 WHERE (0.20654661939541596) ORDER BY ((rt0.c0) IS FALSE) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))), ((((rt0.c3) ISNULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '575585652' END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.20654661939541596) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0) IS FALSE) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))), ((((rt0.c3) ISNULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '575585652' END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (0.20654661939541596) ORDER BY ((rt0.c0) IS FALSE) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))), ((((rt0.c3) ISNULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '575585652' END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.20654661939541596) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0) IS FALSE) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))), ((((rt0.c3) ISNULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '575585652' END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (0.20654661939541596) ORDER BY ((rt0.c0) IS FALSE) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))), ((((rt0.c3) ISNULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '575585652' END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c2))<>((rt0.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))!=((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c2))<>((rt0.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))!=((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c2))<>((rt0.c3))) AS REAL));
SELECT * FROM vt1, rt0 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) AND ((+ (rt0.c0))))) ORDER BY ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)) COLLATE NOCASE DESC, ((((rt0.c0 COLLATE RTRIM)OR((rt0.c3 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)) COLLATE NOCASE DESC, ((((rt0.c0 COLLATE RTRIM)OR((rt0.c3 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM vt1, rt0 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) AND ((+ (rt0.c0))))) ORDER BY ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)) COLLATE NOCASE DESC, ((((rt0.c0 COLLATE RTRIM)OR((rt0.c3 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)) COLLATE NOCASE DESC, ((((rt0.c0 COLLATE RTRIM)OR((rt0.c3 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM vt1, rt0 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) AND ((+ (rt0.c0))))) ORDER BY ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)) COLLATE NOCASE DESC, ((((rt0.c0 COLLATE RTRIM)OR((rt0.c3 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))));
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) ISNULL));
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) ORDER BY (((rt0.c1) NOTNULL) IN (((rt0.c3)<(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOTNULL) IN (((rt0.c3)<(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) ORDER BY (((rt0.c1) NOTNULL) IN (((rt0.c3)<(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOTNULL) IN (((rt0.c3)<(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) ORDER BY (((rt0.c1) NOTNULL) IN (((rt0.c3)<(rt0.c2)))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((~ (vt1.c0)) AS BLOB)) ORDER BY ((rt0.c1) IS TRUE), (+ ((~ (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c1) IS TRUE), (+ ((~ (NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((~ (vt1.c0)) AS BLOB)) ORDER BY ((rt0.c1) IS TRUE), (+ ((~ (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c1) IS TRUE), (+ ((~ (NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((~ (vt1.c0)) AS BLOB)) ORDER BY ((rt0.c1) IS TRUE), (+ ((~ (NULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON '-1307191794' WHERE (NULL) ORDER BY ((vt1.c0)-(NULL COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON '-1307191794' ORDER BY ((vt1.c0)-(NULL COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON '-1307191794' WHERE (NULL) ORDER BY ((vt1.c0)-(NULL COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON '-1307191794' ORDER BY ((vt1.c0)-(NULL COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON '-1307191794' WHERE (NULL) ORDER BY ((vt1.c0)-(NULL COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY rt0.c1 DESC, (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((- (rt0.c0)), ((rt0.c3) IS FALSE), LOWER(rt0.c0))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), (rt0.c1 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC  NULLS FIRST, ((LOWER(rt0.c0))||(CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1 DESC, (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((- (rt0.c0)), ((rt0.c3) IS FALSE), LOWER(rt0.c0))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), (rt0.c1 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC  NULLS FIRST, ((LOWER(rt0.c0))||(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY rt0.c1 DESC, (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((- (rt0.c0)), ((rt0.c3) IS FALSE), LOWER(rt0.c0))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), (rt0.c1 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC  NULLS FIRST, ((LOWER(rt0.c0))||(CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1 DESC, (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((- (rt0.c0)), ((rt0.c3) IS FALSE), LOWER(rt0.c0))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), (rt0.c1 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC  NULLS FIRST, ((LOWER(rt0.c0))||(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY rt0.c1 DESC, (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((- (rt0.c0)), ((rt0.c3) IS FALSE), LOWER(rt0.c0))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), (rt0.c1 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC  NULLS FIRST, ((LOWER(rt0.c0))||(CAST(rt0.c1 AS NUMERIC)));
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE -446579886 END)OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))AND(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE -446579886 END)OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))AND(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE -446579886 END)OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))AND(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE -446579886 END)OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))AND(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE -446579886 END)OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))AND(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS BLOB)))>((rt0.c0))) WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('fw㨨?vMk'))))OR((NOT (rt0.c1)))))AND(rt0.c3))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c0)))LIKE((rt0.c3 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('fw㨨?vMk'))))OR((NOT (rt0.c1)))))AND(rt0.c3))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS BLOB)))>((rt0.c0))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c0)))LIKE((rt0.c3 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS BLOB)))>((rt0.c0))) WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('fw㨨?vMk'))))OR((NOT (rt0.c1)))))AND(rt0.c3))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c0)))LIKE((rt0.c3 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('fw㨨?vMk'))))OR((NOT (rt0.c1)))))AND(rt0.c3))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS BLOB)))>((rt0.c0))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c0)))LIKE((rt0.c3 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS BLOB)))>((rt0.c0))) WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('fw㨨?vMk'))))OR((NOT (rt0.c1)))))AND(rt0.c3))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c0)))LIKE((rt0.c3 IN ()))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0, vt1 WHERE (LOWER(DISTINCT rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c3)<(rt0.c2)))IS(CAST(rt0.c0 AS REAL))) ASC, CAST((('-1')>(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3)<(rt0.c2)))IS(CAST(rt0.c0 AS REAL))) ASC, CAST((('-1')>(vt1.c0)) AS TEXT));
SELECT * FROM rt0, vt1 WHERE (LOWER(DISTINCT rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c3)<(rt0.c2)))IS(CAST(rt0.c0 AS REAL))) ASC, CAST((('-1')>(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3)<(rt0.c2)))IS(CAST(rt0.c0 AS REAL))) ASC, CAST((('-1')>(vt1.c0)) AS TEXT));
SELECT * FROM rt0, vt1 WHERE (LOWER(DISTINCT rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c3)<(rt0.c2)))IS(CAST(rt0.c0 AS REAL))) ASC, CAST((('-1')>(vt1.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)+(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)+(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)+(rt0.c3)))));
SELECT COUNT(*) FROM vt1 WHERE (UPPER(((vt1.c0)IS(vt1.c0)))) ORDER BY json_extract(vt1.c0 COLLATE RTRIM, (+ (vt1.c0)), (vt1.c0 IN ()), CAST('5<' AS BLOB));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt1.c0)IS(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY json_extract(vt1.c0 COLLATE RTRIM, (+ (vt1.c0)), (vt1.c0 IN ()), CAST('5<' AS BLOB)));
SELECT COUNT(*) FROM vt1 WHERE (UPPER(((vt1.c0)IS(vt1.c0)))) ORDER BY json_extract(vt1.c0 COLLATE RTRIM, (+ (vt1.c0)), (vt1.c0 IN ()), CAST('5<' AS BLOB));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt1.c0)IS(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY json_extract(vt1.c0 COLLATE RTRIM, (+ (vt1.c0)), (vt1.c0 IN ()), CAST('5<' AS BLOB)));
SELECT * FROM rt0, vt1 WHERE (((((NULL)/(0.38415590277679)))>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((NULL)/(0.38415590277679)))>(rt0.c3))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((NULL)/(0.38415590277679)))>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((NULL)/(0.38415590277679)))>(rt0.c3))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((NULL)/(0.38415590277679)))>(rt0.c3)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0Xfffffffffecf0f7e) ORDER BY CASE UNLIKELY(DISTINCT rt0.c1)  WHEN rt0.c2 THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN (rt0.c0, rt0.c1)) THEN (- (rt0.c3)) WHEN rt0.c0 THEN ((rt0.c0)||(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((0xfffffffffecf0f7e) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE UNLIKELY(DISTINCT rt0.c1)  WHEN rt0.c2 THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN (rt0.c0, rt0.c1)) THEN (- (rt0.c3)) WHEN rt0.c0 THEN ((rt0.c0)||(rt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0Xfffffffffecf0f7e) ORDER BY CASE UNLIKELY(DISTINCT rt0.c1)  WHEN rt0.c2 THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN (rt0.c0, rt0.c1)) THEN (- (rt0.c3)) WHEN rt0.c0 THEN ((rt0.c0)||(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((0xfffffffffecf0f7e) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE UNLIKELY(DISTINCT rt0.c1)  WHEN rt0.c2 THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN (rt0.c0, rt0.c1)) THEN (- (rt0.c3)) WHEN rt0.c0 THEN ((rt0.c0)||(rt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0Xfffffffffecf0f7e) ORDER BY CASE UNLIKELY(DISTINCT rt0.c1)  WHEN rt0.c2 THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN (rt0.c0, rt0.c1)) THEN (- (rt0.c3)) WHEN rt0.c0 THEN ((rt0.c0)||(rt0.c0)) END ASC;
SELECT * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))<(rt0.c1 COLLATE BINARY))) ORDER BY (((rt0.c2 IN (rt0.c0, rt0.c0)))||('^븻.')) DESC, (((((rt0.c0))>=((rt0.c0))))GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<(rt0.c1)))<(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0, rt0.c0)))||('^븻.')) DESC, (((((rt0.c0))>=((rt0.c0))))GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))<(rt0.c1 COLLATE BINARY))) ORDER BY (((rt0.c2 IN (rt0.c0, rt0.c0)))||('^븻.')) DESC, (((((rt0.c0))>=((rt0.c0))))GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<(rt0.c1)))<(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0, rt0.c0)))||('^븻.')) DESC, (((((rt0.c0))>=((rt0.c0))))GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))<(rt0.c1 COLLATE BINARY))) ORDER BY (((rt0.c2 IN (rt0.c0, rt0.c0)))||('^븻.')) DESC, (((((rt0.c0))>=((rt0.c0))))GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c1)IS(rt0.c2)))AND(rt0.c1)))OR(((vt1.c0) IS FALSE))))AND((- (rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) WHERE ((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((~ (rt0.c1)), CAST(rt0.c2 AS REAL), (rt0.c0 IN ()), ((vt1.c0)/('Rx')), ((((((((((((rt0.c0)OR('698102322')))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))) AND (((((rt0.c2))<((rt0.c3))), (+ (rt0.c2)), 0.3738867337681612, (+ (vt1.c0)), vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((~ (rt0.c1)), CAST(rt0.c2 AS REAL), (rt0.c0 IN ()), ((vt1.c0)/('Rx')), ((((((((((((rt0.c0)OR('698102322')))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))) AND (((((rt0.c2))<((rt0.c3))), (+ (rt0.c2)), 0.3738867337681612, (+ (vt1.c0)), vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c1)IS(rt0.c2)))AND(rt0.c1)))OR(((vt1.c0) IS FALSE))))AND((- (rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c1)IS(rt0.c2)))AND(rt0.c1)))OR(((vt1.c0) IS FALSE))))AND((- (rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) WHERE ((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((~ (rt0.c1)), CAST(rt0.c2 AS REAL), (rt0.c0 IN ()), ((vt1.c0)/('Rx')), ((((((((((((rt0.c0)OR('698102322')))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))) AND (((((rt0.c2))<((rt0.c3))), (+ (rt0.c2)), 0.3738867337681612, (+ (vt1.c0)), vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((~ (rt0.c1)), CAST(rt0.c2 AS REAL), (rt0.c0 IN ()), ((vt1.c0)/('Rx')), ((((((((((((rt0.c0)OR('698102322')))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))) AND (((((rt0.c2))<((rt0.c3))), (+ (rt0.c2)), 0.3738867337681612, (+ (vt1.c0)), vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c1)IS(rt0.c2)))AND(rt0.c1)))OR(((vt1.c0) IS FALSE))))AND((- (rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c1)IS(rt0.c2)))AND(rt0.c1)))OR(((vt1.c0) IS FALSE))))AND((- (rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) WHERE ((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((~ (rt0.c1)), CAST(rt0.c2 AS REAL), (rt0.c0 IN ()), ((vt1.c0)/('Rx')), ((((((((((((rt0.c0)OR('698102322')))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))) AND (((((rt0.c2))<((rt0.c3))), (+ (rt0.c2)), 0.3738867337681612, (+ (vt1.c0)), vt1.c0 COLLATE NOCASE))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)||(vt1.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE (((((vt1.c0)/(rt0.c0)))IS(''))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(rt0.c0)))IS(''))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)||(vt1.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)||(vt1.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE (((((vt1.c0)/(rt0.c0)))IS(''))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(rt0.c0)))IS(''))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)||(vt1.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)||(vt1.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE (((((vt1.c0)/(rt0.c0)))IS(''))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN TRIM(vt1.c0, vt1.c0) THEN (~ (0.5513784838535577)) ELSE ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0)) END) ORDER BY ((NOT (rt0.c2)) IN (((((((((((((rt0.c2)OR(x'13c0faa1')))AND(rt0.c3)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.9158654121326132), (((rt0.c3)) BETWEEN (((rt0.c1 IN ()))) AND ((TYPEOF(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN TRIM(vt1.c0, vt1.c0) THEN (~ (0.5513784838535577)) ELSE ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NOT (rt0.c2)) IN (((((((((((((rt0.c2)OR(x'13c0faa1')))AND(rt0.c3)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.9158654121326132), (((rt0.c3)) BETWEEN (((rt0.c1 IN ()))) AND ((TYPEOF(rt0.c3)))));
SELECT ALL * FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN TRIM(vt1.c0, vt1.c0) THEN (~ (0.5513784838535577)) ELSE ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0)) END) ORDER BY ((NOT (rt0.c2)) IN (((((((((((((rt0.c2)OR(x'13c0faa1')))AND(rt0.c3)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.9158654121326132), (((rt0.c3)) BETWEEN (((rt0.c1 IN ()))) AND ((TYPEOF(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN TRIM(vt1.c0, vt1.c0) THEN (~ (0.5513784838535577)) ELSE ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NOT (rt0.c2)) IN (((((((((((((rt0.c2)OR(x'13c0faa1')))AND(rt0.c3)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.9158654121326132), (((rt0.c3)) BETWEEN (((rt0.c1 IN ()))) AND ((TYPEOF(rt0.c3)))));
SELECT ALL * FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN TRIM(vt1.c0, vt1.c0) THEN (~ (0.5513784838535577)) ELSE ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0)) END) ORDER BY ((NOT (rt0.c2)) IN (((((((((((((rt0.c2)OR(x'13c0faa1')))AND(rt0.c3)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.9158654121326132), (((rt0.c3)) BETWEEN (((rt0.c1 IN ()))) AND ((TYPEOF(rt0.c3))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON IFNULL(((rt0.c1) NOTNULL), x'' COLLATE BINARY) WHERE ((((rt0.c3)>(rt0.c0)) IN ())) ORDER BY ((((rt0.c0)>(rt0.c2))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(rt0.c2))))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((0xffffffff9f1a17f0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON IFNULL(((rt0.c1) NOTNULL), x'' COLLATE BINARY) ORDER BY ((((rt0.c0)>(rt0.c2))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(rt0.c2))))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((0Xffffffff9f1a17f0))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON IFNULL(((rt0.c1) NOTNULL), x'' COLLATE BINARY) WHERE ((((rt0.c3)>(rt0.c0)) IN ())) ORDER BY ((((rt0.c0)>(rt0.c2))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(rt0.c2))))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((0xffffffff9f1a17f0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON IFNULL(((rt0.c1) NOTNULL), x'' COLLATE BINARY) ORDER BY ((((rt0.c0)>(rt0.c2))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(rt0.c2))))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((0Xffffffff9f1a17f0))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON IFNULL(((rt0.c1) NOTNULL), x'' COLLATE BINARY) WHERE ((((rt0.c3)>(rt0.c0)) IN ())) ORDER BY ((((rt0.c0)>(rt0.c2))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(rt0.c2))))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((0xffffffff9f1a17f0)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((((rt0.c2)&(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((((rt0.c2)&(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((((rt0.c2)&(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((((rt0.c2)&(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((((rt0.c2)&(rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(rt0.c0) IN ())) ORDER BY (~ (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((CASE WHEN rt0.c3 THEN x'' ELSE '-29888498' END)GLOB((rt0.c1 IN (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((UPPER(rt0.c0) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((CASE WHEN rt0.c3 THEN x'' ELSE '-29888498' END)GLOB((rt0.c1 IN (rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(rt0.c0) IN ())) ORDER BY (~ (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((CASE WHEN rt0.c3 THEN x'' ELSE '-29888498' END)GLOB((rt0.c1 IN (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((UPPER(rt0.c0) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((CASE WHEN rt0.c3 THEN x'' ELSE '-29888498' END)GLOB((rt0.c1 IN (rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(rt0.c0) IN ())) ORDER BY (~ (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((CASE WHEN rt0.c3 THEN x'' ELSE '-29888498' END)GLOB((rt0.c1 IN (rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) ORDER BY ((NULL)&(((rt0.c1) BETWEEN (0.7218680314311988) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NULL)&(((rt0.c1) BETWEEN (0.7218680314311988) AND (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) ORDER BY ((NULL)&(((rt0.c1) BETWEEN (0.7218680314311988) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NULL)&(((rt0.c1) BETWEEN (0.7218680314311988) AND (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) ORDER BY ((NULL)&(((rt0.c1) BETWEEN (0.7218680314311988) AND (rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) WHERE (((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY (RTRIM(rt0.c1) IN ()), ((NULL)<>(5.36291481E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ORDER BY (RTRIM(rt0.c1) IN ()), ((NULL)<>(5.36291481E8))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) WHERE (((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY (RTRIM(rt0.c1) IN ()), ((NULL)<>(5.36291481E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ORDER BY (RTRIM(rt0.c1) IN ()), ((NULL)<>(5.36291481E8))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) WHERE (((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY (RTRIM(rt0.c1) IN ()), ((NULL)<>(5.36291481E8))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, '')) AND ((vt1.c0, vt1.c0, vt1.c0))))||((vt1.c0 IN ()))), CAST((((vt1.c0))>=((1262504668))) AS TEXT), x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, '')) AND ((vt1.c0, vt1.c0, vt1.c0))))||((vt1.c0 IN ()))), CAST((((vt1.c0))>=((1262504668))) AS TEXT), x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, '')) AND ((vt1.c0, vt1.c0, vt1.c0))))||((vt1.c0 IN ()))), CAST((((vt1.c0))>=((1262504668))) AS TEXT), x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, '')) AND ((vt1.c0, vt1.c0, vt1.c0))))||((vt1.c0 IN ()))), CAST((((vt1.c0))>=((1262504668))) AS TEXT), x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, '')) AND ((vt1.c0, vt1.c0, vt1.c0))))||((vt1.c0 IN ()))), CAST((((vt1.c0))>=((1262504668))) AS TEXT), x'' DESC  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (+ (rt0.c0)) WHERE (((((rt0.c2) IS TRUE))||((((rt0.c2))>=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))||((((rt0.c2))>=((rt0.c3)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (+ (rt0.c0)));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (+ (rt0.c0)) WHERE (((((rt0.c2) IS TRUE))||((((rt0.c2))>=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))||((((rt0.c2))>=((rt0.c3)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (+ (rt0.c0)));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (+ (rt0.c0)) WHERE (((((rt0.c2) IS TRUE))||((((rt0.c2))>=((rt0.c3))))));
SELECT ALL * FROM rt0, vt1 WHERE ((CAST(rt0.c2 AS TEXT) IN ((vt1.c0 IN ())))) ORDER BY ((((rt0.c2)==(rt0.c2))) BETWEEN (LOWER(DISTINCT rt0.c2)) AND ('O D꼵oGC' COLLATE BINARY)) DESC, NULL DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS TEXT) IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)=(rt0.c2))) BETWEEN (LOWER(DISTINCT rt0.c2)) AND ('O D꼵oGC' COLLATE BINARY)) DESC, NULL DESC);
SELECT ALL * FROM rt0, vt1 WHERE ((CAST(rt0.c2 AS TEXT) IN ((vt1.c0 IN ())))) ORDER BY ((((rt0.c2)==(rt0.c2))) BETWEEN (LOWER(DISTINCT rt0.c2)) AND ('O D꼵oGC' COLLATE BINARY)) DESC, NULL DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS TEXT) IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)=(rt0.c2))) BETWEEN (LOWER(DISTINCT rt0.c2)) AND ('O D꼵oGC' COLLATE BINARY)) DESC, NULL DESC);
SELECT ALL * FROM rt0, vt1 WHERE ((CAST(rt0.c2 AS TEXT) IN ((vt1.c0 IN ())))) ORDER BY ((((rt0.c2)==(rt0.c2))) BETWEEN (LOWER(DISTINCT rt0.c2)) AND ('O D꼵oGC' COLLATE BINARY)) DESC, NULL DESC;
SELECT * FROM rt0 WHERE ('-1557478515');
SELECT SUM(count) FROM (SELECT (('-1557478515') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1557478515');
SELECT SUM(count) FROM (SELECT (('-1557478515') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1557478515');
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((((vt1.c0))>=((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (LTRIM(rt0.c2)) AND (rt0.c1 COLLATE BINARY))) ORDER BY UPPER(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) DESC, rt0.c1 ASC, (((rt0.c2 IN ())) BETWEEN (((rt0.c2)GLOB('-1353174813'))) AND (((rt0.c2)<>(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (LTRIM(rt0.c2)) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY UPPER(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) DESC, rt0.c1 ASC, (((rt0.c2 IN ())) BETWEEN (((rt0.c2)GLOB('-1353174813'))) AND (((rt0.c2)!=(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (LTRIM(rt0.c2)) AND (rt0.c1 COLLATE BINARY))) ORDER BY UPPER(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) DESC, rt0.c1 ASC, (((rt0.c2 IN ())) BETWEEN (((rt0.c2)GLOB('-1353174813'))) AND (((rt0.c2)<>(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (LTRIM(rt0.c2)) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY UPPER(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) DESC, rt0.c1 ASC, (((rt0.c2 IN ())) BETWEEN (((rt0.c2)GLOB('-1353174813'))) AND (((rt0.c2)!=(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (LTRIM(rt0.c2)) AND (rt0.c1 COLLATE BINARY))) ORDER BY UPPER(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) DESC, rt0.c1 ASC, (((rt0.c2 IN ())) BETWEEN (((rt0.c2)GLOB('-1353174813'))) AND (((rt0.c2)<>(rt0.c0)))) DESC;
SELECT * FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (rt0.c1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM rt0 WHERE (((((rt0.c1)!=(rt0.c1)))AND((NOT (rt0.c3))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))==(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<>(rt0.c1)))AND((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))==(rt0.c2)) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c1)!=(rt0.c1)))AND((NOT (rt0.c3))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))==(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<>(rt0.c1)))AND((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))==(rt0.c2)) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c1)!=(rt0.c1)))AND((NOT (rt0.c3))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))==(rt0.c2)) ASC;
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c2)) AS TEXT));
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((((- (rt0.c2)))OR(UPPER(rt0.c3))))OR(((rt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c2)))OR(UPPER(rt0.c3))))OR(((rt0.c1) NOTNULL))) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((((- (rt0.c2)))OR(UPPER(rt0.c3))))OR(((rt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c2)))OR(UPPER(rt0.c3))))OR(((rt0.c1) NOTNULL))) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((((- (rt0.c2)))OR(UPPER(rt0.c3))))OR(((rt0.c1) NOTNULL))) DESC;
SELECT * FROM vt1, rt0 WHERE ('-1153619078');
SELECT SUM(count) FROM (SELECT ALL (('-1153619078') IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ('-1153619078');
SELECT SUM(count) FROM (SELECT ALL (('-1153619078') IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ('-1153619078');
SELECT * FROM rt0, vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 0.974322841383561 THEN rt0.c1 END) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((rt0.c3) ISNULL))) WHERE ((NOT ((rt0.c3 IN (rt0.c1, NULL))))) ORDER BY ((((((((((0.39298029919139665)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(vt1.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, LOWER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN (rt0.c1, NULL))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 0.974322841383561 THEN rt0.c1 END) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((rt0.c3) ISNULL))) ORDER BY ((((((((((0.39298029919139665)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(vt1.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, LOWER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 0.974322841383561 THEN rt0.c1 END) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((rt0.c3) ISNULL))) WHERE ((NOT ((rt0.c3 IN (rt0.c1, NULL))))) ORDER BY ((((((((((0.39298029919139665)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(vt1.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, LOWER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN (rt0.c1, NULL))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 0.974322841383561 THEN rt0.c1 END) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((rt0.c3) ISNULL))) ORDER BY ((((((((((0.39298029919139665)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(vt1.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, LOWER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 0.974322841383561 THEN rt0.c1 END) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((rt0.c3) ISNULL))) WHERE ((NOT ((rt0.c3 IN (rt0.c1, NULL))))) ORDER BY ((((((((((0.39298029919139665)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(vt1.c0))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, LOWER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END);
SELECT * FROM rt0 WHERE (((((rt0.c0)<=(rt0.c3)))+(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c3)))+(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0)<=(rt0.c3)))+(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c3)))+(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0)<=(rt0.c3)))+(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN ((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))<(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))<(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))<(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))<(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))<(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)AND(rt0.c1)))))AND(LIKELY(rt0.c1)))) ORDER BY (((rt0.c1, rt0.c3, rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((((('JLJ>'))>=((vt1.c0))), ((vt1.c0) NOT NULL), vt1.c0, (rt0.c0 IN (rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) AND ((json_array_length(rt0.c2), (x'714d' IN ()), CAST(vt1.c0 AS TEXT), (((NULL))<((rt0.c2))), ((rt0.c3) NOT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)AND(rt0.c1)))))AND(LIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1, rt0.c3, rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((((('JLJ>'))>=((vt1.c0))), ((vt1.c0) NOT NULL), vt1.c0, (rt0.c0 IN (rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) AND ((json_array_length(rt0.c2), (x'714d' IN ()), CAST(vt1.c0 AS TEXT), (((NULL))<((rt0.c2))), ((rt0.c3) NOT NULL))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)AND(rt0.c1)))))AND(LIKELY(rt0.c1)))) ORDER BY (((rt0.c1, rt0.c3, rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((((('JLJ>'))>=((vt1.c0))), ((vt1.c0) NOT NULL), vt1.c0, (rt0.c0 IN (rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) AND ((json_array_length(rt0.c2), (x'714d' IN ()), CAST(vt1.c0 AS TEXT), (((NULL))<((rt0.c2))), ((rt0.c3) NOT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)AND(rt0.c1)))))AND(LIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1, rt0.c3, rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((((('JLJ>'))>=((vt1.c0))), ((vt1.c0) NOT NULL), vt1.c0, (rt0.c0 IN (rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) AND ((json_array_length(rt0.c2), (x'714d' IN ()), CAST(vt1.c0 AS TEXT), (((NULL))<((rt0.c2))), ((rt0.c3) NOT NULL))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)AND(rt0.c1)))))AND(LIKELY(rt0.c1)))) ORDER BY (((rt0.c1, rt0.c3, rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((((('JLJ>'))>=((vt1.c0))), ((vt1.c0) NOT NULL), vt1.c0, (rt0.c0 IN (rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) AND ((json_array_length(rt0.c2), (x'714d' IN ()), CAST(vt1.c0 AS TEXT), (((NULL))<((rt0.c2))), ((rt0.c3) NOT NULL))))  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE ((NOT (((rt0.c1)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((NOT (((rt0.c1)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((NOT (((rt0.c1)GLOB(vt1.c0)))));
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c3)+(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)+(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c3)+(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)+(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c3)+(rt0.c0)) COLLATE NOCASE);
SELECT * FROM vt1, rt0 WHERE (((TYPEOF(rt0.c3))-(((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))))) ORDER BY (((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((((rt0.c0)>(rt0.c2)), ((rt0.c2)||(rt0.c2)), vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)IS NOT(rt0.c3)), NULL COLLATE RTRIM, (((vt1.c0, vt1.c0, rt0.c2))==((vt1.c0, x'bb64', rt0.c1)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c3))-(((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((((rt0.c0)>(rt0.c2)), ((rt0.c2)||(rt0.c2)), vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)IS NOT(rt0.c3)), NULL COLLATE RTRIM, (((vt1.c0, vt1.c0, rt0.c2))=((vt1.c0, x'bb64', rt0.c1)))))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((TYPEOF(rt0.c3))-(((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))))) ORDER BY (((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((((rt0.c0)>(rt0.c2)), ((rt0.c2)||(rt0.c2)), vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)IS NOT(rt0.c3)), NULL COLLATE RTRIM, (((vt1.c0, vt1.c0, rt0.c2))==((vt1.c0, x'bb64', rt0.c1)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c3))-(((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((((rt0.c0)>(rt0.c2)), ((rt0.c2)||(rt0.c2)), vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)IS NOT(rt0.c3)), NULL COLLATE RTRIM, (((vt1.c0, vt1.c0, rt0.c2))=((vt1.c0, x'bb64', rt0.c1)))))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((TYPEOF(rt0.c3))-(((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))))) ORDER BY (((rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((((rt0.c0)>(rt0.c2)), ((rt0.c2)||(rt0.c2)), vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)IS NOT(rt0.c3)), NULL COLLATE RTRIM, (((vt1.c0, vt1.c0, rt0.c2))==((vt1.c0, x'bb64', rt0.c1)))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(NULL AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(NULL AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(NULL AS REAL)) IS FALSE));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR('1467375151' COLLATE RTRIM)) WHERE (NULLIF(DISTINCT TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c0)IS NOT(0.3739520553354245)))) ORDER BY ((((((rt0.c2, vt1.c0, '1624454710')) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c3)))))>=((HEX(DISTINCT rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c0)IS NOT(0.3739520553354245)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR('1467375151' COLLATE RTRIM)) ORDER BY ((((((rt0.c2, vt1.c0, '1624454710')) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c3)))))>=((HEX(DISTINCT rt0.c1)))) ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR('1467375151' COLLATE RTRIM)) WHERE (NULLIF(DISTINCT TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c0)IS NOT(0.3739520553354245)))) ORDER BY ((((((rt0.c2, vt1.c0, '1624454710')) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c3)))))>=((HEX(DISTINCT rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c0)IS NOT(0.3739520553354245)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR('1467375151' COLLATE RTRIM)) ORDER BY ((((((rt0.c2, vt1.c0, '1624454710')) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c3)))))>=((HEX(DISTINCT rt0.c1)))) ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR('1467375151' COLLATE RTRIM)) WHERE (NULLIF(DISTINCT TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c0)IS NOT(0.3739520553354245)))) ORDER BY ((((((rt0.c2, vt1.c0, '1624454710')) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c3)))))>=((HEX(DISTINCT rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT ((((rt0.c3))<=((rt0.c2)))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT ((((rt0.c3))<=((rt0.c2)))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT ((((rt0.c3))<=((rt0.c2)))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY;
SELECT ALL * FROM rt0, vt1 WHERE (((((CAST(rt0.c1 AS TEXT))OR(((rt0.c1)AND(rt0.c0)))))AND(((((rt0.c3)AND('HWL	0')))AND(x'bd4b')))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS TEXT))OR(((rt0.c1)AND(rt0.c0)))))AND(((((rt0.c3)AND('HWL	0')))AND(x'bd4b'))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((CAST(rt0.c1 AS TEXT))OR(((rt0.c1)AND(rt0.c0)))))AND(((((rt0.c3)AND('HWL	0')))AND(x'bd4b')))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS TEXT))OR(((rt0.c1)AND(rt0.c0)))))AND(((((rt0.c3)AND('HWL	0')))AND(x'bd4b'))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((CAST(rt0.c1 AS TEXT))OR(((rt0.c1)AND(rt0.c0)))))AND(((((rt0.c3)AND('HWL	0')))AND(x'bd4b')))));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((+ (rt0.c2)) IN ()) WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((+ (rt0.c2)) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((+ (rt0.c2)) IN ()) WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((+ (rt0.c2)) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((+ (rt0.c2)) IN ()) WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (((((UNLIKELY(DISTINCT rt0.c3))AND(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c3, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT rt0.c3))AND(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c3, rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((UNLIKELY(DISTINCT rt0.c3))AND(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c3, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT rt0.c3))AND(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c3, rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((UNLIKELY(DISTINCT rt0.c3))AND(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c3, rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((0.8802374614783471, rt0.c2, rt0.c2)) BETWEEN ((CASE WHEN x'' THEN 'X1?' ELSE rt0.c2 END, CAST(vt1.c0 AS INTEGER), (NOT (rt0.c1)))) AND ((rt0.c3 COLLATE BINARY, (((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))), UPPER(DISTINCT rt0.c1))))) ORDER BY '9Zs!X!]';
SELECT SUM(count) FROM (SELECT (((((0.8802374614783471, rt0.c2, rt0.c2)) BETWEEN ((CASE WHEN x'' THEN 'X1?' ELSE rt0.c2 END, CAST(vt1.c0 AS INTEGER), (NOT (rt0.c1)))) AND ((rt0.c3 COLLATE BINARY, (((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))), UPPER(DISTINCT rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY '9Zs!X!]');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((0.8802374614783471, rt0.c2, rt0.c2)) BETWEEN ((CASE WHEN x'' THEN 'X1?' ELSE rt0.c2 END, CAST(vt1.c0 AS INTEGER), (NOT (rt0.c1)))) AND ((rt0.c3 COLLATE BINARY, (((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))), UPPER(DISTINCT rt0.c1))))) ORDER BY '9Zs!X!]';
SELECT SUM(count) FROM (SELECT (((((0.8802374614783471, rt0.c2, rt0.c2)) BETWEEN ((CASE WHEN x'' THEN 'X1?' ELSE rt0.c2 END, CAST(vt1.c0 AS INTEGER), (NOT (rt0.c1)))) AND ((rt0.c3 COLLATE BINARY, (((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))), UPPER(DISTINCT rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY '9Zs!X!]');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((0.8802374614783471, rt0.c2, rt0.c2)) BETWEEN ((CASE WHEN x'' THEN 'X1?' ELSE rt0.c2 END, CAST(vt1.c0 AS INTEGER), (NOT (rt0.c1)))) AND ((rt0.c3 COLLATE BINARY, (((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))), UPPER(DISTINCT rt0.c1))))) ORDER BY '9Zs!X!]';
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((rt0.c2)<>(rt0.c1)) IN ()) WHERE ((NOT (((x'')<=(0.42646796505440043)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'')<=(0.42646796505440043))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((rt0.c2)!=(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((rt0.c2)<>(rt0.c1)) IN ()) WHERE ((NOT (((x'')<=(0.42646796505440043)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'')<=(0.42646796505440043))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((rt0.c2)!=(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((rt0.c2)<>(rt0.c1)) IN ()) WHERE ((NOT (((x'')<=(0.42646796505440043)))));
SELECT ALL * FROM vt1 WHERE (((x'') IS FALSE)) ORDER BY (((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(-1569049013)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE (vt1.c0 IN ())  WHEN json_array_length(vt1.c0) THEN ((vt1.c0)||(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(-1569049013)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE (vt1.c0 IN ())  WHEN json_array_length(vt1.c0) THEN ((vt1.c0)||(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((x'') IS FALSE)) ORDER BY (((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(-1569049013)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE (vt1.c0 IN ())  WHEN json_array_length(vt1.c0) THEN ((vt1.c0)||(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN (vt1.c0, vt1.c0)))AND(-1569049013)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE (vt1.c0 IN ())  WHEN json_array_length(vt1.c0) THEN ((vt1.c0)||(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT * FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>=(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>=(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)GLOB(LTRIM(rt0.c3)))) ORDER BY TRIM('U⦖D') COLLATE BINARY  NULLS LAST, CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(LTRIM(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY TRIM('U⦖D') COLLATE BINARY  NULLS LAST, CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)GLOB(LTRIM(rt0.c3)))) ORDER BY TRIM('U⦖D') COLLATE BINARY  NULLS LAST, CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(LTRIM(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY TRIM('U⦖D') COLLATE BINARY  NULLS LAST, CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)GLOB(LTRIM(rt0.c3)))) ORDER BY TRIM('U⦖D') COLLATE BINARY  NULLS LAST, CASE WHEN ((((((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END;
SELECT * FROM rt0 WHERE (json_remove(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((NULL) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_remove(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((NULL) IS TRUE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_remove(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((NULL) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_remove(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((NULL) IS TRUE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) IN ())) ORDER BY CASE ((0.7745616695481159)IS NOT(vt1.c0))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TRIM(DISTINCT rt0.c1) WHEN ((rt0.c2)>=(NULL)) THEN (((rt0.c3, vt1.c0, '烛2M}꨸'))<((rt0.c1, vt1.c0, rt0.c1))) WHEN x'' THEN HEX(DISTINCT NULL) ELSE rt0.c2 END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE ((0.7745616695481159)IS NOT(vt1.c0))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TRIM(DISTINCT rt0.c1) WHEN ((rt0.c2)>=(NULL)) THEN (((rt0.c3, vt1.c0, '烛2M}꨸'))<((rt0.c1, vt1.c0, rt0.c1))) WHEN x'' THEN HEX(DISTINCT NULL) ELSE rt0.c2 END);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) IN ())) ORDER BY CASE ((0.7745616695481159)IS NOT(vt1.c0))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TRIM(DISTINCT rt0.c1) WHEN ((rt0.c2)>=(NULL)) THEN (((rt0.c3, vt1.c0, '烛2M}꨸'))<((rt0.c1, vt1.c0, rt0.c1))) WHEN x'' THEN HEX(DISTINCT NULL) ELSE rt0.c2 END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE ((0.7745616695481159)IS NOT(vt1.c0))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TRIM(DISTINCT rt0.c1) WHEN ((rt0.c2)>=(NULL)) THEN (((rt0.c3, vt1.c0, '烛2M}꨸'))<((rt0.c1, vt1.c0, rt0.c1))) WHEN x'' THEN HEX(DISTINCT NULL) ELSE rt0.c2 END);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) IN ())) ORDER BY CASE ((0.7745616695481159)IS NOT(vt1.c0))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TRIM(DISTINCT rt0.c1) WHEN ((rt0.c2)>=(NULL)) THEN (((rt0.c3, vt1.c0, '烛2M}꨸'))<((rt0.c1, vt1.c0, rt0.c1))) WHEN x'' THEN HEX(DISTINCT NULL) ELSE rt0.c2 END;
SELECT * FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c1 WHEN -7.9761881E8 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE 0.2697289287229704 END THEN ((rt0.c3)*(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c1 WHEN -7.9761881E8 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE 0.2697289287229704 END THEN ((rt0.c3)*(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c1 WHEN -7.9761881E8 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE 0.2697289287229704 END THEN ((rt0.c3)*(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c1 WHEN -7.9761881E8 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE 0.2697289287229704 END THEN ((rt0.c3)*(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c1 WHEN -7.9761881E8 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE 0.2697289287229704 END THEN ((rt0.c3)*(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)<=(rt0.c3))  WHEN LIKE(rt0.c0, NULL) THEN (- (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<=(rt0.c3))  WHEN LIKE(rt0.c0, NULL) THEN (- (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)<=(rt0.c3))  WHEN LIKE(rt0.c0, NULL) THEN (- (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<=(rt0.c3))  WHEN LIKE(rt0.c0, NULL) THEN (- (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)<=(rt0.c3))  WHEN LIKE(rt0.c0, NULL) THEN (- (rt0.c2)) END);
SELECT ALL * FROM vt1, rt0 WHERE ((CHANGES() IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CHANGES() IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((CHANGES() IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CHANGES() IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((CHANGES() IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(-95653669)))AND(0.658294034942215)))<<(((vt1.c0)+(vt1.c0))))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(-95653669)))AND(0.658294034942215)))<<(((vt1.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(-95653669)))AND(0.658294034942215)))<<(((vt1.c0)+(vt1.c0))))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(-95653669)))AND(0.658294034942215)))<<(((vt1.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(-95653669)))AND(0.658294034942215)))<<(((vt1.c0)+(vt1.c0))))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE))LIKE(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((rt0.c1)IS NOT(vt1.c0))) IS FALSE)  NULLS FIRST, rt0.c0 DESC, 0.8438209076111697;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE))LIKE(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)IS NOT(vt1.c0))) IS FALSE)  NULLS FIRST, rt0.c0 DESC, 0.8438209076111697);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE))LIKE(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((rt0.c1)IS NOT(vt1.c0))) IS FALSE)  NULLS FIRST, rt0.c0 DESC, 0.8438209076111697;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE))LIKE(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)IS NOT(vt1.c0))) IS FALSE)  NULLS FIRST, rt0.c0 DESC, 0.8438209076111697);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE))LIKE(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((rt0.c1)IS NOT(vt1.c0))) IS FALSE)  NULLS FIRST, rt0.c0 DESC, 0.8438209076111697;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c3)+(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (TYPEOF(rt0.c0)) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)+(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (TYPEOF(rt0.c0)) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c3)+(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (TYPEOF(rt0.c0)) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)+(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (TYPEOF(rt0.c0)) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c3)+(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (TYPEOF(rt0.c0)) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON HEX((NOT (rt0.c0))) WHERE (((rt0.c1)>(rt0.c2))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON HEX((NOT (rt0.c0))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON HEX((NOT (rt0.c0))) WHERE (((rt0.c1)>(rt0.c2))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON HEX((NOT (rt0.c0))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON HEX((NOT (rt0.c0))) WHERE (((rt0.c1)>(rt0.c2))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE;
SELECT ALL * FROM vt1 WHERE ((((('-2134454445')<=(vt1.c0)))|('-1944713962')));
SELECT SUM(count) FROM (SELECT ALL (((((('-2134454445')<=(vt1.c0)))|('-1944713962'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((('-2134454445')<=(vt1.c0)))|('-1944713962')));
SELECT SUM(count) FROM (SELECT ALL (((((('-2134454445')<=(vt1.c0)))|('-1944713962'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((('-2134454445')<=(vt1.c0)))|('-1944713962')));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c3)AND(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3)) THEN NULL WHEN vt1.c0 COLLATE BINARY THEN ((rt0.c3)<(rt0.c2)) ELSE (NOT (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)AND(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3)) THEN NULL WHEN vt1.c0 COLLATE BINARY THEN ((rt0.c3)<(rt0.c2)) ELSE (NOT (rt0.c3)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c3)AND(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3)) THEN NULL WHEN vt1.c0 COLLATE BINARY THEN ((rt0.c3)<(rt0.c2)) ELSE (NOT (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)AND(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3)) THEN NULL WHEN vt1.c0 COLLATE BINARY THEN ((rt0.c3)<(rt0.c2)) ELSE (NOT (rt0.c3)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c3)AND(vt1.c0)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3)) THEN NULL WHEN vt1.c0 COLLATE BINARY THEN ((rt0.c3)<(rt0.c2)) ELSE (NOT (rt0.c3)) END);
SELECT * FROM rt0 WHERE (NULL COLLATE BINARY) ORDER BY json_patch((((rt0.c1, rt0.c1, rt0.c3, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c2))), ((rt0.c0)==(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY json_patch((((rt0.c1, rt0.c1, rt0.c3, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c2))), ((rt0.c0)=(rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL COLLATE BINARY) ORDER BY json_patch((((rt0.c1, rt0.c1, rt0.c3, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c2))), ((rt0.c0)==(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY json_patch((((rt0.c1, rt0.c1, rt0.c3, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c2))), ((rt0.c0)=(rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL COLLATE BINARY) ORDER BY json_patch((((rt0.c1, rt0.c1, rt0.c3, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c2))), ((rt0.c0)==(rt0.c2))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN x'' END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN x'' END) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN x'' END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN x'' END) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN x'' END) NOT NULL));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)<=(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(0.7597872805957481)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((('''~')*(vt1.c0)))))OR((- (vt1.c0))))) ORDER BY ((+ (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)<=(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(0.7597872805957481)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((('''~')*(vt1.c0)))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((+ (vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)<=(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(0.7597872805957481)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((('''~')*(vt1.c0)))))OR((- (vt1.c0))))) ORDER BY ((+ (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)<=(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(0.7597872805957481)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((('''~')*(vt1.c0)))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((+ (vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)<=(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(0.7597872805957481)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((('''~')*(vt1.c0)))))OR((- (vt1.c0))))) ORDER BY ((+ (vt1.c0)) IN ());
SELECT ALL * FROM vt1 WHERE (((vt1.c0)!=(((x'')<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<>(((x'')<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)!=(((x'')<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<>(((x'')<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)!=(((x'')<<(vt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()), ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER))) DESC, ((('-346061693')) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (0Xffffffffcb8691b3)))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, ((((((rt0.c0)LIKE(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()), ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER))) DESC, ((('-346061693')) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (0xffffffffcb8691b3)))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, ((((((rt0.c0)LIKE(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()), ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER))) DESC, ((('-346061693')) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (0Xffffffffcb8691b3)))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, ((((((rt0.c0)LIKE(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()), ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER))) DESC, ((('-346061693')) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (0xffffffffcb8691b3)))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, ((((((rt0.c0)LIKE(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()), ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER))) DESC, ((('-346061693')) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (0Xffffffffcb8691b3)))) AND ((CAST(rt0.c3 AS TEXT)))) ASC  NULLS LAST, ((((((rt0.c0)LIKE(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY rt0.c2  NULLS FIRST, (((((rt0.c0 IN (rt0.c2, rt0.c3)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))OR('-1171293742'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (((((rt0.c0 IN (rt0.c2, rt0.c3)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))OR('-1171293742'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY rt0.c2  NULLS FIRST, (((((rt0.c0 IN (rt0.c2, rt0.c3)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))OR('-1171293742'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (((((rt0.c0 IN (rt0.c2, rt0.c3)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))OR('-1171293742'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY rt0.c2  NULLS FIRST, (((((rt0.c0 IN (rt0.c2, rt0.c3)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))OR('-1171293742'))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY CASE ((rt0.c3)<(rt0.c3))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0X4c5fbb6f ELSE rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c3)<(rt0.c3))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0x4c5fbb6f ELSE rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY CASE ((rt0.c3)<(rt0.c3))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0X4c5fbb6f ELSE rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c3)<(rt0.c3))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0x4c5fbb6f ELSE rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY CASE ((rt0.c3)<(rt0.c3))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0X4c5fbb6f ELSE rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE x'26de5e47' END)&(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE x'26de5e47' END)&(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE x'26de5e47' END)&(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE x'26de5e47' END)&(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE x'26de5e47' END)&(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS INTEGER) THEN NULL ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c3 AS INTEGER) THEN NULL ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS INTEGER) THEN NULL ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c3 AS INTEGER) THEN NULL ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS INTEGER) THEN NULL ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL)) ORDER BY ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))LIKE(x''));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))LIKE(x'')));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL)) ORDER BY ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))LIKE(x''));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))LIKE(x'')));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL)) ORDER BY ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))LIKE(x''));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((('-996431114')>=(rt0.c0)))*(CASE WHEN rt0.c0 THEN vt1.c0 END))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))<<(HEX(DISTINCT x'')));
SELECT SUM(count) FROM (SELECT (((((('-996431114')>=(rt0.c0)))*(CASE WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))<<(HEX(DISTINCT x''))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((('-996431114')>=(rt0.c0)))*(CASE WHEN rt0.c0 THEN vt1.c0 END))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))<<(HEX(DISTINCT x'')));
SELECT SUM(count) FROM (SELECT (((((('-996431114')>=(rt0.c0)))*(CASE WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))<<(HEX(DISTINCT x''))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((('-996431114')>=(rt0.c0)))*(CASE WHEN rt0.c0 THEN vt1.c0 END))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))<<(HEX(DISTINCT x'')));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)+(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)+(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)+(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)+(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)+(rt0.c2)) IN ()));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0)>=(CAST(rt0.c1 AS TEXT))) WHERE ((- ('UC')));
SELECT SUM(count) FROM (SELECT ALL (((- ('UC'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0)>=(CAST(rt0.c1 AS TEXT))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0)>=(CAST(rt0.c1 AS TEXT))) WHERE ((- ('UC')));
SELECT SUM(count) FROM (SELECT ALL (((- ('UC'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0)>=(CAST(rt0.c1 AS TEXT))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0)>=(CAST(rt0.c1 AS TEXT))) WHERE ((- ('UC')));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'')-((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) ORDER BY ((CASE WHEN 0.6821764517142201 THEN vt1.c0 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')-((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN 0.6821764517142201 THEN vt1.c0 END) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'')-((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) ORDER BY ((CASE WHEN 0.6821764517142201 THEN vt1.c0 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')-((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN 0.6821764517142201 THEN vt1.c0 END) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'')-((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) ORDER BY ((CASE WHEN 0.6821764517142201 THEN vt1.c0 END) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0))<=((vt1.c0))) AS TEXT)) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))<=((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0))<=((vt1.c0))) AS TEXT)) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))<=((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0))<=((vt1.c0))) AS TEXT)) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC;
SELECT * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('얯k''q') AND (((vt1.c0)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('얯k''q') AND (((vt1.c0)/(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('얯k''q') AND (((vt1.c0)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('얯k''q') AND (((vt1.c0)/(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('얯k''q') AND (((vt1.c0)/(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.46915940578132853)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ('-1097309304' IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'')) THEN ((vt1.c0)<=(vt1.c0)) ELSE 0x1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0 COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.46915940578132853)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ('-1097309304' IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'')) THEN ((vt1.c0)<=(vt1.c0)) ELSE 0X1 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.46915940578132853)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ('-1097309304' IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'')) THEN ((vt1.c0)<=(vt1.c0)) ELSE 0x1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0 COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.46915940578132853)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ('-1097309304' IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'')) THEN ((vt1.c0)<=(vt1.c0)) ELSE 0X1 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0.46915940578132853)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ('-1097309304' IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'')) THEN ((vt1.c0)<=(vt1.c0)) ELSE 0x1 END);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((x'')/(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')/(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((x'')/(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')/(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((x'')/(rt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((((0.5699382946556756)OR(rt0.c2)))OR(rt0.c0))) AND (0.07322952535752003 COLLATE BINARY))) ORDER BY ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))) NOT BETWEEN (UPPER(rt0.c1)) AND (IFNULL(rt0.c0, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (((((0.5699382946556756)OR(rt0.c2)))OR(rt0.c0))) AND (0.07322952535752003 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))) NOT BETWEEN (UPPER(rt0.c1)) AND (IFNULL(rt0.c0, rt0.c3))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((((0.5699382946556756)OR(rt0.c2)))OR(rt0.c0))) AND (0.07322952535752003 COLLATE BINARY))) ORDER BY ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))) NOT BETWEEN (UPPER(rt0.c1)) AND (IFNULL(rt0.c0, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (((((0.5699382946556756)OR(rt0.c2)))OR(rt0.c0))) AND (0.07322952535752003 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))) NOT BETWEEN (UPPER(rt0.c1)) AND (IFNULL(rt0.c0, rt0.c3))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((((0.5699382946556756)OR(rt0.c2)))OR(rt0.c0))) AND (0.07322952535752003 COLLATE BINARY))) ORDER BY ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))) NOT BETWEEN (UPPER(rt0.c1)) AND (IFNULL(rt0.c0, rt0.c3)));
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((NULL IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((NULL IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((NULL IN ()))));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt1 WHERE (((0xffffffffeb5f8483) IS FALSE)) ORDER BY (~ (CAST(NULL AS REAL)))  NULLS FIRST, (((((((((~ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.992178358423248))) DESC, JULIANDAY((vt1.c0 IN ()), ((((((((0xffffffffbe986388)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0xffffffffeb5f8483) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (~ (CAST(NULL AS REAL)))  NULLS FIRST, (((((((((~ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.992178358423248))) DESC, JULIANDAY((vt1.c0 IN ()), ((((((((0Xffffffffbe986388)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((0xffffffffeb5f8483) IS FALSE)) ORDER BY (~ (CAST(NULL AS REAL)))  NULLS FIRST, (((((((((~ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.992178358423248))) DESC, JULIANDAY((vt1.c0 IN ()), ((((((((0xffffffffbe986388)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0xffffffffeb5f8483) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (~ (CAST(NULL AS REAL)))  NULLS FIRST, (((((((((~ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.992178358423248))) DESC, JULIANDAY((vt1.c0 IN ()), ((((((((0Xffffffffbe986388)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((0xffffffffeb5f8483) IS FALSE)) ORDER BY (~ (CAST(NULL AS REAL)))  NULLS FIRST, (((((((((~ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND((~ (vt1.c0)))))AND(LIKELIHOOD(vt1.c0, 0.992178358423248))) DESC, JULIANDAY((vt1.c0 IN ()), ((((((((0xffffffffbe986388)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((NOT (rt0.c1)), (((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c2))), rt0.c3 COLLATE RTRIM))!=((rt0.c2 COLLATE BINARY, (('j\d-\rEc쾱F')LIKE(rt0.c1)), CAST(rt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c1)), (((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c2))), rt0.c3 COLLATE RTRIM))!=((rt0.c2 COLLATE BINARY, (('j\d-\rEc쾱F')LIKE(rt0.c1)), CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NOT (rt0.c1)), (((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c2))), rt0.c3 COLLATE RTRIM))!=((rt0.c2 COLLATE BINARY, (('j\d-\rEc쾱F')LIKE(rt0.c1)), CAST(rt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c1)), (((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c2))), rt0.c3 COLLATE RTRIM))!=((rt0.c2 COLLATE BINARY, (('j\d-\rEc쾱F')LIKE(rt0.c1)), CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NOT (rt0.c1)), (((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c2))), rt0.c3 COLLATE RTRIM))!=((rt0.c2 COLLATE BINARY, (('j\d-\rEc쾱F')LIKE(rt0.c1)), CAST(rt0.c2 AS NUMERIC)))));
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CAST(((NULL) BETWEEN (NULL) AND (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) BETWEEN (NULL) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CAST(((NULL) BETWEEN (NULL) AND (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) BETWEEN (NULL) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CAST(((NULL) BETWEEN (NULL) AND (rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE (((vt1.c0, vt1.c0, rt0.c3, rt0.c2, rt0.c0))!=((vt1.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1)))  WHEN ((vt1.c0) ISNULL) THEN (((rt0.c1))=((rt0.c0))) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0, vt1.c0, rt0.c3, rt0.c2, rt0.c0))<>((vt1.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1)))  WHEN ((vt1.c0) ISNULL) THEN (((rt0.c1))==((rt0.c0))) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE (((vt1.c0, vt1.c0, rt0.c3, rt0.c2, rt0.c0))!=((vt1.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1)))  WHEN ((vt1.c0) ISNULL) THEN (((rt0.c1))=((rt0.c0))) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0, vt1.c0, rt0.c3, rt0.c2, rt0.c0))<>((vt1.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1)))  WHEN ((vt1.c0) ISNULL) THEN (((rt0.c1))==((rt0.c0))) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE (((vt1.c0, vt1.c0, rt0.c3, rt0.c2, rt0.c0))!=((vt1.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1)))  WHEN ((vt1.c0) ISNULL) THEN (((rt0.c1))=((rt0.c0))) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT * FROM rt0 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) IN ()));
SELECT * FROM rt0 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) IN ()));
SELECT * FROM rt0 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)) IN ());
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (~ ((rt0.c1 IN (vt1.c0, rt0.c3)))) WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)<(STRFTIME(rt0.c2, vt1.c0, vt1.c0)))) ORDER BY (((- (rt0.c1))) ISNULL)  NULLS FIRST, ((((rt0.c2)+(vt1.c0))) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((vt1.c0)%(rt0.c2))))  NULLS FIRST, (((rt0.c1 IN (rt0.c0)))/(((x'b3eb') ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)<(STRFTIME(rt0.c2, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (~ ((rt0.c1 IN (vt1.c0, rt0.c3)))) ORDER BY (((- (rt0.c1))) ISNULL)  NULLS FIRST, ((((rt0.c2)+(vt1.c0))) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((vt1.c0)%(rt0.c2))))  NULLS FIRST, (((rt0.c1 IN (rt0.c0)))/(((x'b3eb') ISNULL)))  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (~ ((rt0.c1 IN (vt1.c0, rt0.c3)))) WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)<(STRFTIME(rt0.c2, vt1.c0, vt1.c0)))) ORDER BY (((- (rt0.c1))) ISNULL)  NULLS FIRST, ((((rt0.c2)+(vt1.c0))) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((vt1.c0)%(rt0.c2))))  NULLS FIRST, (((rt0.c1 IN (rt0.c0)))/(((x'b3eb') ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)<(STRFTIME(rt0.c2, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (~ ((rt0.c1 IN (vt1.c0, rt0.c3)))) ORDER BY (((- (rt0.c1))) ISNULL)  NULLS FIRST, ((((rt0.c2)+(vt1.c0))) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((vt1.c0)%(rt0.c2))))  NULLS FIRST, (((rt0.c1 IN (rt0.c0)))/(((x'b3eb') ISNULL)))  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (~ ((rt0.c1 IN (vt1.c0, rt0.c3)))) WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)<(STRFTIME(rt0.c2, vt1.c0, vt1.c0)))) ORDER BY (((- (rt0.c1))) ISNULL)  NULLS FIRST, ((((rt0.c2)+(vt1.c0))) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((vt1.c0)%(rt0.c2))))  NULLS FIRST, (((rt0.c1 IN (rt0.c0)))/(((x'b3eb') ISNULL)))  NULLS LAST;
SELECT * FROM rt0 WHERE (RTRIM((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((rt0.c1 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (RTRIM((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((rt0.c1 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (RTRIM((rt0.c1 IN ())));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c0))<=((rt0.c3))))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))))OR(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<=((rt0.c3))))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))))OR(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c0))<=((rt0.c3))))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))))OR(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<=((rt0.c3))))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))))OR(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c0))<=((rt0.c3))))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))))OR(CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY rt0.c1  NULLS LAST, (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))IS NOT(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c2)))IS NOT(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))IS NOT(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c2)))IS NOT(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))IS NOT(rt0.c1)));
SELECT * FROM rt0 WHERE (((((rt0.c3)OR(((((rt0.c3)AND('E(')))OR(rt0.c3)))))AND(CASE ''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(((((rt0.c3)AND('E(')))OR(rt0.c3)))))AND(CASE ''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3)OR(((((rt0.c3)AND('E(')))OR(rt0.c3)))))AND(CASE ''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(((((rt0.c3)AND('E(')))OR(rt0.c3)))))AND(CASE ''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3)OR(((((rt0.c3)AND('E(')))OR(rt0.c3)))))AND(CASE ''  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1) NOTNULL))/((+ ('-1170164643'))))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))/((+ ('-1170164643'))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) IS TRUE) ASC);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1) NOTNULL))/((+ ('-1170164643'))))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))/((+ ('-1170164643'))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) IS TRUE) ASC);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1) NOTNULL))/((+ ('-1170164643'))))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) IS TRUE) ASC;
SELECT * FROM rt0, vt1 WHERE ((~ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c2)>>(rt0.c3)))) ASC, (((vt1.c0)) NOT BETWEEN ((((rt0.c0)!=(rt0.c1)))) AND ((((6.02867042E8) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c2)>>(rt0.c3)))) ASC, (((vt1.c0)) NOT BETWEEN ((((rt0.c0)<>(rt0.c1)))) AND ((((6.02867042E8) NOT NULL)))) DESC);
SELECT * FROM rt0, vt1 WHERE ((~ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c2)>>(rt0.c3)))) ASC, (((vt1.c0)) NOT BETWEEN ((((rt0.c0)!=(rt0.c1)))) AND ((((6.02867042E8) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c2)>>(rt0.c3)))) ASC, (((vt1.c0)) NOT BETWEEN ((((rt0.c0)<>(rt0.c1)))) AND ((((6.02867042E8) NOT NULL)))) DESC);
SELECT * FROM rt0, vt1 WHERE ((~ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c2)>>(rt0.c3)))) ASC, (((vt1.c0)) NOT BETWEEN ((((rt0.c0)!=(rt0.c1)))) AND ((((6.02867042E8) NOT NULL)))) DESC;
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)&(rt0.c2)) IN ())) ORDER BY (NOT ((NOT (rt0.c3)))), ((((rt0.c0)IS(rt0.c2)))>((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC  NULLS LAST, ((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT ((NOT (rt0.c3)))), ((((rt0.c0)IS(rt0.c2)))>((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC  NULLS LAST, ((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)&(rt0.c2)) IN ())) ORDER BY (NOT ((NOT (rt0.c3)))), ((((rt0.c0)IS(rt0.c2)))>((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC  NULLS LAST, ((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT ((NOT (rt0.c3)))), ((((rt0.c0)IS(rt0.c2)))>((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC  NULLS LAST, ((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)&(rt0.c2)) IN ())) ORDER BY (NOT ((NOT (rt0.c3)))), ((((rt0.c0)IS(rt0.c2)))>((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC  NULLS LAST, ((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c1))) AND ((NOT (rt0.c1))))) ORDER BY ((((rt0.c0)>=(rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c1))) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0)>=(rt0.c1))) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c1))) AND ((NOT (rt0.c1))))) ORDER BY ((((rt0.c0)>=(rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c1))) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0)>=(rt0.c1))) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c1))) AND ((NOT (rt0.c1))))) ORDER BY ((((rt0.c0)>=(rt0.c1))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (~ (rt0.c3)) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) ORDER BY 0.3531085461708018, (((rt0.c2 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (~ (rt0.c3)) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) IS TRUE)  as count FROM rt0 ORDER BY 0.3531085461708018, (((rt0.c2 IN ())) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (~ (rt0.c3)) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) ORDER BY 0.3531085461708018, (((rt0.c2 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (~ (rt0.c3)) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) IS TRUE)  as count FROM rt0 ORDER BY 0.3531085461708018, (((rt0.c2 IN ())) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (~ (rt0.c3)) THEN rt0.c0 COLLATE RTRIM ELSE rt0.c3 END) ORDER BY 0.3531085461708018, (((rt0.c2 IN ())) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<=(CAST(rt0.c3 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<=(CAST(rt0.c3 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<=(CAST(rt0.c3 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<=(CAST(rt0.c3 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<=(CAST(rt0.c3 AS TEXT))) DESC;
SELECT * FROM rt0, vt1 WHERE (((((((((((0.7256149661111908) IS FALSE))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)))AND((~ (rt0.c2)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY ((UNICODE(rt0.c1))OR(((vt1.c0)LIKE(vt1.c0)))) ASC, (((- (rt0.c0)))<=(TRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.7256149661111908) IS FALSE))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)))AND((~ (rt0.c2)))))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((UNICODE(rt0.c1))OR(((vt1.c0)LIKE(vt1.c0)))) ASC, (((- (rt0.c0)))<=(TRIM(rt0.c2))));
SELECT * FROM rt0, vt1 WHERE (((((((((((0.7256149661111908) IS FALSE))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)))AND((~ (rt0.c2)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY ((UNICODE(rt0.c1))OR(((vt1.c0)LIKE(vt1.c0)))) ASC, (((- (rt0.c0)))<=(TRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.7256149661111908) IS FALSE))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)))AND((~ (rt0.c2)))))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((UNICODE(rt0.c1))OR(((vt1.c0)LIKE(vt1.c0)))) ASC, (((- (rt0.c0)))<=(TRIM(rt0.c2))));
SELECT * FROM rt0, vt1 WHERE (((((((((((0.7256149661111908) IS FALSE))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)))AND((~ (rt0.c2)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY ((UNICODE(rt0.c1))OR(((vt1.c0)LIKE(vt1.c0)))) ASC, (((- (rt0.c0)))<=(TRIM(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c3, 0.00103919432107058));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt0.c3, 0.00103919432107058)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c3, 0.00103919432107058));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt0.c3, 0.00103919432107058)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c3, 0.00103919432107058));
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%(rt0.c3)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS INTEGER))AND(((((x'')AND(rt0.c2)))AND(rt0.c1)))))AND(((vt1.c0) NOT NULL))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt1.c0)|('1624454710')))) WHERE ((((+ (rt0.c1))) BETWEEN ((+ (x'0d8a1f10'))) AND (((0.5688251826210151)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) BETWEEN ((+ (x'0d8a1f10'))) AND (((0.5688251826210151)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS INTEGER))AND(((((x'')AND(rt0.c2)))AND(rt0.c1)))))AND(((vt1.c0) NOT NULL))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt1.c0)|('1624454710')))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS INTEGER))AND(((((x'')AND(rt0.c2)))AND(rt0.c1)))))AND(((vt1.c0) NOT NULL))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt1.c0)|('1624454710')))) WHERE ((((+ (rt0.c1))) BETWEEN ((+ (x'0d8a1f10'))) AND (((0.5688251826210151)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) BETWEEN ((+ (x'0d8a1f10'))) AND (((0.5688251826210151)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS INTEGER))AND(((((x'')AND(rt0.c2)))AND(rt0.c1)))))AND(((vt1.c0) NOT NULL))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt1.c0)|('1624454710')))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS INTEGER))AND(((((x'')AND(rt0.c2)))AND(rt0.c1)))))AND(((vt1.c0) NOT NULL))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt1.c0)|('1624454710')))) WHERE ((((+ (rt0.c1))) BETWEEN ((+ (x'0d8a1f10'))) AND (((0.5688251826210151)LIKE(vt1.c0)))));
SELECT ALL * FROM rt0, vt1 WHERE (NULL) ORDER BY ((CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END) NOTNULL) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (NULL) ORDER BY ((CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END) NOTNULL) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (NULL) ORDER BY ((CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END) NOTNULL) DESC;
SELECT * FROM vt1 WHERE ((- (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (vt1.c0 COLLATE BINARY)));
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)||(x'7859')))OR(((rt0.c2)>=(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)||(x'7859')))OR(((rt0.c2)>=(rt0.c2)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)||(x'7859')))OR(((rt0.c2)>=(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)||(x'7859')))OR(((rt0.c2)>=(rt0.c2)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)||(x'7859')))OR(((rt0.c2)>=(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1)/(rt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (((rt0.c3) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)/(rt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (((rt0.c3) ISNULL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1)/(rt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (((rt0.c3) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)/(rt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (((rt0.c3) ISNULL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1)/(rt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (((rt0.c3) ISNULL))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c2))!=((x'1db2')))) BETWEEN (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))!=((x'1db2')))) BETWEEN (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))!=((x'1db2')))) BETWEEN (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))!=((x'1db2')))) BETWEEN (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))!=((x'1db2')))) BETWEEN (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c3 COLLATE RTRIM))) DESC, (- ((- (rt0.c3))))  NULLS LAST, ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(('-1760790878' IN ()))))OR((((rt0.c2))=(('h.~?Y3uz葔')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c3 COLLATE RTRIM))) DESC, (- ((- (rt0.c3))))  NULLS LAST, ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(('-1760790878' IN ()))))OR((((rt0.c2))==(('h.~?Y3uz葔')))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c3 COLLATE RTRIM))) DESC, (- ((- (rt0.c3))))  NULLS LAST, ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(('-1760790878' IN ()))))OR((((rt0.c2))=(('h.~?Y3uz葔')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c3 COLLATE RTRIM))) DESC, (- ((- (rt0.c3))))  NULLS LAST, ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(('-1760790878' IN ()))))OR((((rt0.c2))==(('h.~?Y3uz葔')))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c3 COLLATE RTRIM))) DESC, (- ((- (rt0.c3))))  NULLS LAST, ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(('-1760790878' IN ()))))OR((((rt0.c2))=(('h.~?Y3uz葔')))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c3) ORDER BY (((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c1)) IN ()), (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST, UPPER(vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c1)) IN ()), (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST, UPPER(vt1.c0));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c3) ORDER BY (((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c1)) IN ()), (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST, UPPER(vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c1)) IN ()), (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST, UPPER(vt1.c0));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c3) ORDER BY (((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c1)) IN ()), (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST, UPPER(vt1.c0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TOTAL_CHANGES())))) ORDER BY CAST(((0.8189584885089698)<(rt0.c3)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TOTAL_CHANGES())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((0.8189584885089698)<(rt0.c3)) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TOTAL_CHANGES())))) ORDER BY CAST(((0.8189584885089698)<(rt0.c3)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TOTAL_CHANGES())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((0.8189584885089698)<(rt0.c3)) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TOTAL_CHANGES())))) ORDER BY CAST(((0.8189584885089698)<(rt0.c3)) AS NUMERIC);
SELECT * FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR((+ (vt1.c0)))))AND(((vt1.c0) NOT NULL))))AND((vt1.c0 IN ()))))AND(((vt1.c0)|(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR((+ (vt1.c0)))))AND(((vt1.c0) NOT NULL))))AND((vt1.c0 IN ()))))AND(((vt1.c0)|(x''))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR((+ (vt1.c0)))))AND(((vt1.c0) NOT NULL))))AND((vt1.c0 IN ()))))AND(((vt1.c0)|(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR((+ (vt1.c0)))))AND(((vt1.c0) NOT NULL))))AND((vt1.c0 IN ()))))AND(((vt1.c0)|(x''))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR((+ (vt1.c0)))))AND(((vt1.c0) NOT NULL))))AND((vt1.c0 IN ()))))AND(((vt1.c0)|(x'')))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))&('-29888498')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))&('-29888498'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))&('-29888498')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))&('-29888498'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))&('-29888498')));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c3)) NOT BETWEEN (((rt0.c2)AND(rt0.c3))) AND (rt0.c3 COLLATE BINARY)) WHERE (((NULL) ISNULL)) ORDER BY (((rt0.c2 IN (rt0.c3, '-1286896822'))) NOT BETWEEN (((rt0.c3)%('jEe8biJ#'))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c3)) NOT BETWEEN (((rt0.c2)AND(rt0.c3))) AND (rt0.c3 COLLATE BINARY)) ORDER BY (((rt0.c2 IN (rt0.c3, '-1286896822'))) NOT BETWEEN (((rt0.c3)%('jEe8biJ#'))) AND (x'')) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c3)) NOT BETWEEN (((rt0.c2)AND(rt0.c3))) AND (rt0.c3 COLLATE BINARY)) WHERE (((NULL) ISNULL)) ORDER BY (((rt0.c2 IN (rt0.c3, '-1286896822'))) NOT BETWEEN (((rt0.c3)%('jEe8biJ#'))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c3)) NOT BETWEEN (((rt0.c2)AND(rt0.c3))) AND (rt0.c3 COLLATE BINARY)) ORDER BY (((rt0.c2 IN (rt0.c3, '-1286896822'))) NOT BETWEEN (((rt0.c3)%('jEe8biJ#'))) AND (x'')) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c3)) NOT BETWEEN (((rt0.c2)AND(rt0.c3))) AND (rt0.c3 COLLATE BINARY)) WHERE (((NULL) ISNULL)) ORDER BY (((rt0.c2 IN (rt0.c3, '-1286896822'))) NOT BETWEEN (((rt0.c3)%('jEe8biJ#'))) AND (x'')) ASC;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CASE NULL  WHEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END THEN vt1.c0 COLLATE BINARY ELSE (((((((('')OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END THEN vt1.c0 COLLATE BINARY ELSE (((((((('')OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(vt1.c0)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CASE NULL  WHEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END THEN vt1.c0 COLLATE BINARY ELSE (((((((('')OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END THEN vt1.c0 COLLATE BINARY ELSE (((((((('')OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(vt1.c0)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CASE NULL  WHEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END THEN vt1.c0 COLLATE BINARY ELSE (((((((('')OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(vt1.c0)) END);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c3 END) ORDER BY (((UNLIKELY(DISTINCT -1589847661)))<((((rt0.c0) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c3 END) IS TRUE)  as count FROM rt0 ORDER BY (((UNLIKELY(DISTINCT -1589847661)))<((((rt0.c0) IS FALSE)))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c3 END) ORDER BY (((UNLIKELY(DISTINCT -1589847661)))<((((rt0.c0) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c3 END) IS TRUE)  as count FROM rt0 ORDER BY (((UNLIKELY(DISTINCT -1589847661)))<((((rt0.c0) IS FALSE)))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c3 END) ORDER BY (((UNLIKELY(DISTINCT -1589847661)))<((((rt0.c0) IS FALSE)))) ASC;
SELECT * FROM vt1 WHERE (((load_extension(vt1.c0)) BETWEEN (((vt1.c0) NOT NULL)) AND (2116519830))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((load_extension(vt1.c0)) BETWEEN (((vt1.c0) NOT NULL)) AND (2116519830))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0))))));
SELECT * FROM vt1 WHERE (((load_extension(vt1.c0)) BETWEEN (((vt1.c0) NOT NULL)) AND (2116519830))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((load_extension(vt1.c0)) BETWEEN (((vt1.c0) NOT NULL)) AND (2116519830))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CASE WHEN CASE '392506369'  WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE '392506369'  WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CASE WHEN CASE '392506369'  WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE '392506369'  WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CASE WHEN CASE '392506369'  WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c1)) IN ()) WHERE ((((((NOT (rt0.c2)))OR(((rt0.c2)<(rt0.c0)))))OR(((rt0.c1)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c2)))OR(((rt0.c2)<(rt0.c0)))))OR(((rt0.c1)+(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c1)) IN ()) WHERE ((((((NOT (rt0.c2)))OR(((rt0.c2)<(rt0.c0)))))OR(((rt0.c1)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c2)))OR(((rt0.c2)<(rt0.c0)))))OR(((rt0.c1)+(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c1)) IN ()) WHERE ((((((NOT (rt0.c2)))OR(((rt0.c2)<(rt0.c0)))))OR(((rt0.c1)+(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOTNULL))) WHERE (((NULL)||(rt0.c0))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR('Q?DKR9E{')) WHEN rt0.c0 COLLATE NOCASE THEN ((vt1.c0)*(vt1.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END ELSE CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)||(rt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOTNULL))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR('Q?DKR9E{')) WHEN rt0.c0 COLLATE NOCASE THEN ((vt1.c0)*(vt1.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END ELSE CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOTNULL))) WHERE (((NULL)||(rt0.c0))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR('Q?DKR9E{')) WHEN rt0.c0 COLLATE NOCASE THEN ((vt1.c0)*(vt1.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END ELSE CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)||(rt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOTNULL))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR('Q?DKR9E{')) WHEN rt0.c0 COLLATE NOCASE THEN ((vt1.c0)*(vt1.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END ELSE CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOTNULL))) WHERE (((NULL)||(rt0.c0))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR('Q?DKR9E{')) WHEN rt0.c0 COLLATE NOCASE THEN ((vt1.c0)*(vt1.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END ELSE CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END;
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST(((((((((rt0.c0)OR(0X6b88adee)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)) AS NUMERIC) WHERE (PRINTF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ORDER BY CASE WHEN (+ (rt0.c0)) THEN rt0.c3 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(((((((((rt0.c0)OR(0x6b88adee)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)) AS NUMERIC) ORDER BY CASE WHEN (+ (rt0.c0)) THEN rt0.c3 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST(((((((((rt0.c0)OR(0X6b88adee)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)) AS NUMERIC) WHERE (PRINTF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ORDER BY CASE WHEN (+ (rt0.c0)) THEN rt0.c3 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(((((((((rt0.c0)OR(0x6b88adee)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)) AS NUMERIC) ORDER BY CASE WHEN (+ (rt0.c0)) THEN rt0.c3 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON CAST(((((((((rt0.c0)OR(0X6b88adee)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)) AS NUMERIC) WHERE (PRINTF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ORDER BY CASE WHEN (+ (rt0.c0)) THEN rt0.c3 COLLATE BINARY END  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(CAST(rt0.c3 AS REAL)))) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))LIKE(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3)LIKE(rt0.c2)))LIKE(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(CAST(rt0.c3 AS REAL)))) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))LIKE(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3)LIKE(rt0.c2)))LIKE(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(CAST(rt0.c3 AS REAL)))) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))LIKE(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))))OR(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))))OR(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(CAST(rt0.c2 AS INTEGER))))OR(CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR(((((x'')AND(vt1.c0)))OR(vt1.c0)))))OR(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))))AND(json_type(vt1.c0))))AND(CAST('-1286896822' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE NOCASE)OR(((((x'')AND(vt1.c0)))OR(vt1.c0)))))OR(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))))AND(json_type(vt1.c0))))AND(CAST('-1286896822' AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR(((((x'')AND(vt1.c0)))OR(vt1.c0)))))OR(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))))AND(json_type(vt1.c0))))AND(CAST('-1286896822' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE NOCASE)OR(((((x'')AND(vt1.c0)))OR(vt1.c0)))))OR(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))))AND(json_type(vt1.c0))))AND(CAST('-1286896822' AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) AS TEXT) WHERE (((((rt0.c0)IS NOT(rt0.c2)))OR(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2)))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) AS TEXT) WHERE (((((rt0.c0)IS NOT(rt0.c2)))OR(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2)))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) AS TEXT) WHERE (((((rt0.c0)IS NOT(rt0.c2)))OR(rt0.c0 COLLATE BINARY)));
SELECT * FROM vt1, rt0 WHERE (LIKELY(rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (LIKELY(rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (LIKELY(rt0.c1) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c3)GLOB(rt0.c0)) AS REAL)) ORDER BY (((((rt0.c2))>=((rt0.c1))))<>(json_array(vt1.c0, rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)GLOB(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2))>=((rt0.c1))))<>(json_array(vt1.c0, rt0.c2))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c3)GLOB(rt0.c0)) AS REAL)) ORDER BY (((((rt0.c2))>=((rt0.c1))))<>(json_array(vt1.c0, rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)GLOB(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2))>=((rt0.c1))))<>(json_array(vt1.c0, rt0.c2))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c3)GLOB(rt0.c0)) AS REAL)) ORDER BY (((((rt0.c2))>=((rt0.c1))))<>(json_array(vt1.c0, rt0.c2))) DESC;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))))AND(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY x'a205' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))))AND(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY x'a205' ASC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))))AND(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY x'a205' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))))AND(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY x'a205' ASC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))))AND(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY x'a205' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) WHERE (0.6235611984203088);
SELECT SUM(count) FROM (SELECT ((0.6235611984203088) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) WHERE (0.6235611984203088);
SELECT SUM(count) FROM (SELECT ((0.6235611984203088) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) WHERE (0.6235611984203088);
SELECT * FROM vt1 WHERE (((NULL)+(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (HEX(vt1.c0)) AND ('0.8677175453975614')), (((vt1.c0 IN ()))<(((vt1.c0)==(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)+(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (HEX(vt1.c0)) AND ('0.8677175453975614')), (((vt1.c0 IN ()))<(((vt1.c0)=(vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((NULL)+(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (HEX(vt1.c0)) AND ('0.8677175453975614')), (((vt1.c0 IN ()))<(((vt1.c0)==(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)+(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (HEX(vt1.c0)) AND ('0.8677175453975614')), (((vt1.c0 IN ()))<(((vt1.c0)=(vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((NULL)+(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (HEX(vt1.c0)) AND ('0.8677175453975614')), (((vt1.c0 IN ()))<(((vt1.c0)==(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN '' ELSE ((vt1.c0) ISNULL) END) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN ('|' COLLATE BINARY) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN '' ELSE ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN ('|' COLLATE BINARY) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN '' ELSE ((vt1.c0) ISNULL) END) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN ('|' COLLATE BINARY) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN '' ELSE ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN ('|' COLLATE BINARY) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN '' ELSE ((vt1.c0) ISNULL) END) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN ('|' COLLATE BINARY) AND (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))OR('')))OR((((rt0.c2)) NOT BETWEEN ((1.81534833E8)) AND ((rt0.c0)))))) ORDER BY ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(INSTR(rt0.c1, rt0.c1))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS FIRST, ((((((rt0.c1) IS FALSE))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND(rt0.c0 COLLATE NOCASE)), CASE WHEN rt0.c0 THEN 0xacf246e ELSE rt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS INTEGER))OR('')))OR((((rt0.c2)) NOT BETWEEN ((1.81534833E8)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(INSTR(rt0.c1, rt0.c1))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS FIRST, ((((((rt0.c1) IS FALSE))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND(rt0.c0 COLLATE NOCASE)), CASE WHEN rt0.c0 THEN 0Xacf246e ELSE rt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))OR('')))OR((((rt0.c2)) NOT BETWEEN ((1.81534833E8)) AND ((rt0.c0)))))) ORDER BY ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(INSTR(rt0.c1, rt0.c1))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS FIRST, ((((((rt0.c1) IS FALSE))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND(rt0.c0 COLLATE NOCASE)), CASE WHEN rt0.c0 THEN 0xacf246e ELSE rt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS INTEGER))OR('')))OR((((rt0.c2)) NOT BETWEEN ((1.81534833E8)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(INSTR(rt0.c1, rt0.c1))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS FIRST, ((((((rt0.c1) IS FALSE))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND(rt0.c0 COLLATE NOCASE)), CASE WHEN rt0.c0 THEN 0Xacf246e ELSE rt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))OR('')))OR((((rt0.c2)) NOT BETWEEN ((1.81534833E8)) AND ((rt0.c0)))))) ORDER BY ((((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(INSTR(rt0.c1, rt0.c1))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS FIRST, ((((((rt0.c1) IS FALSE))AND((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND(rt0.c0 COLLATE NOCASE)), CASE WHEN rt0.c0 THEN 0xacf246e ELSE rt0.c0 END COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>=(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(1957833214))))) ORDER BY LOWER((+ (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>=(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(1957833214))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER((+ (rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>=(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(1957833214))))) ORDER BY LOWER((+ (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>=(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(1957833214))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER((+ (rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>=(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(1957833214))))) ORDER BY LOWER((+ (rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (('698248459')OR(rt0.c3)) COLLATE NOCASE WHERE ((((((((((rt0.c3 IN ()))AND(((((((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0) BETWEEN (0.6154136887816972) AND (rt0.c3)))))AND(((rt0.c0) NOTNULL))))AND(json_array_length(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN ()))AND(((((((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0) BETWEEN (0.6154136887816972) AND (rt0.c3)))))AND(((rt0.c0) NOTNULL))))AND(json_array_length(rt0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (('698248459')OR(rt0.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (('698248459')OR(rt0.c3)) COLLATE NOCASE WHERE ((((((((((rt0.c3 IN ()))AND(((((((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0) BETWEEN (0.6154136887816972) AND (rt0.c3)))))AND(((rt0.c0) NOTNULL))))AND(json_array_length(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN ()))AND(((((((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0) BETWEEN (0.6154136887816972) AND (rt0.c3)))))AND(((rt0.c0) NOTNULL))))AND(json_array_length(rt0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (('698248459')OR(rt0.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (('698248459')OR(rt0.c3)) COLLATE NOCASE WHERE ((((((((((rt0.c3 IN ()))AND(((((((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0) BETWEEN (0.6154136887816972) AND (rt0.c3)))))AND(((rt0.c0) NOTNULL))))AND(json_array_length(rt0.c0))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3) ORDER BY ((((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))/(((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))/(((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3) ORDER BY ((((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))/(((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))/(((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3) ORDER BY ((((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))/(((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST;
SELECT * FROM vt1 WHERE (((('-H鳽x' IN ()))|(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((('-H鳽x' IN ()))|(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((('-H鳽x' IN ()))|(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((('-H鳽x' IN ()))|(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((('-H鳽x' IN ()))|(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (((x'')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY (+ (((((vt1.c0)OR(NULL)))AND(vt1.c0))))  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((x'')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((vt1.c0)OR(NULL)))AND(vt1.c0))))  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (((x'')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY (+ (((((vt1.c0)OR(NULL)))AND(vt1.c0))))  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((x'')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((vt1.c0)OR(NULL)))AND(vt1.c0))))  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (((x'')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY (+ (((((vt1.c0)OR(NULL)))AND(vt1.c0))))  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON rt0.c0 WHERE (((((rt0.c1)%(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON rt0.c0 WHERE (((((rt0.c1)%(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON rt0.c0 WHERE (((((rt0.c1)%(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '04<zdl洋q' END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.35573952359624617 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '04<zdl洋q' END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.35573952359624617 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '04<zdl洋q' END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.35573952359624617 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '04<zdl洋q' END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.35573952359624617 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '04<zdl洋q' END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.35573952359624617 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (- (((((rt0.c3)OR(vt1.c0)))OR(rt0.c0)))) WHERE ((((rt0.c3 IN (vt1.c0, rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (vt1.c0, rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (- (((((rt0.c3)OR(vt1.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (- (((((rt0.c3)OR(vt1.c0)))OR(rt0.c0)))) WHERE ((((rt0.c3 IN (vt1.c0, rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (vt1.c0, rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (- (((((rt0.c3)OR(vt1.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (- (((((rt0.c3)OR(vt1.c0)))OR(rt0.c0)))) WHERE ((((rt0.c3 IN (vt1.c0, rt0.c2))) NOTNULL));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((((((0.08219327301739288)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((((((0.08219327301739288)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) END);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((((((0.08219327301739288)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((((((0.08219327301739288)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) END);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST, CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((((((0.08219327301739288)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) END;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) BETWEEN (((+ (vt1.c0)), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS BLOB))) AND (('*i*_#', ((x'')IS(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) BETWEEN (((+ (vt1.c0)), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS BLOB))) AND (('*i*_#', ((x'')IS(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) BETWEEN (((+ (vt1.c0)), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS BLOB))) AND (('*i*_#', ((x'')IS(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) BETWEEN (((+ (vt1.c0)), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS BLOB))) AND (('*i*_#', ((x'')IS(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) BETWEEN (((+ (vt1.c0)), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS BLOB))) AND (('*i*_#', ((x'')IS(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), ((vt1.c0) IS TRUE)))));
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c0);
SELECT * FROM vt1, rt0 WHERE (DATETIME(rt0.c3 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c1, 0.7882878119640775))) ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((((((((x'')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(rt0.c3 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c1, 0.7882878119640775))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((((((((x'')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) END ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (DATETIME(rt0.c3 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c1, 0.7882878119640775))) ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((((((((x'')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(rt0.c3 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c1, 0.7882878119640775))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((((((((x'')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) END ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (DATETIME(rt0.c3 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c1, 0.7882878119640775))) ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((((((((x'')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(LTRIM(rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c1))))) ORDER BY STRFTIME(CAST(rt0.c3 AS INTEGER), HEX(rt0.c0), 0.7073908537669341);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(LTRIM(rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY STRFTIME(CAST(rt0.c3 AS INTEGER), HEX(rt0.c0), 0.7073908537669341));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(LTRIM(rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c1))))) ORDER BY STRFTIME(CAST(rt0.c3 AS INTEGER), HEX(rt0.c0), 0.7073908537669341);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(LTRIM(rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY STRFTIME(CAST(rt0.c3 AS INTEGER), HEX(rt0.c0), 0.7073908537669341));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(LTRIM(rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c1))))) ORDER BY STRFTIME(CAST(rt0.c3 AS INTEGER), HEX(rt0.c0), 0.7073908537669341);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c0) BETWEEN (rt0.c3) AND (-2.06457379E8)))))OR((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(((rt0.c0) BETWEEN (rt0.c3) AND (-2.06457379E8)))))OR((~ (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c0) BETWEEN (rt0.c3) AND (-2.06457379E8)))))OR((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(((rt0.c0) BETWEEN (rt0.c3) AND (-2.06457379E8)))))OR((~ (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c0) BETWEEN (rt0.c3) AND (-2.06457379E8)))))OR((~ (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT (rt0.c0 IN (rt0.c1)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (rt0.c0 IN (rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT (rt0.c0 IN (rt0.c1)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (rt0.c0 IN (rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT (rt0.c0 IN (rt0.c1)))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((~ (rt0.c1))))<=(((NOT (vt1.c0))))) WHERE (IFNULL(DISTINCT (~ (rt0.c2)), json_array_length(rt0.c3, 0X891c59e))) ORDER BY ((((rt0.c3) NOT NULL))>(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (~ (rt0.c2)), json_array_length(rt0.c3, 0x891c59e))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((~ (rt0.c1))))<=(((NOT (vt1.c0))))) ORDER BY ((((rt0.c3) NOT NULL))>(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((~ (rt0.c1))))<=(((NOT (vt1.c0))))) WHERE (IFNULL(DISTINCT (~ (rt0.c2)), json_array_length(rt0.c3, 0X891c59e))) ORDER BY ((((rt0.c3) NOT NULL))>(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (~ (rt0.c2)), json_array_length(rt0.c3, 0x891c59e))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((~ (rt0.c1))))<=(((NOT (vt1.c0))))) ORDER BY ((((rt0.c3) NOT NULL))>(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((~ (rt0.c1))))<=(((NOT (vt1.c0))))) WHERE (IFNULL(DISTINCT (~ (rt0.c2)), json_array_length(rt0.c3, 0X891c59e))) ORDER BY ((((rt0.c3) NOT NULL))>(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC;
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN 1510415996 END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN 1510415996 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN 1510415996 END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN 1510415996 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN 1510415996 END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)) IN ((rt0.c0 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)) IN ((rt0.c0 IN (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)) IN ((rt0.c0 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)) IN ((rt0.c0 IN (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)) IN ((rt0.c0 IN (rt0.c2))));
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS NUMERIC));
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((((vt1.c0)|(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN -1.243810266E9 ELSE vt1.c0 END, rt0.c0 COLLATE BINARY)) AND (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE NULL END, rt0.c2 COLLATE BINARY)))) ORDER BY vt1.c0 DESC  NULLS FIRST, (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))AND(vt1.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS INTEGER))))OR(CAST(rt0.c0 AS BLOB))))AND(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((((vt1.c0)|(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN -1.243810266E9 ELSE vt1.c0 END, rt0.c0 COLLATE BINARY)) AND (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE NULL END, rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 DESC  NULLS FIRST, (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))AND(vt1.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS INTEGER))))OR(CAST(rt0.c0 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((((vt1.c0)|(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN -1.243810266E9 ELSE vt1.c0 END, rt0.c0 COLLATE BINARY)) AND (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE NULL END, rt0.c2 COLLATE BINARY)))) ORDER BY vt1.c0 DESC  NULLS FIRST, (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))AND(vt1.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS INTEGER))))OR(CAST(rt0.c0 AS BLOB))))AND(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((((vt1.c0)|(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN -1.243810266E9 ELSE vt1.c0 END, rt0.c0 COLLATE BINARY)) AND (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE NULL END, rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 DESC  NULLS FIRST, (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))AND(vt1.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS INTEGER))))OR(CAST(rt0.c0 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((((vt1.c0)|(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN -1.243810266E9 ELSE vt1.c0 END, rt0.c0 COLLATE BINARY)) AND (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE NULL END, rt0.c2 COLLATE BINARY)))) ORDER BY vt1.c0 DESC  NULLS FIRST, (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))AND(vt1.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS INTEGER))))OR(CAST(rt0.c0 AS BLOB))))AND(rt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '{Un,' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END AS NUMERIC)) ORDER BY CAST(((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '{Un,' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)) AS INTEGER) ASC);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '{Un,' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END AS NUMERIC)) ORDER BY CAST(((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '{Un,' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)) AS INTEGER) ASC);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '{Un,' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END AS NUMERIC)) ORDER BY CAST(((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)) AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((+ (LOWER(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (LOWER(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (LOWER(rt0.c3))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)*(rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c3)IS(rt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)IS(rt0.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)*(rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c3)IS(rt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)IS(rt0.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)*(rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c3)IS(rt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (2013574631 COLLATE BINARY) ORDER BY CAST(json_remove(rt0.c2, 'Mu發w7') AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((2013574631 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(json_remove(rt0.c2, 'Mu發w7') AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (2013574631 COLLATE BINARY) ORDER BY CAST(json_remove(rt0.c2, 'Mu發w7') AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((2013574631 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(json_remove(rt0.c2, 'Mu發w7') AS REAL)  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((rt0.c0)>(rt0.c0))) WHERE (((((rt0.c2))!=((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))<>((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((rt0.c0)>(rt0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((rt0.c0)>(rt0.c0))) WHERE (((((rt0.c2))!=((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))<>((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((rt0.c0)>(rt0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON json_valid(((rt0.c0)>(rt0.c0))) WHERE (((((rt0.c2))!=((rt0.c0))) IN ()));
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN (((rt0.c0, rt0.c3, rt0.c0))<((1020703053, rt0.c2, rt0.c1))) THEN CAST(rt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN (((rt0.c0, rt0.c3, rt0.c0))<((1020703053, rt0.c2, rt0.c1))) THEN CAST(rt0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN (((rt0.c0, rt0.c3, rt0.c0))<((1020703053, rt0.c2, rt0.c1))) THEN CAST(rt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN (((rt0.c0, rt0.c3, rt0.c0))<((1020703053, rt0.c2, rt0.c1))) THEN CAST(rt0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN (((rt0.c0, rt0.c3, rt0.c0))<((1020703053, rt0.c2, rt0.c1))) THEN CAST(rt0.c0 AS INTEGER) END);
SELECT * FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)<('-1958639808'))) NOT BETWEEN (x'') AND (((rt0.c0)%(rt0.c3)))) WHERE (((CAST(rt0.c2 AS INTEGER)) BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (((((x'')AND(rt0.c0)))OR(vt1.c0))))) ORDER BY ((1.927742664E9) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (((((x'')AND(rt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)<('-1958639808'))) NOT BETWEEN (x'') AND (((rt0.c0)%(rt0.c3)))) ORDER BY ((1.927742664E9) NOT NULL));
SELECT * FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)<('-1958639808'))) NOT BETWEEN (x'') AND (((rt0.c0)%(rt0.c3)))) WHERE (((CAST(rt0.c2 AS INTEGER)) BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (((((x'')AND(rt0.c0)))OR(vt1.c0))))) ORDER BY ((1.927742664E9) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (((((x'')AND(rt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)<('-1958639808'))) NOT BETWEEN (x'') AND (((rt0.c0)%(rt0.c3)))) ORDER BY ((1.927742664E9) NOT NULL));
SELECT * FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)<('-1958639808'))) NOT BETWEEN (x'') AND (((rt0.c0)%(rt0.c3)))) WHERE (((CAST(rt0.c2 AS INTEGER)) BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (((((x'')AND(rt0.c0)))OR(vt1.c0))))) ORDER BY ((1.927742664E9) NOT NULL);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((vt1.c0 IN ()), ((vt1.c0) IS TRUE)))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0)GLOB(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((vt1.c0 IN ()), ((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0)GLOB(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((vt1.c0 IN ()), ((vt1.c0) IS TRUE)))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0)GLOB(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((vt1.c0 IN ()), ((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0)GLOB(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((vt1.c0 IN ()), ((vt1.c0) IS TRUE)))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0)GLOB(vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) ISNULL)))==(((+ (rt0.c2)))))) ORDER BY ((((rt0.c3) IS TRUE))<>((+ (rt0.c0)))) ASC  NULLS FIRST, ((CASE rt0.c0  WHEN vt1.c0 THEN NULL ELSE rt0.c0 END)&(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1))))  NULLS FIRST, (~ (0.7386789434371491)) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) ISNULL)))==(((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3) IS TRUE))!=((+ (rt0.c0)))) ASC  NULLS FIRST, ((CASE rt0.c0  WHEN vt1.c0 THEN NULL ELSE rt0.c0 END)&(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1))))  NULLS FIRST, (~ (0.7386789434371491)) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) ISNULL)))==(((+ (rt0.c2)))))) ORDER BY ((((rt0.c3) IS TRUE))<>((+ (rt0.c0)))) ASC  NULLS FIRST, ((CASE rt0.c0  WHEN vt1.c0 THEN NULL ELSE rt0.c0 END)&(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1))))  NULLS FIRST, (~ (0.7386789434371491)) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) ISNULL)))==(((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3) IS TRUE))!=((+ (rt0.c0)))) ASC  NULLS FIRST, ((CASE rt0.c0  WHEN vt1.c0 THEN NULL ELSE rt0.c0 END)&(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1))))  NULLS FIRST, (~ (0.7386789434371491)) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) ISNULL)))==(((+ (rt0.c2)))))) ORDER BY ((((rt0.c3) IS TRUE))<>((+ (rt0.c0)))) ASC  NULLS FIRST, ((CASE rt0.c0  WHEN vt1.c0 THEN NULL ELSE rt0.c0 END)&(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1))))  NULLS FIRST, (~ (0.7386789434371491)) DESC;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (- (((6.02867042E8)|(rt0.c1)))), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (- (((6.02867042E8)|(rt0.c1)))), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (- (((6.02867042E8)|(rt0.c1)))), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (- (((6.02867042E8)|(rt0.c1)))), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (- (((6.02867042E8)|(rt0.c1)))), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ROUND(rt0.c1, vt1.c0) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ROUND(rt0.c1, vt1.c0) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ROUND(rt0.c1, vt1.c0) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ROUND(rt0.c1, vt1.c0) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ROUND(rt0.c1, vt1.c0) THEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))*(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))*(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))*(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))*(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))*(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))<<(((vt1.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))<<(((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))<<(((vt1.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))<<(((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))<<(((vt1.c0)*(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (0.4268428948591242);
SELECT SUM(count) FROM (SELECT ((0.4268428948591242) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.4268428948591242);
SELECT SUM(count) FROM (SELECT ((0.4268428948591242) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.4268428948591242);
SELECT * FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c1)<=(vt1.c0)) AS INTEGER) WHERE ((((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c2 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c2 IN (vt1.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c1)<=(vt1.c0)) AS INTEGER));
SELECT * FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c1)<=(vt1.c0)) AS INTEGER) WHERE ((((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c2 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c2 IN (vt1.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c1)<=(vt1.c0)) AS INTEGER));
SELECT * FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c1)<=(vt1.c0)) AS INTEGER) WHERE ((((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c2 IN (vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (LTRIM(vt1.c0, vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LTRIM(vt1.c0, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LTRIM(vt1.c0, vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LTRIM(vt1.c0, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LTRIM(vt1.c0, vt1.c0) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c2) BETWEEN ((vt1.c0 IN ())) AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN ((vt1.c0 IN ())) AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c2) BETWEEN ((vt1.c0 IN ())) AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN ((vt1.c0 IN ())) AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c2) BETWEEN ((vt1.c0 IN ())) AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1 COLLATE BINARY)<>(((rt0.c1) NOT NULL)))) ORDER BY ((((NOT (rt0.c1)), IFNULL(rt0.c2, '1e500'), ((rt0.c0) NOT NULL)))<((CAST(rt0.c2 AS TEXT), CAST(rt0.c1 AS REAL), (rt0.c1 IN (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)<>(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((NOT (rt0.c1)), IFNULL(rt0.c2, '1e500'), ((rt0.c0) NOT NULL)))<((CAST(rt0.c2 AS TEXT), CAST(rt0.c1 AS REAL), (rt0.c1 IN (rt0.c1))))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1 COLLATE BINARY)<>(((rt0.c1) NOT NULL)))) ORDER BY ((((NOT (rt0.c1)), IFNULL(rt0.c2, '1e500'), ((rt0.c0) NOT NULL)))<((CAST(rt0.c2 AS TEXT), CAST(rt0.c1 AS REAL), (rt0.c1 IN (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)<>(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((NOT (rt0.c1)), IFNULL(rt0.c2, '1e500'), ((rt0.c0) NOT NULL)))<((CAST(rt0.c2 AS TEXT), CAST(rt0.c1 AS REAL), (rt0.c1 IN (rt0.c1))))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1 COLLATE BINARY)<>(((rt0.c1) NOT NULL)))) ORDER BY ((((NOT (rt0.c1)), IFNULL(rt0.c2, '1e500'), ((rt0.c0) NOT NULL)))<((CAST(rt0.c2 AS TEXT), CAST(rt0.c1 AS REAL), (rt0.c1 IN (rt0.c1))))) ASC;
SELECT * FROM vt1 WHERE (CASE -660918387  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE -660918387  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE -660918387  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE -660918387  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE -660918387  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT * FROM vt1 WHERE (((LIKE(vt1.c0, vt1.c0)) BETWEEN (CAST('1675814890' AS TEXT)) AND (((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt1.c0, vt1.c0)) BETWEEN (CAST('1675814890' AS TEXT)) AND (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((LIKE(vt1.c0, vt1.c0)) BETWEEN (CAST('1675814890' AS TEXT)) AND (((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt1.c0, vt1.c0)) BETWEEN (CAST('1675814890' AS TEXT)) AND (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((LIKE(vt1.c0, vt1.c0)) BETWEEN (CAST('1675814890' AS TEXT)) AND (((vt1.c0)OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) BETWEEN (((0.7856709807297751) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY rtreenode(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0))==((vt1.c0))))  NULLS FIRST, (((((vt1.c0)-(vt1.c0)), ((0.1637128851980133)||(vt1.c0)), NULL))<(((+ (vt1.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0))) BETWEEN (((0.7856709807297751) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY rtreenode(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0))==((vt1.c0))))  NULLS FIRST, (((((vt1.c0)-(vt1.c0)), ((0.1637128851980133)||(vt1.c0)), NULL))<(((+ (vt1.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER)))) DESC);
SELECT * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) BETWEEN (((0.7856709807297751) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY rtreenode(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0))==((vt1.c0))))  NULLS FIRST, (((((vt1.c0)-(vt1.c0)), ((0.1637128851980133)||(vt1.c0)), NULL))<(((+ (vt1.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0))) BETWEEN (((0.7856709807297751) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY rtreenode(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0))==((vt1.c0))))  NULLS FIRST, (((((vt1.c0)-(vt1.c0)), ((0.1637128851980133)||(vt1.c0)), NULL))<(((+ (vt1.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER)))) DESC);
SELECT * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) BETWEEN (((0.7856709807297751) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY rtreenode(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0))==((vt1.c0))))  NULLS FIRST, (((((vt1.c0)-(vt1.c0)), ((0.1637128851980133)||(vt1.c0)), NULL))<(((+ (vt1.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER)))) DESC;
SELECT COUNT(*) FROM vt1 WHERE ('-399570077') ORDER BY (~ (x'cd9347a0')) DESC  NULLS LAST, ((vt1.c0 IN (vt1.c0)) IN ()) ASC  NULLS FIRST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-399570077') IS TRUE)  as count FROM vt1 ORDER BY (~ (x'cd9347a0')) DESC  NULLS LAST, ((vt1.c0 IN (vt1.c0)) IN ()) ASC  NULLS FIRST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ('-399570077') ORDER BY (~ (x'cd9347a0')) DESC  NULLS LAST, ((vt1.c0 IN (vt1.c0)) IN ()) ASC  NULLS FIRST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-399570077') IS TRUE)  as count FROM vt1 ORDER BY (~ (x'cd9347a0')) DESC  NULLS LAST, ((vt1.c0 IN (vt1.c0)) IN ()) ASC  NULLS FIRST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ('-399570077') ORDER BY (~ (x'cd9347a0')) DESC  NULLS LAST, ((vt1.c0 IN (vt1.c0)) IN ()) ASC  NULLS FIRST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((- (vt1.c0)))));
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE ((('!PDSWaD' COLLATE BINARY)&(TRIM(rt0.c3)))) ORDER BY (((rt0.c0))<=((rt0.c3))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((('!PDSWaD' COLLATE BINARY)&(TRIM(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0))<=((rt0.c3))) COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0 WHERE ((('!PDSWaD' COLLATE BINARY)&(TRIM(rt0.c3)))) ORDER BY (((rt0.c0))<=((rt0.c3))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((('!PDSWaD' COLLATE BINARY)&(TRIM(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0))<=((rt0.c3))) COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0 WHERE ((('!PDSWaD' COLLATE BINARY)&(TRIM(rt0.c3)))) ORDER BY (((rt0.c0))<=((rt0.c3))) COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((rt0.c3 COLLATE NOCASE)/(NULLIF(rt0.c0, rt0.c1))) DESC  NULLS LAST, ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c0)-(rt0.c3))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((rt0.c3 COLLATE NOCASE)/(NULLIF(rt0.c0, rt0.c1))) DESC  NULLS LAST, ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c0)-(rt0.c3))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((rt0.c3 COLLATE NOCASE)/(NULLIF(rt0.c0, rt0.c1))) DESC  NULLS LAST, ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c0)-(rt0.c3))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((rt0.c3 COLLATE NOCASE)/(NULLIF(rt0.c0, rt0.c1))) DESC  NULLS LAST, ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c0)-(rt0.c3))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((rt0.c3 COLLATE NOCASE)/(NULLIF(rt0.c0, rt0.c1))) DESC  NULLS LAST, ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c0)-(rt0.c3))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<>(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))<>(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<>(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))<>(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<>(((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (ABS(DISTINCT rt0.c1)) ORDER BY CASE CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END  WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(x'' AS NUMERIC) END ASC, CAST(((rt0.c1) NOT NULL) AS NUMERIC), ((vt1.c0 IN (rt0.c2, rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c1)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CASE CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END  WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(x'' AS NUMERIC) END ASC, CAST(((rt0.c1) NOT NULL) AS NUMERIC), ((vt1.c0 IN (rt0.c2, rt0.c0)) IN ()) ASC);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (ABS(DISTINCT rt0.c1)) ORDER BY CASE CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END  WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(x'' AS NUMERIC) END ASC, CAST(((rt0.c1) NOT NULL) AS NUMERIC), ((vt1.c0 IN (rt0.c2, rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c1)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CASE CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END  WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(x'' AS NUMERIC) END ASC, CAST(((rt0.c1) NOT NULL) AS NUMERIC), ((vt1.c0 IN (rt0.c2, rt0.c0)) IN ()) ASC);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (ABS(DISTINCT rt0.c1)) ORDER BY CASE CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END  WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(x'' AS NUMERIC) END ASC, CAST(((rt0.c1) NOT NULL) AS NUMERIC), ((vt1.c0 IN (rt0.c2, rt0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)|(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)|(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)|(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)|(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)|(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1)%('H诞')))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)%('H诞'))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1)%('H诞')))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)%('H诞'))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1)%('H诞')))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)GLOB(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)GLOB(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)GLOB(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)GLOB(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)GLOB(rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE TYPEOF(rt0.c1)  WHEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 END THEN CAST(rt0.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE WHEN vt1.c0 THEN x'a72ba658' ELSE rt0.c1 END THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1))) END) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(rt0.c1)  WHEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 END THEN CAST(rt0.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE WHEN vt1.c0 THEN x'a72ba658' ELSE rt0.c1 END THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1))) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE TYPEOF(rt0.c1)  WHEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 END THEN CAST(rt0.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE WHEN vt1.c0 THEN x'a72ba658' ELSE rt0.c1 END THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1))) END) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(rt0.c1)  WHEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 END THEN CAST(rt0.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE WHEN vt1.c0 THEN x'a72ba658' ELSE rt0.c1 END THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1))) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE TYPEOF(rt0.c1)  WHEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 END THEN CAST(rt0.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE WHEN vt1.c0 THEN x'a72ba658' ELSE rt0.c1 END THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1))) END) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((ROUND(vt1.c0, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((ROUND(vt1.c0, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0)) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)>=(vt1.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>=(vt1.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)>=(vt1.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>=(vt1.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)>=(vt1.c0))) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY ((CAST(vt1.c0 AS BLOB))||(vt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))||(vt1.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY ((CAST(vt1.c0 AS BLOB))||(vt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))||(vt1.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY ((CAST(vt1.c0 AS BLOB))||(vt1.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END IN (TRIM(rt0.c1, rt0.c3)))) ORDER BY x'6474191e', CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END THEN rt0.c3 WHEN CASE WHEN '-1105552584' THEN rt0.c0 END THEN ((rt0.c2)<=(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END IN (TRIM(rt0.c1, rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY x'6474191e', CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END THEN rt0.c3 WHEN CASE WHEN '-1105552584' THEN rt0.c0 END THEN ((rt0.c2)<=(rt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END IN (TRIM(rt0.c1, rt0.c3)))) ORDER BY x'6474191e', CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END THEN rt0.c3 WHEN CASE WHEN '-1105552584' THEN rt0.c0 END THEN ((rt0.c2)<=(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END IN (TRIM(rt0.c1, rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY x'6474191e', CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END THEN rt0.c3 WHEN CASE WHEN '-1105552584' THEN rt0.c0 END THEN ((rt0.c2)<=(rt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END IN (TRIM(rt0.c1, rt0.c3)))) ORDER BY x'6474191e', CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END THEN rt0.c3 WHEN CASE WHEN '-1105552584' THEN rt0.c0 END THEN ((rt0.c2)<=(rt0.c0)) END  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY (((rt0.c2 IN ()))GLOB(LIKELY(rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))GLOB(LIKELY(rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY (((rt0.c2 IN ()))GLOB(LIKELY(rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))GLOB(LIKELY(rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY (((rt0.c2 IN ()))GLOB(LIKELY(rt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((('烛2M}꨸' IN (rt0.c1)))OR('146634754')))AND(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2)))))AND((((rt0.c3))>((rt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((('烛2M}꨸' IN (rt0.c1)))OR('146634754')))AND(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2)))))AND((((rt0.c3))>((rt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((('烛2M}꨸' IN (rt0.c1)))OR('146634754')))AND(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2)))))AND((((rt0.c3))>((rt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((('烛2M}꨸' IN (rt0.c1)))OR('146634754')))AND(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2)))))AND((((rt0.c3))>((rt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((('烛2M}꨸' IN (rt0.c1)))OR('146634754')))AND(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2)))))AND((((rt0.c3))>((rt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (((0.19033040199847873) IS TRUE)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.19033040199847873) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((0.19033040199847873) IS TRUE)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.19033040199847873) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((0.19033040199847873) IS TRUE)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((-1760790878)) AND ((rt0.c2)))) AND (CAST(rt0.c3 AS NUMERIC)))) ORDER BY (((rt0.c3, rt0.c1, rt0.c0)) BETWEEN (('-34443186', (((rt0.c0, rt0.c3, rt0.c0))>((rt0.c2, '', rt0.c0))), (rt0.c0 IN ()))) AND ((-730734126, rt0.c3 COLLATE BINARY, (((0.8323745549541374, rt0.c1, rt0.c3))>=((0xffffffff9ca9b48e, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((-1760790878)) AND ((rt0.c2)))) AND (CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c1, rt0.c0)) BETWEEN (('-34443186', (((rt0.c0, rt0.c3, rt0.c0))>((rt0.c2, '', rt0.c0))), (rt0.c0 IN ()))) AND ((-730734126, rt0.c3 COLLATE BINARY, (((0.8323745549541374, rt0.c1, rt0.c3))>=((0xffffffff9ca9b48e, rt0.c1, rt0.c1)))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((-1760790878)) AND ((rt0.c2)))) AND (CAST(rt0.c3 AS NUMERIC)))) ORDER BY (((rt0.c3, rt0.c1, rt0.c0)) BETWEEN (('-34443186', (((rt0.c0, rt0.c3, rt0.c0))>((rt0.c2, '', rt0.c0))), (rt0.c0 IN ()))) AND ((-730734126, rt0.c3 COLLATE BINARY, (((0.8323745549541374, rt0.c1, rt0.c3))>=((0xffffffff9ca9b48e, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((-1760790878)) AND ((rt0.c2)))) AND (CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c1, rt0.c0)) BETWEEN (('-34443186', (((rt0.c0, rt0.c3, rt0.c0))>((rt0.c2, '', rt0.c0))), (rt0.c0 IN ()))) AND ((-730734126, rt0.c3 COLLATE BINARY, (((0.8323745549541374, rt0.c1, rt0.c3))>=((0xffffffff9ca9b48e, rt0.c1, rt0.c1)))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((-1760790878)) AND ((rt0.c2)))) AND (CAST(rt0.c3 AS NUMERIC)))) ORDER BY (((rt0.c3, rt0.c1, rt0.c0)) BETWEEN (('-34443186', (((rt0.c0, rt0.c3, rt0.c0))>((rt0.c2, '', rt0.c0))), (rt0.c0 IN ()))) AND ((-730734126, rt0.c3 COLLATE BINARY, (((0.8323745549541374, rt0.c1, rt0.c3))>=((0xffffffff9ca9b48e, rt0.c1, rt0.c1))))));
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c3)<(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))AND(((vt1.c0)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)<(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))AND(((vt1.c0)<(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c3)<(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))AND(((vt1.c0)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)<(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))AND(((vt1.c0)<(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c3)<(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))AND(((vt1.c0)<(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (HEX(DISTINCT vt1.c0)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE((rt0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (HEX(DISTINCT vt1.c0)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE((rt0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (HEX(DISTINCT vt1.c0)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE((rt0.c1 IN ()))) DESC;
SELECT * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))%(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))%(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))%(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))%(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))%(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c1, vt1.c0))) COLLATE NOCASE) ORDER BY CAST(((x'')=(rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c1, vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((x'')=(rt0.c1)) AS REAL));
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c1, vt1.c0))) COLLATE NOCASE) ORDER BY CAST(((x'')=(rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c1, vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((x'')=(rt0.c1)) AS REAL));
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c1, vt1.c0))) COLLATE NOCASE) ORDER BY CAST(((x'')=(rt0.c1)) AS REAL);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) NOTNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) ISNULL))));
SELECT ALL * FROM rt0, vt1 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c2)<(rt0.c3)) THEN ((rt0.c3)IS(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c2)<(rt0.c3)) THEN ((rt0.c3)IS(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c2)<(rt0.c3)) THEN ((rt0.c3)IS(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c2)<(rt0.c3)) THEN ((rt0.c3)IS(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c2)<(rt0.c3)) THEN ((rt0.c3)IS(rt0.c3)) END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((~ (0.024782005098452076)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.024782005098452076))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (0.024782005098452076)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.024782005098452076))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (0.024782005098452076)));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((json_extract(vt1.c0, rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_extract(vt1.c0, rt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((json_extract(vt1.c0, rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_extract(vt1.c0, rt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((json_extract(vt1.c0, rt0.c0) IN ()));
SELECT ALL * FROM rt0 WHERE (-8.4458747E8);
SELECT SUM(count) FROM (SELECT ((-8.4458747E8) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (-8.4458747E8);
SELECT SUM(count) FROM (SELECT ((-8.4458747E8) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (-8.4458747E8);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.6212483107662348 AS NUMERIC)) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0)<=(vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6212483107662348 AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0)<=(vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.6212483107662348 AS NUMERIC)) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0)<=(vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6212483107662348 AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0)<=(vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.6212483107662348 AS NUMERIC)) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0)<=(vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xfffffffffaadbd61)GLOB(((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((0xfffffffffaadbd61)GLOB(((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xfffffffffaadbd61)GLOB(((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((0xfffffffffaadbd61)GLOB(((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xfffffffffaadbd61)GLOB(((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) ISNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c2)<=(rt0.c3)) THEN rt0.c2 END) ORDER BY load_extension(-1760790878, ((rt0.c0)<<(rt0.c1)))  NULLS LAST, ((((((rt0.c0)>(rt0.c0)))OR(((vt1.c0)%(0.4617606811351752)))))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)<=(rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY load_extension(-1760790878, ((rt0.c0)<<(rt0.c1)))  NULLS LAST, ((((((rt0.c0)>(rt0.c0)))OR(((vt1.c0)%(0.4617606811351752)))))AND(NULL)) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c2)<=(rt0.c3)) THEN rt0.c2 END) ORDER BY load_extension(-1760790878, ((rt0.c0)<<(rt0.c1)))  NULLS LAST, ((((((rt0.c0)>(rt0.c0)))OR(((vt1.c0)%(0.4617606811351752)))))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)<=(rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY load_extension(-1760790878, ((rt0.c0)<<(rt0.c1)))  NULLS LAST, ((((((rt0.c0)>(rt0.c0)))OR(((vt1.c0)%(0.4617606811351752)))))AND(NULL)) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (DATETIME(rt0.c1 COLLATE BINARY, CAST(vt1.c0 AS REAL), (((rt0.c1))>((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c1 COLLATE BINARY, CAST(vt1.c0 AS REAL), (((rt0.c1))>((rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (DATETIME(rt0.c1 COLLATE BINARY, CAST(vt1.c0 AS REAL), (((rt0.c1))>((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c1 COLLATE BINARY, CAST(vt1.c0 AS REAL), (((rt0.c1))>((rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (DATETIME(rt0.c1 COLLATE BINARY, CAST(vt1.c0 AS REAL), (((rt0.c1))>((rt0.c2)))));
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0) IS FALSE)))=((((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) IS FALSE)))==((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0) IS FALSE)))=((((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) IS FALSE)))==((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0) IS FALSE)))=((((rt0.c2) IS FALSE)))));
SELECT * FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0.37832505081919576 AS REAL)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0.37832505081919576 AS REAL)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0.37832505081919576 AS REAL)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0.37832505081919576 AS REAL)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0.37832505081919576 AS REAL)) AND (((vt1.c0) NOT NULL))));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '880318214' THEN rt0.c1 END) AND (((rt0.c2)GLOB(rt0.c3))))) ORDER BY ((((x'') BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '880318214' THEN rt0.c1 END) AND (((rt0.c2)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'') BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (rt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '880318214' THEN rt0.c1 END) AND (((rt0.c2)GLOB(rt0.c3))))) ORDER BY ((((x'') BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '880318214' THEN rt0.c1 END) AND (((rt0.c2)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'') BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (rt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '880318214' THEN rt0.c1 END) AND (((rt0.c2)GLOB(rt0.c3))))) ORDER BY ((((x'') BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (rt0.c0)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (((vt1.c0)*(rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)*(rt0.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (((vt1.c0)*(rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)*(rt0.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (((vt1.c0)*(rt0.c3)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)||(-1537247874)))>(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(-1537247874)))>(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)||(-1537247874)))>(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(-1537247874)))>(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)||(-1537247874)))>(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) AS REAL);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((('ƾA')AND(rt0.c1)))OR(rt0.c2)), rt0.c3, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c0) IS TRUE), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((('ƾA')AND(rt0.c1)))OR(rt0.c2)), rt0.c3, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c0) IS TRUE), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((('ƾA')AND(rt0.c1)))OR(rt0.c2)), rt0.c3, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c0) IS TRUE), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((('ƾA')AND(rt0.c1)))OR(rt0.c2)), rt0.c3, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c0) IS TRUE), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((('ƾA')AND(rt0.c1)))OR(rt0.c2)), rt0.c3, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND ((((rt0.c0) IS TRUE), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('r>N' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('r>N' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('r>N' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('r>N' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('r>N' COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1)LIKE(vt1.c0))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.09187699914031378) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END THEN (rt0.c1 IN (rt0.c1, rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN '200165553' COLLATE RTRIM ELSE NULL END) ORDER BY ((((rt0.c1)>=(rt0.c1)))<(((rt0.c3)<=(x''))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)LIKE(vt1.c0))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.09187699914031378) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END THEN (rt0.c1 IN (rt0.c1, rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN '200165553' COLLATE RTRIM ELSE NULL END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)>=(rt0.c1)))<(((rt0.c3)<=(x'')))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1)LIKE(vt1.c0))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.09187699914031378) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END THEN (rt0.c1 IN (rt0.c1, rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN '200165553' COLLATE RTRIM ELSE NULL END) ORDER BY ((((rt0.c1)>=(rt0.c1)))<(((rt0.c3)<=(x''))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)LIKE(vt1.c0))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.09187699914031378) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END THEN (rt0.c1 IN (rt0.c1, rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN '200165553' COLLATE RTRIM ELSE NULL END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)>=(rt0.c1)))<(((rt0.c3)<=(x'')))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1)LIKE(vt1.c0))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.09187699914031378) THEN ((vt1.c0)GLOB(rt0.c0)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END THEN (rt0.c1 IN (rt0.c1, rt0.c1)) WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN '200165553' COLLATE RTRIM ELSE NULL END) ORDER BY ((((rt0.c1)>=(rt0.c1)))<(((rt0.c3)<=(x''))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- ('1183634828')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- ('1183634828')) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- ('1183634828')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- ('1183634828')) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- ('1183634828')) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt1 WHERE (((x'c58c') ISNULL)) ORDER BY vt1.c0 ASC  NULLS LAST, ((NULL) NOT NULL) ASC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'c58c') ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST, ((NULL) NOT NULL) ASC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) IS FALSE) ASC);
SELECT * FROM vt1 WHERE (((x'c58c') ISNULL)) ORDER BY vt1.c0 ASC  NULLS LAST, ((NULL) NOT NULL) ASC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'c58c') ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST, ((NULL) NOT NULL) ASC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) IS FALSE) ASC);
SELECT * FROM vt1 WHERE (((x'c58c') ISNULL)) ORDER BY vt1.c0 ASC  NULLS LAST, ((NULL) NOT NULL) ASC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) IS FALSE) ASC;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c3)+(rt0.c3))  WHEN ((rt0.c2)+(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)+(rt0.c3))  WHEN ((rt0.c2)+(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c3)+(rt0.c3))  WHEN ((rt0.c2)+(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)+(rt0.c3))  WHEN ((rt0.c2)+(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c3)+(rt0.c3))  WHEN ((rt0.c2)+(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END);
SELECT * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((((vt1.c0)|(vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)GLOB(vt1.c0))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)|(vt1.c0))) NOT NULL));
SELECT * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((((vt1.c0)|(vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)GLOB(vt1.c0))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)|(vt1.c0))) NOT NULL));
SELECT * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((((vt1.c0)|(vt1.c0))) NOT NULL);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1))LIKE(((rt0.c1)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c1))LIKE(((rt0.c1)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1))LIKE(((rt0.c1)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c1))LIKE(((rt0.c1)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1))LIKE(((rt0.c1)GLOB(rt0.c3)))));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)&(rt0.c2)))*((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(rt0.c2)))*((+ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)&(rt0.c2)))*((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(rt0.c2)))*((+ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)&(rt0.c2)))*((+ (rt0.c3)))));
SELECT COUNT(*) FROM vt1 WHERE (((0.320859498645658) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.320859498645658) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((0.320859498645658) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.320859498645658) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((0.320859498645658) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))) AND ('g\' COLLATE RTRIM))) ORDER BY CASE IFNULL(rt0.c1, rt0.c0)  WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c1))) ELSE SQLITE_VERSION() END DESC  NULLS LAST, ((((rt0.c1)IS(rt0.c3)))&((0X7783163f IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))) AND ('g\' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CASE IFNULL(rt0.c1, rt0.c0)  WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c1))) ELSE SQLITE_VERSION() END DESC  NULLS LAST, ((((rt0.c1)IS(rt0.c3)))&((0X7783163f IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))) AND ('g\' COLLATE RTRIM))) ORDER BY CASE IFNULL(rt0.c1, rt0.c0)  WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c1))) ELSE SQLITE_VERSION() END DESC  NULLS LAST, ((((rt0.c1)IS(rt0.c3)))&((0X7783163f IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))) AND ('g\' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CASE IFNULL(rt0.c1, rt0.c0)  WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c1))) ELSE SQLITE_VERSION() END DESC  NULLS LAST, ((((rt0.c1)IS(rt0.c3)))&((0X7783163f IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))) AND ('g\' COLLATE RTRIM))) ORDER BY CASE IFNULL(rt0.c1, rt0.c0)  WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c1))) ELSE SQLITE_VERSION() END DESC  NULLS LAST, ((((rt0.c1)IS(rt0.c3)))&((0X7783163f IN ())));
SELECT COUNT(*) FROM rt0, vt1 WHERE ('-9223372036854775808') ORDER BY ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0))) BETWEEN (HEX(DISTINCT rt0.c3)) AND (((rt0.c1)-(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-9223372036854775808') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0))) BETWEEN (HEX(DISTINCT rt0.c3)) AND (((rt0.c1)-(rt0.c3)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('-9223372036854775808') ORDER BY ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0))) BETWEEN (HEX(DISTINCT rt0.c3)) AND (((rt0.c1)-(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-9223372036854775808') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0))) BETWEEN (HEX(DISTINCT rt0.c3)) AND (((rt0.c1)-(rt0.c3)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('-9223372036854775808') ORDER BY ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0))) BETWEEN (HEX(DISTINCT rt0.c3)) AND (((rt0.c1)-(rt0.c3)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((('-177464849')AND((rt0.c2 IN ()))))AND(((vt1.c0)|(rt0.c0)))) WHERE (((((0x7480b22f)>=(rt0.c1))) ISNULL)) ORDER BY ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((0X7480b22f)>=(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((('-177464849')AND((rt0.c2 IN ()))))AND(((vt1.c0)|(rt0.c0)))) ORDER BY ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((('-177464849')AND((rt0.c2 IN ()))))AND(((vt1.c0)|(rt0.c0)))) WHERE (((((0x7480b22f)>=(rt0.c1))) ISNULL)) ORDER BY ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((0X7480b22f)>=(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((('-177464849')AND((rt0.c2 IN ()))))AND(((vt1.c0)|(rt0.c0)))) ORDER BY ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((('-177464849')AND((rt0.c2 IN ()))))AND(((vt1.c0)|(rt0.c0)))) WHERE (((((0x7480b22f)>=(rt0.c1))) ISNULL)) ORDER BY ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), rt0.c1 COLLATE BINARY))<=(((NOT (rt0.c3)), (rt0.c0 IN ()), (NOT (rt0.c3)))))) ORDER BY ((((SQLITE_SOURCE_ID())AND(rt0.c3)))AND((rt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), rt0.c1 COLLATE BINARY))<=(((NOT (rt0.c3)), (rt0.c0 IN ()), (NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((SQLITE_SOURCE_ID())AND(rt0.c3)))AND((rt0.c2 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), rt0.c1 COLLATE BINARY))<=(((NOT (rt0.c3)), (rt0.c0 IN ()), (NOT (rt0.c3)))))) ORDER BY ((((SQLITE_SOURCE_ID())AND(rt0.c3)))AND((rt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), rt0.c1 COLLATE BINARY))<=(((NOT (rt0.c3)), (rt0.c0 IN ()), (NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((SQLITE_SOURCE_ID())AND(rt0.c3)))AND((rt0.c2 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND ((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((x'' IN ())) AND (vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND ((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((x'' IN ())) AND (vt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND ((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((x'' IN ())) AND (vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND ((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((x'' IN ())) AND (vt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND ((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((x'' IN ())) AND (vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))AND(((rt0.c3) NOTNULL))))OR(CAST(rt0.c0 AS NUMERIC))) WHERE (((rt0.c3)OR(((rt0.c0)<>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)OR(((rt0.c0)<>(rt0.c3))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))AND(((rt0.c3) NOTNULL))))OR(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))AND(((rt0.c3) NOTNULL))))OR(CAST(rt0.c0 AS NUMERIC))) WHERE (((rt0.c3)OR(((rt0.c0)<>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)OR(((rt0.c0)<>(rt0.c3))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))AND(((rt0.c3) NOTNULL))))OR(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))AND(((rt0.c3) NOTNULL))))OR(CAST(rt0.c0 AS NUMERIC))) WHERE (((rt0.c3)OR(((rt0.c0)<>(rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c0)IS NOT(rt0.c1))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN (((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c0)IS NOT(rt0.c1))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN (((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c0)IS NOT(rt0.c1))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN rt0 ON (((rt0.c3) NOTNULL) IN ()) WHERE (((GLOB(0.5425471893634238, rt0.c1))*(((rt0.c0)==(rt0.c1))))) ORDER BY IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, vt1.c0), rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((GLOB(0.5425471893634238, rt0.c1))*(((rt0.c0)==(rt0.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c3) NOTNULL) IN ()) ORDER BY IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, vt1.c0), rt0.c0  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON (((rt0.c3) NOTNULL) IN ()) WHERE (((GLOB(0.5425471893634238, rt0.c1))*(((rt0.c0)==(rt0.c1))))) ORDER BY IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, vt1.c0), rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((GLOB(0.5425471893634238, rt0.c1))*(((rt0.c0)==(rt0.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c3) NOTNULL) IN ()) ORDER BY IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, vt1.c0), rt0.c0  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON (((rt0.c3) NOTNULL) IN ()) WHERE (((GLOB(0.5425471893634238, rt0.c1))*(((rt0.c0)==(rt0.c1))))) ORDER BY IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, vt1.c0), rt0.c0  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (TRIM(vt1.c0)) AND ((((vt1.c0))<((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (TRIM(vt1.c0)) AND ((((vt1.c0))<((vt1.c0))))));
SELECT * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (TRIM(vt1.c0)) AND ((((vt1.c0))<((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (TRIM(vt1.c0)) AND ((((vt1.c0))<((vt1.c0))))));
SELECT * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (TRIM(vt1.c0)) AND ((((vt1.c0))<((vt1.c0)))));
SELECT * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0)))))) ORDER BY '-1760790878'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>=((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY '-1760790878'  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0)))))) ORDER BY '-1760790878'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>=((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY '-1760790878'  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))LIKE((((vt1.c0))<((vt1.c0)))))) ORDER BY '-1760790878'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NULL, (+ (rt0.c1)), ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3))))=((((vt1.c0)|(vt1.c0)), ((rt0.c0) IS FALSE), CAST(rt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, (+ (rt0.c1)), ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3))))=((((vt1.c0)|(vt1.c0)), ((rt0.c0) IS FALSE), CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NULL, (+ (rt0.c1)), ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3))))=((((vt1.c0)|(vt1.c0)), ((rt0.c0) IS FALSE), CAST(rt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, (+ (rt0.c1)), ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3))))=((((vt1.c0)|(vt1.c0)), ((rt0.c0) IS FALSE), CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NULL, (+ (rt0.c1)), ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3))))=((((vt1.c0)|(vt1.c0)), ((rt0.c0) IS FALSE), CAST(rt0.c1 AS REAL)))));
SELECT * FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE ('-1257277719') ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)>>(vt1.c0))));
SELECT SUM(count) FROM (SELECT (('-1257277719') IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)>>(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ('-1257277719') ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)>>(vt1.c0))));
SELECT SUM(count) FROM (SELECT (('-1257277719') IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)>>(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ('-1257277719') ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)>>(vt1.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((~ (rt0.c0)))OR(((rt0.c3) ISNULL))))OR(((rt0.c3)==(rt0.c0))))) ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(((rt0.c0) IS FALSE))))OR(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c0)))OR(((rt0.c3) ISNULL))))OR(((rt0.c3)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(((rt0.c0) IS FALSE))))OR(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((~ (rt0.c0)))OR(((rt0.c3) ISNULL))))OR(((rt0.c3)==(rt0.c0))))) ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(((rt0.c0) IS FALSE))))OR(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c0)))OR(((rt0.c3) ISNULL))))OR(((rt0.c3)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(((rt0.c0) IS FALSE))))OR(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((~ (rt0.c0)))OR(((rt0.c3) ISNULL))))OR(((rt0.c3)==(rt0.c0))))) ORDER BY ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(((rt0.c0) IS FALSE))))OR(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) END) ORDER BY (((vt1.c0 IN (vt1.c0)))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, (CASE WHEN vt1.c0 THEN x'' END IN (CAST(vt1.c0 AS NUMERIC), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, (CASE WHEN vt1.c0 THEN x'' END IN (CAST(vt1.c0 AS NUMERIC), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) END) ORDER BY (((vt1.c0 IN (vt1.c0)))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, (CASE WHEN vt1.c0 THEN x'' END IN (CAST(vt1.c0 AS NUMERIC), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, (CASE WHEN vt1.c0 THEN x'' END IN (CAST(vt1.c0 AS NUMERIC), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) END) ORDER BY (((vt1.c0 IN (vt1.c0)))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, (CASE WHEN vt1.c0 THEN x'' END IN (CAST(vt1.c0 AS NUMERIC), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((UPPER(DISTINCT vt1.c0))&((((-132910819))>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt1.c0))&((((-132910819))>((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((UPPER(DISTINCT vt1.c0))&((((-132910819))>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt1.c0))&((((-132910819))>((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((UPPER(DISTINCT vt1.c0))&((((-132910819))>((rt0.c1))))));
SELECT ALL * FROM vt1 WHERE (json_object(HEX(DISTINCT vt1.c0), PRINTF(vt1.c0), ((vt1.c0)<>(NULL)), '-367054409'));
SELECT SUM(count) FROM (SELECT ((json_object(HEX(DISTINCT vt1.c0), PRINTF(vt1.c0), ((vt1.c0)<>(NULL)), '-367054409')) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (json_object(HEX(DISTINCT vt1.c0), PRINTF(vt1.c0), ((vt1.c0)<>(NULL)), '-367054409'));
SELECT SUM(count) FROM (SELECT ((json_object(HEX(DISTINCT vt1.c0), PRINTF(vt1.c0), ((vt1.c0)<>(NULL)), '-367054409')) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1, rt0 WHERE (((x'') BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (0.6892543775161255))) AND ((((rt0.c1, vt1.c0, x''))>((rt0.c2, rt0.c3, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (0.6892543775161255))) AND ((((rt0.c1, vt1.c0, x''))>((rt0.c2, rt0.c3, rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((x'') BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (0.6892543775161255))) AND ((((rt0.c1, vt1.c0, x''))>((rt0.c2, rt0.c3, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (0.6892543775161255))) AND ((((rt0.c1, vt1.c0, x''))>((rt0.c2, rt0.c3, rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((x'') BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (0.6892543775161255))) AND ((((rt0.c1, vt1.c0, x''))>((rt0.c2, rt0.c3, rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (rt0.c3) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3))) NOT BETWEEN (rt0.c3) AND (x''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (rt0.c3) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3))) NOT BETWEEN (rt0.c3) AND (x''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (rt0.c3) AND (x'')));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-98983153') ISNULL)) ISNULL)) ORDER BY vt1.c0 ASC, (((vt1.c0 IN (vt1.c0)))+(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('-98983153') ISNULL)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, (((vt1.c0 IN (vt1.c0)))+(((vt1.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-98983153') ISNULL)) ISNULL)) ORDER BY vt1.c0 ASC, (((vt1.c0 IN (vt1.c0)))+(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('-98983153') ISNULL)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, (((vt1.c0 IN (vt1.c0)))+(((vt1.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-98983153') ISNULL)) ISNULL)) ORDER BY vt1.c0 ASC, (((vt1.c0 IN (vt1.c0)))+(((vt1.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY 0.5681383463114857;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY 0.5681383463114857);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY 0.5681383463114857;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY 0.5681383463114857);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY 0.5681383463114857;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3)AND(x'')))AND(((rt0.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND(x'')))AND(((rt0.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3)AND(x'')))AND(((rt0.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND(x'')))AND(((rt0.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3)AND(x'')))AND(((rt0.c0)<(vt1.c0)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)&(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)&(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)&(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)&(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)&(rt0.c2)) IN ()));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)IS NOT(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS NOT(NULL)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)IS NOT(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS NOT(NULL)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)IS NOT(NULL)) IN ()));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c3 AS REAL) THEN ((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c3 AS REAL) THEN ((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0)) ELSE NULL END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c3 AS REAL) THEN ((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c3 AS REAL) THEN ((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0)) ELSE NULL END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c3 AS REAL) THEN ((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0)) ELSE NULL END);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (rt0.c0 IN ()) END) ORDER BY CAST((~ (0Xffffffff9e4fd16f)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((~ (0xffffffff9e4fd16f)) AS NUMERIC));
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (rt0.c0 IN ()) END) ORDER BY CAST((~ (0Xffffffff9e4fd16f)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((~ (0xffffffff9e4fd16f)) AS NUMERIC));
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (rt0.c0 IN ()) END) ORDER BY CAST((~ (0Xffffffff9e4fd16f)) AS NUMERIC);
SELECT ALL * FROM vt1 WHERE (highlight(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()), (('')|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (NOT ((+ (vt1.c0)))) DESC  NULLS LAST, ((((vt1.c0)|(vt1.c0)))<>((0.018691106593025086 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((highlight(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()), (('')|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((+ (vt1.c0)))) DESC  NULLS LAST, ((((vt1.c0)|(vt1.c0)))<>((0.018691106593025086 IN (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (highlight(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()), (('')|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (NOT ((+ (vt1.c0)))) DESC  NULLS LAST, ((((vt1.c0)|(vt1.c0)))<>((0.018691106593025086 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((highlight(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()), (('')|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((+ (vt1.c0)))) DESC  NULLS LAST, ((((vt1.c0)|(vt1.c0)))<>((0.018691106593025086 IN (vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, NULL, vt1.c0))))) AND ((vt1.c0 COLLATE BINARY)))) ORDER BY vt1.c0, (+ (((vt1.c0)+(x''))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)!=(((vt1.c0)&(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, NULL, vt1.c0))))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (+ (((vt1.c0)+(x''))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)!=(((vt1.c0)&(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, NULL, vt1.c0))))) AND ((vt1.c0 COLLATE BINARY)))) ORDER BY vt1.c0, (+ (((vt1.c0)+(x''))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)!=(((vt1.c0)&(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, NULL, vt1.c0))))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (+ (((vt1.c0)+(x''))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)!=(((vt1.c0)&(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, NULL, vt1.c0))))) AND ((vt1.c0 COLLATE BINARY)))) ORDER BY vt1.c0, (+ (((vt1.c0)+(x''))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)!=(((vt1.c0)&(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)) IN ()));
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)AND(NULL)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))IS(LOWER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)AND(NULL)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))IS(LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)AND(NULL)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))IS(LOWER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)AND(NULL)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))IS(LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)AND(NULL)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))IS(LOWER(DISTINCT rt0.c0))));
SELECT * FROM vt1 WHERE ((- (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (((vt1.c0)-(vt1.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 IN (rt0.c0)) IN ())) ORDER BY (('' COLLATE NOCASE)LIKE(((vt1.c0)|(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('' COLLATE NOCASE)LIKE(((vt1.c0)|(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 IN (rt0.c0)) IN ())) ORDER BY (('' COLLATE NOCASE)LIKE(((vt1.c0)|(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('' COLLATE NOCASE)LIKE(((vt1.c0)|(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 IN (rt0.c0)) IN ())) ORDER BY (('' COLLATE NOCASE)LIKE(((vt1.c0)|(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(ABS(rt0.c0) AS REAL)) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(rt0.c0) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(ABS(rt0.c0) AS REAL)) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(rt0.c0) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(ABS(rt0.c0) AS REAL)) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c0)))  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c3)<<(rt0.c3))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c3)<<(rt0.c3))) AND (NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c3)<<(rt0.c3))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c3)<<(rt0.c3))) AND (NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c3)<<(rt0.c3))) AND (NULL)));
SELECT * FROM vt1 WHERE (UPPER(CAST(NULL AS TEXT))) ORDER BY x'', CAST(0.7143674629412342 AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(NULL AS TEXT))) IS TRUE)  as count FROM vt1 ORDER BY x'', CAST(0.7143674629412342 AS BLOB) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (UPPER(CAST(NULL AS TEXT))) ORDER BY x'', CAST(0.7143674629412342 AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(NULL AS TEXT))) IS TRUE)  as count FROM vt1 ORDER BY x'', CAST(0.7143674629412342 AS BLOB) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (UPPER(CAST(NULL AS TEXT))) ORDER BY x'', CAST(0.7143674629412342 AS BLOB) DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)/(rt0.c2))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (JULIANDAY(rt0.c3, rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt0.c2))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (JULIANDAY(rt0.c3, rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)/(rt0.c2))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (JULIANDAY(rt0.c3, rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt0.c2))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (JULIANDAY(rt0.c3, rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)/(rt0.c2))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (JULIANDAY(rt0.c3, rt0.c2, rt0.c1))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3 IN ()))IS NOT(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1)IS(rt0.c3))))!=((HEX('帘*!T{Y')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))IS NOT(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c1)IS(rt0.c3))))<>((HEX('帘*!T{Y')))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3 IN ()))IS NOT(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1)IS(rt0.c3))))!=((HEX('帘*!T{Y')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))IS NOT(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c1)IS(rt0.c3))))<>((HEX('帘*!T{Y')))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3 IN ()))IS NOT(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1)IS(rt0.c3))))!=((HEX('帘*!T{Y')))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c3)LIKE(rt0.c3)) THEN (rt0.c1 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)LIKE(rt0.c3)) THEN (rt0.c1 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c3)LIKE(rt0.c3)) THEN (rt0.c1 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)LIKE(rt0.c3)) THEN (rt0.c1 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c3)LIKE(rt0.c3)) THEN (rt0.c1 IN (rt0.c2)) END);
SELECT * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CHANGES() THEN ((rt0.c2)-(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHANGES() THEN ((rt0.c2)-(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CHANGES() THEN ((rt0.c2)-(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHANGES() THEN ((rt0.c2)-(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CHANGES() THEN ((rt0.c2)-(rt0.c1)) END);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (((rt0.c0)AND('-h鳽x')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (((rt0.c0)AND('-h鳽x'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (((rt0.c0)AND('-h鳽x')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (((rt0.c0)AND('-h鳽x'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END) NOT BETWEEN (NULL) AND (((rt0.c0)AND('-h鳽x')))));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)==('-607090090')))>((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=('-607090090')))>((+ (NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)==('-607090090')))>((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=('-607090090')))>((+ (NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)==('-607090090')))>((+ (NULL)))));
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c3)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c3)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL));
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c3)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c3)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL));
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c3)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3))))>=((CASE 0.5109265480966582  WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), CAST(0.032663693749514056 AS INTEGER)))) ASC, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3))))>=((CASE 0.5109265480966582  WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), CAST(0.032663693749514056 AS INTEGER)))) ASC, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3))))>=((CASE 0.5109265480966582  WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), CAST(0.032663693749514056 AS INTEGER)))) ASC, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3))))>=((CASE 0.5109265480966582  WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), CAST(0.032663693749514056 AS INTEGER)))) ASC, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3))))>=((CASE 0.5109265480966582  WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), CAST(0.032663693749514056 AS INTEGER)))) ASC, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((x'') ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END) ORDER BY ((rt0.c2)/(rt0.c3)) COLLATE RTRIM, (((((((((x'd2b9' IN ()))AND(((rt0.c1)+(rt0.c0)))))AND(((rt0.c3) IS TRUE))))AND(0.6221196479567385)))OR((- (rt0.c2))))  NULLS LAST, (- ((rt0.c3 IN (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2)/(rt0.c3)) COLLATE RTRIM, (((((((((x'd2b9' IN ()))AND(((rt0.c1)+(rt0.c0)))))AND(((rt0.c3) IS TRUE))))AND(0.6221196479567385)))OR((- (rt0.c2))))  NULLS LAST, (- ((rt0.c3 IN (rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((x'') ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END) ORDER BY ((rt0.c2)/(rt0.c3)) COLLATE RTRIM, (((((((((x'd2b9' IN ()))AND(((rt0.c1)+(rt0.c0)))))AND(((rt0.c3) IS TRUE))))AND(0.6221196479567385)))OR((- (rt0.c2))))  NULLS LAST, (- ((rt0.c3 IN (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2)/(rt0.c3)) COLLATE RTRIM, (((((((((x'd2b9' IN ()))AND(((rt0.c1)+(rt0.c0)))))AND(((rt0.c3) IS TRUE))))AND(0.6221196479567385)))OR((- (rt0.c2))))  NULLS LAST, (- ((rt0.c3 IN (rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((x'') ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END) ORDER BY ((rt0.c2)/(rt0.c3)) COLLATE RTRIM, (((((((((x'd2b9' IN ()))AND(((rt0.c1)+(rt0.c0)))))AND(((rt0.c3) IS TRUE))))AND(0.6221196479567385)))OR((- (rt0.c2))))  NULLS LAST, (- ((rt0.c3 IN (rt0.c1)))) DESC;
SELECT ALL * FROM vt1, rt0 WHERE (((LENGTH(rt0.c0)) ISNULL)) ORDER BY ((rt0.c1)>>(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c0)) ISNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c1)>>(rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((LENGTH(rt0.c0)) ISNULL)) ORDER BY ((rt0.c1)>>(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c0)) ISNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c1)>>(rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((LENGTH(rt0.c0)) ISNULL)) ORDER BY ((rt0.c1)>>(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c0 COLLATE NOCASE)LIKE(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY (- ((~ (0.7764139065348962))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)LIKE(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (- ((~ (0.7764139065348962))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c0 COLLATE NOCASE)LIKE(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY (- ((~ (0.7764139065348962))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)LIKE(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (- ((~ (0.7764139065348962))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c0 COLLATE NOCASE)LIKE(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY (- ((~ (0.7764139065348962))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)AND(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)AND(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)AND(vt1.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) IS FALSE)) ORDER BY ((((((rt0.c0) IS TRUE))AND((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))))AND(((rt0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS TRUE))AND((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))))AND(((rt0.c2) ISNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) IS FALSE)) ORDER BY ((((((rt0.c0) IS TRUE))AND((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))))AND(((rt0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS TRUE))AND((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))))AND(((rt0.c2) ISNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) IS FALSE)) ORDER BY ((((((rt0.c0) IS TRUE))AND((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))))AND(((rt0.c2) ISNULL))) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((rt0.c1))));
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c0, NULL, 0.6190917018614961, 0.18562200640892235))))*(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c0, NULL, 0.6190917018614961, 0.18562200640892235))))*(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c0, NULL, 0.6190917018614961, 0.18562200640892235))))*(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c0, NULL, 0.6190917018614961, 0.18562200640892235))))*(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, rt0.c0, rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c0, NULL, 0.6190917018614961, 0.18562200640892235))))*(((rt0.c1) IS FALSE))));
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c1)%('-296673989')), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<(((((vt1.c0))==((rt0.c2))), rt0.c3 COLLATE BINARY, ((rt0.c2)>(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)%('-296673989')), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<(((((vt1.c0))=((rt0.c2))), rt0.c3 COLLATE BINARY, ((rt0.c2)>(NULL)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c1)%('-296673989')), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<(((((vt1.c0))==((rt0.c2))), rt0.c3 COLLATE BINARY, ((rt0.c2)>(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)%('-296673989')), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<(((((vt1.c0))=((rt0.c2))), rt0.c3 COLLATE BINARY, ((rt0.c2)>(NULL)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c1)%('-296673989')), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<(((((vt1.c0))==((rt0.c2))), rt0.c3 COLLATE BINARY, ((rt0.c2)>(NULL))))));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS INTEGER)) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS INTEGER)) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS INTEGER)) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) ISNULL);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((rt0.c2)==(rt0.c3)))))OR(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((rt0.c2)=(rt0.c3)))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((rt0.c2)==(rt0.c3)))))OR(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((rt0.c2)=(rt0.c3)))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((rt0.c2)==(rt0.c3)))))OR(((rt0.c2) IS FALSE))));
SELECT * FROM rt0 WHERE (((((1283947464)+(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((1283947464)+(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((1283947464)+(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((1283947464)+(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((1283947464)+(rt0.c3))) ISNULL));
SELECT * FROM vt1, rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)OR((+ (rt0.c0)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)))OR(((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)OR((+ (rt0.c0)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)))OR(((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2)<<(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)OR((+ (rt0.c0)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)))OR(((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)OR((+ (rt0.c0)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)))OR(((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2)<<(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)OR((+ (rt0.c0)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)))OR(((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c0)))))OR(((rt0.c2)<<(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ('312456605') ORDER BY ((((rt0.c3)>>(rt0.c0)))|(rt0.c2)) DESC, (rt0.c3 IN (rt0.c0, rt0.c0)) COLLATE NOCASE  NULLS FIRST, '*/cC)9,3~', (((('-1568777712') NOT BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (NULL) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('312456605') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>>(rt0.c0)))|(rt0.c2)) DESC, (rt0.c3 IN (rt0.c0, rt0.c0)) COLLATE NOCASE  NULLS FIRST, '*/cC)9,3~', (((('-1568777712') NOT BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (NULL) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ('312456605') ORDER BY ((((rt0.c3)>>(rt0.c0)))|(rt0.c2)) DESC, (rt0.c3 IN (rt0.c0, rt0.c0)) COLLATE NOCASE  NULLS FIRST, '*/cC)9,3~', (((('-1568777712') NOT BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (NULL) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('312456605') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>>(rt0.c0)))|(rt0.c2)) DESC, (rt0.c3 IN (rt0.c0, rt0.c0)) COLLATE NOCASE  NULLS FIRST, '*/cC)9,3~', (((('-1568777712') NOT BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (NULL) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ('312456605') ORDER BY ((((rt0.c3)>>(rt0.c0)))|(rt0.c2)) DESC, (rt0.c3 IN (rt0.c0, rt0.c0)) COLLATE NOCASE  NULLS FIRST, '*/cC)9,3~', (((('-1568777712') NOT BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((rt0.c3) BETWEEN (NULL) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) NOT NULL))));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(DISTINCT ((((rt0.c3)OR(rt0.c0)))AND(x'')), ((rt0.c0) ISNULL))) ORDER BY ((((rt0.c1)<=(rt0.c2)))%(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((((rt0.c3)OR(rt0.c0)))AND(x'')), ((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1)<=(rt0.c2)))%(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(DISTINCT ((((rt0.c3)OR(rt0.c0)))AND(x'')), ((rt0.c0) ISNULL))) ORDER BY ((((rt0.c1)<=(rt0.c2)))%(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((((rt0.c3)OR(rt0.c0)))AND(x'')), ((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1)<=(rt0.c2)))%(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(DISTINCT ((((rt0.c3)OR(rt0.c0)))AND(x'')), ((rt0.c0) ISNULL))) ORDER BY ((((rt0.c1)<=(rt0.c2)))%(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1439788897')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1439788897')) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1439788897')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1439788897')) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1439788897')) IN ()));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST((((x'', vt1.c0, rt0.c1))>((rt0.c3, rt0.c3, rt0.c3))) AS NUMERIC) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CAST((((x'', vt1.c0, rt0.c1))>((rt0.c3, rt0.c3, rt0.c3))) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST((((x'', vt1.c0, rt0.c1))>((rt0.c3, rt0.c3, rt0.c3))) AS NUMERIC) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CAST((((x'', vt1.c0, rt0.c1))>((rt0.c3, rt0.c3, rt0.c3))) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST((((x'', vt1.c0, rt0.c1))>((rt0.c3, rt0.c3, rt0.c3))) AS NUMERIC) WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c0))))==(((- (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END, (((rt0.c0))!=((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS TEXT), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c0))))=(((- (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END, (((rt0.c0))!=((rt0.c3))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c0))))==(((- (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END, (((rt0.c0))!=((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS TEXT), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c0))))=(((- (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END, (((rt0.c0))!=((rt0.c3))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c0))))==(((- (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END, (((rt0.c0))!=((rt0.c3)))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((('-1092149790', ((rt0.c3)&(vt1.c0)), (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))<>(((x'' IN ()), ((((((((rt0.c1)AND(x'bced')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)), ((rt0.c3)*(rt0.c0)))))) ORDER BY (((rt0.c2, vt1.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((((rt0.c1)OR(rt0.c1)), rt0.c3, ((rt0.c1)AND(rt0.c1)), ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)), vt1.c0 COLLATE NOCASE)) AND (((((x''))<=((rt0.c2))), CAST(rt0.c3 AS NUMERIC), TRIM(DISTINCT vt1.c0), (rt0.c1 IN ()), ((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1092149790', ((rt0.c3)&(vt1.c0)), (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))<>(((x'' IN ()), ((((((((rt0.c1)AND(x'bced')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)), ((rt0.c3)*(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2, vt1.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((((rt0.c1)OR(rt0.c1)), rt0.c3, ((rt0.c1)AND(rt0.c1)), ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)), vt1.c0 COLLATE NOCASE)) AND (((((x''))<=((rt0.c2))), CAST(rt0.c3 AS NUMERIC), TRIM(DISTINCT vt1.c0), (rt0.c1 IN ()), ((rt0.c1) NOT NULL)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((('-1092149790', ((rt0.c3)&(vt1.c0)), (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))<>(((x'' IN ()), ((((((((rt0.c1)AND(x'bced')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)), ((rt0.c3)*(rt0.c0)))))) ORDER BY (((rt0.c2, vt1.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((((rt0.c1)OR(rt0.c1)), rt0.c3, ((rt0.c1)AND(rt0.c1)), ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)), vt1.c0 COLLATE NOCASE)) AND (((((x''))<=((rt0.c2))), CAST(rt0.c3 AS NUMERIC), TRIM(DISTINCT vt1.c0), (rt0.c1 IN ()), ((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1092149790', ((rt0.c3)&(vt1.c0)), (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))<>(((x'' IN ()), ((((((((rt0.c1)AND(x'bced')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)), ((rt0.c3)*(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2, vt1.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((((rt0.c1)OR(rt0.c1)), rt0.c3, ((rt0.c1)AND(rt0.c1)), ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)), vt1.c0 COLLATE NOCASE)) AND (((((x''))<=((rt0.c2))), CAST(rt0.c3 AS NUMERIC), TRIM(DISTINCT vt1.c0), (rt0.c1 IN ()), ((rt0.c1) NOT NULL)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((('-1092149790', ((rt0.c3)&(vt1.c0)), (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))<>(((x'' IN ()), ((((((((rt0.c1)AND(x'bced')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)), ((rt0.c3)*(rt0.c0)))))) ORDER BY (((rt0.c2, vt1.c0, vt1.c0, vt1.c0, rt0.c2)) BETWEEN ((((rt0.c1)OR(rt0.c1)), rt0.c3, ((rt0.c1)AND(rt0.c1)), ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)), vt1.c0 COLLATE NOCASE)) AND (((((x''))<=((rt0.c2))), CAST(rt0.c3 AS NUMERIC), TRIM(DISTINCT vt1.c0), (rt0.c1 IN ()), ((rt0.c1) NOT NULL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))-((rt0.c3 IN (rt0.c1))))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c2)<(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))-((rt0.c3 IN (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c2)<(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))-((rt0.c3 IN (rt0.c1))))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c2)<(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))-((rt0.c3 IN (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c2)<(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))-((rt0.c3 IN (rt0.c1))))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c2)<(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN QUOTE(vt1.c0) THEN (NOT (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN QUOTE(vt1.c0) THEN (NOT (rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN QUOTE(vt1.c0) THEN (NOT (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN QUOTE(vt1.c0) THEN (NOT (rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN QUOTE(vt1.c0) THEN (NOT (rt0.c2)) END);
SELECT * FROM vt1, rt0 WHERE ((~ ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((~ ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((~ ((~ (rt0.c2)))));
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)||((- (rt0.c2)))) ASC, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)||((- (rt0.c2)))) ASC, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)||((- (rt0.c2)))) ASC, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)||((- (rt0.c2)))) ASC, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)||((- (rt0.c2)))) ASC, ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((rt0.c0 IN (vt1.c0))))>((rt0.c3))) WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3))) NOT NULL)) ORDER BY (((0.747541498477072))<((vt1.c0 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c0 IN (vt1.c0))))>((rt0.c3))) ORDER BY (((0.747541498477072))<((vt1.c0 COLLATE RTRIM))) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((rt0.c0 IN (vt1.c0))))>((rt0.c3))) WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3))) NOT NULL)) ORDER BY (((0.747541498477072))<((vt1.c0 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c0 IN (vt1.c0))))>((rt0.c3))) ORDER BY (((0.747541498477072))<((vt1.c0 COLLATE RTRIM))) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((rt0.c0 IN (vt1.c0))))>((rt0.c3))) WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3))) NOT NULL)) ORDER BY (((0.747541498477072))<((vt1.c0 COLLATE RTRIM))) DESC;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (x'') ORDER BY CASE 'Nk'  WHEN rt0.c2 THEN ((rt0.c2)<=(rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY CASE 'Nk'  WHEN rt0.c2 THEN ((rt0.c2)<=(rt0.c3)) END);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (x'') ORDER BY CASE 'Nk'  WHEN rt0.c2 THEN ((rt0.c2)<=(rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY CASE 'Nk'  WHEN rt0.c2 THEN ((rt0.c2)<=(rt0.c3)) END);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (x'') ORDER BY CASE 'Nk'  WHEN rt0.c2 THEN ((rt0.c2)<=(rt0.c3)) END;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((0.7098910329477623 IN ()))||((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c3)))))) ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)GLOB(rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT (((((0.7098910329477623 IN ()))||((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)GLOB(rt0.c3)) END DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((0.7098910329477623 IN ()))||((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c3)))))) ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)GLOB(rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT (((((0.7098910329477623 IN ()))||((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)GLOB(rt0.c3)) END DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((0.7098910329477623 IN ()))||((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c3)))))) ORDER BY CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)GLOB(rt0.c3)) END DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0) NOT NULL), rt0.c3, (~ (vt1.c0))))>((((rt0.c1)/(rt0.c2)), (vt1.c0 IN ()), ((rt0.c1)==('OnI2 *.'))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT NULL), rt0.c3, (~ (vt1.c0))))>((((rt0.c1)/(rt0.c2)), (vt1.c0 IN ()), ((rt0.c1)==('OnI2 *.')))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0) NOT NULL), rt0.c3, (~ (vt1.c0))))>((((rt0.c1)/(rt0.c2)), (vt1.c0 IN ()), ((rt0.c1)==('OnI2 *.'))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT NULL), rt0.c3, (~ (vt1.c0))))>((((rt0.c1)/(rt0.c2)), (vt1.c0 IN ()), ((rt0.c1)==('OnI2 *.')))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0) NOT NULL), rt0.c3, (~ (vt1.c0))))>((((rt0.c1)/(rt0.c2)), (vt1.c0 IN ()), ((rt0.c1)==('OnI2 *.'))))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((~ (rt0.c2)))AND((- (rt0.c3)))))AND(((rt0.c1)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c2)))AND((- (rt0.c3)))))AND(((rt0.c1)>(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((~ (rt0.c2)))AND((- (rt0.c3)))))AND(((rt0.c1)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c2)))AND((- (rt0.c3)))))AND(((rt0.c1)>(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((~ (rt0.c2)))AND((- (rt0.c3)))))AND(((rt0.c1)>(rt0.c1))));
SELECT * FROM vt1 WHERE (TRIM(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (TRIM(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (TRIM(CAST(vt1.c0 AS TEXT)));
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c1 AS BLOB) AS BLOB)) ORDER BY ((((((((((0.36121044531303637)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR('<'))) NOT BETWEEN (((rt0.c0)||(vt1.c0))) AND ('TAR')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((((0.36121044531303637)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR('<'))) NOT BETWEEN (((rt0.c0)||(vt1.c0))) AND ('TAR')) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c1 AS BLOB) AS BLOB)) ORDER BY ((((((((((0.36121044531303637)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR('<'))) NOT BETWEEN (((rt0.c0)||(vt1.c0))) AND ('TAR')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((((0.36121044531303637)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR('<'))) NOT BETWEEN (((rt0.c0)||(vt1.c0))) AND ('TAR')) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c1 AS BLOB) AS BLOB)) ORDER BY ((((((((((0.36121044531303637)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR('<'))) NOT BETWEEN (((rt0.c0)||(vt1.c0))) AND ('TAR')) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (-8.73687151E8)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (-8.73687151E8)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (-8.73687151E8)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (-8.73687151E8)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (-8.73687151E8)) AS REAL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((NULL)>(rt0.c3)) COLLATE RTRIM WHERE ((((rt0.c3)<=(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<=(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((NULL)>(rt0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((NULL)>(rt0.c3)) COLLATE RTRIM WHERE ((((rt0.c3)<=(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<=(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((NULL)>(rt0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((NULL)>(rt0.c3)) COLLATE RTRIM WHERE ((((rt0.c3)<=(rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) IS TRUE)) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) IS TRUE)) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) IS TRUE)) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) THEN IFNULL(DISTINCT rt0.c2, rt0.c3) WHEN ((vt1.c0)/(rt0.c1)) THEN (NOT (rt0.c0)) WHEN UPPER(vt1.c0) THEN 0x60a1f16e ELSE x'2d20' END) ORDER BY CAST(((rt0.c0)<=(rt0.c3)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN ())  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) THEN IFNULL(DISTINCT rt0.c2, rt0.c3) WHEN ((vt1.c0)/(rt0.c1)) THEN (NOT (rt0.c0)) WHEN UPPER(vt1.c0) THEN 0x60a1f16e ELSE x'2d20' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c0)<=(rt0.c3)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) THEN IFNULL(DISTINCT rt0.c2, rt0.c3) WHEN ((vt1.c0)/(rt0.c1)) THEN (NOT (rt0.c0)) WHEN UPPER(vt1.c0) THEN 0x60a1f16e ELSE x'2d20' END) ORDER BY CAST(((rt0.c0)<=(rt0.c3)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN ())  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) THEN IFNULL(DISTINCT rt0.c2, rt0.c3) WHEN ((vt1.c0)/(rt0.c1)) THEN (NOT (rt0.c0)) WHEN UPPER(vt1.c0) THEN 0x60a1f16e ELSE x'2d20' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c0)<=(rt0.c3)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) THEN IFNULL(DISTINCT rt0.c2, rt0.c3) WHEN ((vt1.c0)/(rt0.c1)) THEN (NOT (rt0.c0)) WHEN UPPER(vt1.c0) THEN 0x60a1f16e ELSE x'2d20' END) ORDER BY CAST(((rt0.c0)<=(rt0.c3)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID() COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID() COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1) IS TRUE)))<(((((rt0.c1))<((vt1.c0))), rt0.c0 COLLATE NOCASE, rt0.c1 COLLATE NOCASE))) WHERE (((((((rt0.c2)<=(rt0.c0)))AND(((0.04387236000401484)*(rt0.c0)))))OR(CAST(vt1.c0 AS INTEGER)))) ORDER BY LOWER(TRIM(DISTINCT rt0.c2)) ASC, CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END THEN UNLIKELY(DISTINCT 0.3955326048463439) ELSE (rt0.c3 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<=(rt0.c0)))AND(((0.04387236000401484)*(rt0.c0)))))OR(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1) IS TRUE)))<(((((rt0.c1))<((vt1.c0))), rt0.c0 COLLATE NOCASE, rt0.c1 COLLATE NOCASE))) ORDER BY LOWER(TRIM(DISTINCT rt0.c2)) ASC, CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END THEN UNLIKELY(DISTINCT 0.3955326048463439) ELSE (rt0.c3 IN ()) END DESC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1) IS TRUE)))<(((((rt0.c1))<((vt1.c0))), rt0.c0 COLLATE NOCASE, rt0.c1 COLLATE NOCASE))) WHERE (((((((rt0.c2)<=(rt0.c0)))AND(((0.04387236000401484)*(rt0.c0)))))OR(CAST(vt1.c0 AS INTEGER)))) ORDER BY LOWER(TRIM(DISTINCT rt0.c2)) ASC, CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END THEN UNLIKELY(DISTINCT 0.3955326048463439) ELSE (rt0.c3 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<=(rt0.c0)))AND(((0.04387236000401484)*(rt0.c0)))))OR(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1) IS TRUE)))<(((((rt0.c1))<((vt1.c0))), rt0.c0 COLLATE NOCASE, rt0.c1 COLLATE NOCASE))) ORDER BY LOWER(TRIM(DISTINCT rt0.c2)) ASC, CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END THEN UNLIKELY(DISTINCT 0.3955326048463439) ELSE (rt0.c3 IN ()) END DESC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1) IS TRUE)))<(((((rt0.c1))<((vt1.c0))), rt0.c0 COLLATE NOCASE, rt0.c1 COLLATE NOCASE))) WHERE (((((((rt0.c2)<=(rt0.c0)))AND(((0.04387236000401484)*(rt0.c0)))))OR(CAST(vt1.c0 AS INTEGER)))) ORDER BY LOWER(TRIM(DISTINCT rt0.c2)) ASC, CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END THEN UNLIKELY(DISTINCT 0.3955326048463439) ELSE (rt0.c3 IN ()) END DESC;
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0) IS TRUE) IN (UPPER(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN (UPPER(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0) IS TRUE) IN (UPPER(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN (UPPER(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0) IS TRUE) IN (UPPER(DISTINCT rt0.c3))));
SELECT ALL COUNT(*) FROM vt1 WHERE (0.7832242342467326);
SELECT SUM(count) FROM (SELECT ALL ((0.7832242342467326) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.7832242342467326);
SELECT SUM(count) FROM (SELECT ALL ((0.7832242342467326) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.7832242342467326);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c1) NOT NULL), rt0.c0) WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((+ (x'25af'))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((+ (x'25af')))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c1) NOT NULL), rt0.c0));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c1) NOT NULL), rt0.c0) WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((+ (x'25af'))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((+ (x'25af')))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c1) NOT NULL), rt0.c0));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c1) NOT NULL), rt0.c0) WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((+ (x'25af'))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0)) DESC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (json_insert(CAST(rt0.c1 AS NUMERIC), CAST(rt0.c1 AS REAL), x'')) ORDER BY x'', CASE WHEN ((rt0.c3) NOT NULL) THEN ((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(rt0.c1 AS NUMERIC), CAST(rt0.c1 AS REAL), x'')) IS TRUE)  as count FROM rt0, vt1 ORDER BY x'', CASE WHEN ((rt0.c3) NOT NULL) THEN ((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (json_insert(CAST(rt0.c1 AS NUMERIC), CAST(rt0.c1 AS REAL), x'')) ORDER BY x'', CASE WHEN ((rt0.c3) NOT NULL) THEN ((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(rt0.c1 AS NUMERIC), CAST(rt0.c1 AS REAL), x'')) IS TRUE)  as count FROM rt0, vt1 ORDER BY x'', CASE WHEN ((rt0.c3) NOT NULL) THEN ((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)*(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)*(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)*(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)*(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)*(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON rt0.c2 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c3)), 0.4788817036458596))<=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c0)<(rt0.c3)), rt0.c0 COLLATE NOCASE)))) ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c3)), 0.4788817036458596))<=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c0)<(rt0.c3)), rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON rt0.c2 ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON rt0.c2 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c3)), 0.4788817036458596))<=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c0)<(rt0.c3)), rt0.c0 COLLATE NOCASE)))) ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c3)), 0.4788817036458596))<=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c0)<(rt0.c3)), rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON rt0.c2 ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON rt0.c2 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c3)), 0.4788817036458596))<=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c0)<(rt0.c3)), rt0.c0 COLLATE NOCASE)))) ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS TEXT)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (load_extension(((('f KA%'))!=((rt0.c0))))) ORDER BY rt0.c1 ASC, (rt0.c1 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((('f KA%'))!=((rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, (rt0.c1 COLLATE BINARY IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (load_extension(((('f KA%'))!=((rt0.c0))))) ORDER BY rt0.c1 ASC, (rt0.c1 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((('f KA%'))!=((rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, (rt0.c1 COLLATE BINARY IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS REAL)) ORDER BY rt0.c0, CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (('?', rt0.c3, rt0.c2)) AND (('AO\nQ+', rt0.c2, rt0.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (('?', rt0.c3, rt0.c2)) AND (('AO\nQ+', rt0.c2, rt0.c1))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS REAL)) ORDER BY rt0.c0, CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (('?', rt0.c3, rt0.c2)) AND (('AO\nQ+', rt0.c2, rt0.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (('?', rt0.c3, rt0.c2)) AND (('AO\nQ+', rt0.c2, rt0.c1))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS REAL)) ORDER BY rt0.c0, CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (('?', rt0.c3, rt0.c2)) AND (('AO\nQ+', rt0.c2, rt0.c1))) END ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))>(rt0.c1 COLLATE NOCASE))) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))<>((NOT (rt0.c0))))  NULLS FIRST, (- ((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))!=((NOT (rt0.c0))))  NULLS FIRST, (- ((+ (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))>(rt0.c1 COLLATE NOCASE))) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))<>((NOT (rt0.c0))))  NULLS FIRST, (- ((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))!=((NOT (rt0.c0))))  NULLS FIRST, (- ((+ (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))>(rt0.c1 COLLATE NOCASE))) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))<>((NOT (rt0.c0))))  NULLS FIRST, (- ((+ (rt0.c0))));
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS NUMERIC)) ORDER BY '2097695965'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)LIKE(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY '2097695965'  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS NUMERIC)) ORDER BY '2097695965'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)LIKE(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY '2097695965'  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS NUMERIC)) ORDER BY '2097695965'  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((+ (rt0.c2)))));
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS REAL));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c0 ELSE NULL END) AND (CASE WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c0 ELSE NULL END) AND (CASE WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c0 ELSE NULL END) AND (CASE WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c0 ELSE NULL END) AND (CASE WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c0 ELSE NULL END) AND (CASE WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) ISNULL)) NOTNULL));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) BETWEEN (rt0.c2) AND (x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (rt0.c2) AND (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) BETWEEN (rt0.c2) AND (x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (rt0.c2) AND (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) BETWEEN (rt0.c2) AND (x'')) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY UPPER(rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY UPPER(rt0.c3));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY UPPER(rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY UPPER(rt0.c3));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY UPPER(rt0.c3);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt1 WHERE (LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.6661390717619446));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.6661390717619446)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.6661390717619446));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.6661390717619446)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.6661390717619446));
SELECT * FROM rt0 WHERE ((- (HEX(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (HEX(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (HEX(DISTINCT rt0.c0))));
SELECT ALL * FROM vt1 WHERE ((NOT ((+ (NULL))))) ORDER BY ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.28545031948369537) AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.28545031948369537) AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((NOT ((+ (NULL))))) ORDER BY ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.28545031948369537) AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.28545031948369537) AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((NOT ((+ (NULL))))) ORDER BY ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.28545031948369537) AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY (rt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (rt0.c0 IN ()) COLLATE BINARY ASC);
SELECT * FROM rt0, vt1 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY (rt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (rt0.c0 IN ()) COLLATE BINARY ASC);
SELECT * FROM rt0, vt1 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY (rt0.c0 IN ()) COLLATE BINARY ASC;
SELECT ALL * FROM vt1, rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1)IS(rt0.c1)) END) ORDER BY ((rt0.c3)/(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1)IS(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c3)/(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1)IS(rt0.c1)) END) ORDER BY ((rt0.c3)/(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1)IS(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c3)/(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c1) ISNULL) THEN ((rt0.c1)IS(rt0.c1)) END) ORDER BY ((rt0.c3)/(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((TRIM(rt0.c3)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END))) ORDER BY 0.21381645733399335;
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c3)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0.21381645733399335);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((TRIM(rt0.c3)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END))) ORDER BY 0.21381645733399335;
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c3)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0.21381645733399335);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((TRIM(rt0.c3)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END))) ORDER BY 0.21381645733399335;
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))IS NOT(rt0.c2))) ORDER BY NULLIF(DISTINCT ((rt0.c2) NOT NULL), rt0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))IS NOT(rt0.c2))) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULLIF(DISTINCT ((rt0.c2) NOT NULL), rt0.c1 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))IS NOT(rt0.c2))) ORDER BY NULLIF(DISTINCT ((rt0.c2) NOT NULL), rt0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))IS NOT(rt0.c2))) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULLIF(DISTINCT ((rt0.c2) NOT NULL), rt0.c1 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))IS NOT(rt0.c2))) ORDER BY NULLIF(DISTINCT ((rt0.c2) NOT NULL), rt0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2))<((x'')))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((x'')))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2))<((x'')))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((x'')))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2))<((x'')))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (rtreenode(vt1.c0, ((vt1.c0)<=('0.43738897230971363')))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rtreenode(vt1.c0, ((vt1.c0)<=('0.43738897230971363')))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (rtreenode(vt1.c0, ((vt1.c0)<=('0.43738897230971363')))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rtreenode(vt1.c0, ((vt1.c0)<=('0.43738897230971363')))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (rtreenode(vt1.c0, ((vt1.c0)<=('0.43738897230971363')))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY (NOT (((rt0.c3)<>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c3)!=(rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY (NOT (((rt0.c3)<>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c3)!=(rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY (NOT (((rt0.c3)<>(rt0.c2)))) DESC;
SELECT ALL * FROM vt1 WHERE (-1243810266) ORDER BY ((((vt1.c0)<>(vt1.c0))) NOTNULL)  NULLS FIRST, (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1243810266) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<>(vt1.c0))) NOTNULL)  NULLS FIRST, (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM DESC);
SELECT ALL * FROM vt1 WHERE (-1243810266) ORDER BY ((((vt1.c0)<>(vt1.c0))) NOTNULL)  NULLS FIRST, (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1243810266) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<>(vt1.c0))) NOTNULL)  NULLS FIRST, (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM DESC);
SELECT ALL * FROM vt1 WHERE (-1243810266) ORDER BY ((((vt1.c0)<>(vt1.c0))) NOTNULL)  NULLS FIRST, (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM DESC;
SELECT * FROM vt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((NULL)+(0.5319481885852312))) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((NULL)+(0.5319481885852312))) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((NULL)+(0.5319481885852312))) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((NULL)+(0.5319481885852312))) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((NULL)+(0.5319481885852312))) AND (((vt1.c0) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE))<((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))<((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE))<((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))<((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE))<((((vt1.c0))<((vt1.c0))))));
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((~ (vt1.c0)))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CAST(rt0.c0 AS REAL) IN ()));
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((~ (vt1.c0)))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CAST(rt0.c0 AS REAL) IN ()));
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((~ (vt1.c0)))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ());
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (((- (x'')))IS NOT((rt0.c0 IN ()))) DESC  NULLS FIRST, UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (((- (x'')))IS NOT((rt0.c0 IN ()))) DESC  NULLS FIRST, UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (((- (x'')))IS NOT((rt0.c0 IN ()))) DESC  NULLS FIRST, UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (((- (x'')))IS NOT((rt0.c0 IN ()))) DESC  NULLS FIRST, UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (((- (x'')))IS NOT((rt0.c0 IN ()))) DESC  NULLS FIRST, UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c3)&(rt0.c3)) AS REAL)) ORDER BY (((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)&(rt0.c3)) AS REAL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c3)&(rt0.c3)) AS REAL)) ORDER BY (((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)&(rt0.c3)) AS REAL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c3)&(rt0.c3)) AS REAL)) ORDER BY (((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC, '-1170164643' DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC, '-1170164643' DESC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC, '-1170164643' DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC, '-1170164643' DESC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER) ASC, '-1170164643' DESC;
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (((rt0.c1)<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (((rt0.c1)<(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (((rt0.c1)<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (((rt0.c1)<(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (((rt0.c1)<(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((((vt1.c0)AND(rt0.c3)))AND(rt0.c3)) AS REAL)) ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(rt0.c3)))AND(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((((vt1.c0)AND(rt0.c3)))AND(rt0.c3)) AS REAL)) ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(rt0.c3)))AND(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((((vt1.c0)AND(rt0.c3)))AND(rt0.c3)) AS REAL)) ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC)));
SELECT * FROM rt0 WHERE ((- (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))))) ORDER BY (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) DESC);
SELECT * FROM rt0 WHERE ((- (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))))) ORDER BY (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) DESC);
SELECT * FROM rt0 WHERE ((- (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))))) ORDER BY (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) ORDER BY CAST(rt0.c3 AS REAL)  NULLS LAST, ((0.9518550143358132 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(rt0.c3 AS REAL)  NULLS LAST, ((0.9518550143358132 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) ORDER BY CAST(rt0.c3 AS REAL)  NULLS LAST, ((0.9518550143358132 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(rt0.c3 AS REAL)  NULLS LAST, ((0.9518550143358132 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) ORDER BY CAST(rt0.c3 AS REAL)  NULLS LAST, ((0.9518550143358132 IN ()) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY ((rt0.c3 IN ()) IN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) DESC, CAST(rt0.c0 AS TEXT) COLLATE BINARY DESC  NULLS FIRST, CAST((rt0.c1 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c3 IN ()) IN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) DESC, CAST(rt0.c0 AS TEXT) COLLATE BINARY DESC  NULLS FIRST, CAST((rt0.c1 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY ((rt0.c3 IN ()) IN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) DESC, CAST(rt0.c0 AS TEXT) COLLATE BINARY DESC  NULLS FIRST, CAST((rt0.c1 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c3 IN ()) IN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) DESC, CAST(rt0.c0 AS TEXT) COLLATE BINARY DESC  NULLS FIRST, CAST((rt0.c1 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY ((rt0.c3 IN ()) IN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) DESC, CAST(rt0.c0 AS TEXT) COLLATE BINARY DESC  NULLS FIRST, CAST((rt0.c1 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (('\ni' IN ()));
SELECT SUM(count) FROM (SELECT ((('\ni' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (('\ni' IN ()));
SELECT SUM(count) FROM (SELECT ((('\ni' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (('\ni' IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END WHERE ('(');
SELECT SUM(count) FROM (SELECT ALL (('(') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END WHERE ('(');
SELECT SUM(count) FROM (SELECT ALL (('(') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END WHERE ('(');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0) ORDER BY (((vt1.c0)) BETWEEN (((rt0.c3 IN ()))) AND (((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0)) BETWEEN (((rt0.c3 IN ()))) AND (((vt1.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0) ORDER BY (((vt1.c0)) BETWEEN (((rt0.c3 IN ()))) AND (((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0)) BETWEEN (((rt0.c3 IN ()))) AND (((vt1.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0) ORDER BY (((vt1.c0)) BETWEEN (((rt0.c3 IN ()))) AND (((vt1.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN (((rt0.c0 IN ()), vt1.c0, (((rt0.c0))==((rt0.c0))))) AND (((- (rt0.c0)), CASE rt0.c3  WHEN rt0.c3 THEN -7.7210992E7 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END, rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN (((rt0.c0 IN ()), vt1.c0, (((rt0.c0))==((rt0.c0))))) AND (((- (rt0.c0)), CASE rt0.c3  WHEN rt0.c3 THEN -7.7210992E7 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END, rt0.c3)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN (((rt0.c0 IN ()), vt1.c0, (((rt0.c0))==((rt0.c0))))) AND (((- (rt0.c0)), CASE rt0.c3  WHEN rt0.c3 THEN -7.7210992E7 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END, rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN (((rt0.c0 IN ()), vt1.c0, (((rt0.c0))==((rt0.c0))))) AND (((- (rt0.c0)), CASE rt0.c3  WHEN rt0.c3 THEN -7.7210992E7 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END, rt0.c3)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((vt1.c0)AND(rt0.c0)))OR(rt0.c1))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN (((rt0.c0 IN ()), vt1.c0, (((rt0.c0))==((rt0.c0))))) AND (((- (rt0.c0)), CASE rt0.c3  WHEN rt0.c3 THEN -7.7210992E7 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END, rt0.c3)))  NULLS LAST;
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(IFNULL(rt0.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(IFNULL(rt0.c0, vt1.c0))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(IFNULL(rt0.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(IFNULL(rt0.c0, vt1.c0))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(IFNULL(rt0.c0, vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c0, 0X5ab5d657, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE NOCASE WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c0, 0x5ab5d657, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE NOCASE ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c0, 0X5ab5d657, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE NOCASE WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c0, 0x5ab5d657, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE NOCASE ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c0, 0X5ab5d657, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE NOCASE WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (NULL))) NOTNULL)) ORDER BY ((((TRIM(DISTINCT vt1.c0, 955131542))AND(((((' ')AND(vt1.c0)))AND(x'')))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)||(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((TRIM(DISTINCT vt1.c0, 955131542))AND(((((' ')AND(vt1.c0)))AND(x'')))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)||(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (NULL))) NOTNULL)) ORDER BY ((((TRIM(DISTINCT vt1.c0, 955131542))AND(((((' ')AND(vt1.c0)))AND(x'')))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)||(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((TRIM(DISTINCT vt1.c0, 955131542))AND(((((' ')AND(vt1.c0)))AND(x'')))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)||(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (NULL))) NOTNULL)) ORDER BY ((((TRIM(DISTINCT vt1.c0, 955131542))AND(((((' ')AND(vt1.c0)))AND(x'')))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)||(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) IS TRUE)) IS FALSE));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) WHERE (TRIM(DISTINCT ((rt0.c1)LIKE(rt0.c1)))) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))*(LIKELY(0.9561021643511157)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c1)LIKE(rt0.c1)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))*(LIKELY(0.9561021643511157))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) WHERE (TRIM(DISTINCT ((rt0.c1)LIKE(rt0.c1)))) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))*(LIKELY(0.9561021643511157)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c1)LIKE(rt0.c1)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))*(LIKELY(0.9561021643511157))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) WHERE (TRIM(DISTINCT ((rt0.c1)LIKE(rt0.c1)))) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))*(LIKELY(0.9561021643511157)));
SELECT ALL * FROM vt1 WHERE (load_extension(vt1.c0, vt1.c0) COLLATE NOCASE) ORDER BY ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE DESC, LOWER(DISTINCT vt1.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((load_extension(vt1.c0, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE DESC, LOWER(DISTINCT vt1.c0) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (load_extension(vt1.c0, vt1.c0) COLLATE NOCASE) ORDER BY ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE DESC, LOWER(DISTINCT vt1.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((load_extension(vt1.c0, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE DESC, LOWER(DISTINCT vt1.c0) COLLATE BINARY);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1))<((NULL, rt0.c3, rt0.c2)))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c1))<((NULL, rt0.c3, rt0.c2)))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1))<((NULL, rt0.c3, rt0.c2)))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c1))<((NULL, rt0.c3, rt0.c2)))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1))<((NULL, rt0.c3, rt0.c2)))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ((+ (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0 COLLATE NOCASE))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0 COLLATE NOCASE))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)/(vt1.c0 COLLATE NOCASE))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOT NULL) WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((2043715512) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOT NULL) ORDER BY ((2043715512) NOTNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOT NULL) WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((2043715512) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOT NULL) ORDER BY ((2043715512) NOTNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOT NULL) WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((2043715512) NOTNULL);
SELECT * FROM vt1 WHERE (0.7872011365257995) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(x''))  NULLS LAST, (NOT (ABS(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7872011365257995) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)IS(x''))  NULLS LAST, (NOT (ABS(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1 WHERE (0.7872011365257995) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(x''))  NULLS LAST, (NOT (ABS(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7872011365257995) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)IS(x''))  NULLS LAST, (NOT (ABS(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1 WHERE (0.7872011365257995) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(x''))  NULLS LAST, (NOT (ABS(vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))GLOB(SUBSTR(rt0.c0, rt0.c2)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((((((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, ')ehL1y', rt0.c1))), ((((((((((((rt0.c0)OR(rt0.c1)))AND(NULL)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))AND('\GTI>W')), TRIM(DISTINCT rt0.c1, 0.20660410030222454)))==(('-452467480' COLLATE BINARY, CASE x'7354'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0)<>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))GLOB(SUBSTR(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((((((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, ')ehL1y', rt0.c1))), ((((((((((((rt0.c0)OR(rt0.c1)))AND(NULL)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))AND('\GTI>W')), TRIM(DISTINCT rt0.c1, 0.20660410030222454)))==(('-452467480' COLLATE BINARY, CASE x'7354'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0)!=(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))GLOB(SUBSTR(rt0.c0, rt0.c2)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((((((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, ')ehL1y', rt0.c1))), ((((((((((((rt0.c0)OR(rt0.c1)))AND(NULL)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))AND('\GTI>W')), TRIM(DISTINCT rt0.c1, 0.20660410030222454)))==(('-452467480' COLLATE BINARY, CASE x'7354'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0)<>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))GLOB(SUBSTR(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((((((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, ')ehL1y', rt0.c1))), ((((((((((((rt0.c0)OR(rt0.c1)))AND(NULL)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))AND('\GTI>W')), TRIM(DISTINCT rt0.c1, 0.20660410030222454)))==(('-452467480' COLLATE BINARY, CASE x'7354'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0)!=(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))GLOB(SUBSTR(rt0.c0, rt0.c2)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((((((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, ')ehL1y', rt0.c1))), ((((((((((((rt0.c0)OR(rt0.c1)))AND(NULL)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))AND('\GTI>W')), TRIM(DISTINCT rt0.c1, 0.20660410030222454)))==(('-452467480' COLLATE BINARY, CASE x'7354'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0)<>(rt0.c1)))));
SELECT * FROM rt0, vt1 WHERE (((vt1.c0)LIKE(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)LIKE(rt0.c3))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0)LIKE(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)LIKE(rt0.c3))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0)LIKE(rt0.c3)));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))OR(((vt1.c0)*(rt0.c2)))))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))))OR('vv&<y')))OR(LENGTH(rt0.c3))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))OR(((vt1.c0)*(rt0.c2)))))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))))OR('vv&<y')))OR(LENGTH(rt0.c3))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))OR(((vt1.c0)*(rt0.c2)))))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))))OR('vv&<y')))OR(LENGTH(rt0.c3))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))OR(((vt1.c0)*(rt0.c2)))))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))))OR('vv&<y')))OR(LENGTH(rt0.c3))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))OR(((vt1.c0)*(rt0.c2)))))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))))OR('vv&<y')))OR(LENGTH(rt0.c3))) WHERE (rt0.c1);
SELECT * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON json_insert(((rt0.c1)AND(vt1.c0)), json_valid(7.33740108E8), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) WHERE (0.15212557794876258);
SELECT SUM(count) FROM (SELECT ((0.15212557794876258) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON json_insert(((rt0.c1)AND(vt1.c0)), json_valid(7.33740108E8), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON json_insert(((rt0.c1)AND(vt1.c0)), json_valid(7.33740108E8), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) WHERE (0.15212557794876258);
SELECT SUM(count) FROM (SELECT ((0.15212557794876258) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON json_insert(((rt0.c1)AND(vt1.c0)), json_valid(7.33740108E8), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT * FROM vt1, rt0 WHERE (UPPER(DISTINCT (NOT (vt1.c0)))) ORDER BY CASE rt0.c3  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c3)))OR(x'')))AND(rt0.c0)))OR(x'')) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (NOT (vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE rt0.c3  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c3)))OR(x'')))AND(rt0.c0)))OR(x'')) END ASC);
SELECT * FROM vt1, rt0 WHERE (UPPER(DISTINCT (NOT (vt1.c0)))) ORDER BY CASE rt0.c3  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c3)))OR(x'')))AND(rt0.c0)))OR(x'')) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (NOT (vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE rt0.c3  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c3)))OR(x'')))AND(rt0.c0)))OR(x'')) END ASC);
SELECT * FROM vt1, rt0 WHERE (UPPER(DISTINCT (NOT (vt1.c0)))) ORDER BY CASE rt0.c3  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c3)))OR(x'')))AND(rt0.c0)))OR(x'')) END ASC;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c2 AS REAL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) NOTNULL) DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c2 AS REAL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) NOTNULL) DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c2 AS REAL)) NOTNULL) DESC;
SELECT * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)&(((rt0.c2)+(rt0.c2))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)&(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)&(((rt0.c2)+(rt0.c2))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)&(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)&(((rt0.c2)+(rt0.c2))))) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)), ((rt0.c2)IS(rt0.c1)), (+ (rt0.c0)))) AND (((NOT (rt0.c1)), (~ (rt0.c2)), ((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)), ((rt0.c2)IS(rt0.c1)), (+ (rt0.c0)))) AND (((NOT (rt0.c1)), (~ (rt0.c2)), ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)), ((rt0.c2)IS(rt0.c1)), (+ (rt0.c0)))) AND (((NOT (rt0.c1)), (~ (rt0.c2)), ((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)), ((rt0.c2)IS(rt0.c1)), (+ (rt0.c0)))) AND (((NOT (rt0.c1)), (~ (rt0.c2)), ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)), ((rt0.c2)IS(rt0.c1)), (+ (rt0.c0)))) AND (((NOT (rt0.c1)), (~ (rt0.c2)), ((vt1.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))>>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0))>>(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))>>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0))>>(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))>>(vt1.c0)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((rt0.c0)||(vt1.c0)), 0.18683294439360854) WHERE (((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END)==(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END)==(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((rt0.c0)||(vt1.c0)), 0.18683294439360854));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((rt0.c0)||(vt1.c0)), 0.18683294439360854) WHERE (((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END)==(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END)==(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((rt0.c0)||(vt1.c0)), 0.18683294439360854));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((rt0.c0)||(vt1.c0)), 0.18683294439360854) WHERE (((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END)==(((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((TOTAL_CHANGES() IN ())) ORDER BY ((json_extract(rt0.c3, vt1.c0))<=(((x'26b6') ISNULL)))  NULLS LAST, x'04fea455' ASC;
SELECT SUM(count) FROM (SELECT ALL (((TOTAL_CHANGES() IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((json_extract(rt0.c3, vt1.c0))<=(((x'26b6') ISNULL)))  NULLS LAST, x'04fea455' ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((TOTAL_CHANGES() IN ())) ORDER BY ((json_extract(rt0.c3, vt1.c0))<=(((x'26b6') ISNULL)))  NULLS LAST, x'04fea455' ASC;
SELECT SUM(count) FROM (SELECT ALL (((TOTAL_CHANGES() IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((json_extract(rt0.c3, vt1.c0))<=(((x'26b6') ISNULL)))  NULLS LAST, x'04fea455' ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((TOTAL_CHANGES() IN ())) ORDER BY ((json_extract(rt0.c3, vt1.c0))<=(((x'26b6') ISNULL)))  NULLS LAST, x'04fea455' ASC;
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) NOTNULL)) ORDER BY ((0X72e704c8) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((0x72e704c8) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) NOTNULL)) ORDER BY ((0X72e704c8) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((0x72e704c8) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) NOTNULL)) ORDER BY ((0X72e704c8) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'63fe', ((((NULL)AND(vt1.c0)))OR(-797618810)), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0)-(vt1.c0)), '')));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'63fe', ((((NULL)AND(vt1.c0)))OR(-797618810)), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0)-(vt1.c0)), ''))));
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'63fe', ((((NULL)AND(vt1.c0)))OR(-797618810)), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0)-(vt1.c0)), '')));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'63fe', ((((NULL)AND(vt1.c0)))OR(-797618810)), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0)-(vt1.c0)), ''))));
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'63fe', ((((NULL)AND(vt1.c0)))OR(-797618810)), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0)-(vt1.c0)), '')));
SELECT * FROM vt1, rt0 WHERE (((rt0.c1)<(1126786303)) COLLATE BINARY) ORDER BY (~ ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(1126786303)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((rt0.c1)<(1126786303)) COLLATE BINARY) ORDER BY (~ ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(1126786303)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((rt0.c1)<(1126786303)) COLLATE BINARY) ORDER BY (~ ((rt0.c1 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((rt0.c0)OR(0.25091483199678744))))>(((~ (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)OR(0.25091483199678744))))>(((~ (rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((rt0.c0)OR(0.25091483199678744))))>(((~ (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)OR(0.25091483199678744))))>(((~ (rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((rt0.c0)OR(0.25091483199678744))))>(((~ (rt0.c1)))))  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ('-990474129') ORDER BY ('-1243810266' IN (((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)), ((vt1.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (('-990474129') IS TRUE)  as count FROM vt1, rt0 ORDER BY ('-1243810266' IN (((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)), ((vt1.c0) IS TRUE))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE ('-990474129') ORDER BY ('-1243810266' IN (((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)), ((vt1.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (('-990474129') IS TRUE)  as count FROM vt1, rt0 ORDER BY ('-1243810266' IN (((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)), ((vt1.c0) IS TRUE))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE ('-990474129') ORDER BY ('-1243810266' IN (((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)), ((vt1.c0) IS TRUE))) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND ((('')|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND ((('')|(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND ((('')|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND ((('')|(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND ((('')|(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN 'e#c	.\n0J#' WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END, rt0.c0 COLLATE BINARY))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN 'e#c	.\n0J#' WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END, rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN 'e#c	.\n0J#' WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END, rt0.c0 COLLATE BINARY))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN 'e#c	.\n0J#' WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END, rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN 'e#c	.\n0J#' WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END IN (CASE WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END, rt0.c0 COLLATE BINARY))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((x'730e')) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt0.c3))) AND (vt1.c0)) WHERE (x'') ORDER BY ((x'') NOT BETWEEN ((vt1.c0 IN (vt1.c0, rt0.c1))) AND ((((rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((x'', vt1.c0, rt0.c0)) AND ((rt0.c3, vt1.c0, vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((x'730e')) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt0.c3))) AND (vt1.c0)) ORDER BY ((x'') NOT BETWEEN ((vt1.c0 IN (vt1.c0, rt0.c1))) AND ((((rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((x'', vt1.c0, rt0.c0)) AND ((rt0.c3, vt1.c0, vt1.c0))))) ASC);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((x'730e')) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt0.c3))) AND (vt1.c0)) WHERE (x'') ORDER BY ((x'') NOT BETWEEN ((vt1.c0 IN (vt1.c0, rt0.c1))) AND ((((rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((x'', vt1.c0, rt0.c0)) AND ((rt0.c3, vt1.c0, vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((x'730e')) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt0.c3))) AND (vt1.c0)) ORDER BY ((x'') NOT BETWEEN ((vt1.c0 IN (vt1.c0, rt0.c1))) AND ((((rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((x'', vt1.c0, rt0.c0)) AND ((rt0.c3, vt1.c0, vt1.c0))))) ASC);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((x'730e')) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt0.c3))) AND (vt1.c0)) WHERE (x'') ORDER BY ((x'') NOT BETWEEN ((vt1.c0 IN (vt1.c0, rt0.c1))) AND ((((rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((x'', vt1.c0, rt0.c0)) AND ((rt0.c3, vt1.c0, vt1.c0))))) ASC;
SELECT ALL * FROM vt1 WHERE ((((+ (x'95f5')))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (x'95f5')))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((+ (x'95f5')))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (x'95f5')))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((+ (x'95f5')))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((LAST_INSERT_ROWID(), CAST(vt1.c0 AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'c32i^zk*d' END)) AND ((((vt1.c0) IS TRUE), ((vt1.c0) NOT NULL), (vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((LAST_INSERT_ROWID(), CAST(vt1.c0 AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'c32i^zk*d' END)) AND ((((vt1.c0) IS TRUE), ((vt1.c0) NOT NULL), (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((LAST_INSERT_ROWID(), CAST(vt1.c0 AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'c32i^zk*d' END)) AND ((((vt1.c0) IS TRUE), ((vt1.c0) NOT NULL), (vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((LAST_INSERT_ROWID(), CAST(vt1.c0 AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'c32i^zk*d' END)) AND ((((vt1.c0) IS TRUE), ((vt1.c0) NOT NULL), (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((LAST_INSERT_ROWID(), CAST(vt1.c0 AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'c32i^zk*d' END)) AND ((((vt1.c0) IS TRUE), ((vt1.c0) NOT NULL), (vt1.c0 IN ())))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c2)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (((vt1.c0))<>((rt0.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN (NULL IN (rt0.c2)) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c2)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (((vt1.c0))!=((rt0.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN (NULL IN (rt0.c2)) END);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c2)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (((vt1.c0))<>((rt0.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN (NULL IN (rt0.c2)) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c2)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (((vt1.c0))!=((rt0.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN (NULL IN (rt0.c2)) END);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c2)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)) THEN (((vt1.c0))<>((rt0.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN (NULL IN (rt0.c2)) END WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)AND(vt1.c0))) IS TRUE) WHERE ((+ (((rt0.c1)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)AND(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)AND(vt1.c0))) IS TRUE) WHERE ((+ (((rt0.c1)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)AND(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c0)AND(vt1.c0))) IS TRUE) WHERE ((+ (((rt0.c1)OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c3)) AS REAL));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))<=(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))<=(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))<=(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))<=(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))<=(((vt1.c0) ISNULL))));
SELECT * FROM rt0 WHERE (((((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c3))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c3))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c0, rt0.c3))) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((+ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (-8.9277087E7 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0)GLOB(vt1.c0)))!=(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (-8.9277087E7 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0)GLOB(vt1.c0)))<>(((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((+ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (-8.9277087E7 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0)GLOB(vt1.c0)))!=(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (-8.9277087E7 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0)GLOB(vt1.c0)))<>(((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((+ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (-8.9277087E7 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0)GLOB(vt1.c0)))!=(((vt1.c0) NOT NULL)));
SELECT ALL * FROM vt1, rt0 WHERE ((+ (((rt0.c2)|(0Xffffffff94c21436)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)|(0Xffffffff94c21436))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((+ (((rt0.c2)|(0Xffffffff94c21436)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)|(0Xffffffff94c21436))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((+ (((rt0.c2)|(0Xffffffff94c21436)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY WHERE (((((((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c3)))OR((rt0.c1 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((-844587470)||(rt0.c1)))))OR(((rt0.c0)<<(vt1.c0)))))OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((LIKE(vt1.c0, rt0.c1, 'O')) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c3)))OR((rt0.c1 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((-844587470)||(rt0.c1)))))OR(((rt0.c0)<<(vt1.c0)))))OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY ORDER BY ((LIKE(vt1.c0, rt0.c1, 'O')) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY WHERE (((((((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c3)))OR((rt0.c1 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((-844587470)||(rt0.c1)))))OR(((rt0.c0)<<(vt1.c0)))))OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((LIKE(vt1.c0, rt0.c1, 'O')) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c3)))OR((rt0.c1 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((-844587470)||(rt0.c1)))))OR(((rt0.c0)<<(vt1.c0)))))OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY ORDER BY ((LIKE(vt1.c0, rt0.c1, 'O')) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY WHERE (((((((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c3)))OR((rt0.c1 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((-844587470)||(rt0.c1)))))OR(((rt0.c0)<<(vt1.c0)))))OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((LIKE(vt1.c0, rt0.c1, 'O')) IS FALSE);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)AND(rt0.c0)) COLLATE RTRIM) ORDER BY CASE 2.009208838E9  WHEN ((rt0.c2)AND(rt0.c0)) THEN HEX(rt0.c0) END DESC, rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)AND(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE 2.009208838E9  WHEN ((rt0.c2)AND(rt0.c0)) THEN HEX(rt0.c0) END DESC, rt0.c3  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)AND(rt0.c0)) COLLATE RTRIM) ORDER BY CASE 2.009208838E9  WHEN ((rt0.c2)AND(rt0.c0)) THEN HEX(rt0.c0) END DESC, rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)AND(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE 2.009208838E9  WHEN ((rt0.c2)AND(rt0.c0)) THEN HEX(rt0.c0) END DESC, rt0.c3  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)AND(rt0.c0)) COLLATE RTRIM) ORDER BY CASE 2.009208838E9  WHEN ((rt0.c2)AND(rt0.c0)) THEN HEX(rt0.c0) END DESC, rt0.c3  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1) IS TRUE) ELSE (rt0.c1 IN (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1) IS TRUE) ELSE (rt0.c1 IN (rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1) IS TRUE) ELSE (rt0.c1 IN (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1) IS TRUE) ELSE (rt0.c1 IN (rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c1) IS TRUE) ELSE (rt0.c1 IN (rt0.c1)) END);
SELECT COUNT(*) FROM vt1 WHERE (INSTR(((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE NOCASE)) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)), CAST(vt1.c0 AS REAL), vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(x'20f0')), LOWER(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)), CAST(vt1.c0 AS REAL), vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(x'20f0')), LOWER(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (INSTR(((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE NOCASE)) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)), CAST(vt1.c0 AS REAL), vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(x'20f0')), LOWER(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)), CAST(vt1.c0 AS REAL), vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(x'20f0')), LOWER(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (INSTR(((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE NOCASE)) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)), CAST(vt1.c0 AS REAL), vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(x'20f0')), LOWER(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN CASE WHEN 0.610311771870325 THEN rt0.c2 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE NOCASE END WHERE (((LOWER(DISTINCT vt1.c0))>=(CASE rt0.c0  WHEN 1782884975 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY 0.9468609851265916 DESC  NULLS LAST, CASE (rt0.c2 IN ())  WHEN HEX(DISTINCT rt0.c2) THEN 0.46242311699772487 WHEN CAST(vt1.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.9981783029732487))) THEN x'7d71' ELSE (((rt0.c3))>((rt0.c0))) END ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL) DESC  NULLS LAST, INSTR(rt0.c3, (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt1.c0))>=(CASE rt0.c0  WHEN 1782884975 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN CASE WHEN 0.610311771870325 THEN rt0.c2 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE NOCASE END ORDER BY 0.9468609851265916 DESC  NULLS LAST, CASE (rt0.c2 IN ())  WHEN HEX(DISTINCT rt0.c2) THEN 0.46242311699772487 WHEN CAST(vt1.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.9981783029732487))) THEN x'7d71' ELSE (((rt0.c3))>((rt0.c0))) END ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL) DESC  NULLS LAST, INSTR(rt0.c3, (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN CASE WHEN 0.610311771870325 THEN rt0.c2 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE NOCASE END WHERE (((LOWER(DISTINCT vt1.c0))>=(CASE rt0.c0  WHEN 1782884975 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY 0.9468609851265916 DESC  NULLS LAST, CASE (rt0.c2 IN ())  WHEN HEX(DISTINCT rt0.c2) THEN 0.46242311699772487 WHEN CAST(vt1.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.9981783029732487))) THEN x'7d71' ELSE (((rt0.c3))>((rt0.c0))) END ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL) DESC  NULLS LAST, INSTR(rt0.c3, (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt1.c0))>=(CASE rt0.c0  WHEN 1782884975 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN CASE WHEN 0.610311771870325 THEN rt0.c2 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE NOCASE END ORDER BY 0.9468609851265916 DESC  NULLS LAST, CASE (rt0.c2 IN ())  WHEN HEX(DISTINCT rt0.c2) THEN 0.46242311699772487 WHEN CAST(vt1.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.9981783029732487))) THEN x'7d71' ELSE (((rt0.c3))>((rt0.c0))) END ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL) DESC  NULLS LAST, INSTR(rt0.c3, (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN CASE WHEN 0.610311771870325 THEN rt0.c2 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE NOCASE END WHERE (((LOWER(DISTINCT vt1.c0))>=(CASE rt0.c0  WHEN 1782884975 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY 0.9468609851265916 DESC  NULLS LAST, CASE (rt0.c2 IN ())  WHEN HEX(DISTINCT rt0.c2) THEN 0.46242311699772487 WHEN CAST(vt1.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.9981783029732487))) THEN x'7d71' ELSE (((rt0.c3))>((rt0.c0))) END ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL) DESC  NULLS LAST, INSTR(rt0.c3, (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)), ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)), (+ (rt0.c1)))) AND ((((rt0.c3) IS TRUE), (((rt0.c1))=((rt0.c1))), CAST(rt0.c1 AS BLOB))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 ELSE HEX(rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)), ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)), (+ (rt0.c1)))) AND ((((rt0.c3) IS TRUE), (((rt0.c1))=((rt0.c1))), CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 ELSE HEX(rt0.c2) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)), ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)), (+ (rt0.c1)))) AND ((((rt0.c3) IS TRUE), (((rt0.c1))=((rt0.c1))), CAST(rt0.c1 AS BLOB))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 ELSE HEX(rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)), ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)), (+ (rt0.c1)))) AND ((((rt0.c3) IS TRUE), (((rt0.c1))=((rt0.c1))), CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 ELSE HEX(rt0.c2) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)), ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)), (+ (rt0.c1)))) AND ((((rt0.c3) IS TRUE), (((rt0.c1))=((rt0.c1))), CAST(rt0.c1 AS BLOB))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 ELSE HEX(rt0.c2) END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND((0.407535237054404 IN (vt1.c0)))))AND((vt1.c0 IN ()))))OR(vt1.c0)))AND(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND((0.407535237054404 IN (vt1.c0)))))AND((vt1.c0 IN ()))))OR(vt1.c0)))AND(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND((0.407535237054404 IN (vt1.c0)))))AND((vt1.c0 IN ()))))OR(vt1.c0)))AND(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND((0.407535237054404 IN (vt1.c0)))))AND((vt1.c0 IN ()))))OR(vt1.c0)))AND(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND((0.407535237054404 IN (vt1.c0)))))AND((vt1.c0 IN ()))))OR(vt1.c0)))AND(CAST(vt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT ALL * FROM vt1 WHERE (((PRINTF(vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0 COLLATE NOCASE))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((PRINTF(vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 COLLATE NOCASE))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((PRINTF(vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0 COLLATE NOCASE))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((PRINTF(vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 COLLATE NOCASE))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((PRINTF(vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0 COLLATE NOCASE))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))||(CAST(rt0.c3 AS TEXT)))) ORDER BY CAST((((rt0.c3)) BETWEEN ((x'')) AND ((vt1.c0))) AS REAL)  NULLS FIRST, ((0x651a3a28)LIKE(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))||(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((((rt0.c3)) BETWEEN ((x'')) AND ((vt1.c0))) AS REAL)  NULLS FIRST, ((0X651a3a28)LIKE(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))||(CAST(rt0.c3 AS TEXT)))) ORDER BY CAST((((rt0.c3)) BETWEEN ((x'')) AND ((vt1.c0))) AS REAL)  NULLS FIRST, ((0x651a3a28)LIKE(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))||(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((((rt0.c3)) BETWEEN ((x'')) AND ((vt1.c0))) AS REAL)  NULLS FIRST, ((0X651a3a28)LIKE(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))||(CAST(rt0.c3 AS TEXT)))) ORDER BY CAST((((rt0.c3)) BETWEEN ((x'')) AND ((vt1.c0))) AS REAL)  NULLS FIRST, ((0x651a3a28)LIKE(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(NULL)))%((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))%((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(NULL)))%((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))%((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(NULL)))%((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))IS((('528748632') BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))IS((('528748632') BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))IS((('528748632') BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))IS((('528748632') BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))IS((('528748632') BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (DATE(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0)LIKE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((DATE(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0)LIKE(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (DATE(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0)LIKE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((DATE(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0)LIKE(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (DATE(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0)LIKE(vt1.c0))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((+ (CAST('0.0865525215935753' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST('0.0865525215935753' AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((+ (CAST('0.0865525215935753' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST('0.0865525215935753' AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((+ (CAST('0.0865525215935753' AS NUMERIC))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN (((rt0.c0))<((vt1.c0))) END WHERE (vt1.c0) ORDER BY LOWER(((rt0.c0) IS TRUE)) ASC  NULLS LAST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c0 IN (rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN (((rt0.c0))<((vt1.c0))) END ORDER BY LOWER(((rt0.c0) IS TRUE)) ASC  NULLS LAST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c0 IN (rt0.c3)) END);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN (((rt0.c0))<((vt1.c0))) END WHERE (vt1.c0) ORDER BY LOWER(((rt0.c0) IS TRUE)) ASC  NULLS LAST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c0 IN (rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN (((rt0.c0))<((vt1.c0))) END ORDER BY LOWER(((rt0.c0) IS TRUE)) ASC  NULLS LAST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c0 IN (rt0.c3)) END);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN (((rt0.c0))<((vt1.c0))) END WHERE (vt1.c0) ORDER BY LOWER(((rt0.c0) IS TRUE)) ASC  NULLS LAST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c0 IN (rt0.c3)) END;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE) ORDER BY CAST((NOT (vt1.c0)) AS BLOB) DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TOTAL_CHANGES() END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((NOT (vt1.c0)) AS BLOB) DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TOTAL_CHANGES() END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE) ORDER BY CAST((NOT (vt1.c0)) AS BLOB) DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TOTAL_CHANGES() END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((NOT (vt1.c0)) AS BLOB) DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TOTAL_CHANGES() END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE) ORDER BY CAST((NOT (vt1.c0)) AS BLOB) DESC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) THEN TOTAL_CHANGES() END  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))AND(TYPEOF(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))AND(TYPEOF(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))AND(TYPEOF(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))AND(TYPEOF(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))AND(TYPEOF(DISTINCT rt0.c2))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN TYPEOF(rt0.c3) END) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS FALSE) THEN TYPEOF(rt0.c3) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN TYPEOF(rt0.c3) END) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS FALSE) THEN TYPEOF(rt0.c3) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN TYPEOF(rt0.c3) END) ORDER BY rt0.c0 ASC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)&(rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c2) NOT NULL) IN (CAST(0.23498597091563844 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)&(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) NOT NULL) IN (CAST(0.23498597091563844 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)&(rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c2) NOT NULL) IN (CAST(0.23498597091563844 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)&(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) NOT NULL) IN (CAST(0.23498597091563844 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)&(rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c2) NOT NULL) IN (CAST(0.23498597091563844 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((vt1.c0 IN ()))>>((- (vt1.c0))))  NULLS LAST, CASE WHEN ((NULL)/(vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))>>((- (vt1.c0))))  NULLS LAST, CASE WHEN ((NULL)/(vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((vt1.c0 IN ()))>>((- (vt1.c0))))  NULLS LAST, CASE WHEN ((NULL)/(vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))>>((- (vt1.c0))))  NULLS LAST, CASE WHEN ((NULL)/(vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((vt1.c0 IN ()))>>((- (vt1.c0))))  NULLS LAST, CASE WHEN ((NULL)/(vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END;
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON x'329c' WHERE (CASE WHEN ((rt0.c2)LIKE(x'e1e3')) THEN -658876139 WHEN (rt0.c2 IN (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (~ ('now_*')) THEN CASE rt0.c3  WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN ']W' THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)LIKE(x'e1e3')) THEN -658876139 WHEN (rt0.c2 IN (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (~ ('now_*')) THEN CASE rt0.c3  WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN ']W' THEN rt0.c1 END END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON x'329c');
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON x'329c' WHERE (CASE WHEN ((rt0.c2)LIKE(x'e1e3')) THEN -658876139 WHEN (rt0.c2 IN (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (~ ('now_*')) THEN CASE rt0.c3  WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN ']W' THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)LIKE(x'e1e3')) THEN -658876139 WHEN (rt0.c2 IN (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (~ ('now_*')) THEN CASE rt0.c3  WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN ']W' THEN rt0.c1 END END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON x'329c');
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON x'329c' WHERE (CASE WHEN ((rt0.c2)LIKE(x'e1e3')) THEN -658876139 WHEN (rt0.c2 IN (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (~ ('now_*')) THEN CASE rt0.c3  WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN ']W' THEN rt0.c1 END END);
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))>>(((rt0.c3)>=(rt0.c0))))) ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) DESC  NULLS LAST, CAST(TRIM(DISTINCT rt0.c1) AS REAL) ASC, TRIM(((rt0.c2)/(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))>>(((rt0.c3)>=(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) DESC  NULLS LAST, CAST(TRIM(DISTINCT rt0.c1) AS REAL) ASC, TRIM(((rt0.c2)/(rt0.c2))));
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))>>(((rt0.c3)>=(rt0.c0))))) ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) DESC  NULLS LAST, CAST(TRIM(DISTINCT rt0.c1) AS REAL) ASC, TRIM(((rt0.c2)/(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))>>(((rt0.c3)>=(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) DESC  NULLS LAST, CAST(TRIM(DISTINCT rt0.c1) AS REAL) ASC, TRIM(((rt0.c2)/(rt0.c2))));
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c1)))>>(((rt0.c3)>=(rt0.c0))))) ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) DESC  NULLS LAST, CAST(TRIM(DISTINCT rt0.c1) AS REAL) ASC, TRIM(((rt0.c2)/(rt0.c2)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CHAR(x'', ((vt1.c0)&(rt0.c1)), ((rt0.c1) ISNULL), CAST(rt0.c1 AS TEXT), ((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(x'', ((vt1.c0)&(rt0.c1)), ((rt0.c1) ISNULL), CAST(rt0.c1 AS TEXT), ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CHAR(x'', ((vt1.c0)&(rt0.c1)), ((rt0.c1) ISNULL), CAST(rt0.c1 AS TEXT), ((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(x'', ((vt1.c0)&(rt0.c1)), ((rt0.c1) ISNULL), CAST(rt0.c1 AS TEXT), ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CHAR(x'', ((vt1.c0)&(rt0.c1)), ((rt0.c1) ISNULL), CAST(rt0.c1 AS TEXT), ((rt0.c1) NOT NULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0)))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0)))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2))<>((rt0.c2))) COLLATE BINARY) ORDER BY ((vt1.c0 COLLATE NOCASE)>=((((rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((vt1.c0, rt0.c2, NULL))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))!=((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)>=((((rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((vt1.c0, rt0.c2, NULL))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2))<>((rt0.c2))) COLLATE BINARY) ORDER BY ((vt1.c0 COLLATE NOCASE)>=((((rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((vt1.c0, rt0.c2, NULL))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))!=((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)>=((((rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((vt1.c0, rt0.c2, NULL))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2))<>((rt0.c2))) COLLATE BINARY) ORDER BY ((vt1.c0 COLLATE NOCASE)>=((((rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((vt1.c0, rt0.c2, NULL))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c3, rt0.c1, x'')) BETWEEN ((rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((0.6954642297693179) BETWEEN (rt0.c2) AND ('-1565146768')) THEN (((rt0.c0))<((rt0.c0))) ELSE CAST(rt0.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3, rt0.c1, x'')) BETWEEN ((rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((0.6954642297693179) BETWEEN (rt0.c2) AND ('-1565146768')) THEN (((rt0.c0))<((rt0.c0))) ELSE CAST(rt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c3, rt0.c1, x'')) BETWEEN ((rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((0.6954642297693179) BETWEEN (rt0.c2) AND ('-1565146768')) THEN (((rt0.c0))<((rt0.c0))) ELSE CAST(rt0.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3, rt0.c1, x'')) BETWEEN ((rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((0.6954642297693179) BETWEEN (rt0.c2) AND ('-1565146768')) THEN (((rt0.c0))<((rt0.c0))) ELSE CAST(rt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c3, rt0.c1, x'')) BETWEEN ((rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((0.6954642297693179) BETWEEN (rt0.c2) AND ('-1565146768')) THEN (((rt0.c0))<((rt0.c0))) ELSE CAST(rt0.c1 AS NUMERIC) END);
SELECT * FROM rt0 WHERE ('-961483289');
SELECT SUM(count) FROM (SELECT (('-961483289') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-961483289');
SELECT SUM(count) FROM (SELECT (('-961483289') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-961483289');
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) COLLATE NOCASE COLLATE RTRIM WHERE (((rt0.c2)LIKE(((rt0.c0) NOTNULL)))) ORDER BY ((((rt0.c0)LIKE(rt0.c2)))LIKE(((rt0.c1)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)LIKE(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) COLLATE NOCASE COLLATE RTRIM ORDER BY ((((rt0.c0)LIKE(rt0.c2)))LIKE(((rt0.c1)%(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) COLLATE NOCASE COLLATE RTRIM WHERE (((rt0.c2)LIKE(((rt0.c0) NOTNULL)))) ORDER BY ((((rt0.c0)LIKE(rt0.c2)))LIKE(((rt0.c1)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)LIKE(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) COLLATE NOCASE COLLATE RTRIM ORDER BY ((((rt0.c0)LIKE(rt0.c2)))LIKE(((rt0.c1)%(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) COLLATE NOCASE COLLATE RTRIM WHERE (((rt0.c2)LIKE(((rt0.c0) NOTNULL)))) ORDER BY ((((rt0.c0)LIKE(rt0.c2)))LIKE(((rt0.c1)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((((+ (rt0.c2))))>((CAST(rt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c2))))>((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((+ (rt0.c2))))>((CAST(rt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c2))))>((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((+ (rt0.c2))))>((CAST(rt0.c1 AS NUMERIC)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((NOT (x''))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (x''))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((NOT (x''))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (x''))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((NOT (x''))) ISNULL));
SELECT * FROM vt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (rt0.c3);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON TRIM(DISTINCT rt0.c3, rt0.c1) COLLATE RTRIM WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON TRIM(DISTINCT rt0.c3, rt0.c1) COLLATE RTRIM);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON TRIM(DISTINCT rt0.c3, rt0.c1) COLLATE RTRIM WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON TRIM(DISTINCT rt0.c3, rt0.c1) COLLATE RTRIM);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON TRIM(DISTINCT rt0.c3, rt0.c1) COLLATE RTRIM WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0))) ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0) NOT NULL))) DESC, '-61855802' ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0) NOT NULL))) DESC, '-61855802' ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0))) ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0) NOT NULL))) DESC, '-61855802' ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0) NOT NULL))) DESC, '-61855802' ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0))) ORDER BY vt1.c0  NULLS LAST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0) NOT NULL))) DESC, '-61855802' ASC;
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c3))<((vt1.c0))) THEN ((0.2752953076298703) BETWEEN (rt0.c3) AND (x'450c')) WHEN CASE '1af诞LTt.Q'  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c3)|(rt0.c1)) THEN 0.05241819344529852 COLLATE RTRIM END WHERE ((((rt0.c3, rt0.c3, rt0.c2)) BETWEEN ((513634102, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c1)>(vt1.c0)))) AND ((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1)), '2097695965', (rt0.c1 IN ()))))) ORDER BY ((((rt0.c2)!=(rt0.c1)))<<(TRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c2)) BETWEEN ((513634102, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c1)>(vt1.c0)))) AND ((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1)), '2097695965', (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c3))<((vt1.c0))) THEN ((0.2752953076298703) BETWEEN (rt0.c3) AND (x'450c')) WHEN CASE '1af诞LTt.Q'  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c3)|(rt0.c1)) THEN 0.05241819344529852 COLLATE RTRIM END ORDER BY ((((rt0.c2)!=(rt0.c1)))<<(TRIM(rt0.c2))));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c3))<((vt1.c0))) THEN ((0.2752953076298703) BETWEEN (rt0.c3) AND (x'450c')) WHEN CASE '1af诞LTt.Q'  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c3)|(rt0.c1)) THEN 0.05241819344529852 COLLATE RTRIM END WHERE ((((rt0.c3, rt0.c3, rt0.c2)) BETWEEN ((513634102, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c1)>(vt1.c0)))) AND ((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1)), '2097695965', (rt0.c1 IN ()))))) ORDER BY ((((rt0.c2)!=(rt0.c1)))<<(TRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c2)) BETWEEN ((513634102, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c1)>(vt1.c0)))) AND ((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1)), '2097695965', (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c3))<((vt1.c0))) THEN ((0.2752953076298703) BETWEEN (rt0.c3) AND (x'450c')) WHEN CASE '1af诞LTt.Q'  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c3)|(rt0.c1)) THEN 0.05241819344529852 COLLATE RTRIM END ORDER BY ((((rt0.c2)!=(rt0.c1)))<<(TRIM(rt0.c2))));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE WHEN (((rt0.c3))<((vt1.c0))) THEN ((0.2752953076298703) BETWEEN (rt0.c3) AND (x'450c')) WHEN CASE '1af诞LTt.Q'  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c3)|(rt0.c1)) THEN 0.05241819344529852 COLLATE RTRIM END WHERE ((((rt0.c3, rt0.c3, rt0.c2)) BETWEEN ((513634102, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c1)>(vt1.c0)))) AND ((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1)), '2097695965', (rt0.c1 IN ()))))) ORDER BY ((((rt0.c2)!=(rt0.c1)))<<(TRIM(rt0.c2)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (x'') ORDER BY CAST(vt1.c0 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(vt1.c0 AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt1 WHERE (x'') ORDER BY CAST(vt1.c0 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(vt1.c0 AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt1 WHERE (x'') ORDER BY CAST(vt1.c0 AS NUMERIC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((6.82972841E8)AND(vt1.c0)))AND(vt1.c0)))&('1927742664'))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((6.82972841E8)AND(vt1.c0)))AND(vt1.c0)))&('1927742664'))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((6.82972841E8)AND(vt1.c0)))AND(vt1.c0)))&('1927742664'))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((6.82972841E8)AND(vt1.c0)))AND(vt1.c0)))&('1927742664'))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((6.82972841E8)AND(vt1.c0)))AND(vt1.c0)))&('1927742664'))) ORDER BY vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(DISTINCT '{a}K') AS INTEGER) WHERE ((((vt1.c0)<=(vt1.c0)) IN ())) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))  WHEN 'MT' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c0 END ELSE (rt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)<=(vt1.c0)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(DISTINCT '{a}K') AS INTEGER) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))  WHEN 'MT' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c0 END ELSE (rt0.c0 IN ()) END ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(DISTINCT '{a}K') AS INTEGER) WHERE ((((vt1.c0)<=(vt1.c0)) IN ())) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))  WHEN 'MT' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c0 END ELSE (rt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)<=(vt1.c0)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(DISTINCT '{a}K') AS INTEGER) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))  WHEN 'MT' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c0 END ELSE (rt0.c0 IN ()) END ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(DISTINCT '{a}K') AS INTEGER) WHERE ((((vt1.c0)<=(vt1.c0)) IN ())) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))  WHEN 'MT' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c0 END ELSE (rt0.c0 IN ()) END ASC;
SELECT * FROM vt1 WHERE (CASE WHEN HEX(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt1.c0) WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt1.c0) WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN HEX(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt1.c0) WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt1.c0) WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN HEX(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt1.c0) WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ (((((((((vt1.c0)OR('-1018905461')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt1.c0)OR('-1018905461')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ (((((((((vt1.c0)OR('-1018905461')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt1.c0)OR('-1018905461')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ (((((((((vt1.c0)OR('-1018905461')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM rt0 WHERE ((- ((~ (rt0.c0))))) ORDER BY (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) IN (6.98248459E8)) DESC;
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) IN (6.98248459E8)) DESC);
SELECT * FROM rt0 WHERE ((- ((~ (rt0.c0))))) ORDER BY (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) IN (6.98248459E8)) DESC;
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) IN (6.98248459E8)) DESC);
SELECT * FROM rt0 WHERE ((- ((~ (rt0.c0))))) ORDER BY (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) IN (6.98248459E8)) DESC;
SELECT ALL * FROM rt0 NOT INDEXED FULL OUTER JOIN vt1 ON 'tA' WHERE (CASE ((vt1.c0) IS FALSE)  WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY ELSE TOTAL_CHANGES() END) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS FALSE)  WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON 'tA' ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED FULL OUTER JOIN vt1 ON 'tA' WHERE (CASE ((vt1.c0) IS FALSE)  WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY ELSE TOTAL_CHANGES() END) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS FALSE)  WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON 'tA' ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED FULL OUTER JOIN vt1 ON 'tA' WHERE (CASE ((vt1.c0) IS FALSE)  WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY ELSE TOTAL_CHANGES() END) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST;
SELECT * FROM rt0 WHERE ((NOT (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c3)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c1)OR(rt0.c0)))OR('528748632')))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c3) ISNULL), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c2))))==((((vt1.c0) ISNULL), ((rt0.c3)AND(rt0.c3)), (~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1)OR(rt0.c0)))OR('528748632')))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c3) ISNULL), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c2))))==((((vt1.c0) ISNULL), ((rt0.c3)AND(rt0.c3)), (~ (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c1)OR(rt0.c0)))OR('528748632')))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c3) ISNULL), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c2))))==((((vt1.c0) ISNULL), ((rt0.c3)AND(rt0.c3)), (~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1)OR(rt0.c0)))OR('528748632')))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c3) ISNULL), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c2))))==((((vt1.c0) ISNULL), ((rt0.c3)AND(rt0.c3)), (~ (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c1)OR(rt0.c0)))OR('528748632')))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c3) ISNULL), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c2))))==((((vt1.c0) ISNULL), ((rt0.c3)AND(rt0.c3)), (~ (rt0.c3))))));
SELECT COUNT(*) FROM vt1 WHERE (DATETIME(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c0)<>(vt1.c0)) THEN (((vt1.c0))==((vt1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c0)!=(vt1.c0)) THEN (((vt1.c0))==((vt1.c0))) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (DATETIME(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c0)<>(vt1.c0)) THEN (((vt1.c0))==((vt1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c0)!=(vt1.c0)) THEN (((vt1.c0))==((vt1.c0))) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (DATETIME(CAST(vt1.c0 AS NUMERIC), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c0)<>(vt1.c0)) THEN (((vt1.c0))==((vt1.c0))) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
