-- Time: 2024/06/10 06:02:53
-- Database: database92
-- Database version: 3.40.0
-- seed value: 3992318992
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 7ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 TEXT ); -- 1ms;
REINDEX BINARY; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (0.09160761010819451), (x''), (0.09160761010819451); -- 0ms;
END TRANSACTION; -- 1ms;
ANALYZE vt0; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-12520031,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.019720246376547457); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ((+ ((+ ('-12520031'))))); -- 0ms;
DELETE FROM rt1; -- 12ms;
INSERT OR IGNORE INTO rt1(c3, c0) VALUES (CAST((0.1789664058262429 IN ()) AS INTEGER), 0xffffffffaa7ecc3f); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (x''), (-1.434530753E9), ('q'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 3ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (1536042740, '-1679151503'), (NULL, NULL), ('0.019720246376547457', 'atOYJ&n'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', '-414127453'), (x'', '-414127453'), (x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0) VALUES ('-1434530753', 'e~3d'); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (x''); -- 5ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('-1193097366', NULL); -- 1ms;
ANALYZE; -- 0ms;
VACUUM; -- 1ms;
UPDATE OR ABORT rt1 SET c0=0.6545321179220895, c2=0xfffffffff68b38ef WHERE ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END) BETWEEN ((((rt1.c3)) BETWEEN ((NULL)) AND ((rt1.c0)))) AND ((((0x3fd4b9ba)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE (- (vt0.c0 COLLATE BINARY)); -- 0ms;
INSERT OR FAIL INTO rt1(c1) VALUES (0.1789664058262429); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE vt0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 801535620); -- 3ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (NULL); -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 REAL ); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3) VALUES (x'', 'pٝ嘲bK,ᦁ'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c3, c1) VALUES (x'', 0.8584021123594024, NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES ('e~3d', x'', 0.2962016533003011), (NULL, '', -414127453), (NULL, x'', 0.20271843884465934); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES ('-431788739'); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (-1434530753); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
ANALYZE rt0; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (NULL, 'cm', 1573645013, 'start of dayHB9'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0, c1, c2) VALUES ('140133074', '-324247485', x'', NULL); -- 0ms;
UPDATE rt1 SET (c1)=(x'dfb5') WHERE (((807446144))==((''))) COLLATE NOCASE; -- 0ms;
END; -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1) VALUES (x'610b', x'c4d37cf9'), (1.892213974E9, ''), (x'', 0); -- 0ms;
PRAGMA stats; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c3) VALUES (NULL, '02vyhFm4쁗'); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c3, c0) VALUES ('C槴ZI%J訐', NULL, 0xfffffffff68b38ef, '-1193097366'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c3, c0) VALUES ('', '៘>', 0Xffffffffed8e5632, NULL), (NULL, x'ad20', -9.50564336E8, NULL), (0.37577649343419706, -2.13541892E9, 0xffffffff9bea2e71, x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c3, c2, c1) VALUES ('-122807935', NULL, 0.827915080032228); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT ((((rt1.c2) IS TRUE))-(((rt1.c3) IS TRUE))), rt0.c3, (((rt1.c0)IS NOT(rt0.c0)) IN ()) FROM rt0, rt1 WHERE (((((((((-2.13541892E9)AND(NULL)))AND('-309438926')))AND(x'db1b')))OR(NULL)) COLLATE NOCASE); -- 0ms;
CREATE TEMP TABLE t0 (c0 TEXT ); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)OR((t0.c0 IN (t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)OR((t0.c0 IN (t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)OR((t0.c0 IN (t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)OR((t0.c0 IN (t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)OR((t0.c0 IN (t0.c0, t0.c0)))));
SELECT ALL * FROM t0, rt1, v0, rt0 WHERE ((((((t0.c0))>=((rt1.c2))))%((~ (0.8322650978407421))))) ORDER BY CAST(rt1.c0 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))>=((rt1.c2))))%((~ (0.8322650978407421))))) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY CAST(rt1.c0 AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1, v0, rt0 WHERE ((((((t0.c0))>=((rt1.c2))))%((~ (0.8322650978407421))))) ORDER BY CAST(rt1.c0 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))>=((rt1.c2))))%((~ (0.8322650978407421))))) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY CAST(rt1.c0 AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1, v0, rt0 WHERE ((((((t0.c0))>=((rt1.c2))))%((~ (0.8322650978407421))))) ORDER BY CAST(rt1.c0 AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM v0, t0, rt0 WHERE (((CASE WHEN v0.c0 THEN rt0.c3 ELSE t0.c0 END) NOT NULL)) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c3)))AND(v0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE t0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY rt0.c1 ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c3)))AND(v0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, (t0.c0 COLLATE BINARY IN ())  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt0 WHERE (((CASE WHEN v0.c0 THEN rt0.c3 ELSE t0.c0 END) NOT NULL)) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c3)))AND(v0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE t0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY rt0.c1 ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c3)))AND(v0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, (t0.c0 COLLATE BINARY IN ())  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt0 WHERE (((CASE WHEN v0.c0 THEN rt0.c3 ELSE t0.c0 END) NOT NULL)) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c3)))AND(v0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((NULL COLLATE RTRIM)AND(t0.c0)))OR('q[៘')));
SELECT SUM(count) FROM (SELECT ((((((NULL COLLATE RTRIM)AND(t0.c0)))OR('q[៘'))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((NULL COLLATE RTRIM)AND(t0.c0)))OR('q[៘')));
SELECT SUM(count) FROM (SELECT ((((((NULL COLLATE RTRIM)AND(t0.c0)))OR('q[៘'))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((NULL COLLATE RTRIM)AND(t0.c0)))OR('q[៘')));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(((0.4693554228181085)>(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))LIKE(1.070905786E9)) ASC, ((((rt0.c1)>(rt0.c0)))>(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(((0.4693554228181085)>(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))LIKE(1.070905786E9)) ASC, ((((rt0.c1)>(rt0.c0)))>(rt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(((0.4693554228181085)>(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))LIKE(1.070905786E9)) ASC, ((((rt0.c1)>(rt0.c0)))>(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(((0.4693554228181085)>(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))LIKE(1.070905786E9)) ASC, ((((rt0.c1)>(rt0.c0)))>(rt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(((0.4693554228181085)>(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))LIKE(1.070905786E9)) ASC, ((((rt0.c1)>(rt0.c0)))>(rt0.c0))  NULLS FIRST;
SELECT * FROM v0 WHERE ((NOT (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (IFNULL(0Xffffffffb8e2c76a, rt0.c3))));
SELECT SUM(count) FROM (SELECT (((- (IFNULL(0Xffffffffb8e2c76a, rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (IFNULL(0Xffffffffb8e2c76a, rt0.c3))));
SELECT SUM(count) FROM (SELECT (((- (IFNULL(0Xffffffffb8e2c76a, rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (IFNULL(0Xffffffffb8e2c76a, rt0.c3))));
SELECT ALL * FROM rt1 WHERE (CASE ((0.23920496503404787) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN NULL THEN (~ (rt1.c2)) ELSE ((rt1.c2)IS NOT(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.23920496503404787) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN NULL THEN (~ (rt1.c2)) ELSE ((rt1.c2)IS NOT(rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((0.23920496503404787) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN NULL THEN (~ (rt1.c2)) ELSE ((rt1.c2)IS NOT(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.23920496503404787) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN NULL THEN (~ (rt1.c2)) ELSE ((rt1.c2)IS NOT(rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((0.23920496503404787) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN NULL THEN (~ (rt1.c2)) ELSE ((rt1.c2)IS NOT(rt1.c3)) END);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON rt1.c2 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON rt1.c2);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON rt1.c2 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON rt1.c2);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON rt1.c2 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CASE ((rt1.c1) NOTNULL)  WHEN ((rt1.c1)>=(rt1.c1)) THEN ((v0.c0)GLOB(rt1.c1)) END) ORDER BY ((LIKE(v0.c0, v0.c0)) NOT BETWEEN ('e~3d') AND ((((rt1.c3)) BETWEEN ((x'252e')) AND ((v0.c1))))) ASC, ((((0.2780535474854251)AND(rt1.c1 COLLATE BINARY)))AND(CAST(rt1.c3 AS TEXT)))  NULLS FIRST, -414127453  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) NOTNULL)  WHEN ((rt1.c1)>=(rt1.c1)) THEN ((v0.c0)GLOB(rt1.c1)) END) IS TRUE)  as count FROM v0, rt1 ORDER BY ((LIKE(v0.c0, v0.c0)) NOT BETWEEN ('e~3d') AND ((((rt1.c3)) BETWEEN ((x'252e')) AND ((v0.c1))))) ASC, ((((0.2780535474854251)AND(rt1.c1 COLLATE BINARY)))AND(CAST(rt1.c3 AS TEXT)))  NULLS FIRST, -414127453  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CASE ((rt1.c1) NOTNULL)  WHEN ((rt1.c1)>=(rt1.c1)) THEN ((v0.c0)GLOB(rt1.c1)) END) ORDER BY ((LIKE(v0.c0, v0.c0)) NOT BETWEEN ('e~3d') AND ((((rt1.c3)) BETWEEN ((x'252e')) AND ((v0.c1))))) ASC, ((((0.2780535474854251)AND(rt1.c1 COLLATE BINARY)))AND(CAST(rt1.c3 AS TEXT)))  NULLS FIRST, -414127453  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) NOTNULL)  WHEN ((rt1.c1)>=(rt1.c1)) THEN ((v0.c0)GLOB(rt1.c1)) END) IS TRUE)  as count FROM v0, rt1 ORDER BY ((LIKE(v0.c0, v0.c0)) NOT BETWEEN ('e~3d') AND ((((rt1.c3)) BETWEEN ((x'252e')) AND ((v0.c1))))) ASC, ((((0.2780535474854251)AND(rt1.c1 COLLATE BINARY)))AND(CAST(rt1.c3 AS TEXT)))  NULLS FIRST, -414127453  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND((('11 &<') NOTNULL))))OR(x'')))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND((('11 &<') NOTNULL))))OR(x'')))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND((('11 &<') NOTNULL))))OR(x'')))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND((('11 &<') NOTNULL))))OR(x'')))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c0) NOTNULL))OR((t0.c0 IN ()))))AND((('11 &<') NOTNULL))))OR(x'')))OR(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (CAST((v0.c2 IN ()) AS REAL)) ORDER BY (~ (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY (~ (NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (CAST((v0.c2 IN ()) AS REAL)) ORDER BY (~ (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY (~ (NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (CAST((v0.c2 IN ()) AS REAL)) ORDER BY (~ (NULL))  NULLS LAST;
SELECT * FROM t0, v0, rt1, rt0 WHERE ((((rt1.c0 IN ())) NOT NULL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY rt0.c1);
SELECT * FROM t0, v0, rt1, rt0 WHERE ((((rt1.c0 IN ())) NOT NULL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY rt0.c1);
SELECT * FROM t0, v0, rt1, rt0 WHERE ((((rt1.c0 IN ())) NOT NULL)) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CAST((+ (rt0.c3)) AS BLOB)) ORDER BY (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))<>((((rt0.c3)+(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))!=((((rt0.c3)+(rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CAST((+ (rt0.c3)) AS BLOB)) ORDER BY (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))<>((((rt0.c3)+(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))!=((((rt0.c3)+(rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CAST((+ (rt0.c3)) AS BLOB)) ORDER BY (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))<>((((rt0.c3)+(rt0.c2)))))  NULLS FIRST;
SELECT * FROM rt1, t0, v0, rt0 WHERE ((((CAST(0xfffffffff31d0814 AS REAL)))<=((((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(0Xfffffffff31d0814 AS REAL)))<=((((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt1, t0, v0, rt0 ORDER BY v0.c0 DESC);
SELECT * FROM rt1, t0, v0, rt0 WHERE ((((CAST(0xfffffffff31d0814 AS REAL)))<=((((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(0Xfffffffff31d0814 AS REAL)))<=((((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt1, t0, v0, rt0 ORDER BY v0.c0 DESC);
SELECT * FROM rt1, t0, v0, rt0 WHERE ((((CAST(0xfffffffff31d0814 AS REAL)))<=((((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))))) ORDER BY v0.c0 DESC;
SELECT ALL * FROM v0, rt0, t0, rt1 WHERE ((((rt0.c3)GLOB(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)GLOB(rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, t0, rt1);
SELECT ALL * FROM v0, rt0, t0, rt1 WHERE ((((rt0.c3)GLOB(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)GLOB(rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, t0, rt1);
SELECT ALL * FROM v0, rt0, t0, rt1 WHERE ((((rt0.c3)GLOB(rt0.c0)) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON (- (0Xffffffffb5a25df2)) CROSS JOIN v0 ON ((((rt0.c2) ISNULL))<>(865932547)) RIGHT OUTER JOIN rt0 ON 1571237277 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (- (0Xffffffffb5a25df2)) CROSS JOIN v0 ON ((((rt0.c2) ISNULL))<>(865932547)) RIGHT OUTER JOIN rt0 ON 1571237277);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON (- (0Xffffffffb5a25df2)) CROSS JOIN v0 ON ((((rt0.c2) ISNULL))<>(865932547)) RIGHT OUTER JOIN rt0 ON 1571237277 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (- (0Xffffffffb5a25df2)) CROSS JOIN v0 ON ((((rt0.c2) ISNULL))<>(865932547)) RIGHT OUTER JOIN rt0 ON 1571237277);
SELECT ALL * FROM t0, v0, rt0 RIGHT OUTER JOIN rt1 ON (((v0.c2) IS FALSE) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, rt0 RIGHT OUTER JOIN rt1 ON (((v0.c2) IS FALSE) IN ()));
SELECT ALL * FROM t0, v0, rt0 RIGHT OUTER JOIN rt1 ON (((v0.c2) IS FALSE) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, rt0 RIGHT OUTER JOIN rt1 ON (((v0.c2) IS FALSE) IN ()));
SELECT ALL * FROM t0, v0, rt0 RIGHT OUTER JOIN rt1 ON (((v0.c2) IS FALSE) IN ()) WHERE (NULL);
SELECT ALL * FROM v0, t0 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE);
SELECT * FROM t0, v0, rt0 WHERE (((- (v0.c0)) IN ())) ORDER BY 0.9615264017465308;
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY 0.9615264017465308);
SELECT * FROM t0, v0, rt0 WHERE (((- (v0.c0)) IN ())) ORDER BY 0.9615264017465308;
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY 0.9615264017465308);
SELECT * FROM t0, v0, rt0 WHERE (((- (v0.c0)) IN ())) ORDER BY 0.9615264017465308;
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((rt0.c2)|(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((rt0.c2)|(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((rt0.c2)|(rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0)))==(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY (x'' IN ()), CASE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((((((((t0.c0)OR('?I')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, t0.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(t0.c0)))=(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (x'' IN ()), CASE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((((((((t0.c0)OR('?I')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, t0.c0) END ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0)))==(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY (x'' IN ()), CASE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((((((((t0.c0)OR('?I')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, t0.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(t0.c0)))=(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (x'' IN ()), CASE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((((((((t0.c0)OR('?I')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, t0.c0) END ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0)))==(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY (x'' IN ()), CASE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((((((((t0.c0)OR('?I')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, t0.c0) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((rt1.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 NOT INDEXED, rt1 NATURAL JOIN rt0 ORDER BY ((((rt1.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((rt1.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 NOT INDEXED, rt1 NATURAL JOIN rt0 ORDER BY ((((rt1.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((rt1.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, rt1 WHERE (790789785);
SELECT SUM(count) FROM (SELECT ALL ((790789785) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (790789785);
SELECT SUM(count) FROM (SELECT ALL ((790789785) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (790789785);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((((((rt1.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))*(v0.c1))) ORDER BY x'c65f';
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))*(v0.c1))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY x'c65f');
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((((((rt1.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))*(v0.c1))) ORDER BY x'c65f';
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))*(v0.c1))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY x'c65f');
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((((((rt1.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))*(v0.c1))) ORDER BY x'c65f';
SELECT ALL * FROM v0, t0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)!=(((v0.c0)LIKE(v0.c2))))) ORDER BY CAST(v0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)<>(((v0.c0)LIKE(v0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(v0.c0 AS BLOB));
SELECT ALL * FROM v0, t0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)!=(((v0.c0)LIKE(v0.c2))))) ORDER BY CAST(v0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)<>(((v0.c0)LIKE(v0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(v0.c0 AS BLOB));
SELECT ALL * FROM v0, t0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)!=(((v0.c0)LIKE(v0.c2))))) ORDER BY CAST(v0.c0 AS BLOB);
SELECT * FROM rt0, t0 WHERE ((- (rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((- (rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((- (rt0.c3)) COLLATE BINARY);
SELECT * FROM t0, rt1, v0 WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY (v0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY (v0.c0 IN ())  NULLS FIRST);
SELECT * FROM t0, rt1, v0 WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY (v0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY (v0.c0 IN ())  NULLS FIRST);
SELECT * FROM t0, rt1, v0 WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY (v0.c0 IN ())  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN v0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN ((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((v0.c2, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, NULL)))) AND (rt1.c3 COLLATE RTRIM)) WHERE ((~ (TRIM(v0.c2)))) ORDER BY ((+ (v0.c1)) IN (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (TRIM(v0.c2)))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN ((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((v0.c2, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, NULL)))) AND (rt1.c3 COLLATE RTRIM)) ORDER BY ((+ (v0.c1)) IN (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c1))))  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN v0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN ((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((v0.c2, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, NULL)))) AND (rt1.c3 COLLATE RTRIM)) WHERE ((~ (TRIM(v0.c2)))) ORDER BY ((+ (v0.c1)) IN (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (TRIM(v0.c2)))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN ((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((v0.c2, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, NULL)))) AND (rt1.c3 COLLATE RTRIM)) ORDER BY ((+ (v0.c1)) IN (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c1))))  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN v0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN ((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((v0.c2, rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, NULL)))) AND (rt1.c3 COLLATE RTRIM)) WHERE ((~ (TRIM(v0.c2)))) ORDER BY ((+ (v0.c1)) IN (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c1))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c1)))<(0.18352967146257737)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c1)))<(0.18352967146257737))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c1)))<(0.18352967146257737)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c1)))<(0.18352967146257737))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c1)))<(0.18352967146257737)));
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((v0.c2)>=('-2135418920'))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((v0.c2)>=('-2135418920')))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((v0.c2)>=('-2135418920'))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((v0.c2)>=('-2135418920')))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((v0.c2)>=('-2135418920'))))));
SELECT * FROM rt1, v0, t0 WHERE ((((((v0.c2))=((v0.c0))))AND(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))=((v0.c0))))AND(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT * FROM rt1, v0, t0 WHERE ((((((v0.c2))=((v0.c0))))AND(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))=((v0.c0))))AND(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT * FROM rt1, v0, t0 WHERE ((((((v0.c2))=((v0.c0))))AND(v0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON CASE v0.c2  WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM WHERE ((((rt1.c0 IN (rt1.c1))) IS TRUE)) ORDER BY ((highlight(rt1.c3, rt1.c0, v0.c2, rt1.c1))<>(0x3fd4b9ba))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON CASE v0.c2  WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM ORDER BY ((highlight(rt1.c3, rt1.c0, v0.c2, rt1.c1))<>(0x3fd4b9ba))  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON CASE v0.c2  WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM WHERE ((((rt1.c0 IN (rt1.c1))) IS TRUE)) ORDER BY ((highlight(rt1.c3, rt1.c0, v0.c2, rt1.c1))<>(0x3fd4b9ba))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON CASE v0.c2  WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM ORDER BY ((highlight(rt1.c3, rt1.c0, v0.c2, rt1.c1))<>(0x3fd4b9ba))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB));
SELECT * FROM rt1, t0, v0 WHERE (((((((((CASE v0.c0  WHEN rt1.c1 THEN v0.c2 END)OR(CASE rt1.c3  WHEN v0.c1 THEN v0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c2 END)))AND(CAST(rt1.c2 AS TEXT))))AND(((v0.c0)<<(rt1.c2)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c0  WHEN rt1.c1 THEN v0.c2 END)OR(CASE rt1.c3  WHEN v0.c1 THEN v0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c2 END)))AND(CAST(rt1.c2 AS TEXT))))AND(((v0.c0)<<(rt1.c2)))))AND(v0.c0))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE (((((((((CASE v0.c0  WHEN rt1.c1 THEN v0.c2 END)OR(CASE rt1.c3  WHEN v0.c1 THEN v0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c2 END)))AND(CAST(rt1.c2 AS TEXT))))AND(((v0.c0)<<(rt1.c2)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c0  WHEN rt1.c1 THEN v0.c2 END)OR(CASE rt1.c3  WHEN v0.c1 THEN v0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c2 END)))AND(CAST(rt1.c2 AS TEXT))))AND(((v0.c0)<<(rt1.c2)))))AND(v0.c0))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE (((((((((CASE v0.c0  WHEN rt1.c1 THEN v0.c2 END)OR(CASE rt1.c3  WHEN v0.c1 THEN v0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c2 END)))AND(CAST(rt1.c2 AS TEXT))))AND(((v0.c0)<<(rt1.c2)))))AND(v0.c0)));
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON ((((0.7195856145361063)AND(CAST(rt1.c1 AS REAL))))AND((('0.0')|(rt1.c2)))) LEFT OUTER JOIN t0 ON ((((((rt1.c3) NOT BETWEEN (1.0632807E7) AND ('')))AND(((rt1.c2)GLOB(rt1.c1)))))OR(((rt1.c2)AND(v0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ((0.3173355612842167)-(rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END WHERE (v0.c1) ORDER BY ((json_extract(v0.c2, rt0.c3)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((((0.7195856145361063)AND(CAST(rt1.c1 AS REAL))))AND((('0.0')|(rt1.c2)))) LEFT OUTER JOIN t0 ON ((((((rt1.c3) NOT BETWEEN (1.0632807E7) AND ('')))AND(((rt1.c2)GLOB(rt1.c1)))))OR(((rt1.c2)AND(v0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ((0.3173355612842167)-(rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END ORDER BY ((json_extract(v0.c2, rt0.c3)) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON ((((0.7195856145361063)AND(CAST(rt1.c1 AS REAL))))AND((('0.0')|(rt1.c2)))) LEFT OUTER JOIN t0 ON ((((((rt1.c3) NOT BETWEEN (1.0632807E7) AND ('')))AND(((rt1.c2)GLOB(rt1.c1)))))OR(((rt1.c2)AND(v0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ((0.3173355612842167)-(rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END WHERE (v0.c1) ORDER BY ((json_extract(v0.c2, rt0.c3)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((((0.7195856145361063)AND(CAST(rt1.c1 AS REAL))))AND((('0.0')|(rt1.c2)))) LEFT OUTER JOIN t0 ON ((((((rt1.c3) NOT BETWEEN (1.0632807E7) AND ('')))AND(((rt1.c2)GLOB(rt1.c1)))))OR(((rt1.c2)AND(v0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ((0.3173355612842167)-(rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END ORDER BY ((json_extract(v0.c2, rt0.c3)) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON ((((0.7195856145361063)AND(CAST(rt1.c1 AS REAL))))AND((('0.0')|(rt1.c2)))) LEFT OUTER JOIN t0 ON ((((((rt1.c3) NOT BETWEEN (1.0632807E7) AND ('')))AND(((rt1.c2)GLOB(rt1.c1)))))OR(((rt1.c2)AND(v0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ((0.3173355612842167)-(rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END WHERE (v0.c1) ORDER BY ((json_extract(v0.c2, rt0.c3)) NOT NULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- (t0.c0))) ORDER BY (- (CAST(v0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM v0, t0 ORDER BY (- (CAST(v0.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- (t0.c0))) ORDER BY (- (CAST(v0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM v0, t0 ORDER BY (- (CAST(v0.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- (t0.c0))) ORDER BY (- (CAST(v0.c0 AS BLOB))) DESC;
SELECT ALL * FROM rt0, rt1 CROSS JOIN t0 ON ((rt0.c2 COLLATE BINARY)<<((- (rt1.c3)))) CROSS JOIN v0 ON (NOT (CAST(v0.c1 AS BLOB))) WHERE (((((v0.c1)IS(rt1.c3))) NOT BETWEEN (1070905786) AND (((rt1.c1)>=(x'953b048c')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)IS(rt1.c3))) NOT BETWEEN (1070905786) AND (((rt1.c1)>=(x'953b048c'))))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((rt0.c2 COLLATE BINARY)<<((- (rt1.c3)))) CROSS JOIN v0 ON (NOT (CAST(v0.c1 AS BLOB))));
SELECT ALL * FROM rt0, rt1 CROSS JOIN t0 ON ((rt0.c2 COLLATE BINARY)<<((- (rt1.c3)))) CROSS JOIN v0 ON (NOT (CAST(v0.c1 AS BLOB))) WHERE (((((v0.c1)IS(rt1.c3))) NOT BETWEEN (1070905786) AND (((rt1.c1)>=(x'953b048c')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)IS(rt1.c3))) NOT BETWEEN (1070905786) AND (((rt1.c1)>=(x'953b048c'))))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((rt0.c2 COLLATE BINARY)<<((- (rt1.c3)))) CROSS JOIN v0 ON (NOT (CAST(v0.c1 AS BLOB))));
SELECT ALL * FROM rt0, rt1 CROSS JOIN t0 ON ((rt0.c2 COLLATE BINARY)<<((- (rt1.c3)))) CROSS JOIN v0 ON (NOT (CAST(v0.c1 AS BLOB))) WHERE (((((v0.c1)IS(rt1.c3))) NOT BETWEEN (1070905786) AND (((rt1.c1)>=(x'953b048c')))));
SELECT COUNT(*) FROM rt1, t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN NULL WHEN v0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END)IS NOT(((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) NOT BETWEEN (rt1.c2) AND (v0.c0)))) AND ((CAST(rt0.c0 AS REAL)))) WHERE (((((((v0.c1)-('0.3173355612842167')))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))AND((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)-('0.3173355612842167')))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN NULL WHEN v0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END)IS NOT(((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) NOT BETWEEN (rt1.c2) AND (v0.c0)))) AND ((CAST(rt0.c0 AS REAL)))));
SELECT COUNT(*) FROM rt1, t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN NULL WHEN v0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END)IS NOT(((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) NOT BETWEEN (rt1.c2) AND (v0.c0)))) AND ((CAST(rt0.c0 AS REAL)))) WHERE (((((((v0.c1)-('0.3173355612842167')))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))AND((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)-('0.3173355612842167')))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN NULL WHEN v0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END)IS NOT(((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((v0.c2) NOT BETWEEN (rt1.c2) AND (v0.c0)))) AND ((CAST(rt0.c0 AS REAL)))));
SELECT ALL * FROM v0, rt1, rt0 WHERE ((((0.5400385917859714))>((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.5400385917859714))>((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE ((((0.5400385917859714))>((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.5400385917859714))>((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE ((((0.5400385917859714))>((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2))))));
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))AND((t0.c0 IN (t0.c0, t0.c0)))))AND(CAST(t0.c0 AS REAL)))) ORDER BY 0x5e7cb014  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS NUMERIC))AND((t0.c0 IN (t0.c0, t0.c0)))))AND(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY 0x5e7cb014  NULLS FIRST);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))AND((t0.c0 IN (t0.c0, t0.c0)))))AND(CAST(t0.c0 AS REAL)))) ORDER BY 0x5e7cb014  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS NUMERIC))AND((t0.c0 IN (t0.c0, t0.c0)))))AND(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY 0x5e7cb014  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END AS NUMERIC)) ORDER BY ((((rt0.c2)*(rt0.c0))) IS TRUE), ((((((((rt0.c0)OR(rt0.c2)))OR('-233277100')))AND(((((((((NULL)AND(rt0.c1)))OR(x'51c4')))OR(rt0.c2)))OR(rt0.c1)))))AND(NULL)), ((rt0.c1 COLLATE RTRIM)*(((rt0.c3)AND(''))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)*(rt0.c0))) IS TRUE), ((((((((rt0.c0)OR(rt0.c2)))OR('-233277100')))AND(((((((((NULL)AND(rt0.c1)))OR(x'51c4')))OR(rt0.c2)))OR(rt0.c1)))))AND(NULL)), ((rt0.c1 COLLATE RTRIM)*(((rt0.c3)AND('')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END AS NUMERIC)) ORDER BY ((((rt0.c2)*(rt0.c0))) IS TRUE), ((((((((rt0.c0)OR(rt0.c2)))OR('-233277100')))AND(((((((((NULL)AND(rt0.c1)))OR(x'51c4')))OR(rt0.c2)))OR(rt0.c1)))))AND(NULL)), ((rt0.c1 COLLATE RTRIM)*(((rt0.c3)AND(''))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)*(rt0.c0))) IS TRUE), ((((((((rt0.c0)OR(rt0.c2)))OR('-233277100')))AND(((((((((NULL)AND(rt0.c1)))OR(x'51c4')))OR(rt0.c2)))OR(rt0.c1)))))AND(NULL)), ((rt0.c1 COLLATE RTRIM)*(((rt0.c3)AND('')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END AS NUMERIC)) ORDER BY ((((rt0.c2)*(rt0.c0))) IS TRUE), ((((((((rt0.c0)OR(rt0.c2)))OR('-233277100')))AND(((((((((NULL)AND(rt0.c1)))OR(x'51c4')))OR(rt0.c2)))OR(rt0.c1)))))AND(NULL)), ((rt0.c1 COLLATE RTRIM)*(((rt0.c3)AND(''))));
SELECT ALL * FROM t0, rt1, v0, rt0 WHERE ((+ (rt0.c2)) COLLATE RTRIM) ORDER BY ((+ (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY ((+ (rt0.c0)) IN ()) ASC);
SELECT ALL * FROM t0, rt1, v0, rt0 WHERE ((+ (rt0.c2)) COLLATE RTRIM) ORDER BY ((+ (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY ((+ (rt0.c0)) IN ()) ASC);
SELECT ALL * FROM t0, rt1, v0, rt0 WHERE ((+ (rt0.c2)) COLLATE RTRIM) ORDER BY ((+ (rt0.c0)) IN ()) ASC;
SELECT ALL * FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) IN (((v0.c0)IS NOT(v0.c1))))) ORDER BY ((((v0.c1)GLOB(v0.c2)))=((+ (v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) IN (((v0.c0)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)GLOB(v0.c2)))=((+ (v0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) IN (((v0.c0)IS NOT(v0.c1))))) ORDER BY ((((v0.c1)GLOB(v0.c2)))=((+ (v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) IN (((v0.c0)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)GLOB(v0.c2)))=((+ (v0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) IN (((v0.c0)IS NOT(v0.c1))))) ORDER BY ((((v0.c1)GLOB(v0.c2)))=((+ (v0.c2))))  NULLS FIRST;
SELECT * FROM rt1, t0, v0 WHERE (((((rt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE (((((rt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE (((((rt1.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()));
SELECT * FROM rt1, v0, t0 WHERE ((~ (((((((((((((v0.c1)AND(v0.c2)))AND(t0.c0)))OR(v0.c1)))AND(NULL)))AND(v0.c1)))AND(rt1.c3))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((v0.c1)AND(v0.c2)))AND(t0.c0)))OR(v0.c1)))AND(NULL)))AND(v0.c1)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY NULL ASC);
SELECT * FROM rt1, v0, t0 WHERE ((~ (((((((((((((v0.c1)AND(v0.c2)))AND(t0.c0)))OR(v0.c1)))AND(NULL)))AND(v0.c1)))AND(rt1.c3))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((v0.c1)AND(v0.c2)))AND(t0.c0)))OR(v0.c1)))AND(NULL)))AND(v0.c1)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY NULL ASC);
SELECT * FROM rt1, v0, t0 WHERE ((~ (((((((((((((v0.c1)AND(v0.c2)))AND(t0.c0)))OR(v0.c1)))AND(NULL)))AND(v0.c1)))AND(rt1.c3))))) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (CAST(rt1.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (CAST(rt1.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (CAST(rt1.c0 AS REAL) COLLATE BINARY);
SELECT * FROM rt0, rt1, v0 WHERE (v0.c0) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (NULL)))OR(0X235363ca));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (NULL)))OR(0x235363ca)));
SELECT * FROM rt0, rt1, v0 WHERE (v0.c0) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (NULL)))OR(0X235363ca));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (NULL)))OR(0x235363ca)));
SELECT * FROM rt0, rt1, v0 WHERE (v0.c0) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (NULL)))OR(0X235363ca));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(rt0.c2)))GLOB(CASE rt0.c0  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(rt0.c2)))GLOB(CASE rt0.c0  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(rt0.c2)))GLOB(CASE rt0.c0  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(rt0.c2)))GLOB(CASE rt0.c0  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(rt0.c2)))GLOB(CASE rt0.c0  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM rt0, t0 CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c3) BETWEEN (t0.c0) AND (v0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) WHERE ((((((0X339d1503, rt0.c3, rt0.c3))<((rt0.c0, t0.c0, rt0.c2))))|('482470573'))) ORDER BY 0.3386015646525061, json_remove(TRIM(x''), ((rt0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((0X339d1503, rt0.c3, rt0.c3))<((rt0.c0, t0.c0, rt0.c2))))|('482470573'))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c3) BETWEEN (t0.c0) AND (v0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) ORDER BY 0.3386015646525061, json_remove(TRIM(x''), ((rt0.c1) IS FALSE)));
SELECT * FROM rt0, t0 CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c3) BETWEEN (t0.c0) AND (v0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) WHERE ((((((0X339d1503, rt0.c3, rt0.c3))<((rt0.c0, t0.c0, rt0.c2))))|('482470573'))) ORDER BY 0.3386015646525061, json_remove(TRIM(x''), ((rt0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((0X339d1503, rt0.c3, rt0.c3))<((rt0.c0, t0.c0, rt0.c2))))|('482470573'))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c3) BETWEEN (t0.c0) AND (v0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) ORDER BY 0.3386015646525061, json_remove(TRIM(x''), ((rt0.c1) IS FALSE)));
SELECT * FROM rt0, t0 CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c3) BETWEEN (t0.c0) AND (v0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) WHERE ((((((0X339d1503, rt0.c3, rt0.c3))<((rt0.c0, t0.c0, rt0.c2))))|('482470573'))) ORDER BY 0.3386015646525061, json_remove(TRIM(x''), ((rt0.c1) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((- (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1, v0, t0 NOT INDEXED, rt0 WHERE (((((CASE rt1.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END)AND(((v0.c1)>=(rt0.c3)))))OR(((v0.c2)*(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END)AND(((v0.c1)>=(rt0.c3)))))OR(((v0.c2)*(rt0.c3))))) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t0 NOT INDEXED, rt0 WHERE (((((CASE rt1.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END)AND(((v0.c1)>=(rt0.c3)))))OR(((v0.c2)*(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END)AND(((v0.c1)>=(rt0.c3)))))OR(((v0.c2)*(rt0.c3))))) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t0 NOT INDEXED, rt0 WHERE (((((CASE rt1.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END)AND(((v0.c1)>=(rt0.c3)))))OR(((v0.c2)*(rt0.c3)))));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)&(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL) DESC);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)&(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL) DESC);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)&(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (TRIM(((v0.c2)IS NOT(v0.c1)), ((((rt1.c3)AND(v0.c1)))AND(v0.c0)))) ORDER BY CASE WHEN LIKELIHOOD(rt1.c0, 0.2694827027052964) THEN 1.397032541E9 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c2)IS NOT(v0.c1)), ((((rt1.c3)AND(v0.c1)))AND(v0.c0)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE WHEN LIKELIHOOD(rt1.c0, 0.2694827027052964) THEN 1.397032541E9 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (TRIM(((v0.c2)IS NOT(v0.c1)), ((((rt1.c3)AND(v0.c1)))AND(v0.c0)))) ORDER BY CASE WHEN LIKELIHOOD(rt1.c0, 0.2694827027052964) THEN 1.397032541E9 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c2)IS NOT(v0.c1)), ((((rt1.c3)AND(v0.c1)))AND(v0.c0)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE WHEN LIKELIHOOD(rt1.c0, 0.2694827027052964) THEN 1.397032541E9 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (TRIM(((v0.c2)IS NOT(v0.c1)), ((((rt1.c3)AND(v0.c1)))AND(v0.c0)))) ORDER BY CASE WHEN LIKELIHOOD(rt1.c0, 0.2694827027052964) THEN 1.397032541E9 END DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (((((((((((((((((UNLIKELY(rt0.c3))AND(json_extract(v0.c2, v0.c0))))AND(LIKELIHOOD(t0.c0, 0.20108339775991957))))AND(-1.933066153E9)))OR(x'f77b')))AND(CAST(v0.c1 AS BLOB))))OR(((((v0.c2)AND(v0.c2)))OR(rt0.c2)))))OR(((('696103565', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c3, rt0.c2, v0.c2))))))OR(((rt0.c3)||(rt0.c1))))) ORDER BY (((t0.c0) BETWEEN (NULL) AND (v0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((UNLIKELY(rt0.c3))AND(json_extract(v0.c2, v0.c0))))AND(LIKELIHOOD(t0.c0, 0.20108339775991957))))AND(-1.933066153E9)))OR(x'f77b')))AND(CAST(v0.c1 AS BLOB))))OR(((((v0.c2)AND(v0.c2)))OR(rt0.c2)))))OR(((('696103565', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c3, rt0.c2, v0.c2))))))OR(((rt0.c3)||(rt0.c1))))) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (((t0.c0) BETWEEN (NULL) AND (v0.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (((((((((((((((((UNLIKELY(rt0.c3))AND(json_extract(v0.c2, v0.c0))))AND(LIKELIHOOD(t0.c0, 0.20108339775991957))))AND(-1.933066153E9)))OR(x'f77b')))AND(CAST(v0.c1 AS BLOB))))OR(((((v0.c2)AND(v0.c2)))OR(rt0.c2)))))OR(((('696103565', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c3, rt0.c2, v0.c2))))))OR(((rt0.c3)||(rt0.c1))))) ORDER BY (((t0.c0) BETWEEN (NULL) AND (v0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((UNLIKELY(rt0.c3))AND(json_extract(v0.c2, v0.c0))))AND(LIKELIHOOD(t0.c0, 0.20108339775991957))))AND(-1.933066153E9)))OR(x'f77b')))AND(CAST(v0.c1 AS BLOB))))OR(((((v0.c2)AND(v0.c2)))OR(rt0.c2)))))OR(((('696103565', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c3, rt0.c2, v0.c2))))))OR(((rt0.c3)||(rt0.c1))))) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (((t0.c0) BETWEEN (NULL) AND (v0.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (((((((((((((((((UNLIKELY(rt0.c3))AND(json_extract(v0.c2, v0.c0))))AND(LIKELIHOOD(t0.c0, 0.20108339775991957))))AND(-1.933066153E9)))OR(x'f77b')))AND(CAST(v0.c1 AS BLOB))))OR(((((v0.c2)AND(v0.c2)))OR(rt0.c2)))))OR(((('696103565', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c3, rt0.c2, v0.c2))))))OR(((rt0.c3)||(rt0.c1))))) ORDER BY (((t0.c0) BETWEEN (NULL) AND (v0.c2)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((~ (rt1.c0)))AND(CASE NULL  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((~ (rt1.c0)))AND(CASE NULL  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((~ (rt1.c0)))AND(CASE NULL  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((~ (rt1.c0)))AND(CASE NULL  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((~ (rt1.c0)))AND(CASE NULL  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0, t0, v0 WHERE ((((((((('-950564336')AND(((t0.c0) BETWEEN (rt0.c1) AND (NULL)))))AND(CAST(v0.c1 AS NUMERIC))))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))OR(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('-950564336')AND(((t0.c0) BETWEEN (rt0.c1) AND (NULL)))))AND(CAST(v0.c1 AS NUMERIC))))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))OR(UPPER(v0.c0)))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT COUNT(*) FROM rt0, t0, v0 WHERE ((((((((('-950564336')AND(((t0.c0) BETWEEN (rt0.c1) AND (NULL)))))AND(CAST(v0.c1 AS NUMERIC))))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))OR(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('-950564336')AND(((t0.c0) BETWEEN (rt0.c1) AND (NULL)))))AND(CAST(v0.c1 AS NUMERIC))))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))OR(UPPER(v0.c0)))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT COUNT(*) FROM rt0, t0, v0 WHERE ((((((((('-950564336')AND(((t0.c0) BETWEEN (rt0.c1) AND (NULL)))))AND(CAST(v0.c1 AS NUMERIC))))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))OR(UPPER(v0.c0))));
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c1) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c1) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c1) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST;
SELECT * FROM t0, v0 WHERE (CAST(((v0.c1)OR(v0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)OR(v0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CAST(((v0.c1)OR(v0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)OR(v0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CAST(((v0.c1)OR(v0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT '-1434530753', ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT '-1434530753', ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT '-1434530753', ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT '-1434530753', ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT '-1434530753', ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT * FROM v0 WHERE ((((((~ (v0.c0)))AND(((v0.c2) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY (((LIKELIHOOD(0.5121345776676309, 0.5073098994007338)))=((((v0.c2)IS(v0.c1))))), 0.390312151696914;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c0)))AND(((v0.c2) ISNULL))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY (((LIKELIHOOD(0.5121345776676309, 0.5073098994007338)))=((((v0.c2)IS(v0.c1))))), 0.390312151696914);
SELECT * FROM v0 WHERE ((((((~ (v0.c0)))AND(((v0.c2) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY (((LIKELIHOOD(0.5121345776676309, 0.5073098994007338)))=((((v0.c2)IS(v0.c1))))), 0.390312151696914;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c0)))AND(((v0.c2) ISNULL))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY (((LIKELIHOOD(0.5121345776676309, 0.5073098994007338)))=((((v0.c2)IS(v0.c1))))), 0.390312151696914);
SELECT * FROM v0 WHERE ((((((~ (v0.c0)))AND(((v0.c2) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY (((LIKELIHOOD(0.5121345776676309, 0.5073098994007338)))=((((v0.c2)IS(v0.c1))))), 0.390312151696914;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY UPPER(DISTINCT CAST(t0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT CAST(t0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY UPPER(DISTINCT CAST(t0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT CAST(t0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY UPPER(DISTINCT CAST(t0.c0 AS NUMERIC));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE BINARY IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE BINARY IN ()) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE BINARY IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE BINARY IN ()) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE BINARY IN ()) DESC  NULLS FIRST;
SELECT * FROM v0, rt0, t0 INNER JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)OR(UPPER(DISTINCT 'cm'))))AND((v0.c0 IN (rt1.c1, rt0.c3, '0.2962016533003011')))) WHERE (((((v0.c2)OR(((t0.c0)LIKE(t0.c0)))))AND((rt0.c2 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)OR(((t0.c0)LIKE(t0.c0)))))AND((rt0.c2 IN (rt0.c3))))) IS TRUE)  as count FROM v0, rt0, t0 INNER JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)OR(UPPER(DISTINCT 'cm'))))AND((v0.c0 IN (rt1.c1, rt0.c3, '0.2962016533003011')))));
SELECT * FROM v0, rt0, t0 INNER JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)OR(UPPER(DISTINCT 'cm'))))AND((v0.c0 IN (rt1.c1, rt0.c3, '0.2962016533003011')))) WHERE (((((v0.c2)OR(((t0.c0)LIKE(t0.c0)))))AND((rt0.c2 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)OR(((t0.c0)LIKE(t0.c0)))))AND((rt0.c2 IN (rt0.c3))))) IS TRUE)  as count FROM v0, rt0, t0 INNER JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)OR(UPPER(DISTINCT 'cm'))))AND((v0.c0 IN (rt1.c1, rt0.c3, '0.2962016533003011')))));
SELECT * FROM v0, rt0, t0 INNER JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)OR(UPPER(DISTINCT 'cm'))))AND((v0.c0 IN (rt1.c1, rt0.c3, '0.2962016533003011')))) WHERE (((((v0.c2)OR(((t0.c0)LIKE(t0.c0)))))AND((rt0.c2 IN (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (x'bb74');
SELECT SUM(count) FROM (SELECT ALL ((x'bb74') IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (x'bb74');
SELECT SUM(count) FROM (SELECT ALL ((x'bb74') IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (x'bb74');
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1 IN ()))<>(rt1.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c1) NOTNULL))|(CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))!=(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1) NOTNULL))|(CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1 IN ()))<>(rt1.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c1) NOTNULL))|(CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))!=(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1) NOTNULL))|(CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1 IN ()))<>(rt1.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c1) NOTNULL))|(CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c3 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)<<(rt0.c3)))AND(((((v0.c2)OR(v0.c0)))AND(v0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.9795321228732843))))OR(((rt0.c3)>>(1013069976)))))AND(CAST('-122807935' AS NUMERIC))) WHERE ((NOT ((((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, x'', rt0.c3, x'')) AND ((v0.c2, rt0.c3, t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, x'', rt0.c3, x'')) AND ((v0.c2, rt0.c3, t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)<<(rt0.c3)))AND(((((v0.c2)OR(v0.c0)))AND(v0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.9795321228732843))))OR(((rt0.c3)>>(1013069976)))))AND(CAST('-122807935' AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)<<(rt0.c3)))AND(((((v0.c2)OR(v0.c0)))AND(v0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.9795321228732843))))OR(((rt0.c3)>>(1013069976)))))AND(CAST('-122807935' AS NUMERIC))) WHERE ((NOT ((((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, x'', rt0.c3, x'')) AND ((v0.c2, rt0.c3, t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, x'', rt0.c3, x'')) AND ((v0.c2, rt0.c3, t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)<<(rt0.c3)))AND(((((v0.c2)OR(v0.c0)))AND(v0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.9795321228732843))))OR(((rt0.c3)>>(1013069976)))))AND(CAST('-122807935' AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)<<(rt0.c3)))AND(((((v0.c2)OR(v0.c0)))AND(v0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.9795321228732843))))OR(((rt0.c3)>>(1013069976)))))AND(CAST('-122807935' AS NUMERIC))) WHERE ((NOT ((((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, x'', rt0.c3, x'')) AND ((v0.c2, rt0.c3, t0.c0, t0.c0, t0.c0))))));
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE ((((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE ((((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE ((((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) NOTNULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((CAST('gZ' AS INTEGER)) IS FALSE) WHERE (((((rt1.c2))<=((rt0.c3))) IN ((((rt1.c2)) BETWEEN ((-583837265)) AND ((rt0.c0))), (+ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2))<=((rt0.c3))) IN ((((rt1.c2)) BETWEEN ((-583837265)) AND ((rt0.c0))), (+ (rt1.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((CAST('gZ' AS INTEGER)) IS FALSE));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((CAST('gZ' AS INTEGER)) IS FALSE) WHERE (((((rt1.c2))<=((rt0.c3))) IN ((((rt1.c2)) BETWEEN ((-583837265)) AND ((rt0.c0))), (+ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2))<=((rt0.c3))) IN ((((rt1.c2)) BETWEEN ((-583837265)) AND ((rt0.c0))), (+ (rt1.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((CAST('gZ' AS INTEGER)) IS FALSE));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((CAST('gZ' AS INTEGER)) IS FALSE) WHERE (((((rt1.c2))<=((rt0.c3))) IN ((((rt1.c2)) BETWEEN ((-583837265)) AND ((rt0.c0))), (+ (rt1.c3)))));
SELECT ALL * FROM v0, rt0, rt1, t0 WHERE ((((- (v0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ('8J') AND ((- (v0.c0))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ('8J') AND ((- (v0.c0)))));
SELECT ALL * FROM v0, rt0, rt1, t0 WHERE ((((- (v0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ('8J') AND ((- (v0.c0))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ('8J') AND ((- (v0.c0)))));
SELECT ALL * FROM v0, rt0, rt1, t0 WHERE ((((- (v0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ('8J') AND ((- (v0.c0))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((+ (((t0.c0)<('-21175662')))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)<('-21175662'))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((+ (((t0.c0)<('-21175662')))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)<('-21175662'))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((+ (((t0.c0)<('-21175662')))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1 WHERE (rt0.c2) ORDER BY ((CASE WHEN rt0.c0 THEN x'7db1' END)>(CAST(v0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, v0, rt0, rt1 ORDER BY ((CASE WHEN rt0.c0 THEN x'7db1' END)>(CAST(v0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1 WHERE (rt0.c2) ORDER BY ((CASE WHEN rt0.c0 THEN x'7db1' END)>(CAST(v0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, v0, rt0, rt1 ORDER BY ((CASE WHEN rt0.c0 THEN x'7db1' END)>(CAST(v0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1 WHERE (rt0.c2) ORDER BY ((CASE WHEN rt0.c0 THEN x'7db1' END)>(CAST(v0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((CAST(t0.c0 AS NUMERIC), ((((rt0.c1)OR(t0.c0)))OR(NULL)), CAST('10632807' AS REAL)))<=((SQLITE_SOURCE_ID(), 'u', CAST(rt0.c3 AS REAL)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((CAST(t0.c0 AS NUMERIC), ((((rt0.c1)OR(t0.c0)))OR(NULL)), CAST('10632807' AS REAL)))<=((SQLITE_SOURCE_ID(), 'u', CAST(rt0.c3 AS REAL)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((CAST(t0.c0 AS NUMERIC), ((((rt0.c1)OR(t0.c0)))OR(NULL)), CAST('10632807' AS REAL)))<=((SQLITE_SOURCE_ID(), 'u', CAST(rt0.c3 AS REAL)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((CAST(t0.c0 AS NUMERIC), ((((rt0.c1)OR(t0.c0)))OR(NULL)), CAST('10632807' AS REAL)))<=((SQLITE_SOURCE_ID(), 'u', CAST(rt0.c3 AS REAL)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((CAST(t0.c0 AS NUMERIC), ((((rt0.c1)OR(t0.c0)))OR(NULL)), CAST('10632807' AS REAL)))<=((SQLITE_SOURCE_ID(), 'u', CAST(rt0.c3 AS REAL)))) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)-(CASE WHEN rt0.c1 THEN 'ViVٝMcb' END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)-(CASE WHEN rt0.c1 THEN 'ViVٝMcb' END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)-(CASE WHEN rt0.c1 THEN 'ViVٝMcb' END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)-(CASE WHEN rt0.c1 THEN 'ViVٝMcb' END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)-(CASE WHEN rt0.c1 THEN 'ViVٝMcb' END)));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END AS NUMERIC)) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY v0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END AS NUMERIC)) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY v0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END AS NUMERIC)) ORDER BY v0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON RTRIM(((rt1.c1)AND(v0.c2))) CROSS JOIN rt0 ON ((rt1.c0) ISNULL) COLLATE NOCASE INNER JOIN rt1 ON (((v0.c2)) BETWEEN ((CASE v0.c1  WHEN rt0.c3 THEN rt1.c1 ELSE v0.c2 END)) AND ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))) WHERE (((((v0.c0)==(rt1.c1)))!=(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(rt1.c1)))!=(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON RTRIM(((rt1.c1)AND(v0.c2))) CROSS JOIN rt0 ON ((rt1.c0) ISNULL) COLLATE NOCASE INNER JOIN rt1 ON (((v0.c2)) BETWEEN ((CASE v0.c1  WHEN rt0.c3 THEN rt1.c1 ELSE v0.c2 END)) AND ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON RTRIM(((rt1.c1)AND(v0.c2))) CROSS JOIN rt0 ON ((rt1.c0) ISNULL) COLLATE NOCASE INNER JOIN rt1 ON (((v0.c2)) BETWEEN ((CASE v0.c1  WHEN rt0.c3 THEN rt1.c1 ELSE v0.c2 END)) AND ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))) WHERE (((((v0.c0)==(rt1.c1)))!=(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(rt1.c1)))!=(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON RTRIM(((rt1.c1)AND(v0.c2))) CROSS JOIN rt0 ON ((rt1.c0) ISNULL) COLLATE NOCASE INNER JOIN rt1 ON (((v0.c2)) BETWEEN ((CASE v0.c1  WHEN rt0.c3 THEN rt1.c1 ELSE v0.c2 END)) AND ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON RTRIM(((rt1.c1)AND(v0.c2))) CROSS JOIN rt0 ON ((rt1.c0) ISNULL) COLLATE NOCASE INNER JOIN rt1 ON (((v0.c2)) BETWEEN ((CASE v0.c1  WHEN rt0.c3 THEN rt1.c1 ELSE v0.c2 END)) AND ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))) WHERE (((((v0.c0)==(rt1.c1)))!=(((rt0.c0) IS TRUE))));
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((((v0.c2)>(-2.1175662E7)))OR((((x'', v0.c2, rt0.c0))>=((rt0.c1, rt1.c0, rt1.c1))))))AND(LTRIM(rt0.c0, rt1.c1)))) ORDER BY (rt0.c1 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)>(-2.1175662E7)))OR((((x'', v0.c2, rt0.c0))>=((rt0.c1, rt1.c0, rt1.c1))))))AND(LTRIM(rt0.c0, rt1.c1)))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (rt0.c1 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((((v0.c2)>(-2.1175662E7)))OR((((x'', v0.c2, rt0.c0))>=((rt0.c1, rt1.c0, rt1.c1))))))AND(LTRIM(rt0.c0, rt1.c1)))) ORDER BY (rt0.c1 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)>(-2.1175662E7)))OR((((x'', v0.c2, rt0.c0))>=((rt0.c1, rt1.c0, rt1.c1))))))AND(LTRIM(rt0.c0, rt1.c1)))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (rt0.c1 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((((v0.c2)>(-2.1175662E7)))OR((((x'', v0.c2, rt0.c0))>=((rt0.c1, rt1.c0, rt1.c1))))))AND(LTRIM(rt0.c0, rt1.c1)))) ORDER BY (rt0.c1 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, v0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c1))))GLOB(CASE WHEN '?w' THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c1))))GLOB(CASE WHEN '?w' THEN rt0.c2 END))) IS TRUE)  as count FROM t0, rt0, v0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, v0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c1))))GLOB(CASE WHEN '?w' THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c1))))GLOB(CASE WHEN '?w' THEN rt0.c2 END))) IS TRUE)  as count FROM t0, rt0, v0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, v0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((v0.c1))))GLOB(CASE WHEN '?w' THEN rt0.c2 END)));
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ('Uo')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ('Uo')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ('Uo')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ('Uo')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ('Uo')) ASC  NULLS FIRST;
SELECT * FROM v0 NOT INDEXED, rt1 WHERE (((((rt1.c1)|(rt1.c2)))-(0.3386015646525061)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)|(rt1.c2)))-(0.3386015646525061))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0 NOT INDEXED, rt1 WHERE (((((rt1.c1)|(rt1.c2)))-(0.3386015646525061)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)|(rt1.c2)))-(0.3386015646525061))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0 NOT INDEXED, rt1 WHERE (((((rt1.c1)|(rt1.c2)))-(0.3386015646525061)));
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c3)OR(v0.c0)))IS NOT(CASE rt1.c1  WHEN rt1.c1 THEN 0.09413445117588959 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(v0.c0)))IS NOT(CASE rt1.c1  WHEN rt1.c1 THEN 0.09413445117588959 ELSE v0.c0 END))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c3)OR(v0.c0)))IS NOT(CASE rt1.c1  WHEN rt1.c1 THEN 0.09413445117588959 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(v0.c0)))IS NOT(CASE rt1.c1  WHEN rt1.c1 THEN 0.09413445117588959 ELSE v0.c0 END))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c3)OR(v0.c0)))IS NOT(CASE rt1.c1  WHEN rt1.c1 THEN 0.09413445117588959 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON '-1749836248' RIGHT OUTER JOIN t0 ON ((((rt1.c3)/(rt0.c1)))<(((rt0.c2)>(rt1.c2)))) WHERE (rt1.c0) ORDER BY json(rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON '-1749836248' RIGHT OUTER JOIN t0 ON ((((rt1.c3)/(rt0.c1)))<(((rt0.c2)>(rt1.c2)))) ORDER BY json(rt1.c3));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON '-1749836248' RIGHT OUTER JOIN t0 ON ((((rt1.c3)/(rt0.c1)))<(((rt0.c2)>(rt1.c2)))) WHERE (rt1.c0) ORDER BY json(rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON '-1749836248' RIGHT OUTER JOIN t0 ON ((((rt1.c3)/(rt0.c1)))<(((rt0.c2)>(rt1.c2)))) ORDER BY json(rt1.c3));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON '-1749836248' RIGHT OUTER JOIN t0 ON ((((rt1.c3)/(rt0.c1)))<(((rt0.c2)>(rt1.c2)))) WHERE (rt1.c0) ORDER BY json(rt1.c3);
SELECT * FROM rt0 CROSS JOIN v0 ON CAST(((v0.c1)<(v0.c0)) AS INTEGER) WHERE (((rt0.c2 COLLATE BINARY)*(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)*(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST(((v0.c1)<(v0.c0)) AS INTEGER));
SELECT * FROM rt0 CROSS JOIN v0 ON CAST(((v0.c1)<(v0.c0)) AS INTEGER) WHERE (((rt0.c2 COLLATE BINARY)*(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)*(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST(((v0.c1)<(v0.c0)) AS INTEGER));
SELECT * FROM rt0 CROSS JOIN v0 ON CAST(((v0.c1)<(v0.c0)) AS INTEGER) WHERE (((rt0.c2 COLLATE BINARY)*(CAST(rt0.c0 AS TEXT))));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON IFNULL(DISTINCT (((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((t0.c0, v0.c1, v0.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (v0.c1))) INNER JOIN t0 ON CASE WHEN (~ (v0.c1)) THEN (+ (rt1.c3)) ELSE UPPER(DISTINCT t0.c0) END WHERE (CASE v0.c0  WHEN rt1.c1 THEN t0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN rt1.c1 THEN t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON IFNULL(DISTINCT (((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((t0.c0, v0.c1, v0.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (v0.c1))) INNER JOIN t0 ON CASE WHEN (~ (v0.c1)) THEN (+ (rt1.c3)) ELSE UPPER(DISTINCT t0.c0) END);
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON IFNULL(DISTINCT (((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((t0.c0, v0.c1, v0.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (v0.c1))) INNER JOIN t0 ON CASE WHEN (~ (v0.c1)) THEN (+ (rt1.c3)) ELSE UPPER(DISTINCT t0.c0) END WHERE (CASE v0.c0  WHEN rt1.c1 THEN t0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN rt1.c1 THEN t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON IFNULL(DISTINCT (((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((t0.c0, v0.c1, v0.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (v0.c1))) INNER JOIN t0 ON CASE WHEN (~ (v0.c1)) THEN (+ (rt1.c3)) ELSE UPPER(DISTINCT t0.c0) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST(((((rt0.c0)AND(rt0.c0)))AND(v0.c2)) AS NUMERIC) LEFT OUTER JOIN v0 ON ((((((rt0.c1))<=((v0.c0)))))<(((t0.c0 IN ())))) WHERE (((((rt0.c0)>>(rt0.c0)))>=(UPPER(v0.c2)))) ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c0)))>=(UPPER(v0.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST(((((rt0.c0)AND(rt0.c0)))AND(v0.c2)) AS NUMERIC) LEFT OUTER JOIN v0 ON ((((((rt0.c1))<=((v0.c0)))))<(((t0.c0 IN ())))) ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST(((((rt0.c0)AND(rt0.c0)))AND(v0.c2)) AS NUMERIC) LEFT OUTER JOIN v0 ON ((((((rt0.c1))<=((v0.c0)))))<(((t0.c0 IN ())))) WHERE (((((rt0.c0)>>(rt0.c0)))>=(UPPER(v0.c2)))) ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c0)))>=(UPPER(v0.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST(((((rt0.c0)AND(rt0.c0)))AND(v0.c2)) AS NUMERIC) LEFT OUTER JOIN v0 ON ((((((rt0.c1))<=((v0.c0)))))<(((t0.c0 IN ())))) ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c0)<=(v0.c0))) ISNULL)) ORDER BY CASE WHEN json_array_length(v0.c2) THEN ((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)) END DESC, (~ (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<=(v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY CASE WHEN json_array_length(v0.c2) THEN ((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)) END DESC, (~ (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c0)<=(v0.c0))) ISNULL)) ORDER BY CASE WHEN json_array_length(v0.c2) THEN ((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)) END DESC, (~ (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<=(v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY CASE WHEN json_array_length(v0.c2) THEN ((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)) END DESC, (~ (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c0)<=(v0.c0))) ISNULL)) ORDER BY CASE WHEN json_array_length(v0.c2) THEN ((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)) END DESC, (~ (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((NOT (rt1.c0))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (CAST(v0.c1 AS REAL)))) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((((((((rt1.c1)OR(rt1.c0)))AND('4DᔃeA2yc')))OR(rt1.c3)))AND(rt1.c3)) END;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((((((((rt1.c1)OR(rt1.c0)))AND('4DᔃeA2yc')))OR(rt1.c3)))AND(rt1.c3)) END);
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((NOT (rt1.c0))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (CAST(v0.c1 AS REAL)))) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((((((((rt1.c1)OR(rt1.c0)))AND('4DᔃeA2yc')))OR(rt1.c3)))AND(rt1.c3)) END;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((((((((rt1.c1)OR(rt1.c0)))AND('4DᔃeA2yc')))OR(rt1.c3)))AND(rt1.c3)) END);
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((NOT (rt1.c0))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (CAST(v0.c1 AS REAL)))) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((((((((rt1.c1)OR(rt1.c0)))AND('4DᔃeA2yc')))OR(rt1.c3)))AND(rt1.c3)) END;
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt1 LEFT OUTER JOIN t0 ON '-158648081' LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))<>((rt0.c0))))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t0 ON '-158648081' LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))!=((rt0.c0))))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt1 LEFT OUTER JOIN t0 ON '-158648081' LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))<>((rt0.c0))))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t0 ON '-158648081' LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))!=((rt0.c0))))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt1 LEFT OUTER JOIN t0 ON '-158648081' LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))<>((rt0.c0))))) WHERE (rt0.c3);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (LIKELY(DISTINCT CASE WHEN 0.9107250662190568 THEN t0.c0 ELSE t0.c0 END)) ORDER BY (((v0.c0))=((t0.c0))) COLLATE NOCASE, (~ (t0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE WHEN 0.9107250662190568 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (((v0.c0))==((t0.c0))) COLLATE NOCASE, (~ (t0.c0 COLLATE RTRIM)) DESC);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (LIKELY(DISTINCT CASE WHEN 0.9107250662190568 THEN t0.c0 ELSE t0.c0 END)) ORDER BY (((v0.c0))=((t0.c0))) COLLATE NOCASE, (~ (t0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE WHEN 0.9107250662190568 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (((v0.c0))==((t0.c0))) COLLATE NOCASE, (~ (t0.c0 COLLATE RTRIM)) DESC);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (LIKELY(DISTINCT CASE WHEN 0.9107250662190568 THEN t0.c0 ELSE t0.c0 END)) ORDER BY (((v0.c0))=((t0.c0))) COLLATE NOCASE, (~ (t0.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM v0, t0, rt0, rt1 WHERE (((rt1.c3 IN ()) IN ())) ORDER BY ((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))) IN ((rt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM v0, t0, rt0, rt1 ORDER BY ((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))) IN ((rt1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, rt0, rt1 WHERE (((rt1.c3 IN ()) IN ())) ORDER BY ((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))) IN ((rt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM v0, t0, rt0, rt1 ORDER BY ((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))) IN ((rt1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, rt0, rt1 WHERE (((rt1.c3 IN ()) IN ())) ORDER BY ((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))) IN ((rt1.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<<(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<<(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<<(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<<(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<<(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(((t0.c0)+(v0.c2)))))AND((v0.c2 IN (t0.c0)))) WHERE (((((v0.c0) BETWEEN (0.5455508903979148) AND (t0.c0)))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (0.5455508903979148) AND (t0.c0)))|(NULL))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(((t0.c0)+(v0.c2)))))AND((v0.c2 IN (t0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(((t0.c0)+(v0.c2)))))AND((v0.c2 IN (t0.c0)))) WHERE (((((v0.c0) BETWEEN (0.5455508903979148) AND (t0.c0)))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (0.5455508903979148) AND (t0.c0)))|(NULL))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(((t0.c0)+(v0.c2)))))AND((v0.c2 IN (t0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON ((((t0.c0 COLLATE BINARY)OR(((t0.c0)+(v0.c2)))))AND((v0.c2 IN (t0.c0)))) WHERE (((((v0.c0) BETWEEN (0.5455508903979148) AND (t0.c0)))|(NULL)));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC)) ORDER BY ((rt0.c3)*('-2111119057')) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE ORDER BY ((rt0.c3)*('-2111119057')) COLLATE NOCASE ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC)) ORDER BY ((rt0.c3)*('-2111119057')) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE ORDER BY ((rt0.c3)*('-2111119057')) COLLATE NOCASE ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC)) ORDER BY ((rt0.c3)*('-2111119057')) COLLATE NOCASE ASC;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (IFNULL(rt1.c0, rt1.c2)))) ORDER BY TRIM(DISTINCT UPPER(rt1.c2), ((rt1.c3)<(rt1.c3))), (((rt1.c2 COLLATE RTRIM, TYPEOF(DISTINCT rt1.c1), (0X619821bf IN ())))<>(((~ (rt1.c0)), (t0.c0 IN (rt1.c3, rt1.c0)), CASE rt1.c0  WHEN t0.c0 THEN 'gZ' ELSE rt1.c1 END))), (~ (((rt1.c2)+(t0.c0)))), CASE rt1.c3 COLLATE RTRIM  WHEN (- (rt1.c2)) THEN CAST(rt1.c2 AS BLOB) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (IFNULL(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM rt1, t0 ORDER BY TRIM(DISTINCT UPPER(rt1.c2), ((rt1.c3)<(rt1.c3))), (((rt1.c2 COLLATE RTRIM, TYPEOF(DISTINCT rt1.c1), (0X619821bf IN ())))<>(((~ (rt1.c0)), (t0.c0 IN (rt1.c3, rt1.c0)), CASE rt1.c0  WHEN t0.c0 THEN 'gZ' ELSE rt1.c1 END))), (~ (((rt1.c2)+(t0.c0)))), CASE rt1.c3 COLLATE RTRIM  WHEN (- (rt1.c2)) THEN CAST(rt1.c2 AS BLOB) END  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (IFNULL(rt1.c0, rt1.c2)))) ORDER BY TRIM(DISTINCT UPPER(rt1.c2), ((rt1.c3)<(rt1.c3))), (((rt1.c2 COLLATE RTRIM, TYPEOF(DISTINCT rt1.c1), (0X619821bf IN ())))<>(((~ (rt1.c0)), (t0.c0 IN (rt1.c3, rt1.c0)), CASE rt1.c0  WHEN t0.c0 THEN 'gZ' ELSE rt1.c1 END))), (~ (((rt1.c2)+(t0.c0)))), CASE rt1.c3 COLLATE RTRIM  WHEN (- (rt1.c2)) THEN CAST(rt1.c2 AS BLOB) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (IFNULL(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM rt1, t0 ORDER BY TRIM(DISTINCT UPPER(rt1.c2), ((rt1.c3)<(rt1.c3))), (((rt1.c2 COLLATE RTRIM, TYPEOF(DISTINCT rt1.c1), (0X619821bf IN ())))<>(((~ (rt1.c0)), (t0.c0 IN (rt1.c3, rt1.c0)), CASE rt1.c0  WHEN t0.c0 THEN 'gZ' ELSE rt1.c1 END))), (~ (((rt1.c2)+(t0.c0)))), CASE rt1.c3 COLLATE RTRIM  WHEN (- (rt1.c2)) THEN CAST(rt1.c2 AS BLOB) END  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (IFNULL(rt1.c0, rt1.c2)))) ORDER BY TRIM(DISTINCT UPPER(rt1.c2), ((rt1.c3)<(rt1.c3))), (((rt1.c2 COLLATE RTRIM, TYPEOF(DISTINCT rt1.c1), (0X619821bf IN ())))<>(((~ (rt1.c0)), (t0.c0 IN (rt1.c3, rt1.c0)), CASE rt1.c0  WHEN t0.c0 THEN 'gZ' ELSE rt1.c1 END))), (~ (((rt1.c2)+(t0.c0)))), CASE rt1.c3 COLLATE RTRIM  WHEN (- (rt1.c2)) THEN CAST(rt1.c2 AS BLOB) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (((((((((NOT (rt1.c0)))OR(t0.c0 COLLATE RTRIM)))AND(((rt1.c3)<<(t0.c0)))))AND((- ('')))))OR((((rt1.c2))=((rt1.c0))))) INNER JOIN v0 ON (((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((v0.c2))))|(((rt0.c0)IS NOT(rt0.c3)))) WHERE (v0.c1) ORDER BY ((((rt1.c1)=('')))<=((rt0.c0 IN (x'', v0.c1)))), ((v0.c0) IS FALSE) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (((((((((NOT (rt1.c0)))OR(t0.c0 COLLATE RTRIM)))AND(((rt1.c3)<<(t0.c0)))))AND((- ('')))))OR((((rt1.c2))=((rt1.c0))))) INNER JOIN v0 ON (((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((v0.c2))))|(((rt0.c0)IS NOT(rt0.c3)))) ORDER BY ((((rt1.c1)=('')))<=((rt0.c0 IN (x'', v0.c1)))), ((v0.c0) IS FALSE) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (((((((((NOT (rt1.c0)))OR(t0.c0 COLLATE RTRIM)))AND(((rt1.c3)<<(t0.c0)))))AND((- ('')))))OR((((rt1.c2))=((rt1.c0))))) INNER JOIN v0 ON (((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((v0.c2))))|(((rt0.c0)IS NOT(rt0.c3)))) WHERE (v0.c1) ORDER BY ((((rt1.c1)=('')))<=((rt0.c0 IN (x'', v0.c1)))), ((v0.c0) IS FALSE) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (((((((((NOT (rt1.c0)))OR(t0.c0 COLLATE RTRIM)))AND(((rt1.c3)<<(t0.c0)))))AND((- ('')))))OR((((rt1.c2))=((rt1.c0))))) INNER JOIN v0 ON (((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((v0.c2))))|(((rt0.c0)IS NOT(rt0.c3)))) ORDER BY ((((rt1.c1)=('')))<=((rt0.c0 IN (x'', v0.c1)))), ((v0.c0) IS FALSE) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (((((((((NOT (rt1.c0)))OR(t0.c0 COLLATE RTRIM)))AND(((rt1.c3)<<(t0.c0)))))AND((- ('')))))OR((((rt1.c2))=((rt1.c0))))) INNER JOIN v0 ON (((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((v0.c2))))|(((rt0.c0)IS NOT(rt0.c3)))) WHERE (v0.c1) ORDER BY ((((rt1.c1)=('')))<=((rt0.c0 IN (x'', v0.c1)))), ((v0.c0) IS FALSE) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY TYPEOF(DISTINCT CASE WHEN v0.c0 THEN v0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY TYPEOF(DISTINCT CASE WHEN v0.c0 THEN v0.c1 END)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY TYPEOF(DISTINCT CASE WHEN v0.c0 THEN v0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY TYPEOF(DISTINCT CASE WHEN v0.c0 THEN v0.c1 END)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY TYPEOF(DISTINCT CASE WHEN v0.c0 THEN v0.c1 END)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)>('12442331'))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND ((- (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>('12442331'))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND ((- (v0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)>('12442331'))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND ((- (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>('12442331'))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND ((- (v0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)>('12442331'))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND ((- (v0.c1)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((~ (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((~ (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((~ (rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ABS((v0.c0 IN ())) INNER JOIN v0 ON CAST((~ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c1)))AND(v0.c0)))AND(830171058)))AND(rt0.c3)))) AND ((json_patch(rt0.c2, rt1.c2)))) WHERE ((((NOT (v0.c2))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT)))) ORDER BY (((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c1)) IN (LOWER(DISTINCT v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ABS((v0.c0 IN ())) INNER JOIN v0 ON CAST((~ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c1)))AND(v0.c0)))AND(830171058)))AND(rt0.c3)))) AND ((json_patch(rt0.c2, rt1.c2)))) ORDER BY (((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c1)) IN (LOWER(DISTINCT v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ABS((v0.c0 IN ())) INNER JOIN v0 ON CAST((~ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c1)))AND(v0.c0)))AND(830171058)))AND(rt0.c3)))) AND ((json_patch(rt0.c2, rt1.c2)))) WHERE ((((NOT (v0.c2))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT)))) ORDER BY (((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c1)) IN (LOWER(DISTINCT v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ABS((v0.c0 IN ())) INNER JOIN v0 ON CAST((~ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c1)))AND(v0.c0)))AND(830171058)))AND(rt0.c3)))) AND ((json_patch(rt0.c2, rt1.c2)))) ORDER BY (((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c1)) IN (LOWER(DISTINCT v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ABS((v0.c0 IN ())) INNER JOIN v0 ON CAST((~ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c1)))AND(v0.c0)))AND(830171058)))AND(rt0.c3)))) AND ((json_patch(rt0.c2, rt1.c2)))) WHERE ((((NOT (v0.c2))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT)))) ORDER BY (((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c1)) IN (LOWER(DISTINCT v0.c0)))  NULLS FIRST;
SELECT * FROM rt0, rt1, t0, v0 WHERE (CASE (v0.c0 IN ('1865325275'))  WHEN (rt1.c1 IN ()) THEN ((rt0.c1)<=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN ('1865325275'))  WHEN (rt1.c1 IN ()) THEN ((rt0.c1)<=(rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1, t0, v0);
SELECT * FROM rt0, rt1, t0, v0 WHERE (CASE (v0.c0 IN ('1865325275'))  WHEN (rt1.c1 IN ()) THEN ((rt0.c1)<=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN ('1865325275'))  WHEN (rt1.c1 IN ()) THEN ((rt0.c1)<=(rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1, t0, v0);
SELECT * FROM rt0, rt1, t0, v0 WHERE (CASE (v0.c0 IN ('1865325275'))  WHEN (rt1.c1 IN ()) THEN ((rt0.c1)<=(rt0.c1)) END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c2))) NOT BETWEEN (((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c1)))AND(0.8584021123594024))) AND ((((v0.c0)) BETWEEN (('-431719251')) AND ((v0.c0)))))) ORDER BY (((~ (v0.c1)))OR(CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))  NULLS FIRST, ((v0.c1) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c2))) NOT BETWEEN (((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c1)))AND(0.8584021123594024))) AND ((((v0.c0)) BETWEEN (('-431719251')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c1)))OR(CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))  NULLS FIRST, ((v0.c1) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c2))) NOT BETWEEN (((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c1)))AND(0.8584021123594024))) AND ((((v0.c0)) BETWEEN (('-431719251')) AND ((v0.c0)))))) ORDER BY (((~ (v0.c1)))OR(CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))  NULLS FIRST, ((v0.c1) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c2))) NOT BETWEEN (((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c1)))AND(0.8584021123594024))) AND ((((v0.c0)) BETWEEN (('-431719251')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c1)))OR(CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))  NULLS FIRST, ((v0.c1) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c2))) NOT BETWEEN (((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c1)))AND(0.8584021123594024))) AND ((((v0.c0)) BETWEEN (('-431719251')) AND ((v0.c0)))))) ORDER BY (((~ (v0.c1)))OR(CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))  NULLS FIRST, ((v0.c1) IS TRUE)  NULLS FIRST;
SELECT * FROM t0, v0, rt0 WHERE (CAST((+ (rt0.c0)) AS REAL)) ORDER BY ABS((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM t0 NOT INDEXED, v0, rt0 ORDER BY ABS((v0.c0 IN ())));
SELECT * FROM t0, v0, rt0 WHERE (CAST((+ (rt0.c0)) AS REAL)) ORDER BY ABS((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM t0 NOT INDEXED, v0, rt0 ORDER BY ABS((v0.c0 IN ())));
SELECT * FROM t0, v0, rt0 WHERE (CAST((+ (rt0.c0)) AS REAL)) ORDER BY ABS((v0.c0 IN ()));
SELECT * FROM t0, rt0, rt1, v0 WHERE (CAST(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c3 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c3 END AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT * FROM t0, rt0, rt1, v0 WHERE (CAST(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c3 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c3 END AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT * FROM t0, rt0, rt1, v0 WHERE (CAST(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c3 END AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, rt1, v0 WHERE (((rt0.c3 COLLATE NOCASE)/(((rt0.c3) BETWEEN (v0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)/(((rt0.c3) BETWEEN (v0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, rt1, v0 WHERE (((rt0.c3 COLLATE NOCASE)/(((rt0.c3) BETWEEN (v0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)/(((rt0.c3) BETWEEN (v0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, rt1, v0 WHERE (((rt0.c3 COLLATE NOCASE)/(((rt0.c3) BETWEEN (v0.c2) AND (v0.c0)))));
SELECT ALL * FROM t0, v0, rt0, rt1 WHERE (((LIKELY(rt1.c1))IS(LOWER(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt1.c1))IS(LOWER(rt1.c0)))) IS TRUE)  as count FROM t0, v0, rt0, rt1);
SELECT ALL * FROM t0, v0, rt0, rt1 WHERE (((LIKELY(rt1.c1))IS(LOWER(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt1.c1))IS(LOWER(rt1.c0)))) IS TRUE)  as count FROM t0, v0, rt0, rt1);
SELECT ALL * FROM t0, v0, rt0, rt1 WHERE (((LIKELY(rt1.c1))IS(LOWER(rt1.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER((~ (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER((~ (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER((~ (rt1.c3))));
SELECT ALL * FROM t0, rt1, rt0 INNER JOIN v0 ON CAST(((v0.c0)=('-341533454')) AS TEXT) WHERE (((((((rt1.c0)OR(rt0.c2)))AND(v0.c0))) BETWEEN ((('0.827915080032228') NOT NULL)) AND ((v0.c0 IN (v0.c2, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt0.c2)))AND(v0.c0))) BETWEEN ((('0.827915080032228') NOT NULL)) AND ((v0.c0 IN (v0.c2, rt1.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 INNER JOIN v0 ON CAST(((v0.c0)==('-341533454')) AS TEXT));
SELECT ALL * FROM t0, rt1, rt0 INNER JOIN v0 ON CAST(((v0.c0)=('-341533454')) AS TEXT) WHERE (((((((rt1.c0)OR(rt0.c2)))AND(v0.c0))) BETWEEN ((('0.827915080032228') NOT NULL)) AND ((v0.c0 IN (v0.c2, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt0.c2)))AND(v0.c0))) BETWEEN ((('0.827915080032228') NOT NULL)) AND ((v0.c0 IN (v0.c2, rt1.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 INNER JOIN v0 ON CAST(((v0.c0)==('-341533454')) AS TEXT));
SELECT ALL * FROM t0, rt1, rt0 INNER JOIN v0 ON CAST(((v0.c0)=('-341533454')) AS TEXT) WHERE (((((((rt1.c0)OR(rt0.c2)))AND(v0.c0))) BETWEEN ((('0.827915080032228') NOT NULL)) AND ((v0.c0 IN (v0.c2, rt1.c2)))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (rt1.c3)))) AND ((CASE WHEN rt1.c2 THEN v0.c0 WHEN '' THEN rt1.c3 WHEN v0.c1 THEN 0.4853344333209907 END)))) ORDER BY (((((rt1.c3))<=((rt1.c2))))>=(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (rt1.c3)))) AND ((CASE WHEN rt1.c2 THEN v0.c0 WHEN '' THEN rt1.c3 WHEN v0.c1 THEN 0.4853344333209907 END)))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c3))<=((rt1.c2))))>=(''))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (rt1.c3)))) AND ((CASE WHEN rt1.c2 THEN v0.c0 WHEN '' THEN rt1.c3 WHEN v0.c1 THEN 0.4853344333209907 END)))) ORDER BY (((((rt1.c3))<=((rt1.c2))))>=(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (rt1.c3)))) AND ((CASE WHEN rt1.c2 THEN v0.c0 WHEN '' THEN rt1.c3 WHEN v0.c1 THEN 0.4853344333209907 END)))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c3))<=((rt1.c2))))>=(''))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (rt1.c3)))) AND ((CASE WHEN rt1.c2 THEN v0.c0 WHEN '' THEN rt1.c3 WHEN v0.c1 THEN 0.4853344333209907 END)))) ORDER BY (((((rt1.c3))<=((rt1.c2))))>=(''))  NULLS LAST;
SELECT ALL * FROM v0, t0 FULL OUTER JOIN rt0 ON ((rt0.c0)|(v0.c1)) COLLATE NOCASE WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN rt0 ON ((rt0.c0)|(v0.c1)) COLLATE NOCASE);
SELECT ALL * FROM v0, t0 FULL OUTER JOIN rt0 ON ((rt0.c0)|(v0.c1)) COLLATE NOCASE WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN rt0 ON ((rt0.c0)|(v0.c1)) COLLATE NOCASE);
SELECT ALL * FROM v0, t0 FULL OUTER JOIN rt0 ON ((rt0.c0)|(v0.c1)) COLLATE NOCASE WHERE (x'');
SELECT * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(0Xfffffffffd508a3c))) NOTNULL) LEFT OUTER JOIN t0 ON v0.c2 WHERE ((CAST(v0.c2 AS BLOB) IN (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c2 AS BLOB) IN (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(0xfffffffffd508a3c))) NOTNULL) LEFT OUTER JOIN t0 ON v0.c2);
SELECT * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(0Xfffffffffd508a3c))) NOTNULL) LEFT OUTER JOIN t0 ON v0.c2 WHERE ((CAST(v0.c2 AS BLOB) IN (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c2 AS BLOB) IN (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(0xfffffffffd508a3c))) NOTNULL) LEFT OUTER JOIN t0 ON v0.c2);
SELECT * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)IS(0Xfffffffffd508a3c))) NOTNULL) LEFT OUTER JOIN t0 ON v0.c2 WHERE ((CAST(v0.c2 AS BLOB) IN (v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE ((((NULL IN (v0.c0)))<(load_extension('-696420829'))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (v0.c0)))<(load_extension('-696420829')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NULL IN (v0.c0)))<(load_extension('-696420829'))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (v0.c0)))<(load_extension('-696420829')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NULL IN (v0.c0)))<(load_extension('-696420829'))));
SELECT ALL COUNT(*) FROM t0 WHERE (MIN((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0));
SELECT SUM(count) FROM (SELECT ((MIN((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (MIN((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0));
SELECT SUM(count) FROM (SELECT ((MIN((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (MIN((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0));
SELECT ALL * FROM v0 WHERE ((~ (CAST(v0.c0 AS INTEGER)))) ORDER BY SQLITE_SOURCE_ID(), ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)<<(((v0.c0)%(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY SQLITE_SOURCE_ID(), ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)<<(((v0.c0)%(v0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((~ (CAST(v0.c0 AS INTEGER)))) ORDER BY SQLITE_SOURCE_ID(), ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)<<(((v0.c0)%(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY SQLITE_SOURCE_ID(), ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)<<(((v0.c0)%(v0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((~ (CAST(v0.c0 AS INTEGER)))) ORDER BY SQLITE_SOURCE_ID(), ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)<<(((v0.c0)%(v0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE TYPEOF(rt0.c2)  WHEN load_extension(rt0.c2, rt0.c0) THEN CAST(rt0.c0 AS INTEGER) ELSE (((x''))<=((rt0.c2))) END) ORDER BY LIKELY(DISTINCT rt0.c2) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(rt0.c2)  WHEN load_extension(rt0.c2, rt0.c0) THEN CAST(rt0.c0 AS INTEGER) ELSE (((x''))<=((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT rt0.c2) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE TYPEOF(rt0.c2)  WHEN load_extension(rt0.c2, rt0.c0) THEN CAST(rt0.c0 AS INTEGER) ELSE (((x''))<=((rt0.c2))) END) ORDER BY LIKELY(DISTINCT rt0.c2) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(rt0.c2)  WHEN load_extension(rt0.c2, rt0.c0) THEN CAST(rt0.c0 AS INTEGER) ELSE (((x''))<=((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT rt0.c2) ASC  NULLS LAST);
SELECT * FROM v0, rt1, rt0, t0 WHERE (((((((rt1.c0)AND(t0.c0)))AND(rt0.c0)))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))))) ORDER BY ((v0.c0 COLLATE RTRIM)*(((v0.c2)-(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(t0.c0)))AND(rt0.c0)))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY ((v0.c0 COLLATE RTRIM)*(((v0.c2)-(v0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0, rt1, rt0, t0 WHERE (((((((rt1.c0)AND(t0.c0)))AND(rt0.c0)))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))))) ORDER BY ((v0.c0 COLLATE RTRIM)*(((v0.c2)-(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(t0.c0)))AND(rt0.c0)))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY ((v0.c0 COLLATE RTRIM)*(((v0.c2)-(v0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0, rt1, rt0, t0 WHERE (((((((rt1.c0)AND(t0.c0)))AND(rt0.c0)))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))))) ORDER BY ((v0.c0 COLLATE RTRIM)*(((v0.c2)-(v0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE RTRIM WHERE (((rt1.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE RTRIM);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE RTRIM WHERE (((rt1.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE RTRIM);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE RTRIM WHERE (((rt1.c2) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c1 AS TEXT) IN ()));
SELECT * FROM rt0, t0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT ALL * FROM rt1, rt0, v0 WHERE (CASE rt1.c2  WHEN CAST(v0.c1 AS NUMERIC) THEN '1863911712' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN CAST(v0.c1 AS NUMERIC) THEN '1863911712' END) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (CASE rt1.c2  WHEN CAST(v0.c1 AS NUMERIC) THEN '1863911712' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN CAST(v0.c1 AS NUMERIC) THEN '1863911712' END) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (CASE rt1.c2  WHEN CAST(v0.c1 AS NUMERIC) THEN '1863911712' END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)<=(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<=(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)<=(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<=(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)<=(v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, t0, v0 NATURAL JOIN rt0 WHERE (((v0.c2 COLLATE NOCASE)>(((((rt1.c1)AND(rt0.c3)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE NOCASE)>(((((rt1.c1)AND(rt0.c3)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1, t0, v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 NATURAL JOIN rt0 WHERE (((v0.c2 COLLATE NOCASE)>(((((rt1.c1)AND(rt0.c3)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE NOCASE)>(((((rt1.c1)AND(rt0.c3)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1, t0, v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 NATURAL JOIN rt0 WHERE (((v0.c2 COLLATE NOCASE)>(((((rt1.c1)AND(rt0.c3)))AND(rt1.c1)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (NULL) ORDER BY x'' COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY x'' COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE (NULL) ORDER BY x'' COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY x'' COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE (NULL) ORDER BY x'' COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((((rt1.c3)AND(rt1.c3)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((rt1.c3)AND(rt1.c3)))OR(NULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((((rt1.c3)AND(rt1.c3)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((rt1.c3)AND(rt1.c3)))OR(NULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((((rt1.c3)AND(rt1.c3)))OR(NULL))));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((NULLIF(rt1.c3, v0.c0)) IS TRUE) INNER JOIN t0 ON (NOT (x'7cf6')) FULL OUTER JOIN rt0 ON (((~ (v0.c2))) NOT BETWEEN ('1863911712') AND (((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (NOT (v0.c1)) DESC, (+ ((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC, ((CAST(rt0.c3 AS NUMERIC))==(rt1.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((NULLIF(rt1.c3, v0.c0)) IS TRUE) INNER JOIN t0 ON (NOT (x'7cf6')) FULL OUTER JOIN rt0 ON (((~ (v0.c2))) NOT BETWEEN ('1863911712') AND (((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (NOT (v0.c1)) DESC, (+ ((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC, ((CAST(rt0.c3 AS NUMERIC))=(rt1.c0 COLLATE RTRIM)) DESC);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((NULLIF(rt1.c3, v0.c0)) IS TRUE) INNER JOIN t0 ON (NOT (x'7cf6')) FULL OUTER JOIN rt0 ON (((~ (v0.c2))) NOT BETWEEN ('1863911712') AND (((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (NOT (v0.c1)) DESC, (+ ((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC, ((CAST(rt0.c3 AS NUMERIC))==(rt1.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((NULLIF(rt1.c3, v0.c0)) IS TRUE) INNER JOIN t0 ON (NOT (x'7cf6')) FULL OUTER JOIN rt0 ON (((~ (v0.c2))) NOT BETWEEN ('1863911712') AND (((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (NOT (v0.c1)) DESC, (+ ((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC, ((CAST(rt0.c3 AS NUMERIC))=(rt1.c0 COLLATE RTRIM)) DESC);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((NULLIF(rt1.c3, v0.c0)) IS TRUE) INNER JOIN t0 ON (NOT (x'7cf6')) FULL OUTER JOIN rt0 ON (((~ (v0.c2))) NOT BETWEEN ('1863911712') AND (((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (NOT (v0.c1)) DESC, (+ ((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC, ((CAST(rt0.c3 AS NUMERIC))==(rt1.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (x'' COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE (((CASE rt0.c2  WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt1.c0 ELSE v0.c2 END)<<(((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt1.c2 END));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt1.c0 ELSE v0.c2 END)<<(((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0, v0 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE (((CASE rt0.c2  WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt1.c0 ELSE v0.c2 END)<<(((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt1.c2 END));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt1.c0 ELSE v0.c2 END)<<(((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0, v0 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE (((CASE rt0.c2  WHEN v0.c1 THEN v0.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt1.c0 ELSE v0.c2 END)<<(((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt1.c2 END));
SELECT * FROM t0, rt1, rt0 WHERE (((((((((((rt0.c3)OR(x'')))OR(rt1.c1)))OR(NULL)))OR(rt0.c3)))*((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(x'')))OR(rt1.c1)))OR(NULL)))OR(rt0.c3)))*((NOT (rt1.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (((((((((((rt0.c3)OR(x'')))OR(rt1.c1)))OR(NULL)))OR(rt0.c3)))*((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(x'')))OR(rt1.c1)))OR(NULL)))OR(rt0.c3)))*((NOT (rt1.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (((((((((((rt0.c3)OR(x'')))OR(rt1.c1)))OR(NULL)))OR(rt0.c3)))*((NOT (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((~ (rt0.c2 COLLATE BINARY))) ORDER BY 1.397032541E9, (((((rt0.c0) ISNULL)))>=((((v0.c0) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY 1.397032541E9, (((((rt0.c0) ISNULL)))>=((((v0.c0) IS TRUE)))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((~ (rt0.c2 COLLATE BINARY))) ORDER BY 1.397032541E9, (((((rt0.c0) ISNULL)))>=((((v0.c0) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY 1.397032541E9, (((((rt0.c0) ISNULL)))>=((((v0.c0) IS TRUE)))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((~ (rt0.c2 COLLATE BINARY))) ORDER BY 1.397032541E9, (((((rt0.c0) ISNULL)))>=((((v0.c0) IS TRUE)))) DESC;
SELECT ALL * FROM t0 WHERE ((+ (t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY ((rt0.c0 COLLATE NOCASE)*(((rt0.c2) IS FALSE)))  NULLS LAST, (((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((((rt0.c3)<(rt0.c0))))), (rt0.c3 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)*(((rt0.c2) IS FALSE)))  NULLS LAST, (((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((((rt0.c3)<(rt0.c0))))), (rt0.c3 COLLATE NOCASE IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY ((rt0.c0 COLLATE NOCASE)*(((rt0.c2) IS FALSE)))  NULLS LAST, (((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((((rt0.c3)<(rt0.c0))))), (rt0.c3 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)*(((rt0.c2) IS FALSE)))  NULLS LAST, (((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((((rt0.c3)<(rt0.c0))))), (rt0.c3 COLLATE NOCASE IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY ((rt0.c0 COLLATE NOCASE)*(((rt0.c2) IS FALSE)))  NULLS LAST, (((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((((rt0.c3)<(rt0.c0))))), (rt0.c3 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT * FROM v0, t0, rt0, rt1 WHERE (CAST(((rt1.c0)OR(v0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)OR(v0.c2)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, rt0, rt1);
SELECT * FROM v0, t0, rt0, rt1 WHERE (CAST(((rt1.c0)OR(v0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)OR(v0.c2)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, rt0, rt1);
SELECT * FROM v0, t0, rt0, rt1 WHERE (CAST(((rt1.c0)OR(v0.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE (((CAST(rt1.c0 AS BLOB)) BETWEEN (NULLIF(rt0.c3, rt0.c2)) AND (((v0.c2) BETWEEN (rt1.c2) AND (t0.c0))))) ORDER BY ((((((((json_array(t0.c0, rt1.c2, v0.c1, NULL, rt1.c2, rt1.c3))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((((rt0.c2)OR(t0.c0)))AND(0.6059066289294286)))))AND(NULL COLLATE NOCASE))  NULLS FIRST, CAST(t0.c0 COLLATE BINARY AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB)) BETWEEN (NULLIF(rt0.c3, rt0.c2)) AND (((v0.c2) BETWEEN (rt1.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY ((((((((json_array(t0.c0, rt1.c2, v0.c1, NULL, rt1.c2, rt1.c3))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((((rt0.c2)OR(t0.c0)))AND(0.6059066289294286)))))AND(NULL COLLATE NOCASE))  NULLS FIRST, CAST(t0.c0 COLLATE BINARY AS NUMERIC));
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE (((CAST(rt1.c0 AS BLOB)) BETWEEN (NULLIF(rt0.c3, rt0.c2)) AND (((v0.c2) BETWEEN (rt1.c2) AND (t0.c0))))) ORDER BY ((((((((json_array(t0.c0, rt1.c2, v0.c1, NULL, rt1.c2, rt1.c3))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((((rt0.c2)OR(t0.c0)))AND(0.6059066289294286)))))AND(NULL COLLATE NOCASE))  NULLS FIRST, CAST(t0.c0 COLLATE BINARY AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB)) BETWEEN (NULLIF(rt0.c3, rt0.c2)) AND (((v0.c2) BETWEEN (rt1.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY ((((((((json_array(t0.c0, rt1.c2, v0.c1, NULL, rt1.c2, rt1.c3))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((((rt0.c2)OR(t0.c0)))AND(0.6059066289294286)))))AND(NULL COLLATE NOCASE))  NULLS FIRST, CAST(t0.c0 COLLATE BINARY AS NUMERIC));
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE (((CAST(rt1.c0 AS BLOB)) BETWEEN (NULLIF(rt0.c3, rt0.c2)) AND (((v0.c2) BETWEEN (rt1.c2) AND (t0.c0))))) ORDER BY ((((((((json_array(t0.c0, rt1.c2, v0.c1, NULL, rt1.c2, rt1.c3))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((((rt0.c2)OR(t0.c0)))AND(0.6059066289294286)))))AND(NULL COLLATE NOCASE))  NULLS FIRST, CAST(t0.c0 COLLATE BINARY AS NUMERIC);
SELECT ALL * FROM t0 INNER JOIN v0 ON ((LIKELIHOOD(t0.c0, 0.22932601675747621)) NOTNULL) WHERE ((- (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((LIKELIHOOD(t0.c0, 0.22932601675747621)) NOTNULL));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((LIKELIHOOD(t0.c0, 0.22932601675747621)) NOTNULL) WHERE ((- (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((LIKELIHOOD(t0.c0, 0.22932601675747621)) NOTNULL));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((LIKELIHOOD(t0.c0, 0.22932601675747621)) NOTNULL) WHERE ((- (((t0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON json_quote((v0.c2 IN ())) INNER JOIN t0 ON CASE TRIM(rt1.c0)  WHEN v0.c2 THEN (~ (rt1.c3)) END WHERE ((((+ (rt1.c3)))>=(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c3)))>=(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON json_quote((v0.c2 IN ())) INNER JOIN t0 ON CASE TRIM(rt1.c0)  WHEN v0.c2 THEN (~ (rt1.c3)) END);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON json_quote((v0.c2 IN ())) INNER JOIN t0 ON CASE TRIM(rt1.c0)  WHEN v0.c2 THEN (~ (rt1.c3)) END WHERE ((((+ (rt1.c3)))>=(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c3)))>=(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON json_quote((v0.c2 IN ())) INNER JOIN t0 ON CASE TRIM(rt1.c0)  WHEN v0.c2 THEN (~ (rt1.c3)) END);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON json_quote((v0.c2 IN ())) INNER JOIN t0 ON CASE TRIM(rt1.c0)  WHEN v0.c2 THEN (~ (rt1.c3)) END WHERE ((((+ (rt1.c3)))>=(CAST(t0.c0 AS INTEGER))));
SELECT * FROM t0, rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (t0.c0) AND (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (t0.c0) AND (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT * FROM t0, rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (t0.c0) AND (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (t0.c0) AND (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT * FROM t0, rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (t0.c0) AND (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt1, rt0, v0 NATURAL JOIN t0 WHERE ((rt1.c1 IN (((rt1.c0)||(v0.c1)), ((t0.c0)=(rt0.c0))))) ORDER BY ((json_object(rt0.c0, rt1.c0, rt1.c1, rt0.c1))>(((rt1.c3)GLOB(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (((rt1.c0)||(v0.c1)), ((t0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0 NATURAL JOIN t0 ORDER BY ((json_object(rt0.c0, rt1.c0, rt1.c1, rt0.c1))>(((rt1.c3)GLOB(v0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, v0 NATURAL JOIN t0 WHERE ((rt1.c1 IN (((rt1.c0)||(v0.c1)), ((t0.c0)=(rt0.c0))))) ORDER BY ((json_object(rt0.c0, rt1.c0, rt1.c1, rt0.c1))>(((rt1.c3)GLOB(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (((rt1.c0)||(v0.c1)), ((t0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0 NATURAL JOIN t0 ORDER BY ((json_object(rt0.c0, rt1.c0, rt1.c1, rt0.c1))>(((rt1.c3)GLOB(v0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, v0 NATURAL JOIN t0 WHERE ((rt1.c1 IN (((rt1.c0)||(v0.c1)), ((t0.c0)=(rt0.c0))))) ORDER BY ((json_object(rt0.c0, rt1.c0, rt1.c1, rt0.c1))>(((rt1.c3)GLOB(v0.c2))))  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN t0 ON rt0.c1 LEFT OUTER JOIN rt0 ON HEX(DISTINCT ((v0.c0) NOT NULL)) WHERE ((((rt0.c3 IN (rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((v0.c0) NOT NULL)))) ORDER BY NULL COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON rt0.c1 LEFT OUTER JOIN rt0 ON HEX(DISTINCT ((v0.c0) NOT NULL)) ORDER BY NULL COLLATE BINARY  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON rt0.c1 LEFT OUTER JOIN rt0 ON HEX(DISTINCT ((v0.c0) NOT NULL)) WHERE ((((rt0.c3 IN (rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((v0.c0) NOT NULL)))) ORDER BY NULL COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON rt0.c1 LEFT OUTER JOIN rt0 ON HEX(DISTINCT ((v0.c0) NOT NULL)) ORDER BY NULL COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))>=(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>=(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))>=(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>=(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))>=(rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((v0.c1 IN ()))+(((((rt1.c2)AND(rt1.c1)))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ()))+(((((rt1.c2)AND(rt1.c1)))OR(v0.c1))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((v0.c1 IN ()))+(((((rt1.c2)AND(rt1.c1)))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ()))+(((((rt1.c2)AND(rt1.c1)))OR(v0.c1))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((v0.c1 IN ()))+(((((rt1.c2)AND(rt1.c1)))OR(v0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END WHEN 0.9628755009632145 THEN rt0.c1 COLLATE BINARY WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY LENGTH((- (rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END WHEN 0.9628755009632145 THEN rt0.c1 COLLATE BINARY WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0 ORDER BY LENGTH((- (rt0.c3))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END WHEN 0.9628755009632145 THEN rt0.c1 COLLATE BINARY WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY LENGTH((- (rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END WHEN 0.9628755009632145 THEN rt0.c1 COLLATE BINARY WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0 ORDER BY LENGTH((- (rt0.c3))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END WHEN 0.9628755009632145 THEN rt0.c1 COLLATE BINARY WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY LENGTH((- (rt0.c3))) DESC;
SELECT ALL COUNT(*) FROM rt1, t0, rt0, v0 WHERE (((HEX(rt1.c3)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c3)) IS FALSE)) IS TRUE)  as count FROM rt1, t0, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0, v0 WHERE (((HEX(rt1.c3)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c3)) IS FALSE)) IS TRUE)  as count FROM rt1, t0, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0, v0 WHERE (((HEX(rt1.c3)) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)*(v0.c2))) ISNULL)) ORDER BY CASE WHEN ((v0.c0) ISNULL) THEN (v0.c1 IN (v0.c0, v0.c0)) ELSE v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)*(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) ISNULL) THEN (v0.c1 IN (v0.c0, v0.c0)) ELSE v0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)*(v0.c2))) ISNULL)) ORDER BY CASE WHEN ((v0.c0) ISNULL) THEN (v0.c1 IN (v0.c0, v0.c0)) ELSE v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)*(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) ISNULL) THEN (v0.c1 IN (v0.c0, v0.c0)) ELSE v0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)*(v0.c2))) ISNULL)) ORDER BY CASE WHEN ((v0.c0) ISNULL) THEN (v0.c1 IN (v0.c0, v0.c0)) ELSE v0.c0 END  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 WHERE ((CASE x'fe04'  WHEN v0.c0 THEN rt1.c3 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE x'fe04'  WHEN v0.c0 THEN rt1.c3 END IN ())) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((CASE x'fe04'  WHEN v0.c0 THEN rt1.c3 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE x'fe04'  WHEN v0.c0 THEN rt1.c3 END IN ())) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((CASE x'fe04'  WHEN v0.c0 THEN rt1.c3 END IN ()));
SELECT ALL * FROM rt1, v0, rt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM t0, v0, rt1, rt0 WHERE (((((v0.c1) BETWEEN (t0.c0) AND (rt1.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (t0.c0) AND (rt1.c3))) NOTNULL)) IS TRUE)  as count FROM t0 NOT INDEXED, v0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, v0, rt1, rt0 WHERE (((((v0.c1) BETWEEN (t0.c0) AND (rt1.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (t0.c0) AND (rt1.c3))) NOTNULL)) IS TRUE)  as count FROM t0 NOT INDEXED, v0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, v0, rt1, rt0 WHERE (((((v0.c1) BETWEEN (t0.c0) AND (rt1.c3))) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY '140133074'  NULLS FIRST, ('-431719251' COLLATE NOCASE IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY '140133074'  NULLS FIRST, ('-431719251' COLLATE NOCASE IN ()) DESC);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY '140133074'  NULLS FIRST, ('-431719251' COLLATE NOCASE IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY '140133074'  NULLS FIRST, ('-431719251' COLLATE NOCASE IN ()) DESC);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY '140133074'  NULLS FIRST, ('-431719251' COLLATE NOCASE IN ()) DESC;
SELECT ALL * FROM rt1, v0 WHERE ((+ (((((((((((((-1335723826)OR('1573645013')))AND(v0.c0)))OR(rt1.c1)))AND(v0.c2)))AND(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((-1335723826)OR('1573645013')))AND(v0.c0)))OR(rt1.c1)))AND(v0.c2)))AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE ((+ (((((((((((((-1335723826)OR('1573645013')))AND(v0.c0)))OR(rt1.c1)))AND(v0.c2)))AND(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((-1335723826)OR('1573645013')))AND(v0.c0)))OR(rt1.c1)))AND(v0.c2)))AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE ((+ (((((((((((((-1335723826)OR('1573645013')))AND(v0.c0)))OR(rt1.c1)))AND(v0.c2)))AND(rt1.c1)))OR(rt1.c0)))));
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((((('1637360063')AND((('') IS TRUE))))AND(load_extension(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((('1637360063')AND((('') IS TRUE))))AND(load_extension(rt0.c1)))) IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((((('1637360063')AND((('') IS TRUE))))AND(load_extension(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((('1637360063')AND((('') IS TRUE))))AND(load_extension(rt0.c1)))) IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((((('1637360063')AND((('') IS TRUE))))AND(load_extension(rt0.c1))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((x''))<>((((0.4228101636019168) IS FALSE)))) WHERE (LIKELIHOOD(LIKELY('릺wEk婎N]'), 0.6157974186016877)) ORDER BY x'7a13ae148b10' DESC, ((rt0.c2)*(NULL)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(LIKELY('릺wEk婎N]'), 0.6157974186016877)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((x''))<>((((0.4228101636019168) IS FALSE)))) ORDER BY x'7a13ae148b10' DESC, ((rt0.c2)*(NULL)) COLLATE RTRIM);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((x''))<>((((0.4228101636019168) IS FALSE)))) WHERE (LIKELIHOOD(LIKELY('릺wEk婎N]'), 0.6157974186016877)) ORDER BY x'7a13ae148b10' DESC, ((rt0.c2)*(NULL)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(LIKELY('릺wEk婎N]'), 0.6157974186016877)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((x''))<>((((0.4228101636019168) IS FALSE)))) ORDER BY x'7a13ae148b10' DESC, ((rt0.c2)*(NULL)) COLLATE RTRIM);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((x''))<>((((0.4228101636019168) IS FALSE)))) WHERE (LIKELIHOOD(LIKELY('릺wEk婎N]'), 0.6157974186016877)) ORDER BY x'7a13ae148b10' DESC, ((rt0.c2)*(NULL)) COLLATE RTRIM;
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'') NOT BETWEEN ((('r蝁]M0箼s') IS TRUE)) AND (((((rt0.c2)OR(rt0.c1)))OR(v0.c0))))) ORDER BY (((('?w') NOTNULL)) NOT BETWEEN ((v0.c2 IN (rt0.c2, v0.c2))) AND (((((rt0.c3)AND(v0.c2)))AND(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((('r蝁]M0箼s') IS TRUE)) AND (((((rt0.c2)OR(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((('?w') NOTNULL)) NOT BETWEEN ((v0.c2 IN (rt0.c2, v0.c2))) AND (((((rt0.c3)AND(v0.c2)))AND(NULL)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'') NOT BETWEEN ((('r蝁]M0箼s') IS TRUE)) AND (((((rt0.c2)OR(rt0.c1)))OR(v0.c0))))) ORDER BY (((('?w') NOTNULL)) NOT BETWEEN ((v0.c2 IN (rt0.c2, v0.c2))) AND (((((rt0.c3)AND(v0.c2)))AND(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((('r蝁]M0箼s') IS TRUE)) AND (((((rt0.c2)OR(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((('?w') NOTNULL)) NOT BETWEEN ((v0.c2 IN (rt0.c2, v0.c2))) AND (((((rt0.c3)AND(v0.c2)))AND(NULL)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'') NOT BETWEEN ((('r蝁]M0箼s') IS TRUE)) AND (((((rt0.c2)OR(rt0.c1)))OR(v0.c0))))) ORDER BY (((('?w') NOTNULL)) NOT BETWEEN ((v0.c2 IN (rt0.c2, v0.c2))) AND (((((rt0.c3)AND(v0.c2)))AND(NULL)))) ASC  NULLS FIRST;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (LIKELIHOOD(rt0.c3, 0.8123350874901739) COLLATE RTRIM) ORDER BY ((x'2563b132')>=(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt0.c3, 0.8123350874901739) COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((x'2563b132')>=(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c2)))) ASC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (LIKELIHOOD(rt0.c3, 0.8123350874901739) COLLATE RTRIM) ORDER BY ((x'2563b132')>=(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt0.c3, 0.8123350874901739) COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((x'2563b132')>=(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c2)))) ASC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (LIKELIHOOD(rt0.c3, 0.8123350874901739) COLLATE RTRIM) ORDER BY ((x'2563b132')>=(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((v0.c1) NOT NULL))LIKE(-2055957170)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT NULL))LIKE(-2055957170))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((v0.c1) NOT NULL))LIKE(-2055957170)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT NULL))LIKE(-2055957170))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((v0.c1) NOT NULL))LIKE(-2055957170)));
SELECT ALL * FROM rt1, t0, rt0, v0 WHERE (((((v0.c1)!=(v0.c2))) NOT BETWEEN (((rt1.c1)+(v0.c2))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c0)) THEN '' WHEN CAST(t0.c0 AS BLOB) THEN (rt0.c1 IN (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c0 THEN '_J' ELSE v0.c1 END THEN ((v0.c2) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)!=(v0.c2))) NOT BETWEEN (((rt1.c1)+(v0.c2))) AND (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, rt0, v0 ORDER BY CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c0)) THEN '' WHEN CAST(t0.c0 AS BLOB) THEN (rt0.c1 IN (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c0 THEN '_J' ELSE v0.c1 END THEN ((v0.c2) IS TRUE) END);
SELECT ALL * FROM rt1, t0, rt0, v0 WHERE (((((v0.c1)!=(v0.c2))) NOT BETWEEN (((rt1.c1)+(v0.c2))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c0)) THEN '' WHEN CAST(t0.c0 AS BLOB) THEN (rt0.c1 IN (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c0 THEN '_J' ELSE v0.c1 END THEN ((v0.c2) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)!=(v0.c2))) NOT BETWEEN (((rt1.c1)+(v0.c2))) AND (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, rt0, v0 ORDER BY CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c0)) THEN '' WHEN CAST(t0.c0 AS BLOB) THEN (rt0.c1 IN (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c0 THEN '_J' ELSE v0.c1 END THEN ((v0.c2) IS TRUE) END);
SELECT ALL * FROM rt1, t0, rt0, v0 WHERE (((((v0.c1)!=(v0.c2))) NOT BETWEEN (((rt1.c1)+(v0.c2))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c0)) THEN '' WHEN CAST(t0.c0 AS BLOB) THEN (rt0.c1 IN (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c0 THEN '_J' ELSE v0.c1 END THEN ((v0.c2) IS TRUE) END;
SELECT * FROM t0, rt0, rt1 WHERE ((((t0.c0 COLLATE RTRIM, (~ (rt0.c2)), rt0.c2))!=(((rt1.c1 IN ()), rt0.c1, (- (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM, (~ (rt0.c2)), rt0.c2))<>(((rt1.c1 IN ()), rt0.c1, (- (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((((t0.c0 COLLATE RTRIM, (~ (rt0.c2)), rt0.c2))!=(((rt1.c1 IN ()), rt0.c1, (- (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM, (~ (rt0.c2)), rt0.c2))<>(((rt1.c1 IN ()), rt0.c1, (- (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((((t0.c0 COLLATE RTRIM, (~ (rt0.c2)), rt0.c2))!=(((rt1.c1 IN ()), rt0.c1, (- (rt0.c0))))));
SELECT * FROM rt0, t0 WHERE (1119656487) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1119656487) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (1119656487) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1119656487) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (1119656487) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((((((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((((((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((((((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c0)))));
SELECT * FROM rt0, rt1, v0 WHERE (0xffffffff99092342);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff99092342) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (0xffffffff99092342);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff99092342) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (0xffffffff99092342);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (0.8028483303923486) ORDER BY CASE 1.637360063E9 COLLATE RTRIM  WHEN '-859571698' THEN (((v0.c2, rt0.c0, v0.c0)) BETWEEN ((rt1.c3, v0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt0.c1))) WHEN CAST(rt0.c1 AS TEXT) THEN v0.c0 WHEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c3 ELSE rt1.c3 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8028483303923486) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY CASE 1.637360063E9 COLLATE RTRIM  WHEN '-859571698' THEN (((v0.c2, rt0.c0, v0.c0)) BETWEEN ((rt1.c3, v0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt0.c1))) WHEN CAST(rt0.c1 AS TEXT) THEN v0.c0 WHEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c3 ELSE rt1.c3 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (0.8028483303923486) ORDER BY CASE 1.637360063E9 COLLATE RTRIM  WHEN '-859571698' THEN (((v0.c2, rt0.c0, v0.c0)) BETWEEN ((rt1.c3, v0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt0.c1))) WHEN CAST(rt0.c1 AS TEXT) THEN v0.c0 WHEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c3 ELSE rt1.c3 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8028483303923486) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY CASE 1.637360063E9 COLLATE RTRIM  WHEN '-859571698' THEN (((v0.c2, rt0.c0, v0.c0)) BETWEEN ((rt1.c3, v0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt0.c1))) WHEN CAST(rt0.c1 AS TEXT) THEN v0.c0 WHEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c3 ELSE rt1.c3 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (0.8028483303923486) ORDER BY CASE 1.637360063E9 COLLATE RTRIM  WHEN '-859571698' THEN (((v0.c2, rt0.c0, v0.c0)) BETWEEN ((rt1.c3, v0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt0.c1))) WHEN CAST(rt0.c1 AS TEXT) THEN v0.c0 WHEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c3 ELSE rt1.c3 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY) ORDER BY ((TRIM(rt1.c3))>>('-341533454')), ((((CAST(rt1.c0 AS BLOB))OR((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((-245655713))))))AND(((rt1.c1)>(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((TRIM(rt1.c3))>>('-341533454')), ((((CAST(rt1.c0 AS BLOB))OR((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((-245655713))))))AND(((rt1.c1)>(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY) ORDER BY ((TRIM(rt1.c3))>>('-341533454')), ((((CAST(rt1.c0 AS BLOB))OR((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((-245655713))))))AND(((rt1.c1)>(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((TRIM(rt1.c3))>>('-341533454')), ((((CAST(rt1.c0 AS BLOB))OR((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((-245655713))))))AND(((rt1.c1)>(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY) ORDER BY ((TRIM(rt1.c3))>>('-341533454')), ((((CAST(rt1.c0 AS BLOB))OR((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((-245655713))))))AND(((rt1.c1)>(rt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, rt1 RIGHT OUTER JOIN v0 ON ((0.23996645784537596)+(((x'') IS FALSE))) WHERE ((~ (NULL))) ORDER BY (((((t0.c0)OR(v0.c2)))OR(rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM t0, rt0, rt1 RIGHT OUTER JOIN v0 ON ((0.23996645784537596)+(((x'') IS FALSE))) ORDER BY (((((t0.c0)OR(v0.c2)))OR(rt0.c3)) IN ()));
SELECT COUNT(*) FROM t0, rt0, rt1 RIGHT OUTER JOIN v0 ON ((0.23996645784537596)+(((x'') IS FALSE))) WHERE ((~ (NULL))) ORDER BY (((((t0.c0)OR(v0.c2)))OR(rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM t0, rt0, rt1 RIGHT OUTER JOIN v0 ON ((0.23996645784537596)+(((x'') IS FALSE))) ORDER BY (((((t0.c0)OR(v0.c2)))OR(rt0.c3)) IN ()));
SELECT COUNT(*) FROM t0, rt0, rt1 RIGHT OUTER JOIN v0 ON ((0.23996645784537596)+(((x'') IS FALSE))) WHERE ((~ (NULL))) ORDER BY (((((t0.c0)OR(v0.c2)))OR(rt0.c3)) IN ());
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (((((((((rt1.c2)OR('36964363')))AND(((rt0.c1) NOTNULL))))OR(((rt0.c3) ISNULL))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)OR('36964363')))AND(((rt0.c1) NOTNULL))))OR(((rt0.c3) ISNULL))))OR(rt0.c0))) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (((((((((rt1.c2)OR('36964363')))AND(((rt0.c1) NOTNULL))))OR(((rt0.c3) ISNULL))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)OR('36964363')))AND(((rt0.c1) NOTNULL))))OR(((rt0.c3) ISNULL))))OR(rt0.c0))) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (((((((((rt1.c2)OR('36964363')))AND(((rt0.c1) NOTNULL))))OR(((rt0.c3) ISNULL))))OR(rt0.c0)));
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0)))=(((t0.c0)*(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))==(((t0.c0)*(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0)))=(((t0.c0)*(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))==(((t0.c0)*(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0)))=(((t0.c0)*(t0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((CAST(v0.c1 AS TEXT), CASE WHEN rt1.c2 THEN rt0.c2 END, CAST(v0.c2 AS TEXT)))>(((((rt1.c2, rt1.c0, rt0.c1)) BETWEEN ((rt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, v0.c0))), (((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c3)==(rt1.c1))))) FULL OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON ((((v0.c0)AND(rt0.c0))) NOT BETWEEN ((- (v0.c0))) AND (CASE rt1.c3  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END)) WHERE (CASE WHEN LOWER('810474956') THEN ((v0.c1) NOT BETWEEN (NULL) AND (rt0.c3)) ELSE x'02be' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER('810474956') THEN ((v0.c1) NOT BETWEEN (NULL) AND (rt0.c3)) ELSE x'02be' COLLATE RTRIM END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((CAST(v0.c1 AS TEXT), CASE WHEN rt1.c2 THEN rt0.c2 END, CAST(v0.c2 AS TEXT)))>(((((rt1.c2, rt1.c0, rt0.c1)) BETWEEN ((rt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, v0.c0))), (((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c3)=(rt1.c1))))) FULL OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON ((((v0.c0)AND(rt0.c0))) NOT BETWEEN ((- (v0.c0))) AND (CASE rt1.c3  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((CAST(v0.c1 AS TEXT), CASE WHEN rt1.c2 THEN rt0.c2 END, CAST(v0.c2 AS TEXT)))>(((((rt1.c2, rt1.c0, rt0.c1)) BETWEEN ((rt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, v0.c0))), (((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c3)==(rt1.c1))))) FULL OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON ((((v0.c0)AND(rt0.c0))) NOT BETWEEN ((- (v0.c0))) AND (CASE rt1.c3  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END)) WHERE (CASE WHEN LOWER('810474956') THEN ((v0.c1) NOT BETWEEN (NULL) AND (rt0.c3)) ELSE x'02be' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER('810474956') THEN ((v0.c1) NOT BETWEEN (NULL) AND (rt0.c3)) ELSE x'02be' COLLATE RTRIM END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((CAST(v0.c1 AS TEXT), CASE WHEN rt1.c2 THEN rt0.c2 END, CAST(v0.c2 AS TEXT)))>(((((rt1.c2, rt1.c0, rt0.c1)) BETWEEN ((rt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, v0.c0))), (((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c3)=(rt1.c1))))) FULL OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt1 ON ((((v0.c0)AND(rt0.c0))) NOT BETWEEN ((- (v0.c0))) AND (CASE rt1.c3  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM t0 WHERE (((('0.21986561127614312') IS FALSE) IN (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((('0.21986561127614312') IS FALSE) IN (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((('0.21986561127614312') IS FALSE) IN (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((('0.21986561127614312') IS FALSE) IN (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((('0.21986561127614312') IS FALSE) IN (((t0.c0) IS FALSE))));
SELECT * FROM v0 WHERE (((CAST(v0.c2 AS NUMERIC)) NOTNULL)) ORDER BY (+ (((v0.c1) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c1) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST);
SELECT * FROM v0 WHERE (((CAST(v0.c2 AS NUMERIC)) NOTNULL)) ORDER BY (+ (((v0.c1) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c1) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST);
SELECT * FROM v0 WHERE (((CAST(v0.c2 AS NUMERIC)) NOTNULL)) ORDER BY (+ (((v0.c1) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN '' END CROSS JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c3 THEN v0.c2 END) AND (rt0.c2)) WHERE ((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN '' END CROSS JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c3 THEN v0.c2 END) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN '' END CROSS JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c3 THEN v0.c2 END) AND (rt0.c2)) WHERE ((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN '' END CROSS JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c3 THEN v0.c2 END) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN '' END CROSS JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c3 THEN v0.c2 END) AND (rt0.c2)) WHERE ((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (((CASE WHEN x'4755' THEN rt1.c0 END)LIKE((rt1.c0 IN (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'4755' THEN rt1.c0 END)LIKE((rt1.c0 IN (v0.c1))))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (((CASE WHEN x'4755' THEN rt1.c0 END)LIKE((rt1.c0 IN (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'4755' THEN rt1.c0 END)LIKE((rt1.c0 IN (v0.c1))))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (((CASE WHEN x'4755' THEN rt1.c0 END)LIKE((rt1.c0 IN (v0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((rt0.c2 IN (NULL))) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((rt0.c2 IN (NULL))) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((rt0.c2 IN (NULL))) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((rt0.c2 IN (NULL))) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((rt0.c2 IN (NULL))) AND (CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('87597025')))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0))) ORDER BY ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('87597025')))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('87597025')))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0))) ORDER BY ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('87597025')))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('87597025')))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0))) ORDER BY ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS LAST;
SELECT * FROM rt0, v0, rt1, t0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR(((rt0.c0) BETWEEN ('NfG4TuPyU') AND (v0.c2)))))AND(t0.c0))) ORDER BY (((0.6284167300218202 IN ())) BETWEEN (0.17804924596612648) AND (CASE rt1.c3  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN 0.39456025982965304 WHEN rt1.c0 THEN v0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR(((rt0.c0) BETWEEN ('NfG4TuPyU') AND (v0.c2)))))AND(t0.c0))) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY (((0.6284167300218202 IN ())) BETWEEN (0.17804924596612648) AND (CASE rt1.c3  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN 0.39456025982965304 WHEN rt1.c0 THEN v0.c2 END)));
SELECT * FROM rt0, v0, rt1, t0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR(((rt0.c0) BETWEEN ('NfG4TuPyU') AND (v0.c2)))))AND(t0.c0))) ORDER BY (((0.6284167300218202 IN ())) BETWEEN (0.17804924596612648) AND (CASE rt1.c3  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN 0.39456025982965304 WHEN rt1.c0 THEN v0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR(((rt0.c0) BETWEEN ('NfG4TuPyU') AND (v0.c2)))))AND(t0.c0))) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY (((0.6284167300218202 IN ())) BETWEEN (0.17804924596612648) AND (CASE rt1.c3  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN 0.39456025982965304 WHEN rt1.c0 THEN v0.c2 END)));
SELECT * FROM rt0, v0, rt1, t0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR(((rt0.c0) BETWEEN ('NfG4TuPyU') AND (v0.c2)))))AND(t0.c0))) ORDER BY (((0.6284167300218202 IN ())) BETWEEN (0.17804924596612648) AND (CASE rt1.c3  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN 0.39456025982965304 WHEN rt1.c0 THEN v0.c2 END));
SELECT ALL * FROM rt0, t0 WHERE ((NOT (NULL))) ORDER BY (('?\n?') BETWEEN (LOWER(rt0.c1)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt0, t0 ORDER BY (('?\n?') BETWEEN (LOWER(rt0.c1)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (NULL))) ORDER BY (('?\n?') BETWEEN (LOWER(rt0.c1)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt0, t0 ORDER BY (('?\n?') BETWEEN (LOWER(rt0.c1)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (NULL))) ORDER BY (('?\n?') BETWEEN (LOWER(rt0.c1)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((((rt0.c1 IN ()))OR((- (v0.c1)))))OR((- (rt0.c0))))) ORDER BY (~ ((v0.c1 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))OR((- (v0.c1)))))OR((- (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY (~ ((v0.c1 IN (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((((rt0.c1 IN ()))OR((- (v0.c1)))))OR((- (rt0.c0))))) ORDER BY (~ ((v0.c1 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))OR((- (v0.c1)))))OR((- (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY (~ ((v0.c1 IN (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((((rt0.c1 IN ()))OR((- (v0.c1)))))OR((- (rt0.c0))))) ORDER BY (~ ((v0.c1 IN (t0.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c3 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c3 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c3 AS TEXT));
SELECT * FROM rt0, t0, v0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((v0.c2)LIKE(rt0.c3)))>>(((((((((((((x'')AND(rt0.c1)))OR(v0.c2)))OR(t0.c0)))AND('-414127453')))OR(rt0.c3)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((((v0.c2)LIKE(rt0.c3)))>>(((((((((((((x'')AND(rt0.c1)))OR(v0.c2)))OR(t0.c0)))AND('-414127453')))OR(rt0.c3)))OR(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, t0, v0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((v0.c2)LIKE(rt0.c3)))>>(((((((((((((x'')AND(rt0.c1)))OR(v0.c2)))OR(t0.c0)))AND('-414127453')))OR(rt0.c3)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((((v0.c2)LIKE(rt0.c3)))>>(((((((((((((x'')AND(rt0.c1)))OR(v0.c2)))OR(t0.c0)))AND('-414127453')))OR(rt0.c3)))OR(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, t0, v0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((v0.c2)LIKE(rt0.c3)))>>(((((((((((((x'')AND(rt0.c1)))OR(v0.c2)))OR(t0.c0)))AND('-414127453')))OR(rt0.c3)))OR(rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0 NOT INDEXED, v0 WHERE ((- ((v0.c2 IN ())))) ORDER BY ((((CASE WHEN 0.9628755009632145 THEN t0.c0 END)AND(((v0.c2)==(v0.c1)))))AND(NULLIF(DISTINCT t0.c0, v0.c0))) ASC  NULLS LAST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((v0.c2 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((CASE WHEN 0.9628755009632145 THEN t0.c0 END)AND(((v0.c2)==(v0.c1)))))AND(NULLIF(DISTINCT t0.c0, v0.c0))) ASC  NULLS LAST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED, v0 WHERE ((- ((v0.c2 IN ())))) ORDER BY ((((CASE WHEN 0.9628755009632145 THEN t0.c0 END)AND(((v0.c2)==(v0.c1)))))AND(NULLIF(DISTINCT t0.c0, v0.c0))) ASC  NULLS LAST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((v0.c2 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((CASE WHEN 0.9628755009632145 THEN t0.c0 END)AND(((v0.c2)==(v0.c1)))))AND(NULLIF(DISTINCT t0.c0, v0.c0))) ASC  NULLS LAST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED, v0 WHERE ((- ((v0.c2 IN ())))) ORDER BY ((((CASE WHEN 0.9628755009632145 THEN t0.c0 END)AND(((v0.c2)==(v0.c1)))))AND(NULLIF(DISTINCT t0.c0, v0.c0))) ASC  NULLS LAST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE ((((NOT (rt1.c0))) BETWEEN (0.5227503323706458) AND (((rt1.c0) NOT NULL)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c0))) BETWEEN (0.5227503323706458) AND (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt1, rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE ((((NOT (rt1.c0))) BETWEEN (0.5227503323706458) AND (((rt1.c0) NOT NULL)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c0))) BETWEEN (0.5227503323706458) AND (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt1, rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE ((((NOT (rt1.c0))) BETWEEN (0.5227503323706458) AND (((rt1.c0) NOT NULL)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((-1 IN (((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c0)), LIKELY(v0.c1)))) ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN 0.7947577738093081 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((((((((-8.59571698E8)OR(v0.c0)))OR(v0.c2)))OR(0.3386015646525061)))OR(v0.c0))) AND (((v0.c2)>(v0.c1)))) ASC, (((v0.c1 IN (v0.c1, v0.c2)))*(((v0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((-1 IN (((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c0)), LIKELY(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN 0.7947577738093081 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((((((((-8.59571698E8)OR(v0.c0)))OR(v0.c2)))OR(0.3386015646525061)))OR(v0.c0))) AND (((v0.c2)>(v0.c1)))) ASC, (((v0.c1 IN (v0.c1, v0.c2)))*(((v0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((-1 IN (((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c0)), LIKELY(v0.c1)))) ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN 0.7947577738093081 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((((((((-8.59571698E8)OR(v0.c0)))OR(v0.c2)))OR(0.3386015646525061)))OR(v0.c0))) AND (((v0.c2)>(v0.c1)))) ASC, (((v0.c1 IN (v0.c1, v0.c2)))*(((v0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((-1 IN (((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c0)), LIKELY(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN 0.7947577738093081 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((((((((-8.59571698E8)OR(v0.c0)))OR(v0.c2)))OR(0.3386015646525061)))OR(v0.c0))) AND (((v0.c2)>(v0.c1)))) ASC, (((v0.c1 IN (v0.c1, v0.c2)))*(((v0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((-1 IN (((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c0)), LIKELY(v0.c1)))) ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN 0.7947577738093081 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((((((((-8.59571698E8)OR(v0.c0)))OR(v0.c2)))OR(0.3386015646525061)))OR(v0.c0))) AND (((v0.c2)>(v0.c1)))) ASC, (((v0.c1 IN (v0.c1, v0.c2)))*(((v0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM t0, rt1, rt0, v0 WHERE (((COALESCE(DISTINCT rt0.c0, rt0.c2))!=((rt1.c3 IN ())))) ORDER BY ((((NULL) NOT BETWEEN (rt0.c2) AND (v0.c2))) NOTNULL) DESC, '1652192633' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt0.c0, rt0.c2))!=((rt1.c3 IN ())))) IS TRUE)  as count FROM t0, rt1, rt0, v0 ORDER BY ((((NULL) NOT BETWEEN (rt0.c2) AND (v0.c2))) NOTNULL) DESC, '1652192633' DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0, v0 WHERE (((COALESCE(DISTINCT rt0.c0, rt0.c2))!=((rt1.c3 IN ())))) ORDER BY ((((NULL) NOT BETWEEN (rt0.c2) AND (v0.c2))) NOTNULL) DESC, '1652192633' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt0.c0, rt0.c2))!=((rt1.c3 IN ())))) IS TRUE)  as count FROM t0, rt1, rt0, v0 ORDER BY ((((NULL) NOT BETWEEN (rt0.c2) AND (v0.c2))) NOTNULL) DESC, '1652192633' DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0, v0 WHERE (((COALESCE(DISTINCT rt0.c0, rt0.c2))!=((rt1.c3 IN ())))) ORDER BY ((((NULL) NOT BETWEEN (rt0.c2) AND (v0.c2))) NOTNULL) DESC, '1652192633' DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE (~ (rt0.c0))  WHEN x'de13' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SUBSTR(v0.c2, rt0.c1) END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN x'de13' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SUBSTR(v0.c2, rt0.c1) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE (~ (rt0.c0))  WHEN x'de13' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SUBSTR(v0.c2, rt0.c1) END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN x'de13' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SUBSTR(v0.c2, rt0.c1) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE (~ (rt0.c0))  WHEN x'de13' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SUBSTR(v0.c2, rt0.c1) END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM rt0, v0, rt1, t0 WHERE (INSTR(((((rt0.c2)OR(v0.c2)))OR(v0.c0)), (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((rt0.c2)OR(v0.c2)))OR(v0.c0)), (+ (rt0.c1)))) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT * FROM rt0, v0, rt1, t0 WHERE (INSTR(((((rt0.c2)OR(v0.c2)))OR(v0.c0)), (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((rt0.c2)OR(v0.c2)))OR(v0.c0)), (+ (rt0.c1)))) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT * FROM rt0, v0, rt1, t0 WHERE (INSTR(((((rt0.c2)OR(v0.c2)))OR(v0.c0)), (+ (rt0.c1))));
SELECT ALL * FROM t0, v0 WHERE (x'5f5738bd');
SELECT SUM(count) FROM (SELECT ALL ((x'5f5738bd') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (x'5f5738bd');
SELECT SUM(count) FROM (SELECT ALL ((x'5f5738bd') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (x'5f5738bd');
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (((GLOB(v0.c2, t0.c0)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(v0.c2, t0.c0)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (((GLOB(v0.c2, t0.c0)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(v0.c2, t0.c0)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (((GLOB(v0.c2, t0.c0)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((((((NULL)*(v0.c0))))!=((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((NULL)*(v0.c0))))<>((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((((((NULL)*(v0.c0))))!=((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((NULL)*(v0.c0))))<>((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((((((NULL)*(v0.c0))))!=((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))));
SELECT COUNT(*) FROM rt0, v0 WHERE ('O뫋0>W]g');
SELECT SUM(count) FROM (SELECT (('O뫋0>W]g') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('O뫋0>W]g');
SELECT SUM(count) FROM (SELECT (('O뫋0>W]g') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('O뫋0>W]g');
SELECT * FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))), ((((((((((((((rt1.c1)<(rt1.c0)))AND(NULL)))OR(CASE rt1.c0  WHEN rt1.c0 THEN NULL END)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)))))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1)<>(rt1.c3)))))OR(((rt1.c3)+(rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))), ((((((((((((((rt1.c1)<(rt1.c0)))AND(NULL)))OR(CASE rt1.c0  WHEN rt1.c0 THEN NULL END)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)))))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1)!=(rt1.c3)))))OR(((rt1.c3)+(rt1.c3)))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))), ((((((((((((((rt1.c1)<(rt1.c0)))AND(NULL)))OR(CASE rt1.c0  WHEN rt1.c0 THEN NULL END)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)))))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1)<>(rt1.c3)))))OR(((rt1.c3)+(rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))), ((((((((((((((rt1.c1)<(rt1.c0)))AND(NULL)))OR(CASE rt1.c0  WHEN rt1.c0 THEN NULL END)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)))))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1)!=(rt1.c3)))))OR(((rt1.c3)+(rt1.c3)))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))), ((((((((((((((rt1.c1)<(rt1.c0)))AND(NULL)))OR(CASE rt1.c0  WHEN rt1.c0 THEN NULL END)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)))))AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((rt1.c1)<>(rt1.c3)))))OR(((rt1.c3)+(rt1.c3)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, v0 CROSS JOIN rt1 ON CASE WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE CAST('v㾢' AS REAL) END WHERE (((((rt1.c2) IS FALSE))IS NOT((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS FALSE))IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, v0 CROSS JOIN rt1 ON CASE WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE CAST('v㾢' AS REAL) END);
SELECT ALL COUNT(*) FROM rt0, t0, v0 CROSS JOIN rt1 ON CASE WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE CAST('v㾢' AS REAL) END WHERE (((((rt1.c2) IS FALSE))IS NOT((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS FALSE))IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, v0 CROSS JOIN rt1 ON CASE WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE CAST('v㾢' AS REAL) END);
SELECT ALL COUNT(*) FROM rt0, t0, v0 CROSS JOIN rt1 ON CASE WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) ELSE CAST('v㾢' AS REAL) END WHERE (((((rt1.c2) IS FALSE))IS NOT((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, t0 WHERE (TIME((((rt1.c1, '790789785', rt1.c1))=((rt1.c3, t0.c0, rt1.c3))), x'f7ef58f8', rt1.c0 COLLATE RTRIM, rt1.c0 COLLATE BINARY, CASE WHEN rt1.c1 THEN rt1.c1 END, ((t0.c0) NOT BETWEEN (t0.c0) AND ('-233277100')), CAST(rt1.c2 AS REAL))) ORDER BY NULL, CASE CAST(t0.c0 AS REAL)  WHEN ((rt1.c3) NOT NULL) THEN CASE 0xfffffffffd036bb0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END WHEN UNLIKELY(t0.c0) THEN (+ (rt1.c0)) WHEN ((rt1.c2)IS(t0.c0)) THEN CASE rt1.c0  WHEN x'' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c3 END ELSE CAST(0.027083991285048903 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((TIME((((rt1.c1, '790789785', rt1.c1))==((rt1.c3, t0.c0, rt1.c3))), x'f7ef58f8', rt1.c0 COLLATE RTRIM, rt1.c0 COLLATE BINARY, CASE WHEN rt1.c1 THEN rt1.c1 END, ((t0.c0) NOT BETWEEN (t0.c0) AND ('-233277100')), CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1, t0 ORDER BY NULL, CASE CAST(t0.c0 AS REAL)  WHEN ((rt1.c3) NOT NULL) THEN CASE 0Xfffffffffd036bb0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END WHEN UNLIKELY(t0.c0) THEN (+ (rt1.c0)) WHEN ((rt1.c2)IS(t0.c0)) THEN CASE rt1.c0  WHEN x'' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c3 END ELSE CAST(0.027083991285048903 AS INTEGER) END);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, t0 WHERE (TIME((((rt1.c1, '790789785', rt1.c1))=((rt1.c3, t0.c0, rt1.c3))), x'f7ef58f8', rt1.c0 COLLATE RTRIM, rt1.c0 COLLATE BINARY, CASE WHEN rt1.c1 THEN rt1.c1 END, ((t0.c0) NOT BETWEEN (t0.c0) AND ('-233277100')), CAST(rt1.c2 AS REAL))) ORDER BY NULL, CASE CAST(t0.c0 AS REAL)  WHEN ((rt1.c3) NOT NULL) THEN CASE 0xfffffffffd036bb0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END WHEN UNLIKELY(t0.c0) THEN (+ (rt1.c0)) WHEN ((rt1.c2)IS(t0.c0)) THEN CASE rt1.c0  WHEN x'' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c3 END ELSE CAST(0.027083991285048903 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((TIME((((rt1.c1, '790789785', rt1.c1))==((rt1.c3, t0.c0, rt1.c3))), x'f7ef58f8', rt1.c0 COLLATE RTRIM, rt1.c0 COLLATE BINARY, CASE WHEN rt1.c1 THEN rt1.c1 END, ((t0.c0) NOT BETWEEN (t0.c0) AND ('-233277100')), CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1, t0 ORDER BY NULL, CASE CAST(t0.c0 AS REAL)  WHEN ((rt1.c3) NOT NULL) THEN CASE 0Xfffffffffd036bb0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END WHEN UNLIKELY(t0.c0) THEN (+ (rt1.c0)) WHEN ((rt1.c2)IS(t0.c0)) THEN CASE rt1.c0  WHEN x'' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c3 END ELSE CAST(0.027083991285048903 AS INTEGER) END);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, t0 WHERE (TIME((((rt1.c1, '790789785', rt1.c1))=((rt1.c3, t0.c0, rt1.c3))), x'f7ef58f8', rt1.c0 COLLATE RTRIM, rt1.c0 COLLATE BINARY, CASE WHEN rt1.c1 THEN rt1.c1 END, ((t0.c0) NOT BETWEEN (t0.c0) AND ('-233277100')), CAST(rt1.c2 AS REAL))) ORDER BY NULL, CASE CAST(t0.c0 AS REAL)  WHEN ((rt1.c3) NOT NULL) THEN CASE 0xfffffffffd036bb0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END WHEN UNLIKELY(t0.c0) THEN (+ (rt1.c0)) WHEN ((rt1.c2)IS(t0.c0)) THEN CASE rt1.c0  WHEN x'' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c3 END ELSE CAST(0.027083991285048903 AS INTEGER) END;
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE (((((ABS(rt1.c1))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((rt1.c1 IN (v0.c1))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))|(((rt0.c1)OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((ABS(rt1.c1))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((rt1.c1 IN (v0.c1))))) IS TRUE)  as count FROM v0, rt0, t0, rt1 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))|(((rt0.c1)OR(rt0.c0)))));
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE (((((ABS(rt1.c1))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((rt1.c1 IN (v0.c1))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))|(((rt0.c1)OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((ABS(rt1.c1))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((rt1.c1 IN (v0.c1))))) IS TRUE)  as count FROM v0, rt0, t0, rt1 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))|(((rt0.c1)OR(rt0.c0)))));
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE (((((ABS(rt1.c1))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((rt1.c1 IN (v0.c1))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))|(((rt0.c1)OR(rt0.c0))));
SELECT ALL * FROM v0 WHERE ((((- (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((- (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((- (v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE (CAST(LIKELY(rt1.c3) AS NUMERIC)) ORDER BY CASE WHEN (NOT (rt0.c1)) THEN CASE WHEN v0.c2 THEN NULL ELSE rt1.c3 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt1.c3) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, t0, v0 ORDER BY CASE WHEN (NOT (rt0.c1)) THEN CASE WHEN v0.c2 THEN NULL ELSE rt1.c3 END END ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE (CAST(LIKELY(rt1.c3) AS NUMERIC)) ORDER BY CASE WHEN (NOT (rt0.c1)) THEN CASE WHEN v0.c2 THEN NULL ELSE rt1.c3 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt1.c3) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, t0, v0 ORDER BY CASE WHEN (NOT (rt0.c1)) THEN CASE WHEN v0.c2 THEN NULL ELSE rt1.c3 END END ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE (CAST(LIKELY(rt1.c3) AS NUMERIC)) ORDER BY CASE WHEN (NOT (rt0.c1)) THEN CASE WHEN v0.c2 THEN NULL ELSE rt1.c3 END END ASC;
SELECT COUNT(*) FROM v0 WHERE ((((('')AND(TOTAL_CHANGES())))AND((- (v0.c2))))) ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB)  NULLS FIRST, ((((((NULL)AND(v0.c0)))OR(v0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(TOTAL_CHANGES())))AND((- (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB)  NULLS FIRST, ((((((NULL)AND(v0.c0)))OR(v0.c2))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((('')AND(TOTAL_CHANGES())))AND((- (v0.c2))))) ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB)  NULLS FIRST, ((((((NULL)AND(v0.c0)))OR(v0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(TOTAL_CHANGES())))AND((- (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB)  NULLS FIRST, ((((((NULL)AND(v0.c0)))OR(v0.c2))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((('')AND(TOTAL_CHANGES())))AND((- (v0.c2))))) ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB)  NULLS FIRST, ((((((NULL)AND(v0.c0)))OR(v0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (GLOB(rt0.c0, ((rt1.c0)*(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(rt0.c0, ((rt1.c0)*(rt1.c3)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (GLOB(rt0.c0, ((rt1.c0)*(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(rt0.c0, ((rt1.c0)*(rt1.c3)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (GLOB(rt0.c0, ((rt1.c0)*(rt1.c3))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (- (((rt1.c3) BETWEEN (-431788739) AND (0X3c623898)))) WHERE (((((rt1.c1)-(v0.c1)))/(CASE WHEN v0.c2 THEN v0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN v0.c2 THEN v0.c2 END))) ORDER BY (rt1.c3 IN (v0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)-(v0.c1)))/(CASE WHEN v0.c2 THEN v0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN v0.c2 THEN v0.c2 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (- (((rt1.c3) BETWEEN (-431788739) AND (0X3c623898)))) ORDER BY (rt1.c3 IN (v0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (- (((rt1.c3) BETWEEN (-431788739) AND (0X3c623898)))) WHERE (((((rt1.c1)-(v0.c1)))/(CASE WHEN v0.c2 THEN v0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN v0.c2 THEN v0.c2 END))) ORDER BY (rt1.c3 IN (v0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)-(v0.c1)))/(CASE WHEN v0.c2 THEN v0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN v0.c2 THEN v0.c2 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (- (((rt1.c3) BETWEEN (-431788739) AND (0X3c623898)))) ORDER BY (rt1.c3 IN (v0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (- (((rt1.c3) BETWEEN (-431788739) AND (0X3c623898)))) WHERE (((((rt1.c1)-(v0.c1)))/(CASE WHEN v0.c2 THEN v0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN v0.c2 THEN v0.c2 END))) ORDER BY (rt1.c3 IN (v0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, t0 CROSS JOIN rt0 ON ((((rt1.c3)<>(rt0.c1)))/(rt1.c3)) WHERE (((((((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))!=((((rt0.c1)<=(rt1.c3)))))) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))<>((((rt0.c1)<=(rt1.c3)))))) IS TRUE)  as count FROM v0, rt1, t0 CROSS JOIN rt0 ON ((((rt1.c3)!=(rt0.c1)))/(rt1.c3)) ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, t0 CROSS JOIN rt0 ON ((((rt1.c3)<>(rt0.c1)))/(rt1.c3)) WHERE (((((((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))!=((((rt0.c1)<=(rt1.c3)))))) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))<>((((rt0.c1)<=(rt1.c3)))))) IS TRUE)  as count FROM v0, rt1, t0 CROSS JOIN rt0 ON ((((rt1.c3)!=(rt0.c1)))/(rt1.c3)) ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, t0 CROSS JOIN rt0 ON ((((rt1.c3)<>(rt0.c1)))/(rt1.c3)) WHERE (((((((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))!=((((rt0.c1)<=(rt1.c3)))))) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((x'')IS(x''))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((x'')IS(x'')))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((x'')IS(x''))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((x'')IS(x'')))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)IS(rt0.c2)))) AND ((((x'')IS(x''))))));
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((0.0019346703029952117)||(rt0.c0)) COLLATE RTRIM WHERE (((0Xffffffffbbd36872) NOTNULL)) ORDER BY ((UNLIKELY('B\nMQ#*30n')) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0Xffffffffbbd36872) NOTNULL)) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((0.0019346703029952117)||(rt0.c0)) COLLATE RTRIM ORDER BY ((UNLIKELY('B\nMQ#*30n')) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((0.0019346703029952117)||(rt0.c0)) COLLATE RTRIM WHERE (((0Xffffffffbbd36872) NOTNULL)) ORDER BY ((UNLIKELY('B\nMQ#*30n')) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0Xffffffffbbd36872) NOTNULL)) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((0.0019346703029952117)||(rt0.c0)) COLLATE RTRIM ORDER BY ((UNLIKELY('B\nMQ#*30n')) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((0.0019346703029952117)||(rt0.c0)) COLLATE RTRIM WHERE (((0Xffffffffbbd36872) NOTNULL)) ORDER BY ((UNLIKELY('B\nMQ#*30n')) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%(v0.c2 COLLATE BINARY))) ORDER BY ((((((((((v0.c1)>=(-1790383350)))OR((((v0.c0))=((v0.c2))))))AND(v0.c2)))AND(((v0.c2) ISNULL))))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)>=(-1790383350)))OR((((v0.c0))=((v0.c2))))))AND(v0.c2)))AND(((v0.c2) ISNULL))))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)) DESC);
SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%(v0.c2 COLLATE BINARY))) ORDER BY ((((((((((v0.c1)>=(-1790383350)))OR((((v0.c0))=((v0.c2))))))AND(v0.c2)))AND(((v0.c2) ISNULL))))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)>=(-1790383350)))OR((((v0.c0))=((v0.c2))))))AND(v0.c2)))AND(((v0.c2) ISNULL))))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)) DESC);
SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%(v0.c2 COLLATE BINARY))) ORDER BY ((((((((((v0.c1)>=(-1790383350)))OR((((v0.c0))=((v0.c2))))))AND(v0.c2)))AND(((v0.c2) ISNULL))))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)) DESC;
SELECT * FROM rt0, rt1, t0 WHERE ('') ORDER BY ((rt1.c3 COLLATE BINARY)<<(SQLITE_SOURCE_ID())), TRIM(DISTINCT (rt0.c3 IN (rt0.c2)))  NULLS FIRST, (- (LIKELIHOOD(rt1.c0, 0.4909777830724239))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((rt1.c3 COLLATE BINARY)<<(SQLITE_SOURCE_ID())), TRIM(DISTINCT (rt0.c3 IN (rt0.c2)))  NULLS FIRST, (- (LIKELIHOOD(rt1.c0, 0.4909777830724239))) ASC);
SELECT * FROM rt0, rt1, t0 WHERE ('') ORDER BY ((rt1.c3 COLLATE BINARY)<<(SQLITE_SOURCE_ID())), TRIM(DISTINCT (rt0.c3 IN (rt0.c2)))  NULLS FIRST, (- (LIKELIHOOD(rt1.c0, 0.4909777830724239))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((rt1.c3 COLLATE BINARY)<<(SQLITE_SOURCE_ID())), TRIM(DISTINCT (rt0.c3 IN (rt0.c2)))  NULLS FIRST, (- (LIKELIHOOD(rt1.c0, 0.4909777830724239))) ASC);
SELECT * FROM rt0, rt1, t0 WHERE ('') ORDER BY ((rt1.c3 COLLATE BINARY)<<(SQLITE_SOURCE_ID())), TRIM(DISTINCT (rt0.c3 IN (rt0.c2)))  NULLS FIRST, (- (LIKELIHOOD(rt1.c0, 0.4909777830724239))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((- (x'a7ed')));
SELECT SUM(count) FROM (SELECT ALL (((- (x'a7ed'))) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((- (x'a7ed')));
SELECT SUM(count) FROM (SELECT ALL (((- (x'a7ed'))) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((- (x'a7ed')));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON ((((rt1.c1) IS TRUE))|(((rt1.c0)<<(NULL)))) FULL OUTER JOIN rt1 ON ((v0.c0)==(((t0.c0)>>(rt1.c3)))) WHERE (((((v0.c1)<(t0.c0)))GLOB(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)<(t0.c0)))GLOB(v0.c2))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((rt1.c1) IS TRUE))|(((rt1.c0)<<(NULL)))) FULL OUTER JOIN rt1 ON ((v0.c0)==(((t0.c0)>>(rt1.c3)))));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON ((((rt1.c1) IS TRUE))|(((rt1.c0)<<(NULL)))) FULL OUTER JOIN rt1 ON ((v0.c0)==(((t0.c0)>>(rt1.c3)))) WHERE (((((v0.c1)<(t0.c0)))GLOB(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)<(t0.c0)))GLOB(v0.c2))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((rt1.c1) IS TRUE))|(((rt1.c0)<<(NULL)))) FULL OUTER JOIN rt1 ON ((v0.c0)==(((t0.c0)>>(rt1.c3)))));
SELECT COUNT(*) FROM v0, t0, rt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT COUNT(*) FROM v0, t0, rt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT COUNT(*) FROM v0, t0, rt1, rt0 WHERE (rt0.c1);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((CASE WHEN rt1.c2 THEN rt0.c1 END)AND(((x'') IS TRUE))))AND(((rt0.c1)<(rt1.c0)))))AND(((rt0.c3) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt1.c2 THEN rt0.c1 END)AND(((x'') IS TRUE))))AND(((rt0.c1)<(rt1.c0)))))AND(((rt0.c3) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c3 END))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((CASE WHEN rt1.c2 THEN rt0.c1 END)AND(((x'') IS TRUE))))AND(((rt0.c1)<(rt1.c0)))))AND(((rt0.c3) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt1.c2 THEN rt0.c1 END)AND(((x'') IS TRUE))))AND(((rt0.c1)<(rt1.c0)))))AND(((rt0.c3) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c3 END))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((CASE WHEN rt1.c2 THEN rt0.c1 END)AND(((x'') IS TRUE))))AND(((rt0.c1)<(rt1.c0)))))AND(((rt0.c3) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((SQLITE_VERSION()) NOT NULL)) ORDER BY ((((((v0.c1) IS FALSE))AND(v0.c2)))OR(CASE v0.c0  WHEN v0.c2 THEN rt1.c0 END)), rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOT NULL)) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((v0.c1) IS FALSE))AND(v0.c2)))OR(CASE v0.c0  WHEN v0.c2 THEN rt1.c0 END)), rt1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((SQLITE_VERSION()) NOT NULL)) ORDER BY ((((((v0.c1) IS FALSE))AND(v0.c2)))OR(CASE v0.c0  WHEN v0.c2 THEN rt1.c0 END)), rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOT NULL)) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((v0.c1) IS FALSE))AND(v0.c2)))OR(CASE v0.c0  WHEN v0.c2 THEN rt1.c0 END)), rt1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((SQLITE_VERSION()) NOT NULL)) ORDER BY ((((((v0.c1) IS FALSE))AND(v0.c2)))OR(CASE v0.c0  WHEN v0.c2 THEN rt1.c0 END)), rt1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (TRIM(rt0.c3, rt0.c3)))) ORDER BY HEX(rt0.c0 COLLATE NOCASE) ASC, ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND (((rt0.c3) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c0)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (TRIM(rt0.c3, rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY HEX(rt0.c0 COLLATE NOCASE) ASC, ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND (((rt0.c3) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (TRIM(rt0.c3, rt0.c3)))) ORDER BY HEX(rt0.c0 COLLATE NOCASE) ASC, ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND (((rt0.c3) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c0)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (TRIM(rt0.c3, rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY HEX(rt0.c0 COLLATE NOCASE) ASC, ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND (((rt0.c3) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (TRIM(rt0.c3, rt0.c3)))) ORDER BY HEX(rt0.c0 COLLATE NOCASE) ASC, ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND (((rt0.c3) NOTNULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)-(rt1.c2)) IN (((rt1.c2) IS TRUE), 0.6523712266298712))) ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c1))) AND (((rt1.c1)GLOB(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)-(rt1.c2)) IN (((rt1.c2) IS TRUE), 0.6523712266298712))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c1))) AND (((rt1.c1)GLOB(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)-(rt1.c2)) IN (((rt1.c2) IS TRUE), 0.6523712266298712))) ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c1))) AND (((rt1.c1)GLOB(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)-(rt1.c2)) IN (((rt1.c2) IS TRUE), 0.6523712266298712))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c1))) AND (((rt1.c1)GLOB(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)-(rt1.c2)) IN (((rt1.c2) IS TRUE), 0.6523712266298712))) ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN ((+ (rt1.c1))) AND (((rt1.c1)GLOB(rt1.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (NULL) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(((rt1.c3)AND(rt0.c2)))))OR(COALESCE(x'', rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(((rt1.c3)AND(rt0.c2)))))OR(COALESCE(x'', rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (NULL) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(((rt1.c3)AND(rt0.c2)))))OR(COALESCE(x'', rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(((rt1.c3)AND(rt0.c2)))))OR(COALESCE(x'', rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (NULL) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(((rt1.c3)AND(rt0.c2)))))OR(COALESCE(x'', rt0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((v0.c2, '-1727454398', v0.c1)) BETWEEN (((v0.c0 IN ()), ((((v0.c2)AND(v0.c2)))AND(v0.c1)), ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) AND (((~ (v0.c0)), CASE v0.c1  WHEN v0.c2 THEN NULL END, CAST(v0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, '-1727454398', v0.c1)) BETWEEN (((v0.c0 IN ()), ((((v0.c2)AND(v0.c2)))AND(v0.c1)), ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) AND (((~ (v0.c0)), CASE v0.c1  WHEN v0.c2 THEN NULL END, CAST(v0.c2 AS INTEGER))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL * FROM v0 WHERE ((((v0.c2, '-1727454398', v0.c1)) BETWEEN (((v0.c0 IN ()), ((((v0.c2)AND(v0.c2)))AND(v0.c1)), ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) AND (((~ (v0.c0)), CASE v0.c1  WHEN v0.c2 THEN NULL END, CAST(v0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, '-1727454398', v0.c1)) BETWEEN (((v0.c0 IN ()), ((((v0.c2)AND(v0.c2)))AND(v0.c1)), ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) AND (((~ (v0.c0)), CASE v0.c1  WHEN v0.c2 THEN NULL END, CAST(v0.c2 AS INTEGER))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL * FROM v0 WHERE ((((v0.c2, '-1727454398', v0.c1)) BETWEEN (((v0.c0 IN ()), ((((v0.c2)AND(v0.c2)))AND(v0.c1)), ((((v0.c0)OR(v0.c2)))OR(v0.c2)))) AND (((~ (v0.c0)), CASE v0.c1  WHEN v0.c2 THEN NULL END, CAST(v0.c2 AS INTEGER)))));
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0 WHERE (((CAST(t0.c0 AS TEXT))||(((((rt1.c3)AND(rt1.c1)))AND(''))))) ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND ('w%/j')))IS NOT(rt0.c3))  NULLS LAST, ((rt0.c3) ISNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))||(((((rt1.c3)AND(rt1.c1)))AND(''))))) IS TRUE)  as count FROM rt1, v0, t0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND ('w%/j')))IS NOT(rt0.c3))  NULLS LAST, ((rt0.c3) ISNULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0 WHERE (((CAST(t0.c0 AS TEXT))||(((((rt1.c3)AND(rt1.c1)))AND(''))))) ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND ('w%/j')))IS NOT(rt0.c3))  NULLS LAST, ((rt0.c3) ISNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))||(((((rt1.c3)AND(rt1.c1)))AND(''))))) IS TRUE)  as count FROM rt1, v0, t0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND ('w%/j')))IS NOT(rt0.c3))  NULLS LAST, ((rt0.c3) ISNULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0 WHERE (((CAST(t0.c0 AS TEXT))||(((((rt1.c3)AND(rt1.c1)))AND(''))))) ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND ('w%/j')))IS NOT(rt0.c3))  NULLS LAST, ((rt0.c3) ISNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (~ ((rt1.c2 IN (rt1.c2, rt1.c3)))) FULL OUTER JOIN v0 ON x'2345' CROSS JOIN rt0 ON (- ((((v0.c1))<=((rt1.c2))))) WHERE (((((rt0.c2)||(v0.c2))) BETWEEN ((rt0.c0 IN ())) AND (NULL))) ORDER BY 0X1eefd99f DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(v0.c2))) BETWEEN ((rt0.c0 IN ())) AND (NULL))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (~ ((rt1.c2 IN (rt1.c2, rt1.c3)))) FULL OUTER JOIN v0 ON x'2345' CROSS JOIN rt0 ON (- ((((v0.c1))<=((rt1.c2))))) ORDER BY 0x1eefd99f DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (~ ((rt1.c2 IN (rt1.c2, rt1.c3)))) FULL OUTER JOIN v0 ON x'2345' CROSS JOIN rt0 ON (- ((((v0.c1))<=((rt1.c2))))) WHERE (((((rt0.c2)||(v0.c2))) BETWEEN ((rt0.c0 IN ())) AND (NULL))) ORDER BY 0X1eefd99f DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(v0.c2))) BETWEEN ((rt0.c0 IN ())) AND (NULL))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (~ ((rt1.c2 IN (rt1.c2, rt1.c3)))) FULL OUTER JOIN v0 ON x'2345' CROSS JOIN rt0 ON (- ((((v0.c1))<=((rt1.c2))))) ORDER BY 0x1eefd99f DESC  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)<(rt0.c2)))>=(((0xffffffffb5a25df2) NOTNULL))) FULL OUTER JOIN rt0 ON ((NOT ('1468097586')) IN ()) WHERE (((rt0.c2 COLLATE BINARY)!=(v0.c2))) ORDER BY (+ (((rt0.c0)GLOB('')))), v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)<>(v0.c2))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)<(rt0.c2)))>=(((0xffffffffb5a25df2) NOTNULL))) FULL OUTER JOIN rt0 ON ((NOT ('1468097586')) IN ()) ORDER BY (+ (((rt0.c0)GLOB('')))), v0.c1 ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)<(rt0.c2)))>=(((0xffffffffb5a25df2) NOTNULL))) FULL OUTER JOIN rt0 ON ((NOT ('1468097586')) IN ()) WHERE (((rt0.c2 COLLATE BINARY)!=(v0.c2))) ORDER BY (+ (((rt0.c0)GLOB('')))), v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)<>(v0.c2))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)<(rt0.c2)))>=(((0xffffffffb5a25df2) NOTNULL))) FULL OUTER JOIN rt0 ON ((NOT ('1468097586')) IN ()) ORDER BY (+ (((rt0.c0)GLOB('')))), v0.c1 ASC);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(v0.c0 AS INTEGER)) BETWEEN (rt0.c1) AND ('5(4')) WHERE (x'82eb') ORDER BY (((v0.c2, v0.c0, rt0.c3)) NOT BETWEEN (((+ (rt0.c2)), (+ (rt0.c0)), rt0.c3 COLLATE NOCASE)) AND ((((t0.c0) ISNULL), rt0.c3 COLLATE NOCASE, v0.c1 COLLATE RTRIM))) DESC, CAST(((v0.c0) NOT NULL) AS TEXT), ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c2)))))OR(((rt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'82eb') IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(v0.c0 AS INTEGER)) BETWEEN (rt0.c1) AND ('5(4')) ORDER BY (((v0.c2, v0.c0, rt0.c3)) NOT BETWEEN (((+ (rt0.c2)), (+ (rt0.c0)), rt0.c3 COLLATE NOCASE)) AND ((((t0.c0) ISNULL), rt0.c3 COLLATE NOCASE, v0.c1 COLLATE RTRIM))) DESC, CAST(((v0.c0) NOT NULL) AS TEXT), ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c2)))))OR(((rt0.c1) NOTNULL))) DESC);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(v0.c0 AS INTEGER)) BETWEEN (rt0.c1) AND ('5(4')) WHERE (x'82eb') ORDER BY (((v0.c2, v0.c0, rt0.c3)) NOT BETWEEN (((+ (rt0.c2)), (+ (rt0.c0)), rt0.c3 COLLATE NOCASE)) AND ((((t0.c0) ISNULL), rt0.c3 COLLATE NOCASE, v0.c1 COLLATE RTRIM))) DESC, CAST(((v0.c0) NOT NULL) AS TEXT), ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c2)))))OR(((rt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'82eb') IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(v0.c0 AS INTEGER)) BETWEEN (rt0.c1) AND ('5(4')) ORDER BY (((v0.c2, v0.c0, rt0.c3)) NOT BETWEEN (((+ (rt0.c2)), (+ (rt0.c0)), rt0.c3 COLLATE NOCASE)) AND ((((t0.c0) ISNULL), rt0.c3 COLLATE NOCASE, v0.c1 COLLATE RTRIM))) DESC, CAST(((v0.c0) NOT NULL) AS TEXT), ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c2)))))OR(((rt0.c1) NOTNULL))) DESC);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(v0.c0 AS INTEGER)) BETWEEN (rt0.c1) AND ('5(4')) WHERE (x'82eb') ORDER BY (((v0.c2, v0.c0, rt0.c3)) NOT BETWEEN (((+ (rt0.c2)), (+ (rt0.c0)), rt0.c3 COLLATE NOCASE)) AND ((((t0.c0) ISNULL), rt0.c3 COLLATE NOCASE, v0.c1 COLLATE RTRIM))) DESC, CAST(((v0.c0) NOT NULL) AS TEXT), ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))AND(((v0.c0) NOT BETWEEN (x'') AND (v0.c2)))))OR(((rt0.c1) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON CASE ((rt1.c0) NOTNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((x'')||(rt0.c0)) ELSE ((t0.c0) BETWEEN (rt0.c1) AND (v0.c1)) END FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt0 ON rt1.c2 WHERE (((((v0.c2)AND(v0.c0)))AND(rt1.c0)) COLLATE RTRIM) ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((v0.c0)>(rt0.c1)))) AND ((((rt0.c2)<=(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)AND(v0.c0)))AND(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CASE ((rt1.c0) NOTNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((x'')||(rt0.c0)) ELSE ((t0.c0) BETWEEN (rt0.c1) AND (v0.c1)) END FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt0 ON rt1.c2 ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((v0.c0)>(rt0.c1)))) AND ((((rt0.c2)<=(rt1.c3))))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON CASE ((rt1.c0) NOTNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((x'')||(rt0.c0)) ELSE ((t0.c0) BETWEEN (rt0.c1) AND (v0.c1)) END FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt0 ON rt1.c2 WHERE (((((v0.c2)AND(v0.c0)))AND(rt1.c0)) COLLATE RTRIM) ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((v0.c0)>(rt0.c1)))) AND ((((rt0.c2)<=(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)AND(v0.c0)))AND(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CASE ((rt1.c0) NOTNULL)  WHEN ((rt1.c0) IS FALSE) THEN ((x'')||(rt0.c0)) ELSE ((t0.c0) BETWEEN (rt0.c1) AND (v0.c1)) END FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt0 ON rt1.c2 ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((v0.c0)>(rt0.c1)))) AND ((((rt0.c2)<=(rt1.c3))))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c3)/(v0.c0)))OR(rt0.c2 COLLATE RTRIM)))OR(((v0.c1) ISNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)/(v0.c0)))OR(rt0.c2 COLLATE RTRIM)))OR(((v0.c1) ISNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))AND(v0.c2))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c3)/(v0.c0)))OR(rt0.c2 COLLATE RTRIM)))OR(((v0.c1) ISNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)/(v0.c0)))OR(rt0.c2 COLLATE RTRIM)))OR(((v0.c1) ISNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))AND(v0.c2))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c3)/(v0.c0)))OR(rt0.c2 COLLATE RTRIM)))OR(((v0.c1) ISNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))AND(v0.c2)));
SELECT ALL * FROM rt0, rt1 WHERE (0.32566343509667106);
SELECT SUM(count) FROM (SELECT ((0.32566343509667106) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (0.32566343509667106);
SELECT SUM(count) FROM (SELECT ((0.32566343509667106) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (0.32566343509667106);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((rt0.c2)<=(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<=(rt1.c2)) IN ())) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((rt0.c2)<=(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<=(rt1.c2)) IN ())) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((rt0.c2)<=(rt1.c2)) IN ()));
SELECT ALL * FROM rt1 WHERE (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)>=(rt0.c1))))) ORDER BY '|RWq!#>', ((x'0edb9aef') ISNULL)  NULLS LAST, ((+ (rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY '|RWq!#>', ((x'0edb9aef') ISNULL)  NULLS LAST, ((+ (rt0.c3)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)>=(rt0.c1))))) ORDER BY '|RWq!#>', ((x'0edb9aef') ISNULL)  NULLS LAST, ((+ (rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY '|RWq!#>', ((x'0edb9aef') ISNULL)  NULLS LAST, ((+ (rt0.c3)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c3)>=(rt0.c1))))) ORDER BY '|RWq!#>', ((x'0edb9aef') ISNULL)  NULLS LAST, ((+ (rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((((~ (rt0.c1))) NOTNULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((((~ (rt0.c1))) NOTNULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((((~ (rt0.c1))) NOTNULL)) ORDER BY NULL ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL))=(rt0.c3))) ORDER BY (((((rt0.c1 IN ()))OR(0.8028483303923486)))OR(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))==(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1 IN ()))OR(0.8028483303923486)))OR(CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL))=(rt0.c3))) ORDER BY (((((rt0.c1 IN ()))OR(0.8028483303923486)))OR(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))==(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1 IN ()))OR(0.8028483303923486)))OR(CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL))=(rt0.c3))) ORDER BY (((((rt0.c1 IN ()))OR(0.8028483303923486)))OR(CAST(rt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0)<=(rt0.c0))  WHEN (0.5082088824835356 IN (rt0.c0)) THEN ((((rt0.c0)OR(v0.c1)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<=(rt0.c0))  WHEN (0.5082088824835356 IN (rt0.c0)) THEN ((((rt0.c0)OR(v0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0)<=(rt0.c0))  WHEN (0.5082088824835356 IN (rt0.c0)) THEN ((((rt0.c0)OR(v0.c1)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<=(rt0.c0))  WHEN (0.5082088824835356 IN (rt0.c0)) THEN ((((rt0.c0)OR(v0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0)<=(rt0.c0))  WHEN (0.5082088824835356 IN (rt0.c0)) THEN ((((rt0.c0)OR(v0.c1)))OR(rt0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2 IN (v0.c0, v0.c0, v0.c1)))>>((0.2780535474854251 IN ())))) ORDER BY ((((((v0.c2)!=(x'ff6b')))AND((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c0, v0.c2, v0.c2))))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (v0.c0, v0.c0, v0.c1)))>>((0.2780535474854251 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2)!=(x'ff6b')))AND((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c0, v0.c2, v0.c2))))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2 IN (v0.c0, v0.c0, v0.c1)))>>((0.2780535474854251 IN ())))) ORDER BY ((((((v0.c2)!=(x'ff6b')))AND((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c0, v0.c2, v0.c2))))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (v0.c0, v0.c0, v0.c1)))>>((0.2780535474854251 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2)!=(x'ff6b')))AND((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c0, v0.c2, v0.c2))))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2 IN (v0.c0, v0.c0, v0.c1)))>>((0.2780535474854251 IN ())))) ORDER BY ((((((v0.c2)!=(x'ff6b')))AND((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c0, v0.c2, v0.c2))))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC;
SELECT ALL * FROM rt0, t0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))||(CAST(t0.c0 AS REAL))), CAST(UPPER(rt0.c2) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))||(CAST(t0.c0 AS REAL))), CAST(UPPER(rt0.c2) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))||(CAST(t0.c0 AS REAL))), CAST(UPPER(rt0.c2) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))||(CAST(t0.c0 AS REAL))), CAST(UPPER(rt0.c2) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))||(CAST(t0.c0 AS REAL))), CAST(UPPER(rt0.c2) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ABS(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE RTRIM THEN ABS(rt0.c1) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ABS(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE RTRIM THEN ABS(rt0.c1) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ABS(rt0.c1) END);
SELECT * FROM v0 CROSS JOIN rt0 ON ((NULL COLLATE RTRIM) ISNULL) WHERE (DATETIME(((((rt0.c1)OR(rt0.c2)))OR(NULL)), CASE rt0.c0  WHEN v0.c1 THEN NULL ELSE NULL END, ((rt0.c1)>=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((DATETIME(((((rt0.c1)OR(rt0.c2)))OR(NULL)), CASE rt0.c0  WHEN v0.c1 THEN NULL ELSE NULL END, ((rt0.c1)>=(rt0.c1)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((NULL COLLATE RTRIM) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON ((NULL COLLATE RTRIM) ISNULL) WHERE (DATETIME(((((rt0.c1)OR(rt0.c2)))OR(NULL)), CASE rt0.c0  WHEN v0.c1 THEN NULL ELSE NULL END, ((rt0.c1)>=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((DATETIME(((((rt0.c1)OR(rt0.c2)))OR(NULL)), CASE rt0.c0  WHEN v0.c1 THEN NULL ELSE NULL END, ((rt0.c1)>=(rt0.c1)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((NULL COLLATE RTRIM) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON ((NULL COLLATE RTRIM) ISNULL) WHERE (DATETIME(((((rt0.c1)OR(rt0.c2)))OR(NULL)), CASE rt0.c0  WHEN v0.c1 THEN NULL ELSE NULL END, ((rt0.c1)>=(rt0.c1))));
SELECT * FROM v0, rt0, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY ((('-1193097366' COLLATE RTRIM))<>((x''))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 WHEN v0.c1 THEN rt0.c3 END)IS NOT(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((('-1193097366' COLLATE RTRIM))<>((x''))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 WHEN v0.c1 THEN rt0.c3 END)IS NOT(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY ((('-1193097366' COLLATE RTRIM))<>((x''))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 WHEN v0.c1 THEN rt0.c3 END)IS NOT(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((('-1193097366' COLLATE RTRIM))<>((x''))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 WHEN v0.c1 THEN rt0.c3 END)IS NOT(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY ((('-1193097366' COLLATE RTRIM))<>((x''))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 WHEN v0.c1 THEN rt0.c3 END)IS NOT(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM v0, rt0, t0, rt1 WHERE ((((('696103565')OR('0.0019346703029952117')))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((('696103565')OR('0.0019346703029952117')))OR(rt0.c2))) IS TRUE)  as count FROM v0, rt0, t0, rt1);
SELECT * FROM v0, rt0, t0, rt1 WHERE ((((('696103565')OR('0.0019346703029952117')))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((('696103565')OR('0.0019346703029952117')))OR(rt0.c2))) IS TRUE)  as count FROM v0, rt0, t0, rt1);
SELECT * FROM v0, rt0, t0, rt1 WHERE ((((('696103565')OR('0.0019346703029952117')))OR(rt0.c2)));
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(rt1.c3 AS BLOB) WHERE ((((- (v0.c1)))>>((((rt0.c2, rt1.c2, v0.c1))<>((v0.c2, NULL, rt0.c1)))))) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT (((((- (v0.c1)))>>((((rt0.c2, rt1.c2, v0.c1))!=((v0.c2, NULL, rt0.c1)))))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(rt1.c3 AS BLOB) ORDER BY rt1.c0);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(rt1.c3 AS BLOB) WHERE ((((- (v0.c1)))>>((((rt0.c2, rt1.c2, v0.c1))<>((v0.c2, NULL, rt0.c1)))))) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT (((((- (v0.c1)))>>((((rt0.c2, rt1.c2, v0.c1))!=((v0.c2, NULL, rt0.c1)))))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(rt1.c3 AS BLOB) ORDER BY rt1.c0);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(rt1.c3 AS BLOB) WHERE ((((- (v0.c1)))>>((((rt0.c2, rt1.c2, v0.c1))<>((v0.c2, NULL, rt0.c1)))))) ORDER BY rt1.c0;
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((((((((((json_insert(rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2))AND((t0.c0 IN ()))))AND(TRIM(DISTINCT rt0.c1))))OR(rt0.c1 COLLATE BINARY)))OR(((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1 COLLATE BINARY))) ORDER BY CAST(LENGTH(rt0.c3) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((json_insert(rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2))AND((t0.c0 IN ()))))AND(TRIM(DISTINCT rt0.c1))))OR(rt0.c1 COLLATE BINARY)))OR(((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY CAST(LENGTH(rt0.c3) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((((((((((json_insert(rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2))AND((t0.c0 IN ()))))AND(TRIM(DISTINCT rt0.c1))))OR(rt0.c1 COLLATE BINARY)))OR(((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1 COLLATE BINARY))) ORDER BY CAST(LENGTH(rt0.c3) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((json_insert(rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2))AND((t0.c0 IN ()))))AND(TRIM(DISTINCT rt0.c1))))OR(rt0.c1 COLLATE BINARY)))OR(((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY CAST(LENGTH(rt0.c3) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((((((((((json_insert(rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c2))AND((t0.c0 IN ()))))AND(TRIM(DISTINCT rt0.c1))))OR(rt0.c1 COLLATE BINARY)))OR(((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1 COLLATE BINARY))) ORDER BY CAST(LENGTH(rt0.c3) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1)/(rt1.c0)) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN (NOT (rt1.c3)) WHEN 0.6777763059377537 THEN (- (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)/(rt1.c0)) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN (NOT (rt1.c3)) WHEN 0.6777763059377537 THEN (- (rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1)/(rt1.c0)) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN (NOT (rt1.c3)) WHEN 0.6777763059377537 THEN (- (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)/(rt1.c0)) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN (NOT (rt1.c3)) WHEN 0.6777763059377537 THEN (- (rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1)/(rt1.c0)) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN (NOT (rt1.c3)) WHEN 0.6777763059377537 THEN (- (rt1.c3)) END);
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c2, 0.4312687342630872) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c2, 0.4312687342630872) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c2, 0.4312687342630872) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c2, 0.4312687342630872) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c2, 0.4312687342630872) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0)AND(v0.c2)))OR(rt1.c2)) IN ()) INNER JOIN v0 ON rt1.c1 WHERE (((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)))AND(v0.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(v0.c0)))>(((rt0.c3)<=(v0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (v0.c2) AND (rt1.c1))) NOT BETWEEN (TRIM(v0.c2)) AND ('87597025'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)))AND(v0.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(v0.c0)))>(((rt0.c3)<=(v0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0)AND(v0.c2)))OR(rt1.c2)) IN ()) INNER JOIN v0 ON rt1.c1 ORDER BY ((((rt0.c1) BETWEEN (v0.c2) AND (rt1.c1))) NOT BETWEEN (TRIM(v0.c2)) AND ('87597025')));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0)AND(v0.c2)))OR(rt1.c2)) IN ()) INNER JOIN v0 ON rt1.c1 WHERE (((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)))AND(v0.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(v0.c0)))>(((rt0.c3)<=(v0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (v0.c2) AND (rt1.c1))) NOT BETWEEN (TRIM(v0.c2)) AND ('87597025'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)))AND(v0.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(v0.c0)))>(((rt0.c3)<=(v0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0)AND(v0.c2)))OR(rt1.c2)) IN ()) INNER JOIN v0 ON rt1.c1 ORDER BY ((((rt0.c1) BETWEEN (v0.c2) AND (rt1.c1))) NOT BETWEEN (TRIM(v0.c2)) AND ('87597025')));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0)AND(v0.c2)))OR(rt1.c2)) IN ()) INNER JOIN v0 ON rt1.c1 WHERE (((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)))AND(v0.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(v0.c0)))>(((rt0.c3)<=(v0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (v0.c2) AND (rt1.c1))) NOT BETWEEN (TRIM(v0.c2)) AND ('87597025'));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(((rt0.c3) IS FALSE))))OR(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))OR(((rt0.c3) IS FALSE))))OR(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(((rt0.c3) IS FALSE))))OR(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))OR(((rt0.c3) IS FALSE))))OR(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(((rt0.c3) IS FALSE))))OR(CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (load_extension(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (load_extension(rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (load_extension(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (load_extension(rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM t0 CROSS JOIN v0 ON CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN CAST(v0.c1 AS NUMERIC) WHEN ((x'')%('0.5455508903979148')) THEN ((t0.c0) IS FALSE) WHEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c1)) THEN t0.c0 COLLATE BINARY ELSE ((t0.c0) NOTNULL) END WHERE (((((((((v0.c2)AND(v0.c0)))AND(t0.c0)))AND((v0.c1 IN ()))))AND(CAST(v0.c2 AS TEXT)))) ORDER BY TRIM(DISTINCT (v0.c2 IN (v0.c1, v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)AND(v0.c0)))AND(t0.c0)))AND((v0.c1 IN ()))))AND(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN CAST(v0.c1 AS NUMERIC) WHEN ((x'')%('0.5455508903979148')) THEN ((t0.c0) IS FALSE) WHEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c1)) THEN t0.c0 COLLATE BINARY ELSE ((t0.c0) NOTNULL) END ORDER BY TRIM(DISTINCT (v0.c2 IN (v0.c1, v0.c2))) DESC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN v0 ON CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN CAST(v0.c1 AS NUMERIC) WHEN ((x'')%('0.5455508903979148')) THEN ((t0.c0) IS FALSE) WHEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c1)) THEN t0.c0 COLLATE BINARY ELSE ((t0.c0) NOTNULL) END WHERE (((((((((v0.c2)AND(v0.c0)))AND(t0.c0)))AND((v0.c1 IN ()))))AND(CAST(v0.c2 AS TEXT)))) ORDER BY TRIM(DISTINCT (v0.c2 IN (v0.c1, v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)AND(v0.c0)))AND(t0.c0)))AND((v0.c1 IN ()))))AND(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN CAST(v0.c1 AS NUMERIC) WHEN ((x'')%('0.5455508903979148')) THEN ((t0.c0) IS FALSE) WHEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c1)) THEN t0.c0 COLLATE BINARY ELSE ((t0.c0) NOTNULL) END ORDER BY TRIM(DISTINCT (v0.c2 IN (v0.c1, v0.c2))) DESC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN v0 ON CASE CAST(v0.c2 AS INTEGER)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN CAST(v0.c1 AS NUMERIC) WHEN ((x'')%('0.5455508903979148')) THEN ((t0.c0) IS FALSE) WHEN ((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(v0.c1)) THEN t0.c0 COLLATE BINARY ELSE ((t0.c0) NOTNULL) END WHERE (((((((((v0.c2)AND(v0.c0)))AND(t0.c0)))AND((v0.c1 IN ()))))AND(CAST(v0.c2 AS TEXT)))) ORDER BY TRIM(DISTINCT (v0.c2 IN (v0.c1, v0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt1, rt0 WHERE (TYPEOF(DISTINCT ((rt1.c1)GLOB(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt1.c1)GLOB(rt0.c1)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (TYPEOF(DISTINCT ((rt1.c1)GLOB(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt1.c1)GLOB(rt0.c1)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (TYPEOF(DISTINCT ((rt1.c1)GLOB(rt0.c1))));
SELECT ALL * FROM rt0, v0, t0, rt1 WHERE (v0.c2) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)  NULLS LAST, LOWER(rt1.c0) COLLATE NOCASE DESC, CAST(((rt1.c1)&('')) AS NUMERIC) DESC  NULLS LAST, (NOT (((v0.c1) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0, t0, rt1 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)  NULLS LAST, LOWER(rt1.c0) COLLATE NOCASE DESC, CAST(((rt1.c1)&('')) AS NUMERIC) DESC  NULLS LAST, (NOT (((v0.c1) ISNULL))) ASC);
SELECT ALL * FROM rt0, v0, t0, rt1 WHERE (v0.c2) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)  NULLS LAST, LOWER(rt1.c0) COLLATE NOCASE DESC, CAST(((rt1.c1)&('')) AS NUMERIC) DESC  NULLS LAST, (NOT (((v0.c1) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0, t0, rt1 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)  NULLS LAST, LOWER(rt1.c0) COLLATE NOCASE DESC, CAST(((rt1.c1)&('')) AS NUMERIC) DESC  NULLS LAST, (NOT (((v0.c1) ISNULL))) ASC);
SELECT ALL * FROM rt0, v0, t0, rt1 WHERE (v0.c2) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)  NULLS LAST, LOWER(rt1.c0) COLLATE NOCASE DESC, CAST(((rt1.c1)&('')) AS NUMERIC) DESC  NULLS LAST, (NOT (((v0.c1) ISNULL))) ASC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c2, 0.1030740609911659))) AND ((CAST(rt1.c2 AS NUMERIC))))) ORDER BY NULLIF(DISTINCT json_remove(rt1.c0, rt1.c3), ((x'')IS NOT(rt1.c1))) ASC, (rt1.c1 IN ()) COLLATE RTRIM DESC, 0.017356892146050296 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c2, 0.1030740609911659))) AND ((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1 ORDER BY NULLIF(DISTINCT json_remove(rt1.c0, rt1.c3), ((x'')IS NOT(rt1.c1))) ASC, (rt1.c1 IN ()) COLLATE RTRIM DESC, 0.017356892146050296 COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c2, 0.1030740609911659))) AND ((CAST(rt1.c2 AS NUMERIC))))) ORDER BY NULLIF(DISTINCT json_remove(rt1.c0, rt1.c3), ((x'')IS NOT(rt1.c1))) ASC, (rt1.c1 IN ()) COLLATE RTRIM DESC, 0.017356892146050296 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c2, 0.1030740609911659))) AND ((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1 ORDER BY NULLIF(DISTINCT json_remove(rt1.c0, rt1.c3), ((x'')IS NOT(rt1.c1))) ASC, (rt1.c1 IN ()) COLLATE RTRIM DESC, 0.017356892146050296 COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (LTRIM((v0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((v0.c2 IN ()))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LTRIM((v0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((v0.c2 IN ()))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LTRIM((v0.c2 IN ())));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c1, rt1.c3, rt1.c0)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((((rt1.c3)OR(x'')))AND(t0.c0)), rt1.c1)) AND ((rt1.c2 COLLATE RTRIM, LIKELIHOOD(rt1.c3, 0.3359370054604345), '-u#o'))) WHERE ((((rt1.c1, rt1.c3, rt1.c0)) BETWEEN (((+ (t0.c0)), t0.c0, CASE WHEN rt1.c0 THEN '-1335723826' ELSE rt1.c3 END)) AND ((CAST(rt1.c2 AS NUMERIC), LTRIM('', rt1.c2), CASE rt1.c3  WHEN rt1.c3 THEN t0.c0 END)))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))/(rt1.c2 COLLATE RTRIM)) ASC  NULLS FIRST, HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c3, rt1.c0)) BETWEEN (((+ (t0.c0)), t0.c0, CASE WHEN rt1.c0 THEN '-1335723826' ELSE rt1.c3 END)) AND ((CAST(rt1.c2 AS NUMERIC), LTRIM('', rt1.c2), CASE rt1.c3  WHEN rt1.c3 THEN t0.c0 END)))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((rt1.c1, rt1.c3, rt1.c0)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((((rt1.c3)OR(x'')))AND(t0.c0)), rt1.c1)) AND ((rt1.c2 COLLATE RTRIM, LIKELIHOOD(rt1.c3, 0.3359370054604345), '-u#o'))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))/(rt1.c2 COLLATE RTRIM)) ASC  NULLS FIRST, HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)  NULLS LAST);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c1, rt1.c3, rt1.c0)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((((rt1.c3)OR(x'')))AND(t0.c0)), rt1.c1)) AND ((rt1.c2 COLLATE RTRIM, LIKELIHOOD(rt1.c3, 0.3359370054604345), '-u#o'))) WHERE ((((rt1.c1, rt1.c3, rt1.c0)) BETWEEN (((+ (t0.c0)), t0.c0, CASE WHEN rt1.c0 THEN '-1335723826' ELSE rt1.c3 END)) AND ((CAST(rt1.c2 AS NUMERIC), LTRIM('', rt1.c2), CASE rt1.c3  WHEN rt1.c3 THEN t0.c0 END)))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))/(rt1.c2 COLLATE RTRIM)) ASC  NULLS FIRST, HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c3, rt1.c0)) BETWEEN (((+ (t0.c0)), t0.c0, CASE WHEN rt1.c0 THEN '-1335723826' ELSE rt1.c3 END)) AND ((CAST(rt1.c2 AS NUMERIC), LTRIM('', rt1.c2), CASE rt1.c3  WHEN rt1.c3 THEN t0.c0 END)))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((rt1.c1, rt1.c3, rt1.c0)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((((rt1.c3)OR(x'')))AND(t0.c0)), rt1.c1)) AND ((rt1.c2 COLLATE RTRIM, LIKELIHOOD(rt1.c3, 0.3359370054604345), '-u#o'))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))/(rt1.c2 COLLATE RTRIM)) ASC  NULLS FIRST, HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)  NULLS LAST);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c1, rt1.c3, rt1.c0)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), ((((rt1.c3)OR(x'')))AND(t0.c0)), rt1.c1)) AND ((rt1.c2 COLLATE RTRIM, LIKELIHOOD(rt1.c3, 0.3359370054604345), '-u#o'))) WHERE ((((rt1.c1, rt1.c3, rt1.c0)) BETWEEN (((+ (t0.c0)), t0.c0, CASE WHEN rt1.c0 THEN '-1335723826' ELSE rt1.c3 END)) AND ((CAST(rt1.c2 AS NUMERIC), LTRIM('', rt1.c2), CASE rt1.c3  WHEN rt1.c3 THEN t0.c0 END)))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))/(rt1.c2 COLLATE RTRIM)) ASC  NULLS FIRST, HEX(CASE WHEN rt1.c3 THEN rt1.c2 END)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) NOT NULL) ASC, ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)>(((rt0.c2)GLOB(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c2) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) NOT NULL) ASC, ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)>(((rt0.c2)GLOB(rt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) NOT NULL) ASC, ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)>(((rt0.c2)GLOB(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c2) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) NOT NULL) ASC, ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)>(((rt0.c2)GLOB(rt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) NOT NULL) ASC, ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)>(((rt0.c2)GLOB(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, v0 WHERE ((CASE WHEN rt1.c3 THEN rt0.c0 END IN (v0.c2)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c3 THEN rt0.c0 END IN (v0.c2))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((CASE WHEN rt1.c3 THEN rt0.c0 END IN (v0.c2)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c3 THEN rt0.c0 END IN (v0.c2))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((CASE WHEN rt1.c3 THEN rt0.c0 END IN (v0.c2)));
SELECT ALL * FROM rt0 WHERE ((json_type(rt0.c3) IN (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((json_type(rt0.c3) IN (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((json_type(rt0.c3) IN (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((json_type(rt0.c3) IN (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((load_extension(t0.c0, t0.c0))) AND ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))))) ORDER BY ((json_type(rt1.c2))|('b''C}imB')), ((- (rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((load_extension(t0.c0, t0.c0))) AND ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((json_type(rt1.c2))|('b''C}imB')), ((- (rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((load_extension(t0.c0, t0.c0))) AND ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))))) ORDER BY ((json_type(rt1.c2))|('b''C}imB')), ((- (rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((load_extension(t0.c0, t0.c0))) AND ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((json_type(rt1.c2))|('b''C}imB')), ((- (rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((load_extension(t0.c0, t0.c0))) AND ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))))) ORDER BY ((json_type(rt1.c2))|('b''C}imB')), ((- (rt1.c2)) IN ());
SELECT * FROM rt1, v0 INNER JOIN rt0 ON CAST(v0.c1 AS NUMERIC) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c1 END)OR(((t0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))OR(((rt1.c0)/(rt0.c3)))) WHERE (((CASE v0.c1  WHEN 0X714f28b6 THEN v0.c1 END)GLOB(json_remove(rt1.c1, rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN 0x714f28b6 THEN v0.c1 END)GLOB(json_remove(rt1.c1, rt1.c2)))) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON CAST(v0.c1 AS NUMERIC) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c1 END)OR(((t0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))OR(((rt1.c0)/(rt0.c3)))));
SELECT * FROM rt1, v0 INNER JOIN rt0 ON CAST(v0.c1 AS NUMERIC) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c1 END)OR(((t0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))OR(((rt1.c0)/(rt0.c3)))) WHERE (((CASE v0.c1  WHEN 0X714f28b6 THEN v0.c1 END)GLOB(json_remove(rt1.c1, rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN 0x714f28b6 THEN v0.c1 END)GLOB(json_remove(rt1.c1, rt1.c2)))) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON CAST(v0.c1 AS NUMERIC) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c1 END)OR(((t0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))OR(((rt1.c0)/(rt0.c3)))));
SELECT * FROM rt1, v0 INNER JOIN rt0 ON CAST(v0.c1 AS NUMERIC) COLLATE RTRIM FULL OUTER JOIN t0 ON ((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c1 END)OR(((t0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))))OR(((rt1.c0)/(rt0.c3)))) WHERE (((CASE v0.c1  WHEN 0X714f28b6 THEN v0.c1 END)GLOB(json_remove(rt1.c1, rt1.c2))));
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (CASE rt1.c1 COLLATE RTRIM  WHEN ((v0.c2)-(rt0.c2)) THEN (+ (rt0.c3)) ELSE 'yM' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1 COLLATE RTRIM  WHEN ((v0.c2)-(rt0.c2)) THEN (+ (rt0.c3)) ELSE 'yM' END) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (CASE rt1.c1 COLLATE RTRIM  WHEN ((v0.c2)-(rt0.c2)) THEN (+ (rt0.c3)) ELSE 'yM' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1 COLLATE RTRIM  WHEN ((v0.c2)-(rt0.c2)) THEN (+ (rt0.c3)) ELSE 'yM' END) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (CASE rt1.c1 COLLATE RTRIM  WHEN ((v0.c2)-(rt0.c2)) THEN (+ (rt0.c3)) ELSE 'yM' END);
SELECT COUNT(*) FROM rt1, t0, rt0, v0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, rt0, v0);
SELECT COUNT(*) FROM rt1, t0, rt0, v0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, rt0, v0);
SELECT COUNT(*) FROM rt1, t0, rt0, v0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT * FROM v0, t0, rt1 WHERE (rt1.c0 COLLATE RTRIM) ORDER BY '0.6545321179220895', UPPER(DISTINCT '-2055957170') DESC, (((((v0.c0))>=((rt1.c2)))) NOT BETWEEN (((rt1.c3)+(rt1.c2))) AND (v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY '0.6545321179220895', UPPER(DISTINCT '-2055957170') DESC, (((((v0.c0))>=((rt1.c2)))) NOT BETWEEN (((rt1.c3)+(rt1.c2))) AND (v0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM v0, t0, rt1 WHERE (rt1.c0 COLLATE RTRIM) ORDER BY '0.6545321179220895', UPPER(DISTINCT '-2055957170') DESC, (((((v0.c0))>=((rt1.c2)))) NOT BETWEEN (((rt1.c3)+(rt1.c2))) AND (v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY '0.6545321179220895', UPPER(DISTINCT '-2055957170') DESC, (((((v0.c0))>=((rt1.c2)))) NOT BETWEEN (((rt1.c3)+(rt1.c2))) AND (v0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM v0, t0, rt1 WHERE (rt1.c0 COLLATE RTRIM) ORDER BY '0.6545321179220895', UPPER(DISTINCT '-2055957170') DESC, (((((v0.c0))>=((rt1.c2)))) NOT BETWEEN (((rt1.c3)+(rt1.c2))) AND (v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((rt1.c3) BETWEEN (rt1.c0) AND (rt0.c2)))AND(-9.50564336E8)))AND(x'371a')))AND((rt1.c3 IN (NULL, rt0.c1)))))OR(((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3) BETWEEN (rt1.c0) AND (rt0.c2)))AND(-9.50564336E8)))AND(x'371a')))AND((rt1.c3 IN (NULL, rt0.c1)))))OR(((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((rt1.c3) BETWEEN (rt1.c0) AND (rt0.c2)))AND(-9.50564336E8)))AND(x'371a')))AND((rt1.c3 IN (NULL, rt0.c1)))))OR(((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3) BETWEEN (rt1.c0) AND (rt0.c2)))AND(-9.50564336E8)))AND(x'371a')))AND((rt1.c3 IN (NULL, rt0.c1)))))OR(((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((rt1.c3) BETWEEN (rt1.c0) AND (rt0.c2)))AND(-9.50564336E8)))AND(x'371a')))AND((rt1.c3 IN (NULL, rt0.c1)))))OR(((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3)))));
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c0))<=((v0.c2, v0.c0, v0.c1))))OR(((v0.c2)/(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c2, v0.c0))<=((v0.c2, v0.c0, v0.c1))))OR(((v0.c2)/(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c0))<=((v0.c2, v0.c0, v0.c1))))OR(((v0.c2)/(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c2, v0.c0))<=((v0.c2, v0.c0, v0.c1))))OR(((v0.c2)/(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c0))<=((v0.c2, v0.c0, v0.c1))))OR(((v0.c2)/(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT * FROM v0, rt1, rt0, t0 WHERE (rt0.c2) ORDER BY ((rt1.c1)IS(rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY ((rt1.c1)IS(rt0.c0)) COLLATE NOCASE);
SELECT * FROM v0, rt1, rt0, t0 WHERE (rt0.c2) ORDER BY ((rt1.c1)IS(rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY ((rt1.c1)IS(rt0.c0)) COLLATE NOCASE);
SELECT * FROM v0, rt1, rt0, t0 WHERE (rt0.c2) ORDER BY ((rt1.c1)IS(rt0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c3 AS NUMERIC))>=((rt1.c1 IN ()))) INNER JOIN t0 ON (((((((((+ (rt0.c2)))OR(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1)LIKE('镎O\搲G^')))))OR((((rt1.c1))<=((rt0.c3))))))OR(CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) WHERE (((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1))) NOT NULL)) ORDER BY ABS(DISTINCT ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))) ASC, (((((((((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND((((rt1.c2))!=((NULL))))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))AND(((rt1.c0)<=(rt0.c2)))))AND(CAST(0.4228101636019168 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c3 AS NUMERIC))>=((rt1.c1 IN ()))) INNER JOIN t0 ON (((((((((+ (rt0.c2)))OR(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1)LIKE('镎O\搲G^')))))OR((((rt1.c1))<=((rt0.c3))))))OR(CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY ABS(DISTINCT ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))) ASC, (((((((((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND((((rt1.c2))!=((NULL))))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))AND(((rt1.c0)<=(rt0.c2)))))AND(CAST(0.4228101636019168 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c3 AS NUMERIC))>=((rt1.c1 IN ()))) INNER JOIN t0 ON (((((((((+ (rt0.c2)))OR(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1)LIKE('镎O\搲G^')))))OR((((rt1.c1))<=((rt0.c3))))))OR(CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) WHERE (((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1))) NOT NULL)) ORDER BY ABS(DISTINCT ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))) ASC, (((((((((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND((((rt1.c2))!=((NULL))))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))AND(((rt1.c0)<=(rt0.c2)))))AND(CAST(0.4228101636019168 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c3 AS NUMERIC))>=((rt1.c1 IN ()))) INNER JOIN t0 ON (((((((((+ (rt0.c2)))OR(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1)LIKE('镎O\搲G^')))))OR((((rt1.c1))<=((rt0.c3))))))OR(CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) ORDER BY ABS(DISTINCT ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))) ASC, (((((((((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND((((rt1.c2))!=((NULL))))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))AND(((rt1.c0)<=(rt0.c2)))))AND(CAST(0.4228101636019168 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c3 AS NUMERIC))>=((rt1.c1 IN ()))) INNER JOIN t0 ON (((((((((+ (rt0.c2)))OR(((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1)LIKE('镎O\搲G^')))))OR((((rt1.c1))<=((rt0.c3))))))OR(CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) WHERE (((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1))) NOT NULL)) ORDER BY ABS(DISTINCT ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))) ASC, (((((((((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND((((rt1.c2))!=((NULL))))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))AND(((rt1.c0)<=(rt0.c2)))))AND(CAST(0.4228101636019168 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE ((((x'dbfb' IN (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (rt0.c2))) ORDER BY (- (CAST(rt0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'dbfb' IN (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (rt0.c2))) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (CAST(rt0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((x'dbfb' IN (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (rt0.c2))) ORDER BY (- (CAST(rt0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'dbfb' IN (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (rt0.c2))) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (CAST(rt0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((x'dbfb' IN (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (rt0.c2))) ORDER BY (- (CAST(rt0.c0 AS BLOB)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 NOT INDEXED WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL)) ORDER BY rt1.c0  NULLS FIRST, CASE WHEN rt0.c2 THEN NULL WHEN v0.c1 THEN rt1.c0 WHEN v0.c1 THEN rt1.c3 ELSE rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY rt1.c0  NULLS FIRST, CASE WHEN rt0.c2 THEN NULL WHEN v0.c1 THEN rt1.c0 WHEN v0.c1 THEN rt1.c3 ELSE rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 NOT INDEXED WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL)) ORDER BY rt1.c0  NULLS FIRST, CASE WHEN rt0.c2 THEN NULL WHEN v0.c1 THEN rt1.c0 WHEN v0.c1 THEN rt1.c3 ELSE rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY rt1.c0  NULLS FIRST, CASE WHEN rt0.c2 THEN NULL WHEN v0.c1 THEN rt1.c0 WHEN v0.c1 THEN rt1.c3 ELSE rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 NOT INDEXED WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL)) ORDER BY rt1.c0  NULLS FIRST, CASE WHEN rt0.c2 THEN NULL WHEN v0.c1 THEN rt1.c0 WHEN v0.c1 THEN rt1.c3 ELSE rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (+ (rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (+ (rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (+ (rt0.c1)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((load_extension(rt1.c3, rt0.c2)) BETWEEN (CASE v0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) AND ((rt1.c0 IN (rt1.c1))))) ORDER BY TRIM(DISTINCT ((v0.c1) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((load_extension(rt1.c3, rt0.c2)) BETWEEN (CASE v0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) AND ((rt1.c0 IN (rt1.c1))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY TRIM(DISTINCT ((v0.c1) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((load_extension(rt1.c3, rt0.c2)) BETWEEN (CASE v0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) AND ((rt1.c0 IN (rt1.c1))))) ORDER BY TRIM(DISTINCT ((v0.c1) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((load_extension(rt1.c3, rt0.c2)) BETWEEN (CASE v0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) AND ((rt1.c0 IN (rt1.c1))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY TRIM(DISTINCT ((v0.c1) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((load_extension(rt1.c3, rt0.c2)) BETWEEN (CASE v0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END) AND ((rt1.c0 IN (rt1.c1))))) ORDER BY TRIM(DISTINCT ((v0.c1) IS TRUE)) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 COLLATE RTRIM AS TEXT));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((v0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((v0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((v0.c2 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM v0, t0 WHERE (((((v0.c0)*(t0.c0)))LIKE(((v0.c2) IS TRUE)))) ORDER BY (((t0.c0)%(v0.c2)) IN ()), CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(t0.c0)))LIKE(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0)%(v0.c2)) IN ()), CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((v0.c0)*(t0.c0)))LIKE(((v0.c2) IS TRUE)))) ORDER BY (((t0.c0)%(v0.c2)) IN ()), CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(t0.c0)))LIKE(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0)%(v0.c2)) IN ()), CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((v0.c0)*(t0.c0)))LIKE(((v0.c2) IS TRUE)))) ORDER BY (((t0.c0)%(v0.c2)) IN ()), CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((x'')-(v0.c0)))IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN rt0 ON CAST(((v0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS BLOB) WHERE (CAST(rt0.c3 AS NUMERIC)) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3) ISNULL))) AND ((((v0.c1)IS(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS NUMERIC)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((x'')-(v0.c0)))IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN rt0 ON CAST(((v0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS BLOB) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3) ISNULL))) AND ((((v0.c1)IS(rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((x'')-(v0.c0)))IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN rt0 ON CAST(((v0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS BLOB) WHERE (CAST(rt0.c3 AS NUMERIC)) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3) ISNULL))) AND ((((v0.c1)IS(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS NUMERIC)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((x'')-(v0.c0)))IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN rt0 ON CAST(((v0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS BLOB) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3) ISNULL))) AND ((((v0.c1)IS(rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((x'')-(v0.c0)))IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN rt0 ON CAST(((v0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS BLOB) WHERE (CAST(rt0.c3 AS NUMERIC)) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3) ISNULL))) AND ((((v0.c1)IS(rt0.c1))))) DESC  NULLS FIRST;
SELECT * FROM v0, t0 CROSS JOIN rt1 ON rt1.c2 WHERE ((((t0.c0, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN (((rt1.c1 IN (t0.c0, rt1.c0)), TRIM(x''), ((rt1.c1) BETWEEN (v0.c1) AND (rt1.c0)), v0.c2 COLLATE NOCASE, ((t0.c0)<(v0.c2)))) AND ((((rt1.c1)AND(v0.c2)), ((v0.c1)+(rt1.c2)), CASE '-1310273090'  WHEN v0.c0 THEN rt1.c0 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN v0.c0 THEN t0.c0 END, 'H3	N?]솧R', (((('0.3173355612842167')OR(v0.c2)))AND(rt1.c2)))))) ORDER BY CASE (v0.c2 IN ())  WHEN TRIM(DISTINCT rt1.c1, rt1.c1) THEN (+ (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN (((rt1.c1 IN (t0.c0, rt1.c0)), TRIM(x''), ((rt1.c1) BETWEEN (v0.c1) AND (rt1.c0)), v0.c2 COLLATE NOCASE, ((t0.c0)<(v0.c2)))) AND ((((rt1.c1)AND(v0.c2)), ((v0.c1)+(rt1.c2)), CASE '-1310273090'  WHEN v0.c0 THEN rt1.c0 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN v0.c0 THEN t0.c0 END, 'H3	N?]솧R', (((('0.3173355612842167')OR(v0.c2)))AND(rt1.c2)))))) IS TRUE)  as count FROM v0, t0 CROSS JOIN rt1 ON rt1.c2 ORDER BY CASE (v0.c2 IN ())  WHEN TRIM(DISTINCT rt1.c1, rt1.c1) THEN (+ (t0.c0)) END  NULLS FIRST);
SELECT * FROM v0, t0 CROSS JOIN rt1 ON rt1.c2 WHERE ((((t0.c0, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN (((rt1.c1 IN (t0.c0, rt1.c0)), TRIM(x''), ((rt1.c1) BETWEEN (v0.c1) AND (rt1.c0)), v0.c2 COLLATE NOCASE, ((t0.c0)<(v0.c2)))) AND ((((rt1.c1)AND(v0.c2)), ((v0.c1)+(rt1.c2)), CASE '-1310273090'  WHEN v0.c0 THEN rt1.c0 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN v0.c0 THEN t0.c0 END, 'H3	N?]솧R', (((('0.3173355612842167')OR(v0.c2)))AND(rt1.c2)))))) ORDER BY CASE (v0.c2 IN ())  WHEN TRIM(DISTINCT rt1.c1, rt1.c1) THEN (+ (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN (((rt1.c1 IN (t0.c0, rt1.c0)), TRIM(x''), ((rt1.c1) BETWEEN (v0.c1) AND (rt1.c0)), v0.c2 COLLATE NOCASE, ((t0.c0)<(v0.c2)))) AND ((((rt1.c1)AND(v0.c2)), ((v0.c1)+(rt1.c2)), CASE '-1310273090'  WHEN v0.c0 THEN rt1.c0 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN v0.c0 THEN t0.c0 END, 'H3	N?]솧R', (((('0.3173355612842167')OR(v0.c2)))AND(rt1.c2)))))) IS TRUE)  as count FROM v0, t0 CROSS JOIN rt1 ON rt1.c2 ORDER BY CASE (v0.c2 IN ())  WHEN TRIM(DISTINCT rt1.c1, rt1.c1) THEN (+ (t0.c0)) END  NULLS FIRST);
SELECT * FROM v0, t0 CROSS JOIN rt1 ON rt1.c2 WHERE ((((t0.c0, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN (((rt1.c1 IN (t0.c0, rt1.c0)), TRIM(x''), ((rt1.c1) BETWEEN (v0.c1) AND (rt1.c0)), v0.c2 COLLATE NOCASE, ((t0.c0)<(v0.c2)))) AND ((((rt1.c1)AND(v0.c2)), ((v0.c1)+(rt1.c2)), CASE '-1310273090'  WHEN v0.c0 THEN rt1.c0 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN v0.c0 THEN t0.c0 END, 'H3	N?]솧R', (((('0.3173355612842167')OR(v0.c2)))AND(rt1.c2)))))) ORDER BY CASE (v0.c2 IN ())  WHEN TRIM(DISTINCT rt1.c1, rt1.c1) THEN (+ (t0.c0)) END  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN t0 ON (NOT (((1)GLOB(rt0.c2)))) LEFT OUTER JOIN v0 ON (((((v0.c1)IS NOT(x'')), NULL, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.14514244858671466)), ((rt1.c1) NOTNULL), (t0.c0 IN (NULL))))<((LOWER(rt0.c0), CASE WHEN v0.c2 THEN rt0.c3 ELSE rt1.c1 END, '381171453', rt0.c2 COLLATE BINARY, rt1.c2))) CROSS JOIN rt1 ON ((((rt0.c2)*('爕v'))) BETWEEN (ABS(DISTINCT t0.c0)) AND ((((rt1.c0))<((rt0.c2))))) WHERE (rt0.c1) ORDER BY CASE ((rt1.c3)<=(v0.c2))  WHEN '[]' THEN CASE v0.c1  WHEN rt1.c3 THEN rt0.c0 END ELSE (((('|rwq!#>')OR(rt1.c0)))AND(rt1.c2)) END  NULLS LAST, ((rt0.c2 COLLATE BINARY)IS NOT(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (NOT (((1)GLOB(rt0.c2)))) LEFT OUTER JOIN v0 ON (((((v0.c1)IS NOT(x'')), NULL, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.14514244858671466)), ((rt1.c1) NOTNULL), (t0.c0 IN (NULL))))<((LOWER(rt0.c0), CASE WHEN v0.c2 THEN rt0.c3 ELSE rt1.c1 END, '381171453', rt0.c2 COLLATE BINARY, rt1.c2))) CROSS JOIN rt1 ON ((((rt0.c2)*('爕v'))) BETWEEN (ABS(DISTINCT t0.c0)) AND ((((rt1.c0))<((rt0.c2))))) ORDER BY CASE ((rt1.c3)<=(v0.c2))  WHEN '[]' THEN CASE v0.c1  WHEN rt1.c3 THEN rt0.c0 END ELSE (((('|rwq!#>')OR(rt1.c0)))AND(rt1.c2)) END  NULLS LAST, ((rt0.c2 COLLATE BINARY)IS NOT(v0.c0)));
SELECT * FROM rt0 INNER JOIN t0 ON (NOT (((1)GLOB(rt0.c2)))) LEFT OUTER JOIN v0 ON (((((v0.c1)IS NOT(x'')), NULL, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.14514244858671466)), ((rt1.c1) NOTNULL), (t0.c0 IN (NULL))))<((LOWER(rt0.c0), CASE WHEN v0.c2 THEN rt0.c3 ELSE rt1.c1 END, '381171453', rt0.c2 COLLATE BINARY, rt1.c2))) CROSS JOIN rt1 ON ((((rt0.c2)*('爕v'))) BETWEEN (ABS(DISTINCT t0.c0)) AND ((((rt1.c0))<((rt0.c2))))) WHERE (rt0.c1) ORDER BY CASE ((rt1.c3)<=(v0.c2))  WHEN '[]' THEN CASE v0.c1  WHEN rt1.c3 THEN rt0.c0 END ELSE (((('|rwq!#>')OR(rt1.c0)))AND(rt1.c2)) END  NULLS LAST, ((rt0.c2 COLLATE BINARY)IS NOT(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (NOT (((1)GLOB(rt0.c2)))) LEFT OUTER JOIN v0 ON (((((v0.c1)IS NOT(x'')), NULL, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.14514244858671466)), ((rt1.c1) NOTNULL), (t0.c0 IN (NULL))))<((LOWER(rt0.c0), CASE WHEN v0.c2 THEN rt0.c3 ELSE rt1.c1 END, '381171453', rt0.c2 COLLATE BINARY, rt1.c2))) CROSS JOIN rt1 ON ((((rt0.c2)*('爕v'))) BETWEEN (ABS(DISTINCT t0.c0)) AND ((((rt1.c0))<((rt0.c2))))) ORDER BY CASE ((rt1.c3)<=(v0.c2))  WHEN '[]' THEN CASE v0.c1  WHEN rt1.c3 THEN rt0.c0 END ELSE (((('|rwq!#>')OR(rt1.c0)))AND(rt1.c2)) END  NULLS LAST, ((rt0.c2 COLLATE BINARY)IS NOT(v0.c0)));
SELECT COUNT(*) FROM rt1, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((v0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((v0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((v0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((v0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((v0.c2 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((((((~ (rt1.c2)))AND(v0.c0)))AND((~ (rt1.c2))))) ORDER BY (((v0.c1 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1))) AND (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c2)))AND(v0.c0)))AND((~ (rt1.c2))))) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY (((v0.c1 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1))) AND (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((((((~ (rt1.c2)))AND(v0.c0)))AND((~ (rt1.c2))))) ORDER BY (((v0.c1 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1))) AND (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c2)))AND(v0.c0)))AND((~ (rt1.c2))))) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY (((v0.c1 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1))) AND (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((((((~ (rt1.c2)))AND(v0.c0)))AND((~ (rt1.c2))))) ORDER BY (((v0.c1 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1))) AND (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c3 END));
SELECT COUNT(*) FROM rt0, v0, rt1, t0 WHERE (v0.c1) ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (json_array(rt1.c3, rt0.c0)) AND (json_valid(t0.c0)))  NULLS LAST, (((((rt1.c2 IN ()))AND(((rt0.c0)=(rt0.c0)))))OR(CAST(rt1.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (json_array(rt1.c3, rt0.c0)) AND (json_valid(t0.c0)))  NULLS LAST, (((((rt1.c2 IN ()))AND(((rt0.c0)==(rt0.c0)))))OR(CAST(rt1.c2 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, rt1, t0 WHERE (v0.c1) ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (json_array(rt1.c3, rt0.c0)) AND (json_valid(t0.c0)))  NULLS LAST, (((((rt1.c2 IN ()))AND(((rt0.c0)=(rt0.c0)))))OR(CAST(rt1.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (json_array(rt1.c3, rt0.c0)) AND (json_valid(t0.c0)))  NULLS LAST, (((((rt1.c2 IN ()))AND(((rt0.c0)==(rt0.c0)))))OR(CAST(rt1.c2 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, rt1, t0 WHERE (v0.c1) ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (json_array(rt1.c3, rt0.c0)) AND (json_valid(t0.c0)))  NULLS LAST, (((((rt1.c2 IN ()))AND(((rt0.c0)=(rt0.c0)))))OR(CAST(rt1.c2 AS BLOB)))  NULLS LAST;
SELECT * FROM v0, rt1 WHERE (((((v0.c0)>>(v0.c0))) IS TRUE)) ORDER BY TRIM(x'')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt1 ORDER BY TRIM(x'')  NULLS FIRST);
SELECT * FROM v0, rt1 WHERE (((((v0.c0)>>(v0.c0))) IS TRUE)) ORDER BY TRIM(x'')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt1 ORDER BY TRIM(x'')  NULLS FIRST);
SELECT * FROM v0, rt1 WHERE (((((v0.c0)>>(v0.c0))) IS TRUE)) ORDER BY TRIM(x'')  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c2 END COLLATE NOCASE CROSS JOIN v0 ON ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt0.c1 END)%(rt1.c3)) WHERE (((((NULL)AND(((((rt0.c0)OR(rt1.c0)))AND(rt1.c0)))))AND(v0.c0 COLLATE RTRIM))) ORDER BY t0.c0  NULLS FIRST, (- (0.8123813536371558));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((((rt0.c0)OR(rt1.c0)))AND(rt1.c0)))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c2 END COLLATE NOCASE CROSS JOIN v0 ON ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt0.c1 END)%(rt1.c3)) ORDER BY t0.c0  NULLS FIRST, (- (0.8123813536371558)));
SELECT ALL * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c2 END COLLATE NOCASE CROSS JOIN v0 ON ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt0.c1 END)%(rt1.c3)) WHERE (((((NULL)AND(((((rt0.c0)OR(rt1.c0)))AND(rt1.c0)))))AND(v0.c0 COLLATE RTRIM))) ORDER BY t0.c0  NULLS FIRST, (- (0.8123813536371558));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((((rt0.c0)OR(rt1.c0)))AND(rt1.c0)))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c2 END COLLATE NOCASE CROSS JOIN v0 ON ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt0.c1 END)%(rt1.c3)) ORDER BY t0.c0  NULLS FIRST, (- (0.8123813536371558)));
SELECT ALL * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c2 END COLLATE NOCASE CROSS JOIN v0 ON ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt0.c1 END)%(rt1.c3)) WHERE (((((NULL)AND(((((rt0.c0)OR(rt1.c0)))AND(rt1.c0)))))AND(v0.c0 COLLATE RTRIM))) ORDER BY t0.c0  NULLS FIRST, (- (0.8123813536371558));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON ('' IN (((v0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON (- (((((v0.c1)AND(v0.c1)))AND(rt1.c1)))) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON ('' IN (((v0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON (- (((((v0.c1)AND(v0.c1)))AND(rt1.c1)))));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON ('' IN (((v0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON (- (((((v0.c1)AND(v0.c1)))AND(rt1.c1)))) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON ('' IN (((v0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON (- (((((v0.c1)AND(v0.c1)))AND(rt1.c1)))));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON ('' IN (((v0.c0) NOTNULL))) RIGHT OUTER JOIN t0 ON (- (((((v0.c1)AND(v0.c1)))AND(rt1.c1)))) WHERE (rt0.c1 COLLATE BINARY);
SELECT ALL * FROM t0, rt0, rt1, v0 WHERE (((((((((((((0.5121345776676309)AND(rt0.c3)))AND(v0.c2)))AND(x'e9f26c29')))AND((+ (v0.c0)))))OR(((((((((rt1.c2)AND(rt0.c1)))AND(v0.c0)))AND(rt1.c0)))AND(rt0.c2)))))OR((((v0.c1))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.5121345776676309)AND(rt0.c3)))AND(v0.c2)))AND(x'e9f26c29')))AND((+ (v0.c0)))))OR(((((((((rt1.c2)AND(rt0.c1)))AND(v0.c0)))AND(rt1.c0)))AND(rt0.c2)))))OR((((v0.c1))<=((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT ALL * FROM t0, rt0, rt1, v0 WHERE (((((((((((((0.5121345776676309)AND(rt0.c3)))AND(v0.c2)))AND(x'e9f26c29')))AND((+ (v0.c0)))))OR(((((((((rt1.c2)AND(rt0.c1)))AND(v0.c0)))AND(rt1.c0)))AND(rt0.c2)))))OR((((v0.c1))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.5121345776676309)AND(rt0.c3)))AND(v0.c2)))AND(x'e9f26c29')))AND((+ (v0.c0)))))OR(((((((((rt1.c2)AND(rt0.c1)))AND(v0.c0)))AND(rt1.c0)))AND(rt0.c2)))))OR((((v0.c1))<=((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT ALL * FROM t0, rt0, rt1, v0 WHERE (((((((((((((0.5121345776676309)AND(rt0.c3)))AND(v0.c2)))AND(x'e9f26c29')))AND((+ (v0.c0)))))OR(((((((((rt1.c2)AND(rt0.c1)))AND(v0.c0)))AND(rt1.c0)))AND(rt0.c2)))))OR((((v0.c1))<=((rt0.c2))))));
SELECT ALL * FROM rt1, t0, rt0 NATURAL JOIN v0 WHERE (((((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))OR(((v0.c1) IS TRUE))))OR(((((((((v0.c1)OR(rt0.c3)))AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))OR(((v0.c1) IS TRUE))))OR(((((((((v0.c1)OR(rt0.c3)))AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM rt1, t0, rt0 NATURAL JOIN v0 WHERE (((((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))OR(((v0.c1) IS TRUE))))OR(((((((((v0.c1)OR(rt0.c3)))AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))OR(((v0.c1) IS TRUE))))OR(((((((((v0.c1)OR(rt0.c3)))AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM rt1, t0, rt0 NATURAL JOIN v0 WHERE (((((((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)))OR(((v0.c1) IS TRUE))))OR(((((((((v0.c1)OR(rt0.c3)))AND(rt0.c3)))OR(rt1.c0)))AND(rt0.c2)))));
SELECT * FROM v0, rt0 WHERE ((((((v0.c0 IN ()))AND(rt0.c2)))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(rt0.c2)))AND(v0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((v0.c0 IN ()))AND(rt0.c2)))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(rt0.c2)))AND(v0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((v0.c0 IN ()))AND(rt0.c2)))AND(v0.c2)));
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c0))<=((v0.c0)))) BETWEEN (((((((((v0.c1)OR(t0.c0)))OR(v0.c1)))OR(t0.c0)))AND(v0.c2))) AND ('-1406331948')));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<=((v0.c0)))) BETWEEN (((((((((v0.c1)OR(t0.c0)))OR(v0.c1)))OR(t0.c0)))AND(v0.c2))) AND ('-1406331948'))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c0))<=((v0.c0)))) BETWEEN (((((((((v0.c1)OR(t0.c0)))OR(v0.c1)))OR(t0.c0)))AND(v0.c2))) AND ('-1406331948')));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<=((v0.c0)))) BETWEEN (((((((((v0.c1)OR(t0.c0)))OR(v0.c1)))OR(t0.c0)))AND(v0.c2))) AND ('-1406331948'))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c0))<=((v0.c0)))) BETWEEN (((((((((v0.c1)OR(t0.c0)))OR(v0.c1)))OR(t0.c0)))AND(v0.c2))) AND ('-1406331948')));
SELECT ALL * FROM rt0, v0, rt1 WHERE (((((((0.6912198894512999) ISNULL))OR(HEX(DISTINCT rt0.c3))))AND((((v0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((0.6912198894512999) ISNULL))OR(HEX(DISTINCT rt0.c3))))AND((((v0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((((((0.6912198894512999) ISNULL))OR(HEX(DISTINCT rt0.c3))))AND((((v0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((0.6912198894512999) ISNULL))OR(HEX(DISTINCT rt0.c3))))AND((((v0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((((((0.6912198894512999) ISNULL))OR(HEX(DISTINCT rt0.c3))))AND((((v0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))));
SELECT * FROM v0, rt1, rt0 WHERE ((- (CAST(rt1.c0 AS REAL)))) ORDER BY ((((((rt1.c2)AND(rt0.c3)))OR(v0.c0))) ISNULL), CASE WHEN ((((rt1.c2)OR(rt0.c3)))AND('')) THEN v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt1, rt0 NOT INDEXED ORDER BY ((((((rt1.c2)AND(rt0.c3)))OR(v0.c0))) ISNULL), CASE WHEN ((((rt1.c2)OR(rt0.c3)))AND('')) THEN v0.c0 END DESC  NULLS FIRST);
SELECT * FROM v0, rt1, rt0 WHERE ((- (CAST(rt1.c0 AS REAL)))) ORDER BY ((((((rt1.c2)AND(rt0.c3)))OR(v0.c0))) ISNULL), CASE WHEN ((((rt1.c2)OR(rt0.c3)))AND('')) THEN v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt1, rt0 NOT INDEXED ORDER BY ((((((rt1.c2)AND(rt0.c3)))OR(v0.c0))) ISNULL), CASE WHEN ((((rt1.c2)OR(rt0.c3)))AND('')) THEN v0.c0 END DESC  NULLS FIRST);
SELECT * FROM v0, rt1, rt0 WHERE ((- (CAST(rt1.c0 AS REAL)))) ORDER BY ((((((rt1.c2)AND(rt0.c3)))OR(v0.c0))) ISNULL), CASE WHEN ((((rt1.c2)OR(rt0.c3)))AND('')) THEN v0.c0 END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)LIKE(t0.c0))) NOT NULL)) ORDER BY UNICODE(x'') COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY UNICODE(x'') COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)LIKE(t0.c0))) NOT NULL)) ORDER BY UNICODE(x'') COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY UNICODE(x'') COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)LIKE(t0.c0))) NOT NULL)) ORDER BY UNICODE(x'') COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((JULIANDAY(rt1.c3, rt1.c3, rt1.c1, rt1.c3, rt1.c3))/((((rt1.c0))<((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(rt1.c3, rt1.c3, rt1.c1, rt1.c3, rt1.c3))/((((rt1.c0))<((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((JULIANDAY(rt1.c3, rt1.c3, rt1.c1, rt1.c3, rt1.c3))/((((rt1.c0))<((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(rt1.c3, rt1.c3, rt1.c1, rt1.c3, rt1.c3))/((((rt1.c0))<((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((JULIANDAY(rt1.c3, rt1.c3, rt1.c1, rt1.c3, rt1.c3))/((((rt1.c0))<((rt1.c1))))));
SELECT * FROM rt1, rt0, v0, t0 WHERE (((rt0.c1)|(v0.c0)) COLLATE NOCASE) ORDER BY ((('ZC'))=((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)|(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((('ZC'))==((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt1.c2 END))));
SELECT * FROM rt1, rt0, v0, t0 WHERE (((rt0.c1)|(v0.c0)) COLLATE NOCASE) ORDER BY ((('ZC'))=((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)|(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((('ZC'))==((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt1.c2 END))));
SELECT * FROM rt1, rt0, v0, t0 WHERE (((rt0.c1)|(v0.c0)) COLLATE NOCASE) ORDER BY ((('ZC'))=((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt1.c2 END)));
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c3)==(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) WHERE (((('1901013174')) BETWEEN ((0.1789664058262429)) AND ((json_array_length('-312193673', 0x42bc9a27))))) ORDER BY (((rt0.c2, t0.c0, rt1.c3, rt1.c0, rt0.c3)) BETWEEN ((rt1.c0, CAST(rt0.c2 AS TEXT), -2.142060121E9, (((rt1.c1))!=((rt1.c1))), ((((rt1.c2)OR(rt1.c3)))OR(rt0.c1)))) AND ((((((((((rt1.c2)OR(t0.c0)))OR(rt1.c0)))OR(x'')))OR(t0.c0)), (rt0.c2 IN (rt1.c1)), (~ (rt0.c2)), (~ (rt0.c0)), (+ (rt1.c1))))) DESC  NULLS FIRST, CAST(((t0.c0)==(rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((('1901013174')) BETWEEN ((0.1789664058262429)) AND ((json_array_length('-312193673', 0X42bc9a27))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c3)=(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) ORDER BY (((rt0.c2, t0.c0, rt1.c3, rt1.c0, rt0.c3)) BETWEEN ((rt1.c0, CAST(rt0.c2 AS TEXT), -2.142060121E9, (((rt1.c1))!=((rt1.c1))), ((((rt1.c2)OR(rt1.c3)))OR(rt0.c1)))) AND ((((((((((rt1.c2)OR(t0.c0)))OR(rt1.c0)))OR(x'')))OR(t0.c0)), (rt0.c2 IN (rt1.c1)), (~ (rt0.c2)), (~ (rt0.c0)), (+ (rt1.c1))))) DESC  NULLS FIRST, CAST(((t0.c0)==(rt0.c2)) AS INTEGER));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c3)==(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) WHERE (((('1901013174')) BETWEEN ((0.1789664058262429)) AND ((json_array_length('-312193673', 0x42bc9a27))))) ORDER BY (((rt0.c2, t0.c0, rt1.c3, rt1.c0, rt0.c3)) BETWEEN ((rt1.c0, CAST(rt0.c2 AS TEXT), -2.142060121E9, (((rt1.c1))!=((rt1.c1))), ((((rt1.c2)OR(rt1.c3)))OR(rt0.c1)))) AND ((((((((((rt1.c2)OR(t0.c0)))OR(rt1.c0)))OR(x'')))OR(t0.c0)), (rt0.c2 IN (rt1.c1)), (~ (rt0.c2)), (~ (rt0.c0)), (+ (rt1.c1))))) DESC  NULLS FIRST, CAST(((t0.c0)==(rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((('1901013174')) BETWEEN ((0.1789664058262429)) AND ((json_array_length('-312193673', 0X42bc9a27))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c3)=(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) ORDER BY (((rt0.c2, t0.c0, rt1.c3, rt1.c0, rt0.c3)) BETWEEN ((rt1.c0, CAST(rt0.c2 AS TEXT), -2.142060121E9, (((rt1.c1))!=((rt1.c1))), ((((rt1.c2)OR(rt1.c3)))OR(rt0.c1)))) AND ((((((((((rt1.c2)OR(t0.c0)))OR(rt1.c0)))OR(x'')))OR(t0.c0)), (rt0.c2 IN (rt1.c1)), (~ (rt0.c2)), (~ (rt0.c0)), (+ (rt1.c1))))) DESC  NULLS FIRST, CAST(((t0.c0)==(rt0.c2)) AS INTEGER));
SELECT * FROM t0 WHERE (CAST(ABS(t0.c0) AS INTEGER)) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, (LOWER(DISTINCT t0.c0) IN ()), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CAST(ABS(t0.c0) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, (LOWER(DISTINCT t0.c0) IN ()), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT * FROM t0 WHERE (CAST(ABS(t0.c0) AS INTEGER)) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, (LOWER(DISTINCT t0.c0) IN ()), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CAST(ABS(t0.c0) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, (LOWER(DISTINCT t0.c0) IN ()), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT * FROM t0 WHERE (CAST(ABS(t0.c0) AS INTEGER)) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, (LOWER(DISTINCT t0.c0) IN ()), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ());
SELECT ALL * FROM t0, rt0 WHERE (LIKELIHOOD(DISTINCT t0.c0, 0.624810500690905)) ORDER BY rt0.c2 ASC, ((rt0.c1)GLOB(t0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT t0.c0, 0.624810500690905)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 ASC, ((rt0.c1)GLOB(t0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM t0, rt0 WHERE (LIKELIHOOD(DISTINCT t0.c0, 0.624810500690905)) ORDER BY rt0.c2 ASC, ((rt0.c1)GLOB(t0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT t0.c0, 0.624810500690905)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 ASC, ((rt0.c1)GLOB(t0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM t0, rt0 WHERE (LIKELIHOOD(DISTINCT t0.c0, 0.624810500690905)) ORDER BY rt0.c2 ASC, ((rt0.c1)GLOB(t0.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((NOT (rt1.c0)))+(CAST(rt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0)))+(CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((NOT (rt1.c0)))+(CAST(rt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0)))+(CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((NOT (rt1.c0)))+(CAST(rt1.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE COALESCE(DISTINCT rt0.c1, rt1.c2)  WHEN ((rt1.c0)>=(rt0.c1)) THEN IFNULL(rt1.c2, rt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT rt0.c1, rt1.c2)  WHEN ((rt1.c0)>=(rt0.c1)) THEN IFNULL(rt1.c2, rt1.c2) END) IS TRUE)  as count FROM rt0, t0, rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE COALESCE(DISTINCT rt0.c1, rt1.c2)  WHEN ((rt1.c0)>=(rt0.c1)) THEN IFNULL(rt1.c2, rt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT rt0.c1, rt1.c2)  WHEN ((rt1.c0)>=(rt0.c1)) THEN IFNULL(rt1.c2, rt1.c2) END) IS TRUE)  as count FROM rt0, t0, rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE COALESCE(DISTINCT rt0.c1, rt1.c2)  WHEN ((rt1.c0)>=(rt0.c1)) THEN IFNULL(rt1.c2, rt1.c2) END);
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE ((((- (rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE ((((- (rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE ((((- (rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((rt0.c2 IN ('', rt0.c2)) IN ()) WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY (DATETIME(rt0.c2, rt0.c0, rt0.c3, rt0.c3, rt0.c2) IN ()) DESC, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((rt0.c2 IN ('', rt0.c2)) IN ()) ORDER BY (DATETIME(rt0.c2, rt0.c0, rt0.c3, rt0.c3, rt0.c2) IN ()) DESC, NULL);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((rt0.c2 IN ('', rt0.c2)) IN ()) WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY (DATETIME(rt0.c2, rt0.c0, rt0.c3, rt0.c3, rt0.c2) IN ()) DESC, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((rt0.c2 IN ('', rt0.c2)) IN ()) ORDER BY (DATETIME(rt0.c2, rt0.c0, rt0.c3, rt0.c3, rt0.c2) IN ()) DESC, NULL);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((rt0.c2 IN ('', rt0.c2)) IN ()) WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY (DATETIME(rt0.c2, rt0.c0, rt0.c3, rt0.c3, rt0.c2) IN ()) DESC, NULL;
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (((rt0.c1) BETWEEN (rt0.c3) AND ('n㚕3D')) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))), ROUND(((v0.c2) IS TRUE), ((v0.c2) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c3) AND ('n㚕3D')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))), ROUND(((v0.c2) IS TRUE), ((v0.c2) IS FALSE)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (((rt0.c1) BETWEEN (rt0.c3) AND ('n㚕3D')) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))), ROUND(((v0.c2) IS TRUE), ((v0.c2) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c3) AND ('n㚕3D')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))), ROUND(((v0.c2) IS TRUE), ((v0.c2) IS FALSE)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (((rt0.c1) BETWEEN (rt0.c3) AND ('n㚕3D')) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))), ROUND(((v0.c2) IS TRUE), ((v0.c2) IS FALSE)) ASC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON t0.c0 INNER JOIN t0 ON ((((((rt1.c0)OR(rt0.c0)))OR(rt0.c3)))GLOB(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))OR(t0.c0)))) WHERE ((CAST(rt0.c2 AS BLOB) IN ((((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c2, '6V^r'))), NULL)));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN ((((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c2, '6V^r'))), NULL))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON t0.c0 INNER JOIN t0 ON ((((((rt1.c0)OR(rt0.c0)))OR(rt0.c3)))GLOB(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON t0.c0 INNER JOIN t0 ON ((((((rt1.c0)OR(rt0.c0)))OR(rt0.c3)))GLOB(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))OR(t0.c0)))) WHERE ((CAST(rt0.c2 AS BLOB) IN ((((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c2, '6V^r'))), NULL)));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN ((((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c2, '6V^r'))), NULL))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON t0.c0 INNER JOIN t0 ON ((((((rt1.c0)OR(rt0.c0)))OR(rt0.c3)))GLOB(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c2)))>>((- (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))>>((- (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c2)))>>((- (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))>>((- (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c2)))>>((- (v0.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN LIKELIHOOD(rt0.c0, 0.3053309992741198) THEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) END) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>((rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELIHOOD(rt0.c0, 0.3053309992741198) THEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>((rt0.c3))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN LIKELIHOOD(rt0.c0, 0.3053309992741198) THEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) END) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>((rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELIHOOD(rt0.c0, 0.3053309992741198) THEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>((rt0.c3))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN LIKELIHOOD(rt0.c0, 0.3053309992741198) THEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) END) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>((rt0.c3))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (NULL))) ORDER BY (((rt1.c2 IN ()))>>((((rt1.c0))>=((rt1.c0))))) ASC  NULLS FIRST, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ()))>>((((rt1.c0))>=((rt1.c0))))) ASC  NULLS FIRST, rt1.c1 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (NULL))) ORDER BY (((rt1.c2 IN ()))>>((((rt1.c0))>=((rt1.c0))))) ASC  NULLS FIRST, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ()))>>((((rt1.c0))>=((rt1.c0))))) ASC  NULLS FIRST, rt1.c1 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (NULL))) ORDER BY (((rt1.c2 IN ()))>>((((rt1.c0))>=((rt1.c0))))) ASC  NULLS FIRST, rt1.c1 DESC;
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE (CAST(v0.c1 AS INTEGER) COLLATE BINARY) ORDER BY CAST(((rt1.c2) NOT BETWEEN (v0.c1) AND (t0.c0)) AS INTEGER)  NULLS LAST, (((rt0.c3, rt1.c3, x'', v0.c2, rt0.c1)) BETWEEN (((+ (0xffffffffebf8d024)), CAST(rt1.c3 AS REAL), (rt1.c0 IN (v0.c1)), ((((v0.c0)AND(rt1.c1)))OR(rt0.c1)), CAST(rt0.c1 AS INTEGER))) AND ((rt1.c3, CASE WHEN rt0.c2 THEN NULL ELSE rt1.c2 END, ((x'') IS FALSE), ((((((((v0.c2)AND(t0.c0)))OR(rt0.c0)))AND(rt1.c3)))OR(rt0.c2)), (v0.c2 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY CAST(((rt1.c2) NOT BETWEEN (v0.c1) AND (t0.c0)) AS INTEGER)  NULLS LAST, (((rt0.c3, rt1.c3, x'', v0.c2, rt0.c1)) BETWEEN (((+ (0Xffffffffebf8d024)), CAST(rt1.c3 AS REAL), (rt1.c0 IN (v0.c1)), ((((v0.c0)AND(rt1.c1)))OR(rt0.c1)), CAST(rt0.c1 AS INTEGER))) AND ((rt1.c3, CASE WHEN rt0.c2 THEN NULL ELSE rt1.c2 END, ((x'') IS FALSE), ((((((((v0.c2)AND(t0.c0)))OR(rt0.c0)))AND(rt1.c3)))OR(rt0.c2)), (v0.c2 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE (CAST(v0.c1 AS INTEGER) COLLATE BINARY) ORDER BY CAST(((rt1.c2) NOT BETWEEN (v0.c1) AND (t0.c0)) AS INTEGER)  NULLS LAST, (((rt0.c3, rt1.c3, x'', v0.c2, rt0.c1)) BETWEEN (((+ (0xffffffffebf8d024)), CAST(rt1.c3 AS REAL), (rt1.c0 IN (v0.c1)), ((((v0.c0)AND(rt1.c1)))OR(rt0.c1)), CAST(rt0.c1 AS INTEGER))) AND ((rt1.c3, CASE WHEN rt0.c2 THEN NULL ELSE rt1.c2 END, ((x'') IS FALSE), ((((((((v0.c2)AND(t0.c0)))OR(rt0.c0)))AND(rt1.c3)))OR(rt0.c2)), (v0.c2 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY CAST(((rt1.c2) NOT BETWEEN (v0.c1) AND (t0.c0)) AS INTEGER)  NULLS LAST, (((rt0.c3, rt1.c3, x'', v0.c2, rt0.c1)) BETWEEN (((+ (0Xffffffffebf8d024)), CAST(rt1.c3 AS REAL), (rt1.c0 IN (v0.c1)), ((((v0.c0)AND(rt1.c1)))OR(rt0.c1)), CAST(rt0.c1 AS INTEGER))) AND ((rt1.c3, CASE WHEN rt0.c2 THEN NULL ELSE rt1.c2 END, ((x'') IS FALSE), ((((((((v0.c2)AND(t0.c0)))OR(rt0.c0)))AND(rt1.c3)))OR(rt0.c2)), (v0.c2 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE (CAST(v0.c1 AS INTEGER) COLLATE BINARY) ORDER BY CAST(((rt1.c2) NOT BETWEEN (v0.c1) AND (t0.c0)) AS INTEGER)  NULLS LAST, (((rt0.c3, rt1.c3, x'', v0.c2, rt0.c1)) BETWEEN (((+ (0xffffffffebf8d024)), CAST(rt1.c3 AS REAL), (rt1.c0 IN (v0.c1)), ((((v0.c0)AND(rt1.c1)))OR(rt0.c1)), CAST(rt0.c1 AS INTEGER))) AND ((rt1.c3, CASE WHEN rt0.c2 THEN NULL ELSE rt1.c2 END, ((x'') IS FALSE), ((((((((v0.c2)AND(t0.c0)))OR(rt0.c0)))AND(rt1.c3)))OR(rt0.c2)), (v0.c2 IN ()))))  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, t0, v0 WHERE ((((v0.c1))<((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c1))<((t0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0, v0);
SELECT ALL * FROM rt0, rt1, t0, v0 WHERE ((((v0.c1))<((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c1))<((t0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0, v0);
SELECT ALL * FROM rt0, rt1, t0, v0 WHERE ((((v0.c1))<((t0.c0))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))+(((t0.c0) NOTNULL))) LEFT OUTER JOIN rt1 ON LOWER((((rt1.c2))=((0.8791473955037333)))) CROSS JOIN t0 ON ((rt0.c3 IN ('')) IN ()) WHERE (((rt0.c2)/(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))+(((t0.c0) NOTNULL))) LEFT OUTER JOIN rt1 ON LOWER((((rt1.c2))=((0.8791473955037333)))) CROSS JOIN t0 ON ((rt0.c3 IN ('')) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))+(((t0.c0) NOTNULL))) LEFT OUTER JOIN rt1 ON LOWER((((rt1.c2))=((0.8791473955037333)))) CROSS JOIN t0 ON ((rt0.c3 IN ('')) IN ()) WHERE (((rt0.c2)/(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))+(((t0.c0) NOTNULL))) LEFT OUTER JOIN rt1 ON LOWER((((rt1.c2))=((0.8791473955037333)))) CROSS JOIN t0 ON ((rt0.c3 IN ('')) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))+(((t0.c0) NOTNULL))) LEFT OUTER JOIN rt1 ON LOWER((((rt1.c2))=((0.8791473955037333)))) CROSS JOIN t0 ON ((rt0.c3 IN ('')) IN ()) WHERE (((rt0.c2)/(v0.c1)) COLLATE NOCASE);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (NULL);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0)+(t0.c0))))) ORDER BY ((((t0.c0) ISNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0)+(t0.c0))))) ORDER BY ((((t0.c0) ISNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0)+(t0.c0))))) ORDER BY ((((t0.c0) ISNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((- (CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((- (CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((- (CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c3 IN ()))AND(((rt1.c1)IS NOT(rt1.c0)))))AND(rt1.c3))) ORDER BY ((((rt1.c2)||(rt1.c3))) NOT BETWEEN (((rt1.c0)<>(rt0.c2))) AND (((rt0.c0)IS(rt0.c3)))), ((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2))) NOT NULL)  NULLS LAST, CAST(0.5121345776676309 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3 IN ()))AND(((rt1.c1)IS NOT(rt1.c0)))))AND(rt1.c3))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2)||(rt1.c3))) NOT BETWEEN (((rt1.c0)!=(rt0.c2))) AND (((rt0.c0)IS(rt0.c3)))), ((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2))) NOT NULL)  NULLS LAST, CAST(0.5121345776676309 AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c3 IN ()))AND(((rt1.c1)IS NOT(rt1.c0)))))AND(rt1.c3))) ORDER BY ((((rt1.c2)||(rt1.c3))) NOT BETWEEN (((rt1.c0)<>(rt0.c2))) AND (((rt0.c0)IS(rt0.c3)))), ((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2))) NOT NULL)  NULLS LAST, CAST(0.5121345776676309 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3 IN ()))AND(((rt1.c1)IS NOT(rt1.c0)))))AND(rt1.c3))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2)||(rt1.c3))) NOT BETWEEN (((rt1.c0)!=(rt0.c2))) AND (((rt0.c0)IS(rt0.c3)))), ((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2))) NOT NULL)  NULLS LAST, CAST(0.5121345776676309 AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c3 IN ()))AND(((rt1.c1)IS NOT(rt1.c0)))))AND(rt1.c3))) ORDER BY ((((rt1.c2)||(rt1.c3))) NOT BETWEEN (((rt1.c0)<>(rt0.c2))) AND (((rt0.c0)IS(rt0.c3)))), ((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2))) NOT NULL)  NULLS LAST, CAST(0.5121345776676309 AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(rt1.c2))) ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(rt1.c2))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(rt1.c2))) ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(rt1.c2))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(rt1.c2))) ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ());
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c3))!=((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)), ((NULL)-(rt0.c3)), rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c3))<>((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)), ((NULL)-(rt0.c3)), rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c3))!=((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)), ((NULL)-(rt0.c3)), rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c3))<>((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)), ((NULL)-(rt0.c3)), rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c3))!=((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)), ((NULL)-(rt0.c3)), rt0.c3))));
SELECT * FROM rt0, rt1, v0 NOT INDEXED, t0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c3))))<<(CASE rt0.c1  WHEN t0.c0 THEN v0.c0 END))) ORDER BY ((((((((rt1.c3)OR(rt1.c3)))AND(v0.c0)))OR(((((rt1.c2)OR(rt1.c2)))AND(x'')))))AND(((rt0.c2)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c3))))<<(CASE rt0.c1  WHEN t0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, rt1, v0, t0 ORDER BY ((((((((rt1.c3)OR(rt1.c3)))AND(v0.c0)))OR(((((rt1.c2)OR(rt1.c2)))AND(x'')))))AND(((rt0.c2)>>(rt0.c2)))));
SELECT * FROM rt0, rt1, v0 NOT INDEXED, t0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c3))))<<(CASE rt0.c1  WHEN t0.c0 THEN v0.c0 END))) ORDER BY ((((((((rt1.c3)OR(rt1.c3)))AND(v0.c0)))OR(((((rt1.c2)OR(rt1.c2)))AND(x'')))))AND(((rt0.c2)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c3))))<<(CASE rt0.c1  WHEN t0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, rt1, v0, t0 ORDER BY ((((((((rt1.c3)OR(rt1.c3)))AND(v0.c0)))OR(((((rt1.c2)OR(rt1.c2)))AND(x'')))))AND(((rt0.c2)>>(rt0.c2)))));
SELECT * FROM rt0, rt1, v0 NOT INDEXED, t0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c3))))<<(CASE rt0.c1  WHEN t0.c0 THEN v0.c0 END))) ORDER BY ((((((((rt1.c3)OR(rt1.c3)))AND(v0.c0)))OR(((((rt1.c2)OR(rt1.c2)))AND(x'')))))AND(((rt0.c2)>>(rt0.c2))));
SELECT * FROM t0, rt1 WHERE (0.15388818960542705) ORDER BY ABS('-1789412128') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.15388818960542705) IS TRUE)  as count FROM t0, rt1 ORDER BY ABS('-1789412128') DESC  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (0.15388818960542705) ORDER BY ABS('-1789412128') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.15388818960542705) IS TRUE)  as count FROM t0, rt1 ORDER BY ABS('-1789412128') DESC  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (0.15388818960542705) ORDER BY ABS('-1789412128') DESC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (GLOB((NOT (rt1.c3)), ((rt1.c1)-(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB((NOT (rt1.c3)), ((rt1.c1)-(rt1.c0)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (GLOB((NOT (rt1.c3)), ((rt1.c1)-(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB((NOT (rt1.c3)), ((rt1.c1)-(rt1.c0)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (GLOB((NOT (rt1.c3)), ((rt1.c1)-(rt1.c0))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) ORDER BY CASE 0.365860639092792  WHEN UNICODE(rt0.c2) THEN (((rt0.c2))>((rt0.c1))) ELSE rt0.c3 COLLATE BINARY END  NULLS LAST, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CASE 0.365860639092792  WHEN UNICODE(rt0.c2) THEN (((rt0.c2))>((rt0.c1))) ELSE rt0.c3 COLLATE BINARY END  NULLS LAST, rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) ORDER BY CASE 0.365860639092792  WHEN UNICODE(rt0.c2) THEN (((rt0.c2))>((rt0.c1))) ELSE rt0.c3 COLLATE BINARY END  NULLS LAST, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CASE 0.365860639092792  WHEN UNICODE(rt0.c2) THEN (((rt0.c2))>((rt0.c1))) ELSE rt0.c3 COLLATE BINARY END  NULLS LAST, rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)) ORDER BY CASE 0.365860639092792  WHEN UNICODE(rt0.c2) THEN (((rt0.c2))>((rt0.c1))) ELSE rt0.c3 COLLATE BINARY END  NULLS LAST, rt0.c0 ASC  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN NULL THEN (((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) ELSE (- (v0.c0)) END) ORDER BY CASE WHEN ((v0.c2)IS NOT(x'')) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c1)|(v0.c0)) END DESC, (((((((v0.c0)OR(v0.c1)))AND(v0.c1)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC)))>=((((v0.c2)||(v0.c0)), ((v0.c0)<<(v0.c1)), ((v0.c1) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) ELSE (- (v0.c0)) END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY CASE WHEN ((v0.c2)IS NOT(x'')) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c1)|(v0.c0)) END DESC, (((((((v0.c0)OR(v0.c1)))AND(v0.c1)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC)))>=((((v0.c2)||(v0.c0)), ((v0.c0)<<(v0.c1)), ((v0.c1) ISNULL))))  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN NULL THEN (((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) ELSE (- (v0.c0)) END) ORDER BY CASE WHEN ((v0.c2)IS NOT(x'')) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c1)|(v0.c0)) END DESC, (((((((v0.c0)OR(v0.c1)))AND(v0.c1)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC)))>=((((v0.c2)||(v0.c0)), ((v0.c0)<<(v0.c1)), ((v0.c1) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) ELSE (- (v0.c0)) END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY CASE WHEN ((v0.c2)IS NOT(x'')) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c1)|(v0.c0)) END DESC, (((((((v0.c0)OR(v0.c1)))AND(v0.c1)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC)))>=((((v0.c2)||(v0.c0)), ((v0.c0)<<(v0.c1)), ((v0.c1) ISNULL))))  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN NULL THEN (((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) ELSE (- (v0.c0)) END) ORDER BY CASE WHEN ((v0.c2)IS NOT(x'')) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c1)|(v0.c0)) END DESC, (((((((v0.c0)OR(v0.c1)))AND(v0.c1)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC)))>=((((v0.c2)||(v0.c0)), ((v0.c0)<<(v0.c1)), ((v0.c1) ISNULL))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (LOWER(DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c1))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (LOWER(DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c1))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (LOWER(DISTINCT SQLITE_COMPILEOPTION_GET(rt0.c1)));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (((LOWER(rt1.c3))LIKE(((rt1.c3)%(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt1.c3))LIKE(((rt1.c3)%(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, t0, v0);
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (((LOWER(rt1.c3))LIKE(((rt1.c3)%(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt1.c3))LIKE(((rt1.c3)%(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, t0, v0);
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (((LOWER(rt1.c3))LIKE(((rt1.c3)%(rt1.c3)))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST(TRIM(DISTINCT rt0.c0, rt1.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c0, rt1.c2) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(TRIM(DISTINCT rt0.c0, rt1.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c0, rt1.c2) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(TRIM(DISTINCT rt0.c0, rt1.c2) AS REAL));
SELECT * FROM rt1 CROSS JOIN v0 ON rt1.c1 WHERE ((((((v0.c2)=(v0.c2))))>=((SUBSTR(v0.c2, rt1.c0))))) ORDER BY 0xffffffff82fbea44 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2)==(v0.c2))))>=((SUBSTR(v0.c2, rt1.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON rt1.c1 ORDER BY 0xffffffff82fbea44 DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN v0 ON rt1.c1 WHERE ((((((v0.c2)=(v0.c2))))>=((SUBSTR(v0.c2, rt1.c0))))) ORDER BY 0xffffffff82fbea44 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2)==(v0.c2))))>=((SUBSTR(v0.c2, rt1.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON rt1.c1 ORDER BY 0xffffffff82fbea44 DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN v0 ON rt1.c1 WHERE ((((((v0.c2)=(v0.c2))))>=((SUBSTR(v0.c2, rt1.c0))))) ORDER BY 0xffffffff82fbea44 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (rt0.c0 COLLATE RTRIM)) WHERE (json_object(rt0.c2, rt0.c0) COLLATE NOCASE) ORDER BY x'', load_extension((((t0.c0))!=((t0.c0)))), CAST(CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(rt0.c2, rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (rt0.c0 COLLATE RTRIM)) ORDER BY x'', load_extension((((t0.c0))<>((t0.c0)))), CAST(CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (rt0.c0 COLLATE RTRIM)) WHERE (json_object(rt0.c2, rt0.c0) COLLATE NOCASE) ORDER BY x'', load_extension((((t0.c0))!=((t0.c0)))), CAST(CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(rt0.c2, rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (rt0.c0 COLLATE RTRIM)) ORDER BY x'', load_extension((((t0.c0))<>((t0.c0)))), CAST(CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) ASC);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1) IS TRUE) AS BLOB)) ORDER BY (~ (((rt1.c2)<<(rt1.c2)))) ASC, (((((~ (rt1.c3)))AND(((rt1.c0)%(rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2)<<(rt1.c2)))) ASC, (((((~ (rt1.c3)))AND(((rt1.c0)%(rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER))));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1) IS TRUE) AS BLOB)) ORDER BY (~ (((rt1.c2)<<(rt1.c2)))) ASC, (((((~ (rt1.c3)))AND(((rt1.c0)%(rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2)<<(rt1.c2)))) ASC, (((((~ (rt1.c3)))AND(((rt1.c0)%(rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER))));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1) IS TRUE) AS BLOB)) ORDER BY (~ (((rt1.c2)<<(rt1.c2)))) ASC, (((((~ (rt1.c3)))AND(((rt1.c0)%(rt1.c3)))))OR(CAST(rt1.c0 AS INTEGER)));
SELECT ALL * FROM rt0 WHERE ('-1310273090' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('-1310273090' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-1310273090' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('-1310273090' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-1310273090' COLLATE NOCASE);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))) AND (CAST(t0.c0 AS BLOB))) INNER JOIN t0 ON ((CAST(NULL AS BLOB))IS NOT(rt1.c3)) WHERE (CASE (v0.c0 IN ())  WHEN ((t0.c0)<<(v0.c1)) THEN UNLIKELY(DISTINCT v0.c1) ELSE ((((t0.c0)OR(0.46243007868725927)))OR(rt1.c2)) END) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN ((t0.c0) NOTNULL) THEN '' WHEN (+ (rt1.c0)) THEN NULLIF(DISTINCT rt1.c1, rt1.c1) ELSE 'Z' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN ((t0.c0)<<(v0.c1)) THEN UNLIKELY(DISTINCT v0.c1) ELSE ((((t0.c0)OR(0.46243007868725927)))OR(rt1.c2)) END) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))) AND (CAST(t0.c0 AS BLOB))) INNER JOIN t0 ON ((CAST(NULL AS BLOB))IS NOT(rt1.c3)) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN ((t0.c0) NOTNULL) THEN '' WHEN (+ (rt1.c0)) THEN NULLIF(DISTINCT rt1.c1, rt1.c1) ELSE 'Z' END  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))) AND (CAST(t0.c0 AS BLOB))) INNER JOIN t0 ON ((CAST(NULL AS BLOB))IS NOT(rt1.c3)) WHERE (CASE (v0.c0 IN ())  WHEN ((t0.c0)<<(v0.c1)) THEN UNLIKELY(DISTINCT v0.c1) ELSE ((((t0.c0)OR(0.46243007868725927)))OR(rt1.c2)) END) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN ((t0.c0) NOTNULL) THEN '' WHEN (+ (rt1.c0)) THEN NULLIF(DISTINCT rt1.c1, rt1.c1) ELSE 'Z' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN ((t0.c0)<<(v0.c1)) THEN UNLIKELY(DISTINCT v0.c1) ELSE ((((t0.c0)OR(0.46243007868725927)))OR(rt1.c2)) END) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))) AND (CAST(t0.c0 AS BLOB))) INNER JOIN t0 ON ((CAST(NULL AS BLOB))IS NOT(rt1.c3)) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN ((t0.c0) NOTNULL) THEN '' WHEN (+ (rt1.c0)) THEN NULLIF(DISTINCT rt1.c1, rt1.c1) ELSE 'Z' END  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2)))) AND (CAST(t0.c0 AS BLOB))) INNER JOIN t0 ON ((CAST(NULL AS BLOB))IS NOT(rt1.c3)) WHERE (CASE (v0.c0 IN ())  WHEN ((t0.c0)<<(v0.c1)) THEN UNLIKELY(DISTINCT v0.c1) ELSE ((((t0.c0)OR(0.46243007868725927)))OR(rt1.c2)) END) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) WHEN ((t0.c0) NOTNULL) THEN '' WHEN (+ (rt1.c0)) THEN NULLIF(DISTINCT rt1.c1, rt1.c1) ELSE 'Z' END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, rt1, v0 WHERE (CASE WHEN CASE v0.c1  WHEN NULL THEN rt1.c0 END THEN ((rt1.c1)GLOB(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c1  WHEN NULL THEN rt1.c0 END THEN ((rt1.c1)GLOB(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, rt1, v0 WHERE (CASE WHEN CASE v0.c1  WHEN NULL THEN rt1.c0 END THEN ((rt1.c1)GLOB(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c1  WHEN NULL THEN rt1.c0 END THEN ((rt1.c1)GLOB(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, rt1, v0 WHERE (CASE WHEN CASE v0.c1  WHEN NULL THEN rt1.c0 END THEN ((rt1.c1)GLOB(rt0.c2)) END);
SELECT COUNT(*) FROM rt1, t0, rt0, v0 WHERE (CAST(NULL AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0, v0);
SELECT COUNT(*) FROM rt1, t0, rt0, v0 WHERE (CAST(NULL AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0, v0);
SELECT COUNT(*) FROM rt1, t0, rt0, v0 WHERE (CAST(NULL AS BLOB) COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN t0 ON CAST(LOWER(v0.c2) AS REAL) WHERE ((((rt0.c2, x'2771', rt0.c3)) BETWEEN ((CASE WHEN x'' THEN rt0.c2 END, CAST(rt0.c3 AS TEXT), (((t0.c0))<((t0.c0))))) AND ((v0.c2, ((rt0.c3) ISNULL), ((v0.c1)<=(v0.c0)))))) ORDER BY ((((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c0)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, x'2771', rt0.c3)) BETWEEN ((CASE WHEN x'' THEN rt0.c2 END, CAST(rt0.c3 AS TEXT), (((t0.c0))<((t0.c0))))) AND ((v0.c2, ((rt0.c3) ISNULL), ((v0.c1)<=(v0.c0)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON CAST(LOWER(v0.c2) AS REAL) ORDER BY ((((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c0)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c2)))));
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN t0 ON CAST(LOWER(v0.c2) AS REAL) WHERE ((((rt0.c2, x'2771', rt0.c3)) BETWEEN ((CASE WHEN x'' THEN rt0.c2 END, CAST(rt0.c3 AS TEXT), (((t0.c0))<((t0.c0))))) AND ((v0.c2, ((rt0.c3) ISNULL), ((v0.c1)<=(v0.c0)))))) ORDER BY ((((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c0)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, x'2771', rt0.c3)) BETWEEN ((CASE WHEN x'' THEN rt0.c2 END, CAST(rt0.c3 AS TEXT), (((t0.c0))<((t0.c0))))) AND ((v0.c2, ((rt0.c3) ISNULL), ((v0.c1)<=(v0.c0)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON CAST(LOWER(v0.c2) AS REAL) ORDER BY ((((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c0)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c2)))));
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN t0 ON CAST(LOWER(v0.c2) AS REAL) WHERE ((((rt0.c2, x'2771', rt0.c3)) BETWEEN ((CASE WHEN x'' THEN rt0.c2 END, CAST(rt0.c3 AS TEXT), (((t0.c0))<((t0.c0))))) AND ((v0.c2, ((rt0.c3) ISNULL), ((v0.c1)<=(v0.c0)))))) ORDER BY ((((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c0)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c2))));
SELECT ALL * FROM rt1, v0, t0 WHERE (((((rt1.c0))>=((rt1.c3))) IN (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0))>=((rt1.c3))) IN (rt1.c2))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL * FROM rt1, v0, t0 WHERE (((((rt1.c0))>=((rt1.c3))) IN (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0))>=((rt1.c3))) IN (rt1.c2))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL * FROM rt1, v0, t0 WHERE (((((rt1.c0))>=((rt1.c3))) IN (rt1.c2)));
SELECT * FROM rt0 WHERE (2111584609);
SELECT SUM(count) FROM (SELECT ((2111584609) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (2111584609);
SELECT SUM(count) FROM (SELECT ((2111584609) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (2111584609);
SELECT * FROM t0 WHERE (LIKELY(t0.c0 COLLATE RTRIM)) ORDER BY (t0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t0 WHERE (LIKELY(t0.c0 COLLATE RTRIM)) ORDER BY (t0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t0 WHERE (LIKELY(t0.c0 COLLATE RTRIM)) ORDER BY (t0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((v0.c2) NOT NULL))+(((rt0.c1) NOTNULL))) WHERE (((((NULL) ISNULL))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL))AND(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((v0.c2) NOT NULL))+(((rt0.c1) NOTNULL))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((v0.c2) NOT NULL))+(((rt0.c1) NOTNULL))) WHERE (((((NULL) ISNULL))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL))AND(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((v0.c2) NOT NULL))+(((rt0.c1) NOTNULL))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((v0.c2) NOT NULL))+(((rt0.c1) NOTNULL))) WHERE (((((NULL) ISNULL))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c0) BETWEEN (v0.c2) AND (rt1.c0))) NOT NULL) WHERE (v0.c2) ORDER BY (~ (((v0.c1) BETWEEN (rt1.c0) AND (v0.c1)))) DESC  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2))))*(LIKELIHOOD(DISTINCT v0.c0, 0.05544946429246078))) ASC, ((x'') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c0) BETWEEN (v0.c2) AND (rt1.c0))) NOT NULL) ORDER BY (~ (((v0.c1) BETWEEN (rt1.c0) AND (v0.c1)))) DESC  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2))))*(LIKELIHOOD(DISTINCT v0.c0, 0.05544946429246078))) ASC, ((x'') NOTNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c0) BETWEEN (v0.c2) AND (rt1.c0))) NOT NULL) WHERE (v0.c2) ORDER BY (~ (((v0.c1) BETWEEN (rt1.c0) AND (v0.c1)))) DESC  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2))))*(LIKELIHOOD(DISTINCT v0.c0, 0.05544946429246078))) ASC, ((x'') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c0) BETWEEN (v0.c2) AND (rt1.c0))) NOT NULL) ORDER BY (~ (((v0.c1) BETWEEN (rt1.c0) AND (v0.c1)))) DESC  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2))))*(LIKELIHOOD(DISTINCT v0.c0, 0.05544946429246078))) ASC, ((x'') NOTNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((((rt1.c0) BETWEEN (v0.c2) AND (rt1.c0))) NOT NULL) WHERE (v0.c2) ORDER BY (~ (((v0.c1) BETWEEN (rt1.c0) AND (v0.c1)))) DESC  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2))))*(LIKELIHOOD(DISTINCT v0.c0, 0.05544946429246078))) ASC, ((x'') NOTNULL);
SELECT ALL * FROM rt1, v0, rt0 WHERE (CASE WHEN ((((rt1.c1)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt1.c2)<(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c1)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt1.c2)<(rt1.c3)) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE (CASE WHEN ((((rt1.c1)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt1.c2)<(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c1)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt1.c2)<(rt1.c3)) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE (CASE WHEN ((((rt1.c1)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt1.c2)<(rt1.c3)) END);
SELECT ALL COUNT(*) FROM rt1, v0 NATURAL JOIN t0 WHERE (rt1.c2) ORDER BY (((((rt1.c1) IS TRUE)))=((CASE WHEN v0.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN t0 ORDER BY (((((rt1.c1) IS TRUE)))==((CASE WHEN v0.c0 THEN rt1.c2 END))));
SELECT ALL COUNT(*) FROM rt1, v0 NATURAL JOIN t0 WHERE (rt1.c2) ORDER BY (((((rt1.c1) IS TRUE)))=((CASE WHEN v0.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN t0 ORDER BY (((((rt1.c1) IS TRUE)))==((CASE WHEN v0.c0 THEN rt1.c2 END))));
SELECT ALL COUNT(*) FROM rt1, v0 NATURAL JOIN t0 WHERE (rt1.c2) ORDER BY (((((rt1.c1) IS TRUE)))=((CASE WHEN v0.c0 THEN rt1.c2 END)));
SELECT * FROM t0, rt0, v0, rt1 WHERE (((((t0.c0) BETWEEN (rt1.c0) AND (v0.c0))) IS FALSE)) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY DESC, ((('-431719251', x'1080', rt0.c2)) BETWEEN ((((((x'')OR(rt0.c3)))AND(rt1.c2)), ((((v0.c2)OR(rt0.c1)))OR(rt1.c3)), ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)))) AND ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), CAST(rt1.c3 AS NUMERIC), IFNULL(NULL, rt0.c2)))), v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (rt1.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, v0, rt1 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY DESC, ((('-431719251', x'1080', rt0.c2)) BETWEEN ((((((x'')OR(rt0.c3)))AND(rt1.c2)), ((((v0.c2)OR(rt0.c1)))OR(rt1.c3)), ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)))) AND ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), CAST(rt1.c3 AS NUMERIC), IFNULL(NULL, rt0.c2)))), v0.c0);
SELECT * FROM t0, rt0, v0, rt1 WHERE (((((t0.c0) BETWEEN (rt1.c0) AND (v0.c0))) IS FALSE)) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY DESC, ((('-431719251', x'1080', rt0.c2)) BETWEEN ((((((x'')OR(rt0.c3)))AND(rt1.c2)), ((((v0.c2)OR(rt0.c1)))OR(rt1.c3)), ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)))) AND ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), CAST(rt1.c3 AS NUMERIC), IFNULL(NULL, rt0.c2)))), v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (rt1.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, v0, rt1 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY DESC, ((('-431719251', x'1080', rt0.c2)) BETWEEN ((((((x'')OR(rt0.c3)))AND(rt1.c2)), ((((v0.c2)OR(rt0.c1)))OR(rt1.c3)), ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)))) AND ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), CAST(rt1.c3 AS NUMERIC), IFNULL(NULL, rt0.c2)))), v0.c0);
SELECT * FROM t0, rt0, v0, rt1 WHERE (((((t0.c0) BETWEEN (rt1.c0) AND (v0.c0))) IS FALSE)) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY DESC, ((('-431719251', x'1080', rt0.c2)) BETWEEN ((((((x'')OR(rt0.c3)))AND(rt1.c2)), ((((v0.c2)OR(rt0.c1)))OR(rt1.c3)), ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)))) AND ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), CAST(rt1.c3 AS NUMERIC), IFNULL(NULL, rt0.c2)))), v0.c0;
SELECT * FROM v0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 END) BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c2 THEN v0.c0 END) BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 END) BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c2 THEN v0.c0 END) BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 END) BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) AND ((- (v0.c0)))));
SELECT * FROM t0 WHERE (CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN LIKELIHOOD(DISTINCT t0.c0, 0.3988433425684912) THEN (t0.c0 IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN LIKELIHOOD(DISTINCT t0.c0, 0.3988433425684912) THEN (t0.c0 IN (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN LIKELIHOOD(DISTINCT t0.c0, 0.3988433425684912) THEN (t0.c0 IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN LIKELIHOOD(DISTINCT t0.c0, 0.3988433425684912) THEN (t0.c0 IN (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN LIKELIHOOD(DISTINCT t0.c0, 0.3988433425684912) THEN (t0.c0 IN (t0.c0)) END);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((- (rt0.c3)) IN ()) WHERE ((((+ (v0.c0)))<>('跎i?')));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))<>('跎i?'))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((- (rt0.c3)) IN ()));
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((- (rt0.c3)) IN ()) WHERE ((((+ (v0.c0)))<>('跎i?')));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))<>('跎i?'))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((- (rt0.c3)) IN ()));
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((- (rt0.c3)) IN ()) WHERE ((((+ (v0.c0)))<>('跎i?')));
SELECT ALL * FROM v0, rt0, t0 FULL OUTER JOIN rt1 ON ((rt0.c3) IS TRUE) COLLATE NOCASE WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0, t0 FULL OUTER JOIN rt1 ON ((rt0.c3) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0, t0 FULL OUTER JOIN rt1 ON ((rt0.c3) IS TRUE) COLLATE NOCASE WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0, t0 FULL OUTER JOIN rt1 ON ((rt0.c3) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0, t0 FULL OUTER JOIN rt1 ON ((rt0.c3) IS TRUE) COLLATE NOCASE WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON rt1.c3 CROSS JOIN t0 ON CASE ((((v0.c2)AND('')))AND(rt1.c1))  WHEN ((((t0.c0)AND(v0.c0)))OR(t0.c0)) THEN (((rt1.c2, rt1.c0, t0.c0)) BETWEEN ((t0.c0, v0.c2, rt1.c0)) AND ((v0.c0, rt1.c0, v0.c2))) WHEN rt1.c2 THEN ((((rt1.c1)OR(rt1.c0)))AND(v0.c1)) WHEN t0.c0 THEN v0.c2 WHEN rt1.c3 THEN ((rt1.c0) NOT NULL) WHEN '' COLLATE NOCASE THEN v0.c0 END WHERE (CASE UPPER(rt1.c0)  WHEN (rt1.c3 IN ()) THEN (~ ('-341533454')) WHEN ((rt1.c0)*(rt1.c1)) THEN '-341533454' WHEN v0.c1 THEN (v0.c1 IN ()) END) ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (rt1.c2)))<(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(rt1.c0)  WHEN (rt1.c3 IN ()) THEN (~ ('-341533454')) WHEN ((rt1.c0)*(rt1.c1)) THEN '-341533454' WHEN v0.c1 THEN (v0.c1 IN ()) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON rt1.c3 CROSS JOIN t0 ON CASE ((((v0.c2)AND('')))AND(rt1.c1))  WHEN ((((t0.c0)AND(v0.c0)))OR(t0.c0)) THEN (((rt1.c2, rt1.c0, t0.c0)) BETWEEN ((t0.c0, v0.c2, rt1.c0)) AND ((v0.c0, rt1.c0, v0.c2))) WHEN rt1.c2 THEN ((((rt1.c1)OR(rt1.c0)))AND(v0.c1)) WHEN t0.c0 THEN v0.c2 WHEN rt1.c3 THEN ((rt1.c0) NOT NULL) WHEN '' COLLATE NOCASE THEN v0.c0 END ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (rt1.c2)))<(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON rt1.c3 CROSS JOIN t0 ON CASE ((((v0.c2)AND('')))AND(rt1.c1))  WHEN ((((t0.c0)AND(v0.c0)))OR(t0.c0)) THEN (((rt1.c2, rt1.c0, t0.c0)) BETWEEN ((t0.c0, v0.c2, rt1.c0)) AND ((v0.c0, rt1.c0, v0.c2))) WHEN rt1.c2 THEN ((((rt1.c1)OR(rt1.c0)))AND(v0.c1)) WHEN t0.c0 THEN v0.c2 WHEN rt1.c3 THEN ((rt1.c0) NOT NULL) WHEN '' COLLATE NOCASE THEN v0.c0 END WHERE (CASE UPPER(rt1.c0)  WHEN (rt1.c3 IN ()) THEN (~ ('-341533454')) WHEN ((rt1.c0)*(rt1.c1)) THEN '-341533454' WHEN v0.c1 THEN (v0.c1 IN ()) END) ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (rt1.c2)))<(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(rt1.c0)  WHEN (rt1.c3 IN ()) THEN (~ ('-341533454')) WHEN ((rt1.c0)*(rt1.c1)) THEN '-341533454' WHEN v0.c1 THEN (v0.c1 IN ()) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON rt1.c3 CROSS JOIN t0 ON CASE ((((v0.c2)AND('')))AND(rt1.c1))  WHEN ((((t0.c0)AND(v0.c0)))OR(t0.c0)) THEN (((rt1.c2, rt1.c0, t0.c0)) BETWEEN ((t0.c0, v0.c2, rt1.c0)) AND ((v0.c0, rt1.c0, v0.c2))) WHEN rt1.c2 THEN ((((rt1.c1)OR(rt1.c0)))AND(v0.c1)) WHEN t0.c0 THEN v0.c2 WHEN rt1.c3 THEN ((rt1.c0) NOT NULL) WHEN '' COLLATE NOCASE THEN v0.c0 END ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (rt1.c2)))<(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON rt1.c3 CROSS JOIN t0 ON CASE ((((v0.c2)AND('')))AND(rt1.c1))  WHEN ((((t0.c0)AND(v0.c0)))OR(t0.c0)) THEN (((rt1.c2, rt1.c0, t0.c0)) BETWEEN ((t0.c0, v0.c2, rt1.c0)) AND ((v0.c0, rt1.c0, v0.c2))) WHEN rt1.c2 THEN ((((rt1.c1)OR(rt1.c0)))AND(v0.c1)) WHEN t0.c0 THEN v0.c2 WHEN rt1.c3 THEN ((rt1.c0) NOT NULL) WHEN '' COLLATE NOCASE THEN v0.c0 END WHERE (CASE UPPER(rt1.c0)  WHEN (rt1.c3 IN ()) THEN (~ ('-341533454')) WHEN ((rt1.c0)*(rt1.c1)) THEN '-341533454' WHEN v0.c1 THEN (v0.c1 IN ()) END) ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (rt1.c2)))<(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))));
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((((((rt0.c3) NOTNULL), ((x'ab3cf552')>('1711747145')), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))AND(1652192633)))AND(v0.c2))))<((((v0.c0) NOTNULL), 'h''\\r(', NULL)))) ORDER BY ((((((((((((((rt0.c3)OR(rt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOTNULL), ((x'ab3cf552')>('1711747145')), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))AND(1652192633)))AND(v0.c2))))<((((v0.c0) NOTNULL), 'h''\\r(', NULL)))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY ((((((((((((((rt0.c3)OR(rt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c1))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((((((rt0.c3) NOTNULL), ((x'ab3cf552')>('1711747145')), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))AND(1652192633)))AND(v0.c2))))<((((v0.c0) NOTNULL), 'h''\\r(', NULL)))) ORDER BY ((((((((((((((rt0.c3)OR(rt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOTNULL), ((x'ab3cf552')>('1711747145')), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))AND(1652192633)))AND(v0.c2))))<((((v0.c0) NOTNULL), 'h''\\r(', NULL)))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY ((((((((((((((rt0.c3)OR(rt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c1))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((((((rt0.c3) NOTNULL), ((x'ab3cf552')>('1711747145')), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))AND(1652192633)))AND(v0.c2))))<((((v0.c0) NOTNULL), 'h''\\r(', NULL)))) ORDER BY ((((((((((((((rt0.c3)OR(rt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((LIKELY(rt0.c2) IN (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((LIKELY(rt0.c2) IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((LIKELY(rt0.c2) IN (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((LIKELY(rt0.c2) IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((LIKELY(rt0.c2) IN (((rt0.c1) IS TRUE))));
SELECT ALL * FROM rt1, v0, t0, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT ALL * FROM rt1, v0, t0, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT ALL * FROM rt1, v0, t0, rt0 WHERE (rt1.c1);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON 0.6142612354375094 INNER JOIN v0 ON ((((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c1, rt0.c0)) AND ((rt0.c2, v0.c1, rt0.c0)))))>=((CASE t0.c0  WHEN v0.c0 THEN v0.c1 ELSE rt0.c0 END))) WHERE (LIKELY(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c0) IS TRUE))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON 0.6142612354375094 INNER JOIN v0 ON ((((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c1, rt0.c0)) AND ((rt0.c2, v0.c1, rt0.c0)))))>=((CASE t0.c0  WHEN v0.c0 THEN v0.c1 ELSE rt0.c0 END))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON 0.6142612354375094 INNER JOIN v0 ON ((((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c1, rt0.c0)) AND ((rt0.c2, v0.c1, rt0.c0)))))>=((CASE t0.c0  WHEN v0.c0 THEN v0.c1 ELSE rt0.c0 END))) WHERE (LIKELY(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c0) IS TRUE))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON 0.6142612354375094 INNER JOIN v0 ON ((((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c1, rt0.c0)) AND ((rt0.c2, v0.c1, rt0.c0)))))>=((CASE t0.c0  WHEN v0.c0 THEN v0.c1 ELSE rt0.c0 END))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON 0.6142612354375094 INNER JOIN v0 ON ((((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c1, rt0.c0)) AND ((rt0.c2, v0.c1, rt0.c0)))))>=((CASE t0.c0  WHEN v0.c0 THEN v0.c1 ELSE rt0.c0 END))) WHERE (LIKELY(((rt0.c0) IS TRUE)));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2)>(rt1.c1)) AS INTEGER)) ORDER BY CASE WHEN rt1.c3 THEN (rt1.c3 IN (rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)>(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c3 THEN (rt1.c3 IN (rt1.c2)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2)>(rt1.c1)) AS INTEGER)) ORDER BY CASE WHEN rt1.c3 THEN (rt1.c3 IN (rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)>(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c3 THEN (rt1.c3 IN (rt1.c2)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2)>(rt1.c1)) AS INTEGER)) ORDER BY CASE WHEN rt1.c3 THEN (rt1.c3 IN (rt1.c2)) END  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt0 ON rt0.c0 WHERE (((((((rt0.c3)LIKE(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)%((((rt0.c0)) BETWEEN (('A-Sᾝ')) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)LIKE(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON rt0.c0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)%((((rt0.c0)) BETWEEN (('A-Sᾝ')) AND ((rt0.c2))))));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON rt0.c0 WHERE (((((((rt0.c3)LIKE(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)%((((rt0.c0)) BETWEEN (('A-Sᾝ')) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)LIKE(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON rt0.c0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)%((((rt0.c0)) BETWEEN (('A-Sᾝ')) AND ((rt0.c2))))));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON rt0.c0 WHERE (((((((rt0.c3)LIKE(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)%((((rt0.c0)) BETWEEN (('A-Sᾝ')) AND ((rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3))) NOTNULL)) ORDER BY ((LTRIM(v0.c0, 'T8>')) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (UNLIKELY('B-sZf饇7dC'))) ASC, LOWER(rt0.c3 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((LTRIM(v0.c0, 'T8>')) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (UNLIKELY('B-sZf饇7dC'))) ASC, LOWER(rt0.c3 COLLATE RTRIM) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3))) NOTNULL)) ORDER BY ((LTRIM(v0.c0, 'T8>')) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (UNLIKELY('B-sZf饇7dC'))) ASC, LOWER(rt0.c3 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((LTRIM(v0.c0, 'T8>')) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (UNLIKELY('B-sZf饇7dC'))) ASC, LOWER(rt0.c3 COLLATE RTRIM) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3))) NOTNULL)) ORDER BY ((LTRIM(v0.c0, 'T8>')) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (UNLIKELY('B-sZf饇7dC'))) ASC, LOWER(rt0.c3 COLLATE RTRIM) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS REAL));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((NOT (rt0.c0)) IN (((rt1.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c0)) IN (((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((NOT (rt0.c0)) IN (((rt1.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c0)) IN (((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((NOT (rt0.c0)) IN (((rt1.c3) IS FALSE))));
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((t0.c0)OR(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN ())) ORDER BY ((((((((((t0.c0)IS(t0.c0)))OR(0.7716958510529004)))OR(t0.c0 COLLATE RTRIM)))OR(((t0.c0)LIKE(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, ((((t0.c0)||(t0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((((t0.c0)OR(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)IS(t0.c0)))OR(0.7716958510529004)))OR(t0.c0 COLLATE RTRIM)))OR(((t0.c0)LIKE(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, ((((t0.c0)||(t0.c0))) IS TRUE) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((t0.c0)OR(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN ())) ORDER BY ((((((((((t0.c0)IS(t0.c0)))OR(0.7716958510529004)))OR(t0.c0 COLLATE RTRIM)))OR(((t0.c0)LIKE(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, ((((t0.c0)||(t0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((((t0.c0)OR(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)IS(t0.c0)))OR(0.7716958510529004)))OR(t0.c0 COLLATE RTRIM)))OR(((t0.c0)LIKE(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, ((((t0.c0)||(t0.c0))) IS TRUE) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((t0.c0)OR(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN ())) ORDER BY ((((((((((t0.c0)IS(t0.c0)))OR(0.7716958510529004)))OR(t0.c0 COLLATE RTRIM)))OR(((t0.c0)LIKE(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, ((((t0.c0)||(t0.c0))) IS TRUE) DESC;
SELECT ALL * FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST((0xffffffffde046bdc IN ()) AS INTEGER) RIGHT OUTER JOIN v0 ON (((json_remove(rt1.c2, v0.c1, v0.c1, rt0.c1)))<((HEX(rt0.c1)))) WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST((0Xffffffffde046bdc IN ()) AS INTEGER) RIGHT OUTER JOIN v0 ON (((json_remove(rt1.c2, v0.c1, v0.c1, rt0.c1)))<((HEX(rt0.c1)))));
SELECT ALL * FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST((0xffffffffde046bdc IN ()) AS INTEGER) RIGHT OUTER JOIN v0 ON (((json_remove(rt1.c2, v0.c1, v0.c1, rt0.c1)))<((HEX(rt0.c1)))) WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST((0Xffffffffde046bdc IN ()) AS INTEGER) RIGHT OUTER JOIN v0 ON (((json_remove(rt1.c2, v0.c1, v0.c1, rt0.c1)))<((HEX(rt0.c1)))));
SELECT ALL * FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST((0xffffffffde046bdc IN ()) AS INTEGER) RIGHT OUTER JOIN v0 ON (((json_remove(rt1.c2, v0.c1, v0.c1, rt0.c1)))<((HEX(rt0.c1)))) WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (json_array_length(HEX(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_array_length(HEX(DISTINCT rt0.c0))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (json_array_length(HEX(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_array_length(HEX(DISTINCT rt0.c0))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (json_array_length(HEX(DISTINCT rt0.c0)));
SELECT COUNT(*) FROM v0, t0, rt0, rt1 WHERE (((((v0.c2, v0.c0, rt1.c1)) NOT BETWEEN ((0.9668981124867975, t0.c0, v0.c2)) AND ((rt1.c3, rt1.c1, -1293261008))) IN (rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2, v0.c0, rt1.c1)) NOT BETWEEN ((0.9668981124867975, t0.c0, v0.c2)) AND ((rt1.c3, rt1.c1, -1293261008))) IN (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, rt0, rt1);
SELECT COUNT(*) FROM v0, t0, rt0, rt1 WHERE (((((v0.c2, v0.c0, rt1.c1)) NOT BETWEEN ((0.9668981124867975, t0.c0, v0.c2)) AND ((rt1.c3, rt1.c1, -1293261008))) IN (rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2, v0.c0, rt1.c1)) NOT BETWEEN ((0.9668981124867975, t0.c0, v0.c2)) AND ((rt1.c3, rt1.c1, -1293261008))) IN (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, rt0, rt1);
SELECT COUNT(*) FROM v0, t0, rt0, rt1 WHERE (((((v0.c2, v0.c0, rt1.c1)) NOT BETWEEN ((0.9668981124867975, t0.c0, v0.c2)) AND ((rt1.c3, rt1.c1, -1293261008))) IN (rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((0.23452474197446127)OR(v0.c1))) ORDER BY ((CHAR(v0.c1))<=((t0.c0 IN (v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.23452474197446127)OR(v0.c1))) IS TRUE)  as count FROM t0, v0 ORDER BY ((CHAR(v0.c1))<=((t0.c0 IN (v0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((0.23452474197446127)OR(v0.c1))) ORDER BY ((CHAR(v0.c1))<=((t0.c0 IN (v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.23452474197446127)OR(v0.c1))) IS TRUE)  as count FROM t0, v0 ORDER BY ((CHAR(v0.c1))<=((t0.c0 IN (v0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((0.23452474197446127)OR(v0.c1))) ORDER BY ((CHAR(v0.c1))<=((t0.c0 IN (v0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CASE WHEN 0.5602406836844255 THEN v0.c0 ELSE v0.c1 END COLLATE NOCASE WHERE (((((v0.c1)|(v0.c1)))|((((x''))>((v0.c1)))))) ORDER BY CAST(((v0.c1) IS TRUE) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)|(v0.c1)))|((((x''))>((v0.c1)))))) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN v0 ON CASE WHEN 0.5602406836844255 THEN v0.c0 ELSE v0.c1 END COLLATE NOCASE ORDER BY CAST(((v0.c1) IS TRUE) AS REAL) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CASE WHEN 0.5602406836844255 THEN v0.c0 ELSE v0.c1 END COLLATE NOCASE WHERE (((((v0.c1)|(v0.c1)))|((((x''))>((v0.c1)))))) ORDER BY CAST(((v0.c1) IS TRUE) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)|(v0.c1)))|((((x''))>((v0.c1)))))) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN v0 ON CASE WHEN 0.5602406836844255 THEN v0.c0 ELSE v0.c1 END COLLATE NOCASE ORDER BY CAST(((v0.c1) IS TRUE) AS REAL) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CASE WHEN 0.5602406836844255 THEN v0.c0 ELSE v0.c1 END COLLATE NOCASE WHERE (((((v0.c1)|(v0.c1)))|((((x''))>((v0.c1)))))) ORDER BY CAST(((v0.c1) IS TRUE) AS REAL) ASC;
SELECT ALL * FROM rt0, t0, v0, rt1 WHERE (((((rt1.c3 COLLATE BINARY)OR(((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2)))))AND(((rt1.c3)<<(v0.c2))))) ORDER BY UNICODE(rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt1.c3 COLLATE BINARY)OR(((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2)))))AND(((rt1.c3)<<(v0.c2))))) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY UNICODE(rt0.c0 COLLATE RTRIM));
SELECT ALL * FROM rt0, t0, v0, rt1 WHERE (((((rt1.c3 COLLATE BINARY)OR(((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2)))))AND(((rt1.c3)<<(v0.c2))))) ORDER BY UNICODE(rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt1.c3 COLLATE BINARY)OR(((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2)))))AND(((rt1.c3)<<(v0.c2))))) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY UNICODE(rt0.c0 COLLATE RTRIM));
SELECT ALL * FROM rt0, t0, v0, rt1 WHERE (((((rt1.c3 COLLATE BINARY)OR(((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2)))))AND(((rt1.c3)<<(v0.c2))))) ORDER BY UNICODE(rt0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN v0 ON v0.c2 LEFT OUTER JOIN t0 ON ((rt0.c0)*(((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (((((CASE WHEN v0.c2 THEN v0.c0 END)OR(((((((((v0.c1)OR('-1519909624')))OR(v0.c2)))AND(rt1.c0)))AND(0.5587985213732675)))))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c0))))) ORDER BY ((((((((((rt1.c0)<=(rt0.c0)))AND((rt1.c1 IN ()))))AND(((rt0.c1)!=(rt1.c0)))))OR((~ (t0.c0)))))AND(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c2 THEN v0.c0 END)OR(((((((((v0.c1)OR('-1519909624')))OR(v0.c2)))AND(rt1.c0)))AND(0.5587985213732675)))))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON v0.c2 LEFT OUTER JOIN t0 ON ((rt0.c0)*(((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))) ORDER BY ((((((((((rt1.c0)<=(rt0.c0)))AND((rt1.c1 IN ()))))AND(((rt0.c1)<>(rt1.c0)))))OR((~ (t0.c0)))))AND(NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN v0 ON v0.c2 LEFT OUTER JOIN t0 ON ((rt0.c0)*(((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (((((CASE WHEN v0.c2 THEN v0.c0 END)OR(((((((((v0.c1)OR('-1519909624')))OR(v0.c2)))AND(rt1.c0)))AND(0.5587985213732675)))))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c0))))) ORDER BY ((((((((((rt1.c0)<=(rt0.c0)))AND((rt1.c1 IN ()))))AND(((rt0.c1)!=(rt1.c0)))))OR((~ (t0.c0)))))AND(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c2 THEN v0.c0 END)OR(((((((((v0.c1)OR('-1519909624')))OR(v0.c2)))AND(rt1.c0)))AND(0.5587985213732675)))))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON v0.c2 LEFT OUTER JOIN t0 ON ((rt0.c0)*(((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))) ORDER BY ((((((((((rt1.c0)<=(rt0.c0)))AND((rt1.c1 IN ()))))AND(((rt0.c1)<>(rt1.c0)))))OR((~ (t0.c0)))))AND(NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN v0 ON v0.c2 LEFT OUTER JOIN t0 ON ((rt0.c0)*(((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (((((CASE WHEN v0.c2 THEN v0.c0 END)OR(((((((((v0.c1)OR('-1519909624')))OR(v0.c2)))AND(rt1.c0)))AND(0.5587985213732675)))))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c0))))) ORDER BY ((((((((((rt1.c0)<=(rt0.c0)))AND((rt1.c1 IN ()))))AND(((rt0.c1)!=(rt1.c0)))))OR((~ (t0.c0)))))AND(NULL)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c2) BETWEEN (v0.c0) AND (((v0.c2)||(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c2) BETWEEN (v0.c0) AND (((v0.c2)||(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2) BETWEEN (v0.c0) AND (((v0.c2)||(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c2) BETWEEN (v0.c0) AND (((v0.c2)||(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2) BETWEEN (v0.c0) AND (((v0.c2)||(v0.c2)))));
SELECT ALL * FROM v0, rt0 WHERE ((json_patch(rt0.c1, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_patch(rt0.c1, rt0.c1) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((json_patch(rt0.c1, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_patch(rt0.c1, rt0.c1) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((json_patch(rt0.c1, rt0.c1) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c2)))||(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c2)))||(((v0.c1) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c2)))||(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c2)))||(((v0.c1) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c2)))||(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt1.c0))) NOT BETWEEN (((rt0.c3)/(rt0.c0))) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))OR(rt1.c0))) NOT BETWEEN (((rt0.c3)/(rt0.c0))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt1.c0))) NOT BETWEEN (((rt0.c3)/(rt0.c0))) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))OR(rt1.c0))) NOT BETWEEN (((rt0.c3)/(rt0.c0))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON rt1.c0 COLLATE NOCASE WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt1.c0))) NOT BETWEEN (((rt0.c3)/(rt0.c0))) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt1.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt1.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt1.c0 AS TEXT) AS NUMERIC));
SELECT ALL * FROM rt0, t0 WHERE (((CAST(rt0.c3 AS BLOB))>=(((rt0.c0)=(rt0.c3))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB))>=(((rt0.c0)==(rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((CAST(rt0.c3 AS BLOB))>=(((rt0.c0)=(rt0.c3))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB))>=(((rt0.c0)==(rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((CAST(rt0.c3 AS BLOB))>=(((rt0.c0)=(rt0.c3))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (((((v0.c0 IN ()), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((v0.c1))), v0.c1))==(((NOT (rt0.c1)), '865932547', (+ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ()), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((v0.c1))), v0.c1))==(((NOT (rt0.c1)), '865932547', (+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (((((v0.c0 IN ()), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((v0.c1))), v0.c1))==(((NOT (rt0.c1)), '865932547', (+ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ()), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((v0.c1))), v0.c1))==(((NOT (rt0.c1)), '865932547', (+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (((((v0.c0 IN ()), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((v0.c1))), v0.c1))==(((NOT (rt0.c1)), '865932547', (+ (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((TIME(rt1.c3, NULL, rt0.c1, rt0.c3, v0.c1)) IS TRUE)) ORDER BY ((((0.13214545200785577)AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(CAST(rt1.c1 AS NUMERIC))) ASC, ((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))||(CASE rt1.c3  WHEN v0.c2 THEN v0.c2 ELSE rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TIME(rt1.c3, NULL, rt0.c1, rt0.c3, v0.c1)) IS TRUE)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((0.13214545200785577)AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(CAST(rt1.c1 AS NUMERIC))) ASC, ((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))||(CASE rt1.c3  WHEN v0.c2 THEN v0.c2 ELSE rt0.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((TIME(rt1.c3, NULL, rt0.c1, rt0.c3, v0.c1)) IS TRUE)) ORDER BY ((((0.13214545200785577)AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(CAST(rt1.c1 AS NUMERIC))) ASC, ((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))||(CASE rt1.c3  WHEN v0.c2 THEN v0.c2 ELSE rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TIME(rt1.c3, NULL, rt0.c1, rt0.c3, v0.c1)) IS TRUE)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((0.13214545200785577)AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(CAST(rt1.c1 AS NUMERIC))) ASC, ((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))||(CASE rt1.c3  WHEN v0.c2 THEN v0.c2 ELSE rt0.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((TIME(rt1.c3, NULL, rt0.c1, rt0.c3, v0.c1)) IS TRUE)) ORDER BY ((((0.13214545200785577)AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(CAST(rt1.c1 AS NUMERIC))) ASC, ((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))||(CASE rt1.c3  WHEN v0.c2 THEN v0.c2 ELSE rt0.c3 END))  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((- (rt0.c1))) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (((rt0.c2)=(x'')))) WHERE (((((rt0.c3)LIKE(rt1.c0)))-(rt0.c1))) ORDER BY NULL  NULLS LAST, (NOT (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)LIKE(rt1.c0)))-(rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((- (rt0.c1))) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (((rt0.c2)==(x'')))) ORDER BY NULL  NULLS LAST, (NOT (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((- (rt0.c1))) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (((rt0.c2)=(x'')))) WHERE (((((rt0.c3)LIKE(rt1.c0)))-(rt0.c1))) ORDER BY NULL  NULLS LAST, (NOT (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)LIKE(rt1.c0)))-(rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((- (rt0.c1))) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (((rt0.c2)==(x'')))) ORDER BY NULL  NULLS LAST, (NOT (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((- (rt0.c1))) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (((rt0.c2)=(x'')))) WHERE (((((rt0.c3)LIKE(rt1.c0)))-(rt0.c1))) ORDER BY NULL  NULLS LAST, (NOT (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM t0, v0 INNER JOIN rt1 ON ((ABS(DISTINCT v0.c1)) IS TRUE) WHERE ((- (CASE WHEN v0.c2 THEN rt1.c1 WHEN rt1.c3 THEN NULL WHEN NULL THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN v0.c2 THEN rt1.c1 WHEN rt1.c3 THEN NULL WHEN NULL THEN v0.c0 END))) IS TRUE)  as count FROM t0, v0 INNER JOIN rt1 ON ((ABS(DISTINCT v0.c1)) IS TRUE));
SELECT * FROM t0, v0 INNER JOIN rt1 ON ((ABS(DISTINCT v0.c1)) IS TRUE) WHERE ((- (CASE WHEN v0.c2 THEN rt1.c1 WHEN rt1.c3 THEN NULL WHEN NULL THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN v0.c2 THEN rt1.c1 WHEN rt1.c3 THEN NULL WHEN NULL THEN v0.c0 END))) IS TRUE)  as count FROM t0, v0 INNER JOIN rt1 ON ((ABS(DISTINCT v0.c1)) IS TRUE));
SELECT * FROM t0, v0 INNER JOIN rt1 ON ((ABS(DISTINCT v0.c1)) IS TRUE) WHERE ((- (CASE WHEN v0.c2 THEN rt1.c1 WHEN rt1.c3 THEN NULL WHEN NULL THEN v0.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (((rt0.c3 COLLATE BINARY))=(((((x'', rt0.c1, rt0.c3))<=((rt0.c3, rt0.c3, t0.c0)))))) WHERE (((((((rt0.c2))<=((rt0.c0)))))>((CAST(rt0.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2))<=((rt0.c0)))))>((CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((rt0.c3 COLLATE BINARY))==(((((x'', rt0.c1, rt0.c3))<=((rt0.c3, rt0.c3, t0.c0)))))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (((rt0.c3 COLLATE BINARY))=(((((x'', rt0.c1, rt0.c3))<=((rt0.c3, rt0.c3, t0.c0)))))) WHERE (((((((rt0.c2))<=((rt0.c0)))))>((CAST(rt0.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2))<=((rt0.c0)))))>((CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((rt0.c3 COLLATE BINARY))==(((((x'', rt0.c1, rt0.c3))<=((rt0.c3, rt0.c3, t0.c0)))))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (((rt0.c3 COLLATE BINARY))=(((((x'', rt0.c1, rt0.c3))<=((rt0.c3, rt0.c3, t0.c0)))))) WHERE (((((((rt0.c2))<=((rt0.c0)))))>((CAST(rt0.c1 AS BLOB)))));
SELECT ALL * FROM rt0, v0, rt1, t0 WHERE (((((LTRIM(t0.c0, rt1.c2))AND((- (rt1.c3)))))OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST(CASE v0.c2  WHEN rt0.c0 THEN 0.26751878324053546 WHEN rt0.c3 THEN rt1.c1 WHEN v0.c2 THEN v0.c1 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LTRIM(t0.c0, rt1.c2))AND((- (rt1.c3)))))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY CAST(CASE v0.c2  WHEN rt0.c0 THEN 0.26751878324053546 WHEN rt0.c3 THEN rt1.c1 WHEN v0.c2 THEN v0.c1 END AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, v0, rt1, t0 WHERE (((((LTRIM(t0.c0, rt1.c2))AND((- (rt1.c3)))))OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST(CASE v0.c2  WHEN rt0.c0 THEN 0.26751878324053546 WHEN rt0.c3 THEN rt1.c1 WHEN v0.c2 THEN v0.c1 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LTRIM(t0.c0, rt1.c2))AND((- (rt1.c3)))))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY CAST(CASE v0.c2  WHEN rt0.c0 THEN 0.26751878324053546 WHEN rt0.c3 THEN rt1.c1 WHEN v0.c2 THEN v0.c1 END AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, v0, rt1, t0 WHERE (((((LTRIM(t0.c0, rt1.c2))AND((- (rt1.c3)))))OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST(CASE v0.c2  WHEN rt0.c0 THEN 0.26751878324053546 WHEN rt0.c3 THEN rt1.c1 WHEN v0.c2 THEN v0.c1 END AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 NATURAL JOIN v0 WHERE (-2.13541892E9 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-2.13541892E9 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, rt1 NOT INDEXED NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 NATURAL JOIN v0 WHERE (-2.13541892E9 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-2.13541892E9 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, rt1 NOT INDEXED NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 NATURAL JOIN v0 WHERE (-2.13541892E9 COLLATE BINARY);
SELECT * FROM rt1, v0 WHERE (((((rt1.c2)<('-431788739')))AND(CAST(1113654496 AS TEXT)))) ORDER BY (+ (((rt1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<('-431788739')))AND(CAST(1113654496 AS TEXT)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (+ (((rt1.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (((((rt1.c2)<('-431788739')))AND(CAST(1113654496 AS TEXT)))) ORDER BY (+ (((rt1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<('-431788739')))AND(CAST(1113654496 AS TEXT)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (+ (((rt1.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (((((rt1.c2)<('-431788739')))AND(CAST(1113654496 AS TEXT)))) ORDER BY (+ (((rt1.c0) NOT NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((x'a5d5')*(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'a5d5')*(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((x'a5d5')*(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'a5d5')*(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((x'a5d5')*(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((rt1.c1 COLLATE BINARY)|((+ (rt1.c2)))) LEFT OUTER JOIN rt1 ON DATETIME(((v0.c1) NOT BETWEEN (NULL) AND (rt1.c1)), x'', CAST(v0.c1 AS BLOB)) WHERE ((((v0.c2 IN ()))IS NOT((rt1.c0 IN ())))) ORDER BY ((((0.29823760145489064)>>(rt1.c3))) IS FALSE) ASC, LOWER(CAST(rt1.c2 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))IS NOT((rt1.c0 IN ())))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((rt1.c1 COLLATE BINARY)|((+ (rt1.c2)))) LEFT OUTER JOIN rt1 ON DATETIME(((v0.c1) NOT BETWEEN (NULL) AND (rt1.c1)), x'', CAST(v0.c1 AS BLOB)) ORDER BY ((((0.29823760145489064)>>(rt1.c3))) IS FALSE) ASC, LOWER(CAST(rt1.c2 AS TEXT)) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((rt1.c1 COLLATE BINARY)|((+ (rt1.c2)))) LEFT OUTER JOIN rt1 ON DATETIME(((v0.c1) NOT BETWEEN (NULL) AND (rt1.c1)), x'', CAST(v0.c1 AS BLOB)) WHERE ((((v0.c2 IN ()))IS NOT((rt1.c0 IN ())))) ORDER BY ((((0.29823760145489064)>>(rt1.c3))) IS FALSE) ASC, LOWER(CAST(rt1.c2 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))IS NOT((rt1.c0 IN ())))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((rt1.c1 COLLATE BINARY)|((+ (rt1.c2)))) LEFT OUTER JOIN rt1 ON DATETIME(((v0.c1) NOT BETWEEN (NULL) AND (rt1.c1)), x'', CAST(v0.c1 AS BLOB)) ORDER BY ((((0.29823760145489064)>>(rt1.c3))) IS FALSE) ASC, LOWER(CAST(rt1.c2 AS TEXT)) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))/(rt1.c0 COLLATE RTRIM)) WHERE (((((((((((rt1.c3)OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)))|((((rt1.c3))>((rt1.c2)))))) ORDER BY (- (rt1.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3)OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)))|((((rt1.c3))>((rt1.c2)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))/(rt1.c0 COLLATE RTRIM)) ORDER BY (- (rt1.c3)) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))/(rt1.c0 COLLATE RTRIM)) WHERE (((((((((((rt1.c3)OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)))|((((rt1.c3))>((rt1.c2)))))) ORDER BY (- (rt1.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3)OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)))|((((rt1.c3))>((rt1.c2)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))/(rt1.c0 COLLATE RTRIM)) ORDER BY (- (rt1.c3)) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))/(rt1.c0 COLLATE RTRIM)) WHERE (((((((((((rt1.c3)OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)))|((((rt1.c3))>((rt1.c2)))))) ORDER BY (- (rt1.c3)) COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE (((((((((CAST(x'' AS TEXT))OR(((t0.c0) IS FALSE))))AND(HEX(DISTINCT t0.c0))))OR(t0.c0)))OR((+ (t0.c0))))) ORDER BY (NOT (t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(x'' AS TEXT))OR(((t0.c0) IS FALSE))))AND(HEX(DISTINCT t0.c0))))OR(t0.c0)))OR((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c0)) ASC);
SELECT ALL * FROM t0 WHERE (((((((((CAST(x'' AS TEXT))OR(((t0.c0) IS FALSE))))AND(HEX(DISTINCT t0.c0))))OR(t0.c0)))OR((+ (t0.c0))))) ORDER BY (NOT (t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(x'' AS TEXT))OR(((t0.c0) IS FALSE))))AND(HEX(DISTINCT t0.c0))))OR(t0.c0)))OR((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c0)) ASC);
SELECT ALL * FROM t0 WHERE (((((((((CAST(x'' AS TEXT))OR(((t0.c0) IS FALSE))))AND(HEX(DISTINCT t0.c0))))OR(t0.c0)))OR((+ (t0.c0))))) ORDER BY (NOT (t0.c0)) ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)!=(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)!=(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)!=(rt0.c1))) NOT NULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(v0.c1)))OR(rt0.c2)))&(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON 'fѵ9䋒' WHERE (((((rt0.c2)<<(v0.c2)))>>(CAST(rt0.c0 AS REAL)))) ORDER BY ((rt0.c3)<(v0.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<(v0.c2)))>>(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(v0.c1)))OR(rt0.c2)))&(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON 'fѵ9䋒' ORDER BY ((rt0.c3)<(v0.c1)) COLLATE NOCASE ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(v0.c1)))OR(rt0.c2)))&(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON 'fѵ9䋒' WHERE (((((rt0.c2)<<(v0.c2)))>>(CAST(rt0.c0 AS REAL)))) ORDER BY ((rt0.c3)<(v0.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<(v0.c2)))>>(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(v0.c1)))OR(rt0.c2)))&(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON 'fѵ9䋒' ORDER BY ((rt0.c3)<(v0.c1)) COLLATE NOCASE ASC);
SELECT ALL * FROM t0, rt1 WHERE ((+ (LOWER(rt1.c0)))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(rt1.c0)))) IS TRUE)  as count FROM t0, rt1 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t0, rt1 WHERE ((+ (LOWER(rt1.c0)))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(rt1.c0)))) IS TRUE)  as count FROM t0, rt1 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t0, rt1 WHERE ((+ (LOWER(rt1.c0)))) ORDER BY t0.c0 DESC;
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (((rt1.c1)IS(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)IS(x''))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (((rt1.c1)IS(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)IS(x''))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (((rt1.c1)IS(x'')));
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN rt1 WHERE ((((t0.c0)=(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)==(rt1.c1)) IN ())) IS TRUE)  as count FROM v0, t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN rt1 WHERE ((((t0.c0)=(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)==(rt1.c1)) IN ())) IS TRUE)  as count FROM v0, t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN rt1 WHERE ((((t0.c0)=(rt1.c1)) IN ()));
SELECT * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((v0.c1 IN ()) IN ()) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT (~ (v0.c2)), (rt1.c2 IN ())) WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.4286185667704834))/(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c2, 0.4286185667704834))/(t0.c0))) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((v0.c1 IN ()) IN ()) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT (~ (v0.c2)), (rt1.c2 IN ())));
SELECT * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((v0.c1 IN ()) IN ()) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT (~ (v0.c2)), (rt1.c2 IN ())) WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.4286185667704834))/(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c2, 0.4286185667704834))/(t0.c0))) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((v0.c1 IN ()) IN ()) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT (~ (v0.c2)), (rt1.c2 IN ())));
SELECT * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((v0.c1 IN ()) IN ()) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT (~ (v0.c2)), (rt1.c2 IN ())) WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.4286185667704834))/(t0.c0)));
SELECT * FROM rt1, v0, rt0, t0 WHERE ((((((rt0.c2)==(rt0.c2)), CAST(t0.c0 AS NUMERIC), CAST(rt0.c3 AS BLOB)))==(((((rt1.c0))<((v0.c2))), ((v0.c2) BETWEEN (v0.c1) AND (rt0.c3)), v0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)==(rt0.c2)), CAST(t0.c0 AS NUMERIC), CAST(rt0.c3 AS BLOB)))==(((((rt1.c0))<((v0.c2))), ((v0.c2) BETWEEN (v0.c1) AND (rt0.c3)), v0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1, v0, rt0, t0 NOT INDEXED);
SELECT * FROM rt1, v0, rt0, t0 WHERE ((((((rt0.c2)==(rt0.c2)), CAST(t0.c0 AS NUMERIC), CAST(rt0.c3 AS BLOB)))==(((((rt1.c0))<((v0.c2))), ((v0.c2) BETWEEN (v0.c1) AND (rt0.c3)), v0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)==(rt0.c2)), CAST(t0.c0 AS NUMERIC), CAST(rt0.c3 AS BLOB)))==(((((rt1.c0))<((v0.c2))), ((v0.c2) BETWEEN (v0.c1) AND (rt0.c3)), v0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1, v0, rt0, t0 NOT INDEXED);
SELECT * FROM rt1, v0, rt0, t0 WHERE ((((((rt0.c2)==(rt0.c2)), CAST(t0.c0 AS NUMERIC), CAST(rt0.c3 AS BLOB)))==(((((rt1.c0))<((v0.c2))), ((v0.c2) BETWEEN (v0.c1) AND (rt0.c3)), v0.c1 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN v0 ON v0.c2 WHERE (ABS(DISTINCT UPPER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT UPPER(DISTINCT v0.c0))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN v0 ON v0.c2);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN v0 ON v0.c2 WHERE (ABS(DISTINCT UPPER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT UPPER(DISTINCT v0.c0))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN v0 ON v0.c2);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN v0 ON v0.c2 WHERE (ABS(DISTINCT UPPER(DISTINCT v0.c0)));
SELECT COUNT(*) FROM v0, rt1, t0, rt0 WHERE ((((((((((((rt1.c2))<((rt0.c0))))OR(((rt0.c0)>=(rt1.c0)))))AND(((((rt1.c3)AND(v0.c0)))AND(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY (- ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2))<((rt0.c0))))OR(((rt0.c0)>=(rt1.c0)))))AND(((((rt1.c3)AND(v0.c0)))AND(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt1, t0, rt0 ORDER BY (- ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, t0, rt0 WHERE ((((((((((((rt1.c2))<((rt0.c0))))OR(((rt0.c0)>=(rt1.c0)))))AND(((((rt1.c3)AND(v0.c0)))AND(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY (- ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2))<((rt0.c0))))OR(((rt0.c0)>=(rt1.c0)))))AND(((((rt1.c3)AND(v0.c0)))AND(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt1, t0, rt0 ORDER BY (- ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, t0, rt0 WHERE ((((((((((((rt1.c2))<((rt0.c0))))OR(((rt0.c0)>=(rt1.c0)))))AND(((((rt1.c3)AND(v0.c0)))AND(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY (- ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c1))))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN t0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN t0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN t0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((- (t0.c0)))OR((NOT (rt1.c2)))))AND((+ (0x288772bf)))));
SELECT SUM(count) FROM (SELECT (((((((- (t0.c0)))OR((NOT (rt1.c2)))))AND((+ (0X288772bf))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((- (t0.c0)))OR((NOT (rt1.c2)))))AND((+ (0x288772bf)))));
SELECT SUM(count) FROM (SELECT (((((((- (t0.c0)))OR((NOT (rt1.c2)))))AND((+ (0X288772bf))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((- (t0.c0)))OR((NOT (rt1.c2)))))AND((+ (0x288772bf)))));
SELECT * FROM v0, t0, rt1, rt0 WHERE (((rt0.c0)==(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (((rt0.c0)==(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (((rt0.c0)==(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0, rt1, v0 NOT INDEXED WHERE ((((((rt0.c0) NOT NULL)))<((CAST(rt0.c0 AS REAL))))) ORDER BY (- ((NOT (rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT NULL)))<((CAST(rt0.c0 AS REAL))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (- ((NOT (rt1.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, v0 NOT INDEXED WHERE ((((((rt0.c0) NOT NULL)))<((CAST(rt0.c0 AS REAL))))) ORDER BY (- ((NOT (rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT NULL)))<((CAST(rt0.c0 AS REAL))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (- ((NOT (rt1.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, v0 NOT INDEXED WHERE ((((((rt0.c0) NOT NULL)))<((CAST(rt0.c0 AS REAL))))) ORDER BY (- ((NOT (rt1.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (('*4Jr') IS FALSE) WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))||((NOT (t0.c0))))) ORDER BY MIN(((((v0.c2)OR(v0.c2)))AND(v0.c0)), ((x'6b9f')/(x'20f5'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))||((NOT (t0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (('*4Jr') IS FALSE) ORDER BY MIN(((((v0.c2)OR(v0.c2)))AND(v0.c0)), ((x'6b9f')/(x'20f5'))) ASC);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (('*4Jr') IS FALSE) WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))||((NOT (t0.c0))))) ORDER BY MIN(((((v0.c2)OR(v0.c2)))AND(v0.c0)), ((x'6b9f')/(x'20f5'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))||((NOT (t0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (('*4Jr') IS FALSE) ORDER BY MIN(((((v0.c2)OR(v0.c2)))AND(v0.c0)), ((x'6b9f')/(x'20f5'))) ASC);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (('*4Jr') IS FALSE) WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))||((NOT (t0.c0))))) ORDER BY MIN(((((v0.c2)OR(v0.c2)))AND(v0.c0)), ((x'6b9f')/(x'20f5'))) ASC;
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0 WHERE ((((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)) IN (((rt0.c2)IS(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)) IN (((rt0.c2)IS(v0.c1))))) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0 WHERE ((((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)) IN (((rt0.c2)IS(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)) IN (((rt0.c2)IS(v0.c1))))) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0 WHERE ((((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)) IN (((rt0.c2)IS(v0.c1)))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (TIME(rt1.c2, v0.c1, v0.c2)))) ORDER BY (((((v0.c0) NOT NULL)))>=((v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (TIME(rt1.c2, v0.c1, v0.c2)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((((v0.c0) NOT NULL)))>=((v0.c0))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (TIME(rt1.c2, v0.c1, v0.c2)))) ORDER BY (((((v0.c0) NOT NULL)))>=((v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (TIME(rt1.c2, v0.c1, v0.c2)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((((v0.c0) NOT NULL)))>=((v0.c0))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (TIME(rt1.c2, v0.c1, v0.c2)))) ORDER BY (((((v0.c0) NOT NULL)))>=((v0.c0)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((CASE WHEN v0.c1 THEN x'' END)LIKE(v0.c0)) WHERE (((TIME(t0.c0, v0.c0, NULL, v0.c1, v0.c2))%('482470573'))) ORDER BY (((x'')) BETWEEN ((((v0.c1) NOT BETWEEN (x'ccd88e2c') AND (t0.c0)))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TIME(t0.c0, v0.c0, NULL, v0.c1, v0.c2))%('482470573'))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((CASE WHEN v0.c1 THEN x'' END)LIKE(v0.c0)) ORDER BY (((x'')) BETWEEN ((((v0.c1) NOT BETWEEN (x'ccd88e2c') AND (t0.c0)))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((CASE WHEN v0.c1 THEN x'' END)LIKE(v0.c0)) WHERE (((TIME(t0.c0, v0.c0, NULL, v0.c1, v0.c2))%('482470573'))) ORDER BY (((x'')) BETWEEN ((((v0.c1) NOT BETWEEN (x'ccd88e2c') AND (t0.c0)))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TIME(t0.c0, v0.c0, NULL, v0.c1, v0.c2))%('482470573'))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((CASE WHEN v0.c1 THEN x'' END)LIKE(v0.c0)) ORDER BY (((x'')) BETWEEN ((((v0.c1) NOT BETWEEN (x'ccd88e2c') AND (t0.c0)))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((CASE WHEN v0.c1 THEN x'' END)LIKE(v0.c0)) WHERE (((TIME(t0.c0, v0.c0, NULL, v0.c1, v0.c2))%('482470573'))) ORDER BY (((x'')) BETWEEN ((((v0.c1) NOT BETWEEN (x'ccd88e2c') AND (t0.c0)))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON (~ (rt1.c3)) COLLATE RTRIM FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 END COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((SQLITE_SOURCE_ID())>(v0.c0 COLLATE RTRIM)) WHERE ('6V^R') ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c3 ELSE (((rt0.c0))=((rt1.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('6V^R') IS TRUE)  as count FROM t0 INNER JOIN v0 ON (~ (rt1.c3)) COLLATE RTRIM FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 END COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((SQLITE_SOURCE_ID())>(v0.c0 COLLATE RTRIM)) ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c3 ELSE (((rt0.c0))==((rt1.c1))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON (~ (rt1.c3)) COLLATE RTRIM FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 END COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((SQLITE_SOURCE_ID())>(v0.c0 COLLATE RTRIM)) WHERE ('6V^R') ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c3 ELSE (((rt0.c0))=((rt1.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('6V^R') IS TRUE)  as count FROM t0 INNER JOIN v0 ON (~ (rt1.c3)) COLLATE RTRIM FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 END COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((SQLITE_SOURCE_ID())>(v0.c0 COLLATE RTRIM)) ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c3 ELSE (((rt0.c0))==((rt1.c1))) END  NULLS FIRST);
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON CASE WHEN (~ ('*4jr')) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) END WHERE ((NOT ('1041193876')));
SELECT SUM(count) FROM (SELECT (((NOT ('1041193876'))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON CASE WHEN (~ ('*4jr')) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) END);
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON CASE WHEN (~ ('*4jr')) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) END WHERE ((NOT ('1041193876')));
SELECT SUM(count) FROM (SELECT (((NOT ('1041193876'))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON CASE WHEN (~ ('*4jr')) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) END);
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON CASE WHEN (~ ('*4jr')) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) END WHERE ((NOT ('1041193876')));
SELECT COUNT(*) FROM rt0, t0, v0 NOT INDEXED, rt1 WHERE (((rt0.c3 COLLATE NOCASE)>>('10632807'))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt1.c3) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)>>('10632807'))) IS TRUE)  as count FROM rt0, t0, v0 NOT INDEXED, rt1 ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt1.c3) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, v0 NOT INDEXED, rt1 WHERE (((rt0.c3 COLLATE NOCASE)>>('10632807'))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt1.c3) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)>>('10632807'))) IS TRUE)  as count FROM rt0, t0, v0 NOT INDEXED, rt1 ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt1.c3) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, v0 NOT INDEXED, rt1 WHERE (((rt0.c3 COLLATE NOCASE)>>('10632807'))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt1.c3) AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (~ (CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c3 ELSE rt1.c1 END)) WHERE (((((((((((0.06612642506602684)LIKE(v0.c0)))AND(v0.c0 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(((v0.c1) NOTNULL))))AND(NULLIF(DISTINCT rt1.c0, rt1.c0)))) ORDER BY ((((x'265e') NOT NULL))!=(CAST(v0.c1 AS BLOB))) ASC, ((((v0.c1) BETWEEN (v0.c1) AND (rt1.c0))) NOT BETWEEN ((((rt1.c1))<((v0.c1)))) AND ((((((((('')AND(rt1.c1)))OR(v0.c1)))OR(v0.c2)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.06612642506602684)LIKE(v0.c0)))AND(v0.c0 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(((v0.c1) NOTNULL))))AND(NULLIF(DISTINCT rt1.c0, rt1.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (~ (CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c3 ELSE rt1.c1 END)) ORDER BY ((((x'265e') NOT NULL))!=(CAST(v0.c1 AS BLOB))) ASC, ((((v0.c1) BETWEEN (v0.c1) AND (rt1.c0))) NOT BETWEEN ((((rt1.c1))<((v0.c1)))) AND ((((((((('')AND(rt1.c1)))OR(v0.c1)))OR(v0.c2)))AND(rt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (~ (CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c3 ELSE rt1.c1 END)) WHERE (((((((((((0.06612642506602684)LIKE(v0.c0)))AND(v0.c0 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(((v0.c1) NOTNULL))))AND(NULLIF(DISTINCT rt1.c0, rt1.c0)))) ORDER BY ((((x'265e') NOT NULL))!=(CAST(v0.c1 AS BLOB))) ASC, ((((v0.c1) BETWEEN (v0.c1) AND (rt1.c0))) NOT BETWEEN ((((rt1.c1))<((v0.c1)))) AND ((((((((('')AND(rt1.c1)))OR(v0.c1)))OR(v0.c2)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.06612642506602684)LIKE(v0.c0)))AND(v0.c0 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(((v0.c1) NOTNULL))))AND(NULLIF(DISTINCT rt1.c0, rt1.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (~ (CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c3 ELSE rt1.c1 END)) ORDER BY ((((x'265e') NOT NULL))!=(CAST(v0.c1 AS BLOB))) ASC, ((((v0.c1) BETWEEN (v0.c1) AND (rt1.c0))) NOT BETWEEN ((((rt1.c1))<((v0.c1)))) AND ((((((((('')AND(rt1.c1)))OR(v0.c1)))OR(v0.c2)))AND(rt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (~ (CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c3 ELSE rt1.c1 END)) WHERE (((((((((((0.06612642506602684)LIKE(v0.c0)))AND(v0.c0 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(((v0.c1) NOTNULL))))AND(NULLIF(DISTINCT rt1.c0, rt1.c0)))) ORDER BY ((((x'265e') NOT NULL))!=(CAST(v0.c1 AS BLOB))) ASC, ((((v0.c1) BETWEEN (v0.c1) AND (rt1.c0))) NOT BETWEEN ((((rt1.c1))<((v0.c1)))) AND ((((((((('')AND(rt1.c1)))OR(v0.c1)))OR(v0.c2)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, v0 CROSS JOIN t0 ON CAST(NULL AS REAL) WHERE (((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))AND(v0.c1)))AND(rt1.c1)))-(((((v0.c1)AND(rt1.c1)))OR('[]'))))) ORDER BY ((((v0.c2)|(v0.c2)))AND((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))AND(v0.c1)))AND(rt1.c1)))-(((((v0.c1)AND(rt1.c1)))OR('[]'))))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN t0 ON CAST(NULL AS REAL) ORDER BY ((((v0.c2)|(v0.c2)))AND((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 CROSS JOIN t0 ON CAST(NULL AS REAL) WHERE (((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))AND(v0.c1)))AND(rt1.c1)))-(((((v0.c1)AND(rt1.c1)))OR('[]'))))) ORDER BY ((((v0.c2)|(v0.c2)))AND((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))AND(v0.c1)))AND(rt1.c1)))-(((((v0.c1)AND(rt1.c1)))OR('[]'))))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN t0 ON CAST(NULL AS REAL) ORDER BY ((((v0.c2)|(v0.c2)))AND((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 CROSS JOIN t0 ON CAST(NULL AS REAL) WHERE (((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))AND(v0.c1)))AND(rt1.c1)))-(((((v0.c1)AND(rt1.c1)))OR('[]'))))) ORDER BY ((((v0.c2)|(v0.c2)))AND((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((t0.c0)OR(rt0.c2)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((t0.c0)OR(rt0.c2)))OR(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((t0.c0)OR(rt0.c2)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((t0.c0)OR(rt0.c2)))OR(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((t0.c0)OR(rt0.c2)))OR(rt0.c1))))));
SELECT ALL * FROM v0 WHERE (((((v0.c2)<<(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<<(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c2)<<(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<<(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c2)<<(v0.c0))) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((rt0.c3)OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3)OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3)OR(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS FALSE) WHERE ((((rt1.c0, rt1.c3, x'')) BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), rt0.c1, -3.12193673E8)) AND ((rt1.c2 COLLATE BINARY, rt1.c0, ((rt1.c3) NOT NULL))))) ORDER BY (NOT ((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c3, x'')) BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), rt0.c1, -3.12193673E8)) AND ((rt1.c2 COLLATE BINARY, rt1.c0, ((rt1.c3) NOT NULL))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS FALSE) ORDER BY (NOT ((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS FALSE) WHERE ((((rt1.c0, rt1.c3, x'')) BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), rt0.c1, -3.12193673E8)) AND ((rt1.c2 COLLATE BINARY, rt1.c0, ((rt1.c3) NOT NULL))))) ORDER BY (NOT ((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c3, x'')) BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), rt0.c1, -3.12193673E8)) AND ((rt1.c2 COLLATE BINARY, rt1.c0, ((rt1.c3) NOT NULL))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS FALSE) ORDER BY (NOT ((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS FALSE) WHERE ((((rt1.c0, rt1.c3, x'')) BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))), rt0.c1, -3.12193673E8)) AND ((rt1.c2 COLLATE BINARY, rt1.c0, ((rt1.c3) NOT NULL))))) ORDER BY (NOT ((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((NULL)=(x'91c5')))<(((NULL) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (LIKELIHOOD(rt0.c3, 0.6682626462828692) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)==(x'91c5')))<(((NULL) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (LIKELIHOOD(rt0.c3, 0.6682626462828692) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((NULL)=(x'91c5')))<(((NULL) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (LIKELIHOOD(rt0.c3, 0.6682626462828692) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)==(x'91c5')))<(((NULL) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (LIKELIHOOD(rt0.c3, 0.6682626462828692) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((NULL)=(x'91c5')))<(((NULL) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (LIKELIHOOD(rt0.c3, 0.6682626462828692) IN ()) DESC;
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((('1953585340')GLOB(((v0.c0)=(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((('1953585340')GLOB(((v0.c0)=(rt1.c2))))) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((('1953585340')GLOB(((v0.c0)=(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((('1953585340')GLOB(((v0.c0)=(rt1.c2))))) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL * FROM v0, t0, rt1, rt0 WHERE ((('1953585340')GLOB(((v0.c0)=(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (IFNULL(DISTINCT ((v0.c1) BETWEEN (rt1.c1) AND (v0.c2)), ((rt1.c0)/(rt1.c1)))) ORDER BY CAST((((0.569459760493769))=((rt1.c0))) AS INTEGER), ((((rt1.c1) NOTNULL))IS(((rt1.c1)IS(v0.c2)))) DESC  NULLS FIRST, ((v0.c0) BETWEEN (((((v0.c0)AND(rt1.c0)))OR(rt1.c2))) AND (v0.c1));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((v0.c1) BETWEEN (rt1.c1) AND (v0.c2)), ((rt1.c0)/(rt1.c1)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CAST((((0.569459760493769))==((rt1.c0))) AS INTEGER), ((((rt1.c1) NOTNULL))IS(((rt1.c1)IS(v0.c2)))) DESC  NULLS FIRST, ((v0.c0) BETWEEN (((((v0.c0)AND(rt1.c0)))OR(rt1.c2))) AND (v0.c1)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (IFNULL(DISTINCT ((v0.c1) BETWEEN (rt1.c1) AND (v0.c2)), ((rt1.c0)/(rt1.c1)))) ORDER BY CAST((((0.569459760493769))=((rt1.c0))) AS INTEGER), ((((rt1.c1) NOTNULL))IS(((rt1.c1)IS(v0.c2)))) DESC  NULLS FIRST, ((v0.c0) BETWEEN (((((v0.c0)AND(rt1.c0)))OR(rt1.c2))) AND (v0.c1));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((v0.c1) BETWEEN (rt1.c1) AND (v0.c2)), ((rt1.c0)/(rt1.c1)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CAST((((0.569459760493769))==((rt1.c0))) AS INTEGER), ((((rt1.c1) NOTNULL))IS(((rt1.c1)IS(v0.c2)))) DESC  NULLS FIRST, ((v0.c0) BETWEEN (((((v0.c0)AND(rt1.c0)))OR(rt1.c2))) AND (v0.c1)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (IFNULL(DISTINCT ((v0.c1) BETWEEN (rt1.c1) AND (v0.c2)), ((rt1.c0)/(rt1.c1)))) ORDER BY CAST((((0.569459760493769))=((rt1.c0))) AS INTEGER), ((((rt1.c1) NOTNULL))IS(((rt1.c1)IS(v0.c2)))) DESC  NULLS FIRST, ((v0.c0) BETWEEN (((((v0.c0)AND(rt1.c0)))OR(rt1.c2))) AND (v0.c1));
SELECT COUNT(*) FROM v0, rt1 NOT INDEXED, rt0 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)OR(((rt0.c1)IS(rt1.c0)))))OR((((rt1.c2))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)OR(((rt0.c1)IS(rt1.c0)))))OR((((rt1.c2))>((rt0.c2)))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1 NOT INDEXED, rt0 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)OR(((rt0.c1)IS(rt1.c0)))))OR((((rt1.c2))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)OR(((rt0.c1)IS(rt1.c0)))))OR((((rt1.c2))>((rt0.c2)))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1 NOT INDEXED, rt0 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)OR(((rt0.c1)IS(rt1.c0)))))OR((((rt1.c2))>((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'')GLOB((((-2.63352882E8))=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB((((-2.63352882E8))==((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'')GLOB((((-2.63352882E8))=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB((((-2.63352882E8))==((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'')GLOB((((-2.63352882E8))=((rt0.c2))))));
SELECT ALL * FROM v0 WHERE ((~ ((NOT (v0.c2))))) ORDER BY ((HEX(v0.c1))&(((v0.c0) BETWEEN (v0.c2) AND (v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((HEX(v0.c1))&(((v0.c0) BETWEEN (v0.c2) AND (v0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((~ ((NOT (v0.c2))))) ORDER BY ((HEX(v0.c1))&(((v0.c0) BETWEEN (v0.c2) AND (v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((HEX(v0.c1))&(((v0.c0) BETWEEN (v0.c2) AND (v0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((~ ((NOT (v0.c2))))) ORDER BY ((HEX(v0.c1))&(((v0.c0) BETWEEN (v0.c2) AND (v0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, t0, v0 WHERE (((((rt1.c1)>>(rt0.c3)))IS(CAST(t0.c0 AS REAL)))) ORDER BY ((((v0.c2) BETWEEN ('830171058') AND (rt1.c1)))>=(((('*4jr')) NOT BETWEEN ((v0.c2)) AND ((rt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)>>(rt0.c3)))IS(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY ((((v0.c2) BETWEEN ('830171058') AND (rt1.c1)))>=(((('*4jr')) NOT BETWEEN ((v0.c2)) AND ((rt1.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0, v0 WHERE (((((rt1.c1)>>(rt0.c3)))IS(CAST(t0.c0 AS REAL)))) ORDER BY ((((v0.c2) BETWEEN ('830171058') AND (rt1.c1)))>=(((('*4jr')) NOT BETWEEN ((v0.c2)) AND ((rt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)>>(rt0.c3)))IS(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY ((((v0.c2) BETWEEN ('830171058') AND (rt1.c1)))>=(((('*4jr')) NOT BETWEEN ((v0.c2)) AND ((rt1.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0, v0 WHERE (((((rt1.c1)>>(rt0.c3)))IS(CAST(t0.c0 AS REAL)))) ORDER BY ((((v0.c2) BETWEEN ('830171058') AND (rt1.c1)))>=(((('*4jr')) NOT BETWEEN ((v0.c2)) AND ((rt1.c1))))) DESC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((HEX(DISTINCT rt0.c0))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))))AND((~ (t0.c0)))) WHERE (LIKELIHOOD((NOT (rt0.c3)), 0.399208531645589));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((NOT (rt0.c3)), 0.399208531645589)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((HEX(DISTINCT rt0.c0))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))))AND((~ (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((HEX(DISTINCT rt0.c0))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))))AND((~ (t0.c0)))) WHERE (LIKELIHOOD((NOT (rt0.c3)), 0.399208531645589));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((NOT (rt0.c3)), 0.399208531645589)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((HEX(DISTINCT rt0.c0))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))))AND((~ (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((HEX(DISTINCT rt0.c0))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))))AND((~ (t0.c0)))) WHERE (LIKELIHOOD((NOT (rt0.c3)), 0.399208531645589));
SELECT ALL COUNT(*) FROM v0, t0 NOT INDEXED, rt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, t0 NOT INDEXED, rt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, t0 NOT INDEXED, rt1, rt0 WHERE ('');
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON v0.c2 FULL OUTER JOIN t0 ON 0.7297730926736844 INNER JOIN rt0 ON ((((v0.c1)&(rt1.c2)))>>(((rt0.c1)>>(rt1.c3)))) WHERE ((((((((((((rt0.c1))>((t0.c0))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c0) NOTNULL))))AND(CASE WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(((rt1.c3)IS(v0.c0))))) ORDER BY CASE (+ (rt1.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c0)-(t0.c0)) THEN ((((rt1.c1)OR(rt0.c1)))AND(rt0.c3)) WHEN v0.c1 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c1, x'd8a2') ELSE ((x'') NOTNULL) END ASC  NULLS LAST, (((((v0.c0 IN ()))AND((((rt1.c2))>((t0.c0))))))OR(CAST(x'' AS INTEGER))) ASC, CASE (rt1.c0 IN (rt0.c1))  WHEN ((v0.c1)<(rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c2)) WHEN CAST(rt1.c1 AS INTEGER) THEN (((0.17664736290732375)) NOT BETWEEN ((v0.c1)) AND ((0.8800465092754732))) WHEN (((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN t0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1))>((t0.c0))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c0) NOTNULL))))AND(CASE WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(((rt1.c3)IS(v0.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON v0.c2 FULL OUTER JOIN t0 ON 0.7297730926736844 INNER JOIN rt0 ON ((((v0.c1)&(rt1.c2)))>>(((rt0.c1)>>(rt1.c3)))) ORDER BY CASE (+ (rt1.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c0)-(t0.c0)) THEN ((((rt1.c1)OR(rt0.c1)))AND(rt0.c3)) WHEN v0.c1 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c1, x'd8a2') ELSE ((x'') NOTNULL) END ASC  NULLS LAST, (((((v0.c0 IN ()))AND((((rt1.c2))>((t0.c0))))))OR(CAST(x'' AS INTEGER))) ASC, CASE (rt1.c0 IN (rt0.c1))  WHEN ((v0.c1)<(rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c2)) WHEN CAST(rt1.c1 AS INTEGER) THEN (((0.17664736290732375)) NOT BETWEEN ((v0.c1)) AND ((0.8800465092754732))) WHEN (((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN t0.c0 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON v0.c2 FULL OUTER JOIN t0 ON 0.7297730926736844 INNER JOIN rt0 ON ((((v0.c1)&(rt1.c2)))>>(((rt0.c1)>>(rt1.c3)))) WHERE ((((((((((((rt0.c1))>((t0.c0))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c0) NOTNULL))))AND(CASE WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(((rt1.c3)IS(v0.c0))))) ORDER BY CASE (+ (rt1.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c0)-(t0.c0)) THEN ((((rt1.c1)OR(rt0.c1)))AND(rt0.c3)) WHEN v0.c1 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c1, x'd8a2') ELSE ((x'') NOTNULL) END ASC  NULLS LAST, (((((v0.c0 IN ()))AND((((rt1.c2))>((t0.c0))))))OR(CAST(x'' AS INTEGER))) ASC, CASE (rt1.c0 IN (rt0.c1))  WHEN ((v0.c1)<(rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c2)) WHEN CAST(rt1.c1 AS INTEGER) THEN (((0.17664736290732375)) NOT BETWEEN ((v0.c1)) AND ((0.8800465092754732))) WHEN (((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN t0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1))>((t0.c0))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c0) NOTNULL))))AND(CASE WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(((rt1.c3)IS(v0.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON v0.c2 FULL OUTER JOIN t0 ON 0.7297730926736844 INNER JOIN rt0 ON ((((v0.c1)&(rt1.c2)))>>(((rt0.c1)>>(rt1.c3)))) ORDER BY CASE (+ (rt1.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c0)-(t0.c0)) THEN ((((rt1.c1)OR(rt0.c1)))AND(rt0.c3)) WHEN v0.c1 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c1, x'd8a2') ELSE ((x'') NOTNULL) END ASC  NULLS LAST, (((((v0.c0 IN ()))AND((((rt1.c2))>((t0.c0))))))OR(CAST(x'' AS INTEGER))) ASC, CASE (rt1.c0 IN (rt0.c1))  WHEN ((v0.c1)<(rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c2)) WHEN CAST(rt1.c1 AS INTEGER) THEN (((0.17664736290732375)) NOT BETWEEN ((v0.c1)) AND ((0.8800465092754732))) WHEN (((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN t0.c0 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON v0.c2 FULL OUTER JOIN t0 ON 0.7297730926736844 INNER JOIN rt0 ON ((((v0.c1)&(rt1.c2)))>>(((rt0.c1)>>(rt1.c3)))) WHERE ((((((((((((rt0.c1))>((t0.c0))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c0) NOTNULL))))AND(CASE WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(((rt1.c3)IS(v0.c0))))) ORDER BY CASE (+ (rt1.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c0)-(t0.c0)) THEN ((((rt1.c1)OR(rt0.c1)))AND(rt0.c3)) WHEN v0.c1 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c1, x'd8a2') ELSE ((x'') NOTNULL) END ASC  NULLS LAST, (((((v0.c0 IN ()))AND((((rt1.c2))>((t0.c0))))))OR(CAST(x'' AS INTEGER))) ASC, CASE (rt1.c0 IN (rt0.c1))  WHEN ((v0.c1)<(rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c2)) WHEN CAST(rt1.c1 AS INTEGER) THEN (((0.17664736290732375)) NOT BETWEEN ((v0.c1)) AND ((0.8800465092754732))) WHEN (((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN t0.c0 END ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY))));
SELECT * FROM rt0 WHERE (((x'a5bf')/((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((x'a5bf')/((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'a5bf')/((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((x'a5bf')/((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'a5bf')/((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((rt1.c3, rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c2) BETWEEN (v0.c0) AND (rt1.c2)), '', (((rt0.c3))<((rt0.c3))))) AND ((CAST(rt0.c3 AS TEXT), ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELY(rt1.c3))))) ORDER BY ((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c3 THEN v0.c1 ELSE rt1.c3 END)IS(((rt1.c1)|(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c2) BETWEEN (v0.c0) AND (rt1.c2)), '', (((rt0.c3))<((rt0.c3))))) AND ((CAST(rt0.c3 AS TEXT), ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELY(rt1.c3))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c3 THEN v0.c1 ELSE rt1.c3 END)IS(((rt1.c1)|(rt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((rt1.c3, rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c2) BETWEEN (v0.c0) AND (rt1.c2)), '', (((rt0.c3))<((rt0.c3))))) AND ((CAST(rt0.c3 AS TEXT), ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELY(rt1.c3))))) ORDER BY ((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c3 THEN v0.c1 ELSE rt1.c3 END)IS(((rt1.c1)|(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c2) BETWEEN (v0.c0) AND (rt1.c2)), '', (((rt0.c3))<((rt0.c3))))) AND ((CAST(rt0.c3 AS TEXT), ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELY(rt1.c3))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c3 THEN v0.c1 ELSE rt1.c3 END)IS(((rt1.c1)|(rt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((rt1.c3, rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c2) BETWEEN (v0.c0) AND (rt1.c2)), '', (((rt0.c3))<((rt0.c3))))) AND ((CAST(rt0.c3 AS TEXT), ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELY(rt1.c3))))) ORDER BY ((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c3 THEN v0.c1 ELSE rt1.c3 END)IS(((rt1.c1)|(rt1.c2))))  NULLS LAST;
SELECT * FROM rt0, rt1, t0, v0 WHERE ((((((((((((((rt1.c0)AND(rt1.c1)))AND(t0.c0)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)))OR(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt1.c0)AND(rt1.c1)))AND(t0.c0)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1, t0 NOT INDEXED, v0);
SELECT * FROM rt0, rt1, t0, v0 WHERE ((((((((((((((rt1.c0)AND(rt1.c1)))AND(t0.c0)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)))OR(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt1.c0)AND(rt1.c1)))AND(t0.c0)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1, t0 NOT INDEXED, v0);
SELECT * FROM rt0, rt1, t0, v0 WHERE ((((((((((((((rt1.c0)AND(rt1.c1)))AND(t0.c0)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)))OR(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE ((v0.c1)!=(t0.c0))  WHEN ((v0.c2)>=(v0.c2)) THEN ((((t0.c0)AND(v0.c2)))AND(rt0.c3)) END CROSS JOIN v0 ON (((v0.c0 IN (v0.c1, v0.c1, rt0.c1)))>=((rt0.c0 IN ()))) WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE ((v0.c1)<>(t0.c0))  WHEN ((v0.c2)>=(v0.c2)) THEN ((((t0.c0)AND(v0.c2)))AND(rt0.c3)) END CROSS JOIN v0 ON (((v0.c0 IN (v0.c1, v0.c1, rt0.c1)))>=((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE ((v0.c1)!=(t0.c0))  WHEN ((v0.c2)>=(v0.c2)) THEN ((((t0.c0)AND(v0.c2)))AND(rt0.c3)) END CROSS JOIN v0 ON (((v0.c0 IN (v0.c1, v0.c1, rt0.c1)))>=((rt0.c0 IN ()))) WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE ((v0.c1)<>(t0.c0))  WHEN ((v0.c2)>=(v0.c2)) THEN ((((t0.c0)AND(v0.c2)))AND(rt0.c3)) END CROSS JOIN v0 ON (((v0.c0 IN (v0.c1, v0.c1, rt0.c1)))>=((rt0.c0 IN ()))));
SELECT ALL * FROM t0 NOT INDEXED, v0, rt0 WHERE ((+ (x''))) ORDER BY ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED, v0, rt0 WHERE ((+ (x''))) ORDER BY ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED, v0, rt0 WHERE ((+ (x''))) ORDER BY ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE (((LIKELY(rt1.c0)) BETWEEN (0x475247cb) AND (((rt1.c2)AND(x''))))) ORDER BY ((((rt1.c3)<<(t0.c0)))%(((0.15858091607089564) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST, (~ ((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST, ((CASE t0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE t0.c0 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt1.c0)) BETWEEN (0x475247cb) AND (((rt1.c2)AND(x''))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c3)<<(t0.c0)))%(((0.15858091607089564) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST, (~ ((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST, ((CASE t0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE t0.c0 END) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (((LIKELY(rt1.c0)) BETWEEN (0x475247cb) AND (((rt1.c2)AND(x''))))) ORDER BY ((((rt1.c3)<<(t0.c0)))%(((0.15858091607089564) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST, (~ ((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST, ((CASE t0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE t0.c0 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt1.c0)) BETWEEN (0x475247cb) AND (((rt1.c2)AND(x''))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c3)<<(t0.c0)))%(((0.15858091607089564) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST, (~ ((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST, ((CASE t0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE t0.c0 END) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (((LIKELY(rt1.c0)) BETWEEN (0x475247cb) AND (((rt1.c2)AND(x''))))) ORDER BY ((((rt1.c3)<<(t0.c0)))%(((0.15858091607089564) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS FIRST, (~ ((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST, ((CASE t0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE t0.c0 END) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON CAST(((v0.c2)!=(rt0.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON v0.c0 FULL OUTER JOIN rt1 ON ((((((((rt0.c3)AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN rt1.c0 THEN x'' ELSE v0.c0 END)))AND(v0.c2 COLLATE RTRIM)))AND((((rt0.c3))!=((rt1.c0))))) WHERE (rt0.c0) ORDER BY CAST(((((v0.c2)OR(rt1.c0)))AND(rt0.c1)) AS BLOB) ASC, ((CASE WHEN v0.c1 THEN rt1.c0 END)LIKE(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(((v0.c2)!=(rt0.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON v0.c0 FULL OUTER JOIN rt1 ON ((((((((rt0.c3)AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN rt1.c0 THEN x'' ELSE v0.c0 END)))AND(v0.c2 COLLATE RTRIM)))AND((((rt0.c3))<>((rt1.c0))))) ORDER BY CAST(((((v0.c2)OR(rt1.c0)))AND(rt0.c1)) AS BLOB) ASC, ((CASE WHEN v0.c1 THEN rt1.c0 END)LIKE(x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON CAST(((v0.c2)!=(rt0.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON v0.c0 FULL OUTER JOIN rt1 ON ((((((((rt0.c3)AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN rt1.c0 THEN x'' ELSE v0.c0 END)))AND(v0.c2 COLLATE RTRIM)))AND((((rt0.c3))!=((rt1.c0))))) WHERE (rt0.c0) ORDER BY CAST(((((v0.c2)OR(rt1.c0)))AND(rt0.c1)) AS BLOB) ASC, ((CASE WHEN v0.c1 THEN rt1.c0 END)LIKE(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(((v0.c2)!=(rt0.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON v0.c0 FULL OUTER JOIN rt1 ON ((((((((rt0.c3)AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN rt1.c0 THEN x'' ELSE v0.c0 END)))AND(v0.c2 COLLATE RTRIM)))AND((((rt0.c3))<>((rt1.c0))))) ORDER BY CAST(((((v0.c2)OR(rt1.c0)))AND(rt0.c1)) AS BLOB) ASC, ((CASE WHEN v0.c1 THEN rt1.c0 END)LIKE(x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)) BETWEEN ((v0.c2)) AND ((rt0.c1))) IN ())) ORDER BY CAST(v0.c0 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((v0.c2)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(v0.c0 AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)) BETWEEN ((v0.c2)) AND ((rt0.c1))) IN ())) ORDER BY CAST(v0.c0 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((v0.c2)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(v0.c0 AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)) BETWEEN ((v0.c2)) AND ((rt0.c1))) IN ())) ORDER BY CAST(v0.c0 AS INTEGER) DESC;
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0, t0, rt1);
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0, t0, rt1);
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE (v0.c1);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((((x'd401')OR(rt1.c1)))AND(rt0.c2)) AS BLOB)) ORDER BY (~ ((((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c3, rt1.c1)) AND ((rt0.c0, rt0.c0, rt1.c1))))) DESC  NULLS LAST, (((CAST(rt1.c3 AS TEXT)))>((((rt1.c0)LIKE(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((x'd401')OR(rt1.c1)))AND(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY (~ ((((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c3, rt1.c1)) AND ((rt0.c0, rt0.c0, rt1.c1))))) DESC  NULLS LAST, (((CAST(rt1.c3 AS TEXT)))>((((rt1.c0)LIKE(rt0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((((x'd401')OR(rt1.c1)))AND(rt0.c2)) AS BLOB)) ORDER BY (~ ((((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c3, rt1.c1)) AND ((rt0.c0, rt0.c0, rt1.c1))))) DESC  NULLS LAST, (((CAST(rt1.c3 AS TEXT)))>((((rt1.c0)LIKE(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((x'd401')OR(rt1.c1)))AND(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY (~ ((((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c3, rt1.c1)) AND ((rt0.c0, rt0.c0, rt1.c1))))) DESC  NULLS LAST, (((CAST(rt1.c3 AS TEXT)))>((((rt1.c0)LIKE(rt0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((((x'd401')OR(rt1.c1)))AND(rt0.c2)) AS BLOB)) ORDER BY (~ ((((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c3, rt1.c1)) AND ((rt0.c0, rt0.c0, rt1.c1))))) DESC  NULLS LAST, (((CAST(rt1.c3 AS TEXT)))>((((rt1.c0)LIKE(rt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ()) WHERE (((((((((CAST(rt1.c3 AS NUMERIC))OR(((rt1.c2) NOT NULL))))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c0) NOTNULL))))AND(((((((((v0.c1)AND(v0.c2)))OR(v0.c2)))AND(rt1.c3)))AND(v0.c1))))) ORDER BY CASE WHEN CAST(v0.c1 AS REAL) THEN ((v0.c0) BETWEEN (v0.c2) AND (0.3389050256751569)) ELSE (rt1.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c3 AS NUMERIC))OR(((rt1.c2) NOT NULL))))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c0) NOTNULL))))AND(((((((((v0.c1)AND(v0.c2)))OR(v0.c2)))AND(rt1.c3)))AND(v0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ()) ORDER BY CASE WHEN CAST(v0.c1 AS REAL) THEN ((v0.c0) BETWEEN (v0.c2) AND (0.3389050256751569)) ELSE (rt1.c2 IN ()) END  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ()) WHERE (((((((((CAST(rt1.c3 AS NUMERIC))OR(((rt1.c2) NOT NULL))))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c0) NOTNULL))))AND(((((((((v0.c1)AND(v0.c2)))OR(v0.c2)))AND(rt1.c3)))AND(v0.c1))))) ORDER BY CASE WHEN CAST(v0.c1 AS REAL) THEN ((v0.c0) BETWEEN (v0.c2) AND (0.3389050256751569)) ELSE (rt1.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c3 AS NUMERIC))OR(((rt1.c2) NOT NULL))))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c0) NOTNULL))))AND(((((((((v0.c1)AND(v0.c2)))OR(v0.c2)))AND(rt1.c3)))AND(v0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ()) ORDER BY CASE WHEN CAST(v0.c1 AS REAL) THEN ((v0.c0) BETWEEN (v0.c2) AND (0.3389050256751569)) ELSE (rt1.c2 IN ()) END  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ()) WHERE (((((((((CAST(rt1.c3 AS NUMERIC))OR(((rt1.c2) NOT NULL))))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c0) NOTNULL))))AND(((((((((v0.c1)AND(v0.c2)))OR(v0.c2)))AND(rt1.c3)))AND(v0.c1))))) ORDER BY CASE WHEN CAST(v0.c1 AS REAL) THEN ((v0.c0) BETWEEN (v0.c2) AND (0.3389050256751569)) ELSE (rt1.c2 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE ('Z98');
SELECT SUM(count) FROM (SELECT (('Z98') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ('Z98');
SELECT SUM(count) FROM (SELECT (('Z98') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ('Z98');
SELECT * FROM v0, t0, rt1, rt0 WHERE (0Xffffffffef9f863b) ORDER BY CASE (((v0.c1, v0.c0, rt1.c3, rt0.c1, rt0.c2))>=((v0.c0, 'vM쩶', v0.c1, rt0.c2, rt1.c2)))  WHEN ((((v0.c0)OR(rt1.c0)))AND(rt0.c2)) THEN (v0.c1 IN (v0.c2, rt1.c2)) ELSE (((v0.c0))<=((rt0.c2))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffef9f863b) IS TRUE)  as count FROM v0, t0, rt1, rt0 ORDER BY CASE (((v0.c1, v0.c0, rt1.c3, rt0.c1, rt0.c2))>=((v0.c0, 'vM쩶', v0.c1, rt0.c2, rt1.c2)))  WHEN ((((v0.c0)OR(rt1.c0)))AND(rt0.c2)) THEN (v0.c1 IN (v0.c2, rt1.c2)) ELSE (((v0.c0))<=((rt0.c2))) END  NULLS LAST);
SELECT * FROM v0, t0, rt1, rt0 WHERE (0Xffffffffef9f863b) ORDER BY CASE (((v0.c1, v0.c0, rt1.c3, rt0.c1, rt0.c2))>=((v0.c0, 'vM쩶', v0.c1, rt0.c2, rt1.c2)))  WHEN ((((v0.c0)OR(rt1.c0)))AND(rt0.c2)) THEN (v0.c1 IN (v0.c2, rt1.c2)) ELSE (((v0.c0))<=((rt0.c2))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffef9f863b) IS TRUE)  as count FROM v0, t0, rt1, rt0 ORDER BY CASE (((v0.c1, v0.c0, rt1.c3, rt0.c1, rt0.c2))>=((v0.c0, 'vM쩶', v0.c1, rt0.c2, rt1.c2)))  WHEN ((((v0.c0)OR(rt1.c0)))AND(rt0.c2)) THEN (v0.c1 IN (v0.c2, rt1.c2)) ELSE (((v0.c0))<=((rt0.c2))) END  NULLS LAST);
SELECT * FROM v0, t0, rt1, rt0 WHERE (0Xffffffffef9f863b) ORDER BY CASE (((v0.c1, v0.c0, rt1.c3, rt0.c1, rt0.c2))>=((v0.c0, 'vM쩶', v0.c1, rt0.c2, rt1.c2)))  WHEN ((((v0.c0)OR(rt1.c0)))AND(rt0.c2)) THEN (v0.c1 IN (v0.c2, rt1.c2)) ELSE (((v0.c0))<=((rt0.c2))) END  NULLS LAST;
SELECT ALL * FROM v0, rt0 CROSS JOIN rt1 ON rt1.c3 WHERE (((rt0.c1 COLLATE BINARY)%(CASE WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY ((((((v0.c0) NOT NULL))OR(((rt0.c3)==(rt0.c2)))))OR(((rt1.c3) BETWEEN (-5.0107472E7) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)%(CASE WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON rt1.c3 ORDER BY ((((((v0.c0) NOT NULL))OR(((rt0.c3)==(rt0.c2)))))OR(((rt1.c3) BETWEEN (-5.0107472E7) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 CROSS JOIN rt1 ON rt1.c3 WHERE (((rt0.c1 COLLATE BINARY)%(CASE WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY ((((((v0.c0) NOT NULL))OR(((rt0.c3)==(rt0.c2)))))OR(((rt1.c3) BETWEEN (-5.0107472E7) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)%(CASE WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON rt1.c3 ORDER BY ((((((v0.c0) NOT NULL))OR(((rt0.c3)==(rt0.c2)))))OR(((rt1.c3) BETWEEN (-5.0107472E7) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 CROSS JOIN rt1 ON rt1.c3 WHERE (((rt0.c1 COLLATE BINARY)%(CASE WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY ((((((v0.c0) NOT NULL))OR(((rt0.c3)==(rt0.c2)))))OR(((rt1.c3) BETWEEN (-5.0107472E7) AND (rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)))AND(((rt1.c1) ISNULL))))OR(x'')) DESC, (+ (((rt1.c2)*(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)))AND(((rt1.c1) ISNULL))))OR(x'')) DESC, (+ (((rt1.c2)*(rt1.c1)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)))AND(((rt1.c1) ISNULL))))OR(x'')) DESC, (+ (((rt1.c2)*(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)))AND(((rt1.c1) ISNULL))))OR(x'')) DESC, (+ (((rt1.c2)*(rt1.c1)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)))AND(((rt1.c1) ISNULL))))OR(x'')) DESC, (+ (((rt1.c2)*(rt1.c1)))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))GLOB((((rt0.c3))==((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))GLOB((((rt0.c3))=((rt0.c3)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))GLOB((((rt0.c3))==((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))GLOB((((rt0.c3))=((rt0.c3)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))GLOB((((rt0.c3))==((rt0.c3))))));
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY ((CASE WHEN x'9b8a' THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1)%(rt1.c1))) AND (0x317b67b2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN x'9b8a' THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1)%(rt1.c1))) AND (0X317b67b2)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY ((CASE WHEN x'9b8a' THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1)%(rt1.c1))) AND (0x317b67b2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN x'9b8a' THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1)%(rt1.c1))) AND (0X317b67b2)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY ((CASE WHEN x'9b8a' THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1)%(rt1.c1))) AND (0x317b67b2)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, rt1 FULL OUTER JOIN v0 ON ((((((((((((((0x3ddcfddd)OR(v0.c1)))AND(rt1.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(v0.c2)))OR(v0.c1))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c3 END) AND ((~ (v0.c2)))) WHERE (((NULLIF('p\꼊|', 0.24486218601725152)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF('p\꼊|', 0.24486218601725152)) IS FALSE)) IS TRUE)  as count FROM t0, rt0, rt1 FULL OUTER JOIN v0 ON ((((((((((((((0x3ddcfddd)OR(v0.c1)))AND(rt1.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(v0.c2)))OR(v0.c1))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c3 END) AND ((~ (v0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 FULL OUTER JOIN v0 ON ((((((((((((((0x3ddcfddd)OR(v0.c1)))AND(rt1.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(v0.c2)))OR(v0.c1))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c3 END) AND ((~ (v0.c2)))) WHERE (((NULLIF('p\꼊|', 0.24486218601725152)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF('p\꼊|', 0.24486218601725152)) IS FALSE)) IS TRUE)  as count FROM t0, rt0, rt1 FULL OUTER JOIN v0 ON ((((((((((((((0x3ddcfddd)OR(v0.c1)))AND(rt1.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(v0.c2)))OR(v0.c1))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c3 END) AND ((~ (v0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 FULL OUTER JOIN v0 ON ((((((((((((((0x3ddcfddd)OR(v0.c1)))AND(rt1.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(v0.c2)))OR(v0.c1))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c3 END) AND ((~ (v0.c2)))) WHERE (((NULLIF('p\꼊|', 0.24486218601725152)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOTNULL));
SELECT * FROM rt1, v0, rt0 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN v0.c2 END)LIKE(v0.c2))) ORDER BY (((+ ('-233277100'))) NOT BETWEEN (rt0.c2) AND (((rt0.c0)IS(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN rt1.c1 THEN v0.c2 END)LIKE(v0.c2))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((+ ('-233277100'))) NOT BETWEEN (rt0.c2) AND (((rt0.c0)IS(x'')))) ASC);
SELECT * FROM rt1, v0, rt0 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN v0.c2 END)LIKE(v0.c2))) ORDER BY (((+ ('-233277100'))) NOT BETWEEN (rt0.c2) AND (((rt0.c0)IS(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN rt1.c1 THEN v0.c2 END)LIKE(v0.c2))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((+ ('-233277100'))) NOT BETWEEN (rt0.c2) AND (((rt0.c0)IS(x'')))) ASC);
SELECT * FROM rt1, v0, rt0 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN v0.c2 END)LIKE(v0.c2))) ORDER BY (((+ ('-233277100'))) NOT BETWEEN (rt0.c2) AND (((rt0.c0)IS(x'')))) ASC;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((0.6008558020612869)>>(rt1.c2)) COLLATE RTRIM COLLATE RTRIM WHERE ((((((rt1.c3 IN (t0.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c0)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3 IN (t0.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c0)OR(rt1.c2))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((0.6008558020612869)>>(rt1.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((0.6008558020612869)>>(rt1.c2)) COLLATE RTRIM COLLATE RTRIM WHERE ((((((rt1.c3 IN (t0.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c0)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3 IN (t0.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c0)OR(rt1.c2))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((0.6008558020612869)>>(rt1.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((0.6008558020612869)>>(rt1.c2)) COLLATE RTRIM COLLATE RTRIM WHERE ((((((rt1.c3 IN (t0.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c0)OR(rt1.c2)))));
SELECT COUNT(*) FROM t0, rt1, rt0, v0 WHERE (((((v0.c2)<(v0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND ((((v0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c1, rt0.c1)) AND ((rt1.c3, rt1.c3, v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<(v0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND ((((v0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c1, rt0.c1)) AND ((rt1.c3, rt1.c3, v0.c1)))))) IS TRUE)  as count FROM t0, rt1, rt0, v0);
SELECT COUNT(*) FROM t0, rt1, rt0, v0 WHERE (((((v0.c2)<(v0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND ((((v0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c1, rt0.c1)) AND ((rt1.c3, rt1.c3, v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<(v0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND ((((v0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c1, rt0.c1)) AND ((rt1.c3, rt1.c3, v0.c1)))))) IS TRUE)  as count FROM t0, rt1, rt0, v0);
SELECT COUNT(*) FROM t0, rt1, rt0, v0 WHERE (((((v0.c2)<(v0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND ((((v0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c1, rt0.c1)) AND ((rt1.c3, rt1.c3, v0.c1))))));
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN rt1 ON CASE ((t0.c0) IS FALSE)  WHEN ((v0.c2) NOT NULL) THEN 0.2560719624677963 END WHERE ((((((t0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3)))) BETWEEN (NULL) AND ((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3)))) BETWEEN (NULL) AND ((- (rt1.c1))))) IS TRUE)  as count FROM v0, t0, rt0 CROSS JOIN rt1 ON CASE ((t0.c0) IS FALSE)  WHEN ((v0.c2) NOT NULL) THEN 0.2560719624677963 END);
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN rt1 ON CASE ((t0.c0) IS FALSE)  WHEN ((v0.c2) NOT NULL) THEN 0.2560719624677963 END WHERE ((((((t0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3)))) BETWEEN (NULL) AND ((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3)))) BETWEEN (NULL) AND ((- (rt1.c1))))) IS TRUE)  as count FROM v0, t0, rt0 CROSS JOIN rt1 ON CASE ((t0.c0) IS FALSE)  WHEN ((v0.c2) NOT NULL) THEN 0.2560719624677963 END);
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN rt1 ON CASE ((t0.c0) IS FALSE)  WHEN ((v0.c2) NOT NULL) THEN 0.2560719624677963 END WHERE ((((((t0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3)))) BETWEEN (NULL) AND ((- (rt1.c1)))));
SELECT * FROM v0, t0, rt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (rt0.c3);
SELECT * FROM v0, t0 NOT INDEXED, rt0 WHERE ('0.017356892146050296') ORDER BY (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.017356892146050296') IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, t0 NOT INDEXED, rt0 WHERE ('0.017356892146050296') ORDER BY (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.017356892146050296') IS TRUE)  as count FROM v0, t0, rt0 ORDER BY (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, t0 NOT INDEXED, rt0 WHERE ('0.017356892146050296') ORDER BY (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((NULL) BETWEEN ((rt1.c3 IN ())) AND (((v0.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON rt0.c0 WHERE ((((((rt0.c1) IS FALSE)))<=((CASE NULL  WHEN v0.c0 THEN rt0.c3 ELSE x'204b' END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) IS FALSE)))<=((CASE NULL  WHEN v0.c0 THEN rt0.c3 ELSE x'204b' END)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((NULL) BETWEEN ((rt1.c3 IN ())) AND (((v0.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON rt0.c0);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((NULL) BETWEEN ((rt1.c3 IN ())) AND (((v0.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON rt0.c0 WHERE ((((((rt0.c1) IS FALSE)))<=((CASE NULL  WHEN v0.c0 THEN rt0.c3 ELSE x'204b' END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) IS FALSE)))<=((CASE NULL  WHEN v0.c0 THEN rt0.c3 ELSE x'204b' END)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((NULL) BETWEEN ((rt1.c3 IN ())) AND (((v0.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (- (((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3)))) WHERE ((((rt0.c1 IN (rt0.c3, rt0.c0)))<<(LIKELIHOOD(v0.c1, 0.45183012964562697)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c3, rt0.c0)))<<(LIKELIHOOD(v0.c1, 0.45183012964562697)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (- (((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3)))) ORDER BY rt0.c1);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (- (((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3)))) WHERE ((((rt0.c1 IN (rt0.c3, rt0.c0)))<<(LIKELIHOOD(v0.c1, 0.45183012964562697)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c3, rt0.c0)))<<(LIKELIHOOD(v0.c1, 0.45183012964562697)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (- (((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3)))) ORDER BY rt0.c1);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (- (((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c3)))) WHERE ((((rt0.c1 IN (rt0.c3, rt0.c0)))<<(LIKELIHOOD(v0.c1, 0.45183012964562697)))) ORDER BY rt0.c1;
SELECT ALL * FROM v0, t0 WHERE ('ym') ORDER BY (((~ (v0.c1)))=(((t0.c0)%(v0.c2))));
SELECT SUM(count) FROM (SELECT (('ym') IS TRUE)  as count FROM v0, t0 ORDER BY (((~ (v0.c1)))==(((t0.c0)%(v0.c2)))));
SELECT ALL * FROM v0, t0 WHERE ('ym') ORDER BY (((~ (v0.c1)))=(((t0.c0)%(v0.c2))));
SELECT SUM(count) FROM (SELECT (('ym') IS TRUE)  as count FROM v0, t0 ORDER BY (((~ (v0.c1)))==(((t0.c0)%(v0.c2)))));
SELECT ALL * FROM v0, t0 WHERE ('ym') ORDER BY (((~ (v0.c1)))=(((t0.c0)%(v0.c2))));
SELECT ALL * FROM v0 WHERE (((LIKE(v0.c2, x'', '-'))IS(NULLIF(v0.c2, v0.c2)))) ORDER BY (+ (v0.c2)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, v0.c2 ASC  NULLS LAST, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKE(v0.c2, x'', '-'))IS(NULLIF(v0.c2, v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c2)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, v0.c2 ASC  NULLS LAST, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((LIKE(v0.c2, x'', '-'))IS(NULLIF(v0.c2, v0.c2)))) ORDER BY (+ (v0.c2)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, v0.c2 ASC  NULLS LAST, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKE(v0.c2, x'', '-'))IS(NULLIF(v0.c2, v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c2)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, v0.c2 ASC  NULLS LAST, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((LIKE(v0.c2, x'', '-'))IS(NULLIF(v0.c2, v0.c2)))) ORDER BY (+ (v0.c2)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, v0.c2 ASC  NULLS LAST, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT * FROM rt0, v0, rt1, t0 WHERE (((TYPEOF(rt0.c1))==(((v0.c0) IS FALSE)))) ORDER BY (((((v0.c2, rt0.c1, v0.c2)) BETWEEN ((rt0.c0, rt1.c0, v0.c0)) AND ((rt1.c3, rt1.c3, v0.c2)))) IS TRUE) DESC  NULLS LAST, 0.542377763565328  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c1))==(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY (((((v0.c2, rt0.c1, v0.c2)) BETWEEN ((rt0.c0, rt1.c0, v0.c0)) AND ((rt1.c3, rt1.c3, v0.c2)))) IS TRUE) DESC  NULLS LAST, 0.542377763565328  NULLS FIRST);
SELECT * FROM rt0, v0, rt1, t0 WHERE (((TYPEOF(rt0.c1))==(((v0.c0) IS FALSE)))) ORDER BY (((((v0.c2, rt0.c1, v0.c2)) BETWEEN ((rt0.c0, rt1.c0, v0.c0)) AND ((rt1.c3, rt1.c3, v0.c2)))) IS TRUE) DESC  NULLS LAST, 0.542377763565328  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c1))==(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY (((((v0.c2, rt0.c1, v0.c2)) BETWEEN ((rt0.c0, rt1.c0, v0.c0)) AND ((rt1.c3, rt1.c3, v0.c2)))) IS TRUE) DESC  NULLS LAST, 0.542377763565328  NULLS FIRST);
SELECT * FROM rt0, v0, rt1, t0 WHERE (((TYPEOF(rt0.c1))==(((v0.c0) IS FALSE)))) ORDER BY (((((v0.c2, rt0.c1, v0.c2)) BETWEEN ((rt0.c0, rt1.c0, v0.c0)) AND ((rt1.c3, rt1.c3, v0.c2)))) IS TRUE) DESC  NULLS LAST, 0.542377763565328  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))) AND ((((rt0.c3)>(rt0.c1)))))) ORDER BY CASE WHEN rt0.c3 THEN '-2055957170' END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))) AND ((((rt0.c3)>(rt0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN rt0.c3 THEN '-2055957170' END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))) AND ((((rt0.c3)>(rt0.c1)))))) ORDER BY CASE WHEN rt0.c3 THEN '-2055957170' END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))) AND ((((rt0.c3)>(rt0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN rt0.c3 THEN '-2055957170' END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))) AND ((((rt0.c3)>(rt0.c1)))))) ORDER BY CASE WHEN rt0.c3 THEN '-2055957170' END COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE rt1.c0  WHEN ((rt1.c3) IS FALSE) THEN ((rt0.c1)||(rt1.c3)) END) ORDER BY ((rt1.c3) BETWEEN (TOTAL_CHANGES()) AND (0x7d150b05)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN ((rt1.c3) IS FALSE) THEN ((rt0.c1)||(rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((rt1.c3) BETWEEN (TOTAL_CHANGES()) AND (0X7d150b05)) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE rt1.c0  WHEN ((rt1.c3) IS FALSE) THEN ((rt0.c1)||(rt1.c3)) END) ORDER BY ((rt1.c3) BETWEEN (TOTAL_CHANGES()) AND (0x7d150b05)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN ((rt1.c3) IS FALSE) THEN ((rt0.c1)||(rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((rt1.c3) BETWEEN (TOTAL_CHANGES()) AND (0X7d150b05)) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE rt1.c0  WHEN ((rt1.c3) IS FALSE) THEN ((rt0.c1)||(rt1.c3)) END) ORDER BY ((rt1.c3) BETWEEN (TOTAL_CHANGES()) AND (0x7d150b05)) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2)>(rt0.c3)) THEN CAST(rt0.c1 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2)>(rt0.c3)) THEN CAST(rt0.c1 AS REAL) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2)>(rt0.c3)) THEN CAST(rt0.c1 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2)>(rt0.c3)) THEN CAST(rt0.c1 AS REAL) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2)>(rt0.c3)) THEN CAST(rt0.c1 AS REAL) END DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOT NULL))LIKE(((v0.c0)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL))LIKE(((v0.c0)AND(rt0.c3))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOT NULL))LIKE(((v0.c0)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL))LIKE(((v0.c0)AND(rt0.c3))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c2) NOT NULL))LIKE(((v0.c0)AND(rt0.c3)))));
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0)))>(UPPER(t0.c0)))) ORDER BY '1899915764'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))>(UPPER(t0.c0)))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY '1899915764'  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0)))>(UPPER(t0.c0)))) ORDER BY '1899915764'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))>(UPPER(t0.c0)))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY '1899915764'  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0)))>(UPPER(t0.c0)))) ORDER BY '1899915764'  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN v0 ON (((((((((((v0.c1))!=((v0.c2))))AND('121195535')))AND(UNLIKELY(rt1.c2))))OR(((rt1.c1)<(rt1.c0)))))AND((v0.c2 IN ()))) WHERE ((((((NULL) BETWEEN (v0.c2) AND (''))))<=((CAST(rt1.c0 AS TEXT))))) ORDER BY (json(rt1.c2) IN ())  NULLS LAST, (((((v0.c2)>(v0.c2))))>=((x'84a23f48'))) ASC;
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (v0.c2) AND (''))))<=((CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (((((((((((v0.c1))!=((v0.c2))))AND('121195535')))AND(UNLIKELY(rt1.c2))))OR(((rt1.c1)<(rt1.c0)))))AND((v0.c2 IN ()))) ORDER BY (json(rt1.c2) IN ())  NULLS LAST, (((((v0.c2)>(v0.c2))))>=((x'84a23f48'))) ASC);
SELECT * FROM rt1 INNER JOIN v0 ON (((((((((((v0.c1))!=((v0.c2))))AND('121195535')))AND(UNLIKELY(rt1.c2))))OR(((rt1.c1)<(rt1.c0)))))AND((v0.c2 IN ()))) WHERE ((((((NULL) BETWEEN (v0.c2) AND (''))))<=((CAST(rt1.c0 AS TEXT))))) ORDER BY (json(rt1.c2) IN ())  NULLS LAST, (((((v0.c2)>(v0.c2))))>=((x'84a23f48'))) ASC;
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (v0.c2) AND (''))))<=((CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (((((((((((v0.c1))!=((v0.c2))))AND('121195535')))AND(UNLIKELY(rt1.c2))))OR(((rt1.c1)<(rt1.c0)))))AND((v0.c2 IN ()))) ORDER BY (json(rt1.c2) IN ())  NULLS LAST, (((((v0.c2)>(v0.c2))))>=((x'84a23f48'))) ASC);
SELECT * FROM rt1 INNER JOIN v0 ON (((((((((((v0.c1))!=((v0.c2))))AND('121195535')))AND(UNLIKELY(rt1.c2))))OR(((rt1.c1)<(rt1.c0)))))AND((v0.c2 IN ()))) WHERE ((((((NULL) BETWEEN (v0.c2) AND (''))))<=((CAST(rt1.c0 AS TEXT))))) ORDER BY (json(rt1.c2) IN ())  NULLS LAST, (((((v0.c2)>(v0.c2))))>=((x'84a23f48'))) ASC;
SELECT * FROM v0, rt1, rt0 WHERE (((((rt0.c1)&(0.49751417739971393))) ISNULL)) ORDER BY (((rt0.c2 IN ()))&(v0.c1)) DESC, CAST(x'' AS TEXT), CASE WHEN ((rt1.c3) NOTNULL) THEN ((((((((((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(0.49751417739971393))) ISNULL)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((rt0.c2 IN ()))&(v0.c1)) DESC, CAST(x'' AS TEXT), CASE WHEN ((rt1.c3) NOTNULL) THEN ((((((((((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) END ASC  NULLS FIRST);
SELECT * FROM v0, rt1, rt0 WHERE (((((rt0.c1)&(0.49751417739971393))) ISNULL)) ORDER BY (((rt0.c2 IN ()))&(v0.c1)) DESC, CAST(x'' AS TEXT), CASE WHEN ((rt1.c3) NOTNULL) THEN ((((((((((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(0.49751417739971393))) ISNULL)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((rt0.c2 IN ()))&(v0.c1)) DESC, CAST(x'' AS TEXT), CASE WHEN ((rt1.c3) NOTNULL) THEN ((((((((((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) END ASC  NULLS FIRST);
SELECT * FROM v0, rt1, rt0 WHERE (((((rt0.c1)&(0.49751417739971393))) ISNULL)) ORDER BY (((rt0.c2 IN ()))&(v0.c1)) DESC, CAST(x'' AS TEXT), CASE WHEN ((rt1.c3) NOTNULL) THEN ((((((((((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT * FROM rt1, t0 NATURAL JOIN rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN rt0);
SELECT * FROM rt1, t0 NATURAL JOIN rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN rt0);
SELECT * FROM rt1, t0 NATURAL JOIN rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC));
SELECT * FROM rt0, rt1, v0 WHERE ((((- (rt0.c2))) NOTNULL)) ORDER BY rt1.c1 DESC  NULLS FIRST, (((rt1.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((rt0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))))) ASC, CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c0) NOT BETWEEN (x'8e35') AND (rt0.c3)) THEN NULL WHEN CASE rt0.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c3 ELSE 0.007340071548016858 END THEN '' WHEN ((rt1.c1)IS(rt1.c2)) THEN ((((v0.c2)AND(rt1.c2)))AND(rt1.c2)) ELSE (rt0.c2 IN (rt1.c1, v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt1.c1 DESC  NULLS FIRST, (((rt1.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((rt0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))))) ASC, CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c0) NOT BETWEEN (x'8e35') AND (rt0.c3)) THEN NULL WHEN CASE rt0.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c3 ELSE 0.007340071548016858 END THEN '' WHEN ((rt1.c1)IS(rt1.c2)) THEN ((((v0.c2)AND(rt1.c2)))AND(rt1.c2)) ELSE (rt0.c2 IN (rt1.c1, v0.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0, rt1, v0 WHERE ((((- (rt0.c2))) NOTNULL)) ORDER BY rt1.c1 DESC  NULLS FIRST, (((rt1.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((rt0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))))) ASC, CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c0) NOT BETWEEN (x'8e35') AND (rt0.c3)) THEN NULL WHEN CASE rt0.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c3 ELSE 0.007340071548016858 END THEN '' WHEN ((rt1.c1)IS(rt1.c2)) THEN ((((v0.c2)AND(rt1.c2)))AND(rt1.c2)) ELSE (rt0.c2 IN (rt1.c1, v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt1.c1 DESC  NULLS FIRST, (((rt1.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((rt0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))))) ASC, CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c0) NOT BETWEEN (x'8e35') AND (rt0.c3)) THEN NULL WHEN CASE rt0.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c3 ELSE 0.007340071548016858 END THEN '' WHEN ((rt1.c1)IS(rt1.c2)) THEN ((((v0.c2)AND(rt1.c2)))AND(rt1.c2)) ELSE (rt0.c2 IN (rt1.c1, v0.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0, rt1, v0 WHERE ((((- (rt0.c2))) NOTNULL)) ORDER BY rt1.c1 DESC  NULLS FIRST, (((rt1.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((rt0.c3)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))))) ASC, CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c0) NOT BETWEEN (x'8e35') AND (rt0.c3)) THEN NULL WHEN CASE rt0.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c3 ELSE 0.007340071548016858 END THEN '' WHEN ((rt1.c1)IS(rt1.c2)) THEN ((((v0.c2)AND(rt1.c2)))AND(rt1.c2)) ELSE (rt0.c2 IN (rt1.c1, v0.c0)) END DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c3)) COLLATE BINARY) ORDER BY '8J';
SELECT SUM(count) FROM (SELECT ((((rt0.c1)AND(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY '8J');
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c3)) COLLATE BINARY) ORDER BY '8J';
SELECT SUM(count) FROM (SELECT ((((rt0.c1)AND(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY '8J');
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c3)) COLLATE BINARY) ORDER BY '8J';
SELECT * FROM rt1, rt0, v0, t0 WHERE ((- (LENGTH(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((- (LENGTH(rt1.c1)))) IS TRUE)  as count FROM rt1, rt0, v0, t0);
SELECT * FROM rt1, rt0, v0, t0 WHERE ((- (LENGTH(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((- (LENGTH(rt1.c1)))) IS TRUE)  as count FROM rt1, rt0, v0, t0);
SELECT * FROM rt1, rt0, v0, t0 WHERE ((- (LENGTH(rt1.c1))));
SELECT ALL * FROM rt1, v0 WHERE (IFNULL(rt1.c0, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((IFNULL(rt1.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (IFNULL(rt1.c0, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((IFNULL(rt1.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (IFNULL(rt1.c0, v0.c0) COLLATE RTRIM);
SELECT ALL * FROM rt1, rt0 WHERE ((~ (CASE WHEN rt1.c0 THEN '-1143773070' WHEN rt1.c1 THEN 'v㾢' WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c3 END))) ORDER BY ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)>=((rt0.c0 IN ()))) DESC  NULLS LAST, (NOT (((((((((rt0.c1)OR(rt1.c1)))OR(rt1.c2)))AND(1483614021)))AND(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt1.c0 THEN '-1143773070' WHEN rt1.c1 THEN 'v㾢' WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)>=((rt0.c0 IN ()))) DESC  NULLS LAST, (NOT (((((((((rt0.c1)OR(rt1.c1)))OR(rt1.c2)))AND(1483614021)))AND(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((~ (CASE WHEN rt1.c0 THEN '-1143773070' WHEN rt1.c1 THEN 'v㾢' WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c3 END))) ORDER BY ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)>=((rt0.c0 IN ()))) DESC  NULLS LAST, (NOT (((((((((rt0.c1)OR(rt1.c1)))OR(rt1.c2)))AND(1483614021)))AND(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt1.c0 THEN '-1143773070' WHEN rt1.c1 THEN 'v㾢' WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)>=((rt0.c0 IN ()))) DESC  NULLS LAST, (NOT (((((((((rt0.c1)OR(rt1.c1)))OR(rt1.c2)))AND(1483614021)))AND(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((~ (CASE WHEN rt1.c0 THEN '-1143773070' WHEN rt1.c1 THEN 'v㾢' WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c3 END))) ORDER BY ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)>=((rt0.c0 IN ()))) DESC  NULLS LAST, (NOT (((((((((rt0.c1)OR(rt1.c1)))OR(rt1.c2)))AND(1483614021)))AND(rt0.c3)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((((rt1.c2) NOT BETWEEN ('V n%%') AND (rt0.c2)))AND(((((rt1.c1)AND(rt1.c0)))OR('798140770')))))AND(((rt1.c1) ISNULL)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) NOT BETWEEN ('V n%%') AND (rt0.c2)))AND(((((rt1.c1)AND(rt1.c0)))OR('798140770')))))AND(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((((rt1.c2) NOT BETWEEN ('V n%%') AND (rt0.c2)))AND(((((rt1.c1)AND(rt1.c0)))OR('798140770')))))AND(((rt1.c1) ISNULL)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) NOT BETWEEN ('V n%%') AND (rt0.c2)))AND(((((rt1.c1)AND(rt1.c0)))OR('798140770')))))AND(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((((rt1.c2) NOT BETWEEN ('V n%%') AND (rt0.c2)))AND(((((rt1.c1)AND(rt1.c0)))OR('798140770')))))AND(((rt1.c1) ISNULL)))) ORDER BY NULL;
SELECT COUNT(*) FROM v0 WHERE ((0.9159538693507304 IN ())) ORDER BY CAST((((v0.c1))>(('-1976681806'))) AS TEXT);
SELECT SUM(count) FROM (SELECT (((0.9159538693507304 IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c1))>(('-1976681806'))) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE ((0.9159538693507304 IN ())) ORDER BY CAST((((v0.c1))>(('-1976681806'))) AS TEXT);
SELECT SUM(count) FROM (SELECT (((0.9159538693507304 IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c1))>(('-1976681806'))) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE ((0.9159538693507304 IN ())) ORDER BY CAST((((v0.c1))>(('-1976681806'))) AS TEXT);
SELECT * FROM v0 INNER JOIN t0 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON ((v0.c1) NOT BETWEEN (0.5587985213732675) AND ('1196574667')) COLLATE BINARY WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(x'f773')))OR(rt0.c2))))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(x'f773')))OR(rt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON ((v0.c1) NOT BETWEEN (0.5587985213732675) AND ('1196574667')) COLLATE BINARY ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, NULL ASC  NULLS LAST);
SELECT * FROM v0 INNER JOIN t0 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON ((v0.c1) NOT BETWEEN (0.5587985213732675) AND ('1196574667')) COLLATE BINARY WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(x'f773')))OR(rt0.c2))))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(x'f773')))OR(rt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON ((v0.c1) NOT BETWEEN (0.5587985213732675) AND ('1196574667')) COLLATE BINARY ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, NULL ASC  NULLS LAST);
SELECT * FROM v0 INNER JOIN t0 ON (CAST(rt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON ((v0.c1) NOT BETWEEN (0.5587985213732675) AND ('1196574667')) COLLATE BINARY WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((rt0.c0)OR(x'f773')))OR(rt0.c2))))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT (- (rt0.c2)), ((rt0.c2)*(0.062210566049052174)))) ORDER BY CAST((((rt0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (- (rt0.c2)), ((rt0.c2)*(0.062210566049052174)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2))) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT (- (rt0.c2)), ((rt0.c2)*(0.062210566049052174)))) ORDER BY CAST((((rt0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (- (rt0.c2)), ((rt0.c2)*(0.062210566049052174)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2))) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT (- (rt0.c2)), ((rt0.c2)*(0.062210566049052174)))) ORDER BY CAST((((rt0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2))) AS NUMERIC);
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c1)))OR(v0.c1))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON (rt1.c1 IN ()) COLLATE NOCASE CROSS JOIN rt0 ON ((((rt1.c3)<=(rt1.c1))) BETWEEN (((rt0.c0)>(v0.c0))) AND (rt1.c3 COLLATE RTRIM)) WHERE (((((rt0.c1)%(rt1.c0)))AND(((rt0.c0)!=(rt1.c0))))) ORDER BY ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(rt1.c0)))AND(((rt0.c0)!=(rt1.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c1)))OR(v0.c1))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON (rt1.c1 IN ()) COLLATE NOCASE CROSS JOIN rt0 ON ((((rt1.c3)<=(rt1.c1))) BETWEEN (((rt0.c0)>(v0.c0))) AND (rt1.c3 COLLATE RTRIM)) ORDER BY ((x'') ISNULL)  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c1)))OR(v0.c1))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON (rt1.c1 IN ()) COLLATE NOCASE CROSS JOIN rt0 ON ((((rt1.c3)<=(rt1.c1))) BETWEEN (((rt0.c0)>(v0.c0))) AND (rt1.c3 COLLATE RTRIM)) WHERE (((((rt0.c1)%(rt1.c0)))AND(((rt0.c0)!=(rt1.c0))))) ORDER BY ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(rt1.c0)))AND(((rt0.c0)!=(rt1.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c1)))OR(v0.c1))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON (rt1.c1 IN ()) COLLATE NOCASE CROSS JOIN rt0 ON ((((rt1.c3)<=(rt1.c1))) BETWEEN (((rt0.c0)>(v0.c0))) AND (rt1.c3 COLLATE RTRIM)) ORDER BY ((x'') ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE (CAST(((v0.c1) ISNULL) AS REAL)) ORDER BY CASE WHEN (('1554162613')AND('1573645013')) THEN rt1.c0 COLLATE BINARY WHEN '쪑?' THEN (NULL IN ()) WHEN (NOT (rt0.c0)) THEN NULL ELSE rt1.c1 END ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, rt0, v0 ORDER BY CASE WHEN (('1554162613')AND('1573645013')) THEN rt1.c0 COLLATE BINARY WHEN '쪑?' THEN (NULL IN ()) WHEN (NOT (rt0.c0)) THEN NULL ELSE rt1.c1 END ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE (CAST(((v0.c1) ISNULL) AS REAL)) ORDER BY CASE WHEN (('1554162613')AND('1573645013')) THEN rt1.c0 COLLATE BINARY WHEN '쪑?' THEN (NULL IN ()) WHEN (NOT (rt0.c0)) THEN NULL ELSE rt1.c1 END ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, rt0, v0 ORDER BY CASE WHEN (('1554162613')AND('1573645013')) THEN rt1.c0 COLLATE BINARY WHEN '쪑?' THEN (NULL IN ()) WHEN (NOT (rt0.c0)) THEN NULL ELSE rt1.c1 END ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE (CAST(((v0.c1) ISNULL) AS REAL)) ORDER BY CASE WHEN (('1554162613')AND('1573645013')) THEN rt1.c0 COLLATE BINARY WHEN '쪑?' THEN (NULL IN ()) WHEN (NOT (rt0.c0)) THEN NULL ELSE rt1.c1 END ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE RTRIM ASC;
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((rt0.c3 IN ()));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('2<H9宲Xk');
SELECT SUM(count) FROM (SELECT (('2<H9宲Xk') IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('2<H9宲Xk');
SELECT SUM(count) FROM (SELECT (('2<H9宲Xk') IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('2<H9宲Xk');
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c1)|(((rt1.c0)>(rt1.c1)))) RIGHT OUTER JOIN t0 ON NULL WHERE (CASE ((((rt1.c1)OR(rt1.c3)))AND(rt1.c1))  WHEN SQLITE_COMPILEOPTION_GET(rt1.c0) THEN 0x3c623898 COLLATE RTRIM END) ORDER BY ((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2))) BETWEEN (((v0.c2) NOT NULL)) AND (CAST(v0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CASE ((((rt1.c1)OR(rt1.c3)))AND(rt1.c1))  WHEN SQLITE_COMPILEOPTION_GET(rt1.c0) THEN 0x3c623898 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c1)|(((rt1.c0)>(rt1.c1)))) RIGHT OUTER JOIN t0 ON NULL ORDER BY ((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2))) BETWEEN (((v0.c2) NOT NULL)) AND (CAST(v0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c1)|(((rt1.c0)>(rt1.c1)))) RIGHT OUTER JOIN t0 ON NULL WHERE (CASE ((((rt1.c1)OR(rt1.c3)))AND(rt1.c1))  WHEN SQLITE_COMPILEOPTION_GET(rt1.c0) THEN 0x3c623898 COLLATE RTRIM END) ORDER BY ((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2))) BETWEEN (((v0.c2) NOT NULL)) AND (CAST(v0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CASE ((((rt1.c1)OR(rt1.c3)))AND(rt1.c1))  WHEN SQLITE_COMPILEOPTION_GET(rt1.c0) THEN 0x3c623898 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c1)|(((rt1.c0)>(rt1.c1)))) RIGHT OUTER JOIN t0 ON NULL ORDER BY ((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2))) BETWEEN (((v0.c2) NOT NULL)) AND (CAST(v0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c1)|(((rt1.c0)>(rt1.c1)))) RIGHT OUTER JOIN t0 ON NULL WHERE (CASE ((((rt1.c1)OR(rt1.c3)))AND(rt1.c1))  WHEN SQLITE_COMPILEOPTION_GET(rt1.c0) THEN 0x3c623898 COLLATE RTRIM END) ORDER BY ((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2))) BETWEEN (((v0.c2) NOT NULL)) AND (CAST(v0.c2 AS REAL)));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE UNLIKELY(DISTINCT t0.c0)  WHEN (((t0.c0))>((t0.c0))) THEN ((t0.c0)<<(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) WHEN t0.c0 THEN LOWER(t0.c0) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END, (((NOT (t0.c0))) NOT NULL), ((((t0.c0)%(t0.c0)))>((((t0.c0))>=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE UNLIKELY(DISTINCT t0.c0)  WHEN (((t0.c0))>((t0.c0))) THEN ((t0.c0)<<(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) WHEN t0.c0 THEN LOWER(t0.c0) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END, (((NOT (t0.c0))) NOT NULL), ((((t0.c0)%(t0.c0)))>((((t0.c0))>=((t0.c0))))));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE UNLIKELY(DISTINCT t0.c0)  WHEN (((t0.c0))>((t0.c0))) THEN ((t0.c0)<<(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) WHEN t0.c0 THEN LOWER(t0.c0) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END, (((NOT (t0.c0))) NOT NULL), ((((t0.c0)%(t0.c0)))>((((t0.c0))>=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE UNLIKELY(DISTINCT t0.c0)  WHEN (((t0.c0))>((t0.c0))) THEN ((t0.c0)<<(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) WHEN t0.c0 THEN LOWER(t0.c0) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END, (((NOT (t0.c0))) NOT NULL), ((((t0.c0)%(t0.c0)))>((((t0.c0))>=((t0.c0))))));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE UNLIKELY(DISTINCT t0.c0)  WHEN (((t0.c0))>((t0.c0))) THEN ((t0.c0)<<(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) WHEN t0.c0 THEN LOWER(t0.c0) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END, (((NOT (t0.c0))) NOT NULL), ((((t0.c0)%(t0.c0)))>((((t0.c0))>=((t0.c0)))));
SELECT ALL * FROM rt0, rt1 WHERE (QUOTE(rt0.c0 COLLATE RTRIM)) ORDER BY ((((rt1.c3 IN ())))>=((CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((QUOTE(rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c3 IN ())))>=((CAST(rt1.c3 AS BLOB)))));
SELECT ALL * FROM rt0, rt1 WHERE (QUOTE(rt0.c0 COLLATE RTRIM)) ORDER BY ((((rt1.c3 IN ())))>=((CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((QUOTE(rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c3 IN ())))>=((CAST(rt1.c3 AS BLOB)))));
SELECT ALL * FROM rt0, rt1 WHERE (QUOTE(rt0.c0 COLLATE RTRIM)) ORDER BY ((((rt1.c3 IN ())))>=((CAST(rt1.c3 AS BLOB))));
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((CASE v0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ())) ORDER BY (((((rt1.c2))>=((rt0.c2))))-((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY (((((rt1.c2))>=((rt0.c2))))-((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((CASE v0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ())) ORDER BY (((((rt1.c2))>=((rt0.c2))))-((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY (((((rt1.c2))>=((rt0.c2))))-((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((CASE v0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ())) ORDER BY (((((rt1.c2))>=((rt0.c2))))-((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c1)AND(v0.c2)))AND('')) COLLATE RTRIM) ORDER BY (((v0.c0 IN ()))LIKE((- (v0.c2))))  NULLS LAST, (NOT ('start of dayHB9'));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)AND(v0.c2)))AND('')) COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED, v0 ORDER BY (((v0.c0 IN ()))LIKE((- (v0.c2))))  NULLS LAST, (NOT ('start of dayHB9')));
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c1)AND(v0.c2)))AND('')) COLLATE RTRIM) ORDER BY (((v0.c0 IN ()))LIKE((- (v0.c2))))  NULLS LAST, (NOT ('start of dayHB9'));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)AND(v0.c2)))AND('')) COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED, v0 ORDER BY (((v0.c0 IN ()))LIKE((- (v0.c2))))  NULLS LAST, (NOT ('start of dayHB9')));
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c1)AND(v0.c2)))AND('')) COLLATE RTRIM) ORDER BY (((v0.c0 IN ()))LIKE((- (v0.c2))))  NULLS LAST, (NOT ('start of dayHB9'));
SELECT * FROM t0, v0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)) LEFT OUTER JOIN rt1 ON (~ (v0.c0 COLLATE BINARY)) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (((('1539050507')IS NOT(rt1.c0)))<(((rt0.c1)&(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)) LEFT OUTER JOIN rt1 ON (~ (v0.c0 COLLATE BINARY)) ORDER BY (((('1539050507')IS NOT(rt1.c0)))<(((rt0.c1)&(rt0.c3)))) DESC);
SELECT * FROM t0, v0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)) LEFT OUTER JOIN rt1 ON (~ (v0.c0 COLLATE BINARY)) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (((('1539050507')IS NOT(rt1.c0)))<(((rt0.c1)&(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)) LEFT OUTER JOIN rt1 ON (~ (v0.c0 COLLATE BINARY)) ORDER BY (((('1539050507')IS NOT(rt1.c0)))<(((rt0.c1)&(rt0.c3)))) DESC);
SELECT * FROM t0, v0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)) LEFT OUTER JOIN rt1 ON (~ (v0.c0 COLLATE BINARY)) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (((('1539050507')IS NOT(rt1.c0)))<(((rt0.c1)&(rt0.c3)))) DESC;
SELECT ALL * FROM rt0, t0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c1)>(rt0.c1))))) ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN (((rt0.c1)>(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c1)>(rt0.c1))))) ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN (((rt0.c1)>(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c1)>(rt0.c1))))) ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (SQLITE_VERSION()) ORDER BY (((rt1.c1)) NOT BETWEEN (((NOT (rt0.c3)))) AND (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c1, rt0.c1)) AND ((0.35585430588075817, rt0.c2, rt1.c2))))))  NULLS LAST, (json_array_length(rt1.c3, rt0.c3) IN (0.9668981124867975));
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((rt1.c1)) NOT BETWEEN (((NOT (rt0.c3)))) AND (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c1, rt0.c1)) AND ((0.35585430588075817, rt0.c2, rt1.c2))))))  NULLS LAST, (json_array_length(rt1.c3, rt0.c3) IN (0.9668981124867975)));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (SQLITE_VERSION()) ORDER BY (((rt1.c1)) NOT BETWEEN (((NOT (rt0.c3)))) AND (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c1, rt0.c1)) AND ((0.35585430588075817, rt0.c2, rt1.c2))))))  NULLS LAST, (json_array_length(rt1.c3, rt0.c3) IN (0.9668981124867975));
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((rt1.c1)) NOT BETWEEN (((NOT (rt0.c3)))) AND (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c1, rt0.c1)) AND ((0.35585430588075817, rt0.c2, rt1.c2))))))  NULLS LAST, (json_array_length(rt1.c3, rt0.c3) IN (0.9668981124867975)));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (SQLITE_VERSION()) ORDER BY (((rt1.c1)) NOT BETWEEN (((NOT (rt0.c3)))) AND (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, rt1.c1, rt0.c1)) AND ((0.35585430588075817, rt0.c2, rt1.c2))))))  NULLS LAST, (json_array_length(rt1.c3, rt0.c3) IN (0.9668981124867975));
SELECT * FROM rt1 WHERE ((~ (rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (rt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt1, rt0, v0, t0 WHERE (rt0.c1) ORDER BY ((((((NULL) NOTNULL))AND((- (rt0.c3)))))OR(((v0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((((((NULL) NOTNULL))AND((- (rt0.c3)))))OR(((v0.c2) ISNULL))) ASC);
SELECT ALL * FROM rt1, rt0, v0, t0 WHERE (rt0.c1) ORDER BY ((((((NULL) NOTNULL))AND((- (rt0.c3)))))OR(((v0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((((((NULL) NOTNULL))AND((- (rt0.c3)))))OR(((v0.c2) ISNULL))) ASC);
SELECT ALL * FROM rt1, rt0, v0, t0 WHERE (rt0.c1) ORDER BY ((((((NULL) NOTNULL))AND((- (rt0.c3)))))OR(((v0.c2) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (LIKELY(0.9739201488543048)) ORDER BY CAST(rt1.c1 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(0.9739201488543048)) IS TRUE)  as count FROM rt1, v0 ORDER BY CAST(rt1.c1 AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (LIKELY(0.9739201488543048)) ORDER BY CAST(rt1.c1 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(0.9739201488543048)) IS TRUE)  as count FROM rt1, v0 ORDER BY CAST(rt1.c1 AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (LIKELY(0.9739201488543048)) ORDER BY CAST(rt1.c1 AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY CAST(((t0.c0)<=(t0.c0)) AS INTEGER)  NULLS LAST, ((((t0.c0)<(t0.c0))) NOT BETWEEN (0.9107250662190568) AND (((t0.c0)>=(t0.c0)))) ASC  NULLS LAST, (((((x'') NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS BLOB), (~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=((((((t0.c0)OR(t0.c0)))OR(t0.c0)), (NOT (t0.c0)), -696420829, ((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)<=(t0.c0)) AS INTEGER)  NULLS LAST, ((((t0.c0)<(t0.c0))) NOT BETWEEN (0.9107250662190568) AND (((t0.c0)>=(t0.c0)))) ASC  NULLS LAST, (((((x'') NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS BLOB), (~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=((((((t0.c0)OR(t0.c0)))OR(t0.c0)), (NOT (t0.c0)), -696420829, ((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY CAST(((t0.c0)<=(t0.c0)) AS INTEGER)  NULLS LAST, ((((t0.c0)<(t0.c0))) NOT BETWEEN (0.9107250662190568) AND (((t0.c0)>=(t0.c0)))) ASC  NULLS LAST, (((((x'') NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS BLOB), (~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=((((((t0.c0)OR(t0.c0)))OR(t0.c0)), (NOT (t0.c0)), -696420829, ((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)<=(t0.c0)) AS INTEGER)  NULLS LAST, ((((t0.c0)<(t0.c0))) NOT BETWEEN (0.9107250662190568) AND (((t0.c0)>=(t0.c0)))) ASC  NULLS LAST, (((((x'') NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS BLOB), (~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=((((((t0.c0)OR(t0.c0)))OR(t0.c0)), (NOT (t0.c0)), -696420829, ((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY CAST(((t0.c0)<=(t0.c0)) AS INTEGER)  NULLS LAST, ((((t0.c0)<(t0.c0))) NOT BETWEEN (0.9107250662190568) AND (((t0.c0)>=(t0.c0)))) ASC  NULLS LAST, (((((x'') NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS BLOB), (~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<=((((((t0.c0)OR(t0.c0)))OR(t0.c0)), (NOT (t0.c0)), -696420829, ((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) DESC;
SELECT * FROM rt0, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c1)))-(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c1)))-(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c1)))-(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c1)))-(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c1)))-(CAST(v0.c0 AS TEXT))));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN rt1 ON v0.c2 CROSS JOIN t0 ON ((((((((rt0.c3)AND(v0.c2)))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c1 END)))OR(rt0.c3)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON v0.c2 CROSS JOIN t0 ON ((((((((rt0.c3)AND(v0.c2)))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c1 END)))OR(rt0.c3)));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN rt1 ON v0.c2 CROSS JOIN t0 ON ((((((((rt0.c3)AND(v0.c2)))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c1 END)))OR(rt0.c3)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON v0.c2 CROSS JOIN t0 ON ((((((((rt0.c3)AND(v0.c2)))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c1 END)))OR(rt0.c3)));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN rt1 ON v0.c2 CROSS JOIN t0 ON ((((((((rt0.c3)AND(v0.c2)))AND(rt1.c1)))OR(CASE rt1.c0  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c1 END)))OR(rt0.c3)) WHERE (rt0.c1);
SELECT * FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, 0.9398621861803222, rt0.c2)) AND ((v0.c2, rt0.c2, t0.c0))))AND((v0.c0 IN ()))))OR(CAST(rt0.c2 AS INTEGER))) WHERE (((v0.c2 COLLATE BINARY) NOTNULL)) ORDER BY ((rt0.c0) BETWEEN (((rt0.c3) NOT NULL)) AND ((((v0.c0, v0.c0, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c1))))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))+(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, 0.9398621861803222, rt0.c2)) AND ((v0.c2, rt0.c2, t0.c0))))AND((v0.c0 IN ()))))OR(CAST(rt0.c2 AS INTEGER))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c3) NOT NULL)) AND ((((v0.c0, v0.c0, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c1))))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))+(rt0.c2 COLLATE RTRIM)));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, 0.9398621861803222, rt0.c2)) AND ((v0.c2, rt0.c2, t0.c0))))AND((v0.c0 IN ()))))OR(CAST(rt0.c2 AS INTEGER))) WHERE (((v0.c2 COLLATE BINARY) NOTNULL)) ORDER BY ((rt0.c0) BETWEEN (((rt0.c3) NOT NULL)) AND ((((v0.c0, v0.c0, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c1))))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))+(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, 0.9398621861803222, rt0.c2)) AND ((v0.c2, rt0.c2, t0.c0))))AND((v0.c0 IN ()))))OR(CAST(rt0.c2 AS INTEGER))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c3) NOT NULL)) AND ((((v0.c0, v0.c0, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c1))))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))+(rt0.c2 COLLATE RTRIM)));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, 0.9398621861803222, rt0.c2)) AND ((v0.c2, rt0.c2, t0.c0))))AND((v0.c0 IN ()))))OR(CAST(rt0.c2 AS INTEGER))) WHERE (((v0.c2 COLLATE BINARY) NOTNULL)) ORDER BY ((rt0.c0) BETWEEN (((rt0.c3) NOT NULL)) AND ((((v0.c0, v0.c0, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c1))))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))+(rt0.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((COALESCE(t0.c0, rt1.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c0, rt1.c0)) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((COALESCE(t0.c0, rt1.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c0, rt1.c0)) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((COALESCE(t0.c0, rt1.c0)) NOTNULL));
SELECT * FROM t0, v0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, v0, rt1);
SELECT * FROM t0, v0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, v0, rt1);
SELECT * FROM t0, v0, rt1 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, t0, v0, rt1 WHERE (((((rt0.c0)+(rt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((((((((rt0.c1)AND(x'')))OR(rt1.c2)))OR('121195535')))AND(rt0.c1))))) ORDER BY t0.c0, (~ (rt0.c3 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)+(rt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((((((((rt0.c1)AND(x'')))OR(rt1.c2)))OR('121195535')))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY t0.c0, (~ (rt0.c3 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, v0, rt1 WHERE (((((rt0.c0)+(rt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((((((((rt0.c1)AND(x'')))OR(rt1.c2)))OR('121195535')))AND(rt0.c1))))) ORDER BY t0.c0, (~ (rt0.c3 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)+(rt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((((((((rt0.c1)AND(x'')))OR(rt1.c2)))OR('121195535')))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY t0.c0, (~ (rt0.c3 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, v0, rt1 WHERE (((((rt0.c0)+(rt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((((((((rt0.c1)AND(x'')))OR(rt1.c2)))OR('121195535')))AND(rt0.c1))))) ORDER BY t0.c0, (~ (rt0.c3 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM v0, rt0 INNER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) WHERE (((((rt0.c1)*(t0.c0))) NOT BETWEEN ((+ (v0.c1))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(t0.c0))) NOT BETWEEN ((+ (v0.c1))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0 INNER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM v0, rt0 INNER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) WHERE (((((rt0.c1)*(t0.c0))) NOT BETWEEN ((+ (v0.c1))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(t0.c0))) NOT BETWEEN ((+ (v0.c1))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0 INNER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM v0, rt0 INNER JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) WHERE (((((rt0.c1)*(t0.c0))) NOT BETWEEN ((+ (v0.c1))) AND ((rt0.c2 IN ()))));
SELECT * FROM rt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(v0.c1 AS REAL) THEN CASE rt1.c2  WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END END) ORDER BY ((((v0.c2)|(rt0.c2))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (((rt0.c2)LIKE(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c1 AS REAL) THEN CASE rt1.c2  WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1 ORDER BY ((((v0.c2)|(rt0.c2))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (((rt0.c2)LIKE(rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(v0.c1 AS REAL) THEN CASE rt1.c2  WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END END) ORDER BY ((((v0.c2)|(rt0.c2))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (((rt0.c2)LIKE(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c1 AS REAL) THEN CASE rt1.c2  WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1 ORDER BY ((((v0.c2)|(rt0.c2))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (((rt0.c2)LIKE(rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(v0.c1 AS REAL) THEN CASE rt1.c2  WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END END) ORDER BY ((((v0.c2)|(rt0.c2))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (((rt0.c2)LIKE(rt0.c1))))  NULLS FIRST;
SELECT * FROM t0, rt0, v0 WHERE (-1.335723826E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.335723826E9) IS TRUE)  as count FROM t0, rt0, v0);
SELECT * FROM t0, rt0, v0 WHERE (-1.335723826E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.335723826E9) IS TRUE)  as count FROM t0, rt0, v0);
SELECT * FROM t0, rt0, v0 WHERE (-1.335723826E9);
SELECT * FROM rt1, rt0, v0, t0 WHERE (CASE WHEN (rt1.c0 IN (v0.c2)) THEN CAST(x'' AS INTEGER) WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c1)) THEN (rt1.c2 IN ()) WHEN 0x458d65fe COLLATE BINARY THEN (rt1.c1 IN (rt0.c1)) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN (v0.c2)) THEN CAST(x'' AS INTEGER) WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c1)) THEN (rt1.c2 IN ()) WHEN 0x458d65fe COLLATE BINARY THEN (rt1.c1 IN (rt0.c1)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt1, rt0, v0, t0);
SELECT * FROM rt1, rt0, v0, t0 WHERE (CASE WHEN (rt1.c0 IN (v0.c2)) THEN CAST(x'' AS INTEGER) WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c1)) THEN (rt1.c2 IN ()) WHEN 0x458d65fe COLLATE BINARY THEN (rt1.c1 IN (rt0.c1)) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN (v0.c2)) THEN CAST(x'' AS INTEGER) WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c1)) THEN (rt1.c2 IN ()) WHEN 0x458d65fe COLLATE BINARY THEN (rt1.c1 IN (rt0.c1)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt1, rt0, v0, t0);
SELECT * FROM rt1, rt0, v0, t0 WHERE (CASE WHEN (rt1.c0 IN (v0.c2)) THEN CAST(x'' AS INTEGER) WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c1)) THEN (rt1.c2 IN ()) WHEN 0x458d65fe COLLATE BINARY THEN (rt1.c1 IN (rt0.c1)) ELSE rt0.c0 END);
SELECT ALL * FROM t0, rt0, v0 WHERE ((((rt0.c1 COLLATE BINARY))<=(('5(4'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE BINARY))<=(('5(4')))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL * FROM t0, rt0, v0 WHERE ((((rt0.c1 COLLATE BINARY))<=(('5(4'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE BINARY))<=(('5(4')))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL * FROM t0, rt0, v0 WHERE ((((rt0.c1 COLLATE BINARY))<=(('5(4'))));
SELECT ALL * FROM rt0, v0 WHERE (((0.37917958871328605) IS FALSE)) ORDER BY (rt0.c2 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.37917958871328605) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((0.37917958871328605) IS FALSE)) ORDER BY (rt0.c2 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.37917958871328605) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((0.37917958871328605) IS FALSE)) ORDER BY (rt0.c2 IN ()) DESC  NULLS LAST;
SELECT * FROM rt1, v0, rt0 WHERE (((((((((((rt0.c1)LIKE('-1935139555')))AND(((rt1.c0) NOT NULL))))OR((v0.c0 IN (v0.c1, rt1.c1)))))OR(NULL)))AND(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)LIKE('-1935139555')))AND(((rt1.c0) NOT NULL))))OR((v0.c0 IN (v0.c1, rt1.c1)))))OR(NULL)))AND(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE (((((((((((rt0.c1)LIKE('-1935139555')))AND(((rt1.c0) NOT NULL))))OR((v0.c0 IN (v0.c1, rt1.c1)))))OR(NULL)))AND(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)LIKE('-1935139555')))AND(((rt1.c0) NOT NULL))))OR((v0.c0 IN (v0.c1, rt1.c1)))))OR(NULL)))AND(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE (((((((((((rt0.c1)LIKE('-1935139555')))AND(((rt1.c0) NOT NULL))))OR((v0.c0 IN (v0.c1, rt1.c1)))))OR(NULL)))AND(CAST(rt0.c3 AS TEXT))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c1) ORDER BY ((v0.c0) IS TRUE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c1) ORDER BY ((v0.c0) IS TRUE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c1) ORDER BY ((v0.c0) IS TRUE) COLLATE NOCASE;
SELECT COUNT(*) FROM v0 WHERE ((((('1033143839') BETWEEN (v0.c1) AND (v0.c1)))&(HEX(v0.c2)))) ORDER BY (((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) AND ((CASE WHEN v0.c2 THEN v0.c0 ELSE x'' END))) DESC  NULLS FIRST, (((- (v0.c2)))*(v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('1033143839') BETWEEN (v0.c1) AND (v0.c1)))&(HEX(v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) AND ((CASE WHEN v0.c2 THEN v0.c0 ELSE x'' END))) DESC  NULLS FIRST, (((- (v0.c2)))*(v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((('1033143839') BETWEEN (v0.c1) AND (v0.c1)))&(HEX(v0.c2)))) ORDER BY (((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) AND ((CASE WHEN v0.c2 THEN v0.c0 ELSE x'' END))) DESC  NULLS FIRST, (((- (v0.c2)))*(v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('1033143839') BETWEEN (v0.c1) AND (v0.c1)))&(HEX(v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) AND ((CASE WHEN v0.c2 THEN v0.c0 ELSE x'' END))) DESC  NULLS FIRST, (((- (v0.c2)))*(v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((('1033143839') BETWEEN (v0.c1) AND (v0.c1)))&(HEX(v0.c2)))) ORDER BY (((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) AND ((CASE WHEN v0.c2 THEN v0.c0 ELSE x'' END))) DESC  NULLS FIRST, (((- (v0.c2)))*(v0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY 0x71c6ecd1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY 0X71c6ecd1 ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY 0x71c6ecd1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY 0X71c6ecd1 ASC  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((((v0.c0) ISNULL))-((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))-((v0.c1 IN ())))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((((v0.c0) ISNULL))-((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))-((v0.c1 IN ())))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((((v0.c0) ISNULL))-((v0.c1 IN ()))));
SELECT * FROM rt0, t0, v0, rt1 WHERE (json_array_length(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, t0, v0, rt1);
SELECT * FROM rt0, t0, v0, rt1 WHERE (json_array_length(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, t0, v0, rt1);
SELECT * FROM rt0, t0, v0, rt1 WHERE (json_array_length(rt0.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ('-1655206770', v0.c1))) NOT BETWEEN (((((v0.c0)OR(v0.c2)))AND(v0.c0))) AND (CAST(v0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ('-1655206770', v0.c1))) NOT BETWEEN (((((v0.c0)OR(v0.c2)))AND(v0.c0))) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ('-1655206770', v0.c1))) NOT BETWEEN (((((v0.c0)OR(v0.c2)))AND(v0.c0))) AND (CAST(v0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ('-1655206770', v0.c1))) NOT BETWEEN (((((v0.c0)OR(v0.c2)))AND(v0.c0))) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ('-1655206770', v0.c1))) NOT BETWEEN (((((v0.c0)OR(v0.c2)))AND(v0.c0))) AND (CAST(v0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c2) IS TRUE))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY ((v0.c1 COLLATE RTRIM)GLOB(((v0.c2)OR(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2) IS TRUE))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c1 COLLATE RTRIM)GLOB(((v0.c2)OR(v0.c2)))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c2) IS TRUE))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY ((v0.c1 COLLATE RTRIM)GLOB(((v0.c2)OR(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2) IS TRUE))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c1 COLLATE RTRIM)GLOB(((v0.c2)OR(v0.c2)))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c2) IS TRUE))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY ((v0.c1 COLLATE RTRIM)GLOB(((v0.c2)OR(v0.c2)))) DESC;
SELECT COUNT(*) FROM t0 NOT INDEXED, v0, rt1, rt0 WHERE ((((v0.c2) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, v0, rt1, rt0 WHERE ((((v0.c2) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, v0, rt1, rt0 WHERE ((((v0.c2) IS FALSE) IN ()));
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((CASE WHEN 0.6777763059377537 THEN rt1.c2 ELSE rt0.c1 END) BETWEEN (((rt1.c1)LIKE(rt0.c1))) AND (((rt1.c2)>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.6777763059377537 THEN rt1.c2 ELSE rt0.c1 END) BETWEEN (((rt1.c1)LIKE(rt0.c1))) AND (((rt1.c2)>(rt1.c0))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((CASE WHEN 0.6777763059377537 THEN rt1.c2 ELSE rt0.c1 END) BETWEEN (((rt1.c1)LIKE(rt0.c1))) AND (((rt1.c2)>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.6777763059377537 THEN rt1.c2 ELSE rt0.c1 END) BETWEEN (((rt1.c1)LIKE(rt0.c1))) AND (((rt1.c2)>(rt1.c0))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((CASE WHEN 0.6777763059377537 THEN rt1.c2 ELSE rt0.c1 END) BETWEEN (((rt1.c1)LIKE(rt0.c1))) AND (((rt1.c2)>(rt1.c0)))));
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt1.c2))) IN ()) WHERE ((((t0.c0))<((LIKELIHOOD(rt1.c2, 0.8757891381345488)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<((LIKELIHOOD(rt1.c2, 0.8757891381345488))))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt1.c2))) IN ()));
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt1.c2))) IN ()) WHERE ((((t0.c0))<((LIKELIHOOD(rt1.c2, 0.8757891381345488)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<((LIKELIHOOD(rt1.c2, 0.8757891381345488))))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt1.c2))) IN ()));
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt1.c2))) IN ()) WHERE ((((t0.c0))<((LIKELIHOOD(rt1.c2, 0.8757891381345488)))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((CASE rt1.c1  WHEN '' THEN rt0.c1 WHEN rt1.c0 THEN '0.4853344333209907' WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c3 END)/(((rt0.c0)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN '' THEN rt0.c1 WHEN rt1.c0 THEN '0.4853344333209907' WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c3 END)/(((rt0.c0)/(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((CASE rt1.c1  WHEN '' THEN rt0.c1 WHEN rt1.c0 THEN '0.4853344333209907' WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c3 END)/(((rt0.c0)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN '' THEN rt0.c1 WHEN rt1.c0 THEN '0.4853344333209907' WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c3 END)/(((rt0.c0)/(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((CASE rt1.c1  WHEN '' THEN rt0.c1 WHEN rt1.c0 THEN '0.4853344333209907' WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c3 END)/(((rt0.c0)/(rt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) ORDER BY ((((rt1.c0 COLLATE RTRIM)AND(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)))))OR(CASE WHEN rt1.c3 THEN rt1.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0 COLLATE RTRIM)AND(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)))))OR(CASE WHEN rt1.c3 THEN rt1.c1 END)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) ORDER BY ((((rt1.c0 COLLATE RTRIM)AND(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)))))OR(CASE WHEN rt1.c3 THEN rt1.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0 COLLATE RTRIM)AND(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)))))OR(CASE WHEN rt1.c3 THEN rt1.c1 END)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) ORDER BY ((((rt1.c0 COLLATE RTRIM)AND(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)))))OR(CASE WHEN rt1.c3 THEN rt1.c1 END)) ASC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt0.c2)))AND(v0.c0))  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (v0.c2)) THEN ((rt1.c2)*(rt0.c1)) END CROSS JOIN v0 ON IFNULL(((v0.c1) NOT BETWEEN (rt1.c0) AND (0.7146583236549463)), (((0.8524272673424805)) BETWEEN ((rt0.c2)) AND ((rt1.c1)))) WHERE (((((rt1.c2)AND(((v0.c1) ISNULL))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c2)))))) ORDER BY ((((((((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(v0.c1)))OR(rt0.c0)))AND(COALESCE(DISTINCT v0.c2, rt1.c1, rt1.c2, rt0.c2))))AND(((rt0.c3)<=(rt0.c2)))))AND(rt1.c3 COLLATE BINARY)))OR(((rt1.c3)||(rt1.c1))))  NULLS LAST, (NOT ((((t0.c0))<((rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)AND(((v0.c1) ISNULL))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt0.c2)))AND(v0.c0))  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (v0.c2)) THEN ((rt1.c2)*(rt0.c1)) END CROSS JOIN v0 ON IFNULL(((v0.c1) NOT BETWEEN (rt1.c0) AND (0.7146583236549463)), (((0.8524272673424805)) BETWEEN ((rt0.c2)) AND ((rt1.c1)))) ORDER BY ((((((((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(v0.c1)))OR(rt0.c0)))AND(COALESCE(DISTINCT v0.c2, rt1.c1, rt1.c2, rt0.c2))))AND(((rt0.c3)<=(rt0.c2)))))AND(rt1.c3 COLLATE BINARY)))OR(((rt1.c3)||(rt1.c1))))  NULLS LAST, (NOT ((((t0.c0))<((rt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt0.c2)))AND(v0.c0))  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (v0.c2)) THEN ((rt1.c2)*(rt0.c1)) END CROSS JOIN v0 ON IFNULL(((v0.c1) NOT BETWEEN (rt1.c0) AND (0.7146583236549463)), (((0.8524272673424805)) BETWEEN ((rt0.c2)) AND ((rt1.c1)))) WHERE (((((rt1.c2)AND(((v0.c1) ISNULL))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c2)))))) ORDER BY ((((((((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(v0.c1)))OR(rt0.c0)))AND(COALESCE(DISTINCT v0.c2, rt1.c1, rt1.c2, rt0.c2))))AND(((rt0.c3)<=(rt0.c2)))))AND(rt1.c3 COLLATE BINARY)))OR(((rt1.c3)||(rt1.c1))))  NULLS LAST, (NOT ((((t0.c0))<((rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)AND(((v0.c1) ISNULL))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt0.c2)))AND(v0.c0))  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (v0.c2)) THEN ((rt1.c2)*(rt0.c1)) END CROSS JOIN v0 ON IFNULL(((v0.c1) NOT BETWEEN (rt1.c0) AND (0.7146583236549463)), (((0.8524272673424805)) BETWEEN ((rt0.c2)) AND ((rt1.c1)))) ORDER BY ((((((((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(v0.c1)))OR(rt0.c0)))AND(COALESCE(DISTINCT v0.c2, rt1.c1, rt1.c2, rt0.c2))))AND(((rt0.c3)<=(rt0.c2)))))AND(rt1.c3 COLLATE BINARY)))OR(((rt1.c3)||(rt1.c1))))  NULLS LAST, (NOT ((((t0.c0))<((rt1.c0))))) DESC);
SELECT COUNT(*) FROM rt0, rt1, t0, v0 WHERE (((((x'')AND(rt0.c1)))AND(CAST(rt0.c0 AS NUMERIC)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(rt0.c1)))AND(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, t0, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0, v0 WHERE (((((x'')AND(rt0.c1)))AND(CAST(rt0.c0 AS NUMERIC)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(rt0.c1)))AND(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, t0, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0, v0 WHERE (((((x'')AND(rt0.c1)))AND(CAST(rt0.c0 AS NUMERIC)))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, t0 INNER JOIN rt1 ON (((rt1.c1 IN ()))GLOB(((rt0.c2) NOTNULL))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, v0, t0 INNER JOIN rt1 ON (((rt1.c1 IN ()))GLOB(((rt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, v0, t0 INNER JOIN rt1 ON (((rt1.c1 IN ()))GLOB(((rt0.c2) NOTNULL))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, v0, t0 INNER JOIN rt1 ON (((rt1.c1 IN ()))GLOB(((rt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, v0, t0 INNER JOIN rt1 ON (((rt1.c1 IN ()))GLOB(((rt0.c2) NOTNULL))) WHERE (rt1.c3);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) NOTNULL)  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (CAST(NULL COLLATE NOCASE AS REAL)) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c3)<=(rt1.c0)) ELSE ((rt1.c3)||(rt1.c2)) END, ((rt1.c3)<=(t0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c3)<=(rt1.c0)) ELSE ((rt1.c3)||(rt1.c2)) END, ((rt1.c3)<=(t0.c0)) COLLATE RTRIM DESC);
SELECT * FROM t0, rt1 WHERE (CAST(NULL COLLATE NOCASE AS REAL)) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c3)<=(rt1.c0)) ELSE ((rt1.c3)||(rt1.c2)) END, ((rt1.c3)<=(t0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c3)<=(rt1.c0)) ELSE ((rt1.c3)||(rt1.c2)) END, ((rt1.c3)<=(t0.c0)) COLLATE RTRIM DESC);
SELECT * FROM t0, rt1 WHERE (CAST(NULL COLLATE NOCASE AS REAL)) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c3)<=(rt1.c0)) ELSE ((rt1.c3)||(rt1.c2)) END, ((rt1.c3)<=(t0.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM t0, rt1 CROSS JOIN v0 ON (rt1.c1 IN ()) COLLATE BINARY WHERE (json_extract(TYPEOF(v0.c2), IFNULL(v0.c0, v0.c1)));
SELECT SUM(count) FROM (SELECT ((json_extract(TYPEOF(v0.c2), IFNULL(v0.c0, v0.c1))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN v0 ON (rt1.c1 IN ()) COLLATE BINARY);
SELECT ALL * FROM t0, rt1 CROSS JOIN v0 ON (rt1.c1 IN ()) COLLATE BINARY WHERE (json_extract(TYPEOF(v0.c2), IFNULL(v0.c0, v0.c1)));
SELECT SUM(count) FROM (SELECT ((json_extract(TYPEOF(v0.c2), IFNULL(v0.c0, v0.c1))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN v0 ON (rt1.c1 IN ()) COLLATE BINARY);
SELECT ALL * FROM t0, rt1 CROSS JOIN v0 ON (rt1.c1 IN ()) COLLATE BINARY WHERE (json_extract(TYPEOF(v0.c2), IFNULL(v0.c0, v0.c1)));
SELECT * FROM t0, rt0, rt1, v0 WHERE (((((((rt1.c1)AND(NULL)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN x'' THEN rt0.c0 ELSE rt0.c3 END) AND (((v0.c0) BETWEEN (v0.c2) AND (rt0.c3))))) ORDER BY (((NOT (rt1.c2))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(NULL)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN x'' THEN rt0.c0 ELSE rt0.c3 END) AND (((v0.c0) BETWEEN (v0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM t0, rt0, rt1, v0 ORDER BY (((NOT (rt1.c2))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((rt1.c0 IN ()))));
SELECT * FROM t0, rt0, rt1, v0 WHERE (((((((rt1.c1)AND(NULL)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN x'' THEN rt0.c0 ELSE rt0.c3 END) AND (((v0.c0) BETWEEN (v0.c2) AND (rt0.c3))))) ORDER BY (((NOT (rt1.c2))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(NULL)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN x'' THEN rt0.c0 ELSE rt0.c3 END) AND (((v0.c0) BETWEEN (v0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM t0, rt0, rt1, v0 ORDER BY (((NOT (rt1.c2))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((rt1.c0 IN ()))));
SELECT * FROM t0, rt0, rt1, v0 WHERE (((((((rt1.c1)AND(NULL)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN x'' THEN rt0.c0 ELSE rt0.c3 END) AND (((v0.c0) BETWEEN (v0.c2) AND (rt0.c3))))) ORDER BY (((NOT (rt1.c2))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((rt1.c0 IN ())));
SELECT * FROM rt1 WHERE (((rt1.c2) BETWEEN (CASE WHEN NULL THEN rt1.c2 END) AND (rt1.c0))) ORDER BY LIKELIHOOD(DISTINCT (((NULL, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))), 0.8762898705176508)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (CASE WHEN NULL THEN rt1.c2 END) AND (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(DISTINCT (((NULL, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))), 0.8762898705176508)  NULLS LAST);
SELECT * FROM rt1 WHERE (((rt1.c2) BETWEEN (CASE WHEN NULL THEN rt1.c2 END) AND (rt1.c0))) ORDER BY LIKELIHOOD(DISTINCT (((NULL, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))), 0.8762898705176508)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (CASE WHEN NULL THEN rt1.c2 END) AND (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(DISTINCT (((NULL, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))), 0.8762898705176508)  NULLS LAST);
SELECT * FROM rt1 WHERE (((rt1.c2) BETWEEN (CASE WHEN NULL THEN rt1.c2 END) AND (rt1.c0))) ORDER BY LIKELIHOOD(DISTINCT (((NULL, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))), 0.8762898705176508)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((v0.c1)>=(rt0.c1)) IN (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((v0.c1)>=(rt0.c1)) IN (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((v0.c1)>=(rt0.c1)) IN (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((v0.c1)>=(rt0.c1)) IN (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((v0.c1)>=(rt0.c1)) IN (v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, rt1, v0, t0 WHERE ((((((((rt1.c2, rt1.c1, rt0.c1, rt0.c1, rt0.c2))>=((v0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c1))))AND(CAST(rt1.c3 AS TEXT))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2, rt1.c1, rt0.c1, rt0.c1, rt0.c2))>=((v0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c1))))AND(CAST(rt1.c3 AS TEXT))))AND(NULL))) IS TRUE)  as count FROM rt0, rt1, v0, t0);
SELECT COUNT(*) FROM rt0, rt1, v0, t0 WHERE ((((((((rt1.c2, rt1.c1, rt0.c1, rt0.c1, rt0.c2))>=((v0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c1))))AND(CAST(rt1.c3 AS TEXT))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2, rt1.c1, rt0.c1, rt0.c1, rt0.c2))>=((v0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c1))))AND(CAST(rt1.c3 AS TEXT))))AND(NULL))) IS TRUE)  as count FROM rt0, rt1, v0, t0);
SELECT COUNT(*) FROM rt0, rt1, v0, t0 WHERE ((((((((rt1.c2, rt1.c1, rt0.c1, rt0.c1, rt0.c2))>=((v0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c1))))AND(CAST(rt1.c3 AS TEXT))))AND(NULL)));
SELECT * FROM t0, v0 WHERE ((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END)) AND ((((t0.c0) ISNULL))))) ORDER BY (((CASE t0.c0  WHEN t0.c0 THEN v0.c2 END))<=((((x'')IS NOT(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END)) AND ((((t0.c0) ISNULL))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((CASE t0.c0  WHEN t0.c0 THEN v0.c2 END))<=((((x'')IS NOT(v0.c2))))));
SELECT * FROM t0, v0 WHERE ((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END)) AND ((((t0.c0) ISNULL))))) ORDER BY (((CASE t0.c0  WHEN t0.c0 THEN v0.c2 END))<=((((x'')IS NOT(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END)) AND ((((t0.c0) ISNULL))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((CASE t0.c0  WHEN t0.c0 THEN v0.c2 END))<=((((x'')IS NOT(v0.c2))))));
SELECT * FROM t0, v0 WHERE ((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END)) AND ((((t0.c0) ISNULL))))) ORDER BY (((CASE t0.c0  WHEN t0.c0 THEN v0.c2 END))<=((((x'')IS NOT(v0.c2)))));
SELECT * FROM rt1 WHERE (((NULL) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((NULL) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((NULL) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c3))!=((rt0.c3, x'd19e', rt0.c1))))<<((((rt0.c0))<((v0.c0)))))) ORDER BY ((((v0.c0)OR(rt0.c3)))OR(x'')) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c0, rt0.c3))<>((rt0.c3, x'd19e', rt0.c1))))<<((((rt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((v0.c0)OR(rt0.c3)))OR(x'')) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c3))!=((rt0.c3, x'd19e', rt0.c1))))<<((((rt0.c0))<((v0.c0)))))) ORDER BY ((((v0.c0)OR(rt0.c3)))OR(x'')) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c0, rt0.c3))<>((rt0.c3, x'd19e', rt0.c1))))<<((((rt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((v0.c0)OR(rt0.c3)))OR(x'')) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c3))!=((rt0.c3, x'd19e', rt0.c1))))<<((((rt0.c0))<((v0.c0)))))) ORDER BY ((((v0.c0)OR(rt0.c3)))OR(x'')) COLLATE NOCASE ASC;
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((v0.c0) NOT NULL))) WHERE ((~ (ABS(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ (ABS(v0.c2)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((v0.c0) NOT NULL))));
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((v0.c0) NOT NULL))) WHERE ((~ (ABS(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ (ABS(v0.c2)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((v0.c0) NOT NULL))));
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((v0.c0) NOT NULL))) WHERE ((~ (ABS(v0.c2))));
SELECT ALL * FROM rt1 WHERE ((('-912554175') IS FALSE)) ORDER BY ((json_insert(rt1.c2, '', rt1.c1, rt1.c0, rt1.c2))/(x'')) ASC  NULLS FIRST, (((((rt1.c3, rt1.c0, 0.3386015646525061, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c3, NULL, rt1.c2)))) IS FALSE) DESC  NULLS LAST, CAST(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-912554175') IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((json_insert(rt1.c2, '', rt1.c1, rt1.c0, rt1.c2))/(x'')) ASC  NULLS FIRST, (((((rt1.c3, rt1.c0, 0.3386015646525061, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c3, NULL, rt1.c2)))) IS FALSE) DESC  NULLS LAST, CAST(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((('-912554175') IS FALSE)) ORDER BY ((json_insert(rt1.c2, '', rt1.c1, rt1.c0, rt1.c2))/(x'')) ASC  NULLS FIRST, (((((rt1.c3, rt1.c0, 0.3386015646525061, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c3, NULL, rt1.c2)))) IS FALSE) DESC  NULLS LAST, CAST(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-912554175') IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((json_insert(rt1.c2, '', rt1.c1, rt1.c0, rt1.c2))/(x'')) ASC  NULLS FIRST, (((((rt1.c3, rt1.c0, 0.3386015646525061, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c3, NULL, rt1.c2)))) IS FALSE) DESC  NULLS LAST, CAST(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt0.c0)||(rt0.c2)))OR(((((((((rt1.c3)OR(rt0.c3)))AND(rt1.c2)))OR(rt0.c0)))AND(0.9265635145536938)))))AND(((rt1.c3)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)||(rt0.c2)))OR(((((((((rt1.c3)OR(rt0.c3)))AND(rt1.c2)))OR(rt0.c0)))AND(0.9265635145536938)))))AND(((rt1.c3)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt0.c0)||(rt0.c2)))OR(((((((((rt1.c3)OR(rt0.c3)))AND(rt1.c2)))OR(rt0.c0)))AND(0.9265635145536938)))))AND(((rt1.c3)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)||(rt0.c2)))OR(((((((((rt1.c3)OR(rt0.c3)))AND(rt1.c2)))OR(rt0.c0)))AND(0.9265635145536938)))))AND(((rt1.c3)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt0.c0)||(rt0.c2)))OR(((((((((rt1.c3)OR(rt0.c3)))AND(rt1.c2)))OR(rt0.c0)))AND(0.9265635145536938)))))AND(((rt1.c3)LIKE(rt1.c0)))));
SELECT * FROM v0, t0, rt1 WHERE (((((rt1.c2))>((rt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2))>((rt1.c2))) IN ())) IS TRUE)  as count FROM v0, t0, rt1);
SELECT * FROM v0, t0, rt1 WHERE (((((rt1.c2))>((rt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2))>((rt1.c2))) IN ())) IS TRUE)  as count FROM v0, t0, rt1);
SELECT * FROM v0, t0, rt1 WHERE (((((rt1.c2))>((rt1.c2))) IN ()));
SELECT * FROM v0, rt0, rt1 WHERE (v0.c1) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt0.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CAST(CASE WHEN rt1.c0 THEN rt0.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST);
SELECT * FROM v0, rt0, rt1 WHERE (v0.c1) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt0.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CAST(CASE WHEN rt1.c0 THEN rt0.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST);
SELECT * FROM v0, rt0, rt1 WHERE (v0.c1) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt0.c1 ELSE v0.c1 END AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c2))*('-1293261008')));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(v0.c2))*('-1293261008'))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c2))*('-1293261008')));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(v0.c2))*('-1293261008'))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c2))*('-1293261008')));
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN v0 WHERE ((CASE rt0.c3  WHEN v0.c0 THEN v0.c2 WHEN t0.c0 THEN -2131995092 WHEN t0.c0 THEN t0.c0 END IN ())) ORDER BY (~ (CAST(x'' AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN v0.c0 THEN v0.c2 WHEN t0.c0 THEN -2131995092 WHEN t0.c0 THEN t0.c0 END IN ())) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN v0 ORDER BY (~ (CAST(x'' AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN v0 WHERE ((CASE rt0.c3  WHEN v0.c0 THEN v0.c2 WHEN t0.c0 THEN -2131995092 WHEN t0.c0 THEN t0.c0 END IN ())) ORDER BY (~ (CAST(x'' AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN v0.c0 THEN v0.c2 WHEN t0.c0 THEN -2131995092 WHEN t0.c0 THEN t0.c0 END IN ())) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN v0 ORDER BY (~ (CAST(x'' AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN v0 WHERE ((CASE rt0.c3  WHEN v0.c0 THEN v0.c2 WHEN t0.c0 THEN -2131995092 WHEN t0.c0 THEN t0.c0 END IN ())) ORDER BY (~ (CAST(x'' AS TEXT))) DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (((rt0.c3))!=((t0.c0))) THEN (rt0.c2 IN ()) ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END WHERE (CAST('-912554175' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('-912554175' AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (((rt0.c3))!=((t0.c0))) THEN (rt0.c2 IN ()) ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (((rt0.c3))!=((t0.c0))) THEN (rt0.c2 IN ()) ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END WHERE (CAST('-912554175' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('-912554175' AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (((rt0.c3))!=((t0.c0))) THEN (rt0.c2 IN ()) ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (((rt0.c3))!=((t0.c0))) THEN (rt0.c2 IN ()) ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END WHERE (CAST('-912554175' AS BLOB));
SELECT ALL * FROM rt0 WHERE ((- (0.2677217934128291)));
SELECT SUM(count) FROM (SELECT (((- (0.2677217934128291))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (0.2677217934128291)));
SELECT SUM(count) FROM (SELECT (((- (0.2677217934128291))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (0.2677217934128291)));
SELECT * FROM t0, rt1, v0 WHERE (TYPEOF(((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((v0.c0) NOTNULL))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT * FROM t0, rt1, v0 WHERE (TYPEOF(((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((v0.c0) NOTNULL))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT * FROM t0, rt1, v0 WHERE (TYPEOF(((v0.c0) NOTNULL)));
SELECT * FROM v0 WHERE (((((v0.c0) IS FALSE))|(v0.c2))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))|(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY x'');
SELECT * FROM v0 WHERE (((((v0.c0) IS FALSE))|(v0.c2))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))|(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY x'');
SELECT * FROM v0 WHERE (((((v0.c0) IS FALSE))|(v0.c2))) ORDER BY x'';
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) IS FALSE))<(TRIM(rt1.c2)))) ORDER BY json_quote(COALESCE(DISTINCT rt1.c1, rt1.c2, rt1.c1, rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE))<(TRIM(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY json_quote(COALESCE(DISTINCT rt1.c1, rt1.c2, rt1.c1, rt1.c0)) DESC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) IS FALSE))<(TRIM(rt1.c2)))) ORDER BY json_quote(COALESCE(DISTINCT rt1.c1, rt1.c2, rt1.c1, rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE))<(TRIM(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY json_quote(COALESCE(DISTINCT rt1.c1, rt1.c2, rt1.c1, rt1.c0)) DESC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) IS FALSE))<(TRIM(rt1.c2)))) ORDER BY json_quote(COALESCE(DISTINCT rt1.c1, rt1.c2, rt1.c1, rt1.c0)) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY ((((0.23575735866709036)AND(((' (') ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.32650357548622577 END)) ASC  NULLS LAST, (((t0.c0)>=(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((0.23575735866709036)AND(((' (') ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.32650357548622577 END)) ASC  NULLS LAST, (((t0.c0)>=(t0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY ((((0.23575735866709036)AND(((' (') ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.32650357548622577 END)) ASC  NULLS LAST, (((t0.c0)>=(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((0.23575735866709036)AND(((' (') ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.32650357548622577 END)) ASC  NULLS LAST, (((t0.c0)>=(t0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY ((((0.23575735866709036)AND(((' (') ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.32650357548622577 END)) ASC  NULLS LAST, (((t0.c0)>=(t0.c0)) IN ()) ASC;
SELECT * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c2) AND (x'')))LIKE(((v0.c1) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY ((t0.c0 COLLATE RTRIM)OR('G9K')) DESC, ((t0.c0 COLLATE BINARY)|(CASE WHEN v0.c2 THEN x'48f4' END)), (((v0.c1)) NOT BETWEEN (((((('-134355038')OR(t0.c0)))OR(t0.c0)))) AND ((COALESCE(DISTINCT v0.c1, v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c2) AND (x'')))LIKE(((v0.c1) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 COLLATE RTRIM)OR('G9K')) DESC, ((t0.c0 COLLATE BINARY)|(CASE WHEN v0.c2 THEN x'48f4' END)), (((v0.c1)) NOT BETWEEN (((((('-134355038')OR(t0.c0)))OR(t0.c0)))) AND ((COALESCE(DISTINCT v0.c1, v0.c2)))) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c2) AND (x'')))LIKE(((v0.c1) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY ((t0.c0 COLLATE RTRIM)OR('G9K')) DESC, ((t0.c0 COLLATE BINARY)|(CASE WHEN v0.c2 THEN x'48f4' END)), (((v0.c1)) NOT BETWEEN (((((('-134355038')OR(t0.c0)))OR(t0.c0)))) AND ((COALESCE(DISTINCT v0.c1, v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c2) AND (x'')))LIKE(((v0.c1) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 COLLATE RTRIM)OR('G9K')) DESC, ((t0.c0 COLLATE BINARY)|(CASE WHEN v0.c2 THEN x'48f4' END)), (((v0.c1)) NOT BETWEEN (((((('-134355038')OR(t0.c0)))OR(t0.c0)))) AND ((COALESCE(DISTINCT v0.c1, v0.c2)))) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c2) AND (x'')))LIKE(((v0.c1) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY ((t0.c0 COLLATE RTRIM)OR('G9K')) DESC, ((t0.c0 COLLATE BINARY)|(CASE WHEN v0.c2 THEN x'48f4' END)), (((v0.c1)) NOT BETWEEN (((((('-134355038')OR(t0.c0)))OR(t0.c0)))) AND ((COALESCE(DISTINCT v0.c1, v0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))+((((rt1.c1, rt1.c0, rt1.c2))>((rt1.c0, rt1.c3, rt1.c3)))))) ORDER BY (+ (rt1.c3)) COLLATE RTRIM DESC, rt1.c0 ASC, ((CAST(x'' AS REAL))>>(CAST(rt1.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))+((((rt1.c1, rt1.c0, rt1.c2))>((rt1.c0, rt1.c3, rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY (+ (rt1.c3)) COLLATE RTRIM DESC, rt1.c0 ASC, ((CAST(x'' AS REAL))>>(CAST(rt1.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))+((((rt1.c1, rt1.c0, rt1.c2))>((rt1.c0, rt1.c3, rt1.c3)))))) ORDER BY (+ (rt1.c3)) COLLATE RTRIM DESC, rt1.c0 ASC, ((CAST(x'' AS REAL))>>(CAST(rt1.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))+((((rt1.c1, rt1.c0, rt1.c2))>((rt1.c0, rt1.c3, rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY (+ (rt1.c3)) COLLATE RTRIM DESC, rt1.c0 ASC, ((CAST(x'' AS REAL))>>(CAST(rt1.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))+((((rt1.c1, rt1.c0, rt1.c2))>((rt1.c0, rt1.c3, rt1.c3)))))) ORDER BY (+ (rt1.c3)) COLLATE RTRIM DESC, rt1.c0 ASC, ((CAST(x'' AS REAL))>>(CAST(rt1.c1 AS NUMERIC)));
SELECT * FROM v0 WHERE (CASE WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE x'' END THEN ((v0.c0)>>(v0.c1)) ELSE (((v0.c1))>=((v0.c0))) END) ORDER BY (NOT (CASE WHEN v0.c1 THEN v0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE x'' END THEN ((v0.c0)>>(v0.c1)) ELSE (((v0.c1))>=((v0.c0))) END) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE WHEN v0.c1 THEN v0.c1 END))  NULLS LAST);
SELECT * FROM v0 WHERE (CASE WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE x'' END THEN ((v0.c0)>>(v0.c1)) ELSE (((v0.c1))>=((v0.c0))) END) ORDER BY (NOT (CASE WHEN v0.c1 THEN v0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE x'' END THEN ((v0.c0)>>(v0.c1)) ELSE (((v0.c1))>=((v0.c0))) END) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE WHEN v0.c1 THEN v0.c1 END))  NULLS LAST);
SELECT * FROM v0 WHERE (CASE WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE x'' END THEN ((v0.c0)>>(v0.c1)) ELSE (((v0.c1))>=((v0.c0))) END) ORDER BY (NOT (CASE WHEN v0.c1 THEN v0.c1 END))  NULLS LAST;
