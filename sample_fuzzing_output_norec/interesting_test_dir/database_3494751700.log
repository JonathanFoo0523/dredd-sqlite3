-- Time: 2024/06/09 10:20:46
-- Database: database0
-- Database version: 3.40.0
-- seed value: 3494751700
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INT , PRIMARY KEY (c0)); -- 3ms;
CREATE TEMP TABLE t1 (c0 INT ); -- 6ms;
INSERT OR IGNORE INTO t1 VALUES (x'358d'); -- 7ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.4606647307984001) NOT BETWEEN (NULL) AND (NULL)) AS NUMERIC); -- 4ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0xffffffffebd7df05) NOT NULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-374281770 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-374281770'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-729172366 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-729172366 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-791544087 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1808077639'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('-808313340' AS REAL)  WHEN '-338174203' THEN ((((((((0Xfffffffffb979ba7)AND(0.7558694273189613)))AND('0.4606647307984001')))OR(NULL)))AND('')) END; -- 4ms;
DELETE FROM sqlite_stat1 WHERE 0.9383062564009175; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('-1957595124')))|((NOT ('0.4606647307984001')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-585901614 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))+(CASE 0x58b16cbd  WHEN NULL THEN ',b' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-235886819'); -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0 sz=919667151 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0Xffffffffd0d1fee9 THEN x'' END)&(CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=((0.4035380944602742))))!=('-791544087')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(NULL))*((- ('Id')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1323379053 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(NULL)))OR('0.7558694273189613'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-791544087' COLLATE BINARY)-(((-536519027)%(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-912387043) NOT NULL)) IS FALSE); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x'569b'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 14ms;
DELETE FROM sqlite_stat1 WHERE ((('354126175' IN ()))!=((- (0.6580870799898525)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1218223140 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1230940972 -470018701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1686931612 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 -1400655972 sz=354126175 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.002402291183470129; -- 0ms;
DELETE FROM sqlite_stat1; -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1808077639 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN NULL COLLATE NOCASE THEN (((NULL)) BETWEEN ((0.07067538858245037)) AND ((0x4235e27c))) ELSE ((x'') NOT BETWEEN ('iK.') AND ('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1793571008'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-184462576 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1297389436' COLLATE RTRIM AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-235886819 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN ((0.783387969902528 IN ())) AND ((NOT (',B')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-794913666 -729172366 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('171516920')AND('PI鱩yX1')))AND(1.793571008E9)))AND('1808077639')))OR(NULL)))AND(x'')))OR(NULL))) NOT BETWEEN (((-986596279)>(x''))) AND (CASE WHEN '1793571008' THEN 0.7558694273189613 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1602513810 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=1835770225 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-585901614 IN ()))AND((((((((('')AND(NULL)))AND('-338174203')))AND(NULL)))AND(x'')))))OR(('' IN (-258303284, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1472666616 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1650577068'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1274761654'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1076807652' THEN '-1029602168' ELSE 'Ǐ1왩o' END)>=(LOWER(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1076807652 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-651280617'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '297183357 4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1230940972 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=199988044'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-536519027 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (IFNULL(0xffffffffd0b88641, ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1488022717 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=72278013 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('n5iM#_') BETWEEN ('1897027704') AND (NULL)))|(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-999634669 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-896584709 0 sz=-896584709 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1757595241 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1301517642 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2107711165 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-633364039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '80306037 0 sz=1367691391 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE (((((0x6587e089)=(NULL))))>=(((NULL IN (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-633364039'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 354126175 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'ef8a')<=(0xffffffff826d5c51)))OR(0.9215946142558344)))OR(MAX(NULL, 0.004322949134854426))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1274761654 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1205278352 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (0x11b6a87d)))GLOB(((((((((0.9142404573606079)AND('9鍌N슖k>V')))OR('72278013')))AND(0.45841666672746006)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-808457468 unordered noskipscan'); -- 12ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=561248797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-540783256 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 sz=-1123635867'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-182862765 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1957595124 1090917712 sz=255300299 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')<<('469843858')))AND(((x'') NOT BETWEEN (0.6835613446569182) AND (0xfffffffff89d5a5d)))))AND(((0.7483858014374422)IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.26188374101667256 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-203281914 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-123905443 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'9fe0'))<=((x'')))) BETWEEN (x'') AND ((((x'659d'))>(('0.9215946142558344'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1703403657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '702658697 sz=-849361042'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1879378743 -1218223140 sz=-536519027 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0 sz=-986596279'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-912387043 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=279314423'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') NOTNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1230940972 -651280617 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-649066352 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.028582897605572866) NOTNULL))>>(IFNULL(DISTINCT 1.686931612E9, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1101081369 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1 2 sz=1703403657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) BETWEEN ((0.27225139663920594 IN ())) AND ((('rl⏸\')%('-624407380')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1650577068 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN 0.6048722406349181 ELSE '-235886819' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '4 sz=-729172366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.920246370593578) BETWEEN (x'') AND ('1835770225')))=(CAST(x'3402' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('-808313340' IN ())  WHEN x'' THEN ((((((((x'')AND(9.19667151E8)))OR('HS')))OR(x'')))OR(NULL)) ELSE ('GU鏺哔' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1476735468 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (((('-1732157982')) BETWEEN (('')) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0 -1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL)), ('n5im#_' IN ()), CASE NULL  WHEN NULL THEN x'' END))<=(((((('0/')OR(0.9235284273125539)))AND(x'')), ((0.4035380944602742)<=(0.7563773741102464)), (((0xffffffffc5a039a1))<((0.3570612767185861)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN -1317192112 THEN x'' END THEN INSTR('1090917712', 0.655257977249181) WHEN ((NULL) IS TRUE) THEN CASE WHEN 'O[' THEN 0.363221689659887 END WHEN CAST('-794913666' AS INTEGER) THEN (('0.3570612767185861')LIKE(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.363221689659887)AND(x'')))AND(0Xffffffff98c15de2)))IS NOT(json_patch(x'', 0.10321945291929058))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '764338568 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-999634669 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1792342644 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-791257236 sz=-1253364076 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.323341736830278)IS(0xffffffffb6a154d4)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1505207374 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.33622290936788346) NOT BETWEEN (-98183931) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.6160637152588726) AND (0Xffffffffdd0a15c9))) BETWEEN (((0.35022533744698214)LIKE(NULL))) AND ((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')-(0.17988804269751857)))!=(CASE NULL  WHEN 'bBIDM.' THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0xffffffffeae41612 AS NUMERIC))AND((- (0.004322949134854426)))))OR(MAX(NULL, NULL, x'', 0.11162150669176052))))AND(CAST(0.7563773741102464 AS BLOB))))OR(((0X4f5b11da) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-621562417'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE ''  WHEN 0.008580107830063466 THEN -2106762159 ELSE -642231127 END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-44180477 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.5449586783108458)AND(x'6c7d')))OR(NULL)))AND(x'')))AND(0.32028101088699856))) NOT BETWEEN ((NOT ('<S'))) AND (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 0 sz=1009228059 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-2107711165 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-748471754 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-970539398 noskipscan'); -- 11ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 14125897 sz=-1989998823'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1101081369 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1808556524 2 sz=-1344114009 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1488022717 -374281770 sz=-979355231 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(((NULL)>=('-1472852689')), (NOT (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1591198329 792983163 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4 sz=1026593776 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT '0.9235284273125539' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0X72f6c171)LIKE('1377511548')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('H<x') IS FALSE)  WHEN CAST(x'6594' AS TEXT) THEN CAST(x'' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-948432658'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (0X39eb64bb)))AND((+ (1.026593776E9)))))OR(((0X4dee8f5c) BETWEEN ('B]') AND (0X1dfbc554)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.35272014294213716 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1730994747 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1008375480 -536519027 sz=-303063959 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-979909136 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-258303284') NOT BETWEEN ('-1177947600') AND (NULL)) THEN (x'' IN ()) WHEN ((-1141191801) ISNULL) THEN (NOT (-1469154246)) WHEN (((''))<>((NULL))) THEN ((NULL) IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1323379053 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS BLOB)))>(((((((((('846262821')AND(0Xffffffffdbc9870d)))OR(NULL)))AND('-182862765')))AND(0x352be293))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE RTRIM THEN ('-1819046892' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('{N74~lQ') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-849361042 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 0 sz=-770173145 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1590327384 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5710328617175249) NOT BETWEEN (NULL) AND (0.47562766517928134)))GLOB(CASE WHEN -36596742 THEN 0.9215946142558344 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2090545957 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2012721389'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN NULL THEN '.#Zz\n~D' WHEN 'O({0i5g퓣X' THEN NULL WHEN '72278013' THEN NULL ELSE x'dea6' END)OR((~ (x'')))))AND(x'')))AND((((((((('愾syK瞜]\n')AND('')))OR(1.897027704E9)))OR('PI鱩yX1')))OR('	L')))))AND(((-1552004137) BETWEEN ('526413181') AND (-980875182)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) BETWEEN ((0Xffffffffeaa83306 IN ())) AND (((NULL)<>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.49626367503478375)OR(0.9591870119784137)))AND(NULL)))AND(CAST(0x3dfa6960 AS NUMERIC))))AND(COALESCE(x'a54e', '-303063959', NULL, NULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-649066352 sz=-1218223140 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.33136841E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1292206244 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=654777735'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-586541623'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '904857705'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1 sz=1864147211 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1443024108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1433810387 sz=1175479214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xffffffff8b6ace40 THEN NULL ELSE 0.6565031117116469 END) BETWEEN (((0.6234368746245639)<(NULL))) AND ((('0.47562766517928134') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ((0xfffffffffd5ddc03 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE))LIKE(((x'e398') NOT BETWEEN (x'8ce9') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-748471754 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1986961657 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '333820251 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND ('')))=(((('')) BETWEEN (('-36596742')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('0.655257977249181')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE ''  WHEN '' THEN 'B]' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.22378097604682767))<(('1686931612'))))>(((x'e3a4') NOT BETWEEN ('1488022717') AND (0.7563773741102464)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1232339928' THEN '' ELSE 0.004322949134854426 END)|((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)<=(0.0522601604228522)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'R舯˥c' THEN '1908544494' WHEN 'K' THEN NULL WHEN '充^z\r' THEN NULL END COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('' IN ()))AND(((NULL) NOT BETWEEN (x'd417') AND ('')))))OR(((('-748471754')) NOT BETWEEN ((x'')) AND ((NULL))))))OR(((((NULL)AND(0xffffffff8a52458c)))OR(0.7489591839523883)))))AND((+ ('764338568')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (NULL)) THEN CASE WHEN x'1043' THEN '' END END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (x'1d06') AND ('B{t^O')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-184462576 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '9223372036854775807 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8916996301739757 COLLATE RTRIM)AND((NOT (x'd0f2')))))AND(((0.19960466935899412) NOT BETWEEN ('1231465913') AND ('-2107711165')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1772590210 sz=238036932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-633364039 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-123905443 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-808457468 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1698162311 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1650577068 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1213767984 -2134397817 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CAST(x'' AS TEXT))) AND (((((((((('M1')OR(NULL)))AND(x'')))OR(0.45841666672746006)))AND(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-878445331 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1591198329 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'99ca'  WHEN 0xa3923f8 THEN 0.18413656148762214 WHEN '0.7558694273189613' THEN NULL WHEN 0.33907885155542306 THEN 'k' ELSE '' END)-(CASE WHEN 60736759 THEN '-1472666616' WHEN '2058548413' THEN 'UI' WHEN '764338568' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=68564100 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-849361042, 0.33622290936788346, NULL)) BETWEEN (('J슌''', NULL, 0.6048722406349181)) AND ((x'1bc6', '-1218223140', 0.47562766517928134))))AND((((0.6580870799898525)) NOT BETWEEN (('-674133478')) AND ((0Xffffffffbfd1381c))))))OR((x'caea' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (+ (-2057979937))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (-1.400655972E9 IN ('561248797'))  WHEN x'fb42' COLLATE NOCASE THEN (x'' IN ()) WHEN (('-1186975311') NOT BETWEEN (x'') AND (0.6673943204945975)) THEN ((0.623404205475489) ISNULL) WHEN ((((x'')OR(NULL)))AND(0.6069486850141315)) THEN ('ǐ1왩o' IN ()) WHEN ((x'')%(x'')) THEN CAST(0.1639752197404808 AS REAL) WHEN CAST(0x2d8ee188 AS REAL) THEN ((((((((NULL)AND(318422304)))OR('[4{_Iy>')))AND(-1.650577068E9)))AND(x'c6ba')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1889779884 sz=978401029 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1660576810 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7473235313447998))>=(('297183357'))))>=((('297183357')-(0.19960466935899412)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1344114009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1392635228'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 sz=-376021219 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=630143473'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1757595241'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -206343687'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2088833940'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-1073255314 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (0.7489591839523883)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN ((NULL)*(NULL)) THEN ((x'')|('xyu')) ELSE x'a486' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '9\n'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=72278013 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'l䑚8I-n줓4'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(((((NULL)AND('0.0')))OR(x'4c3ee6c3'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '297183357'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<(CASE WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.4337446366835698)AND((NULL IN (x'', -6.51280617E8)))))AND(((((NULL)OR(x'd3b4')))OR(1.591198329E9)))))AND(CAST(x'1016cddf' AS TEXT))))OR(0.5425393239200499)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1793201968'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=279314423 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=80306037 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)AND(x'239f')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-235886819 sz=-167604654 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1752465840 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1870991602'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'4ab4'))<=((0.7262453846851246)))))>=((CASE x'9f6d'  WHEN NULL THEN 0.40056269960089497 WHEN 0X1c013f92 THEN '-354150894' WHEN '-1344114009' THEN NULL WHEN x'' THEN -1140544954 WHEN NULL THEN x'' ELSE x'' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.2021731953569429 AS BLOB) IN (0.37295916731268197 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=43115847'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(0.783387969902528)))OR(0Xffffffffb06e41fe)))OR('TE')))AND(x'236b'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=283078476'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-296946635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)>=('0.5449586783108458')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-224494375 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') NOT NULL) THEN x'' WHEN ((x'') BETWEEN (0.6995454908157482) AND ('0.6580870799898525')) THEN ROUND(x'', '') WHEN '-1205278352' THEN CAST(x'' AS BLOB) END; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1793571008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1017759802 sz=401787137'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1700916120 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1191839015 -2132528366 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1808077639'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'2246c700') BETWEEN (1857544149) AND ('1009228059')), CAST(-1437068047 AS BLOB), ((x'') NOT BETWEEN (0.009614279469739584) AND ('-585901614')), NULL COLLATE NOCASE, (((NULL)) NOT BETWEEN (('0.004322949134854426')) AND ((0X59818b57)))))>=((CASE 1118496454  WHEN NULL THEN x'c5b0f702' ELSE NULL END, ((NULL) NOT BETWEEN (x'') AND ('YQMN6鑿q>x')), ((('0.655257977249181'))!=((0x4a704624))), CAST(NULL AS NUMERIC), CAST(0X16ab140b AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1793571008)) NOT BETWEEN ((LOWER(NULL))) AND (((~ (0.40056269960089497))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'da2f')) NOT BETWEEN ((x'')) AND (('\^'))))>((('0.002402291183470129')-(463491423)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '72278013 0 sz=-904064641'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1376372909 sz=-307759110 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1591198329 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'0933') BETWEEN ('-1253364076') AND (NULL))) NOT BETWEEN ((+ ('142073225'))) AND (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1323379053') NOT NULL))OR(CAST(NULL AS TEXT))))OR((((('1205126823')OR(x'c928')))OR(' ')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1423780184 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-7.94913666E8 COLLATE RTRIM)AND(((x'')IS(NULL)))))OR(CAST(x'0159' AS REAL))))OR((((NULL)) NOT BETWEEN ((NULL)) AND (('-335159846'))))))AND(CHANGES())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-945855360 sz=-765684117 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1216533684 0 sz=1090917712 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1961162127 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-747156809 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') IS TRUE) THEN (((0.1903272085617539))>=((NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('255300299' IN ('-303063959')))AND(CAST('-1076807652' AS BLOB))))AND(((0.5800144844597045)-('K&I,!')))))OR(((0Xffffffffb14f7200)>(0X41a12b19)))))OR(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-791544087')<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-14035303) BETWEEN (x'') AND (NULL))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0.5554042389296872)) THEN (('-1253364076') NOT BETWEEN ('882755153') AND ('-1859162866')) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9340456538815314)>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffffca8f33fb))<(('|W&')))) BETWEEN (CAST(-1572255517 AS BLOB)) AND ((((('-1355394874')OR(x'')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0Xffffffff82050736) IS TRUE) THEN '' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '潃,⨆>W'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('愾syK瞜]\n') IS FALSE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'fb96f3f0')OR('-1123635867')))OR(x'0552')))IS((('뗏]	{xO깊9')AND(0.528554733288113)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('1110827644')AND(x'')))OR(NULL)))OR(NULL)))OR(x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<=(0.11162150669176052)))&(((0.09293518848752769) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (NULL) AND ('-970539398')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3216315426785158)) BETWEEN ((NULL)) AND ((0.07267701893317435))) COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1026593776 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((''))>=((x'')))))>((0.2657886133293875 COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT '1707652444') COLLATE NOCASE; -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 0 sz=1143127613'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=878846094 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1155461456 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 12ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-912387043 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x75e9bd79, -6.33364039E8, '-1090338779')) NOT BETWEEN (((((-1480814289, 0.7478385519894362, x'')) BETWEEN ((x'', 0.8782852727853602, x'4065')) AND ((NULL, x'', 'yqmn6鑿q>x'))), (~ (NULL)), CASE WHEN '6s2qq檿O' THEN '' ELSE 0X10a5fff7 END)) AND ((((x'') NOT BETWEEN (x'1902') AND (0.5449586783108458)), (0.9247235767860835 IN ()), ((((0.9616486360680923)AND('')))OR(''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 7ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1488022717')>('*\LB蘬(''NK')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'bĈ' THEN x'1273' END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1669586543 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1052091703 sz=-1029602168'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1902763025'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-53706849 sz=1232234248'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(ROUND('-(ꂶn塸Do', x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 2142429079 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.33907885155542306) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1005308460 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))+(CASE ''  WHEN x'' THEN 0Xffffffffa07b946e END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '827787742 sz=1909216372 noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '354126175 0 sz=792983163 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)||(((((((((x'')OR(NULL)))AND(x'')))OR(NULL)))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1437344154 0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1553121981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-843377575'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(NULL)))OR(-2.58303284E8)) IN ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1456653044 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (1237855182) AND (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-145731031 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-1832647306 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1009228059 0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=72278013 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1397459524 unordered'); -- 9ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-920282822'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'25af')) NOT BETWEEN ((('' IN ()))) AND (((((x'b17b')) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1076807652'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)-((NOT (0xffffffffb91b5678)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1735487160 sz=-1472852689 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1897027704 unordered'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((x'' COLLATE NOCASE)) AND ((((0.7478385519894362) ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1499515797 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))OR((('')-('-2106148266')))))OR((((x'', '', x''))<=((x'', NULL, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1110827644'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-2004926391 sz=1100407590 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')LIKE(NULL)) THEN ((((x'')OR('-1989998823')))OR('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1367691391 sz=-663754795'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(x'0f4e', x'') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-114969735 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-994823976'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '112857847 sz=-986596279 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM('', '-1426715198') THEN ((0.5129304719928147) ISNULL) WHEN ((0.5994362767705792)OR(-624407380)) THEN ((((x'')OR(x'')))OR(0.5248894233748708)) WHEN '1450566740' THEN (+ (9.19667151E8)) WHEN (x'' IN (0.4581974895514055)) THEN (-8.49361042E8 IN ()) WHEN ((x'') BETWEEN (NULL) AND ('Q6')) THEN ((((((((x'')OR(0.9235284273125539)))AND(x'06a9')))AND(0.2799531298224077)))OR(0.10080547326840039)) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.07267701893317435)<(0.017030248125087133)))&((- (NULL)))); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN 0X6f4f627d END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1230940972 -946753127 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1442160317 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'121c19563601'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-218610060 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-130707628'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1175922484 sz=-1325773290 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '0s', x'9b73', -8.96584709E8, 'FALSE'))=((3.54126175E8, 0X65e07f05, x'0e34', x'', 0.0))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-184462576'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '199988044 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-793213375 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X3d00cfc4; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, x'', NULL, 0.29435151667020154, '')) NOT BETWEEN (('E | I1겨', x'', '&?o7佇?]o', 561248797, NULL)) AND ((x'', -2.35886819E8, '-649066352', '-416988094', NULL))) IN (CAST('1940208078' AS REAL), (-1.84462576E8 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0x583a0e73 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1743470100 sz=1339273945'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-651280617 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-849361042 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=896298932 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 -1472666616 unordered noskipscan'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'd5a0')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN ((x'66ab') NOT BETWEEN (x'') AND (x'b910')) ELSE ((x'')LIKE('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1117018150'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-896584709 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert('-1253364076', LIKE(x'', x''), ((NULL) BETWEEN (1026593776) AND (NULL)), ((NULL) NOTNULL), ((0.3011184786879294)==(0.2361972571929153))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=736458230 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-1603835906 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1393728162 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1703074399 sz=-793213375'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(LIKELY('')); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY('l')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1679728646 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-217807199'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9645774514569865)) BETWEEN ((x'c1c5')) AND ((NULL))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'')AND(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=414037552 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (x'24d5')) THEN CAST(x'298a' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-209770668 sz=-540783256'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-591306496'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-763096871')IS NOT(NULL)))<=(((((-676139023)AND(NULL)))OR('166734548')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('{}鱩n揯')|((('')%(0Xffffffffd0117564)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 919667151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-621562417 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME(-1729596599, '音K~*WT8{P', x'e8effc5b')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1317804782 2 sz=1269537844 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1985646901 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-327101575 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-739804408 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE NOCASE)OR((('-1205278352')<<(x'e7f2')))))OR(UNLIKELY(DISTINCT ''))))OR('wno|3l픅T')))AND((('-73950297')OR('199988044')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1472852689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1665129753 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-268880208 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('}ꫩ') NOT BETWEEN (NULL) AND ('-986596279')) IN ((('0.8782852727853602')AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x4e429cc, 0.29286965810770593, NULL)) NOT BETWEEN ((x'efca', NULL, x'')) AND (('', x'', -119188111))) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1076807652 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1809069266 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-846009147'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-606254230 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1105965687 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('0.2361972571929153' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'dbbfa5ae')AND('!D')))AND(NULL)))AND(0.39636690051164825)))AND('[-')))AND(((0.9340456538815314)==(NULL)))))OR(CASE WHEN 0.2545852512793634 THEN '-772704794' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1757595241 unordered noskipscan'); -- 15ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0Xffffffffbb5b6167 AS NUMERIC)) BETWEEN (((((((((((((NULL)AND(x'b981')))OR(0.028582897605572866)))OR('-1649150950')))AND(0.8947068060284217)))AND(NULL)))OR(NULL))) AND (('9tju' IN ('-316499175', '')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1650577068 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1029602168 sz=19376456 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1354879948 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN '슖}FF	s^*' THEN 0.9383062564009175 WHEN 8.0306037E7 THEN '' WHEN '-1205278352' THEN NULL ELSE 0x1948bd94 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-972881147 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.31996652799822034; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.7176081578341265) NOT BETWEEN ('0.5425393239200499') AND (x'')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-612598859 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 sz=1163698395 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-536519027 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-53720127 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.9340456538815314' COLLATE BINARY) BETWEEN ((NULL IN (-1.957595124E9, '-729172366'))) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 990576782 sz=-872053807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1738919466 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1903357018 -117689775 sz=-44180477'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1046790254 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-460099422 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X77e7881a) NOTNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (((NULL)) NOT BETWEEN (('-729172366')) AND ((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0Xd78b49 THEN '-28658734' WHEN 0.6400029664682607 THEN '-791257236' WHEN -1.472666616E9 THEN 0Xffffffff89630719 END)>>(x'eee3')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 sz=-1887137829 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1293818851'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1528122010 unordered'); -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1775135105 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))=(((x'') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((0.2657886133293875)OR(-2.58303284E8)))AND(0.14983641090767186)))OR(x'')))OR('vVi櫄f5/r')))OR(-971005373)))AND(0x2d8ee188))))<>((CAST(1693992599 AS BLOB)))); -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '225806362 sz=-1019923873 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1484010368 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1097869632'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (0.4581974895514055 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffcfd21e04)GLOB(0.36468394875020205)) IN (CASE WHEN 'e ' THEN -1297389436 WHEN 'l' THEN 0.3708352794843276 WHEN 0.17713795096034413 THEN 1023933607 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-354150894 2 sz=-1780939252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-729172366 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-586541623 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1897027704'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('J슌''')OR('942948859')))AND(0.08646638250819028))) BETWEEN (SQLITE_SOURCE_ID()) AND (0Xffffffffe9b0e9d6 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN '9wm[(RCw' THEN NULL ELSE -6.21562417E8 END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS REAL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH((- (x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=786130213 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=((''))))>((('翑Z~')<<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((((((NULL)OR('659493000')))OR(NULL)))OR(x'c86f')))OR(0.6995454908157482)))OR(0.5118126573150716)))OR(0.8267810428907193)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-126369130 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(CAST(0.792350633547118 AS TEXT), CASE WHEN '-2044950969' THEN 0.5012351709085299 ELSE x'' END, x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1241316534 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1072546389'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1989112896 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((0.18075852369211132) BETWEEN ('-748471754') AND (NULL)))) AND ((INSTR(NULL, 0.4635603908713999)))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1331368410 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1218223140 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1344114009 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1382633480 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-830531413'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2144411315 1760560159 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=976778841'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-471096789 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3861218737731106; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((x'') BETWEEN ('1793571008') AND (x'7a66d0a5')))) AND ((CAST(x'' AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-864913656 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('-1602513810')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.04312588512197835 AS BLOB) IN (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1783684550 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('^9]')))%(((x'')>>(0.23844636824896093)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(((((((((((((x'')OR(1594520101)))OR(1110827644)))AND(NULL)))AND(x'c088')))AND('-477320319')))OR(x'272e'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-270175152 sz=-1575961763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((+ ('翑Z~'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1791929635 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1068718309'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2.03281914E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=789556801 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-126369130 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1297389436 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-198519035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 7.2278013E7; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7239464250905826; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ((x'')OR('h*')), ((NULL)LIKE(NULL)), ((((NULL)OR(x'a1e9')))AND(0.8781459361573276)), (~ ('!D'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-174379378 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffda3fa1b9) NOT NULL))>>('' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-480922191 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'e '; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-980284090 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1499511141 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=1592411754'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=639630675'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1663046880 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(((((0.02845507604934361)AND('0cR')))AND(NULL)), 0.39016335454407725, CAST(NULL AS TEXT), ((917362877)*('72278013'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((x'')) BETWEEN ((0.6922963615117823)) AND (('-1224937203'))))OR(UNLIKELY(DISTINCT 0.6548265714581218))))AND((+ (x'')))))AND(CAST('-729172366' AS NUMERIC))))OR(CAST(x'' AS BLOB))))AND(CAST('-1472666616' AS TEXT))))OR(((('ui')) NOT BETWEEN ((x'')) AND ((0.2215855238145623))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.35272014294213716)) NOT BETWEEN (((((0Xffffffffac6eded9)) BETWEEN ((x'20b82c5b')) AND ((0.26188374101667256))))) AND (((((-6.2440738E8))<=((x'')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1321965392 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=713746489 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1406123730 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=702658697 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('-98183931') NOTNULL)); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) NOT BETWEEN ((+ (-1.2636913E8))) AND ((- ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT json_array_length(NULL, NULL), 0.22378097604682767); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=199988044'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.505207374E9 COLLATE BINARY) BETWEEN (((((((((x'8a64')OR(0.10080547326840039)))AND(x'')))OR(x'')))AND(1.33136841E9))) AND ((+ (-1.505207374E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-836869636 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-9223372036854775808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-791544087 1929464303'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1422546810 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(469843858 AS TEXT)) BETWEEN ((((('-1558110818')OR(NULL)))OR(x'5a9c'))) AND ((-117958857 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-127712182 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1715385069 sz=965602824 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.5248894233748708')||(0.8506763140276346)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 5ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('2042556854'))) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.35022533744698214  WHEN NULL THEN 0.3418912450881162 WHEN '1139976698' THEN NULL WHEN x'' THEN NULL WHEN NULL THEN NULL WHEN 'T{VScb' THEN 0.6394103145847276 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('0.36468394875020205'))) NOT BETWEEN ((NULL IN ())) AND (((x'') NOT BETWEEN (NULL) AND ('y0,')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (NULL)) IN (((0.1053219301868753)/('-633364039')), x'38a8' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') IS FALSE)  WHEN (+ ('-1830650355')) THEN CASE WHEN NULL THEN '' ELSE 0.8817841822222474 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-596393851 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-641582165 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-434488412'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2023212045 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-440459374 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1957595124 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1476735468 sz=-712652240 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 -281848208 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-402491051 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) BETWEEN ((('1783110316') ISNULL)) AND ('77366202')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1255209662 908994123 sz=-1569640427'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-182862765 sz=-182862765 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=792983163 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 1582271310 sz=-235886819 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) BETWEEN (('2081557939' IN ())) AND (SQLITE_VERSION())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(((x'')/('sr鹝E'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'85bc') BETWEEN (0.8065979169048066) AND (0.1727196150286605)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=415625763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 0 sz=-1644295242 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') IS FALSE)  WHEN -1502037678 COLLATE NOCASE THEN CAST(0xffffffffd138d027 AS BLOB) ELSE ((0x22f0393)&(0.07018158129651475)) END; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0xfffffffff89d5a5d); -- 1ms;
INSERT OR FAIL INTO t1 VALUES (NULL); -- 12ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (x'3dbd'); -- 0ms;
DELETE FROM t0; -- 0ms;
REINDEX RTRIM; -- 0ms;
REINDEX BINARY; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i18 ON t0(((CASE c0  WHEN c0 THEN c0 END) ISNULL)) WHERE COALESCE((((c0)) BETWEEN ((0.2799531298224077)) AND ((c0))), UNLIKELY(c0)); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (x''); -- 8ms;
CREATE INDEX IF NOT EXISTS i45 ON t0('LB' ASC) WHERE CAST(((c0) BETWEEN (c0) AND (c0)) AS REAL); -- 0ms;
CREATE INDEX i3 ON t1(((((((((((((((NULL)AND(NULL)))OR(c0)))AND(c0)))AND(c0)))AND(c0)))OR(c0)))>>(0Xffffffffc23a4bc7)) DESC) WHERE (- (((c0)>=(x'')))); -- 0ms;
ANALYZE sqlite_master; -- 2ms;
ROLLBACK TRANSACTION; -- 3ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 19ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('A3'); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1); -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1285324658'; -- 0ms;
ROLLBACK TRANSACTION; -- 31ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 12ms;
PRAGMA main.journal_mode; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (''); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 28ms;
ANALYZE; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
CREATE UNIQUE INDEX i7 ON t0((((NULL, ((c0)LIKE(NULL)), LIKELIHOOD(c0, 0.3541183380856223), c0, ((c0)AND(NULL))))<((0xffffffffca8f33fb COLLATE NOCASE, (((c0))<((c0))), ((484913750)-(c0)), (((c0))<=((c0))), (((c0))!=((c0)))))) COLLATE RTRIM ASC); -- 0ms;
CREATE UNIQUE INDEX i21 ON t1((c0 IN ()) COLLATE NOCASE); -- 1ms;
CREATE INDEX i22 ON t0('袡[') WHERE c0; -- 0ms;
CREATE INDEX IF NOT EXISTS i91 ON t1(CAST(((c0)>>(c0)) AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 13ms;
INSERT OR REPLACE INTO t0 VALUES ('-2095721592'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((0.3119340250801279) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)>(t0.c0)))))AND((rt0.c0 IN (rt0.c1)))))AND(t1.c0)) CROSS JOIN t0 ON (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((t0.c0 COLLATE BINARY))) WHERE (CASE WHEN ((t0.c0)<=(rt0.c2)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)<=(rt0.c2)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((0.3119340250801279) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)>(t0.c0)))))AND((rt0.c0 IN (rt0.c1)))))AND(t1.c0)) CROSS JOIN t0 ON (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((t0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((0.3119340250801279) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)>(t0.c0)))))AND((rt0.c0 IN (rt0.c1)))))AND(t1.c0)) CROSS JOIN t0 ON (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((t0.c0 COLLATE BINARY))) WHERE (CASE WHEN ((t0.c0)<=(rt0.c2)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)<=(rt0.c2)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE RTRIM)OR(((0.3119340250801279) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)>(t0.c0)))))AND((rt0.c0 IN (rt0.c1)))))AND(t1.c0)) CROSS JOIN t0 ON (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((t0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (MAX(t0.c0, ((rt0.c0)%(rt0.c1)), ('579421487' IN ()), (NOT (rt0.c2)))) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((MAX(t0.c0, ((rt0.c0)%(rt0.c1)), ('579421487' IN ()), (NOT (rt0.c2)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (MAX(t0.c0, ((rt0.c0)%(rt0.c1)), ('579421487' IN ()), (NOT (rt0.c2)))) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((MAX(t0.c0, ((rt0.c0)%(rt0.c1)), ('579421487' IN ()), (NOT (rt0.c2)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (MAX(t0.c0, ((rt0.c0)%(rt0.c1)), ('579421487' IN ()), (NOT (rt0.c2)))) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL)));
SELECT ALL COUNT(*) FROM t1 WHERE (x'' COLLATE NOCASE) ORDER BY (((((((((~ (t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (0.2707621357991745)))))OR(((((((((x'')OR('0.31996652799822034')))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((((((((~ (t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (0.2707621357991745)))))OR(((((((((x'')OR('0.31996652799822034')))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'' COLLATE NOCASE) ORDER BY (((((((((~ (t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (0.2707621357991745)))))OR(((((((((x'')OR('0.31996652799822034')))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((((((((~ (t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (0.2707621357991745)))))OR(((((((((x'')OR('0.31996652799822034')))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'' COLLATE NOCASE) ORDER BY (((((((((~ (t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (0.2707621357991745)))))OR(((((((((x'')OR('0.31996652799822034')))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT * FROM t0 NOT INDEXED, rt0, t1 WHERE ((- (NULLIF(DISTINCT rt0.c1, rt0.c2)))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((- (NULLIF(DISTINCT rt0.c1, rt0.c2)))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY t0.c0 ASC);
SELECT * FROM t0 NOT INDEXED, rt0, t1 WHERE ((- (NULLIF(DISTINCT rt0.c1, rt0.c2)))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((- (NULLIF(DISTINCT rt0.c1, rt0.c2)))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY t0.c0 ASC);
SELECT * FROM t0 NOT INDEXED, rt0, t1 WHERE ((- (NULLIF(DISTINCT rt0.c1, rt0.c2)))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c1 AS REAL))AND((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))AND((~ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c1 AS REAL))AND((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))AND((~ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c1 AS REAL))AND((~ (rt0.c0)))));
SELECT * FROM rt0 WHERE (((x'') NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((((((((((rt0.c2)IS NOT(rt0.c1)))OR((~ (rt0.c0)))))AND((- (NULL)))))AND(((rt0.c0)|(rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)IS NOT(rt0.c1)))OR((~ (rt0.c0)))))AND((- (NULL)))))AND(((rt0.c0)|(rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((x'') NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((((((((((rt0.c2)IS NOT(rt0.c1)))OR((~ (rt0.c0)))))AND((- (NULL)))))AND(((rt0.c0)|(rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)IS NOT(rt0.c1)))OR((~ (rt0.c0)))))AND((- (NULL)))))AND(((rt0.c0)|(rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((x'') NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((((((((((rt0.c2)IS NOT(rt0.c1)))OR((~ (rt0.c0)))))AND((- (NULL)))))AND(((rt0.c0)|(rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS REAL) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS REAL) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((((rt0.c0)/(rt0.c1))))<((ABS(DISTINCT rt0.c1)))) WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)) THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((rt0.c0)/(rt0.c1))))<((ABS(DISTINCT rt0.c1)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((((rt0.c0)/(rt0.c1))))<((ABS(DISTINCT rt0.c1)))) WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)) THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((rt0.c0)/(rt0.c1))))<((ABS(DISTINCT rt0.c1)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((((rt0.c0)/(rt0.c1))))<((ABS(DISTINCT rt0.c1)))) WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)) THEN (+ (rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE ((('u^')AND(((NULL) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CAST(((rt0.c1) NOTNULL) AS REAL), ((CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE t1.c0 END)|(CAST('1101081369' AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('u^')AND(((NULL) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS REAL), ((CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE t1.c0 END)|(CAST('1101081369' AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE ((('u^')AND(((NULL) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CAST(((rt0.c1) NOTNULL) AS REAL), ((CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE t1.c0 END)|(CAST('1101081369' AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('u^')AND(((NULL) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS REAL), ((CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE t1.c0 END)|(CAST('1101081369' AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE ((('u^')AND(((NULL) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CAST(((rt0.c1) NOTNULL) AS REAL), ((CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE t1.c0 END)|(CAST('1101081369' AS NUMERIC))) DESC;
SELECT COUNT(*) FROM t0, t1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN 0x10b20fca END)AND((NOT (rt0.c2)))))OR(rt0.c2)) WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'bc2d' END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'bc2d' END AS BLOB)) IS TRUE)  as count FROM t0, t1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN 0x10b20fca END)AND((NOT (rt0.c2)))))OR(rt0.c2)));
SELECT COUNT(*) FROM t0, t1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN 0x10b20fca END)AND((NOT (rt0.c2)))))OR(rt0.c2)) WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'bc2d' END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'bc2d' END AS BLOB)) IS TRUE)  as count FROM t0, t1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN 0x10b20fca END)AND((NOT (rt0.c2)))))OR(rt0.c2)));
SELECT COUNT(*) FROM t0, t1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN 0x10b20fca END)AND((NOT (rt0.c2)))))OR(rt0.c2)) WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'bc2d' END AS BLOB));
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (RTRIM(rt0.c1)) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(rt0.c1)) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY t1.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (RTRIM(rt0.c1)) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(rt0.c1)) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY t1.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (RTRIM(rt0.c1)) ORDER BY t1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (SQLITE_COMPILEOPTION_GET(t0.c0) IN (t0.c0 COLLATE RTRIM)) ASC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (SQLITE_COMPILEOPTION_GET(t0.c0) IN (t0.c0 COLLATE RTRIM)) ASC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (SQLITE_COMPILEOPTION_GET(t0.c0) IN (t0.c0 COLLATE RTRIM)) ASC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (SQLITE_COMPILEOPTION_GET(t0.c0) IN (t0.c0 COLLATE RTRIM)) ASC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (SQLITE_COMPILEOPTION_GET(t0.c0) IN (t0.c0 COLLATE RTRIM)) ASC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS INTEGER)  NULLS LAST;
SELECT * FROM rt0, t0, t1 WHERE ((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t1.c0, rt0.c1, t1.c0)) AND ((rt0.c1, rt0.c1, t1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t1.c0, rt0.c1, t1.c0)) AND ((rt0.c1, rt0.c1, t1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE ((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t1.c0, rt0.c1, t1.c0)) AND ((rt0.c1, rt0.c1, t1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t1.c0, rt0.c1, t1.c0)) AND ((rt0.c1, rt0.c1, t1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE ((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t1.c0, rt0.c1, t1.c0)) AND ((rt0.c1, rt0.c1, t1.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, t0 WHERE ((NOT (LIKELY(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELY(DISTINCT t0.c0)))) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE ((NOT (LIKELY(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELY(DISTINCT t0.c0)))) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE ((NOT (LIKELY(DISTINCT t0.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND('X挪[G')))OR(t0.c0)))+(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND('X挪[G')))OR(t0.c0)))+(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND('X挪[G')))OR(t0.c0)))+(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND('X挪[G')))OR(t0.c0)))+(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND('X挪[G')))OR(t0.c0)))+(t0.c0 COLLATE BINARY)));
SELECT * FROM rt0 INNER JOIN t1 ON ((((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)AND(rt0.c1)))OR(0.27225139663920594)) LEFT OUTER JOIN t0 ON (- (rt0.c2 COLLATE BINARY)) WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)AND(rt0.c1)))OR(0.27225139663920594)) LEFT OUTER JOIN t0 ON (- (rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0 INNER JOIN t1 ON ((((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)AND(rt0.c1)))OR(0.27225139663920594)) LEFT OUTER JOIN t0 ON (- (rt0.c2 COLLATE BINARY)) WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)AND(rt0.c1)))OR(0.27225139663920594)) LEFT OUTER JOIN t0 ON (- (rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0 INNER JOIN t1 ON ((((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)AND(rt0.c1)))OR(0.27225139663920594)) LEFT OUTER JOIN t0 ON (- (rt0.c2 COLLATE BINARY)) WHERE (CAST(x'' AS NUMERIC));
SELECT * FROM rt0, t1, t0 WHERE ((((rt0.c1, t0.c0, t1.c0, t1.c0, rt0.c1)) NOT BETWEEN ((x'', CASE rt0.c1  WHEN t0.c0 THEN t1.c0 END, (('gHGkDX!') NOT BETWEEN (t0.c0) AND (rt0.c0)), ((0.1341958912292952)GLOB(t1.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL), (NOT (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))) ORDER BY ((((rt0.c2) ISNULL))-(CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, t0.c0, t1.c0, t1.c0, rt0.c1)) NOT BETWEEN ((x'', CASE rt0.c1  WHEN t0.c0 THEN t1.c0 END, (('gHGkDX!') NOT BETWEEN (t0.c0) AND (rt0.c0)), ((0.1341958912292952)GLOB(t1.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL), (NOT (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY ((((rt0.c2) ISNULL))-(CAST(t0.c0 AS TEXT))));
SELECT * FROM rt0, t1, t0 WHERE ((((rt0.c1, t0.c0, t1.c0, t1.c0, rt0.c1)) NOT BETWEEN ((x'', CASE rt0.c1  WHEN t0.c0 THEN t1.c0 END, (('gHGkDX!') NOT BETWEEN (t0.c0) AND (rt0.c0)), ((0.1341958912292952)GLOB(t1.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL), (NOT (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))) ORDER BY ((((rt0.c2) ISNULL))-(CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, t0.c0, t1.c0, t1.c0, rt0.c1)) NOT BETWEEN ((x'', CASE rt0.c1  WHEN t0.c0 THEN t1.c0 END, (('gHGkDX!') NOT BETWEEN (t0.c0) AND (rt0.c0)), ((0.1341958912292952)GLOB(t1.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL), (NOT (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY ((((rt0.c2) ISNULL))-(CAST(t0.c0 AS TEXT))));
SELECT * FROM rt0, t1, t0 WHERE ((((rt0.c1, t0.c0, t1.c0, t1.c0, rt0.c1)) NOT BETWEEN ((x'', CASE rt0.c1  WHEN t0.c0 THEN t1.c0 END, (('gHGkDX!') NOT BETWEEN (t0.c0) AND (rt0.c0)), ((0.1341958912292952)GLOB(t1.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL), (NOT (rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))) ORDER BY ((((rt0.c2) ISNULL))-(CAST(t0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (NULL);
SELECT * FROM rt0, t1, t0 WHERE (CAST((((t1.c0))!=((t0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c0))<>((t0.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE (CAST((((t1.c0))!=((t0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c0))<>((t0.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE (CAST((((t1.c0))!=((t0.c0))) AS INTEGER));
SELECT COUNT(*) FROM t1, t0 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY CAST(CASE t1.c0  WHEN NULL THEN t0.c0 ELSE x'56f117c8' END AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(CASE t1.c0  WHEN NULL THEN t0.c0 ELSE x'56f117c8' END AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, t0 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY CAST(CASE t1.c0  WHEN NULL THEN t0.c0 ELSE x'56f117c8' END AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(CASE t1.c0  WHEN NULL THEN t0.c0 ELSE x'56f117c8' END AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, t0 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY CAST(CASE t1.c0  WHEN NULL THEN t0.c0 ELSE x'56f117c8' END AS TEXT) ASC  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c2)AND('{}鱩n揯')))OR(rt0.c0)))) AND (((t1.c0 IN (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((((rt0.c2)AND('{}鱩n揯')))OR(rt0.c0)))) AND (((t1.c0 IN (rt0.c1)))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c2)AND('{}鱩n揯')))OR(rt0.c0)))) AND (((t1.c0 IN (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((((rt0.c2)AND('{}鱩n揯')))OR(rt0.c0)))) AND (((t1.c0 IN (rt0.c1)))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c2)AND('{}鱩n揯')))OR(rt0.c0)))) AND (((t1.c0 IN (rt0.c1))))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS BLOB)  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c0)) END) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS BLOB)  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c0)) END) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c0)) END);
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((0x20c07780)<(t0.c0))) AND (t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((0X20c07780)<(t0.c0))) AND (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((0x20c07780)<(t0.c0))) AND (t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((0X20c07780)<(t0.c0))) AND (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((0x20c07780)<(t0.c0))) AND (t0.c0 COLLATE NOCASE)));
SELECT * FROM rt0, t1 WHERE (((CAST(rt0.c0 AS REAL))|((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))|((+ (t1.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((CAST(rt0.c0 AS REAL))|((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))|((+ (t1.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((CAST(rt0.c0 AS REAL))|((+ (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))>((t1.c0))))IS NOT(0.3884854983060385 COLLATE RTRIM))) ORDER BY ((((t1.c0)AND('s杸')))AND(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>((t1.c0))))IS NOT(0.3884854983060385 COLLATE RTRIM))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)AND('s杸')))AND(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))>((t1.c0))))IS NOT(0.3884854983060385 COLLATE RTRIM))) ORDER BY ((((t1.c0)AND('s杸')))AND(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>((t1.c0))))IS NOT(0.3884854983060385 COLLATE RTRIM))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)AND('s杸')))AND(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))>((t1.c0))))IS NOT(0.3884854983060385 COLLATE RTRIM))) ORDER BY ((((t1.c0)AND('s杸')))AND(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t1 ON ((((rt0.c1)==(rt0.c1)))<=(((t0.c0)GLOB(rt0.c2)))) LEFT OUTER JOIN rt0 ON (+ (((t1.c0)GLOB('-1310002786')))) WHERE (CASE ((t0.c0) IS TRUE)  WHEN ((((rt0.c2)AND(t1.c0)))AND(-5.86541623E8)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY rt0.c2 DESC, (+ (json_type(rt0.c2))) ASC, ((((((t1.c0)AND(rt0.c1)))OR(0.06851569229343879))) BETWEEN ((('-1203212692') NOTNULL)) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) IS TRUE)  WHEN ((((rt0.c2)AND(t1.c0)))AND(-5.86541623E8)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON ((((rt0.c1)=(rt0.c1)))<=(((t0.c0)GLOB(rt0.c2)))) LEFT OUTER JOIN rt0 ON (+ (((t1.c0)GLOB('-1310002786')))) ORDER BY rt0.c2 DESC, (+ (json_type(rt0.c2))) ASC, ((((((t1.c0)AND(rt0.c1)))OR(0.06851569229343879))) BETWEEN ((('-1203212692') NOTNULL)) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t1 ON ((((rt0.c1)==(rt0.c1)))<=(((t0.c0)GLOB(rt0.c2)))) LEFT OUTER JOIN rt0 ON (+ (((t1.c0)GLOB('-1310002786')))) WHERE (CASE ((t0.c0) IS TRUE)  WHEN ((((rt0.c2)AND(t1.c0)))AND(-5.86541623E8)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY rt0.c2 DESC, (+ (json_type(rt0.c2))) ASC, ((((((t1.c0)AND(rt0.c1)))OR(0.06851569229343879))) BETWEEN ((('-1203212692') NOTNULL)) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) IS TRUE)  WHEN ((((rt0.c2)AND(t1.c0)))AND(-5.86541623E8)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON ((((rt0.c1)=(rt0.c1)))<=(((t0.c0)GLOB(rt0.c2)))) LEFT OUTER JOIN rt0 ON (+ (((t1.c0)GLOB('-1310002786')))) ORDER BY rt0.c2 DESC, (+ (json_type(rt0.c2))) ASC, ((((((t1.c0)AND(rt0.c1)))OR(0.06851569229343879))) BETWEEN ((('-1203212692') NOTNULL)) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t1 ON ((((rt0.c1)==(rt0.c1)))<=(((t0.c0)GLOB(rt0.c2)))) LEFT OUTER JOIN rt0 ON (+ (((t1.c0)GLOB('-1310002786')))) WHERE (CASE ((t0.c0) IS TRUE)  WHEN ((((rt0.c2)AND(t1.c0)))AND(-5.86541623E8)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY rt0.c2 DESC, (+ (json_type(rt0.c2))) ASC, ((((((t1.c0)AND(rt0.c1)))OR(0.06851569229343879))) BETWEEN ((('-1203212692') NOTNULL)) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC;
SELECT ALL * FROM t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (t0.c0);
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (-8.49361042E8))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (0.14122028930269492))) ORDER BY (((NOT (rt0.c1)))LIKE(((rt0.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (-8.49361042E8))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (0.14122028930269492))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((NOT (rt0.c1)))LIKE(((rt0.c2) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (-8.49361042E8))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (0.14122028930269492))) ORDER BY (((NOT (rt0.c1)))LIKE(((rt0.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (-8.49361042E8))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (0.14122028930269492))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((NOT (rt0.c1)))LIKE(((rt0.c2) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (-8.49361042E8))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (0.14122028930269492))) ORDER BY (((NOT (rt0.c1)))LIKE(((rt0.c2) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t1 ON TYPEOF(DISTINCT (NOT (t0.c0))) WHERE (((((CASE t0.c0  WHEN t1.c0 THEN t0.c0 END)OR(CAST(t0.c0 AS INTEGER))))AND(t1.c0 COLLATE NOCASE))) ORDER BY CAST(TYPEOF(t1.c0) AS TEXT) ASC, ((((t0.c0)OR(x'3b6b'))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN t1.c0 THEN t0.c0 END)OR(CAST(t0.c0 AS INTEGER))))AND(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON TYPEOF(DISTINCT (NOT (t0.c0))) ORDER BY CAST(TYPEOF(t1.c0) AS TEXT) ASC, ((((t0.c0)OR(x'3b6b'))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t1 ON TYPEOF(DISTINCT (NOT (t0.c0))) WHERE (((((CASE t0.c0  WHEN t1.c0 THEN t0.c0 END)OR(CAST(t0.c0 AS INTEGER))))AND(t1.c0 COLLATE NOCASE))) ORDER BY CAST(TYPEOF(t1.c0) AS TEXT) ASC, ((((t0.c0)OR(x'3b6b'))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN t1.c0 THEN t0.c0 END)OR(CAST(t0.c0 AS INTEGER))))AND(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON TYPEOF(DISTINCT (NOT (t0.c0))) ORDER BY CAST(TYPEOF(t1.c0) AS TEXT) ASC, ((((t0.c0)OR(x'3b6b'))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t1 ON TYPEOF(DISTINCT (NOT (t0.c0))) WHERE (((((CASE t0.c0  WHEN t1.c0 THEN t0.c0 END)OR(CAST(t0.c0 AS INTEGER))))AND(t1.c0 COLLATE NOCASE))) ORDER BY CAST(TYPEOF(t1.c0) AS TEXT) ASC, ((((t0.c0)OR(x'3b6b'))) NOTNULL) DESC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)|(t0.c0))) ORDER BY CASE ((t0.c0)>=(t1.c0))  WHEN (t1.c0 IN ()) THEN 0.7650044919010107 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)|(t0.c0))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM ORDER BY CASE ((t0.c0)>=(t1.c0))  WHEN (t1.c0 IN ()) THEN 0.7650044919010107 END ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)|(t0.c0))) ORDER BY CASE ((t0.c0)>=(t1.c0))  WHEN (t1.c0 IN ()) THEN 0.7650044919010107 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)|(t0.c0))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM ORDER BY CASE ((t0.c0)>=(t1.c0))  WHEN (t1.c0 IN ()) THEN 0.7650044919010107 END ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)|(t0.c0))) ORDER BY CASE ((t0.c0)>=(t1.c0))  WHEN (t1.c0 IN ()) THEN 0.7650044919010107 END ASC;
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (((((((((((('m7u', t0.c0, t0.c0)) BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, t1.c0, rt0.c1))))OR((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(t0.c0)))OR(LOWER(DISTINCT rt0.c1))))AND((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('m7u', t0.c0, t0.c0)) BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, t1.c0, rt0.c1))))OR((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(t0.c0)))OR(LOWER(DISTINCT rt0.c1))))AND((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (((((((((((('m7u', t0.c0, t0.c0)) BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, t1.c0, rt0.c1))))OR((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(t0.c0)))OR(LOWER(DISTINCT rt0.c1))))AND((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('m7u', t0.c0, t0.c0)) BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, t1.c0, rt0.c1))))OR((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(t0.c0)))OR(LOWER(DISTINCT rt0.c1))))AND((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (((((((((((('m7u', t0.c0, t0.c0)) BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, t1.c0, rt0.c1))))OR((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(t0.c0)))OR(LOWER(DISTINCT rt0.c1))))AND((+ (rt0.c2)))));
SELECT * FROM t1 WHERE ((NOT (UNLIKELY(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (UNLIKELY(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((NOT (UNLIKELY(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (UNLIKELY(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((NOT (UNLIKELY(t1.c0))));
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY (((NOT ('974960493'))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((NOT ('974960493'))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY (((NOT ('974960493'))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((NOT ('974960493'))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY (((NOT ('974960493'))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((COALESCE('0.17988804269751857', rt0.c1))<=(HEX(DISTINCT rt0.c0))) WHERE ((((('뢉1a') BETWEEN (0.5993854571496194) AND (rt0.c0)))%((rt0.c1 IN ())))) ORDER BY 0.9609976883106905  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('뢉1a') BETWEEN (0.5993854571496194) AND (rt0.c0)))%((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((COALESCE('0.17988804269751857', rt0.c1))<=(HEX(DISTINCT rt0.c0))) ORDER BY 0.9609976883106905  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((COALESCE('0.17988804269751857', rt0.c1))<=(HEX(DISTINCT rt0.c0))) WHERE ((((('뢉1a') BETWEEN (0.5993854571496194) AND (rt0.c0)))%((rt0.c1 IN ())))) ORDER BY 0.9609976883106905  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('뢉1a') BETWEEN (0.5993854571496194) AND (rt0.c0)))%((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((COALESCE('0.17988804269751857', rt0.c1))<=(HEX(DISTINCT rt0.c0))) ORDER BY 0.9609976883106905  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((COALESCE('0.17988804269751857', rt0.c1))<=(HEX(DISTINCT rt0.c0))) WHERE ((((('뢉1a') BETWEEN (0.5993854571496194) AND (rt0.c0)))%((rt0.c1 IN ())))) ORDER BY 0.9609976883106905  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('0.2361972571929153'))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('0.2361972571929153'))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('0.2361972571929153'))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('0.2361972571929153'))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('0.2361972571929153'))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0)=(t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)==(t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0)=(t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)==(t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0)=(t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((rt0.c2) NOTNULL) IN (x'984a', 0Xffffffffd2caa45c)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOTNULL) IN (x'984a', 0Xffffffffd2caa45c))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((rt0.c2) NOTNULL) IN (x'984a', 0Xffffffffd2caa45c)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOTNULL) IN (x'984a', 0Xffffffffd2caa45c))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((rt0.c2) NOTNULL) IN (x'984a', 0Xffffffffd2caa45c)));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (x''))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (x''))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (x''))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (x''))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (x''))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN t0 WHERE (((rt0.c0)>((NOT (rt0.c2))))) ORDER BY ((((((((((t0.c0) IS TRUE))AND(((((((((0.12518362495479862)AND(rt0.c0)))OR(rt0.c2)))OR(t1.c0)))AND(t1.c0)))))AND(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c2)GLOB(rt0.c0)))))AND(CAST(t1.c0 AS INTEGER))) ASC, (~ (CAST(t1.c0 AS REAL))) ASC  NULLS FIRST, 0.6782942688534433  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN t0 ORDER BY ((((((((((t0.c0) IS TRUE))AND(((((((((0.12518362495479862)AND(rt0.c0)))OR(rt0.c2)))OR(t1.c0)))AND(t1.c0)))))AND(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c2)GLOB(rt0.c0)))))AND(CAST(t1.c0 AS INTEGER))) ASC, (~ (CAST(t1.c0 AS REAL))) ASC  NULLS FIRST, 0.6782942688534433  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN t0 WHERE (((rt0.c0)>((NOT (rt0.c2))))) ORDER BY ((((((((((t0.c0) IS TRUE))AND(((((((((0.12518362495479862)AND(rt0.c0)))OR(rt0.c2)))OR(t1.c0)))AND(t1.c0)))))AND(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c2)GLOB(rt0.c0)))))AND(CAST(t1.c0 AS INTEGER))) ASC, (~ (CAST(t1.c0 AS REAL))) ASC  NULLS FIRST, 0.6782942688534433  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN t0 ORDER BY ((((((((((t0.c0) IS TRUE))AND(((((((((0.12518362495479862)AND(rt0.c0)))OR(rt0.c2)))OR(t1.c0)))AND(t1.c0)))))AND(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c2)GLOB(rt0.c0)))))AND(CAST(t1.c0 AS INTEGER))) ASC, (~ (CAST(t1.c0 AS REAL))) ASC  NULLS FIRST, 0.6782942688534433  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN t0 WHERE (((rt0.c0)>((NOT (rt0.c2))))) ORDER BY ((((((((((t0.c0) IS TRUE))AND(((((((((0.12518362495479862)AND(rt0.c0)))OR(rt0.c2)))OR(t1.c0)))AND(t1.c0)))))AND(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c2)GLOB(rt0.c0)))))AND(CAST(t1.c0 AS INTEGER))) ASC, (~ (CAST(t1.c0 AS REAL))) ASC  NULLS FIRST, 0.6782942688534433  NULLS FIRST;
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c0 IN ('1090917712')) IN ())) ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (+ ((rt0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ('1090917712')) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (+ ((rt0.c2 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c0 IN ('1090917712')) IN ())) ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (+ ((rt0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ('1090917712')) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (+ ((rt0.c2 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c0 IN ('1090917712')) IN ())) ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (+ ((rt0.c2 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c0)*(t0.c0)) ELSE ((t0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN ((t0.c0)*(t0.c0)) ELSE ((t0.c0) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c0)*(t0.c0)) ELSE ((t0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN ((t0.c0)*(t0.c0)) ELSE ((t0.c0) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c0)*(t0.c0)) ELSE ((t0.c0) IS FALSE) END);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((('^')AND(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))))OR((+ (rt0.c2))))) ORDER BY CAST(((2059503788) IS TRUE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('^')AND(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))))OR((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((2059503788) IS TRUE) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((('^')AND(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))))OR((+ (rt0.c2))))) ORDER BY CAST(((2059503788) IS TRUE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('^')AND(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))))OR((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((2059503788) IS TRUE) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((('^')AND(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))))OR((+ (rt0.c2))))) ORDER BY CAST(((2059503788) IS TRUE) AS REAL)  NULLS LAST;
SELECT ALL * FROM t1, t0 WHERE (((LOWER(t1.c0)) NOT BETWEEN ((NOT (t1.c0))) AND ((((t1.c0))<=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((LOWER(t1.c0)) NOT BETWEEN ((NOT (t1.c0))) AND ((((t1.c0))<=((t0.c0)))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (((LOWER(t1.c0)) NOT BETWEEN ((NOT (t1.c0))) AND ((((t1.c0))<=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((LOWER(t1.c0)) NOT BETWEEN ((NOT (t1.c0))) AND ((((t1.c0))<=((t0.c0)))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (((LOWER(t1.c0)) NOT BETWEEN ((NOT (t1.c0))) AND ((((t1.c0))<=((t0.c0))))));
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON NULL WHERE (((rt0.c2)!=(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)!=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON NULL);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON NULL WHERE (((rt0.c2)!=(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)!=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON NULL);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON NULL WHERE (((rt0.c2)!=(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() WHERE ((- (t0.c0))) ORDER BY CASE (('-1205278352') NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((((((((t0.c0)AND(t0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) THEN (~ (rt0.c2)) ELSE LIKELIHOOD(DISTINCT t0.c0, 0.31747618403725564) END ASC  NULLS FIRST, (- ((('764338568') BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() ORDER BY CASE (('-1205278352') NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((((((((t0.c0)AND(t0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) THEN (~ (rt0.c2)) ELSE LIKELIHOOD(DISTINCT t0.c0, 0.31747618403725564) END ASC  NULLS FIRST, (- ((('764338568') BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() WHERE ((- (t0.c0))) ORDER BY CASE (('-1205278352') NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((((((((t0.c0)AND(t0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) THEN (~ (rt0.c2)) ELSE LIKELIHOOD(DISTINCT t0.c0, 0.31747618403725564) END ASC  NULLS FIRST, (- ((('764338568') BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() ORDER BY CASE (('-1205278352') NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((((((((t0.c0)AND(t0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) THEN (~ (rt0.c2)) ELSE LIKELIHOOD(DISTINCT t0.c0, 0.31747618403725564) END ASC  NULLS FIRST, (- ((('764338568') BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() WHERE ((- (t0.c0))) ORDER BY CASE (('-1205278352') NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((((((((t0.c0)AND(t0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) THEN (~ (rt0.c2)) ELSE LIKELIHOOD(DISTINCT t0.c0, 0.31747618403725564) END ASC  NULLS FIRST, (- ((('764338568') BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c0, t0.c0, ''))=((t0.c0, rt0.c0, rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c0, t0.c0, ''))==((t0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c0, t0.c0, ''))=((t0.c0, rt0.c0, rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c0, t0.c0, ''))==((t0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c0, t0.c0, ''))=((t0.c0, rt0.c0, rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE ((((t1.c0))>=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0))>=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM t1, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM t1, rt0 WHERE ((((t1.c0))>=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0))>=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM t1, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM t1, rt0 WHERE ((((t1.c0))>=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)))) ORDER BY x'' DESC  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE ((((((x'' IN ()))AND(CASE rt0.c0  WHEN x'' THEN t1.c0 END)))OR(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((x'' IN ()))AND(CASE rt0.c0  WHEN x'' THEN t1.c0 END)))OR(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE ((((((x'' IN ()))AND(CASE rt0.c0  WHEN x'' THEN t1.c0 END)))OR(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((x'' IN ()))AND(CASE rt0.c0  WHEN x'' THEN t1.c0 END)))OR(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE ((((((x'' IN ()))AND(CASE rt0.c0  WHEN x'' THEN t1.c0 END)))OR(((rt0.c1) NOTNULL))));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((t0.c0)>(((rt0.c1) BETWEEN (-1.029602168E9) AND (t1.c0)))) WHERE (CASE WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((t0.c0)>(((rt0.c1) BETWEEN (-1.029602168E9) AND (t1.c0)))));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((t0.c0)>(((rt0.c1) BETWEEN (-1.029602168E9) AND (t1.c0)))) WHERE (CASE WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((t0.c0)>(((rt0.c1) BETWEEN (-1.029602168E9) AND (t1.c0)))));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((t0.c0)>(((rt0.c1) BETWEEN (-1.029602168E9) AND (t1.c0)))) WHERE (CASE WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT ALL * FROM rt0, t0, t1 WHERE ('%U^F');
SELECT SUM(count) FROM (SELECT (('%U^F') IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL * FROM rt0, t0, t1 WHERE ('%U^F');
SELECT SUM(count) FROM (SELECT (('%U^F') IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL * FROM rt0, t0, t1 WHERE ('%U^F');
SELECT * FROM t1 WHERE (CASE CAST(t1.c0 AS REAL)  WHEN ((t1.c0) ISNULL) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c0 AS REAL)  WHEN ((t1.c0) ISNULL) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE CAST(t1.c0 AS REAL)  WHEN ((t1.c0) ISNULL) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c0 AS REAL)  WHEN ((t1.c0) ISNULL) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE CAST(t1.c0 AS REAL)  WHEN ((t1.c0) ISNULL) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) END);
SELECT * FROM t1, t0 WHERE (((CAST(t1.c0 AS BLOB))+((t0.c0 IN (t1.c0, t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB))+((t0.c0 IN (t1.c0, t1.c0))))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (((CAST(t1.c0 AS BLOB))+((t0.c0 IN (t1.c0, t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB))+((t0.c0 IN (t1.c0, t1.c0))))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (((CAST(t1.c0 AS BLOB))+((t0.c0 IN (t1.c0, t1.c0)))));
SELECT ALL * FROM t1, t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (TOTAL_CHANGES());
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (((NOT (t1.c0)))OR(((x'39c7')&(t1.c0)))) WHERE (CASE WHEN (t1.c0 IN ()) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t1.c0 IN ()) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((NOT (t1.c0)))OR(((x'39c7')&(t1.c0)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (((NOT (t1.c0)))OR(((x'39c7')&(t1.c0)))) WHERE (CASE WHEN (t1.c0 IN ()) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t1.c0 IN ()) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((NOT (t1.c0)))OR(((x'39c7')&(t1.c0)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (((NOT (t1.c0)))OR(((x'39c7')&(t1.c0)))) WHERE (CASE WHEN (t1.c0 IN ()) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE) ORDER BY (~ ((-1e500 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (~ ((-1e500 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE) ORDER BY (~ ((-1e500 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (~ ((-1e500 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE) ORDER BY (~ ((-1e500 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c1)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c1)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c1)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2)));
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t1.c0) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t1.c0) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) ISNULL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)/(rt0.c2))) BETWEEN (((((rt0.c2)AND(t0.c0)))OR(rt0.c2))) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)/(rt0.c2))) BETWEEN (((((rt0.c2)AND(t0.c0)))OR(rt0.c2))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)/(rt0.c2))) BETWEEN (((((rt0.c2)AND(t0.c0)))OR(rt0.c2))) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)/(rt0.c2))) BETWEEN (((((rt0.c2)AND(t0.c0)))OR(rt0.c2))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)/(rt0.c2))) BETWEEN (((((rt0.c2)AND(t0.c0)))OR(rt0.c2))) AND ((t0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 WHERE (((((rt0.c0)!=(rt0.c1))) IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<>(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 ORDER BY (((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0))))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 WHERE (((((rt0.c0)!=(rt0.c1))) IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<>(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 ORDER BY (((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0))))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 WHERE (((((rt0.c0)!=(rt0.c1))) IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0))))) DESC;
SELECT COUNT(*) FROM rt0, t0 INNER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c1)AND(rt0.c1)))) WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0, t0 INNER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c1)AND(rt0.c1)))));
SELECT COUNT(*) FROM rt0, t0 INNER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c1)AND(rt0.c1)))) WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0, t0 INNER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c1)AND(rt0.c1)))));
SELECT COUNT(*) FROM rt0, t0 INNER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c1)AND(rt0.c1)))) WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT ALL * FROM rt0, t0, t1 WHERE (0.6212269474888061) ORDER BY (((rt0.c2)GLOB(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6212269474888061) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY (((rt0.c2)GLOB(rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, t1 WHERE (0.6212269474888061) ORDER BY (((rt0.c2)GLOB(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6212269474888061) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY (((rt0.c2)GLOB(rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, t1 WHERE (0.6212269474888061) ORDER BY (((rt0.c2)GLOB(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1, t0 WHERE ((('-1669818045' COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT (((('-1669818045' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE ((('-1669818045' COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT (((('-1669818045' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE ((('-1669818045' COLLATE BINARY) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY CAST((+ (t0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CAST((+ (t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY CAST((+ (t0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CAST((+ (t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY CAST((+ (t0.c0)) AS REAL);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS NOT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5773255125267927 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (((-1980088644)IS NOT(t0.c0))) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS NOT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5773255125267927 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (((-1980088644)IS NOT(t0.c0))) AND (t0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS NOT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5773255125267927 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (((-1980088644)IS NOT(t0.c0))) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS NOT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5773255125267927 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (((-1980088644)IS NOT(t0.c0))) AND (t0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS NOT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5773255125267927 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (((-1980088644)IS NOT(t0.c0))) AND (t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t1.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t1.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 FULL OUTER JOIN t1 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) WHERE ('2036351465') ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (('2036351465') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 FULL OUTER JOIN t1 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 FULL OUTER JOIN t1 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) WHERE ('2036351465') ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (('2036351465') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 FULL OUTER JOIN t1 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 FULL OUTER JOIN t1 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) WHERE ('2036351465') ORDER BY x'' ASC;
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((CAST(t0.c0 AS REAL))/(t0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES() COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((CAST(t0.c0 AS REAL))/(t0.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((CAST(t0.c0 AS REAL))/(t0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES() COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((CAST(t0.c0 AS REAL))/(t0.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE BINARY)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((CAST(t0.c0 AS REAL))/(t0.c0 COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (((((rt0.c0) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (((((rt0.c0) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (((((rt0.c0) IS FALSE)) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CAST(t1.c0 AS REAL), (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0, t0.c0, t1.c0)) AND ((t0.c0, t1.c0, t0.c0)))) WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY ((- (t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CAST(t1.c0 AS REAL), (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0, t0.c0, t1.c0)) AND ((t0.c0, t1.c0, t0.c0)))) ORDER BY ((- (t0.c0)) IN ()) ASC);
SELECT * FROM t0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CAST(t1.c0 AS REAL), (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0, t0.c0, t1.c0)) AND ((t0.c0, t1.c0, t0.c0)))) WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY ((- (t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CAST(t1.c0 AS REAL), (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0, t0.c0, t1.c0)) AND ((t0.c0, t1.c0, t0.c0)))) ORDER BY ((- (t0.c0)) IN ()) ASC);
SELECT * FROM t0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CAST(t1.c0 AS REAL), (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0, t0.c0, t1.c0)) AND ((t0.c0, t1.c0, t0.c0)))) WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY ((- (t0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) DESC, CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST, ((t0.c0)<<((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) DESC, CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST, ((t0.c0)<<((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) DESC, CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST, ((t0.c0)<<((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) DESC, CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST, ((t0.c0)<<((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) DESC, CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST, ((t0.c0)<<((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0 WHERE (((~ (rt0.c0)) IN ((rt0.c2 IN (rt0.c0, rt0.c0)), (~ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ((rt0.c2 IN (rt0.c0, rt0.c0)), (~ (t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((~ (rt0.c0)) IN ((rt0.c2 IN (rt0.c0, rt0.c0)), (~ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ((rt0.c2 IN (rt0.c0, rt0.c0)), (~ (t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((~ (rt0.c0)) IN ((rt0.c2 IN (rt0.c0, rt0.c0)), (~ (t1.c0)))));
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND('-849361042'))) BETWEEN (rt0.c0 COLLATE BINARY) AND (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND('-849361042'))) BETWEEN (rt0.c0 COLLATE BINARY) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND('-849361042'))) BETWEEN (rt0.c0 COLLATE BINARY) AND (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND('-849361042'))) BETWEEN (rt0.c0 COLLATE BINARY) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND('-849361042'))) BETWEEN (rt0.c0 COLLATE BINARY) AND (((t0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((NOT (CAST(NULL AS TEXT)))) ORDER BY LOWER(rt0.c1) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0, t1 ORDER BY LOWER(rt0.c1) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((NOT (CAST(NULL AS TEXT)))) ORDER BY LOWER(rt0.c1) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0, t1 ORDER BY LOWER(rt0.c1) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((NOT (CAST(NULL AS TEXT)))) ORDER BY LOWER(rt0.c1) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE TRIM(rt0.c2)  WHEN rt0.c0 THEN UNLIKELY(rt0.c2) WHEN (((rt0.c0, rt0.c2, 'Y5'))=((rt0.c1, NULL, rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '0.3570612767185861' WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)|(rt0.c0)) THEN (('1792342644')<=(rt0.c0)) ELSE (((rt0.c1))<((rt0.c2))) END) ORDER BY (CAST(rt0.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ((CASE TRIM(rt0.c2)  WHEN rt0.c0 THEN UNLIKELY(rt0.c2) WHEN (((rt0.c0, rt0.c2, 'Y5'))=((rt0.c1, NULL, rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '0.3570612767185861' WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)|(rt0.c0)) THEN (('1792342644')<=(rt0.c0)) ELSE (((rt0.c1))<((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS BLOB) IN ()));
SELECT * FROM rt0 WHERE (CASE TRIM(rt0.c2)  WHEN rt0.c0 THEN UNLIKELY(rt0.c2) WHEN (((rt0.c0, rt0.c2, 'Y5'))=((rt0.c1, NULL, rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '0.3570612767185861' WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)|(rt0.c0)) THEN (('1792342644')<=(rt0.c0)) ELSE (((rt0.c1))<((rt0.c2))) END) ORDER BY (CAST(rt0.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ((CASE TRIM(rt0.c2)  WHEN rt0.c0 THEN UNLIKELY(rt0.c2) WHEN (((rt0.c0, rt0.c2, 'Y5'))=((rt0.c1, NULL, rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '0.3570612767185861' WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)|(rt0.c0)) THEN (('1792342644')<=(rt0.c0)) ELSE (((rt0.c1))<((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS BLOB) IN ()));
SELECT * FROM rt0 WHERE (CASE TRIM(rt0.c2)  WHEN rt0.c0 THEN UNLIKELY(rt0.c2) WHEN (((rt0.c0, rt0.c2, 'Y5'))=((rt0.c1, NULL, rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '0.3570612767185861' WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)|(rt0.c0)) THEN (('1792342644')<=(rt0.c0)) ELSE (((rt0.c1))<((rt0.c2))) END) ORDER BY (CAST(rt0.c1 AS BLOB) IN ());
SELECT ALL * FROM t0 WHERE ((((0.8531751407374212)!=(x'')) IN (((t0.c0) NOTNULL)))) ORDER BY ((((((NULL) BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR((NOT (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8531751407374212)<>(x'')) IN (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((((NULL) BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR((NOT (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((0.8531751407374212)!=(x'')) IN (((t0.c0) NOTNULL)))) ORDER BY ((((((NULL) BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR((NOT (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8531751407374212)<>(x'')) IN (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((((NULL) BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR((NOT (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((0.8531751407374212)!=(x'')) IN (((t0.c0) NOTNULL)))) ORDER BY ((((((NULL) BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR((NOT (t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((t1.c0)!=(t1.c0)))!=(((t0.c0)AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)!=(t1.c0)))!=(((t0.c0)AND(t1.c0))))) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((t1.c0)!=(t1.c0)))!=(((t0.c0)AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)!=(t1.c0)))!=(((t0.c0)AND(t1.c0))))) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((t1.c0)!=(t1.c0)))!=(((t0.c0)AND(t1.c0)))));
SELECT * FROM t1, rt0, t0 WHERE (((((rt0.c1) NOT NULL))>=(rt0.c0 COLLATE RTRIM))) ORDER BY (((t1.c0) NOT BETWEEN (rt0.c0) AND ('-1512463186')) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))>=(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (((t1.c0) NOT BETWEEN (rt0.c0) AND ('-1512463186')) IN ())  NULLS LAST);
SELECT * FROM t1, rt0, t0 WHERE (((((rt0.c1) NOT NULL))>=(rt0.c0 COLLATE RTRIM))) ORDER BY (((t1.c0) NOT BETWEEN (rt0.c0) AND ('-1512463186')) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))>=(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (((t1.c0) NOT BETWEEN (rt0.c0) AND ('-1512463186')) IN ())  NULLS LAST);
SELECT * FROM t1, rt0, t0 WHERE (((((rt0.c1) NOT NULL))>=(rt0.c0 COLLATE RTRIM))) ORDER BY (((t1.c0) NOT BETWEEN (rt0.c0) AND ('-1512463186')) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC));
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((NULL, rt0.c2, LIKE(t1.c0, rt0.c1, 'R')))<>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (rt0.c0 IN ()), ((rt0.c1)AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, rt0.c2, LIKE(t1.c0, rt0.c1, 'R')))<>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (rt0.c0 IN ()), ((rt0.c1)AND(t0.c0)))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((NULL, rt0.c2, LIKE(t1.c0, rt0.c1, 'R')))<>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (rt0.c0 IN ()), ((rt0.c1)AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, rt0.c2, LIKE(t1.c0, rt0.c1, 'R')))<>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (rt0.c0 IN ()), ((rt0.c1)AND(t0.c0)))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((NULL, rt0.c2, LIKE(t1.c0, rt0.c1, 'R')))<>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (rt0.c0 IN ()), ((rt0.c1)AND(t0.c0))))));
SELECT ALL * FROM t0, t1, rt0 WHERE (rt0.c0) ORDER BY CAST(x'ba3b' AS INTEGER)  NULLS FIRST, ((((((((((((t1.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR((- (t1.c0)))))OR(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY CAST(x'ba3b' AS INTEGER)  NULLS FIRST, ((((((((((((t1.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR((- (t1.c0)))))OR(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1, rt0 WHERE (rt0.c0) ORDER BY CAST(x'ba3b' AS INTEGER)  NULLS FIRST, ((((((((((((t1.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR((- (t1.c0)))))OR(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY CAST(x'ba3b' AS INTEGER)  NULLS FIRST, ((((((((((((t1.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR((- (t1.c0)))))OR(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1, rt0 WHERE (rt0.c0) ORDER BY CAST(x'ba3b' AS INTEGER)  NULLS FIRST, ((((((((((((t1.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR((- (t1.c0)))))OR(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN 0Xffffffffd0d1fee9 THEN t1.c0 ELSE t1.c0 END) BETWEEN (IFNULL(t1.c0, t1.c0)) AND (((t1.c0) ISNULL)))) ORDER BY LIKELIHOOD(CAST(t1.c0 AS NUMERIC), 0.8743662154131491)  NULLS LAST, ((((0.2545852512793634)OR(t1.c0)))AND(t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0Xffffffffd0d1fee9 THEN t1.c0 ELSE t1.c0 END) BETWEEN (IFNULL(t1.c0, t1.c0)) AND (((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY LIKELIHOOD(CAST(t1.c0 AS NUMERIC), 0.8743662154131491)  NULLS LAST, ((((0.2545852512793634)OR(t1.c0)))AND(t1.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN 0Xffffffffd0d1fee9 THEN t1.c0 ELSE t1.c0 END) BETWEEN (IFNULL(t1.c0, t1.c0)) AND (((t1.c0) ISNULL)))) ORDER BY LIKELIHOOD(CAST(t1.c0 AS NUMERIC), 0.8743662154131491)  NULLS LAST, ((((0.2545852512793634)OR(t1.c0)))AND(t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0Xffffffffd0d1fee9 THEN t1.c0 ELSE t1.c0 END) BETWEEN (IFNULL(t1.c0, t1.c0)) AND (((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY LIKELIHOOD(CAST(t1.c0 AS NUMERIC), 0.8743662154131491)  NULLS LAST, ((((0.2545852512793634)OR(t1.c0)))AND(t1.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN 0Xffffffffd0d1fee9 THEN t1.c0 ELSE t1.c0 END) BETWEEN (IFNULL(t1.c0, t1.c0)) AND (((t1.c0) ISNULL)))) ORDER BY LIKELIHOOD(CAST(t1.c0 AS NUMERIC), 0.8743662154131491)  NULLS LAST, ((((0.2545852512793634)OR(t1.c0)))AND(t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (DATETIME(((t1.c0)-(rt0.c1)), x'', (t1.c0 IN ()))) ORDER BY (((CASE rt0.c2  WHEN x'' THEN rt0.c0 END))>=(('0.26188374101667256')))  NULLS FIRST, (- ((- (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t1.c0)-(rt0.c1)), x'', (t1.c0 IN ()))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((CASE rt0.c2  WHEN x'' THEN rt0.c0 END))>=(('0.26188374101667256')))  NULLS FIRST, (- ((- (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (DATETIME(((t1.c0)-(rt0.c1)), x'', (t1.c0 IN ()))) ORDER BY (((CASE rt0.c2  WHEN x'' THEN rt0.c0 END))>=(('0.26188374101667256')))  NULLS FIRST, (- ((- (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t1.c0)-(rt0.c1)), x'', (t1.c0 IN ()))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((CASE rt0.c2  WHEN x'' THEN rt0.c0 END))>=(('0.26188374101667256')))  NULLS FIRST, (- ((- (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (DATETIME(((t1.c0)-(rt0.c1)), x'', (t1.c0 IN ()))) ORDER BY (((CASE rt0.c2  WHEN x'' THEN rt0.c0 END))>=(('0.26188374101667256')))  NULLS FIRST, (- ((- (rt0.c0))))  NULLS FIRST;
SELECT * FROM t1, t0, rt0 WHERE ((~ (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((x'681d' IN (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((x'681d' IN (rt0.c0)) IN ()) ASC);
SELECT * FROM t1, t0, rt0 WHERE ((~ (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((x'681d' IN (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((x'681d' IN (rt0.c0)) IN ()) ASC);
SELECT * FROM t1, t0, rt0 WHERE ((~ (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((x'681d' IN (rt0.c0)) IN ()) ASC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)OR(rt0.c2)) COLLATE BINARY LEFT OUTER JOIN t1 ON (CASE '0.37295916731268197'  WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END IN ((((rt0.c0, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c2, t0.c0))))) WHERE (CAST(((rt0.c2)>(NULL)) AS TEXT)) ORDER BY TRIM((NOT (rt0.c1)), (- (t1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>(NULL)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)OR(rt0.c2)) COLLATE BINARY LEFT OUTER JOIN t1 ON (CASE '0.37295916731268197'  WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END IN ((((rt0.c0, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c2, t0.c0))))) ORDER BY TRIM((NOT (rt0.c1)), (- (t1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)OR(rt0.c2)) COLLATE BINARY LEFT OUTER JOIN t1 ON (CASE '0.37295916731268197'  WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END IN ((((rt0.c0, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c2, t0.c0))))) WHERE (CAST(((rt0.c2)>(NULL)) AS TEXT)) ORDER BY TRIM((NOT (rt0.c1)), (- (t1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>(NULL)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)OR(rt0.c2)) COLLATE BINARY LEFT OUTER JOIN t1 ON (CASE '0.37295916731268197'  WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END IN ((((rt0.c0, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c2, t0.c0))))) ORDER BY TRIM((NOT (rt0.c1)), (- (t1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)OR(rt0.c2)) COLLATE BINARY LEFT OUTER JOIN t1 ON (CASE '0.37295916731268197'  WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END IN ((((rt0.c0, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c2, t0.c0))))) WHERE (CAST(((rt0.c2)>(NULL)) AS TEXT)) ORDER BY TRIM((NOT (rt0.c1)), (- (t1.c0))) ASC  NULLS FIRST;
SELECT * FROM t0, rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(rt0.c0))) NOT NULL)) ORDER BY (((((rt0.c0))==((rt0.c0))))&(((rt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))=((rt0.c0))))&(((rt0.c1) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(rt0.c0))) NOT NULL)) ORDER BY (((((rt0.c0))==((rt0.c0))))&(((rt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))=((rt0.c0))))&(((rt0.c1) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(rt0.c0))) NOT NULL)) ORDER BY (((((rt0.c0))==((rt0.c0))))&(((rt0.c1) IS TRUE))) DESC;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((((NULL)OR(((t0.c0)<(rt0.c1)))))AND(((t0.c0) IS FALSE))) FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c1)==(t0.c0))) WHERE (((DATE(0.7558694273189613, t0.c0, rt0.c0)) IS FALSE)) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((DATE(0.7558694273189613, t0.c0, rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((((NULL)OR(((t0.c0)<(rt0.c1)))))AND(((t0.c0) IS FALSE))) FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c1)=(t0.c0))) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((((NULL)OR(((t0.c0)<(rt0.c1)))))AND(((t0.c0) IS FALSE))) FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c1)==(t0.c0))) WHERE (((DATE(0.7558694273189613, t0.c0, rt0.c0)) IS FALSE)) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((DATE(0.7558694273189613, t0.c0, rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((((NULL)OR(((t0.c0)<(rt0.c1)))))AND(((t0.c0) IS FALSE))) FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c1)=(t0.c0))) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (((- (t1.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))) WHERE ((((t1.c0 IN ())) IS FALSE)) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)))  NULLS LAST, (((((t0.c0)OR(t0.c0)))OR('')) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (((- (t1.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)))  NULLS LAST, (((((t0.c0)OR(t0.c0)))OR('')) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (((- (t1.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))) WHERE ((((t1.c0 IN ())) IS FALSE)) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)))  NULLS LAST, (((((t0.c0)OR(t0.c0)))OR('')) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (((- (t1.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)))  NULLS LAST, (((((t0.c0)OR(t0.c0)))OR('')) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (((- (t1.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))) WHERE ((((t1.c0 IN ())) IS FALSE)) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS NUMERIC)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)))  NULLS LAST, (((((t0.c0)OR(t0.c0)))OR('')) IN ()) ASC  NULLS FIRST;
SELECT * FROM t1, rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE (t0.c0);
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON ((NULLIF(t0.c0, t0.c0))|(rt0.c0)) LEFT OUTER JOIN rt0 ON (((((rt0.c0, t1.c0, t0.c0))>=((rt0.c0, rt0.c1, t0.c0)))) NOT BETWEEN ((+ (rt0.c0))) AND (((t0.c0)GLOB(rt0.c2)))) WHERE (((x'')&(((((rt0.c1)OR(rt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')&(((((rt0.c1)OR(rt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON ((NULLIF(t0.c0, t0.c0))|(rt0.c0)) LEFT OUTER JOIN rt0 ON (((((rt0.c0, t1.c0, t0.c0))>=((rt0.c0, rt0.c1, t0.c0)))) NOT BETWEEN ((+ (rt0.c0))) AND (((t0.c0)GLOB(rt0.c2)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON ((NULLIF(t0.c0, t0.c0))|(rt0.c0)) LEFT OUTER JOIN rt0 ON (((((rt0.c0, t1.c0, t0.c0))>=((rt0.c0, rt0.c1, t0.c0)))) NOT BETWEEN ((+ (rt0.c0))) AND (((t0.c0)GLOB(rt0.c2)))) WHERE (((x'')&(((((rt0.c1)OR(rt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')&(((((rt0.c1)OR(rt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON ((NULLIF(t0.c0, t0.c0))|(rt0.c0)) LEFT OUTER JOIN rt0 ON (((((rt0.c0, t1.c0, t0.c0))>=((rt0.c0, rt0.c1, t0.c0)))) NOT BETWEEN ((+ (rt0.c0))) AND (((t0.c0)GLOB(rt0.c2)))));
SELECT * FROM t0, t1, rt0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t1, rt0);
SELECT * FROM t0, t1, rt0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t1, rt0);
SELECT * FROM t0, t1, rt0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (((((0.5423704304357698) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0.5423704304357698) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (((((0.5423704304357698) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0.5423704304357698) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (((((0.5423704304357698) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) IS TRUE))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS TRUE))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) IS TRUE))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS TRUE))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) IS TRUE))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))<(COALESCE(t1.c0, t1.c0)))) ORDER BY (((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND (((+ (t1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<<(t1.c0)))<(COALESCE(t1.c0, t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND (((+ (t1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))<(COALESCE(t1.c0, t1.c0)))) ORDER BY (((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND (((+ (t1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<<(t1.c0)))<(COALESCE(t1.c0, t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND (((+ (t1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))<(COALESCE(t1.c0, t1.c0)))) ORDER BY (((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND (((+ (t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1, rt0, t0 WHERE ((((rt0.c1, t1.c0, rt0.c2)) NOT BETWEEN ((CAST(t0.c0 AS REAL), 0xfffffffff519bc53, ((t1.c0)||(rt0.c2)))) AND (((- (rt0.c1)), ((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, t1.c0, rt0.c2)) NOT BETWEEN ((CAST(t0.c0 AS REAL), 0xfffffffff519bc53, ((t1.c0)||(rt0.c2)))) AND (((- (rt0.c1)), ((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END)))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT ALL * FROM t1, rt0, t0 WHERE ((((rt0.c1, t1.c0, rt0.c2)) NOT BETWEEN ((CAST(t0.c0 AS REAL), 0xfffffffff519bc53, ((t1.c0)||(rt0.c2)))) AND (((- (rt0.c1)), ((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, t1.c0, rt0.c2)) NOT BETWEEN ((CAST(t0.c0 AS REAL), 0xfffffffff519bc53, ((t1.c0)||(rt0.c2)))) AND (((- (rt0.c1)), ((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END)))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT ALL * FROM t1, rt0, t0 WHERE ((((rt0.c1, t1.c0, rt0.c2)) NOT BETWEEN ((CAST(t0.c0 AS REAL), 0xfffffffff519bc53, ((t1.c0)||(rt0.c2)))) AND (((- (rt0.c1)), ((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT COUNT(*) FROM t0, t1 WHERE ('餛\') ORDER BY ((t1.c0 COLLATE NOCASE)*(((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('餛\') IS TRUE)  as count FROM t0, t1 ORDER BY ((t1.c0 COLLATE NOCASE)*(((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))) ASC);
SELECT COUNT(*) FROM t0, t1 WHERE ('餛\') ORDER BY ((t1.c0 COLLATE NOCASE)*(((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('餛\') IS TRUE)  as count FROM t0, t1 ORDER BY ((t1.c0 COLLATE NOCASE)*(((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))) ASC);
SELECT COUNT(*) FROM t0, t1 WHERE ('餛\') ORDER BY ((t1.c0 COLLATE NOCASE)*(((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) ORDER BY CASE ((t0.c0)==(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN rt0.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((t0.c0)==(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN rt0.c0 COLLATE BINARY END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) ORDER BY CASE ((t0.c0)==(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN rt0.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((t0.c0)==(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN rt0.c0 COLLATE BINARY END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) ORDER BY CASE ((t0.c0)==(rt0.c2))  WHEN ((rt0.c1)%(rt0.c0)) THEN rt0.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN t0 ON (((((t0.c0) ISNULL)))==((((t1.c0) NOT NULL)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON (((((t0.c0) ISNULL)))=((((t1.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN t0 ON (((((t0.c0) ISNULL)))==((((t1.c0) NOT NULL)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON (((((t0.c0) ISNULL)))=((((t1.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN t0 ON (((((t0.c0) ISNULL)))==((((t1.c0) NOT NULL)))) WHERE (t1.c0);
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))OR(CAST(0.4015203713207487 AS BLOB))) WHERE ((((t0.c0 IN (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))OR(CAST(0.4015203713207487 AS BLOB))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))OR(CAST(0.4015203713207487 AS BLOB))) WHERE ((((t0.c0 IN (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))OR(CAST(0.4015203713207487 AS BLOB))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))OR(CAST(0.4015203713207487 AS BLOB))) WHERE ((((t0.c0 IN (rt0.c0))) IS TRUE));
SELECT ALL * FROM t0, t1, rt0 WHERE ((((rt0.c2)<<(NULL)) IN (((rt0.c0)GLOB(rt0.c0)), NULL))) ORDER BY ((((t0.c0 COLLATE BINARY)AND(CASE WHEN 0xffffffffe3fc1573 THEN t1.c0 ELSE t0.c0 END)))AND(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<<(NULL)) IN (((rt0.c0)GLOB(rt0.c0)), NULL))) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY ((((t0.c0 COLLATE BINARY)AND(CASE WHEN 0xffffffffe3fc1573 THEN t1.c0 ELSE t0.c0 END)))AND(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, t1, rt0 WHERE ((((rt0.c2)<<(NULL)) IN (((rt0.c0)GLOB(rt0.c0)), NULL))) ORDER BY ((((t0.c0 COLLATE BINARY)AND(CASE WHEN 0xffffffffe3fc1573 THEN t1.c0 ELSE t0.c0 END)))AND(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<<(NULL)) IN (((rt0.c0)GLOB(rt0.c0)), NULL))) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY ((((t0.c0 COLLATE BINARY)AND(CASE WHEN 0xffffffffe3fc1573 THEN t1.c0 ELSE t0.c0 END)))AND(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, t1, rt0 WHERE ((((rt0.c2)<<(NULL)) IN (((rt0.c0)GLOB(rt0.c0)), NULL))) ORDER BY ((((t0.c0 COLLATE BINARY)AND(CASE WHEN 0xffffffffe3fc1573 THEN t1.c0 ELSE t0.c0 END)))AND(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c1)|(t1.c0)), CASE 1383802537  WHEN rt0.c0 THEN x'e719' END, LAST_INSERT_ROWID()))==((rt0.c2 COLLATE RTRIM, TIME(rt0.c0, rt0.c1, t1.c0), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)|(t1.c0)), CASE 1383802537  WHEN rt0.c0 THEN x'e719' END, LAST_INSERT_ROWID()))==((rt0.c2 COLLATE RTRIM, TIME(rt0.c0, rt0.c1, t1.c0), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c1)|(t1.c0)), CASE 1383802537  WHEN rt0.c0 THEN x'e719' END, LAST_INSERT_ROWID()))==((rt0.c2 COLLATE RTRIM, TIME(rt0.c0, rt0.c1, t1.c0), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)|(t1.c0)), CASE 1383802537  WHEN rt0.c0 THEN x'e719' END, LAST_INSERT_ROWID()))==((rt0.c2 COLLATE RTRIM, TIME(rt0.c0, rt0.c1, t1.c0), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c1)|(t1.c0)), CASE 1383802537  WHEN rt0.c0 THEN x'e719' END, LAST_INSERT_ROWID()))==((rt0.c2 COLLATE RTRIM, TIME(rt0.c0, rt0.c1, t1.c0), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (CASE (rt0.c1 IN ())  WHEN ((t1.c0) NOTNULL) THEN (t0.c0 IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN ((t1.c0) NOTNULL) THEN (t0.c0 IN (t0.c0)) END) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (CASE (rt0.c1 IN ())  WHEN ((t1.c0) NOTNULL) THEN (t0.c0 IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN ((t1.c0) NOTNULL) THEN (t0.c0 IN (t0.c0)) END) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (CASE (rt0.c1 IN ())  WHEN ((t1.c0) NOTNULL) THEN (t0.c0 IN (t0.c0)) END);
SELECT ALL COUNT(*) FROM t1, rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE (rt0.c1) ORDER BY rt0.c2 ASC, ((rt0.c1)%(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN t0 ON rt0.c1 ORDER BY rt0.c2 ASC, ((rt0.c1)%(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE (rt0.c1) ORDER BY rt0.c2 ASC, ((rt0.c1)%(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN t0 ON rt0.c1 ORDER BY rt0.c2 ASC, ((rt0.c1)%(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE (rt0.c1) ORDER BY rt0.c2 ASC, ((rt0.c1)%(rt0.c1)) COLLATE RTRIM;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, t1 CROSS JOIN rt0 ON x'' WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM t0, t1 CROSS JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM t0, t1 CROSS JOIN rt0 ON x'' WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM t0, t1 CROSS JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM t0, t1 CROSS JOIN rt0 ON x'' WHERE (((NULL) IS TRUE));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (t0.c0) ORDER BY (((t0.c0)>=(t1.c0)) IN ())  NULLS LAST, json_valid(CAST('1331368410' AS REAL)) ASC, TYPEOF((- (t0.c0))) DESC, (((- (t1.c0)))-(CASE t1.c0  WHEN t0.c0 THEN t1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t1, t0 ORDER BY (((t0.c0)>=(t1.c0)) IN ())  NULLS LAST, json_valid(CAST('1331368410' AS REAL)) ASC, TYPEOF((- (t0.c0))) DESC, (((- (t1.c0)))-(CASE t1.c0  WHEN t0.c0 THEN t1.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (t0.c0) ORDER BY (((t0.c0)>=(t1.c0)) IN ())  NULLS LAST, json_valid(CAST('1331368410' AS REAL)) ASC, TYPEOF((- (t0.c0))) DESC, (((- (t1.c0)))-(CASE t1.c0  WHEN t0.c0 THEN t1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t1, t0 ORDER BY (((t0.c0)>=(t1.c0)) IN ())  NULLS LAST, json_valid(CAST('1331368410' AS REAL)) ASC, TYPEOF((- (t0.c0))) DESC, (((- (t1.c0)))-(CASE t1.c0  WHEN t0.c0 THEN t1.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (t0.c0) ORDER BY (((t0.c0)>=(t1.c0)) IN ())  NULLS LAST, json_valid(CAST('1331368410' AS REAL)) ASC, TYPEOF((- (t0.c0))) DESC, (((- (t1.c0)))-(CASE t1.c0  WHEN t0.c0 THEN t1.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN t0 ON CAST(TRIM(rt0.c0) AS INTEGER) WHERE (rt0.c2) ORDER BY ((t1.c0)OR(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST, ((((rt0.c0) IS TRUE)) BETWEEN (SUBSTR(rt0.c2, t1.c0)) AND (((t1.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(json_type(t0.c0) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN t0 ON CAST(TRIM(rt0.c0) AS INTEGER) ORDER BY ((t1.c0)OR(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST, ((((rt0.c0) IS TRUE)) BETWEEN (SUBSTR(rt0.c2, t1.c0)) AND (((t1.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(json_type(t0.c0) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN t0 ON CAST(TRIM(rt0.c0) AS INTEGER) WHERE (rt0.c2) ORDER BY ((t1.c0)OR(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST, ((((rt0.c0) IS TRUE)) BETWEEN (SUBSTR(rt0.c2, t1.c0)) AND (((t1.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(json_type(t0.c0) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN t0 ON CAST(TRIM(rt0.c0) AS INTEGER) ORDER BY ((t1.c0)OR(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST, ((((rt0.c0) IS TRUE)) BETWEEN (SUBSTR(rt0.c2, t1.c0)) AND (((t1.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(json_type(t0.c0) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN t0 ON CAST(TRIM(rt0.c0) AS INTEGER) WHERE (rt0.c2) ORDER BY ((t1.c0)OR(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST, ((((rt0.c0) IS TRUE)) BETWEEN (SUBSTR(rt0.c2, t1.c0)) AND (((t1.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(json_type(t0.c0) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0, t1, t0 WHERE (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t1.c0) IS TRUE), '1323480963'))<=((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END, CAST(t0.c0 AS REAL), ((t1.c0)/(0.32673038277109934))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t1.c0) IS TRUE), '1323480963'))<=((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END, CAST(t0.c0 AS REAL), ((t1.c0)/(0.32673038277109934)))))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t1.c0) IS TRUE), '1323480963'))<=((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END, CAST(t0.c0 AS REAL), ((t1.c0)/(0.32673038277109934))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t1.c0) IS TRUE), '1323480963'))<=((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END, CAST(t0.c0 AS REAL), ((t1.c0)/(0.32673038277109934)))))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t1.c0) IS TRUE), '1323480963'))<=((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END, CAST(t0.c0 AS REAL), ((t1.c0)/(0.32673038277109934))))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR((+ (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR((+ (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR((+ (rt0.c1)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON x'95e3' INNER JOIN t0 ON (((('1815880565')OR(NULL)))AND(rt0.c0 COLLATE BINARY)) WHERE (((((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON x'95e3' INNER JOIN t0 ON (((('1815880565')OR(NULL)))AND(rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON x'95e3' INNER JOIN t0 ON (((('1815880565')OR(NULL)))AND(rt0.c0 COLLATE BINARY)) WHERE (((((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON x'95e3' INNER JOIN t0 ON (((('1815880565')OR(NULL)))AND(rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON x'95e3' INNER JOIN t0 ON (((('1815880565')OR(NULL)))AND(rt0.c0 COLLATE BINARY)) WHERE (((((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE));
SELECT * FROM t1, rt0 WHERE ('-1449691585');
SELECT SUM(count) FROM (SELECT (('-1449691585') IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ('-1449691585');
SELECT SUM(count) FROM (SELECT (('-1449691585') IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ('-1449691585');
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t1.c0))), ((t1.c0) NOT NULL), 0.37985960578447475, ((t0.c0) NOT NULL), (~ (rt0.c0))))>((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c2, UNLIKELY(rt0.c0), (+ (t1.c0)), (~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t1.c0))), ((t1.c0) NOT NULL), 0.37985960578447475, ((t0.c0) NOT NULL), (~ (rt0.c0))))>((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c2, UNLIKELY(rt0.c0), (+ (t1.c0)), (~ (rt0.c2)))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t1.c0))), ((t1.c0) NOT NULL), 0.37985960578447475, ((t0.c0) NOT NULL), (~ (rt0.c0))))>((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c2, UNLIKELY(rt0.c0), (+ (t1.c0)), (~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t1.c0))), ((t1.c0) NOT NULL), 0.37985960578447475, ((t0.c0) NOT NULL), (~ (rt0.c0))))>((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c2, UNLIKELY(rt0.c0), (+ (t1.c0)), (~ (rt0.c2)))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t1.c0))), ((t1.c0) NOT NULL), 0.37985960578447475, ((t0.c0) NOT NULL), (~ (rt0.c0))))>((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c2, UNLIKELY(rt0.c0), (+ (t1.c0)), (~ (rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2)GLOB(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)GLOB(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)GLOB(rt0.c2)) COLLATE NOCASE);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ORDER BY (t0.c0 IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE BINARY  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ORDER BY (t0.c0 IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE BINARY  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ORDER BY (t0.c0 IN ()) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (x'');
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)AND(((t1.c0)GLOB(t1.c0)))))AND(((t1.c0)IS(t1.c0))))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c0))) AND ((~ (x'')))), (((((t1.c0)GLOB(t1.c0))))=(((((t1.c0))=((t1.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)AND(((t1.c0)GLOB(t1.c0)))))AND(((t1.c0)IS(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c0))) AND ((~ (x'')))), (((((t1.c0)GLOB(t1.c0))))=(((((t1.c0))==((t1.c0)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)AND(((t1.c0)GLOB(t1.c0)))))AND(((t1.c0)IS(t1.c0))))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c0))) AND ((~ (x'')))), (((((t1.c0)GLOB(t1.c0))))=(((((t1.c0))=((t1.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)AND(((t1.c0)GLOB(t1.c0)))))AND(((t1.c0)IS(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c0))) AND ((~ (x'')))), (((((t1.c0)GLOB(t1.c0))))=(((((t1.c0))==((t1.c0)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)AND(((t1.c0)GLOB(t1.c0)))))AND(((t1.c0)IS(t1.c0))))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c0))) AND ((~ (x'')))), (((((t1.c0)GLOB(t1.c0))))=(((((t1.c0))=((t1.c0)))))) DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((((CAST(rt0.c2 AS REAL)))<>(((((rt0.c1))==((rt0.c1))))))) ORDER BY CAST(((t0.c0)-(rt0.c2)) AS INTEGER)  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS REAL)))<>(((((rt0.c1))==((rt0.c1))))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c0)-(rt0.c2)) AS INTEGER)  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((CAST(rt0.c2 AS REAL)))<>(((((rt0.c1))==((rt0.c1))))))) ORDER BY CAST(((t0.c0)-(rt0.c2)) AS INTEGER)  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS REAL)))<>(((((rt0.c1))==((rt0.c1))))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c0)-(rt0.c2)) AS INTEGER)  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((CAST(rt0.c2 AS REAL)))<>(((((rt0.c1))==((rt0.c1))))))) ORDER BY CAST(((t0.c0)-(rt0.c2)) AS INTEGER)  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (TRIM(CAST(t1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(t1.c0 AS BLOB))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (TRIM(CAST(t1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(t1.c0 AS BLOB))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (TRIM(CAST(t1.c0 AS BLOB)));
SELECT COUNT(*) FROM t0, t1 WHERE (t0.c0) ORDER BY ((((t1.c0)|(t0.c0)))<<(CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t1 ORDER BY ((((t1.c0)|(t0.c0)))<<(CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END)) DESC);
SELECT COUNT(*) FROM t0, t1 WHERE (t0.c0) ORDER BY ((((t1.c0)|(t0.c0)))<<(CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t1 ORDER BY ((((t1.c0)|(t0.c0)))<<(CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END)) DESC);
SELECT COUNT(*) FROM t0, t1 WHERE (t0.c0) ORDER BY ((((t1.c0)|(t0.c0)))<<(CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END)) DESC;
SELECT COUNT(*) FROM rt0, t0, t1 WHERE ((((t0.c0, t1.c0, rt0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- (rt0.c2)))) AND ((x'', ((((rt0.c2)OR(t0.c0)))OR(t1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t1.c0, rt0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- (rt0.c2)))) AND ((x'', ((((rt0.c2)OR(t0.c0)))OR(t1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE ((((t0.c0, t1.c0, rt0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- (rt0.c2)))) AND ((x'', ((((rt0.c2)OR(t0.c0)))OR(t1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t1.c0, rt0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- (rt0.c2)))) AND ((x'', ((((rt0.c2)OR(t0.c0)))OR(t1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE ((((t0.c0, t1.c0, rt0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- (rt0.c2)))) AND ((x'', ((((rt0.c2)OR(t0.c0)))OR(t1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.7366535722447777))) AND ((((t0.c0) ISNULL)))) WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.06273657609307848)))) ORDER BY (((CAST('hO{ZeNt]>' AS NUMERIC)))<=(((rt0.c2 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.06273657609307848)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.7366535722447777))) AND ((((t0.c0) ISNULL)))) ORDER BY (((CAST('hO{ZeNt]>' AS NUMERIC)))<=(((rt0.c2 IN ())))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.7366535722447777))) AND ((((t0.c0) ISNULL)))) WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.06273657609307848)))) ORDER BY (((CAST('hO{ZeNt]>' AS NUMERIC)))<=(((rt0.c2 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.06273657609307848)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.7366535722447777))) AND ((((t0.c0) ISNULL)))) ORDER BY (((CAST('hO{ZeNt]>' AS NUMERIC)))<=(((rt0.c2 IN ())))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.7366535722447777))) AND ((((t0.c0) ISNULL)))) WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.06273657609307848)))) ORDER BY (((CAST('hO{ZeNt]>' AS NUMERIC)))<=(((rt0.c2 IN ())))) ASC;
SELECT * FROM t1, rt0, t0 WHERE ((((((rt0.c1, t0.c0, t0.c0))=((x'2102', rt0.c1, rt0.c1))))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, t0.c0, t0.c0))==((x'2102', rt0.c1, rt0.c1))))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (x''))))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE ((((((rt0.c1, t0.c0, t0.c0))=((x'2102', rt0.c1, rt0.c1))))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, t0.c0, t0.c0))==((x'2102', rt0.c1, rt0.c1))))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (x''))))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE ((((((rt0.c1, t0.c0, t0.c0))=((x'2102', rt0.c1, rt0.c1))))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'')))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS TEXT)))>((TIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY (((t0.c0)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS TEXT)))>((TIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS TEXT)))>((TIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY (((t0.c0)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS TEXT)))>((TIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS TEXT)))>((TIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY (((t0.c0)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (CASE (- (rt0.c2))  WHEN ((t0.c0) IS TRUE) THEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) ORDER BY RTRIM(CAST(t1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c2))  WHEN ((t0.c0) IS TRUE) THEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY RTRIM(CAST(t1.c0 AS REAL)));
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (CASE (- (rt0.c2))  WHEN ((t0.c0) IS TRUE) THEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) ORDER BY RTRIM(CAST(t1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c2))  WHEN ((t0.c0) IS TRUE) THEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY RTRIM(CAST(t1.c0 AS REAL)));
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (CASE (- (rt0.c2))  WHEN ((t0.c0) IS TRUE) THEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) ORDER BY RTRIM(CAST(t1.c0 AS REAL));
SELECT ALL * FROM t1, t0 NATURAL JOIN rt0 WHERE (t0.c0) ORDER BY (((((rt0.c1) BETWEEN (rt0.c1) AND ('|K'))))>=((CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t1, t0 NATURAL JOIN rt0 ORDER BY (((((rt0.c1) BETWEEN (rt0.c1) AND ('|K'))))>=((CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 END))) ASC);
SELECT ALL * FROM t1, t0 NATURAL JOIN rt0 WHERE (t0.c0) ORDER BY (((((rt0.c1) BETWEEN (rt0.c1) AND ('|K'))))>=((CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t1, t0 NATURAL JOIN rt0 ORDER BY (((((rt0.c1) BETWEEN (rt0.c1) AND ('|K'))))>=((CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 END))) ASC);
SELECT ALL * FROM t1, t0 NATURAL JOIN rt0 WHERE (t0.c0) ORDER BY (((((rt0.c1) BETWEEN (rt0.c1) AND ('|K'))))>=((CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 END))) ASC;
SELECT * FROM t1, rt0 WHERE (load_extension(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c1 COLLATE RTRIM)) ORDER BY CAST(0.9746350974497693 AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(0.9746350974497693 AS REAL) DESC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (load_extension(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c1 COLLATE RTRIM)) ORDER BY CAST(0.9746350974497693 AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(0.9746350974497693 AS REAL) DESC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (load_extension(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c1 COLLATE RTRIM)) ORDER BY CAST(0.9746350974497693 AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT rt0.c1));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c1)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT rt0.c1));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c1)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT rt0.c1));
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((NOT (rt0.c0)))>=(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))>=(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((NOT (rt0.c0)))>=(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))>=(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((NOT (rt0.c0)))>=(rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0, t1 WHERE (t1.c0 COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (t1.c0 COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (t1.c0 COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM t1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (NULL);
SELECT ALL * FROM t0, t1 FULL OUTER JOIN rt0 ON UNICODE(((((((((t0.c0)AND(t1.c0)))AND(rt0.c2)))AND(x'8216')))AND(rt0.c0))) WHERE (((((rt0.c1)<<(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((0.49626367503478375) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((- (t0.c0)), (((rt0.c0))=((t1.c0))), (('-2105512717')<(rt0.c2))))>=((((t0.c0) IS TRUE), ((0.8045811613881746)/(rt0.c1)), ((rt0.c2)<(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((0.49626367503478375) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON UNICODE(((((((((t0.c0)AND(t1.c0)))AND(rt0.c2)))AND(x'8216')))AND(rt0.c0))) ORDER BY ((((- (t0.c0)), (((rt0.c0))=((t1.c0))), (('-2105512717')<(rt0.c2))))>=((((t0.c0) IS TRUE), ((0.8045811613881746)/(rt0.c1)), ((rt0.c2)<(rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM t0, t1 FULL OUTER JOIN rt0 ON UNICODE(((((((((t0.c0)AND(t1.c0)))AND(rt0.c2)))AND(x'8216')))AND(rt0.c0))) WHERE (((((rt0.c1)<<(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((0.49626367503478375) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((- (t0.c0)), (((rt0.c0))=((t1.c0))), (('-2105512717')<(rt0.c2))))>=((((t0.c0) IS TRUE), ((0.8045811613881746)/(rt0.c1)), ((rt0.c2)<(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((0.49626367503478375) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON UNICODE(((((((((t0.c0)AND(t1.c0)))AND(rt0.c2)))AND(x'8216')))AND(rt0.c0))) ORDER BY ((((- (t0.c0)), (((rt0.c0))=((t1.c0))), (('-2105512717')<(rt0.c2))))>=((((t0.c0) IS TRUE), ((0.8045811613881746)/(rt0.c1)), ((rt0.c2)<(rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM t0, t1 FULL OUTER JOIN rt0 ON UNICODE(((((((((t0.c0)AND(t1.c0)))AND(rt0.c2)))AND(x'8216')))AND(rt0.c0))) WHERE (((((rt0.c1)<<(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((0.49626367503478375) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((- (t0.c0)), (((rt0.c0))=((t1.c0))), (('-2105512717')<(rt0.c2))))>=((((t0.c0) IS TRUE), ((0.8045811613881746)/(rt0.c1)), ((rt0.c2)<(rt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM rt0, t0, t1 WHERE (UNICODE((((t0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c1, t0.c0))))) ORDER BY CAST((~ (rt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((((t0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c1, t0.c0))))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CAST((~ (rt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM rt0, t0, t1 WHERE (UNICODE((((t0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c1, t0.c0))))) ORDER BY CAST((~ (rt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((((t0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c1, t0.c0))))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CAST((~ (rt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM rt0, t0, t1 WHERE (UNICODE((((t0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c1, t0.c0))))) ORDER BY CAST((~ (rt0.c0)) AS BLOB) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))!=(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))!=(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))!=(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))!=(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))!=(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((~ (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((~ (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((~ (rt0.c2))) ISNULL));
SELECT * FROM t1 WHERE ((('-184462576') NOT NULL)) ORDER BY ((CAST(t1.c0 AS NUMERIC))/(t1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-184462576') NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c0 AS NUMERIC))/(t1.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t1 WHERE ((('-184462576') NOT NULL)) ORDER BY ((CAST(t1.c0 AS NUMERIC))/(t1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-184462576') NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c0 AS NUMERIC))/(t1.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t1 WHERE ((('-184462576') NOT NULL)) ORDER BY ((CAST(t1.c0 AS NUMERIC))/(t1.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t1.c0)AND(t1.c0)))OR(x'')))OR(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(t0.c0)))))OR(((rt0.c1) NOT NULL))))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN 0.0038962248208548322 ELSE t0.c0 END)))AND(((rt0.c0)%(rt0.c1)))))OR(CASE t0.c0  WHEN x'' THEN rt0.c0 ELSE 0.19479650074355903 END)) WHERE (((QUOTE(t0.c0))<=(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(t0.c0))<=(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t1.c0)AND(t1.c0)))OR(x'')))OR(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(t0.c0)))))OR(((rt0.c1) NOT NULL))))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN 0.0038962248208548322 ELSE t0.c0 END)))AND(((rt0.c0)%(rt0.c1)))))OR(CASE t0.c0  WHEN x'' THEN rt0.c0 ELSE 0.19479650074355903 END)));
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t1.c0)AND(t1.c0)))OR(x'')))OR(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(t0.c0)))))OR(((rt0.c1) NOT NULL))))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN 0.0038962248208548322 ELSE t0.c0 END)))AND(((rt0.c0)%(rt0.c1)))))OR(CASE t0.c0  WHEN x'' THEN rt0.c0 ELSE 0.19479650074355903 END)) WHERE (((QUOTE(t0.c0))<=(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(t0.c0))<=(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t1.c0)AND(t1.c0)))OR(x'')))OR(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(t0.c0)))))OR(((rt0.c1) NOT NULL))))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN 0.0038962248208548322 ELSE t0.c0 END)))AND(((rt0.c0)%(rt0.c1)))))OR(CASE t0.c0  WHEN x'' THEN rt0.c0 ELSE 0.19479650074355903 END)));
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t1.c0)AND(t1.c0)))OR(x'')))OR(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(t0.c0)))))OR(((rt0.c1) NOT NULL))))OR(rt0.c2)))AND(CASE WHEN t1.c0 THEN 0.0038962248208548322 ELSE t0.c0 END)))AND(((rt0.c0)%(rt0.c1)))))OR(CASE t0.c0  WHEN x'' THEN rt0.c0 ELSE 0.19479650074355903 END)) WHERE (((QUOTE(t0.c0))<=(TOTAL_CHANGES())));
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2)|(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2)|(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2)|(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))))) ORDER BY rt0.c2;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c1)>>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN ((rt0.c1)>>(rt0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c1)>>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN ((rt0.c1)>>(rt0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c1)>>(rt0.c0)) END);
SELECT ALL * FROM t1, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN rt0.c0 END);
SELECT * FROM t0 WHERE ((((+ (t0.c0)))>=((t0.c0 IN (t0.c0))))) ORDER BY ((((t0.c0)+(t0.c0))) BETWEEN ((t0.c0 IN ())) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 END)) ASC, CAST(CAST(t0.c0 AS TEXT) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))>=((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)+(t0.c0))) BETWEEN ((t0.c0 IN ())) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 END)) ASC, CAST(CAST(t0.c0 AS TEXT) AS INTEGER));
SELECT * FROM t0 WHERE ((((+ (t0.c0)))>=((t0.c0 IN (t0.c0))))) ORDER BY ((((t0.c0)+(t0.c0))) BETWEEN ((t0.c0 IN ())) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 END)) ASC, CAST(CAST(t0.c0 AS TEXT) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))>=((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)+(t0.c0))) BETWEEN ((t0.c0 IN ())) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 END)) ASC, CAST(CAST(t0.c0 AS TEXT) AS INTEGER));
SELECT * FROM t0 WHERE ((((+ (t0.c0)))>=((t0.c0 IN (t0.c0))))) ORDER BY ((((t0.c0)+(t0.c0))) BETWEEN ((t0.c0 IN ())) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 END)) ASC, CAST(CAST(t0.c0 AS TEXT) AS INTEGER);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT ALL * FROM t0, t1, rt0 WHERE (CASE WHEN (t1.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL * FROM t0, t1, rt0 WHERE (CASE WHEN (t1.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL * FROM t0, t1, rt0 WHERE (CASE WHEN (t1.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) END);
SELECT * FROM rt0, t1, t0 WHERE (((((t1.c0)AND(rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c0))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c0))) AND (rt0.c1))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE (((((t1.c0)AND(rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c0))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c0))) AND (rt0.c1))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE (((((t1.c0)AND(rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c0))) AND (rt0.c1)));
SELECT ALL * FROM t0, rt0, t1 WHERE (highlight(CAST(rt0.c2 AS INTEGER), (t1.c0 IN ()), ((((t0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c1)) ORDER BY json_array_length(CAST(rt0.c0 AS REAL), ((t0.c0) ISNULL))  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER))<<(t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight(CAST(rt0.c2 AS INTEGER), (t1.c0 IN ()), ((((t0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c1)) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY json_array_length(CAST(rt0.c0 AS REAL), ((t0.c0) ISNULL))  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER))<<(t0.c0))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, t1 WHERE (highlight(CAST(rt0.c2 AS INTEGER), (t1.c0 IN ()), ((((t0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c1)) ORDER BY json_array_length(CAST(rt0.c0 AS REAL), ((t0.c0) ISNULL))  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER))<<(t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight(CAST(rt0.c2 AS INTEGER), (t1.c0 IN ()), ((((t0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c1)) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY json_array_length(CAST(rt0.c0 AS REAL), ((t0.c0) ISNULL))  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER))<<(t0.c0))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, t1 WHERE (highlight(CAST(rt0.c2 AS INTEGER), (t1.c0 IN ()), ((((t0.c0)OR(rt0.c1)))OR(rt0.c1)), rt0.c1)) ORDER BY json_array_length(CAST(rt0.c0 AS REAL), ((t0.c0) ISNULL))  NULLS FIRST, ((CAST(rt0.c1 AS INTEGER))<<(t0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((0xffffffffb54b2e94) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffb54b2e94) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((0xffffffffb54b2e94) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffb54b2e94) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((0xffffffffb54b2e94) IS FALSE));
SELECT ALL * FROM t0 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((NULLIF(DISTINCT NULL, t1.c0))) AND ((ROUND(rt0.c0, rt0.c2)))) RIGHT OUTER JOIN rt0 ON (((-1957595124)) BETWEEN ((((t1.c0)<=(t0.c0)))) AND (('!D'))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((NULLIF(DISTINCT NULL, t1.c0))) AND ((ROUND(rt0.c0, rt0.c2)))) RIGHT OUTER JOIN rt0 ON (((-1957595124)) BETWEEN ((((t1.c0)<=(t0.c0)))) AND (('!D'))));
SELECT ALL * FROM t0 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((NULLIF(DISTINCT NULL, t1.c0))) AND ((ROUND(rt0.c0, rt0.c2)))) RIGHT OUTER JOIN rt0 ON (((-1957595124)) BETWEEN ((((t1.c0)<=(t0.c0)))) AND (('!D'))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((NULLIF(DISTINCT NULL, t1.c0))) AND ((ROUND(rt0.c0, rt0.c2)))) RIGHT OUTER JOIN rt0 ON (((-1957595124)) BETWEEN ((((t1.c0)<=(t0.c0)))) AND (('!D'))));
SELECT COUNT(*) FROM rt0, t1 LEFT OUTER JOIN t0 ON (x'6ab0' IN ()) WHERE (((((rt0.c2 COLLATE NOCASE)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(((t1.c0)LIKE(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(((t1.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN t0 ON (x'6ab0' IN ()));
SELECT COUNT(*) FROM rt0, t1 LEFT OUTER JOIN t0 ON (x'6ab0' IN ()) WHERE (((((rt0.c2 COLLATE NOCASE)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(((t1.c0)LIKE(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(((t1.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN t0 ON (x'6ab0' IN ()));
SELECT COUNT(*) FROM rt0, t1 LEFT OUTER JOIN t0 ON (x'6ab0' IN ()) WHERE (((((rt0.c2 COLLATE NOCASE)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(((t1.c0)LIKE(t1.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)/(rt0.c0)))*((((((((('-793213375')AND(rt0.c1)))OR(0.8133476964067866)))AND(t0.c0)))OR(t1.c0)))) LEFT OUTER JOIN t1 ON (((+ (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)OR(t0.c0)))AND(t1.c0)))) WHERE (((((((((((t0.c0)OR(t1.c0)))AND(((t1.c0)<>(rt0.c2)))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR(((0Xffffffffc9f03ab0) NOT BETWEEN (NULL) AND (t1.c0))))) ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(t1.c0)))AND(rt0.c0)))OR(t1.c0))) IS TRUE)  NULLS FIRST, ((CHAR(t0.c0))<>((((t1.c0))!=((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t1.c0)))AND(((t1.c0)<>(rt0.c2)))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR(((0xffffffffc9f03ab0) NOT BETWEEN (NULL) AND (t1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)/(rt0.c0)))*((((((((('-793213375')AND(rt0.c1)))OR(0.8133476964067866)))AND(t0.c0)))OR(t1.c0)))) LEFT OUTER JOIN t1 ON (((+ (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)OR(t0.c0)))AND(t1.c0)))) ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(t1.c0)))AND(rt0.c0)))OR(t1.c0))) IS TRUE)  NULLS FIRST, ((CHAR(t0.c0))!=((((t1.c0))<>((rt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)/(rt0.c0)))*((((((((('-793213375')AND(rt0.c1)))OR(0.8133476964067866)))AND(t0.c0)))OR(t1.c0)))) LEFT OUTER JOIN t1 ON (((+ (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)OR(t0.c0)))AND(t1.c0)))) WHERE (((((((((((t0.c0)OR(t1.c0)))AND(((t1.c0)<>(rt0.c2)))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR(((0Xffffffffc9f03ab0) NOT BETWEEN (NULL) AND (t1.c0))))) ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(t1.c0)))AND(rt0.c0)))OR(t1.c0))) IS TRUE)  NULLS FIRST, ((CHAR(t0.c0))<>((((t1.c0))!=((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t1.c0)))AND(((t1.c0)<>(rt0.c2)))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR(((0xffffffffc9f03ab0) NOT BETWEEN (NULL) AND (t1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)/(rt0.c0)))*((((((((('-793213375')AND(rt0.c1)))OR(0.8133476964067866)))AND(t0.c0)))OR(t1.c0)))) LEFT OUTER JOIN t1 ON (((+ (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)OR(t0.c0)))AND(t1.c0)))) ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(t1.c0)))AND(rt0.c0)))OR(t1.c0))) IS TRUE)  NULLS FIRST, ((CHAR(t0.c0))!=((((t1.c0))<>((rt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((rt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)>('-681157626'))) IS TRUE) WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.5806200098398143) COLLATE NOCASE) ORDER BY ((UPPER(rt0.c1)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ('1420540537', rt0.c1)))GLOB(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c0, 0.5806200098398143) COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)>('-681157626'))) IS TRUE) ORDER BY ((UPPER(rt0.c1)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ('1420540537', rt0.c1)))GLOB(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)>('-681157626'))) IS TRUE) WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.5806200098398143) COLLATE NOCASE) ORDER BY ((UPPER(rt0.c1)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ('1420540537', rt0.c1)))GLOB(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c0, 0.5806200098398143) COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)>('-681157626'))) IS TRUE) ORDER BY ((UPPER(rt0.c1)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ('1420540537', rt0.c1)))GLOB(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)>('-681157626'))) IS TRUE) WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.5806200098398143) COLLATE NOCASE) ORDER BY ((UPPER(rt0.c1)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ('1420540537', rt0.c1)))GLOB(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)<=(t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<=(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)<=(t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<=(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)<=(t1.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (CASE 0.9224448855216498  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9224448855216498  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE 0.9224448855216498  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9224448855216498  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE 0.9224448855216498  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) END);
SELECT * FROM t1, t0 WHERE ((- ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c0 IN ())))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE ((- ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c0 IN ())))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE ((- ((t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)*(t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)*(t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)*(t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)*(t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)*(t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND(t0.c0)));
SELECT * FROM t0, rt0, t1 WHERE (((((((((rt0.c0 COLLATE RTRIM)OR((((t1.c0))<((t0.c0))))))OR(HEX(DISTINCT NULL))))OR(IFNULL(DISTINCT t0.c0, rt0.c2))))OR(((x'') IS TRUE)))) ORDER BY CAST(((t0.c0)&(rt0.c2)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE RTRIM)OR((((t1.c0))<((t0.c0))))))OR(HEX(DISTINCT NULL))))OR(IFNULL(DISTINCT t0.c0, rt0.c2))))OR(((x'') IS TRUE)))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY CAST(((t0.c0)&(rt0.c2)) AS BLOB) DESC);
SELECT * FROM t0, rt0, t1 WHERE (((((((((rt0.c0 COLLATE RTRIM)OR((((t1.c0))<((t0.c0))))))OR(HEX(DISTINCT NULL))))OR(IFNULL(DISTINCT t0.c0, rt0.c2))))OR(((x'') IS TRUE)))) ORDER BY CAST(((t0.c0)&(rt0.c2)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE RTRIM)OR((((t1.c0))<((t0.c0))))))OR(HEX(DISTINCT NULL))))OR(IFNULL(DISTINCT t0.c0, rt0.c2))))OR(((x'') IS TRUE)))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY CAST(((t0.c0)&(rt0.c2)) AS BLOB) DESC);
SELECT * FROM t0, rt0, t1 WHERE (((((((((rt0.c0 COLLATE RTRIM)OR((((t1.c0))<((t0.c0))))))OR(HEX(DISTINCT NULL))))OR(IFNULL(DISTINCT t0.c0, rt0.c2))))OR(((x'') IS TRUE)))) ORDER BY CAST(((t0.c0)&(rt0.c2)) AS BLOB) DESC;
SELECT * FROM t1, t0, rt0 WHERE (((rt0.c0)==(x''))) ORDER BY (((CAST(t1.c0 AS REAL)))>=((((((0.08997834349218936)AND(rt0.c0)))AND(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)=(x''))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY (((CAST(t1.c0 AS REAL)))>=((((((0.08997834349218936)AND(rt0.c0)))AND(rt0.c2)))))  NULLS FIRST);
SELECT * FROM t1, t0, rt0 WHERE (((rt0.c0)==(x''))) ORDER BY (((CAST(t1.c0 AS REAL)))>=((((((0.08997834349218936)AND(rt0.c0)))AND(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)=(x''))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY (((CAST(t1.c0 AS REAL)))>=((((((0.08997834349218936)AND(rt0.c0)))AND(rt0.c2)))))  NULLS FIRST);
SELECT * FROM t1, t0, rt0 WHERE (((rt0.c0)==(x''))) ORDER BY (((CAST(t1.c0 AS REAL)))>=((((((0.08997834349218936)AND(rt0.c0)))AND(rt0.c2)))))  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (rt0.c2) ORDER BY (~ (CAST(t1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY (~ (CAST(t1.c0 AS TEXT)))  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (rt0.c2) ORDER BY (~ (CAST(t1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY (~ (CAST(t1.c0 AS TEXT)))  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (rt0.c2) ORDER BY (~ (CAST(t1.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM t0, rt0, t1 WHERE ((~ ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE ((~ ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE ((~ ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER))));
SELECT * FROM t0, rt0 WHERE (IFNULL(CASE rt0.c2  WHEN 0.645636574084054 THEN rt0.c0 WHEN 0.9584761951815168 THEN '0.6995454908157482' WHEN t0.c0 THEN rt0.c2 ELSE x'' END, (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE rt0.c2  WHEN 0.645636574084054 THEN rt0.c0 WHEN 0.9584761951815168 THEN '0.6995454908157482' WHEN t0.c0 THEN rt0.c2 ELSE x'' END, (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (IFNULL(CASE rt0.c2  WHEN 0.645636574084054 THEN rt0.c0 WHEN 0.9584761951815168 THEN '0.6995454908157482' WHEN t0.c0 THEN rt0.c2 ELSE x'' END, (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE rt0.c2  WHEN 0.645636574084054 THEN rt0.c0 WHEN 0.9584761951815168 THEN '0.6995454908157482' WHEN t0.c0 THEN rt0.c2 ELSE x'' END, (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (IFNULL(CASE rt0.c2  WHEN 0.645636574084054 THEN rt0.c0 WHEN 0.9584761951815168 THEN '0.6995454908157482' WHEN t0.c0 THEN rt0.c2 ELSE x'' END, (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON (((((t0.c0)OR(rt0.c2)))OR(t1.c0)) IN (((NULL)/(t0.c0)))) INNER JOIN t0 ON ((((((((((((((t0.c0) IS TRUE))AND(((rt0.c0)-(rt0.c2)))))OR(((t0.c0)==(rt0.c0)))))AND(((x'') BETWEEN (t0.c0) AND (rt0.c2)))))OR((- (t1.c0)))))AND(CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)))AND(((t1.c0) IS TRUE))) WHERE (CAST((((t0.c0, rt0.c1, 1954445588)) NOT BETWEEN ((1.703403657E9, t1.c0, rt0.c1)) AND ((t0.c0, 0.3624826045051137, rt0.c1))) AS REAL)) ORDER BY ((((rt0.c0)AND(rt0.c2)))OR(0.254641410455106)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, rt0.c1, 1954445588)) NOT BETWEEN ((1.703403657E9, t1.c0, rt0.c1)) AND ((t0.c0, 0.3624826045051137, rt0.c1))) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((t0.c0)OR(rt0.c2)))OR(t1.c0)) IN (((NULL)/(t0.c0)))) INNER JOIN t0 ON ((((((((((((((t0.c0) IS TRUE))AND(((rt0.c0)-(rt0.c2)))))OR(((t0.c0)=(rt0.c0)))))AND(((x'') BETWEEN (t0.c0) AND (rt0.c2)))))OR((- (t1.c0)))))AND(CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)))AND(((t1.c0) IS TRUE))) ORDER BY ((((rt0.c0)AND(rt0.c2)))OR(0.254641410455106)) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON (((((t0.c0)OR(rt0.c2)))OR(t1.c0)) IN (((NULL)/(t0.c0)))) INNER JOIN t0 ON ((((((((((((((t0.c0) IS TRUE))AND(((rt0.c0)-(rt0.c2)))))OR(((t0.c0)==(rt0.c0)))))AND(((x'') BETWEEN (t0.c0) AND (rt0.c2)))))OR((- (t1.c0)))))AND(CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)))AND(((t1.c0) IS TRUE))) WHERE (CAST((((t0.c0, rt0.c1, 1954445588)) NOT BETWEEN ((1.703403657E9, t1.c0, rt0.c1)) AND ((t0.c0, 0.3624826045051137, rt0.c1))) AS REAL)) ORDER BY ((((rt0.c0)AND(rt0.c2)))OR(0.254641410455106)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, rt0.c1, 1954445588)) NOT BETWEEN ((1.703403657E9, t1.c0, rt0.c1)) AND ((t0.c0, 0.3624826045051137, rt0.c1))) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((t0.c0)OR(rt0.c2)))OR(t1.c0)) IN (((NULL)/(t0.c0)))) INNER JOIN t0 ON ((((((((((((((t0.c0) IS TRUE))AND(((rt0.c0)-(rt0.c2)))))OR(((t0.c0)=(rt0.c0)))))AND(((x'') BETWEEN (t0.c0) AND (rt0.c2)))))OR((- (t1.c0)))))AND(CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)))AND(((t1.c0) IS TRUE))) ORDER BY ((((rt0.c0)AND(rt0.c2)))OR(0.254641410455106)) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON (((((t0.c0)OR(rt0.c2)))OR(t1.c0)) IN (((NULL)/(t0.c0)))) INNER JOIN t0 ON ((((((((((((((t0.c0) IS TRUE))AND(((rt0.c0)-(rt0.c2)))))OR(((t0.c0)==(rt0.c0)))))AND(((x'') BETWEEN (t0.c0) AND (rt0.c2)))))OR((- (t1.c0)))))AND(CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)))AND(((t1.c0) IS TRUE))) WHERE (CAST((((t0.c0, rt0.c1, 1954445588)) NOT BETWEEN ((1.703403657E9, t1.c0, rt0.c1)) AND ((t0.c0, 0.3624826045051137, rt0.c1))) AS REAL)) ORDER BY ((((rt0.c0)AND(rt0.c2)))OR(0.254641410455106)) ASC;
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0)>(t1.c0))))) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND ('hs')) AS REAL)  NULLS LAST, ((((((((t1.c0)AND('縜읮<0')))OR(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) ISNULL))) ASC, (((('-1253006945')AND(('284339353' IN ()))))OR(t1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c0)>(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND ('hs')) AS REAL)  NULLS LAST, ((((((((t1.c0)AND('縜읮<0')))OR(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) ISNULL))) ASC, (((('-1253006945')AND(('284339353' IN ()))))OR(t1.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0)>(t1.c0))))) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND ('hs')) AS REAL)  NULLS LAST, ((((((((t1.c0)AND('縜읮<0')))OR(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) ISNULL))) ASC, (((('-1253006945')AND(('284339353' IN ()))))OR(t1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c0)>(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND ('hs')) AS REAL)  NULLS LAST, ((((((((t1.c0)AND('縜읮<0')))OR(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) ISNULL))) ASC, (((('-1253006945')AND(('284339353' IN ()))))OR(t1.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0)>(t1.c0))))) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND ('hs')) AS REAL)  NULLS LAST, ((((((((t1.c0)AND('縜읮<0')))OR(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) ISNULL))) ASC, (((('-1253006945')AND(('284339353' IN ()))))OR(t1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (0.7621483118178117);
SELECT SUM(count) FROM (SELECT ALL ((0.7621483118178117) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (0.7621483118178117);
SELECT SUM(count) FROM (SELECT ALL ((0.7621483118178117) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE (0.7621483118178117);
SELECT ALL * FROM t0 CROSS JOIN t1 ON ((LIKELIHOOD(DISTINCT t0.c0, 0.13070824023576355))LIKE((((rt0.c0))!=((t1.c0))))) INNER JOIN rt0 ON CASE (((t0.c0))>=((rt0.c1)))  WHEN t1.c0 THEN (t0.c0 IN ()) END WHERE (HEX(DISTINCT IFNULL(rt0.c0, ' ')));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT IFNULL(rt0.c0, ' '))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON ((LIKELIHOOD(DISTINCT t0.c0, 0.13070824023576355))LIKE((((rt0.c0))<>((t1.c0))))) INNER JOIN rt0 ON CASE (((t0.c0))>=((rt0.c1)))  WHEN t1.c0 THEN (t0.c0 IN ()) END);
SELECT ALL * FROM t0 CROSS JOIN t1 ON ((LIKELIHOOD(DISTINCT t0.c0, 0.13070824023576355))LIKE((((rt0.c0))!=((t1.c0))))) INNER JOIN rt0 ON CASE (((t0.c0))>=((rt0.c1)))  WHEN t1.c0 THEN (t0.c0 IN ()) END WHERE (HEX(DISTINCT IFNULL(rt0.c0, ' ')));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT IFNULL(rt0.c0, ' '))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON ((LIKELIHOOD(DISTINCT t0.c0, 0.13070824023576355))LIKE((((rt0.c0))<>((t1.c0))))) INNER JOIN rt0 ON CASE (((t0.c0))>=((rt0.c1)))  WHEN t1.c0 THEN (t0.c0 IN ()) END);
SELECT ALL * FROM t0 CROSS JOIN t1 ON ((LIKELIHOOD(DISTINCT t0.c0, 0.13070824023576355))LIKE((((rt0.c0))!=((t1.c0))))) INNER JOIN rt0 ON CASE (((t0.c0))>=((rt0.c1)))  WHEN t1.c0 THEN (t0.c0 IN ()) END WHERE (HEX(DISTINCT IFNULL(rt0.c0, ' ')));
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((NULLIF(rt0.c2, t1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c1))) ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(((rt0.c2)OR(0.028582897605572866)))))AND(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c2, t1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c1))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(((rt0.c2)OR(0.028582897605572866)))))AND(rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((NULLIF(rt0.c2, t1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c1))) ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(((rt0.c2)OR(0.028582897605572866)))))AND(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c2, t1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c1))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(((rt0.c2)OR(0.028582897605572866)))))AND(rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((NULLIF(rt0.c2, t1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c1))) ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(((rt0.c2)OR(0.028582897605572866)))))AND(rt0.c2))  NULLS FIRST;
SELECT * FROM t1, rt0, t0 WHERE ('') ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1, rt0, t0 ORDER BY TOTAL_CHANGES());
SELECT * FROM t1, rt0, t0 WHERE ('') ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1, rt0, t0 ORDER BY TOTAL_CHANGES());
SELECT * FROM t1, rt0, t0 WHERE ('') ORDER BY TOTAL_CHANGES();
SELECT ALL * FROM t1, t0 WHERE ((((t1.c0))>=(((t1.c0 IN ()))))) ORDER BY 0.8410457775168262 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0))>=(((t1.c0 IN ()))))) IS TRUE)  as count FROM t1, t0 ORDER BY 0.8410457775168262 COLLATE NOCASE DESC);
SELECT ALL * FROM t1, t0 WHERE ((((t1.c0))>=(((t1.c0 IN ()))))) ORDER BY 0.8410457775168262 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0))>=(((t1.c0 IN ()))))) IS TRUE)  as count FROM t1, t0 ORDER BY 0.8410457775168262 COLLATE NOCASE DESC);
SELECT ALL * FROM t1, t0 WHERE ((((t1.c0))>=(((t1.c0 IN ()))))) ORDER BY 0.8410457775168262 COLLATE NOCASE DESC;
SELECT * FROM t1, t0 WHERE (t0.c0) ORDER BY ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1, t0 ORDER BY ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) COLLATE RTRIM DESC);
SELECT * FROM t1, t0 WHERE (t0.c0) ORDER BY ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1, t0 ORDER BY ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) COLLATE RTRIM DESC);
SELECT * FROM t1, t0 WHERE (t0.c0) ORDER BY ((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) COLLATE RTRIM DESC;
SELECT * FROM t0, t1 WHERE ('-36596742');
SELECT SUM(count) FROM (SELECT (('-36596742') IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE ('-36596742');
SELECT SUM(count) FROM (SELECT (('-36596742') IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE ('-36596742');
SELECT ALL * FROM t0, t1, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0) IS FALSE) END) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN x'' THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 END) AND (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0) IS FALSE) END) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN x'' THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 END) AND (CAST(rt0.c1 AS NUMERIC))) ASC);
SELECT ALL * FROM t0, t1, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0) IS FALSE) END) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN x'' THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 END) AND (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0) IS FALSE) END) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN x'' THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 END) AND (CAST(rt0.c1 AS NUMERIC))) ASC);
SELECT ALL * FROM t0, t1, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0) IS FALSE) END) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN x'' THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 END) AND (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT ALL * FROM t0, t1 WHERE ((NOT ((((t1.c0))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t1.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE ((NOT ((((t1.c0))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t1.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE ((NOT ((((t1.c0))>=((t0.c0))))));
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((CAST(rt0.c2 AS REAL))-(((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))-(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((CAST(rt0.c2 AS REAL))-(((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))-(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((CAST(rt0.c2 AS REAL))-(((t1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM t1, rt0 WHERE (((t1.c0) IS TRUE)) ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE, (((- (rt0.c0)))*(((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS TRUE)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE, (((- (rt0.c0)))*(((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM t1, rt0 WHERE (((t1.c0) IS TRUE)) ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE, (((- (rt0.c0)))*(((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS TRUE)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE, (((- (rt0.c0)))*(((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM t1, rt0 WHERE (((t1.c0) IS TRUE)) ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE, (((- (rt0.c0)))*(((rt0.c2) IS FALSE)));
SELECT ALL * FROM rt0, t0 CROSS JOIN t1 ON CASE WHEN rt0.c2 THEN IFNULL(t0.c0, rt0.c1) ELSE (((rt0.c1))!=((rt0.c0))) END WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c0)&(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c0)&(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 CROSS JOIN t1 ON CASE WHEN rt0.c2 THEN IFNULL(t0.c0, rt0.c1) ELSE (((rt0.c1))!=((rt0.c0))) END);
SELECT ALL * FROM rt0, t0 CROSS JOIN t1 ON CASE WHEN rt0.c2 THEN IFNULL(t0.c0, rt0.c1) ELSE (((rt0.c1))!=((rt0.c0))) END WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c0)&(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c0)&(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 CROSS JOIN t1 ON CASE WHEN rt0.c2 THEN IFNULL(t0.c0, rt0.c1) ELSE (((rt0.c1))!=((rt0.c0))) END);
SELECT ALL * FROM rt0, t0 CROSS JOIN t1 ON CASE WHEN rt0.c2 THEN IFNULL(t0.c0, rt0.c1) ELSE (((rt0.c1))!=((rt0.c0))) END WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c0)&(rt0.c2)) END);
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN t0 ON json_type((- (t1.c0))) WHERE (((((((rt0.c2)<=(t0.c0)))OR(UPPER(rt0.c2))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<=(t0.c0)))OR(UPPER(rt0.c2))))AND(rt0.c2))) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN t0 ON json_type((- (t1.c0))));
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN t0 ON json_type((- (t1.c0))) WHERE (((((((rt0.c2)<=(t0.c0)))OR(UPPER(rt0.c2))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<=(t0.c0)))OR(UPPER(rt0.c2))))AND(rt0.c2))) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN t0 ON json_type((- (t1.c0))));
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN t0 ON json_type((- (t1.c0))) WHERE (((((((rt0.c2)<=(t0.c0)))OR(UPPER(rt0.c2))))AND(rt0.c2)));
SELECT ALL COUNT(*) FROM t1 WHERE (json_patch(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, ((t1.c0)OR('ᵙI\p'))));
SELECT SUM(count) FROM (SELECT ((json_patch(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, ((t1.c0)OR('ᵙI\p')))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (json_patch(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, ((t1.c0)OR('ᵙI\p'))));
SELECT SUM(count) FROM (SELECT ((json_patch(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, ((t1.c0)OR('ᵙI\p')))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((- ((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((- ((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((- ((NOT (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((t0.c0)GLOB(t0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)GLOB(t0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((t0.c0)GLOB(t0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)GLOB(t0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((t0.c0)GLOB(t0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))==(((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))=(((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))==(((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))=(((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))==(((rt0.c2 IN ())))));
SELECT ALL * FROM t1, rt0 WHERE (0.03469593946655958) ORDER BY (((((rt0.c2 IN (rt0.c1)))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(rt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((0.03469593946655958) IS TRUE)  as count FROM t1, rt0 ORDER BY (((((rt0.c2 IN (rt0.c1)))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(rt0.c1 COLLATE NOCASE)) DESC);
SELECT ALL * FROM t1, rt0 WHERE (0.03469593946655958) ORDER BY (((((rt0.c2 IN (rt0.c1)))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(rt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((0.03469593946655958) IS TRUE)  as count FROM t1, rt0 ORDER BY (((((rt0.c2 IN (rt0.c1)))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(rt0.c1 COLLATE NOCASE)) DESC);
SELECT ALL * FROM t1, rt0 WHERE (0.03469593946655958) ORDER BY (((((rt0.c2 IN (rt0.c1)))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))))AND(rt0.c1 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((NOT (((rt0.c0) IS FALSE)))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY t1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((NOT (((rt0.c0) IS FALSE)))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY t1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((NOT (((rt0.c0) IS FALSE)))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.8563315977273679))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.8563315977273679))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.8563315977273679))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.8563315977273679))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.8563315977273679))) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (rt0.c0))) ORDER BY ((((-1.23905443E8)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST, (((((rt0.c2))>=((rt0.c1))))!=(((NULL) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((-1.23905443E8)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST, (((((rt0.c2))>=((rt0.c1))))!=(((NULL) NOTNULL))) ASC);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (rt0.c0))) ORDER BY ((((-1.23905443E8)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST, (((((rt0.c2))>=((rt0.c1))))!=(((NULL) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((-1.23905443E8)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST, (((((rt0.c2))>=((rt0.c1))))!=(((NULL) NOTNULL))) ASC);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (rt0.c0))) ORDER BY ((((-1.23905443E8)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST, (((((rt0.c2))>=((rt0.c1))))!=(((NULL) NOTNULL))) ASC;
SELECT ALL * FROM t1, rt0 WHERE ((NOT ((((rt0.c0))>((rt0.c1)))))) ORDER BY CASE WHEN (+ ('0.2021731953569429')) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.47571225615225143)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0))>((rt0.c1)))))) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN (+ ('0.2021731953569429')) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.47571225615225143)) END);
SELECT ALL * FROM t1, rt0 WHERE ((NOT ((((rt0.c0))>((rt0.c1)))))) ORDER BY CASE WHEN (+ ('0.2021731953569429')) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.47571225615225143)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0))>((rt0.c1)))))) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN (+ ('0.2021731953569429')) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.47571225615225143)) END);
SELECT ALL * FROM t1, rt0 WHERE ((NOT ((((rt0.c0))>((rt0.c1)))))) ORDER BY CASE WHEN (+ ('0.2021731953569429')) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.47571225615225143)) END;
SELECT ALL * FROM rt0, t1, t0 WHERE (json_patch(rt0.c2, (((rt0.c0, rt0.c1, t0.c0, rt0.c0, rt0.c1))>((rt0.c2, NULL, rt0.c0, rt0.c2, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_patch(rt0.c2, (((rt0.c0, rt0.c1, t0.c0, rt0.c0, rt0.c1))>((rt0.c2, NULL, rt0.c0, rt0.c2, t0.c0))))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0, t1, t0 WHERE (json_patch(rt0.c2, (((rt0.c0, rt0.c1, t0.c0, rt0.c0, rt0.c1))>((rt0.c2, NULL, rt0.c0, rt0.c2, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_patch(rt0.c2, (((rt0.c0, rt0.c1, t0.c0, rt0.c0, rt0.c1))>((rt0.c2, NULL, rt0.c0, rt0.c2, t0.c0))))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0, t1, t0 WHERE (json_patch(rt0.c2, (((rt0.c0, rt0.c1, t0.c0, rt0.c0, rt0.c1))>((rt0.c2, NULL, rt0.c0, rt0.c2, t0.c0)))));
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c1) ISNULL))OR((rt0.c0 IN ()))))OR(((rt0.c2)||(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))OR((rt0.c0 IN ()))))OR(((rt0.c2)||(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c1) ISNULL))OR((rt0.c0 IN ()))))OR(((rt0.c2)||(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))OR((rt0.c0 IN ()))))OR(((rt0.c2)||(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c1) ISNULL))OR((rt0.c0 IN ()))))OR(((rt0.c2)||(rt0.c1)))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON '430252283' INNER JOIN t0 ON (((rt0.c2, rt0.c0, 'Ux3]9O2嚼')) BETWEEN (('-714159049', ((rt0.c1)GLOB(rt0.c0)), ((rt0.c1)OR(rt0.c0)))) AND ((CAST(NULL AS NUMERIC), (((t1.c0))>((t1.c0))), IFNULL(DISTINCT t0.c0, t1.c0)))) WHERE (rt0.c1) ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE  NULLS FIRST, CAST(((t1.c0)!=(rt0.c0)) AS TEXT) ASC, (((NOT (rt0.c0)))==((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON '430252283' INNER JOIN t0 ON (((rt0.c2, rt0.c0, 'Ux3]9O2嚼')) BETWEEN (('-714159049', ((rt0.c1)GLOB(rt0.c0)), ((rt0.c1)OR(rt0.c0)))) AND ((CAST(NULL AS NUMERIC), (((t1.c0))>((t1.c0))), IFNULL(DISTINCT t0.c0, t1.c0)))) ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE  NULLS FIRST, CAST(((t1.c0)!=(rt0.c0)) AS TEXT) ASC, (((NOT (rt0.c0)))=((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON '430252283' INNER JOIN t0 ON (((rt0.c2, rt0.c0, 'Ux3]9O2嚼')) BETWEEN (('-714159049', ((rt0.c1)GLOB(rt0.c0)), ((rt0.c1)OR(rt0.c0)))) AND ((CAST(NULL AS NUMERIC), (((t1.c0))>((t1.c0))), IFNULL(DISTINCT t0.c0, t1.c0)))) WHERE (rt0.c1) ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE  NULLS FIRST, CAST(((t1.c0)!=(rt0.c0)) AS TEXT) ASC, (((NOT (rt0.c0)))==((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON '430252283' INNER JOIN t0 ON (((rt0.c2, rt0.c0, 'Ux3]9O2嚼')) BETWEEN (('-714159049', ((rt0.c1)GLOB(rt0.c0)), ((rt0.c1)OR(rt0.c0)))) AND ((CAST(NULL AS NUMERIC), (((t1.c0))>((t1.c0))), IFNULL(DISTINCT t0.c0, t1.c0)))) ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE  NULLS FIRST, CAST(((t1.c0)!=(rt0.c0)) AS TEXT) ASC, (((NOT (rt0.c0)))=((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON '430252283' INNER JOIN t0 ON (((rt0.c2, rt0.c0, 'Ux3]9O2嚼')) BETWEEN (('-714159049', ((rt0.c1)GLOB(rt0.c0)), ((rt0.c1)OR(rt0.c0)))) AND ((CAST(NULL AS NUMERIC), (((t1.c0))>((t1.c0))), IFNULL(DISTINCT t0.c0, t1.c0)))) WHERE (rt0.c1) ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE  NULLS FIRST, CAST(((t1.c0)!=(rt0.c0)) AS TEXT) ASC, (((NOT (rt0.c0)))==((rt0.c0 IN ()))) ASC;
SELECT * FROM t1 WHERE (CAST('0.9142404573606079' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('0.9142404573606079' AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST('0.9142404573606079' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('0.9142404573606079' AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST('0.9142404573606079' AS BLOB));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT NULL))=(CAST(rt0.c2 AS BLOB))) WHERE ((((rt0.c0 IN (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (t1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT NULL))==(CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT NULL))=(CAST(rt0.c2 AS BLOB))) WHERE ((((rt0.c0 IN (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (t1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT NULL))==(CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT NULL))=(CAST(rt0.c2 AS BLOB))) WHERE ((((rt0.c0 IN (t1.c0))) NOTNULL));
SELECT * FROM t0 NOT INDEXED LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN ((t1.c0)<(rt0.c0)) THEN (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, t0.c0)) AND ((t1.c0, t1.c0, t0.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ABS(DISTINCT rt0.c2) THEN ((x'd4e5') NOT BETWEEN (rt0.c1) AND (rt0.c1)) END FULL OUTER JOIN t1 ON (((rt0.c1, t1.c0, t0.c0)) BETWEEN (((('')AND(rt0.c2)), CASE NULL  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END, ((rt0.c1)==(0X423e0bc4)))) AND ((((0.3739371742110712) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (0Xffffffffba594acc) AND (t1.c0)), ((rt0.c0) NOT NULL)))) WHERE (((rt0.c1)/(x'87fb')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(x'87fb')) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN ((t1.c0)<(rt0.c0)) THEN (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, t0.c0)) AND ((t1.c0, t1.c0, t0.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ABS(DISTINCT rt0.c2) THEN ((x'd4e5') NOT BETWEEN (rt0.c1) AND (rt0.c1)) END FULL OUTER JOIN t1 ON (((rt0.c1, t1.c0, t0.c0)) BETWEEN (((('')AND(rt0.c2)), CASE NULL  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END, ((rt0.c1)==(0x423e0bc4)))) AND ((((0.3739371742110712) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (0xffffffffba594acc) AND (t1.c0)), ((rt0.c0) NOT NULL)))));
SELECT * FROM t0 NOT INDEXED LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN ((t1.c0)<(rt0.c0)) THEN (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, t0.c0)) AND ((t1.c0, t1.c0, t0.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ABS(DISTINCT rt0.c2) THEN ((x'd4e5') NOT BETWEEN (rt0.c1) AND (rt0.c1)) END FULL OUTER JOIN t1 ON (((rt0.c1, t1.c0, t0.c0)) BETWEEN (((('')AND(rt0.c2)), CASE NULL  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END, ((rt0.c1)==(0X423e0bc4)))) AND ((((0.3739371742110712) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (0Xffffffffba594acc) AND (t1.c0)), ((rt0.c0) NOT NULL)))) WHERE (((rt0.c1)/(x'87fb')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(x'87fb')) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN ((t1.c0)<(rt0.c0)) THEN (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, t0.c0)) AND ((t1.c0, t1.c0, t0.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ABS(DISTINCT rt0.c2) THEN ((x'd4e5') NOT BETWEEN (rt0.c1) AND (rt0.c1)) END FULL OUTER JOIN t1 ON (((rt0.c1, t1.c0, t0.c0)) BETWEEN (((('')AND(rt0.c2)), CASE NULL  WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END, ((rt0.c1)==(0x423e0bc4)))) AND ((((0.3739371742110712) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (0xffffffffba594acc) AND (t1.c0)), ((rt0.c0) NOT NULL)))));
SELECT * FROM rt0, t1, t0 WHERE ((((t0.c0)%(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0)%(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE ((((t0.c0)%(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0)%(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0, t1, t0 WHERE ((((t0.c0)%(rt0.c0)) IN ()));
SELECT * FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(t0.c0)))OR(COALESCE(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(t0.c0)))OR(COALESCE(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(t0.c0)))OR(COALESCE(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(t0.c0)))OR(COALESCE(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(t0.c0)))OR(COALESCE(t0.c0, t0.c0))));
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (IFNULL(rt0.c2, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ORDER BY ((CAST(t0.c0 AS BLOB))>=((((rt0.c2)) BETWEEN ((t1.c0)) AND ((t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c2, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((CAST(t0.c0 AS BLOB))>=((((rt0.c2)) BETWEEN ((t1.c0)) AND ((t0.c0))))) ASC);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (IFNULL(rt0.c2, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ORDER BY ((CAST(t0.c0 AS BLOB))>=((((rt0.c2)) BETWEEN ((t1.c0)) AND ((t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c2, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((CAST(t0.c0 AS BLOB))>=((((rt0.c2)) BETWEEN ((t1.c0)) AND ((t0.c0))))) ASC);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (IFNULL(rt0.c2, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ORDER BY ((CAST(t0.c0 AS BLOB))>=((((rt0.c2)) BETWEEN ((t1.c0)) AND ((t0.c0))))) ASC;
SELECT * FROM rt0 INDEXED BY i91, t1 WHERE ((((rt0.c1)) BETWEEN (((- (t1.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((- (t1.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 INDEXED BY i91, t1);
SELECT * FROM rt0 INDEXED BY i91, t1 WHERE ((((rt0.c1)) BETWEEN (((- (t1.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((- (t1.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 INDEXED BY i91, t1);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (((rt0.c2)<=(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<=(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (((rt0.c2)<=(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<=(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (((rt0.c2)<=(t0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON (((rt0.c1)=(rt0.c0)) IN ()) WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((rt0.c1)=(rt0.c0)) IN ()) ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON (((rt0.c1)=(rt0.c0)) IN ()) WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((rt0.c1)=(rt0.c0)) IN ()) ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON (((rt0.c1)=(rt0.c0)) IN ()) WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (0.8633637573816123 COLLATE RTRIM) AND (rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)*(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (0.8633637573816123 COLLATE RTRIM) AND (rt0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (0.8633637573816123 COLLATE RTRIM) AND (rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)*(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (0.8633637573816123 COLLATE RTRIM) AND (rt0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (0.8633637573816123 COLLATE RTRIM) AND (rt0.c1)) DESC  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c1 IN ()))AND((~ (rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (t1.c0) AND (-9.79355231E8)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND((~ (rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (t1.c0) AND (-9.79355231E8))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c1 IN ()))AND((~ (rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (t1.c0) AND (-9.79355231E8)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND((~ (rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (t1.c0) AND (-9.79355231E8))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c1 IN ()))AND((~ (rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (t1.c0) AND (-9.79355231E8)))));
SELECT COUNT(*) FROM t1, t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) BETWEEN ((((t0.c0) IS TRUE), ((t1.c0) IS FALSE), (((t0.c0, t0.c0, t1.c0))=((t1.c0, x'', t1.c0))), TRIM(t1.c0, t1.c0), (NOT (t1.c0)))) AND ((((t1.c0) NOTNULL), '\ntA굃bDx[j', COALESCE(t1.c0, t0.c0), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) ORDER BY (((t0.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) BETWEEN ((((t0.c0) IS TRUE), ((t1.c0) IS FALSE), (((t0.c0, t0.c0, t1.c0))=((t1.c0, x'', t1.c0))), TRIM(t1.c0, t1.c0), (NOT (t1.c0)))) AND ((((t1.c0) NOTNULL), '\ntA굃bDx[j', COALESCE(t1.c0, t0.c0), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) IS TRUE)  as count FROM t1, t0 ORDER BY (((t0.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1, t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) BETWEEN ((((t0.c0) IS TRUE), ((t1.c0) IS FALSE), (((t0.c0, t0.c0, t1.c0))=((t1.c0, x'', t1.c0))), TRIM(t1.c0, t1.c0), (NOT (t1.c0)))) AND ((((t1.c0) NOTNULL), '\ntA굃bDx[j', COALESCE(t1.c0, t0.c0), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) ORDER BY (((t0.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) BETWEEN ((((t0.c0) IS TRUE), ((t1.c0) IS FALSE), (((t0.c0, t0.c0, t1.c0))=((t1.c0, x'', t1.c0))), TRIM(t1.c0, t1.c0), (NOT (t1.c0)))) AND ((((t1.c0) NOTNULL), '\ntA굃bDx[j', COALESCE(t1.c0, t0.c0), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) IS TRUE)  as count FROM t1, t0 ORDER BY (((t0.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1, t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) BETWEEN ((((t0.c0) IS TRUE), ((t1.c0) IS FALSE), (((t0.c0, t0.c0, t1.c0))=((t1.c0, x'', t1.c0))), TRIM(t1.c0, t1.c0), (NOT (t1.c0)))) AND ((((t1.c0) NOTNULL), '\ntA굃bDx[j', COALESCE(t1.c0, t0.c0), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) ORDER BY (((t0.c0 IN ())) NOTNULL);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT NULL)) ORDER BY t1.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c0 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT NULL)) ORDER BY t1.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c0 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT NULL)) ORDER BY t1.c0 COLLATE NOCASE DESC;
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (((t0.c0)%(0.8232056307661985))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((rt0.c1)-(t0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (+ (t0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (((t0.c0)%(0.8232056307661985))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1)-(t0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (+ (t0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END);
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (((t0.c0)%(0.8232056307661985))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((rt0.c1)-(t0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (+ (t0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (((t0.c0)%(0.8232056307661985))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1)-(t0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (+ (t0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END);
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (((t0.c0)%(0.8232056307661985))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((rt0.c1)-(t0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (+ (t0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END;
SELECT COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((354126175)IS((((0.8879029143317769)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((354126175)IS((((0.8879029143317769)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((354126175)IS((((0.8879029143317769)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((354126175)IS((((0.8879029143317769)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((354126175)IS((((0.8879029143317769)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT ALL * FROM rt0, t0, t1 WHERE ((- ((t1.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL * FROM rt0, t0, t1 WHERE ((- ((t1.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL * FROM rt0, t0, t1 WHERE ((- ((t1.c0 IN (rt0.c0)))));
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE rt0.c1 END) NOT NULL) CROSS JOIN t0 ON LOWER(rt0.c0) COLLATE NOCASE WHERE (CASE WHEN CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2)AND(t0.c0)) ELSE ((rt0.c1)<<(x'e43e')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2)AND(t0.c0)) ELSE ((rt0.c1)<<(x'e43e')) END) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE rt0.c1 END) NOT NULL) CROSS JOIN t0 ON LOWER(rt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE rt0.c1 END) NOT NULL) CROSS JOIN t0 ON LOWER(rt0.c0) COLLATE NOCASE WHERE (CASE WHEN CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2)AND(t0.c0)) ELSE ((rt0.c1)<<(x'e43e')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2)AND(t0.c0)) ELSE ((rt0.c1)<<(x'e43e')) END) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE rt0.c1 END) NOT NULL) CROSS JOIN t0 ON LOWER(rt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE rt0.c1 END) NOT NULL) CROSS JOIN t0 ON LOWER(rt0.c0) COLLATE NOCASE WHERE (CASE WHEN CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2)AND(t0.c0)) ELSE ((rt0.c1)<<(x'e43e')) END);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (rt0.c2);
SELECT * FROM rt0, t1, t0 WHERE (NULLIF(rt0.c0, t0.c0) COLLATE RTRIM) ORDER BY CAST(((((t0.c0)AND(rt0.c0)))AND(rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c0, t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY CAST(((((t0.c0)AND(rt0.c0)))AND(rt0.c0)) AS INTEGER)  NULLS LAST);
SELECT * FROM rt0, t1, t0 WHERE (NULLIF(rt0.c0, t0.c0) COLLATE RTRIM) ORDER BY CAST(((((t0.c0)AND(rt0.c0)))AND(rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c0, t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY CAST(((((t0.c0)AND(rt0.c0)))AND(rt0.c0)) AS INTEGER)  NULLS LAST);
SELECT * FROM rt0, t1, t0 WHERE (NULLIF(rt0.c0, t0.c0) COLLATE RTRIM) ORDER BY CAST(((((t0.c0)AND(rt0.c0)))AND(rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT * FROM t1, rt0, t0 WHERE (0.6565031117116469 COLLATE RTRIM) ORDER BY (((+ (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c0)) AND (rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6565031117116469 COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (((+ (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c0)) AND (rt0.c0)) DESC  NULLS FIRST);
SELECT * FROM t1, rt0, t0 WHERE (0.6565031117116469 COLLATE RTRIM) ORDER BY (((+ (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c0)) AND (rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6565031117116469 COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (((+ (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c0)) AND (rt0.c0)) DESC  NULLS FIRST);
SELECT * FROM t1, rt0, t0 WHERE (0.6565031117116469 COLLATE RTRIM) ORDER BY (((+ (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c0)) AND (rt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CHANGES()) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL)))) ORDER BY ((((((rt0.c2)<=(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHANGES()) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)<=(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CHANGES()) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL)))) ORDER BY ((((((rt0.c2)<=(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHANGES()) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)<=(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CHANGES()) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL)))) ORDER BY ((((((rt0.c2)<=(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT ALL * FROM t1, rt0, t0 WHERE (((((t0.c0)AND(rt0.c1))) BETWEEN (((t1.c0) BETWEEN ('14125897') AND (t0.c0))) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(rt0.c1))) BETWEEN (((t1.c0) BETWEEN ('14125897') AND (t0.c0))) AND (t1.c0))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT ALL * FROM t1, rt0, t0 WHERE (((((t0.c0)AND(rt0.c1))) BETWEEN (((t1.c0) BETWEEN ('14125897') AND (t0.c0))) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(rt0.c1))) BETWEEN (((t1.c0) BETWEEN ('14125897') AND (t0.c0))) AND (t1.c0))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT ALL * FROM t1, rt0, t0 WHERE (((((t0.c0)AND(rt0.c1))) BETWEEN (((t1.c0) BETWEEN ('14125897') AND (t0.c0))) AND (t1.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)GLOB(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)GLOB(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)GLOB(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)GLOB(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)GLOB(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t0, t1 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t1.c0))) ISNULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t1.c0))) ISNULL)) IS TRUE)  as count FROM t0, t1 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t1.c0))) ISNULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t1.c0))) ISNULL)) IS TRUE)  as count FROM t0, t1 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t1.c0))) ISNULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((t1.c0)IS(((((rt0.c1)OR(t1.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS(((((rt0.c1)OR(t1.c0)))OR(x''))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((t1.c0)IS(((((rt0.c1)OR(t1.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS(((((rt0.c1)OR(t1.c0)))OR(x''))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((t1.c0)IS(((((rt0.c1)OR(t1.c0)))OR(x'')))));
SELECT COUNT(*) FROM t0 WHERE ((((4.69843858E8))<=((0.32028101088699856)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((4.69843858E8))<=((0.32028101088699856)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS TEXT) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t0 WHERE ((((4.69843858E8))<=((0.32028101088699856)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((4.69843858E8))<=((0.32028101088699856)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS TEXT) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t0 WHERE ((((4.69843858E8))<=((0.32028101088699856)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOT NULL)))<=((rt0.c0)))) ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND ('')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT NULL)))<=((rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND ('')))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOT NULL)))<=((rt0.c0)))) ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND ('')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT NULL)))<=((rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND ('')))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOT NULL)))<=((rt0.c0)))) ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND ('')))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN t0 ON ((((((((DATE(rt0.c2, rt0.c1, rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(rt0.c2)))OR(t1.c0)))))OR(((NULL)!=(t1.c0)))))AND(CASE '-1472666616'  WHEN rt0.c0 THEN rt0.c1 END)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN t0 ON ((((((((DATE(rt0.c2, rt0.c1, rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(rt0.c2)))OR(t1.c0)))))OR(((NULL)<>(t1.c0)))))AND(CASE '-1472666616'  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN t0 ON ((((((((DATE(rt0.c2, rt0.c1, rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(rt0.c2)))OR(t1.c0)))))OR(((NULL)!=(t1.c0)))))AND(CASE '-1472666616'  WHEN rt0.c0 THEN rt0.c1 END)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN t0 ON ((((((((DATE(rt0.c2, rt0.c1, rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(rt0.c2)))OR(t1.c0)))))OR(((NULL)<>(t1.c0)))))AND(CASE '-1472666616'  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN t0 ON ((((((((DATE(rt0.c2, rt0.c1, rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(rt0.c2)))OR(t1.c0)))))OR(((NULL)!=(t1.c0)))))AND(CASE '-1472666616'  WHEN rt0.c0 THEN rt0.c1 END)) WHERE (rt0.c1);
SELECT ALL * FROM rt0, t1 WHERE (COALESCE(((rt0.c2)<=(rt0.c0)), (rt0.c0 IN ()))) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c2)<=(rt0.c0)), (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM rt0, t1 WHERE (COALESCE(((rt0.c2)<=(rt0.c0)), (rt0.c0 IN ()))) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c2)<=(rt0.c0)), (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM rt0, t1 WHERE (COALESCE(((rt0.c2)<=(rt0.c0)), (rt0.c0 IN ()))) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c0 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM t1, t0 RIGHT OUTER JOIN rt0 ON ((((NOT (t0.c0))))<(((rt0.c0 IN (rt0.c2, rt0.c2))))) WHERE (rt0.c0) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c0 END WHEN (((rt0.c2, rt0.c1, x''))<=((t1.c0, x'', rt0.c0))) THEN ((rt0.c2)IS(t1.c0)) WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN CASE WHEN NULL THEN 0.7563773741102464 ELSE rt0.c1 END ELSE x'' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1, t0 RIGHT OUTER JOIN rt0 ON ((((NOT (t0.c0))))<(((rt0.c0 IN (rt0.c2, rt0.c2))))) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c0 END WHEN (((rt0.c2, rt0.c1, x''))<=((t1.c0, x'', rt0.c0))) THEN ((rt0.c2)IS(t1.c0)) WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN CASE WHEN NULL THEN 0.7563773741102464 ELSE rt0.c1 END ELSE x'' END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, t0 RIGHT OUTER JOIN rt0 ON ((((NOT (t0.c0))))<(((rt0.c0 IN (rt0.c2, rt0.c2))))) WHERE (rt0.c0) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c0 END WHEN (((rt0.c2, rt0.c1, x''))<=((t1.c0, x'', rt0.c0))) THEN ((rt0.c2)IS(t1.c0)) WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN CASE WHEN NULL THEN 0.7563773741102464 ELSE rt0.c1 END ELSE x'' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1, t0 RIGHT OUTER JOIN rt0 ON ((((NOT (t0.c0))))<(((rt0.c0 IN (rt0.c2, rt0.c2))))) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c0 END WHEN (((rt0.c2, rt0.c1, x''))<=((t1.c0, x'', rt0.c0))) THEN ((rt0.c2)IS(t1.c0)) WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN CASE WHEN NULL THEN 0.7563773741102464 ELSE rt0.c1 END ELSE x'' END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, t0 RIGHT OUTER JOIN rt0 ON ((((NOT (t0.c0))))<(((rt0.c0 IN (rt0.c2, rt0.c2))))) WHERE (rt0.c0) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c0 END WHEN (((rt0.c2, rt0.c1, x''))<=((t1.c0, x'', rt0.c0))) THEN ((rt0.c2)IS(t1.c0)) WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN CASE WHEN NULL THEN 0.7563773741102464 ELSE rt0.c1 END ELSE x'' END DESC  NULLS FIRST;
SELECT * FROM t1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t1.c0)|(t0.c0))) AND (t1.c0))) ORDER BY CAST(t1.c0 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t1.c0)|(t0.c0))) AND (t1.c0))) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(t1.c0 AS REAL) ASC  NULLS LAST);
SELECT * FROM t1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t1.c0)|(t0.c0))) AND (t1.c0))) ORDER BY CAST(t1.c0 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t1.c0)|(t0.c0))) AND (t1.c0))) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(t1.c0 AS REAL) ASC  NULLS LAST);
SELECT * FROM t1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t1.c0)|(t0.c0))) AND (t1.c0))) ORDER BY CAST(t1.c0 AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (((NOT (t1.c0)) IN ())) ORDER BY (NOT (('72278013' IN ())))  NULLS FIRST, (+ (x'')) COLLATE BINARY, CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t1.c0)) IN ())) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY (NOT (('72278013' IN ())))  NULLS FIRST, (+ (x'')) COLLATE BINARY, CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (((NOT (t1.c0)) IN ())) ORDER BY (NOT (('72278013' IN ())))  NULLS FIRST, (+ (x'')) COLLATE BINARY, CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t1.c0)) IN ())) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY (NOT (('72278013' IN ())))  NULLS FIRST, (+ (x'')) COLLATE BINARY, CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (((NOT (t1.c0)) IN ())) ORDER BY (NOT (('72278013' IN ())))  NULLS FIRST, (+ (x'')) COLLATE BINARY, CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC;
SELECT ALL * FROM t0, rt0, t1 WHERE ((((((- ('[~')))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c0)IS NOT(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((- ('[~')))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE ((((((- ('[~')))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c0)IS NOT(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((- ('[~')))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE ((((((- ('[~')))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c0)IS NOT(t1.c0)))));
SELECT ALL * FROM t1 INNER JOIN t0 ON ((((json(t1.c0))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((0.939331119115436))))))OR(t0.c0 COLLATE NOCASE)) WHERE (NULLIF(DISTINCT ((t1.c0) NOT BETWEEN ('7.') AND (t1.c0)), ((t1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((t1.c0) NOT BETWEEN ('7.') AND (t1.c0)), ((t1.c0) IS FALSE))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((((json(t1.c0))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((0.939331119115436))))))OR(t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1 INNER JOIN t0 ON ((((json(t1.c0))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((0.939331119115436))))))OR(t0.c0 COLLATE NOCASE)) WHERE (NULLIF(DISTINCT ((t1.c0) NOT BETWEEN ('7.') AND (t1.c0)), ((t1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((t1.c0) NOT BETWEEN ('7.') AND (t1.c0)), ((t1.c0) IS FALSE))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((((json(t1.c0))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((0.939331119115436))))))OR(t0.c0 COLLATE NOCASE)));
SELECT * FROM t1, rt0 WHERE (((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((((((((((rt0.c1)AND(t1.c0)))OR(rt0.c2)))OR(x'c5c7')))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) AND (NULL))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)>=('-930073281')))) AND (((((rt0.c2, rt0.c0, t1.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((((((((((rt0.c1)AND(t1.c0)))OR(rt0.c2)))OR(x'c5c7')))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) AND (NULL))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)>=('-930073281')))) AND (((((rt0.c2, rt0.c0, t1.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) DESC);
SELECT * FROM t1, rt0 WHERE (((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((((((((((rt0.c1)AND(t1.c0)))OR(rt0.c2)))OR(x'c5c7')))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) AND (NULL))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)>=('-930073281')))) AND (((((rt0.c2, rt0.c0, t1.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((((((((((rt0.c1)AND(t1.c0)))OR(rt0.c2)))OR(x'c5c7')))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) AND (NULL))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)>=('-930073281')))) AND (((((rt0.c2, rt0.c0, t1.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) DESC);
SELECT * FROM t1, rt0 WHERE (((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((((((((((rt0.c1)AND(t1.c0)))OR(rt0.c2)))OR(x'c5c7')))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) AND (NULL))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)>=('-930073281')))) AND (((((rt0.c2, rt0.c0, t1.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) DESC;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT ALL * FROM rt0, t1 WHERE ((~ (LIKELY(t1.c0)))) ORDER BY CAST((((0xffffffffffffffff))==((rt0.c0))) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)=('d|'))  WHEN LIKELY(DISTINCT rt0.c2) THEN '-798174203' COLLATE BINARY ELSE rt0.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (LIKELY(t1.c0)))) IS TRUE)  as count FROM rt0, t1 ORDER BY CAST((((0xffffffffffffffff))=((rt0.c0))) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)==('d|'))  WHEN LIKELY(DISTINCT rt0.c2) THEN '-798174203' COLLATE BINARY ELSE rt0.c1 END  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE ((~ (LIKELY(t1.c0)))) ORDER BY CAST((((0xffffffffffffffff))==((rt0.c0))) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)=('d|'))  WHEN LIKELY(DISTINCT rt0.c2) THEN '-798174203' COLLATE BINARY ELSE rt0.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (LIKELY(t1.c0)))) IS TRUE)  as count FROM rt0, t1 ORDER BY CAST((((0xffffffffffffffff))=((rt0.c0))) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)==('d|'))  WHEN LIKELY(DISTINCT rt0.c2) THEN '-798174203' COLLATE BINARY ELSE rt0.c1 END  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE ((~ (LIKELY(t1.c0)))) ORDER BY CAST((((0xffffffffffffffff))==((rt0.c0))) AS NUMERIC) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 END AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)=('d|'))  WHEN LIKELY(DISTINCT rt0.c2) THEN '-798174203' COLLATE BINARY ELSE rt0.c1 END  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY '189043930';
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY '189043930');
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY '189043930';
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY '189043930');
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY '189043930';
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM t0, rt0, t1 WHERE (((- (rt0.c2)) IN ())) ORDER BY ((CAST(rt0.c0 AS TEXT))&(CAST(t0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((CAST(rt0.c0 AS TEXT))&(CAST(t0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, t1 WHERE (((- (rt0.c2)) IN ())) ORDER BY ((CAST(rt0.c0 AS TEXT))&(CAST(t0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((CAST(rt0.c0 AS TEXT))&(CAST(t0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, t1 WHERE (((- (rt0.c2)) IN ())) ORDER BY ((CAST(rt0.c0 AS TEXT))&(CAST(t0.c0 AS BLOB)))  NULLS FIRST;
SELECT * FROM t0, rt0, t1 WHERE (x'88ec');
SELECT SUM(count) FROM (SELECT ((x'88ec') IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE (x'88ec');
SELECT SUM(count) FROM (SELECT ((x'88ec') IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE (x'88ec');
SELECT * FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE ((((NULL) IS FALSE) IN ())) ORDER BY (- (((t0.c0)OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) IS FALSE) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 ORDER BY (- (((t0.c0)OR(rt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE ((((NULL) IS FALSE) IN ())) ORDER BY (- (((t0.c0)OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) IS FALSE) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 ORDER BY (- (((t0.c0)OR(rt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE ((((NULL) IS FALSE) IN ())) ORDER BY (- (((t0.c0)OR(rt0.c0))));
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY ((((((((((rt0.c1) NOT NULL))OR(t1.c0 COLLATE RTRIM)))AND((NOT (-1644437748)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(CAST(t1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((((((((rt0.c1) NOT NULL))OR(t1.c0 COLLATE RTRIM)))AND((NOT (-1644437748)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(CAST(t1.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY ((((((((((rt0.c1) NOT NULL))OR(t1.c0 COLLATE RTRIM)))AND((NOT (-1644437748)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(CAST(t1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((((((((rt0.c1) NOT NULL))OR(t1.c0 COLLATE RTRIM)))AND((NOT (-1644437748)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(CAST(t1.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY ((((((((((rt0.c1) NOT NULL))OR(t1.c0 COLLATE RTRIM)))AND((NOT (-1644437748)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(CAST(t1.c0 AS INTEGER)))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CAST(t0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CAST(t0.c0 AS TEXT))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CAST(t0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CAST(t0.c0 AS TEXT))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CAST(t0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (CASE ABS(DISTINCT rt0.c1)  WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 END THEN ((t0.c0)=(t0.c0)) ELSE (t1.c0 IN (x'7bd1')) END) ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB), ((((((((((t1.c0) IS FALSE))OR((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))))AND(MAX(rt0.c0, t0.c0))))OR(CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM)), ((((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c0, t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ABS(DISTINCT rt0.c1)  WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 END THEN ((t0.c0)=(t0.c0)) ELSE (t1.c0 IN (x'7bd1')) END) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB), ((((((((((t1.c0) IS FALSE))OR((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))))AND(MAX(rt0.c0, t0.c0))))OR(CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM)), ((((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c0, t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (CASE ABS(DISTINCT rt0.c1)  WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 END THEN ((t0.c0)=(t0.c0)) ELSE (t1.c0 IN (x'7bd1')) END) ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB), ((((((((((t1.c0) IS FALSE))OR((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))))AND(MAX(rt0.c0, t0.c0))))OR(CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM)), ((((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c0, t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ABS(DISTINCT rt0.c1)  WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 END THEN ((t0.c0)=(t0.c0)) ELSE (t1.c0 IN (x'7bd1')) END) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB), ((((((((((t1.c0) IS FALSE))OR((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))))AND(MAX(rt0.c0, t0.c0))))OR(CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM)), ((((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c0, t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE (CASE ABS(DISTINCT rt0.c1)  WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 END THEN ((t0.c0)=(t0.c0)) ELSE (t1.c0 IN (x'7bd1')) END) ORDER BY CAST(((rt0.c1) ISNULL) AS BLOB), ((((((((((t1.c0) IS FALSE))OR((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))))AND(MAX(rt0.c0, t0.c0))))OR(CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM)), ((((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0))) BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c0, t0.c0)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, x'3dc2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, rt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, x'3dc2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, x'3dc2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, rt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, x'3dc2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, x'3dc2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, rt0.c2))) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ('\r鏺');
SELECT SUM(count) FROM (SELECT (('\r鏺') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('\r鏺');
SELECT SUM(count) FROM (SELECT (('\r鏺') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('\r鏺');
SELECT COUNT(*) FROM t1, t0 WHERE ((((t0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE ((((t0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE ((((t0.c0) IS TRUE) IN ()));
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) ORDER BY rt0.c2 ASC;
SELECT * FROM t1, t0 WHERE ((~ (CASE ''  WHEN t1.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE ''  WHEN t1.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE ((~ (CASE ''  WHEN t1.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE ''  WHEN t1.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE ((~ (CASE ''  WHEN t1.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t1 INDEXED BY i91, t0, rt0 WHERE (((CAST(t1.c0 AS NUMERIC))GLOB(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS NUMERIC))GLOB(t0.c0))) IS TRUE)  as count FROM t1 INDEXED BY i91, t0, rt0);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i91, t0, rt0 WHERE (((CAST(t1.c0 AS NUMERIC))GLOB(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS NUMERIC))GLOB(t0.c0))) IS TRUE)  as count FROM t1 INDEXED BY i91, t0, rt0);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i91, t0, rt0 WHERE (((CAST(t1.c0 AS NUMERIC))GLOB(t0.c0)));
SELECT COUNT(*) FROM t1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x''))) COLLATE RTRIM WHERE (((((t1.c0)==(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE))) ORDER BY (t1.c0 COLLATE NOCASE IN ()) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((t1.c0)==(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x''))) COLLATE RTRIM ORDER BY (t1.c0 COLLATE NOCASE IN ()) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM t1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x''))) COLLATE RTRIM WHERE (((((t1.c0)==(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE))) ORDER BY (t1.c0 COLLATE NOCASE IN ()) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((t1.c0)==(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x''))) COLLATE RTRIM ORDER BY (t1.c0 COLLATE NOCASE IN ()) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM t1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x''))) COLLATE RTRIM WHERE (((((t1.c0)==(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE))) ORDER BY (t1.c0 COLLATE NOCASE IN ()) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE);
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE ((rt0.c0)*(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE ((rt0.c0)*(rt0.c0)) END) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE ((rt0.c0)*(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE ((rt0.c0)*(rt0.c0)) END) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE ((rt0.c0)*(rt0.c0)) END);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i91, t1 WHERE (CASE WHEN ((t1.c0)IS NOT(rt0.c2)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)IS NOT(rt0.c2)) THEN x'' END) IS TRUE)  as count FROM rt0, t0 INDEXED BY i91, t1);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i91, t1 WHERE (CASE WHEN ((t1.c0)IS NOT(rt0.c2)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)IS NOT(rt0.c2)) THEN x'' END) IS TRUE)  as count FROM rt0, t0 INDEXED BY i91, t1);
SELECT * FROM t0 WHERE ((((((((((('I|0(')OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0)IS NOT(t0.c0))))) ORDER BY (- (((t0.c0) ISNULL)))  NULLS LAST, (NULL IN (((((t0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(DISTINCT t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((('I|0(')OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c0) ISNULL)))  NULLS LAST, (NULL IN (((((t0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(DISTINCT t0.c0))) DESC);
SELECT * FROM t0 WHERE ((((((((((('I|0(')OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0)IS NOT(t0.c0))))) ORDER BY (- (((t0.c0) ISNULL)))  NULLS LAST, (NULL IN (((((t0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(DISTINCT t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((('I|0(')OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c0) ISNULL)))  NULLS LAST, (NULL IN (((((t0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(DISTINCT t0.c0))) DESC);
SELECT * FROM t0 WHERE ((((((((((('I|0(')OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0)IS NOT(t0.c0))))) ORDER BY (- (((t0.c0) ISNULL)))  NULLS LAST, (NULL IN (((((t0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(DISTINCT t0.c0))) DESC;
SELECT ALL * FROM rt0 WHERE (LENGTH((NOT (rt0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((NOT (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LENGTH((NOT (rt0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((NOT (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LENGTH((NOT (rt0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM t0, t1 WHERE ((~ ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t1.c0 IN ())))) IS TRUE)  as count FROM t0, t1);
SELECT COUNT(*) FROM t0, t1 WHERE ((~ ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t1.c0 IN ())))) IS TRUE)  as count FROM t0, t1);
SELECT COUNT(*) FROM t0, t1 WHERE ((~ ((t1.c0 IN ()))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT NULL)) ORDER BY ((IFNULL(t0.c0, t0.c0)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<=((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((IFNULL(t0.c0, t0.c0)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT NULL)) ORDER BY ((IFNULL(t0.c0, t0.c0)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<=((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((IFNULL(t0.c0, t0.c0)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT NULL)) ORDER BY ((IFNULL(t0.c0, t0.c0)) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c0) NOTNULL)))<=(((((rt0.c0))>=((t0.c0))))))) ORDER BY ((((t0.c0)>(rt0.c2)))+(((rt0.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOTNULL)))<=(((((rt0.c0))>=((t0.c0))))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)>(rt0.c2)))+(((rt0.c1) ISNULL)))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c0) NOTNULL)))<=(((((rt0.c0))>=((t0.c0))))))) ORDER BY ((((t0.c0)>(rt0.c2)))+(((rt0.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOTNULL)))<=(((((rt0.c0))>=((t0.c0))))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)>(rt0.c2)))+(((rt0.c1) ISNULL)))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c0) NOTNULL)))<=(((((rt0.c0))>=((t0.c0))))))) ORDER BY ((((t0.c0)>(rt0.c2)))+(((rt0.c1) ISNULL)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))  WHEN rt0.c1 THEN ((rt0.c2)IS(rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c0))) THEN x'b22a' WHEN ROUND(rt0.c2, rt0.c1) THEN rt0.c1 ELSE (~ (rt0.c2)) END) ORDER BY ((rt0.c0 COLLATE NOCASE)&(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))  WHEN rt0.c1 THEN ((rt0.c2)IS(rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c0))) THEN x'b22a' WHEN ROUND(rt0.c2, rt0.c1) THEN rt0.c1 ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)&(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))  WHEN rt0.c1 THEN ((rt0.c2)IS(rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c0))) THEN x'b22a' WHEN ROUND(rt0.c2, rt0.c1) THEN rt0.c1 ELSE (~ (rt0.c2)) END) ORDER BY ((rt0.c0 COLLATE NOCASE)&(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))  WHEN rt0.c1 THEN ((rt0.c2)IS(rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c0))) THEN x'b22a' WHEN ROUND(rt0.c2, rt0.c1) THEN rt0.c1 ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)&(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))  WHEN rt0.c1 THEN ((rt0.c2)IS(rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c0))) THEN x'b22a' WHEN ROUND(rt0.c2, rt0.c1) THEN rt0.c1 ELSE (~ (rt0.c2)) END) ORDER BY ((rt0.c0 COLLATE NOCASE)&(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i91, rt0 WHERE (CAST('1808077639' AS TEXT)) ORDER BY ((rt0.c1)IS NOT(t0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST('1808077639' AS TEXT)) IS TRUE)  as count FROM t0 INDEXED BY i91, rt0 ORDER BY ((rt0.c1)IS NOT(t0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i91, rt0 WHERE (CAST('1808077639' AS TEXT)) ORDER BY ((rt0.c1)IS NOT(t0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST('1808077639' AS TEXT)) IS TRUE)  as count FROM t0 INDEXED BY i91, rt0 ORDER BY ((rt0.c1)IS NOT(t0.c0)) COLLATE NOCASE DESC);
SELECT * FROM t1, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN -36596742 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<=(t0.c0)))) AND ((CAST(t0.c0 AS TEXT), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN -36596742 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<=(t0.c0)))) AND ((CAST(t0.c0 AS TEXT), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN -36596742 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<=(t0.c0)))) AND ((CAST(t0.c0 AS TEXT), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN -36596742 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<=(t0.c0)))) AND ((CAST(t0.c0 AS TEXT), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN -36596742 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<=(t0.c0)))) AND ((CAST(t0.c0 AS TEXT), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS NUMERIC)))));
SELECT * FROM t0, t1, rt0 WHERE (LOWER('125079666') COLLATE BINARY) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(t1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (0Xffffffffd0d1fee9)) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER('125079666') COLLATE BINARY) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(t1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (0xffffffffd0d1fee9)) DESC);
SELECT * FROM t0, t1, rt0 WHERE (LOWER('125079666') COLLATE BINARY) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(t1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (0Xffffffffd0d1fee9)) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER('125079666') COLLATE BINARY) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(t1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (0xffffffffd0d1fee9)) DESC);
SELECT * FROM t0, t1, rt0 WHERE (LOWER('125079666') COLLATE BINARY) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(t1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (0Xffffffffd0d1fee9)) DESC;
SELECT ALL * FROM t1, rt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (t1.c0);
SELECT ALL * FROM rt0, t0, t1 WHERE ((((rt0.c0 IN ())) BETWEEN (((t0.c0)>>(rt0.c0))) AND (CAST(t0.c0 AS REAL)))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (((t0.c0)>>(rt0.c0))) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, t1 WHERE ((((rt0.c0 IN ())) BETWEEN (((t0.c0)>>(rt0.c0))) AND (CAST(t0.c0 AS REAL)))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (((t0.c0)>>(rt0.c0))) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, t1 WHERE ((((rt0.c0 IN ())) BETWEEN (((t0.c0)>>(rt0.c0))) AND (CAST(t0.c0 AS REAL)))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NULL IN ()));
SELECT ALL * FROM t1, rt0 WHERE (COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), rt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM t1, rt0, t0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, t0);
SELECT COUNT(*) FROM t1, rt0, t0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, t0);
SELECT COUNT(*) FROM t1, rt0, t0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT ALL * FROM rt0, t0 WHERE (CASE ((rt0.c1)AND(rt0.c0))  WHEN x'' THEN NULLIF(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c0) BETWEEN (NULL) AND (t0.c0)) THEN rt0.c0 WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (- (0.16990255304140955)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)AND(rt0.c0))  WHEN x'' THEN NULLIF(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c0) BETWEEN (NULL) AND (t0.c0)) THEN rt0.c0 WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (- (0.16990255304140955)) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE ((rt0.c1)AND(rt0.c0))  WHEN x'' THEN NULLIF(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c0) BETWEEN (NULL) AND (t0.c0)) THEN rt0.c0 WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (- (0.16990255304140955)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)AND(rt0.c0))  WHEN x'' THEN NULLIF(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c0) BETWEEN (NULL) AND (t0.c0)) THEN rt0.c0 WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (- (0.16990255304140955)) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE ((rt0.c1)AND(rt0.c0))  WHEN x'' THEN NULLIF(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c0) BETWEEN (NULL) AND (t0.c0)) THEN rt0.c0 WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (- (0.16990255304140955)) END);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (CAST(((((((((rt0.c0)OR(rt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY (- (rt0.c0)) ASC  NULLS FIRST, (((rt0.c2 IN ()))GLOB(((rt0.c2)|(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c0)OR(rt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY (- (rt0.c0)) ASC  NULLS FIRST, (((rt0.c2 IN ()))GLOB(((rt0.c2)|(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (CAST(((((((((rt0.c0)OR(rt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY (- (rt0.c0)) ASC  NULLS FIRST, (((rt0.c2 IN ()))GLOB(((rt0.c2)|(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c0)OR(rt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY (- (rt0.c0)) ASC  NULLS FIRST, (((rt0.c2 IN ()))GLOB(((rt0.c2)|(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (CAST(((((((((rt0.c0)OR(rt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY (- (rt0.c0)) ASC  NULLS FIRST, (((rt0.c2 IN ()))GLOB(((rt0.c2)|(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON CASE ((t1.c0)OR(t1.c0))  WHEN ((t0.c0)-(t0.c0)) THEN ((t1.c0)%(t1.c0)) ELSE (t1.c0 IN ()) END WHERE ('-1357381532' COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c0 IN ())))>=((((t1.c0)>=(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1357381532' COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON CASE ((t1.c0)OR(t1.c0))  WHEN ((t0.c0)-(t0.c0)) THEN ((t1.c0)%(t1.c0)) ELSE (t1.c0 IN ()) END ORDER BY ((((t0.c0 IN ())))>=((((t1.c0)>=(t0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON CASE ((t1.c0)OR(t1.c0))  WHEN ((t0.c0)-(t0.c0)) THEN ((t1.c0)%(t1.c0)) ELSE (t1.c0 IN ()) END WHERE ('-1357381532' COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c0 IN ())))>=((((t1.c0)>=(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1357381532' COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON CASE ((t1.c0)OR(t1.c0))  WHEN ((t0.c0)-(t0.c0)) THEN ((t1.c0)%(t1.c0)) ELSE (t1.c0 IN ()) END ORDER BY ((((t0.c0 IN ())))>=((((t1.c0)>=(t0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON CASE ((t1.c0)OR(t1.c0))  WHEN ((t0.c0)-(t0.c0)) THEN ((t1.c0)%(t1.c0)) ELSE (t1.c0 IN ()) END WHERE ('-1357381532' COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c0 IN ())))>=((((t1.c0)>=(t0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON (rt0.c2 IN ()) INNER JOIN rt0 ON DATETIME(x'', (0.24697473537786485 IN ()), -871744100) WHERE (json_extract(rt0.c2, TYPEOF(DISTINCT rt0.c1))) ORDER BY CAST(CASE t1.c0  WHEN rt0.c1 THEN t0.c0 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(rt0.c2, TYPEOF(DISTINCT rt0.c1))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON (rt0.c2 IN ()) INNER JOIN rt0 ON DATETIME(x'', (0.24697473537786485 IN ()), -871744100) ORDER BY CAST(CASE t1.c0  WHEN rt0.c1 THEN t0.c0 END AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON (rt0.c2 IN ()) INNER JOIN rt0 ON DATETIME(x'', (0.24697473537786485 IN ()), -871744100) WHERE (json_extract(rt0.c2, TYPEOF(DISTINCT rt0.c1))) ORDER BY CAST(CASE t1.c0  WHEN rt0.c1 THEN t0.c0 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(rt0.c2, TYPEOF(DISTINCT rt0.c1))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON (rt0.c2 IN ()) INNER JOIN rt0 ON DATETIME(x'', (0.24697473537786485 IN ()), -871744100) ORDER BY CAST(CASE t1.c0  WHEN rt0.c1 THEN t0.c0 END AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON (rt0.c2 IN ()) INNER JOIN rt0 ON DATETIME(x'', (0.24697473537786485 IN ()), -871744100) WHERE (json_extract(rt0.c2, TYPEOF(DISTINCT rt0.c1))) ORDER BY CAST(CASE t1.c0  WHEN rt0.c1 THEN t0.c0 END AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, t0 WHERE (SUBSTR(((((t1.c0)AND(t0.c0)))AND(t1.c0)), ((t1.c0)AND(t1.c0)))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((((t1.c0)AND(t0.c0)))AND(t1.c0)), ((t1.c0)AND(t1.c0)))) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (SUBSTR(((((t1.c0)AND(t0.c0)))AND(t1.c0)), ((t1.c0)AND(t1.c0)))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((((t1.c0)AND(t0.c0)))AND(t1.c0)), ((t1.c0)AND(t1.c0)))) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (SUBSTR(((((t1.c0)AND(t0.c0)))AND(t1.c0)), ((t1.c0)AND(t1.c0)))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i91, t1 WHERE (((((((t1.c0)OR(t1.c0)))OR(t0.c0)))/((- (rt0.c2))))) ORDER BY (((+ (rt0.c2))) BETWEEN ((NULL IN (t1.c0))) AND (NULL)) DESC  NULLS LAST, ((rt0.c2 IN (rt0.c1, rt0.c2)) IN ('-600325156' COLLATE NOCASE, (((''))!=((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)OR(t1.c0)))OR(t0.c0)))/((- (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i91, t1 ORDER BY (((+ (rt0.c2))) BETWEEN ((NULL IN (t1.c0))) AND (NULL)) DESC  NULLS LAST, ((rt0.c2 IN (rt0.c1, rt0.c2)) IN ('-600325156' COLLATE NOCASE, (((''))<>((rt0.c2))))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i91, t1 WHERE (((((((t1.c0)OR(t1.c0)))OR(t0.c0)))/((- (rt0.c2))))) ORDER BY (((+ (rt0.c2))) BETWEEN ((NULL IN (t1.c0))) AND (NULL)) DESC  NULLS LAST, ((rt0.c2 IN (rt0.c1, rt0.c2)) IN ('-600325156' COLLATE NOCASE, (((''))!=((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)OR(t1.c0)))OR(t0.c0)))/((- (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i91, t1 ORDER BY (((+ (rt0.c2))) BETWEEN ((NULL IN (t1.c0))) AND (NULL)) DESC  NULLS LAST, ((rt0.c2 IN (rt0.c1, rt0.c2)) IN ('-600325156' COLLATE NOCASE, (((''))<>((rt0.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) FULL OUTER JOIN t0 ON ((((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(t1.c0))) NOT NULL) WHERE (LOWER(((rt0.c1)IS NOT(-1300094191)))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c1)IS NOT(-1300094191)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) FULL OUTER JOIN t0 ON ((((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(t1.c0))) NOT NULL) ORDER BY rt0.c1 ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) FULL OUTER JOIN t0 ON ((((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(t1.c0))) NOT NULL) WHERE (LOWER(((rt0.c1)IS NOT(-1300094191)))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c1)IS NOT(-1300094191)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) FULL OUTER JOIN t0 ON ((((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(t1.c0))) NOT NULL) ORDER BY rt0.c1 ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) FULL OUTER JOIN t0 ON ((((((((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(t1.c0))) NOT NULL) WHERE (LOWER(((rt0.c1)IS NOT(-1300094191)))) ORDER BY rt0.c1 ASC;
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY) WHERE ((((rt0.c1 IN ()))|((- (rt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(t1.c0)))) AND (((~ (rt0.c2)))))  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC  NULLS FIRST, CAST(((t1.c0)-(t0.c0)) AS REAL) ASC, ((((rt0.c0) NOT NULL))AND((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))|((- (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY) ORDER BY (((rt0.c2)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(t1.c0)))) AND (((~ (rt0.c2)))))  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC  NULLS FIRST, CAST(((t1.c0)-(t0.c0)) AS REAL) ASC, ((((rt0.c0) NOT NULL))AND((NOT (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY) WHERE ((((rt0.c1 IN ()))|((- (rt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(t1.c0)))) AND (((~ (rt0.c2)))))  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC  NULLS FIRST, CAST(((t1.c0)-(t0.c0)) AS REAL) ASC, ((((rt0.c0) NOT NULL))AND((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))|((- (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY) ORDER BY (((rt0.c2)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(t1.c0)))) AND (((~ (rt0.c2)))))  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC  NULLS FIRST, CAST(((t1.c0)-(t0.c0)) AS REAL) ASC, ((((rt0.c0) NOT NULL))AND((NOT (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY) WHERE ((((rt0.c1 IN ()))|((- (rt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(t1.c0)))) AND (((~ (rt0.c2)))))  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC  NULLS FIRST, CAST(((t1.c0)-(t0.c0)) AS REAL) ASC, ((((rt0.c0) NOT NULL))AND((NOT (rt0.c1))))  NULLS LAST;
SELECT * FROM t0, rt0 LEFT OUTER JOIN t1 ON rt0.c1 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 LEFT OUTER JOIN t1 ON rt0.c1);
SELECT * FROM t0, rt0 LEFT OUTER JOIN t1 ON rt0.c1 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 LEFT OUTER JOIN t1 ON rt0.c1);
SELECT * FROM t0, rt0 LEFT OUTER JOIN t1 ON rt0.c1 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT * FROM rt0, t0, t1 WHERE (json_object(SUBSTR(rt0.c2, t1.c0), ((t0.c0) BETWEEN (305769030) AND (t1.c0)))) ORDER BY 0.3994745933034717 ASC, LOWER(DISTINCT ('-352756553' IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object(SUBSTR(rt0.c2, t1.c0), ((t0.c0) BETWEEN (305769030) AND (t1.c0)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY 0.3994745933034717 ASC, LOWER(DISTINCT ('-352756553' IN ())) DESC  NULLS FIRST);
SELECT * FROM rt0, t0, t1 WHERE (json_object(SUBSTR(rt0.c2, t1.c0), ((t0.c0) BETWEEN (305769030) AND (t1.c0)))) ORDER BY 0.3994745933034717 ASC, LOWER(DISTINCT ('-352756553' IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object(SUBSTR(rt0.c2, t1.c0), ((t0.c0) BETWEEN (305769030) AND (t1.c0)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY 0.3994745933034717 ASC, LOWER(DISTINCT ('-352756553' IN ())) DESC  NULLS FIRST);
SELECT * FROM rt0, t0, t1 WHERE (json_object(SUBSTR(rt0.c2, t1.c0), ((t0.c0) BETWEEN (305769030) AND (t1.c0)))) ORDER BY 0.3994745933034717 ASC, LOWER(DISTINCT ('-352756553' IN ())) DESC  NULLS FIRST;
SELECT * FROM rt0, t0, t1 WHERE (((IFNULL(DISTINCT t0.c0, rt0.c0))-(0.8337852463528557)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT t0.c0, rt0.c0))-(0.8337852463528557))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE (((IFNULL(DISTINCT t0.c0, rt0.c0))-(0.8337852463528557)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT t0.c0, rt0.c0))-(0.8337852463528557))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE (((IFNULL(DISTINCT t0.c0, rt0.c0))-(0.8337852463528557)));
SELECT * FROM rt0 WHERE ((+ (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))));
SELECT * FROM t0 WHERE (((t0.c0)<=(0.6835613446569182))) ORDER BY ((t0.c0 COLLATE RTRIM)|(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)<=(0.6835613446569182))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM)|(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0)<=(0.6835613446569182))) ORDER BY ((t0.c0 COLLATE RTRIM)|(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)<=(0.6835613446569182))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM)|(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0)<=(0.6835613446569182))) ORDER BY ((t0.c0 COLLATE RTRIM)|(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c1 IN (rt0.c2, rt0.c1)))OR(rt0.c1 COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))) WHERE (((((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)OR(1323379053)))OR(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)OR(1323379053)))OR(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((rt0.c1 IN (rt0.c2, rt0.c1)))OR(rt0.c1 COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))));
SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c1 IN (rt0.c2, rt0.c1)))OR(rt0.c1 COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))) WHERE (((((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)OR(1323379053)))OR(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)OR(1323379053)))OR(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((rt0.c1 IN (rt0.c2, rt0.c1)))OR(rt0.c1 COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))));
SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c1 IN (rt0.c2, rt0.c1)))OR(rt0.c1 COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))) WHERE (((((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)OR(1323379053)))OR(CAST(t0.c0 AS REAL))));
SELECT ALL * FROM t1, t0 WHERE (((((((((((((((((t1.c0)AND('	r6%4u쉹H')))AND(t0.c0)))AND(t1.c0)))AND('e ')))AND(t1.c0)))AND(-6.2440738E8)))AND(HEX(DISTINCT t1.c0))))OR(((t0.c0)=(t1.c0))))) ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY COLLATE BINARY  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t1.c0)AND('	r6%4u쉹H')))AND(t0.c0)))AND(t1.c0)))AND('e ')))AND(t1.c0)))AND(-6.2440738E8)))AND(HEX(DISTINCT t1.c0))))OR(((t0.c0)==(t1.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY COLLATE BINARY  NULLS FIRST, NULL  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE (((((((((((((((((t1.c0)AND('	r6%4u쉹H')))AND(t0.c0)))AND(t1.c0)))AND('e ')))AND(t1.c0)))AND(-6.2440738E8)))AND(HEX(DISTINCT t1.c0))))OR(((t0.c0)=(t1.c0))))) ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY COLLATE BINARY  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t1.c0)AND('	r6%4u쉹H')))AND(t0.c0)))AND(t1.c0)))AND('e ')))AND(t1.c0)))AND(-6.2440738E8)))AND(HEX(DISTINCT t1.c0))))OR(((t0.c0)==(t1.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY COLLATE BINARY  NULLS FIRST, NULL  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE (((((((((((((((((t1.c0)AND('	r6%4u쉹H')))AND(t0.c0)))AND(t1.c0)))AND('e ')))AND(t1.c0)))AND(-6.2440738E8)))AND(HEX(DISTINCT t1.c0))))OR(((t0.c0)=(t1.c0))))) ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY COLLATE BINARY  NULLS FIRST, NULL  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((~ ('-1486373741')) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ ('-1486373741')) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((~ ('-1486373741')) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ ('-1486373741')) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((~ ('-1486373741')) IN ()));
SELECT * FROM t0, t1 WHERE (LIKELY(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY TRIM(DISTINCT (t0.c0 IN ()), t1.c0 COLLATE NOCASE) ASC, (((t0.c0) IS TRUE) IN ())  NULLS FIRST, CASE WHEN IFNULL(t0.c0, t1.c0) THEN (~ (t1.c0)) WHEN CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN '-1123635867' THEN t0.c0 COLLATE BINARY ELSE ((t1.c0)/(t1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM t0, t1 ORDER BY TRIM(DISTINCT (t0.c0 IN ()), t1.c0 COLLATE NOCASE) ASC, (((t0.c0) IS TRUE) IN ())  NULLS FIRST, CASE WHEN IFNULL(t0.c0, t1.c0) THEN (~ (t1.c0)) WHEN CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN '-1123635867' THEN t0.c0 COLLATE BINARY ELSE ((t1.c0)/(t1.c0)) END DESC  NULLS LAST);
SELECT * FROM t0, t1 WHERE (LIKELY(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY TRIM(DISTINCT (t0.c0 IN ()), t1.c0 COLLATE NOCASE) ASC, (((t0.c0) IS TRUE) IN ())  NULLS FIRST, CASE WHEN IFNULL(t0.c0, t1.c0) THEN (~ (t1.c0)) WHEN CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN '-1123635867' THEN t0.c0 COLLATE BINARY ELSE ((t1.c0)/(t1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM t0, t1 ORDER BY TRIM(DISTINCT (t0.c0 IN ()), t1.c0 COLLATE NOCASE) ASC, (((t0.c0) IS TRUE) IN ())  NULLS FIRST, CASE WHEN IFNULL(t0.c0, t1.c0) THEN (~ (t1.c0)) WHEN CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN '-1123635867' THEN t0.c0 COLLATE BINARY ELSE ((t1.c0)/(t1.c0)) END DESC  NULLS LAST);
SELECT * FROM t0, t1 WHERE (LIKELY(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY TRIM(DISTINCT (t0.c0 IN ()), t1.c0 COLLATE NOCASE) ASC, (((t0.c0) IS TRUE) IN ())  NULLS FIRST, CASE WHEN IFNULL(t0.c0, t1.c0) THEN (~ (t1.c0)) WHEN CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN '-1123635867' THEN t0.c0 COLLATE BINARY ELSE ((t1.c0)/(t1.c0)) END DESC  NULLS LAST;
SELECT * FROM rt0, t1, t0 WHERE (((((((((DATETIME(rt0.c2, rt0.c1, rt0.c0))AND(CAST(t1.c0 AS TEXT))))OR(0xffffffffb828e970)))OR(((t1.c0) IS TRUE))))AND((rt0.c0 IN ())))) ORDER BY (TYPEOF(DISTINCT t0.c0) IN ((rt0.c0 IN (rt0.c1, rt0.c1)))) ASC  NULLS LAST, (((+ (t1.c0))) BETWEEN (((((x'')OR(rt0.c1)))OR(t0.c0))) AND ((((rt0.c2))>=((t1.c0))))) DESC, (((((rt0.c2, t1.c0, t0.c0))>((rt0.c0, rt0.c1, t1.c0)))) NOT BETWEEN (TOTAL_CHANGES()) AND ((+ (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((DATETIME(rt0.c2, rt0.c1, rt0.c0))AND(CAST(t1.c0 AS TEXT))))OR(0xffffffffb828e970)))OR(((t1.c0) IS TRUE))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY (TYPEOF(DISTINCT t0.c0) IN ((rt0.c0 IN (rt0.c1, rt0.c1)))) ASC  NULLS LAST, (((+ (t1.c0))) BETWEEN (((((x'')OR(rt0.c1)))OR(t0.c0))) AND ((((rt0.c2))>=((t1.c0))))) DESC, (((((rt0.c2, t1.c0, t0.c0))>((rt0.c0, rt0.c1, t1.c0)))) NOT BETWEEN (TOTAL_CHANGES()) AND ((+ (rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, t1, t0 WHERE (((((((((DATETIME(rt0.c2, rt0.c1, rt0.c0))AND(CAST(t1.c0 AS TEXT))))OR(0xffffffffb828e970)))OR(((t1.c0) IS TRUE))))AND((rt0.c0 IN ())))) ORDER BY (TYPEOF(DISTINCT t0.c0) IN ((rt0.c0 IN (rt0.c1, rt0.c1)))) ASC  NULLS LAST, (((+ (t1.c0))) BETWEEN (((((x'')OR(rt0.c1)))OR(t0.c0))) AND ((((rt0.c2))>=((t1.c0))))) DESC, (((((rt0.c2, t1.c0, t0.c0))>((rt0.c0, rt0.c1, t1.c0)))) NOT BETWEEN (TOTAL_CHANGES()) AND ((+ (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((DATETIME(rt0.c2, rt0.c1, rt0.c0))AND(CAST(t1.c0 AS TEXT))))OR(0xffffffffb828e970)))OR(((t1.c0) IS TRUE))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY (TYPEOF(DISTINCT t0.c0) IN ((rt0.c0 IN (rt0.c1, rt0.c1)))) ASC  NULLS LAST, (((+ (t1.c0))) BETWEEN (((((x'')OR(rt0.c1)))OR(t0.c0))) AND ((((rt0.c2))>=((t1.c0))))) DESC, (((((rt0.c2, t1.c0, t0.c0))>((rt0.c0, rt0.c1, t1.c0)))) NOT BETWEEN (TOTAL_CHANGES()) AND ((+ (rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, t1, t0 WHERE (((((((((DATETIME(rt0.c2, rt0.c1, rt0.c0))AND(CAST(t1.c0 AS TEXT))))OR(0xffffffffb828e970)))OR(((t1.c0) IS TRUE))))AND((rt0.c0 IN ())))) ORDER BY (TYPEOF(DISTINCT t0.c0) IN ((rt0.c0 IN (rt0.c1, rt0.c1)))) ASC  NULLS LAST, (((+ (t1.c0))) BETWEEN (((((x'')OR(rt0.c1)))OR(t0.c0))) AND ((((rt0.c2))>=((t1.c0))))) DESC, (((((rt0.c2, t1.c0, t0.c0))>((rt0.c0, rt0.c1, t1.c0)))) NOT BETWEEN (TOTAL_CHANGES()) AND ((+ (rt0.c1))))  NULLS LAST;
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))>=((((rt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))>=((((rt0.c1) NOTNULL))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))>=((((rt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))>=((((rt0.c1) NOTNULL))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))>=((((rt0.c1) NOTNULL)))));
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT * FROM t1 CROSS JOIN rt0 ON CASE LIKELIHOOD(rt0.c1, 0.08220689784841029)  WHEN ((((((((t1.c0)OR(NULL)))OR(t1.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) END WHERE (CAST(CASE t1.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY (~ ((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((t1.c0, 731582996, '-791544087')) AND ((rt0.c1, x'', rt0.c0))))) ASC, (((rt0.c0, t1.c0, NULL, rt0.c2, rt0.c2)) NOT BETWEEN (((0x1fdf1be5 IN ()), ((rt0.c0)<<(rt0.c2)), json_type(t1.c0), ((rt0.c0)=(rt0.c0)), (((rt0.c2))<=((rt0.c0))))) AND ((((((rt0.c0)OR(t1.c0)))AND(rt0.c0)), ((NULL) NOT BETWEEN ('-794913666') AND (rt0.c0)), ((rt0.c2)&(rt0.c2)), rt0.c0, NULL)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t1.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON CASE LIKELIHOOD(rt0.c1, 0.08220689784841029)  WHEN ((((((((t1.c0)OR(NULL)))OR(t1.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) END ORDER BY (~ ((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((t1.c0, 731582996, '-791544087')) AND ((rt0.c1, x'', rt0.c0))))) ASC, (((rt0.c0, t1.c0, NULL, rt0.c2, rt0.c2)) NOT BETWEEN (((0X1fdf1be5 IN ()), ((rt0.c0)<<(rt0.c2)), json_type(t1.c0), ((rt0.c0)=(rt0.c0)), (((rt0.c2))<=((rt0.c0))))) AND ((((((rt0.c0)OR(t1.c0)))AND(rt0.c0)), ((NULL) NOT BETWEEN ('-794913666') AND (rt0.c0)), ((rt0.c2)&(rt0.c2)), rt0.c0, NULL))));
SELECT * FROM t1 CROSS JOIN rt0 ON CASE LIKELIHOOD(rt0.c1, 0.08220689784841029)  WHEN ((((((((t1.c0)OR(NULL)))OR(t1.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) END WHERE (CAST(CASE t1.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY (~ ((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((t1.c0, 731582996, '-791544087')) AND ((rt0.c1, x'', rt0.c0))))) ASC, (((rt0.c0, t1.c0, NULL, rt0.c2, rt0.c2)) NOT BETWEEN (((0x1fdf1be5 IN ()), ((rt0.c0)<<(rt0.c2)), json_type(t1.c0), ((rt0.c0)=(rt0.c0)), (((rt0.c2))<=((rt0.c0))))) AND ((((((rt0.c0)OR(t1.c0)))AND(rt0.c0)), ((NULL) NOT BETWEEN ('-794913666') AND (rt0.c0)), ((rt0.c2)&(rt0.c2)), rt0.c0, NULL)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t1.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON CASE LIKELIHOOD(rt0.c1, 0.08220689784841029)  WHEN ((((((((t1.c0)OR(NULL)))OR(t1.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) END ORDER BY (~ ((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((t1.c0, 731582996, '-791544087')) AND ((rt0.c1, x'', rt0.c0))))) ASC, (((rt0.c0, t1.c0, NULL, rt0.c2, rt0.c2)) NOT BETWEEN (((0X1fdf1be5 IN ()), ((rt0.c0)<<(rt0.c2)), json_type(t1.c0), ((rt0.c0)=(rt0.c0)), (((rt0.c2))<=((rt0.c0))))) AND ((((((rt0.c0)OR(t1.c0)))AND(rt0.c0)), ((NULL) NOT BETWEEN ('-794913666') AND (rt0.c0)), ((rt0.c2)&(rt0.c2)), rt0.c0, NULL))));
SELECT * FROM t1 CROSS JOIN rt0 ON CASE LIKELIHOOD(rt0.c1, 0.08220689784841029)  WHEN ((((((((t1.c0)OR(NULL)))OR(t1.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) END WHERE (CAST(CASE t1.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY (~ ((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((t1.c0, 731582996, '-791544087')) AND ((rt0.c1, x'', rt0.c0))))) ASC, (((rt0.c0, t1.c0, NULL, rt0.c2, rt0.c2)) NOT BETWEEN (((0x1fdf1be5 IN ()), ((rt0.c0)<<(rt0.c2)), json_type(t1.c0), ((rt0.c0)=(rt0.c0)), (((rt0.c2))<=((rt0.c0))))) AND ((((((rt0.c0)OR(t1.c0)))AND(rt0.c0)), ((NULL) NOT BETWEEN ('-794913666') AND (rt0.c0)), ((rt0.c2)&(rt0.c2)), rt0.c0, NULL)));
SELECT ALL * FROM rt0 WHERE (((((NOT (rt0.c1)), TRIM(DISTINCT rt0.c0, rt0.c0), RTRIM('')))<(((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))), CAST(rt0.c1 AS TEXT), UNLIKELY(DISTINCT rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c1)), TRIM(DISTINCT rt0.c0, rt0.c0), RTRIM('')))<(((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))), CAST(rt0.c1 AS TEXT), UNLIKELY(DISTINCT rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NOT (rt0.c1)), TRIM(DISTINCT rt0.c0, rt0.c0), RTRIM('')))<(((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))), CAST(rt0.c1 AS TEXT), UNLIKELY(DISTINCT rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c1)), TRIM(DISTINCT rt0.c0, rt0.c0), RTRIM('')))<(((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))), CAST(rt0.c1 AS TEXT), UNLIKELY(DISTINCT rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NOT (rt0.c1)), TRIM(DISTINCT rt0.c0, rt0.c0), RTRIM('')))<(((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))), CAST(rt0.c1 AS TEXT), UNLIKELY(DISTINCT rt0.c1)))));
SELECT ALL * FROM rt0, t1, t0 WHERE ((((t1.c0)%(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((t1.c0)%(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0, t1, t0 WHERE ((((t1.c0)%(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((t1.c0)%(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0, t1, t0 WHERE ((((t1.c0)%(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM t1, t0, rt0 WHERE (((((t1.c0)||(t1.c0)))|((- (x''))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)||(t1.c0)))|((- (x''))))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t1, t0, rt0 WHERE (((((t1.c0)||(t1.c0)))|((- (x''))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)||(t1.c0)))|((- (x''))))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t1, t0, rt0 WHERE (((((t1.c0)||(t1.c0)))|((- (x''))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (LIKELY(DISTINCT t0.c0)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (LIKELY(DISTINCT t0.c0)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (LIKELY(DISTINCT t0.c0)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (LIKELY(DISTINCT t0.c0)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (LIKELY(DISTINCT t0.c0)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (t0.c0 COLLATE BINARY))) ORDER BY CASE WHEN 0.7128082758689115 THEN (NOT (t0.c0)) END DESC  NULLS LAST, (((((((t0.c0))<>((t0.c0))))OR(((((((((t0.c0)OR(t0.c0)))AND(0.9616486360680923)))AND(t0.c0)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN 0.7128082758689115 THEN (NOT (t0.c0)) END DESC  NULLS LAST, (((((((t0.c0))<>((t0.c0))))OR(((((((((t0.c0)OR(t0.c0)))AND(0.9616486360680923)))AND(t0.c0)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (t0.c0 COLLATE BINARY))) ORDER BY CASE WHEN 0.7128082758689115 THEN (NOT (t0.c0)) END DESC  NULLS LAST, (((((((t0.c0))<>((t0.c0))))OR(((((((((t0.c0)OR(t0.c0)))AND(0.9616486360680923)))AND(t0.c0)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN 0.7128082758689115 THEN (NOT (t0.c0)) END DESC  NULLS LAST, (((((((t0.c0))<>((t0.c0))))OR(((((((((t0.c0)OR(t0.c0)))AND(0.9616486360680923)))AND(t0.c0)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (t0.c0 COLLATE BINARY))) ORDER BY CASE WHEN 0.7128082758689115 THEN (NOT (t0.c0)) END DESC  NULLS LAST, (((((((t0.c0))<>((t0.c0))))OR(((((((((t0.c0)OR(t0.c0)))AND(0.9616486360680923)))AND(t0.c0)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, t0, rt0 WHERE (14125897) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((14125897) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM t1, t0, rt0 WHERE (14125897) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((14125897) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM t1, t0, rt0 WHERE (14125897) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c0)=(t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)==(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0)=(t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)==(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0)=(t1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (IFNULL(((t0.c0)<>(t0.c0)), (- (t0.c0)))) ORDER BY (+ ((t1.c0 IN (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((t0.c0)<>(t0.c0)), (- (t0.c0)))) IS TRUE)  as count FROM t1, t0 ORDER BY (+ ((t1.c0 IN (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (IFNULL(((t0.c0)<>(t0.c0)), (- (t0.c0)))) ORDER BY (+ ((t1.c0 IN (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((t0.c0)<>(t0.c0)), (- (t0.c0)))) IS TRUE)  as count FROM t1, t0 ORDER BY (+ ((t1.c0 IN (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (IFNULL(((t0.c0)<>(t0.c0)), (- (t0.c0)))) ORDER BY (+ ((t1.c0 IN (t1.c0))));
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE BINARY);
SELECT ALL * FROM t1, t0 WHERE (0.556525115663086) ORDER BY ((t1.c0)||(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.556525115663086) IS TRUE)  as count FROM t1, t0 ORDER BY ((t1.c0)||(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t1, t0 WHERE (0.556525115663086) ORDER BY ((t1.c0)||(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.556525115663086) IS TRUE)  as count FROM t1, t0 ORDER BY ((t1.c0)||(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t1, t0 WHERE (0.556525115663086) ORDER BY ((t1.c0)||(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM t1 NOT INDEXED WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) ORDER BY ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC);
SELECT ALL * FROM t1 NOT INDEXED WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) ORDER BY ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC);
SELECT ALL * FROM t1 NOT INDEXED WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE) ORDER BY ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC;
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN rt0.c1 THEN CASE WHEN t1.c0 THEN 0.04165713762963075 END WHEN ((t1.c0)<>(t1.c0)) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN (((t1.c0))>=((rt0.c2))) ELSE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN CASE WHEN t1.c0 THEN 0.04165713762963075 END WHEN ((t1.c0)!=(t1.c0)) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN (((t1.c0))>=((rt0.c2))) ELSE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN rt0.c1 THEN CASE WHEN t1.c0 THEN 0.04165713762963075 END WHEN ((t1.c0)<>(t1.c0)) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN (((t1.c0))>=((rt0.c2))) ELSE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN CASE WHEN t1.c0 THEN 0.04165713762963075 END WHEN ((t1.c0)!=(t1.c0)) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN (((t1.c0))>=((rt0.c2))) ELSE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN rt0.c1 THEN CASE WHEN t1.c0 THEN 0.04165713762963075 END WHEN ((t1.c0)<>(t1.c0)) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN (((t1.c0))>=((rt0.c2))) ELSE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END);
SELECT * FROM t0, t1 FULL OUTER JOIN rt0 ON ((((((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(((t0.c0)IS(rt0.c1)))))AND(rt0.c1)) WHERE ((('853341051') NOT BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (('-386564347' IN ())))) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)||(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('853341051') NOT BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (('-386564347' IN ())))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON ((((((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(((t0.c0)IS(rt0.c1)))))AND(rt0.c1)) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)||(rt0.c0)))));
SELECT * FROM t0, t1 FULL OUTER JOIN rt0 ON ((((((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(((t0.c0)IS(rt0.c1)))))AND(rt0.c1)) WHERE ((('853341051') NOT BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (('-386564347' IN ())))) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)||(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('853341051') NOT BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (('-386564347' IN ())))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON ((((((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(((t0.c0)IS(rt0.c1)))))AND(rt0.c1)) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)||(rt0.c0)))));
SELECT * FROM t0, t1 FULL OUTER JOIN rt0 ON ((((((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(((t0.c0)IS(rt0.c1)))))AND(rt0.c1)) WHERE ((('853341051') NOT BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c1))) AND (('-386564347' IN ())))) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)||(rt0.c0))));
SELECT * FROM t0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL) NOTNULL));
SELECT * FROM rt0, t0, t1 WHERE (((((rt0.c1)AND(((t1.c0)IS NOT(rt0.c2)))))AND(HEX(t0.c0)))) ORDER BY CAST('' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(((t1.c0)IS NOT(rt0.c2)))))AND(HEX(t0.c0)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CAST('' AS NUMERIC) ASC);
SELECT * FROM rt0, t0, t1 WHERE (((((rt0.c1)AND(((t1.c0)IS NOT(rt0.c2)))))AND(HEX(t0.c0)))) ORDER BY CAST('' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(((t1.c0)IS NOT(rt0.c2)))))AND(HEX(t0.c0)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CAST('' AS NUMERIC) ASC);
SELECT * FROM rt0, t0, t1 WHERE (((((rt0.c1)AND(((t1.c0)IS NOT(rt0.c2)))))AND(HEX(t0.c0)))) ORDER BY CAST('' AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN t0 WHERE (((((((((t0.c0)AND(t1.c0)))AND(t0.c0)))AND(((t1.c0)!=(t0.c0)))))OR('' COLLATE BINARY))) ORDER BY (NOT (UNICODE(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(t1.c0)))AND(t0.c0)))AND(((t1.c0)<>(t0.c0)))))OR('' COLLATE BINARY))) IS TRUE)  as count FROM t1 NATURAL JOIN t0 ORDER BY (NOT (UNICODE(t0.c0))) ASC);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN t0 WHERE (((((((((t0.c0)AND(t1.c0)))AND(t0.c0)))AND(((t1.c0)!=(t0.c0)))))OR('' COLLATE BINARY))) ORDER BY (NOT (UNICODE(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(t1.c0)))AND(t0.c0)))AND(((t1.c0)<>(t0.c0)))))OR('' COLLATE BINARY))) IS TRUE)  as count FROM t1 NATURAL JOIN t0 ORDER BY (NOT (UNICODE(t0.c0))) ASC);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN t0 WHERE (((((((((t0.c0)AND(t1.c0)))AND(t0.c0)))AND(((t1.c0)!=(t0.c0)))))OR('' COLLATE BINARY))) ORDER BY (NOT (UNICODE(t0.c0))) ASC;
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))>>((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))>>((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))>>((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))>>((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))>>((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT * FROM t0, rt0, t1 WHERE ((((((t0.c0))==((t1.c0))))&((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))=((t1.c0))))&((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE ((((((t0.c0))==((t1.c0))))&((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))=((t1.c0))))&((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE ((((((t0.c0))==((t1.c0))))&((rt0.c1 IN ()))));
SELECT * FROM t1, rt0 WHERE ((((NULL)>>(rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((NOT (rt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)>>(rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((NOT (rt0.c0))) NOTNULL) DESC);
SELECT * FROM t1, rt0 WHERE ((((NULL)>>(rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((NOT (rt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)>>(rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((NOT (rt0.c0))) NOTNULL) DESC);
SELECT * FROM t1, rt0 WHERE ((((NULL)>>(rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((NOT (rt0.c0))) NOTNULL) DESC;
SELECT * FROM t0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0.1903272085617539 END)>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, 0x60fa9559;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0.1903272085617539 END)>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, 0x60fa9559);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0.1903272085617539 END)>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, 0x60fa9559;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0.1903272085617539 END)>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, 0x60fa9559);
SELECT * FROM t1 WHERE (((((t1.c0)||(t1.c0)))>>(((t1.c0)GLOB(t1.c0))))) ORDER BY RTRIM(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)||(t1.c0)))>>(((t1.c0)GLOB(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY RTRIM(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c0)||(t1.c0)))>>(((t1.c0)GLOB(t1.c0))))) ORDER BY RTRIM(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)||(t1.c0)))>>(((t1.c0)GLOB(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY RTRIM(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c0)||(t1.c0)))>>(((t1.c0)GLOB(t1.c0))))) ORDER BY RTRIM(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 INDEXED BY i91, t1 WHERE (((t0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 INDEXED BY i91, t1);
SELECT COUNT(*) FROM t0, rt0 INDEXED BY i91, t1 WHERE (((t0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 INDEXED BY i91, t1);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON 0.7838270620885349 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) ORDER BY (((- (rt0.c1)))<=(((t1.c0)<<(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON 0.7838270620885349 ORDER BY (((- (rt0.c1)))<=(((t1.c0)<<(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON 0.7838270620885349 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) ORDER BY (((- (rt0.c1)))<=(((t1.c0)<<(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON 0.7838270620885349 ORDER BY (((- (rt0.c1)))<=(((t1.c0)<<(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON 0.7838270620885349 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) ORDER BY (((- (rt0.c1)))<=(((t1.c0)<<(rt0.c0)))) ASC;
SELECT ALL * FROM rt0, t0, t1 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL * FROM rt0, t0, t1 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, t1);
SELECT ALL * FROM rt0, t0, t1 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (LIKELIHOOD(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, 0.459503069080771)) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)/('6N')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, 0.459503069080771)) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)/('6N')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (LIKELIHOOD(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, 0.459503069080771)) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)/('6N')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, 0.459503069080771)) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)/('6N')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (LIKELIHOOD(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, 0.459503069080771)) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)/('6N')) ASC  NULLS LAST;
SELECT ALL * FROM t1, t0 WHERE (0.8020297306655328) ORDER BY t1.c0 DESC  NULLS LAST, ((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)>>(t0.c0))) AND (t1.c0 COLLATE RTRIM)) DESC, ((((t1.c0)|(t0.c0)))>>(RTRIM(t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8020297306655328) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 DESC  NULLS LAST, ((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)>>(t0.c0))) AND (t1.c0 COLLATE RTRIM)) DESC, ((((t1.c0)|(t0.c0)))>>(RTRIM(t1.c0))) ASC);
SELECT ALL * FROM t1, t0 WHERE (0.8020297306655328) ORDER BY t1.c0 DESC  NULLS LAST, ((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)>>(t0.c0))) AND (t1.c0 COLLATE RTRIM)) DESC, ((((t1.c0)|(t0.c0)))>>(RTRIM(t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8020297306655328) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 DESC  NULLS LAST, ((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)>>(t0.c0))) AND (t1.c0 COLLATE RTRIM)) DESC, ((((t1.c0)|(t0.c0)))>>(RTRIM(t1.c0))) ASC);
SELECT ALL * FROM t1, t0 WHERE (0.8020297306655328) ORDER BY t1.c0 DESC  NULLS LAST, ((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)>>(t0.c0))) AND (t1.c0 COLLATE RTRIM)) DESC, ((((t1.c0)|(t0.c0)))>>(RTRIM(t1.c0))) ASC;
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((((t1.c0)&(rt0.c0))) NOTNULL)) ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)&(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((((t1.c0)&(rt0.c0))) NOTNULL)) ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)&(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((((t1.c0)&(rt0.c0))) NOTNULL)) ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (COALESCE(t1.c0, t1.c0)))) ORDER BY CASE ((t1.c0) IS TRUE)  WHEN t1.c0 THEN IFNULL(DISTINCT t1.c0, t1.c0) ELSE 'w0H{[]蒈PC' END, 'tC''3]*b7'  NULLS LAST, CAST((+ (t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(t1.c0, t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c0) IS TRUE)  WHEN t1.c0 THEN IFNULL(DISTINCT t1.c0, t1.c0) ELSE 'w0H{[]蒈PC' END, 'tC''3]*b7'  NULLS LAST, CAST((+ (t1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (COALESCE(t1.c0, t1.c0)))) ORDER BY CASE ((t1.c0) IS TRUE)  WHEN t1.c0 THEN IFNULL(DISTINCT t1.c0, t1.c0) ELSE 'w0H{[]蒈PC' END, 'tC''3]*b7'  NULLS LAST, CAST((+ (t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(t1.c0, t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c0) IS TRUE)  WHEN t1.c0 THEN IFNULL(DISTINCT t1.c0, t1.c0) ELSE 'w0H{[]蒈PC' END, 'tC''3]*b7'  NULLS LAST, CAST((+ (t1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (COALESCE(t1.c0, t1.c0)))) ORDER BY CASE ((t1.c0) IS TRUE)  WHEN t1.c0 THEN IFNULL(DISTINCT t1.c0, t1.c0) ELSE 'w0H{[]蒈PC' END, 'tC''3]*b7'  NULLS LAST, CAST((+ (t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((+ (t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((+ (t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((+ (t1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN t0.c0 THEN x'' END END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN t0.c0 THEN x'' END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN t0.c0 THEN x'' END END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN t0.c0 THEN x'' END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN t0.c0 THEN x'' END END);
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN t1 ON CAST(0.9649834653021475 AS TEXT) WHERE (((((- (rt0.c1)), ((t1.c0)LIKE(rt0.c0)), ''))<=((t1.c0 COLLATE BINARY, ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), NULL COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c1)), ((t1.c0)LIKE(rt0.c0)), ''))<=((t1.c0 COLLATE BINARY, ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), NULL COLLATE RTRIM)))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN t1 ON CAST(0.9649834653021475 AS TEXT));
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN t1 ON CAST(0.9649834653021475 AS TEXT) WHERE (((((- (rt0.c1)), ((t1.c0)LIKE(rt0.c0)), ''))<=((t1.c0 COLLATE BINARY, ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), NULL COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c1)), ((t1.c0)LIKE(rt0.c0)), ''))<=((t1.c0 COLLATE BINARY, ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), NULL COLLATE RTRIM)))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN t1 ON CAST(0.9649834653021475 AS TEXT));
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN t1 ON CAST(0.9649834653021475 AS TEXT) WHERE (((((- (rt0.c1)), ((t1.c0)LIKE(rt0.c0)), ''))<=((t1.c0 COLLATE BINARY, ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), NULL COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN t1 WHERE (t0.c0) ORDER BY LIKE(((('-1958748959', t1.c0, t1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((t1.c0, t0.c0, rt0.c1))), ((rt0.c1)=(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN t1 ORDER BY LIKE(((('-1958748959', t1.c0, t1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((t1.c0, t0.c0, rt0.c1))), ((rt0.c1)==(rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN t1 WHERE (t0.c0) ORDER BY LIKE(((('-1958748959', t1.c0, t1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((t1.c0, t0.c0, rt0.c1))), ((rt0.c1)=(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN t1 ORDER BY LIKE(((('-1958748959', t1.c0, t1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((t1.c0, t0.c0, rt0.c1))), ((rt0.c1)==(rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN t1 WHERE (t0.c0) ORDER BY LIKE(((('-1958748959', t1.c0, t1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((t1.c0, t0.c0, rt0.c1))), ((rt0.c1)=(rt0.c0)))  NULLS FIRST;
SELECT ALL * FROM rt0, t1, t0 WHERE (((((rt0.c0)|(t0.c0))) NOT BETWEEN ((((t0.c0, NULL, rt0.c2))>=((rt0.c1, t0.c0, rt0.c2)))) AND (LOWER(DISTINCT rt0.c0)))) ORDER BY ((json_patch(t1.c0, rt0.c1))!=((((t1.c0))<>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(t0.c0))) NOT BETWEEN ((((t0.c0, NULL, rt0.c2))>=((rt0.c1, t0.c0, rt0.c2)))) AND (LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY ((json_patch(t1.c0, rt0.c1))!=((((t1.c0))<>((rt0.c0))))));
SELECT ALL * FROM rt0, t1, t0 WHERE (((((rt0.c0)|(t0.c0))) NOT BETWEEN ((((t0.c0, NULL, rt0.c2))>=((rt0.c1, t0.c0, rt0.c2)))) AND (LOWER(DISTINCT rt0.c0)))) ORDER BY ((json_patch(t1.c0, rt0.c1))!=((((t1.c0))<>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(t0.c0))) NOT BETWEEN ((((t0.c0, NULL, rt0.c2))>=((rt0.c1, t0.c0, rt0.c2)))) AND (LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY ((json_patch(t1.c0, rt0.c1))!=((((t1.c0))<>((rt0.c0))))));
SELECT ALL * FROM rt0, t1, t0 WHERE (((((rt0.c0)|(t0.c0))) NOT BETWEEN ((((t0.c0, NULL, rt0.c2))>=((rt0.c1, t0.c0, rt0.c2)))) AND (LOWER(DISTINCT rt0.c0)))) ORDER BY ((json_patch(t1.c0, rt0.c1))!=((((t1.c0))<>((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(0.8324781577452034)))<=(((rt0.c2)<=(rt0.c0))))) ORDER BY ((((x'b24e') NOT NULL))%(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(0.8324781577452034)))<=(((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'b24e') NOT NULL))%(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(0.8324781577452034)))<=(((rt0.c2)<=(rt0.c0))))) ORDER BY ((((x'b24e') NOT NULL))%(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(0.8324781577452034)))<=(((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'b24e') NOT NULL))%(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(0.8324781577452034)))<=(((rt0.c2)<=(rt0.c0))))) ORDER BY ((((x'b24e') NOT NULL))%(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((json_valid(t0.c0))-(((x'e465') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((json_valid(t0.c0))-(((x'e465') NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((json_valid(t0.c0))-(((x'e465') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((json_valid(t0.c0))-(((x'e465') NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((json_valid(t0.c0))-(((x'e465') NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE ((((rt0.c0 IN (rt0.c1, 469843858))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1, 469843858))) ISNULL)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE ((((rt0.c0 IN (rt0.c1, 469843858))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1, 469843858))) ISNULL)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE ((((rt0.c0 IN (rt0.c1, 469843858))) ISNULL));
SELECT ALL * FROM t1, rt0 WHERE ((- (1.33136841E9)));
SELECT SUM(count) FROM (SELECT (((- (1.33136841E9))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((- (1.33136841E9)));
SELECT SUM(count) FROM (SELECT (((- (1.33136841E9))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((- (1.33136841E9)));
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN t0 WHERE (((NULL) ISNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST, (NOT (((t1.c0)!=(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN t0 ORDER BY rt0.c2 DESC  NULLS FIRST, (NOT (((t1.c0)<>(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN t0 WHERE (((NULL) ISNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST, (NOT (((t1.c0)!=(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN t0 ORDER BY rt0.c2 DESC  NULLS FIRST, (NOT (((t1.c0)<>(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN t0 WHERE (((NULL) ISNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST, (NOT (((t1.c0)!=(t0.c0)))) ASC;
SELECT * FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC));
SELECT * FROM t1 WHERE (CAST(((t1.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0) IS TRUE) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((t1.c0, rt0.c1, t1.c0))==((t1.c0, rt0.c0, rt0.c2))), t1.c0) LEFT OUTER JOIN t0 ON t0.c0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((t1.c0, rt0.c1, t1.c0))=((t1.c0, rt0.c0, rt0.c2))), t1.c0) LEFT OUTER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((t1.c0, rt0.c1, t1.c0))==((t1.c0, rt0.c0, rt0.c2))), t1.c0) LEFT OUTER JOIN t0 ON t0.c0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((t1.c0, rt0.c1, t1.c0))=((t1.c0, rt0.c0, rt0.c2))), t1.c0) LEFT OUTER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON LTRIM((((t1.c0, rt0.c1, t1.c0))==((t1.c0, rt0.c0, rt0.c2))), t1.c0) LEFT OUTER JOIN t0 ON t0.c0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((-999634669))))<<(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((-999634669))))<<(rt0.c2))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((-999634669))))<<(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((-999634669))))<<(rt0.c2))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((-999634669))))<<(rt0.c2)));
SELECT ALL * FROM t0 WHERE (((0.758762238370072)>=(CASE WHEN t0.c0 THEN 0.9181350796111555 END))) ORDER BY (((0.7483858014374422)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((0.758762238370072)>=(CASE WHEN t0.c0 THEN 0.9181350796111555 END))) IS TRUE)  as count FROM t0 ORDER BY (((0.7483858014374422)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((0.758762238370072)>=(CASE WHEN t0.c0 THEN 0.9181350796111555 END))) ORDER BY (((0.7483858014374422)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((0.758762238370072)>=(CASE WHEN t0.c0 THEN 0.9181350796111555 END))) IS TRUE)  as count FROM t0 ORDER BY (((0.7483858014374422)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((0.758762238370072)>=(CASE WHEN t0.c0 THEN 0.9181350796111555 END))) ORDER BY (((0.7483858014374422)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE (((((((((UPPER(DISTINCT t1.c0))OR(((rt0.c1)AND(t1.c0)))))OR(((rt0.c0) ISNULL))))OR(((t0.c0)-(rt0.c2)))))AND(load_extension(t1.c0)))) ORDER BY (+ (((rt0.c2) IS TRUE)))  NULLS LAST, GLOB((NOT (t1.c0)), 0.7190619325530416)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((UPPER(DISTINCT t1.c0))OR(((rt0.c1)AND(t1.c0)))))OR(((rt0.c0) ISNULL))))OR(((t0.c0)-(rt0.c2)))))AND(load_extension(t1.c0)))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (+ (((rt0.c2) IS TRUE)))  NULLS LAST, GLOB((NOT (t1.c0)), 0.7190619325530416)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE (((((((((UPPER(DISTINCT t1.c0))OR(((rt0.c1)AND(t1.c0)))))OR(((rt0.c0) ISNULL))))OR(((t0.c0)-(rt0.c2)))))AND(load_extension(t1.c0)))) ORDER BY (+ (((rt0.c2) IS TRUE)))  NULLS LAST, GLOB((NOT (t1.c0)), 0.7190619325530416)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((UPPER(DISTINCT t1.c0))OR(((rt0.c1)AND(t1.c0)))))OR(((rt0.c0) ISNULL))))OR(((t0.c0)-(rt0.c2)))))AND(load_extension(t1.c0)))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (+ (((rt0.c2) IS TRUE)))  NULLS LAST, GLOB((NOT (t1.c0)), 0.7190619325530416)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE (((((((((UPPER(DISTINCT t1.c0))OR(((rt0.c1)AND(t1.c0)))))OR(((rt0.c0) ISNULL))))OR(((t0.c0)-(rt0.c2)))))AND(load_extension(t1.c0)))) ORDER BY (+ (((rt0.c2) IS TRUE)))  NULLS LAST, GLOB((NOT (t1.c0)), 0.7190619325530416)  NULLS LAST;
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c0) ISNULL))) WHERE (CASE WHEN (x'' IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(NULL)) END) ORDER BY ((((rt0.c0)OR(rt0.c1)))==(CAST(rt0.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (x'' IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(NULL)) END) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c0) ISNULL))) ORDER BY ((((rt0.c0)OR(rt0.c1)))=(CAST(rt0.c1 AS TEXT))) ASC);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c0) ISNULL))) WHERE (CASE WHEN (x'' IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(NULL)) END) ORDER BY ((((rt0.c0)OR(rt0.c1)))==(CAST(rt0.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (x'' IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(NULL)) END) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c0) ISNULL))) ORDER BY ((((rt0.c0)OR(rt0.c1)))=(CAST(rt0.c1 AS TEXT))) ASC);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c0) ISNULL))) WHERE (CASE WHEN (x'' IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(NULL)) END) ORDER BY ((((rt0.c0)OR(rt0.c1)))==(CAST(rt0.c1 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((((rt0.c0)OR(t0.c0)))AND(rt0.c2))) NOT NULL)) ORDER BY CAST(((rt0.c2) IS TRUE) AS BLOB), (~ (rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(t0.c0)))AND(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY CAST(((rt0.c2) IS TRUE) AS BLOB), (~ (rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((((rt0.c0)OR(t0.c0)))AND(rt0.c2))) NOT NULL)) ORDER BY CAST(((rt0.c2) IS TRUE) AS BLOB), (~ (rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(t0.c0)))AND(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY CAST(((rt0.c2) IS TRUE) AS BLOB), (~ (rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((((rt0.c0)OR(t0.c0)))AND(rt0.c2))) NOT NULL)) ORDER BY CAST(((rt0.c2) IS TRUE) AS BLOB), (~ (rt0.c0 COLLATE RTRIM));
SELECT * FROM t1, t0, rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c1 END)AND(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c2)))))OR(x'723f' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c1 END)AND(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c2)))))OR(x'723f' COLLATE NOCASE))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT * FROM t1, t0, rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c1 END)AND(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c2)))))OR(x'723f' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c1 END)AND(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c2)))))OR(x'723f' COLLATE NOCASE))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT * FROM t1, t0, rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c1 END)AND(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c2)))))OR(x'723f' COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON x'' WHERE (HEX(DISTINCT ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON x'');
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON x'' WHERE (HEX(DISTINCT ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON x'');
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON x'' WHERE (HEX(DISTINCT ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))));
SELECT COUNT(*) FROM t1, t0 WHERE (SQLITE_VERSION()) ORDER BY (((t0.c0, t1.c0, t0.c0, NULL, NULL)) BETWEEN ((((t0.c0)<<(t1.c0)), ((NULL)/(t0.c0)), 1.7976931348623157E308, TYPEOF(t1.c0), (t1.c0 IN ()))) AND ((CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)!=(t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), '5', CASE 0.7510923731689566  WHEN t0.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t1, t0 ORDER BY (((t0.c0, t1.c0, t0.c0, NULL, NULL)) BETWEEN ((((t0.c0)<<(t1.c0)), ((NULL)/(t0.c0)), 1.7976931348623157E308, TYPEOF(t1.c0), (t1.c0 IN ()))) AND ((CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)!=(t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), '5', CASE 0.7510923731689566  WHEN t0.c0 THEN t1.c0 END))));
SELECT COUNT(*) FROM t1, t0 WHERE (SQLITE_VERSION()) ORDER BY (((t0.c0, t1.c0, t0.c0, NULL, NULL)) BETWEEN ((((t0.c0)<<(t1.c0)), ((NULL)/(t0.c0)), 1.7976931348623157E308, TYPEOF(t1.c0), (t1.c0 IN ()))) AND ((CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)!=(t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), '5', CASE 0.7510923731689566  WHEN t0.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t1, t0 ORDER BY (((t0.c0, t1.c0, t0.c0, NULL, NULL)) BETWEEN ((((t0.c0)<<(t1.c0)), ((NULL)/(t0.c0)), 1.7976931348623157E308, TYPEOF(t1.c0), (t1.c0 IN ()))) AND ((CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)!=(t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), '5', CASE 0.7510923731689566  WHEN t0.c0 THEN t1.c0 END))));
SELECT COUNT(*) FROM t1, t0 WHERE (SQLITE_VERSION()) ORDER BY (((t0.c0, t1.c0, t0.c0, NULL, NULL)) BETWEEN ((((t0.c0)<<(t1.c0)), ((NULL)/(t0.c0)), 1.7976931348623157E308, TYPEOF(t1.c0), (t1.c0 IN ()))) AND ((CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)!=(t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), '5', CASE 0.7510923731689566  WHEN t0.c0 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM t1 WHERE (LOWER(t1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LOWER(t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (LOWER(t1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LOWER(t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (LOWER(t1.c0 COLLATE RTRIM));
SELECT ALL * FROM t0, t1 WHERE (UPPER(json_quote(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(json_quote(t1.c0))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (UPPER(json_quote(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(json_quote(t1.c0))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, rt0, t1 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((x'')<(NULL)) THEN ((rt0.c0)!=('-979355231')) ELSE ((rt0.c1)<=(rt0.c0)) END ASC  NULLS FIRST, ((((t1.c0)OR(rt0.c2)))AND(x'')) COLLATE BINARY, CASE WHEN ((rt0.c0) NOTNULL) THEN NULL ELSE ((t1.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY CASE WHEN ((x'')<(NULL)) THEN ((rt0.c0)!=('-979355231')) ELSE ((rt0.c1)<=(rt0.c0)) END ASC  NULLS FIRST, ((((t1.c0)OR(rt0.c2)))AND(x'')) COLLATE BINARY, CASE WHEN ((rt0.c0) NOTNULL) THEN NULL ELSE ((t1.c0) IS TRUE) END);
SELECT * FROM t0, rt0, t1 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((x'')<(NULL)) THEN ((rt0.c0)!=('-979355231')) ELSE ((rt0.c1)<=(rt0.c0)) END ASC  NULLS FIRST, ((((t1.c0)OR(rt0.c2)))AND(x'')) COLLATE BINARY, CASE WHEN ((rt0.c0) NOTNULL) THEN NULL ELSE ((t1.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY CASE WHEN ((x'')<(NULL)) THEN ((rt0.c0)!=('-979355231')) ELSE ((rt0.c1)<=(rt0.c0)) END ASC  NULLS FIRST, ((((t1.c0)OR(rt0.c2)))AND(x'')) COLLATE BINARY, CASE WHEN ((rt0.c0) NOTNULL) THEN NULL ELSE ((t1.c0) IS TRUE) END);
SELECT * FROM t0, rt0, t1 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((x'')<(NULL)) THEN ((rt0.c0)!=('-979355231')) ELSE ((rt0.c1)<=(rt0.c0)) END ASC  NULLS FIRST, ((((t1.c0)OR(rt0.c2)))AND(x'')) COLLATE BINARY, CASE WHEN ((rt0.c0) NOTNULL) THEN NULL ELSE ((t1.c0) IS TRUE) END;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)<(t0.c0)))LIKE((- (t0.c0))))) ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' COLLATE RTRIM THEN '-2106762159' ELSE NULL END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c0)))LIKE((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' COLLATE RTRIM THEN '-2106762159' ELSE NULL END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)<(t0.c0)))LIKE((- (t0.c0))))) ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' COLLATE RTRIM THEN '-2106762159' ELSE NULL END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c0)))LIKE((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' COLLATE RTRIM THEN '-2106762159' ELSE NULL END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)<(t0.c0)))LIKE((- (t0.c0))))) ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' COLLATE RTRIM THEN '-2106762159' ELSE NULL END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (('-1301517642' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1301517642' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (('-1301517642' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1301517642' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (('-1301517642' IN ()));
SELECT COUNT(*) FROM t1, rt0, t0 WHERE ((~ (((rt0.c1)AND(x''))))) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c2)<>(rt0.c0))))) DESC  NULLS LAST, UPPER(((t0.c0)AND(rt0.c2))), CASE WHEN 0.2657886133293875 THEN ((t0.c0) BETWEEN (rt0.c2) AND (t1.c0)) WHEN CASE '*\LB蘬(''NK'  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LOWER('%Aaq~]>蹌') WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (t1.c0 IN (rt0.c2)) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN CASE WHEN -3.03063959E8 THEN 0X7f2a19c1 ELSE t1.c0 END THEN ((t1.c0)!=(rt0.c1)) WHEN t0.c0 COLLATE BINARY THEN NULL WHEN ((t1.c0)>(rt0.c2)) THEN TRIM(DISTINCT rt0.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)AND(x''))))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c2)!=(rt0.c0))))) DESC  NULLS LAST, UPPER(((t0.c0)AND(rt0.c2))), CASE WHEN 0.2657886133293875 THEN ((t0.c0) BETWEEN (rt0.c2) AND (t1.c0)) WHEN CASE '*\LB蘬(''NK'  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LOWER('%Aaq~]>蹌') WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (t1.c0 IN (rt0.c2)) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN CASE WHEN -3.03063959E8 THEN 0X7f2a19c1 ELSE t1.c0 END THEN ((t1.c0)<>(rt0.c1)) WHEN t0.c0 COLLATE BINARY THEN NULL WHEN ((t1.c0)>(rt0.c2)) THEN TRIM(DISTINCT rt0.c0) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, t0 WHERE ((~ (((rt0.c1)AND(x''))))) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c2)<>(rt0.c0))))) DESC  NULLS LAST, UPPER(((t0.c0)AND(rt0.c2))), CASE WHEN 0.2657886133293875 THEN ((t0.c0) BETWEEN (rt0.c2) AND (t1.c0)) WHEN CASE '*\LB蘬(''NK'  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LOWER('%Aaq~]>蹌') WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (t1.c0 IN (rt0.c2)) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN CASE WHEN -3.03063959E8 THEN 0X7f2a19c1 ELSE t1.c0 END THEN ((t1.c0)!=(rt0.c1)) WHEN t0.c0 COLLATE BINARY THEN NULL WHEN ((t1.c0)>(rt0.c2)) THEN TRIM(DISTINCT rt0.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)AND(x''))))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c2)!=(rt0.c0))))) DESC  NULLS LAST, UPPER(((t0.c0)AND(rt0.c2))), CASE WHEN 0.2657886133293875 THEN ((t0.c0) BETWEEN (rt0.c2) AND (t1.c0)) WHEN CASE '*\LB蘬(''NK'  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LOWER('%Aaq~]>蹌') WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (t1.c0 IN (rt0.c2)) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN CASE WHEN -3.03063959E8 THEN 0X7f2a19c1 ELSE t1.c0 END THEN ((t1.c0)<>(rt0.c1)) WHEN t0.c0 COLLATE BINARY THEN NULL WHEN ((t1.c0)>(rt0.c2)) THEN TRIM(DISTINCT rt0.c0) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, t0 WHERE ((~ (((rt0.c1)AND(x''))))) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c2)<>(rt0.c0))))) DESC  NULLS LAST, UPPER(((t0.c0)AND(rt0.c2))), CASE WHEN 0.2657886133293875 THEN ((t0.c0) BETWEEN (rt0.c2) AND (t1.c0)) WHEN CASE '*\LB蘬(''NK'  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LOWER('%Aaq~]>蹌') WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))) WHEN (t1.c0 IN (rt0.c2)) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN CASE WHEN -3.03063959E8 THEN 0X7f2a19c1 ELSE t1.c0 END THEN ((t1.c0)!=(rt0.c1)) WHEN t0.c0 COLLATE BINARY THEN NULL WHEN ((t1.c0)>(rt0.c2)) THEN TRIM(DISTINCT rt0.c0) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(0.013433467275029698 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.013433467275029698 AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(0.013433467275029698 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.013433467275029698 AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(0.013433467275029698 AS BLOB));
SELECT ALL * FROM t0, t1, rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL * FROM t0, t1, rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL * FROM t0, t1, rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)<>(t0.c0)))-((('0.6835613446569182')<=(t0.c0)))), (((~ (x''))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND ((+ (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)!=(t0.c0)))-((('0.6835613446569182')<=(t0.c0)))), (((~ (x''))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND ((+ (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)<>(t0.c0)))-((('0.6835613446569182')<=(t0.c0)))), (((~ (x''))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND ((+ (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)!=(t0.c0)))-((('0.6835613446569182')<=(t0.c0)))), (((~ (x''))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND ((+ (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)<>(t0.c0)))-((('0.6835613446569182')<=(t0.c0)))), (((~ (x''))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND ((+ (t0.c0))))  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN t0 ON NULL WHERE (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON NULL);
SELECT * FROM rt0 CROSS JOIN t0 ON NULL WHERE (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON NULL);
SELECT * FROM rt0 CROSS JOIN t0 ON NULL WHERE (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)<=(t1.c0)) COLLATE NOCASE) ORDER BY ((((CAST(t1.c0 AS INTEGER))OR(json_quote(t1.c0))))AND(ABS(t1.c0)))  NULLS FIRST, ((((t1.c0 COLLATE NOCASE)OR(0.5066338771256498)))AND((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<=(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((CAST(t1.c0 AS INTEGER))OR(json_quote(t1.c0))))AND(ABS(t1.c0)))  NULLS FIRST, ((((t1.c0 COLLATE NOCASE)OR(0.5066338771256498)))AND((t1.c0 IN ()))));
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)<=(t1.c0)) COLLATE NOCASE) ORDER BY ((((CAST(t1.c0 AS INTEGER))OR(json_quote(t1.c0))))AND(ABS(t1.c0)))  NULLS FIRST, ((((t1.c0 COLLATE NOCASE)OR(0.5066338771256498)))AND((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<=(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((CAST(t1.c0 AS INTEGER))OR(json_quote(t1.c0))))AND(ABS(t1.c0)))  NULLS FIRST, ((((t1.c0 COLLATE NOCASE)OR(0.5066338771256498)))AND((t1.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c1))))AND(((rt0.c1)<(')')))))OR(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c1))))AND(((rt0.c1)<(')')))))OR(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c1))))AND(((rt0.c1)<(')')))))OR(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c1))))AND(((rt0.c1)<(')')))))OR(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c1))))AND(((rt0.c1)<(')')))))OR(rt0.c2 COLLATE RTRIM));
SELECT ALL * FROM rt0, t1, t0 WHERE ((CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0, t1, t0 WHERE ((CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0, t1, t0 WHERE ((CASE rt0.c1  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((((-1648757150) NOT NULL))-((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1648757150) NOT NULL))-((t1.c0 IN ())))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((((-1648757150) NOT NULL))-((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1648757150) NOT NULL))-((t1.c0 IN ())))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((((-1648757150) NOT NULL))-((t1.c0 IN ()))));
SELECT * FROM t1, t0, rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY (((rt0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ()) ASC  NULLS FIRST);
SELECT * FROM t1, t0, rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY (((rt0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ()) ASC  NULLS FIRST);
SELECT * FROM t1, t0, rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN t1 ON t0.c0 CROSS JOIN t0 ON ((rt0.c1 COLLATE BINARY)LIKE(t1.c0 COLLATE NOCASE)) WHERE ((((t1.c0)) BETWEEN ((t1.c0)) AND ((CAST(t1.c0 AS BLOB))))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN (STRFTIME(NULL, rt0.c2, t0.c0, rt0.c2, rt0.c0)) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) BETWEEN ((t1.c0)) AND ((CAST(t1.c0 AS BLOB))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON t0.c0 CROSS JOIN t0 ON ((rt0.c1 COLLATE BINARY)LIKE(t1.c0 COLLATE NOCASE)) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN (STRFTIME(NULL, rt0.c2, t0.c0, rt0.c2, rt0.c0)) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t1 ON t0.c0 CROSS JOIN t0 ON ((rt0.c1 COLLATE BINARY)LIKE(t1.c0 COLLATE NOCASE)) WHERE ((((t1.c0)) BETWEEN ((t1.c0)) AND ((CAST(t1.c0 AS BLOB))))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN (STRFTIME(NULL, rt0.c2, t0.c0, rt0.c2, rt0.c0)) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) BETWEEN ((t1.c0)) AND ((CAST(t1.c0 AS BLOB))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON t0.c0 CROSS JOIN t0 ON ((rt0.c1 COLLATE BINARY)LIKE(t1.c0 COLLATE NOCASE)) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN (STRFTIME(NULL, rt0.c2, t0.c0, rt0.c2, rt0.c0)) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t1 ON t0.c0 CROSS JOIN t0 ON ((rt0.c1 COLLATE BINARY)LIKE(t1.c0 COLLATE NOCASE)) WHERE ((((t1.c0)) BETWEEN ((t1.c0)) AND ((CAST(t1.c0 AS BLOB))))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN (STRFTIME(NULL, rt0.c2, t0.c0, rt0.c2, rt0.c0)) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT * FROM rt0 NOT INDEXED, t1, t0 WHERE ((((((((((rt0.c1)OR(t0.c0)))OR(t1.c0)))OR(t1.c0)))AND(t0.c0)) IN ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(t0.c0)))OR(t1.c0)))OR(t1.c0)))AND(t0.c0)) IN ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0 NOT INDEXED, t1, t0 WHERE ((((((((((rt0.c1)OR(t0.c0)))OR(t1.c0)))OR(t1.c0)))AND(t0.c0)) IN ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(t0.c0)))OR(t1.c0)))OR(t1.c0)))AND(t0.c0)) IN ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, t1, t0);
SELECT * FROM rt0 NOT INDEXED, t1, t0 WHERE ((((((((((rt0.c1)OR(t0.c0)))OR(t1.c0)))OR(t1.c0)))AND(t0.c0)) IN ((rt0.c2 IN ()))));
SELECT * FROM t1, t0, rt0 WHERE ((((t1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))OR(t0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)), ((t0.c0) IS FALSE))) AND ((NULL, CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, ((t1.c0)||(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))OR(t0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)), ((t0.c0) IS FALSE))) AND ((NULL, CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, ((t1.c0)||(rt0.c2)))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT * FROM t1, t0, rt0 WHERE ((((t1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))OR(t0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)), ((t0.c0) IS FALSE))) AND ((NULL, CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, ((t1.c0)||(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))OR(t0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)), ((t0.c0) IS FALSE))) AND ((NULL, CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, ((t1.c0)||(rt0.c2)))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT * FROM t1, t0, rt0 WHERE ((((t1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(t0.c0)))OR(t0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)), ((t0.c0) IS FALSE))) AND ((NULL, CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, ((t1.c0)||(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((((((((NOT (rt0.c2)))OR(CASE WHEN t1.c0 THEN rt0.c0 ELSE 0.8943154872140219 END)))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN x'e475' THEN rt0.c0 ELSE rt0.c1 END)))OR(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) FULL OUTER JOIN t1 ON ((((((((((rt0.c2)OR(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c2)))-((rt0.c1 IN ()))) WHERE (CAST(t1.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((((((NOT (rt0.c2)))OR(CASE WHEN t1.c0 THEN rt0.c0 ELSE 0.8943154872140219 END)))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN x'e475' THEN rt0.c0 ELSE rt0.c1 END)))OR(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) FULL OUTER JOIN t1 ON ((((((((((rt0.c2)OR(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c2)))-((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((((((((NOT (rt0.c2)))OR(CASE WHEN t1.c0 THEN rt0.c0 ELSE 0.8943154872140219 END)))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN x'e475' THEN rt0.c0 ELSE rt0.c1 END)))OR(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) FULL OUTER JOIN t1 ON ((((((((((rt0.c2)OR(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c2)))-((rt0.c1 IN ()))) WHERE (CAST(t1.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((((((NOT (rt0.c2)))OR(CASE WHEN t1.c0 THEN rt0.c0 ELSE 0.8943154872140219 END)))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN x'e475' THEN rt0.c0 ELSE rt0.c1 END)))OR(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) FULL OUTER JOIN t1 ON ((((((((((rt0.c2)OR(t1.c0)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c2)))-((rt0.c1 IN ()))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN x'' ELSE ((rt0.c0)IS(rt0.c0)) END) ORDER BY (((NOT (t0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN x'' ELSE ((rt0.c0)IS(rt0.c0)) END) IS TRUE)  as count FROM t0, t1 NOT INDEXED, rt0 ORDER BY (((NOT (t0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN x'' ELSE ((rt0.c0)IS(rt0.c0)) END) ORDER BY (((NOT (t0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN x'' ELSE ((rt0.c0)IS(rt0.c0)) END) IS TRUE)  as count FROM t0, t1 NOT INDEXED, rt0 ORDER BY (((NOT (t0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN x'' ELSE ((rt0.c0)IS(rt0.c0)) END) ORDER BY (((NOT (t0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM t1, t0, rt0 WHERE ((((t1.c0) IS TRUE) IN (LIKE(NULL, t0.c0)))) ORDER BY rt0.c0  NULLS FIRST, (((t0.c0))!=((rt0.c2))) COLLATE BINARY, x'0956' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) IS TRUE) IN (LIKE(NULL, t0.c0)))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY rt0.c0  NULLS FIRST, (((t0.c0))<>((rt0.c2))) COLLATE BINARY, x'0956' DESC);
SELECT ALL * FROM t1, t0, rt0 WHERE ((((t1.c0) IS TRUE) IN (LIKE(NULL, t0.c0)))) ORDER BY rt0.c0  NULLS FIRST, (((t0.c0))!=((rt0.c2))) COLLATE BINARY, x'0956' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) IS TRUE) IN (LIKE(NULL, t0.c0)))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY rt0.c0  NULLS FIRST, (((t0.c0))<>((rt0.c2))) COLLATE BINARY, x'0956' DESC);
SELECT ALL * FROM t1, t0, rt0 WHERE ((((t1.c0) IS TRUE) IN (LIKE(NULL, t0.c0)))) ORDER BY rt0.c0  NULLS FIRST, (((t0.c0))!=((rt0.c2))) COLLATE BINARY, x'0956' DESC;
SELECT * FROM t1 WHERE ((~ ((- (t1.c0))))) ORDER BY CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN COALESCE(DISTINCT t1.c0, t1.c0) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 COLLATE NOCASE END DESC, ((t1.c0 COLLATE NOCASE) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN COALESCE(DISTINCT t1.c0, t1.c0) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 COLLATE NOCASE END DESC, ((t1.c0 COLLATE NOCASE) NOTNULL) ASC);
SELECT * FROM t1 WHERE ((~ ((- (t1.c0))))) ORDER BY CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN COALESCE(DISTINCT t1.c0, t1.c0) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 COLLATE NOCASE END DESC, ((t1.c0 COLLATE NOCASE) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN COALESCE(DISTINCT t1.c0, t1.c0) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 COLLATE NOCASE END DESC, ((t1.c0 COLLATE NOCASE) NOTNULL) ASC);
SELECT * FROM t1 WHERE ((~ ((- (t1.c0))))) ORDER BY CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN COALESCE(DISTINCT t1.c0, t1.c0) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) ELSE t1.c0 COLLATE NOCASE END DESC, ((t1.c0 COLLATE NOCASE) NOTNULL) ASC;
SELECT ALL * FROM t0, rt0, t1 WHERE (CASE t1.c0  WHEN (- (rt0.c0)) THEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) WHEN UNLIKELY(DISTINCT t1.c0) THEN (((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t1.c0 AS BLOB) THEN ((x'881d')||(t0.c0)) WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0)IS NOT(rt0.c0)) WHEN (((rt0.c2))>((rt0.c1))) THEN ((rt0.c2) BETWEEN (t1.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN (- (rt0.c0)) THEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) WHEN UNLIKELY(DISTINCT t1.c0) THEN (((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t1.c0 AS BLOB) THEN ((x'881d')||(t0.c0)) WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0)IS NOT(rt0.c0)) WHEN (((rt0.c2))>((rt0.c1))) THEN ((rt0.c2) BETWEEN (t1.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE (CASE t1.c0  WHEN (- (rt0.c0)) THEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) WHEN UNLIKELY(DISTINCT t1.c0) THEN (((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t1.c0 AS BLOB) THEN ((x'881d')||(t0.c0)) WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0)IS NOT(rt0.c0)) WHEN (((rt0.c2))>((rt0.c1))) THEN ((rt0.c2) BETWEEN (t1.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN (- (rt0.c0)) THEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) WHEN UNLIKELY(DISTINCT t1.c0) THEN (((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t1.c0 AS BLOB) THEN ((x'881d')||(t0.c0)) WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0)IS NOT(rt0.c0)) WHEN (((rt0.c2))>((rt0.c1))) THEN ((rt0.c2) BETWEEN (t1.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE (CASE t1.c0  WHEN (- (rt0.c0)) THEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) WHEN UNLIKELY(DISTINCT t1.c0) THEN (((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t1.c0 AS BLOB) THEN ((x'881d')||(t0.c0)) WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0)IS NOT(rt0.c0)) WHEN (((rt0.c2))>((rt0.c1))) THEN ((rt0.c2) BETWEEN (t1.c0) AND (rt0.c2)) END);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)+(rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 END ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)+(rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 END ELSE t0.c0 END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)+(rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 END ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)+(rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 END ELSE t0.c0 END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)+(rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 END ELSE t0.c0 END);
SELECT COUNT(*) FROM t1, t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END)OR(((t1.c0)OR(t1.c0)))))OR(((t0.c0)LIKE(t1.c0))))) ORDER BY (((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t1.c0, t1.c0, t1.c0))))/(SQLITE_COMPILEOPTION_USED(t1.c0)))  NULLS FIRST, ((((t0.c0)&(t1.c0)))|(t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END)OR(((t1.c0)OR(t1.c0)))))OR(((t0.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY (((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t1.c0, t1.c0, t1.c0))))/(SQLITE_COMPILEOPTION_USED(t1.c0)))  NULLS FIRST, ((((t0.c0)&(t1.c0)))|(t1.c0))  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END)OR(((t1.c0)OR(t1.c0)))))OR(((t0.c0)LIKE(t1.c0))))) ORDER BY (((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t1.c0, t1.c0, t1.c0))))/(SQLITE_COMPILEOPTION_USED(t1.c0)))  NULLS FIRST, ((((t0.c0)&(t1.c0)))|(t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END)OR(((t1.c0)OR(t1.c0)))))OR(((t0.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY (((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t1.c0, t1.c0, t1.c0))))/(SQLITE_COMPILEOPTION_USED(t1.c0)))  NULLS FIRST, ((((t0.c0)&(t1.c0)))|(t1.c0))  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END)OR(((t1.c0)OR(t1.c0)))))OR(((t0.c0)LIKE(t1.c0))))) ORDER BY (((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t1.c0, t1.c0, t1.c0))))/(SQLITE_COMPILEOPTION_USED(t1.c0)))  NULLS FIRST, ((((t0.c0)&(t1.c0)))|(t1.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.24274894045190465) THEN TOTAL_CHANGES() ELSE (NOT (rt0.c0)) END) ORDER BY (QUOTE(t1.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.24274894045190465) THEN TOTAL_CHANGES() ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY (QUOTE(t1.c0) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.24274894045190465) THEN TOTAL_CHANGES() ELSE (NOT (rt0.c0)) END) ORDER BY (QUOTE(t1.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.24274894045190465) THEN TOTAL_CHANGES() ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY (QUOTE(t1.c0) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.24274894045190465) THEN TOTAL_CHANGES() ELSE (NOT (rt0.c0)) END) ORDER BY (QUOTE(t1.c0) IN ()) ASC;
SELECT * FROM rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c2)>>(rt0.c0)))))OR(((rt0.c1) IS FALSE)))) ORDER BY ((0.1641315304105142)IS((+ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c2)>>(rt0.c0)))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((0.1641315304105142)IS((+ (rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c2)>>(rt0.c0)))))OR(((rt0.c1) IS FALSE)))) ORDER BY ((0.1641315304105142)IS((+ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c2)>>(rt0.c0)))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((0.1641315304105142)IS((+ (rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c2)>>(rt0.c0)))))OR(((rt0.c1) IS FALSE)))) ORDER BY ((0.1641315304105142)IS((+ (rt0.c2)))) DESC;
SELECT COUNT(*) FROM t1, rt0, t0 WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT COUNT(*) FROM t1, rt0, t0 WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT COUNT(*) FROM t1, rt0, t0 WHERE ((~ (rt0.c2)));
SELECT ALL * FROM rt0, t0 WHERE (((((((((LTRIM(rt0.c0))AND(rt0.c2)))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)<(t0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LTRIM(rt0.c0))AND(rt0.c2)))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1)<(t0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((((((LTRIM(rt0.c0))AND(rt0.c2)))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)<(t0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LTRIM(rt0.c0))AND(rt0.c2)))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1)<(t0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((((((LTRIM(rt0.c0))AND(rt0.c2)))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)<(t0.c0))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)<(t0.c0))))>((((t0.c0)IS NOT(t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)<(t0.c0))))>((((t0.c0)IS NOT(t0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)<(t0.c0))))>((((t0.c0)IS NOT(t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)<(t0.c0))))>((((t0.c0)IS NOT(t0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)<(t0.c0))))>((((t0.c0)IS NOT(t0.c0))))) DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((LTRIM(rt0.c0, t1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt0.c0, t1.c0)) IS TRUE)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((LTRIM(rt0.c0, t1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt0.c0, t1.c0)) IS TRUE)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((LTRIM(rt0.c0, t1.c0)) IS TRUE));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, 'Pt', t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, x''))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, 'Pt', t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, x''))) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, 'Pt', t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, x''))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, 'Pt', t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, x''))) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, 'Pt', t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, x''))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, t1 NOT INDEXED WHERE ((NOT (((t0.c0)*(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)*(t0.c0))))) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 NOT INDEXED WHERE ((NOT (((t0.c0)*(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)*(t0.c0))))) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 NOT INDEXED WHERE ((NOT (((t0.c0)*(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS((+ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS((+ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((+ (rt0.c1))));
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) NOTNULL)) ORDER BY ((((rt0.c0) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) NOTNULL)) ORDER BY ((((rt0.c0) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) NOTNULL)) ORDER BY ((((rt0.c0) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))));
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c2, t1.c0, rt0.c1, 0xffffffff98c15de2, t0.c0))!=((rt0.c2, rt0.c2, rt0.c0, 'N\n\r)', t1.c0))))IS(0.5974548734996751)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, t1.c0, rt0.c1, 0xffffffff98c15de2, t0.c0))!=((rt0.c2, rt0.c2, rt0.c0, 'N\n\r)', t1.c0))))IS(0.5974548734996751))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c2, t1.c0, rt0.c1, 0xffffffff98c15de2, t0.c0))!=((rt0.c2, rt0.c2, rt0.c0, 'N\n\r)', t1.c0))))IS(0.5974548734996751)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, t1.c0, rt0.c1, 0xffffffff98c15de2, t0.c0))!=((rt0.c2, rt0.c2, rt0.c0, 'N\n\r)', t1.c0))))IS(0.5974548734996751))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT * FROM t0, t1, rt0 WHERE ((((((rt0.c2, t1.c0, rt0.c1, 0xffffffff98c15de2, t0.c0))!=((rt0.c2, rt0.c2, rt0.c0, 'N\n\r)', t1.c0))))IS(0.5974548734996751)));
SELECT COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOTNULL) ELSE NULL COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOTNULL) ELSE NULL COLLATE RTRIM END) IS TRUE)  as count FROM t0, t1, rt0);
SELECT COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOTNULL) ELSE NULL COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOTNULL) ELSE NULL COLLATE RTRIM END) IS TRUE)  as count FROM t0, t1, rt0);
SELECT COUNT(*) FROM t0, t1, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOTNULL) ELSE NULL COLLATE RTRIM END);
SELECT * FROM t0, t1 WHERE (COALESCE(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))<=((NULL)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))<=((NULL))))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (COALESCE(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))<=((NULL)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))<=((NULL))))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (COALESCE(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))<=((NULL)))));
SELECT ALL * FROM t0, rt0 WHERE (CAST((((rt0.c0))<=(('>DGT'))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))<=(('>DGT'))) AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST((((rt0.c0))<=(('>DGT'))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))<=(('>DGT'))) AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST((((rt0.c0))<=(('>DGT'))) AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((t0.c0 COLLATE BINARY)OR((rt0.c1 IN ()))))AND(x'3bda')))OR('K>a')))OR(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0 COLLATE BINARY)OR((rt0.c1 IN ()))))AND(x'3bda')))OR('K>a')))OR(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((t0.c0 COLLATE BINARY)OR((rt0.c1 IN ()))))AND(x'3bda')))OR('K>a')))OR(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0 COLLATE BINARY)OR((rt0.c1 IN ()))))AND(x'3bda')))OR('K>a')))OR(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((t0.c0 COLLATE BINARY)OR((rt0.c1 IN ()))))AND(x'3bda')))OR('K>a')))OR(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(((rt0.c1) IS TRUE))));
SELECT ALL * FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 END)%(((t0.c0) NOTNULL)))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN t0.c0 THEN t0.c0 END)%(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 END)%(((t0.c0) NOTNULL)))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN t0.c0 THEN t0.c0 END)%(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 END)%(((t0.c0) NOTNULL)))) ORDER BY t0.c0  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON TYPEOF(NULL) LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) COLLATE BINARY WHERE (((CASE x''  WHEN rt0.c0 THEN t0.c0 END)<<(((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN rt0.c0 THEN t0.c0 END)<<(((((rt0.c2)AND(rt0.c1)))AND(t1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON TYPEOF(NULL) LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) COLLATE BINARY);
SELECT * FROM t1 LEFT OUTER JOIN t0 ON TYPEOF(NULL) LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) COLLATE BINARY WHERE (((CASE x''  WHEN rt0.c0 THEN t0.c0 END)<<(((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN rt0.c0 THEN t0.c0 END)<<(((((rt0.c2)AND(rt0.c1)))AND(t1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON TYPEOF(NULL) LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) COLLATE BINARY);
SELECT * FROM t1 LEFT OUTER JOIN t0 ON TYPEOF(NULL) LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) COLLATE BINARY WHERE (((CASE x''  WHEN rt0.c0 THEN t0.c0 END)<<(((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))));
SELECT ALL COUNT(*) FROM t0, t1 WHERE ('1757595241');
SELECT SUM(count) FROM (SELECT (('1757595241') IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE ('1757595241');
SELECT SUM(count) FROM (SELECT (('1757595241') IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE ('1757595241');
SELECT ALL * FROM t1, t0 CROSS JOIN rt0 ON (((t1.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c2)))) AND ((rt0.c1))) WHERE (((ABS(rt0.c2)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) ISNULL)))) ORDER BY LOWER(DISTINCT (- (rt0.c2)))  NULLS FIRST, rt0.c1 DESC, ((((((((((t0.c0)AND(t0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))OR(CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c2)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt0 ON (((t1.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c2)))) AND ((rt0.c1))) ORDER BY LOWER(DISTINCT (- (rt0.c2)))  NULLS FIRST, rt0.c1 DESC, ((((((((((t0.c0)AND(t0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))OR(CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)) DESC);
SELECT ALL * FROM t1, t0 CROSS JOIN rt0 ON (((t1.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c2)))) AND ((rt0.c1))) WHERE (((ABS(rt0.c2)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) ISNULL)))) ORDER BY LOWER(DISTINCT (- (rt0.c2)))  NULLS FIRST, rt0.c1 DESC, ((((((((((t0.c0)AND(t0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))OR(CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c2)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt0 ON (((t1.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c2)))) AND ((rt0.c1))) ORDER BY LOWER(DISTINCT (- (rt0.c2)))  NULLS FIRST, rt0.c1 DESC, ((((((((((t0.c0)AND(t0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))OR(CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)) DESC);
SELECT ALL * FROM t1, t0 CROSS JOIN rt0 ON (((t1.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c2)))) AND ((rt0.c1))) WHERE (((ABS(rt0.c2)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) ISNULL)))) ORDER BY LOWER(DISTINCT (- (rt0.c2)))  NULLS FIRST, rt0.c1 DESC, ((((((((((t0.c0)AND(t0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))OR(CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)) DESC;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)<>(((t0.c0)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)<>(((t0.c0)<(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)<>(((t0.c0)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)<>(((t0.c0)<(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)<>(((t0.c0)<(t0.c0)))));
SELECT * FROM rt0 WHERE ((((NOT (rt0.c1)))<=(((rt0.c2)OR(rt0.c1))))) ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1)))<=(((rt0.c2)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c1)))<=(((rt0.c2)OR(rt0.c1))))) ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1)))<=(((rt0.c2)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c1)))<=(((rt0.c2)OR(rt0.c1))))) ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c1))))  NULLS FIRST;
SELECT * FROM t0, rt0, t1 WHERE (((((rt0.c0) BETWEEN (t0.c0) AND (0.270877829475215))) NOT BETWEEN (0.35883673404936156) AND (((rt0.c0) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (t0.c0) AND (0.270877829475215))) NOT BETWEEN (0.35883673404936156) AND (((rt0.c0) NOT BETWEEN (NULL) AND (t1.c0))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE (((((rt0.c0) BETWEEN (t0.c0) AND (0.270877829475215))) NOT BETWEEN (0.35883673404936156) AND (((rt0.c0) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (t0.c0) AND (0.270877829475215))) NOT BETWEEN (0.35883673404936156) AND (((rt0.c0) NOT BETWEEN (NULL) AND (t1.c0))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE (((((rt0.c0) BETWEEN (t0.c0) AND (0.270877829475215))) NOT BETWEEN (0.35883673404936156) AND (((rt0.c0) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0)))+(((((t1.c0)AND(t1.c0)))OR(t1.c0))))) ORDER BY ((((((((TRIM(t1.c0))AND((((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, x''))))))OR(NULLIF(t1.c0, t1.c0))))AND('3F')))AND(CAST(t1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS NOT(t1.c0)))+(((((t1.c0)AND(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((TRIM(t1.c0))AND((((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, x''))))))OR(NULLIF(t1.c0, t1.c0))))AND('3F')))AND(CAST(t1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0)))+(((((t1.c0)AND(t1.c0)))OR(t1.c0))))) ORDER BY ((((((((TRIM(t1.c0))AND((((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, x''))))))OR(NULLIF(t1.c0, t1.c0))))AND('3F')))AND(CAST(t1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS NOT(t1.c0)))+(((((t1.c0)AND(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((TRIM(t1.c0))AND((((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, x''))))))OR(NULLIF(t1.c0, t1.c0))))AND('3F')))AND(CAST(t1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0)))+(((((t1.c0)AND(t1.c0)))OR(t1.c0))))) ORDER BY ((((((((TRIM(t1.c0))AND((((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, x''))))))OR(NULLIF(t1.c0, t1.c0))))AND('3F')))AND(CAST(t1.c0 AS NUMERIC)));
SELECT COUNT(*) FROM t1 WHERE (LIKELIHOOD(DISTINCT (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), 0.25033693660435796));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), 0.25033693660435796)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (LIKELIHOOD(DISTINCT (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), 0.25033693660435796));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), 0.25033693660435796)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (LIKELIHOOD(DISTINCT (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), 0.25033693660435796));
SELECT COUNT(*) FROM rt0, t1, t0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, t1, t0);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM t1, t0 CROSS JOIN rt0 ON LIKELIHOOD(((rt0.c0) NOT NULL), 0.30861525440420134) WHERE (((((CASE WHEN x'9e74caa1' THEN t1.c0 ELSE rt0.c0 END)AND(((rt0.c2) IS FALSE))))AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN x'9e74caa1' THEN t1.c0 ELSE rt0.c0 END)AND(((rt0.c2) IS FALSE))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt0 ON LIKELIHOOD(((rt0.c0) NOT NULL), 0.30861525440420134));
SELECT ALL COUNT(*) FROM t1, t0 CROSS JOIN rt0 ON LIKELIHOOD(((rt0.c0) NOT NULL), 0.30861525440420134) WHERE (((((CASE WHEN x'9e74caa1' THEN t1.c0 ELSE rt0.c0 END)AND(((rt0.c2) IS FALSE))))AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN x'9e74caa1' THEN t1.c0 ELSE rt0.c0 END)AND(((rt0.c2) IS FALSE))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt0 ON LIKELIHOOD(((rt0.c0) NOT NULL), 0.30861525440420134));
SELECT ALL COUNT(*) FROM t1, t0 CROSS JOIN rt0 ON LIKELIHOOD(((rt0.c0) NOT NULL), 0.30861525440420134) WHERE (((((CASE WHEN x'9e74caa1' THEN t1.c0 ELSE rt0.c0 END)AND(((rt0.c2) IS FALSE))))AND((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((('yya['))>((rt0.c0))))OR((~ (rt0.c2)))), (((rt0.c2, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((CAST(rt0.c2 AS BLOB), (+ (rt0.c0)), NULL))) ASC  NULLS FIRST, (((- (rt0.c1))) BETWEEN (((x'') NOTNULL)) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((('yya['))>((rt0.c0))))OR((~ (rt0.c2)))), (((rt0.c2, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((CAST(rt0.c2 AS BLOB), (+ (rt0.c0)), NULL))) ASC  NULLS FIRST, (((- (rt0.c1))) BETWEEN (((x'') NOTNULL)) AND (rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((('yya['))>((rt0.c0))))OR((~ (rt0.c2)))), (((rt0.c2, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((CAST(rt0.c2 AS BLOB), (+ (rt0.c0)), NULL))) ASC  NULLS FIRST, (((- (rt0.c1))) BETWEEN (((x'') NOTNULL)) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((('yya['))>((rt0.c0))))OR((~ (rt0.c2)))), (((rt0.c2, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((CAST(rt0.c2 AS BLOB), (+ (rt0.c0)), NULL))) ASC  NULLS FIRST, (((- (rt0.c1))) BETWEEN (((x'') NOTNULL)) AND (rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((('yya['))>((rt0.c0))))OR((~ (rt0.c2)))), (((rt0.c2, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((CAST(rt0.c2 AS BLOB), (+ (rt0.c0)), NULL))) ASC  NULLS FIRST, (((- (rt0.c1))) BETWEEN (((x'') NOTNULL)) AND (rt0.c2));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOTNULL)) ORDER BY (((t1.c0 IN ())) BETWEEN (t1.c0) AND ('M!Azn'));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) BETWEEN (t1.c0) AND ('M!Azn')));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOTNULL)) ORDER BY (((t1.c0 IN ())) BETWEEN (t1.c0) AND ('M!Azn'));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) BETWEEN (t1.c0) AND ('M!Azn')));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOTNULL)) ORDER BY (((t1.c0 IN ())) BETWEEN (t1.c0) AND ('M!Azn'));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, t1 WHERE (NULL) ORDER BY -2168011 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY -2168011 DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, t1 WHERE (NULL) ORDER BY -2168011 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY -2168011 DESC);
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(0.27225139663920594 AS TEXT))) AND ((((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST, ('Rрm9KP' IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(0.27225139663920594 AS TEXT))) AND ((((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST, ('Rрm9KP' IN ()));
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(0.27225139663920594 AS TEXT))) AND ((((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST, ('Rрm9KP' IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(0.27225139663920594 AS TEXT))) AND ((((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST, ('Rрm9KP' IN ()));
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(0.27225139663920594 AS TEXT))) AND ((((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST, ('Rрm9KP' IN ());
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((- ((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY 0.3513724352853944;
SELECT SUM(count) FROM (SELECT ALL (((- ((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t1, t0 ORDER BY 0.3513724352853944);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((- ((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY 0.3513724352853944;
SELECT SUM(count) FROM (SELECT ALL (((- ((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t1, t0 ORDER BY 0.3513724352853944);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((- ((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY 0.3513724352853944;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)==(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((rt0.c0)OR('-1989998823')))AND(rt0.c0)))AND('_r?')))AND(rt0.c1))))>((((rt0.c0)>>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((x'e8f2')) AND ((rt0.c1))), rt0.c2)))) ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END)AND((NOT (rt0.c0)))))OR(((rt0.c1)/(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)==(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((rt0.c0)OR('-1989998823')))AND(rt0.c0)))AND('_r?')))AND(rt0.c1))))>((((rt0.c0)>>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((x'e8f2')) AND ((rt0.c1))), rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END)AND((NOT (rt0.c0)))))OR(((rt0.c1)/(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)==(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((rt0.c0)OR('-1989998823')))AND(rt0.c0)))AND('_r?')))AND(rt0.c1))))>((((rt0.c0)>>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((x'e8f2')) AND ((rt0.c1))), rt0.c2)))) ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END)AND((NOT (rt0.c0)))))OR(((rt0.c1)/(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)==(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((rt0.c0)OR('-1989998823')))AND(rt0.c0)))AND('_r?')))AND(rt0.c1))))>((((rt0.c0)>>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((x'e8f2')) AND ((rt0.c1))), rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END)AND((NOT (rt0.c0)))))OR(((rt0.c1)/(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)==(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((rt0.c0)OR('-1989998823')))AND(rt0.c0)))AND('_r?')))AND(rt0.c1))))>((((rt0.c0)>>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((x'e8f2')) AND ((rt0.c1))), rt0.c2)))) ORDER BY ((((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END)AND((NOT (rt0.c0)))))OR(((rt0.c1)/(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN (t1.c0 IN ()) WHEN rt0.c2 THEN (+ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN ((t1.c0) ISNULL) ELSE ((rt0.c0)IS(t0.c0)) END INNER JOIN t0 ON (- (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((- (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN (t1.c0 IN ()) WHEN rt0.c2 THEN (+ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN ((t1.c0) ISNULL) ELSE ((rt0.c0)IS(t0.c0)) END INNER JOIN t0 ON (- (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN (t1.c0 IN ()) WHEN rt0.c2 THEN (+ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN ((t1.c0) ISNULL) ELSE ((rt0.c0)IS(t0.c0)) END INNER JOIN t0 ON (- (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((- (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN (t1.c0 IN ()) WHEN rt0.c2 THEN (+ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN ((t1.c0) ISNULL) ELSE ((rt0.c0)IS(t0.c0)) END INNER JOIN t0 ON (- (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN (t1.c0 IN ()) WHEN rt0.c2 THEN (+ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN ((t1.c0) ISNULL) ELSE ((rt0.c0)IS(t0.c0)) END INNER JOIN t0 ON (- (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((- (((t0.c0) NOTNULL))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT ((((((((((((t0.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(x'590e'))) WHERE ((((('Hr' IN ()), t0.c0 COLLATE RTRIM, (((t1.c0)) BETWEEN ((t0.c0)) AND (('y(匐Hag79u')))))>=((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((('Hr' IN ()), t0.c0 COLLATE RTRIM, (((t1.c0)) BETWEEN ((t0.c0)) AND (('y(匐Hag79u')))))>=((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT ((((((((((((t0.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(x'590e'))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT ((((((((((((t0.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(x'590e'))) WHERE ((((('Hr' IN ()), t0.c0 COLLATE RTRIM, (((t1.c0)) BETWEEN ((t0.c0)) AND (('y(匐Hag79u')))))>=((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((('Hr' IN ()), t0.c0 COLLATE RTRIM, (((t1.c0)) BETWEEN ((t0.c0)) AND (('y(匐Hag79u')))))>=((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT ((((((((((((t0.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(x'590e'))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT ((((((((((((t0.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(x'590e'))) WHERE ((((('Hr' IN ()), t0.c0 COLLATE RTRIM, (((t1.c0)) BETWEEN ((t0.c0)) AND (('y(匐Hag79u')))))>=((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM t0, rt0, t1 NOT INDEXED WHERE ((+ (((rt0.c2)<=(rt0.c1))))) ORDER BY ((((rt0.c1) ISNULL))>((NOT (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)<=(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((((rt0.c1) ISNULL))>((NOT (t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, t1 NOT INDEXED WHERE ((+ (((rt0.c2)<=(rt0.c1))))) ORDER BY ((((rt0.c1) ISNULL))>((NOT (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)<=(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((((rt0.c1) ISNULL))>((NOT (t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, t1 NOT INDEXED WHERE ((+ (((rt0.c2)<=(rt0.c1))))) ORDER BY ((((rt0.c1) ISNULL))>((NOT (t1.c0)))) ASC;
SELECT * FROM t1, rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN x'' WHEN rt0.c0 THEN x'8a9f' WHEN t0.c0 THEN t1.c0 ELSE rt0.c2 END)) WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END IN ())) ORDER BY 'g&}M' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN x'' WHEN rt0.c0 THEN x'8a9f' WHEN t0.c0 THEN t1.c0 ELSE rt0.c2 END)) ORDER BY 'g&}M' DESC  NULLS LAST);
SELECT * FROM t1, rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN x'' WHEN rt0.c0 THEN x'8a9f' WHEN t0.c0 THEN t1.c0 ELSE rt0.c2 END)) WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END IN ())) ORDER BY 'g&}M' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN x'' WHEN rt0.c0 THEN x'8a9f' WHEN t0.c0 THEN t1.c0 ELSE rt0.c2 END)) ORDER BY 'g&}M' DESC  NULLS LAST);
SELECT * FROM t1, rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN x'' WHEN rt0.c0 THEN x'8a9f' WHEN t0.c0 THEN t1.c0 ELSE rt0.c2 END)) WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END IN ())) ORDER BY 'g&}M' DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, t0 WHERE (IFNULL(0.03001019559322793, CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END)) ORDER BY (((t1.c0, t1.c0, 0.05118781738685052)) NOT BETWEEN ((((t0.c0)<=(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), x'')) AND ((((t0.c0) NOTNULL), t1.c0, NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(0.03001019559322793, CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END)) IS TRUE)  as count FROM t1 NOT INDEXED, t0 ORDER BY (((t1.c0, t1.c0, 0.05118781738685052)) NOT BETWEEN ((((t0.c0)<=(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), x'')) AND ((((t0.c0) NOTNULL), t1.c0, NULL)))  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE (IFNULL(0.03001019559322793, CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END)) ORDER BY (((t1.c0, t1.c0, 0.05118781738685052)) NOT BETWEEN ((((t0.c0)<=(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), x'')) AND ((((t0.c0) NOTNULL), t1.c0, NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(0.03001019559322793, CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END)) IS TRUE)  as count FROM t1 NOT INDEXED, t0 ORDER BY (((t1.c0, t1.c0, 0.05118781738685052)) NOT BETWEEN ((((t0.c0)<=(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), x'')) AND ((((t0.c0) NOTNULL), t1.c0, NULL)))  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE (IFNULL(0.03001019559322793, CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END)) ORDER BY (((t1.c0, t1.c0, 0.05118781738685052)) NOT BETWEEN ((((t0.c0)<=(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), x'')) AND ((((t0.c0) NOTNULL), t1.c0, NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, t0 WHERE (TRIM(CASE WHEN t1.c0 THEN t0.c0 ELSE x'' END, (~ (t0.c0)))) ORDER BY (t1.c0 IN (t1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN t1.c0 THEN t0.c0 ELSE x'' END, (~ (t0.c0)))) IS TRUE)  as count FROM t1, t0 ORDER BY (t1.c0 IN (t1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (TRIM(CASE WHEN t1.c0 THEN t0.c0 ELSE x'' END, (~ (t0.c0)))) ORDER BY (t1.c0 IN (t1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN t1.c0 THEN t0.c0 ELSE x'' END, (~ (t0.c0)))) IS TRUE)  as count FROM t1, t0 ORDER BY (t1.c0 IN (t1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (TRIM(CASE WHEN t1.c0 THEN t0.c0 ELSE x'' END, (~ (t0.c0)))) ORDER BY (t1.c0 IN (t1.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((0.6881670257459143)) AND ((rt0.c2))))*((rt0.c0 IN (rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((0.6881670257459143)) AND ((rt0.c2))))*((rt0.c0 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((0.6881670257459143)) AND ((rt0.c2))))*((rt0.c0 IN (rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((0.6881670257459143)) AND ((rt0.c2))))*((rt0.c0 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((0.6881670257459143)) AND ((rt0.c2))))*((rt0.c0 IN (rt0.c2, rt0.c2)))));
SELECT ALL * FROM t1, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY (((rt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((json_array(t1.c0, rt0.c1, t1.c0, t1.c0, t1.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((json_array(t1.c0, rt0.c1, t1.c0, t1.c0, t1.c0, rt0.c2)))));
SELECT ALL * FROM t1, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY (((rt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((json_array(t1.c0, rt0.c1, t1.c0, t1.c0, t1.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((json_array(t1.c0, rt0.c1, t1.c0, t1.c0, t1.c0, rt0.c2)))));
SELECT ALL * FROM t1, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY (((rt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((json_array(t1.c0, rt0.c1, t1.c0, t1.c0, t1.c0, rt0.c2))));
SELECT * FROM t1, rt0 WHERE (rt0.c1) ORDER BY rt0.c0, (((((rt0.c0 IN ()))OR(((rt0.c0)>>(rt0.c1)))))AND((NOT (t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c0, (((((rt0.c0 IN ()))OR(((rt0.c0)>>(rt0.c1)))))AND((NOT (t1.c0)))) DESC  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (rt0.c1) ORDER BY rt0.c0, (((((rt0.c0 IN ()))OR(((rt0.c0)>>(rt0.c1)))))AND((NOT (t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c0, (((((rt0.c0 IN ()))OR(((rt0.c0)>>(rt0.c1)))))AND((NOT (t1.c0)))) DESC  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (rt0.c1) ORDER BY rt0.c0, (((((rt0.c0 IN ()))OR(((rt0.c0)>>(rt0.c1)))))AND((NOT (t1.c0)))) DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE ((((((rt0.c0) ISNULL), NULL, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))>((((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0)), ((NULL) NOT NULL), LIKELY(rt0.c0))))) ORDER BY (t1.c0 IN (rt0.c0, rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) ISNULL), NULL, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))>((((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0)), ((NULL) NOT NULL), LIKELY(rt0.c0))))) IS TRUE)  as count FROM rt0, t1 ORDER BY (t1.c0 IN (rt0.c0, rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0, t1 WHERE ((((((rt0.c0) ISNULL), NULL, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))>((((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0)), ((NULL) NOT NULL), LIKELY(rt0.c0))))) ORDER BY (t1.c0 IN (rt0.c0, rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) ISNULL), NULL, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))>((((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0)), ((NULL) NOT NULL), LIKELY(rt0.c0))))) IS TRUE)  as count FROM rt0, t1 ORDER BY (t1.c0 IN (rt0.c0, rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0, t1 WHERE ((((((rt0.c0) ISNULL), NULL, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))>((((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0)), ((NULL) NOT NULL), LIKELY(rt0.c0))))) ORDER BY (t1.c0 IN (rt0.c0, rt0.c2)) COLLATE RTRIM;
SELECT * FROM t0, rt0, t1 WHERE ((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND ((((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND ((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE ((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND ((((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND ((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT * FROM t0, rt0, t1 WHERE ((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND ((((rt0.c1) IS TRUE)))));
SELECT ALL * FROM rt0, t0, t1 WHERE (((((t1.c0)LIKE(rt0.c2))) ISNULL)) ORDER BY ((rt0.c0)>(t0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)LIKE(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((rt0.c0)>(t0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, t0, t1 WHERE (((((t1.c0)LIKE(rt0.c2))) ISNULL)) ORDER BY ((rt0.c0)>(t0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)LIKE(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((rt0.c0)>(t0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, t0, t1 WHERE (((((t1.c0)LIKE(rt0.c2))) ISNULL)) ORDER BY ((rt0.c0)>(t0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((rt0.c2 IN ())));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((~ (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((~ (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((~ (CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)OR(0.6192233455390299)))OR(t0.c0))))) ORDER BY ((((((((t0.c0)OR(0Xffffffff90bbeaa5)))AND(t0.c0)))OR(t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS FIRST, ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST, (((((t0.c0 IN (t0.c0)))OR(((t0.c0) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c0)OR(0.6192233455390299)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c0)OR(0Xffffffff90bbeaa5)))AND(t0.c0)))OR(t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS FIRST, ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST, (((((t0.c0 IN (t0.c0)))OR(((t0.c0) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)OR(0.6192233455390299)))OR(t0.c0))))) ORDER BY ((((((((t0.c0)OR(0Xffffffff90bbeaa5)))AND(t0.c0)))OR(t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS FIRST, ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST, (((((t0.c0 IN (t0.c0)))OR(((t0.c0) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c0)OR(0.6192233455390299)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c0)OR(0Xffffffff90bbeaa5)))AND(t0.c0)))OR(t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS FIRST, ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST, (((((t0.c0 IN (t0.c0)))OR(((t0.c0) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)OR(0.6192233455390299)))OR(t0.c0))))) ORDER BY ((((((((t0.c0)OR(0Xffffffff90bbeaa5)))AND(t0.c0)))OR(t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS FIRST, ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST, (((((t0.c0 IN (t0.c0)))OR(((t0.c0) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))));
SELECT ALL * FROM t0, t1 WHERE (CAST(t0.c0 COLLATE BINARY AS INTEGER)) ORDER BY json_patch((+ (t1.c0)), ((t0.c0)>=(t1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0, t1 ORDER BY json_patch((+ (t1.c0)), ((t0.c0)>=(t1.c0)))  NULLS LAST);
SELECT ALL * FROM t0, t1 WHERE (CAST(t0.c0 COLLATE BINARY AS INTEGER)) ORDER BY json_patch((+ (t1.c0)), ((t0.c0)>=(t1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0, t1 ORDER BY json_patch((+ (t1.c0)), ((t0.c0)>=(t1.c0)))  NULLS LAST);
SELECT * FROM t1, rt0, t0 WHERE ((((rt0.c0 IN ()))*(CAST(t1.c0 AS INTEGER)))) ORDER BY ((((CASE WHEN t1.c0 THEN x'' END)OR(CAST(t0.c0 AS BLOB))))OR(((t0.c0)OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))*(CAST(t1.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY ((((CASE WHEN t1.c0 THEN x'' END)OR(CAST(t0.c0 AS BLOB))))OR(((t0.c0)OR(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM t1, rt0, t0 WHERE ((((rt0.c0 IN ()))*(CAST(t1.c0 AS INTEGER)))) ORDER BY ((((CASE WHEN t1.c0 THEN x'' END)OR(CAST(t0.c0 AS BLOB))))OR(((t0.c0)OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))*(CAST(t1.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY ((((CASE WHEN t1.c0 THEN x'' END)OR(CAST(t0.c0 AS BLOB))))OR(((t0.c0)OR(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM t1, rt0, t0 WHERE ((((rt0.c0 IN ()))*(CAST(t1.c0 AS INTEGER)))) ORDER BY ((((CASE WHEN t1.c0 THEN x'' END)OR(CAST(t0.c0 AS BLOB))))OR(((t0.c0)OR(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0, t0, t1 WHERE (((x'')AND(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((x'')AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE (((x'')AND(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((x'')AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE (((x'')AND(CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) IS TRUE)) ISNULL)) ORDER BY CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) IS TRUE)) ISNULL)) ORDER BY CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) IS TRUE)) ISNULL)) ORDER BY CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CASE x''  WHEN TRIM(DISTINCT t1.c0) THEN t1.c0 WHEN CAST(t1.c0 AS BLOB) THEN (+ (t1.c0)) WHEN (t1.c0 IN ()) THEN ((t1.c0) NOTNULL) END) ORDER BY CASE WHEN TRIM(DISTINCT 0Xffffffffd0d65f6c) THEN ((t1.c0)OR(t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN TRIM(DISTINCT t1.c0) THEN t1.c0 WHEN CAST(t1.c0 AS BLOB) THEN (+ (t1.c0)) WHEN (t1.c0 IN ()) THEN ((t1.c0) NOTNULL) END) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN TRIM(DISTINCT 0Xffffffffd0d65f6c) THEN ((t1.c0)OR(t1.c0)) END ASC);
SELECT COUNT(*) FROM t1 WHERE (CASE x''  WHEN TRIM(DISTINCT t1.c0) THEN t1.c0 WHEN CAST(t1.c0 AS BLOB) THEN (+ (t1.c0)) WHEN (t1.c0 IN ()) THEN ((t1.c0) NOTNULL) END) ORDER BY CASE WHEN TRIM(DISTINCT 0Xffffffffd0d65f6c) THEN ((t1.c0)OR(t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN TRIM(DISTINCT t1.c0) THEN t1.c0 WHEN CAST(t1.c0 AS BLOB) THEN (+ (t1.c0)) WHEN (t1.c0 IN ()) THEN ((t1.c0) NOTNULL) END) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN TRIM(DISTINCT 0Xffffffffd0d65f6c) THEN ((t1.c0)OR(t1.c0)) END ASC);
SELECT COUNT(*) FROM t1 WHERE (CASE x''  WHEN TRIM(DISTINCT t1.c0) THEN t1.c0 WHEN CAST(t1.c0 AS BLOB) THEN (+ (t1.c0)) WHEN (t1.c0 IN ()) THEN ((t1.c0) NOTNULL) END) ORDER BY CASE WHEN TRIM(DISTINCT 0Xffffffffd0d65f6c) THEN ((t1.c0)OR(t1.c0)) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0)+(t0.c0)))))OR(((x'')||(t0.c0)))))AND((~ (t0.c0)))))OR(TRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0)+(t0.c0)))))OR(((x'')||(t0.c0)))))AND((~ (t0.c0)))))OR(TRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0)+(t0.c0)))))OR(((x'')||(t0.c0)))))AND((~ (t0.c0)))))OR(TRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0)+(t0.c0)))))OR(((x'')||(t0.c0)))))AND((~ (t0.c0)))))OR(TRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0)+(t0.c0)))))OR(((x'')||(t0.c0)))))AND((~ (t0.c0)))))OR(TRIM(t0.c0))));
SELECT * FROM t1 WHERE (UNLIKELY(json_extract(t1.c0, t1.c0, t1.c0, 'R舯˥c')));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(json_extract(t1.c0, t1.c0, t1.c0, 'R舯˥c'))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (UNLIKELY(json_extract(t1.c0, t1.c0, t1.c0, 'R舯˥c')));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(json_extract(t1.c0, t1.c0, t1.c0, 'R舯˥c'))) IS TRUE)  as count FROM t1);
SELECT * FROM t0, rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS TRUE));
SELECT ALL * FROM t1, t0, rt0 WHERE ((((x'' IN ()))<=(((((rt0.c0)OR(t1.c0)))OR(t0.c0))))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)|(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))<=(((((rt0.c0)OR(t1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)|(rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1, t0, rt0 WHERE ((((x'' IN ()))<=(((((rt0.c0)OR(t1.c0)))OR(t0.c0))))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)|(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))<=(((((rt0.c0)OR(t1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)|(rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1, t0, rt0 WHERE ((((x'' IN ()))<=(((((rt0.c0)OR(t1.c0)))OR(t0.c0))))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)|(rt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((LIKELIHOOD(0.5907696575547867, 0.9943667661801264))AND(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((LIKELIHOOD(0.5907696575547867, 0.9943667661801264))AND(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((LIKELIHOOD(0.5907696575547867, 0.9943667661801264))AND(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((LIKELIHOOD(0.5907696575547867, 0.9943667661801264))AND(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((LIKELIHOOD(0.5907696575547867, 0.9943667661801264))AND(rt0.c0))  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (-649066352 IN ()) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c2)>>('-1472666616')) END) ORDER BY ((CAST(rt0.c2 AS REAL))%(((t0.c0)>(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (-649066352 IN ()) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c2)>>('-1472666616')) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CAST(rt0.c2 AS REAL))%(((t0.c0)>(rt0.c0)))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (-649066352 IN ()) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c2)>>('-1472666616')) END) ORDER BY ((CAST(rt0.c2 AS REAL))%(((t0.c0)>(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (-649066352 IN ()) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c2)>>('-1472666616')) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CAST(rt0.c2 AS REAL))%(((t0.c0)>(rt0.c0)))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (-649066352 IN ()) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c2)>>('-1472666616')) END) ORDER BY ((CAST(rt0.c2 AS REAL))%(((t0.c0)>(rt0.c0)))) DESC;
SELECT ALL * FROM t1, t0, rt0 WHERE (json_object('-637916414', ((rt0.c0)||(t0.c0)))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 ELSE '1289838254' END)*(LIKELY(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object('-637916414', ((rt0.c0)||(t0.c0)))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 ELSE '1289838254' END)*(LIKELY(rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM t1, t0, rt0 WHERE (json_object('-637916414', ((rt0.c0)||(t0.c0)))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 ELSE '1289838254' END)*(LIKELY(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object('-637916414', ((rt0.c0)||(t0.c0)))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 ELSE '1289838254' END)*(LIKELY(rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM t1, t0, rt0 WHERE (json_object('-637916414', ((rt0.c0)||(t0.c0)))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 ELSE '1289838254' END)*(LIKELY(rt0.c2)))  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE WHERE (((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR('')))OR(t0.c0)))<(x'1b28'))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR('')))OR(t0.c0)))<(x'1b28'))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE ORDER BY ''  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE WHERE (((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR('')))OR(t0.c0)))<(x'1b28'))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR('')))OR(t0.c0)))<(x'1b28'))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE ORDER BY ''  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE WHERE (((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR('')))OR(t0.c0)))<(x'1b28'))) ORDER BY ''  NULLS LAST;
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ('0s') ORDER BY ((((rt0.c0)AND(rt0.c1)))||(((rt0.c0)GLOB(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0s') IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((((rt0.c0)AND(rt0.c1)))||(((rt0.c0)GLOB(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ('0s') ORDER BY ((((rt0.c0)AND(rt0.c1)))||(((rt0.c0)GLOB(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0s') IS TRUE)  as count FROM t1, t0, rt0 ORDER BY ((((rt0.c0)AND(rt0.c1)))||(((rt0.c0)GLOB(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ('0s') ORDER BY ((((rt0.c0)AND(rt0.c1)))||(((rt0.c0)GLOB(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON (t1.c0 IN (((x'')==(t1.c0)), (('') NOTNULL))) WHERE (((t1.c0) BETWEEN ((((t1.c0))>((t0.c0)))) AND (UNLIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((t1.c0) BETWEEN ((((t1.c0))>((t0.c0)))) AND (UNLIKELY(t0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON (t1.c0 IN (((x'')==(t1.c0)), (('') NOTNULL))));
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON (t1.c0 IN (((x'')==(t1.c0)), (('') NOTNULL))) WHERE (((t1.c0) BETWEEN ((((t1.c0))>((t0.c0)))) AND (UNLIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((t1.c0) BETWEEN ((((t1.c0))>((t0.c0)))) AND (UNLIKELY(t0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON (t1.c0 IN (((x'')==(t1.c0)), (('') NOTNULL))));
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON (t1.c0 IN (((x'')==(t1.c0)), (('') NOTNULL))) WHERE (((t1.c0) BETWEEN ((((t1.c0))>((t0.c0)))) AND (UNLIKELY(t0.c0))));
SELECT * FROM t1, t0 WHERE (t1.c0) ORDER BY ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, t0 ORDER BY ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)  NULLS LAST);
SELECT * FROM t1, t0 WHERE (t1.c0) ORDER BY ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, t0 ORDER BY ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)  NULLS LAST);
SELECT * FROM t1, t0 WHERE (t1.c0) ORDER BY ((((((t1.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)  NULLS LAST;
SELECT * FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.15338541681988394) ELSE ((t0.c0) IS TRUE) END RIGHT OUTER JOIN t1 ON CAST(TRIM(t1.c0) AS NUMERIC) WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c1)))))) ORDER BY ((x'') NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c1)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.15338541681988394) ELSE ((t0.c0) IS TRUE) END RIGHT OUTER JOIN t1 ON CAST(TRIM(t1.c0) AS NUMERIC) ORDER BY ((x'') NOT NULL) ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.15338541681988394) ELSE ((t0.c0) IS TRUE) END RIGHT OUTER JOIN t1 ON CAST(TRIM(t1.c0) AS NUMERIC) WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c1)))))) ORDER BY ((x'') NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c1)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.15338541681988394) ELSE ((t0.c0) IS TRUE) END RIGHT OUTER JOIN t1 ON CAST(TRIM(t1.c0) AS NUMERIC) ORDER BY ((x'') NOT NULL) ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.15338541681988394) ELSE ((t0.c0) IS TRUE) END RIGHT OUTER JOIN t1 ON CAST(TRIM(t1.c0) AS NUMERIC) WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((~ (rt0.c1)))))) ORDER BY ((x'') NOT NULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS TEXT)) ORDER BY (((NOT (rt0.c1)))&(((rt0.c1)=(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 ORDER BY (((NOT (rt0.c1)))&(((rt0.c1)=(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS TEXT)) ORDER BY (((NOT (rt0.c1)))&(((rt0.c1)=(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 ORDER BY (((NOT (rt0.c1)))&(((rt0.c1)=(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS TEXT)) ORDER BY (((NOT (rt0.c1)))&(((rt0.c1)=(rt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (0.08895040318377323);
SELECT SUM(count) FROM (SELECT ALL ((0.08895040318377323) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (0.08895040318377323);
SELECT SUM(count) FROM (SELECT ALL ((0.08895040318377323) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (0.08895040318377323);
SELECT ALL * FROM t1 WHERE (((((((t1.c0)||(t1.c0)))AND(INSTR(t1.c0, t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 END))) ORDER BY CAST(CASE 0.7132459398433476  WHEN NULL THEN t1.c0 ELSE t1.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)||(t1.c0)))AND(INSTR(t1.c0, t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1 ORDER BY CAST(CASE 0.7132459398433476  WHEN NULL THEN t1.c0 ELSE t1.c0 END AS INTEGER));
SELECT ALL * FROM t1 WHERE (((((((t1.c0)||(t1.c0)))AND(INSTR(t1.c0, t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 END))) ORDER BY CAST(CASE 0.7132459398433476  WHEN NULL THEN t1.c0 ELSE t1.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)||(t1.c0)))AND(INSTR(t1.c0, t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1 ORDER BY CAST(CASE 0.7132459398433476  WHEN NULL THEN t1.c0 ELSE t1.c0 END AS INTEGER));
SELECT ALL * FROM t1 WHERE (((((((t1.c0)||(t1.c0)))AND(INSTR(t1.c0, t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 END))) ORDER BY CAST(CASE 0.7132459398433476  WHEN NULL THEN t1.c0 ELSE t1.c0 END AS INTEGER);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ABS(((((t0.c0)OR(t0.c0)))OR(t0.c0))) LEFT OUTER JOIN t0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))AND(((((t0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND(NULLIF(rt0.c1, t1.c0))) WHERE (((((t0.c0)/(rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c1))) AND (UPPER(0x239f3cad)))) ORDER BY CASE NULL  WHEN (rt0.c2 IN (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END  NULLS FIRST, '-1123635867' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)/(rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c1))) AND (UPPER(0X239f3cad)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ABS(((((t0.c0)OR(t0.c0)))OR(t0.c0))) LEFT OUTER JOIN t0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))AND(((((t0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND(NULLIF(rt0.c1, t1.c0))) ORDER BY CASE NULL  WHEN (rt0.c2 IN (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END  NULLS FIRST, '-1123635867' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ABS(((((t0.c0)OR(t0.c0)))OR(t0.c0))) LEFT OUTER JOIN t0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))AND(((((t0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND(NULLIF(rt0.c1, t1.c0))) WHERE (((((t0.c0)/(rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c1))) AND (UPPER(0x239f3cad)))) ORDER BY CASE NULL  WHEN (rt0.c2 IN (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END  NULLS FIRST, '-1123635867' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)/(rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c1))) AND (UPPER(0X239f3cad)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ABS(((((t0.c0)OR(t0.c0)))OR(t0.c0))) LEFT OUTER JOIN t0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))AND(((((t0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND(NULLIF(rt0.c1, t1.c0))) ORDER BY CASE NULL  WHEN (rt0.c2 IN (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END  NULLS FIRST, '-1123635867' ASC  NULLS FIRST);
SELECT * FROM t0, t1, rt0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT * FROM t0, t1, rt0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1, rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT * FROM t0, t1, rt0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT ALL * FROM t1, rt0, t0 WHERE (UNLIKELY(t1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t1.c0) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, t0);
SELECT ALL * FROM t1, rt0, t0 WHERE (UNLIKELY(t1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t1.c0) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, t0);
SELECT ALL * FROM t1, rt0, t0 WHERE (UNLIKELY(t1.c0) COLLATE BINARY);
SELECT * FROM t1, t0, rt0 WHERE ((((NOT (t1.c0))) BETWEEN (((rt0.c1)%(t1.c0))) AND (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0))) BETWEEN (((rt0.c1)%(t1.c0))) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT * FROM t1, t0, rt0 WHERE ((((NOT (t1.c0))) BETWEEN (((rt0.c1)%(t1.c0))) AND (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0))) BETWEEN (((rt0.c1)%(t1.c0))) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT * FROM t1, t0, rt0 WHERE ((((NOT (t1.c0))) BETWEEN (((rt0.c1)%(t1.c0))) AND (((rt0.c0) NOTNULL))));
SELECT * FROM t1, rt0, t0 WHERE (MAX((((t0.c0))<=((rt0.c1))), CAST(t1.c0 AS REAL), (+ (rt0.c2)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((MAX((((t0.c0))<=((rt0.c1))), CAST(t1.c0 AS REAL), (+ (rt0.c2)), NULL)) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE (MAX((((t0.c0))<=((rt0.c1))), CAST(t1.c0 AS REAL), (+ (rt0.c2)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((MAX((((t0.c0))<=((rt0.c1))), CAST(t1.c0 AS REAL), (+ (rt0.c2)), NULL)) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE (MAX((((t0.c0))<=((rt0.c1))), CAST(t1.c0 AS REAL), (+ (rt0.c2)), NULL));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)+(t1.c0))))<=(((((((((('0.4337446366835698')OR(0.3008498520777003)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))))) ORDER BY CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (-2.03281914E8) AND (t1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)+(t1.c0))))<=(((((((((('0.4337446366835698')OR(0.3008498520777003)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (-2.03281914E8) AND (t1.c0)) END);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)+(t1.c0))))<=(((((((((('0.4337446366835698')OR(0.3008498520777003)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))))) ORDER BY CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (-2.03281914E8) AND (t1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)+(t1.c0))))<=(((((((((('0.4337446366835698')OR(0.3008498520777003)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (-2.03281914E8) AND (t1.c0)) END);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)+(t1.c0))))<=(((((((((('0.4337446366835698')OR(0.3008498520777003)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))))) ORDER BY CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (-2.03281914E8) AND (t1.c0)) END;
SELECT ALL * FROM t0, rt0, t1 WHERE (((x'')/((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')/((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE (((x'')/((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')/((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE (((x'')/((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON (((((rt0.c1)) BETWEEN (('')) AND ((rt0.c2)))) BETWEEN (((((rt0.c2)OR(t1.c0)))OR(rt0.c1))) AND (((t1.c0)<=(rt0.c1)))) WHERE (((((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))>=('-998302728'))) ORDER BY ((((rt0.c0)>(rt0.c2))) NOT BETWEEN (((rt0.c0)*(t1.c0))) AND (((((t1.c0)AND(rt0.c1)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))>=('-998302728'))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((rt0.c1)) BETWEEN (('')) AND ((rt0.c2)))) BETWEEN (((((rt0.c2)OR(t1.c0)))OR(rt0.c1))) AND (((t1.c0)<=(rt0.c1)))) ORDER BY ((((rt0.c0)>(rt0.c2))) NOT BETWEEN (((rt0.c0)*(t1.c0))) AND (((((t1.c0)AND(rt0.c1)))AND(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON (((((rt0.c1)) BETWEEN (('')) AND ((rt0.c2)))) BETWEEN (((((rt0.c2)OR(t1.c0)))OR(rt0.c1))) AND (((t1.c0)<=(rt0.c1)))) WHERE (((((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))>=('-998302728'))) ORDER BY ((((rt0.c0)>(rt0.c2))) NOT BETWEEN (((rt0.c0)*(t1.c0))) AND (((((t1.c0)AND(rt0.c1)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))>=('-998302728'))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((rt0.c1)) BETWEEN (('')) AND ((rt0.c2)))) BETWEEN (((((rt0.c2)OR(t1.c0)))OR(rt0.c1))) AND (((t1.c0)<=(rt0.c1)))) ORDER BY ((((rt0.c0)>(rt0.c2))) NOT BETWEEN (((rt0.c0)*(t1.c0))) AND (((((t1.c0)AND(rt0.c1)))AND(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON (((((rt0.c1)) BETWEEN (('')) AND ((rt0.c2)))) BETWEEN (((((rt0.c2)OR(t1.c0)))OR(rt0.c1))) AND (((t1.c0)<=(rt0.c1)))) WHERE (((((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))>=('-998302728'))) ORDER BY ((((rt0.c0)>(rt0.c2))) NOT BETWEEN (((rt0.c0)*(t1.c0))) AND (((((t1.c0)AND(rt0.c1)))AND(rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)OR(rt0.c2)))OR(x'')) COLLATE BINARY) ORDER BY (((((t0.c0) IS TRUE)))==((((rt0.c1)<(t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(rt0.c2)))OR(x'')) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c0) IS TRUE)))=((((rt0.c1)<(t0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)OR(rt0.c2)))OR(x'')) COLLATE BINARY) ORDER BY (((((t0.c0) IS TRUE)))==((((rt0.c1)<(t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(rt0.c2)))OR(x'')) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c0) IS TRUE)))=((((rt0.c1)<(t0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)OR(rt0.c2)))OR(x'')) COLLATE BINARY) ORDER BY (((((t0.c0) IS TRUE)))==((((rt0.c1)<(t0.c0))))) ASC  NULLS FIRST;
SELECT * FROM t1, t0 NATURAL JOIN rt0 WHERE ((~ (((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((t0.c0)<=(rt0.c0))) NOT BETWEEN ((- (rt0.c2))) AND (('' IN ())));
SELECT SUM(count) FROM (SELECT (((~ (((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t1, t0 NATURAL JOIN rt0 ORDER BY ((((t0.c0)<=(rt0.c0))) NOT BETWEEN ((- (rt0.c2))) AND (('' IN ()))));
SELECT * FROM t1, t0 NATURAL JOIN rt0 WHERE ((~ (((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((t0.c0)<=(rt0.c0))) NOT BETWEEN ((- (rt0.c2))) AND (('' IN ())));
SELECT SUM(count) FROM (SELECT (((~ (((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t1, t0 NATURAL JOIN rt0 ORDER BY ((((t0.c0)<=(rt0.c0))) NOT BETWEEN ((- (rt0.c2))) AND (('' IN ()))));
SELECT * FROM t1, t0 NATURAL JOIN rt0 WHERE ((~ (((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((t0.c0)<=(rt0.c0))) NOT BETWEEN ((- (rt0.c2))) AND (('' IN ())));
SELECT ALL * FROM t0, t1 NATURAL JOIN rt0 WHERE ('oUmDK') ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('oUmDK') IS TRUE)  as count FROM t0, t1 NATURAL JOIN rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0, t1 NATURAL JOIN rt0 WHERE ('oUmDK') ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('oUmDK') IS TRUE)  as count FROM t0, t1 NATURAL JOIN rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0, t1 NATURAL JOIN rt0 WHERE ('oUmDK') ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) IS TRUE) WHERE (json_array_length((~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((json_array_length((~ (rt0.c2)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) IS TRUE) WHERE (json_array_length((~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((json_array_length((~ (rt0.c2)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) IS TRUE) WHERE (json_array_length((~ (rt0.c2))));
SELECT COUNT(*) FROM t1, t0 WHERE (CASE WHEN json_quote(t0.c0) THEN ((t1.c0)||(t1.c0)) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_quote(t0.c0) THEN ((t1.c0)||(t1.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (CASE WHEN json_quote(t0.c0) THEN ((t1.c0)||(t1.c0)) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_quote(t0.c0) THEN ((t1.c0)||(t1.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (CASE WHEN json_quote(t0.c0) THEN ((t1.c0)||(t1.c0)) ELSE t0.c0 END);
SELECT * FROM t1 WHERE ((+ ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((+ ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((+ ((- (t1.c0)))));
SELECT * FROM t0 FULL OUTER JOIN t1 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((- (rt0.c1))))) WHERE (((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '1561638205' WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((((t1.c0)OR(rt0.c1)))AND(t1.c0))) AND (((((t0.c0)AND(t1.c0)))AND(t1.c0))))) ORDER BY (~ ((((rt0.c2))!=((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '1561638205' WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((((t1.c0)OR(rt0.c1)))AND(t1.c0))) AND (((((t0.c0)AND(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((- (rt0.c1))))) ORDER BY (~ ((((rt0.c2))!=((rt0.c1)))))  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN t1 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((- (rt0.c1))))) WHERE (((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '1561638205' WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((((t1.c0)OR(rt0.c1)))AND(t1.c0))) AND (((((t0.c0)AND(t1.c0)))AND(t1.c0))))) ORDER BY (~ ((((rt0.c2))!=((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '1561638205' WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((((t1.c0)OR(rt0.c1)))AND(t1.c0))) AND (((((t0.c0)AND(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON CAST(rt0.c0 COLLATE BINARY AS BLOB) RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((- (rt0.c1))))) ORDER BY (~ ((((rt0.c2))!=((rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN (HEX(DISTINCT t1.c0)) AND (TRIM(DISTINCT t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN (HEX(DISTINCT t1.c0)) AND (TRIM(DISTINCT t1.c0, t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN (HEX(DISTINCT t1.c0)) AND (TRIM(DISTINCT t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN (HEX(DISTINCT t1.c0)) AND (TRIM(DISTINCT t1.c0, t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN (HEX(DISTINCT t1.c0)) AND (TRIM(DISTINCT t1.c0, t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((((t1.c0))=((t1.c0))))AND(t1.c0)))OR(t1.c0)))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((t1.c0)GLOB(t1.c0)))>=(UPPER(0X6054672))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t1.c0))=((t1.c0))))AND(t1.c0)))OR(t1.c0)))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)GLOB(t1.c0)))>=(UPPER(0x6054672))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((((t1.c0))=((t1.c0))))AND(t1.c0)))OR(t1.c0)))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((t1.c0)GLOB(t1.c0)))>=(UPPER(0X6054672))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t1.c0))=((t1.c0))))AND(t1.c0)))OR(t1.c0)))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)GLOB(t1.c0)))>=(UPPER(0x6054672))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((((t1.c0))=((t1.c0))))AND(t1.c0)))OR(t1.c0)))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((t1.c0)GLOB(t1.c0)))>=(UPPER(0X6054672))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)-(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)-(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)-(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)-(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)-(rt0.c1)) IN ()));
SELECT * FROM t1, t0 CROSS JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c1)) AS REAL) WHERE (DATE(((rt0.c0)IS NOT(rt0.c2)), ((rt0.c1) NOT NULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))) ORDER BY CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC) ASC  NULLS FIRST, t1.c0 DESC, (((+ (0X2d9e836a)))LIKE((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE(((rt0.c0)IS NOT(rt0.c2)), ((rt0.c1) NOT NULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c1)) AS REAL) ORDER BY CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC) ASC  NULLS FIRST, t1.c0 DESC, (((+ (0X2d9e836a)))LIKE((NOT (rt0.c2)))) ASC);
SELECT * FROM t1, t0 CROSS JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c1)) AS REAL) WHERE (DATE(((rt0.c0)IS NOT(rt0.c2)), ((rt0.c1) NOT NULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))) ORDER BY CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC) ASC  NULLS FIRST, t1.c0 DESC, (((+ (0X2d9e836a)))LIKE((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE(((rt0.c0)IS NOT(rt0.c2)), ((rt0.c1) NOT NULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c1)) AS REAL) ORDER BY CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC) ASC  NULLS FIRST, t1.c0 DESC, (((+ (0X2d9e836a)))LIKE((NOT (rt0.c2)))) ASC);
SELECT * FROM t1, t0 CROSS JOIN rt0 ON CAST(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c1)) AS REAL) WHERE (DATE(((rt0.c0)IS NOT(rt0.c2)), ((rt0.c1) NOT NULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))) ORDER BY CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC) ASC  NULLS FIRST, t1.c0 DESC, (((+ (0X2d9e836a)))LIKE((NOT (rt0.c2)))) ASC;
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (IFNULL(CAST(t0.c0 AS INTEGER), ((t0.c0)OR(NULL))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(t0.c0 AS INTEGER), ((t0.c0)OR(NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (IFNULL(CAST(t0.c0 AS INTEGER), ((t0.c0)OR(NULL))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(t0.c0 AS INTEGER), ((t0.c0)OR(NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (IFNULL(CAST(t0.c0 AS INTEGER), ((t0.c0)OR(NULL))));
SELECT * FROM t0, t1 WHERE (((((0.9256202837490164) NOTNULL))-(((t1.c0)!=(t0.c0))))) ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(t1.c0 AS INTEGER))) DESC, ((t0.c0 COLLATE NOCASE)&(json_quote(t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9256202837490164) NOTNULL))-(((t1.c0)!=(t0.c0))))) IS TRUE)  as count FROM t0, t1 ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(t1.c0 AS INTEGER))) DESC, ((t0.c0 COLLATE NOCASE)&(json_quote(t1.c0))) ASC);
SELECT * FROM t0, t1 WHERE (((((0.9256202837490164) NOTNULL))-(((t1.c0)!=(t0.c0))))) ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(t1.c0 AS INTEGER))) DESC, ((t0.c0 COLLATE NOCASE)&(json_quote(t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9256202837490164) NOTNULL))-(((t1.c0)!=(t0.c0))))) IS TRUE)  as count FROM t0, t1 ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(t1.c0 AS INTEGER))) DESC, ((t0.c0 COLLATE NOCASE)&(json_quote(t1.c0))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, t0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN ('80306037' COLLATE NOCASE) AND (x''))) ORDER BY LIKELY(DISTINCT ((((t1.c0)OR(t1.c0)))OR(t1.c0)))  NULLS LAST, ((CAST(t1.c0 AS NUMERIC))||(t1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOT BETWEEN ('80306037' COLLATE NOCASE) AND (x''))) IS TRUE)  as count FROM t1 ORDER BY LIKELY(DISTINCT ((((t1.c0)OR(t1.c0)))OR(t1.c0)))  NULLS LAST, ((CAST(t1.c0 AS NUMERIC))||(t1.c0)) ASC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN ('80306037' COLLATE NOCASE) AND (x''))) ORDER BY LIKELY(DISTINCT ((((t1.c0)OR(t1.c0)))OR(t1.c0)))  NULLS LAST, ((CAST(t1.c0 AS NUMERIC))||(t1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOT BETWEEN ('80306037' COLLATE NOCASE) AND (x''))) IS TRUE)  as count FROM t1 ORDER BY LIKELY(DISTINCT ((((t1.c0)OR(t1.c0)))OR(t1.c0)))  NULLS LAST, ((CAST(t1.c0 AS NUMERIC))||(t1.c0)) ASC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN ('80306037' COLLATE NOCASE) AND (x''))) ORDER BY LIKELY(DISTINCT ((((t1.c0)OR(t1.c0)))OR(t1.c0)))  NULLS LAST, ((CAST(t1.c0 AS NUMERIC))||(t1.c0)) ASC;
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))LIKE(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))LIKE(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))LIKE(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))LIKE(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))LIKE(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END)));
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULLIF(DISTINCT t0.c0, t0.c0)))) ORDER BY ((0.4598834293455101 COLLATE BINARY)<(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULLIF(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((0.4598834293455101 COLLATE BINARY)<(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULLIF(DISTINCT t0.c0, t0.c0)))) ORDER BY ((0.4598834293455101 COLLATE BINARY)<(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULLIF(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((0.4598834293455101 COLLATE BINARY)<(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULLIF(DISTINCT t0.c0, t0.c0)))) ORDER BY ((0.4598834293455101 COLLATE BINARY)<(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c0 IN (rt0.c1)) IN (((rt0.c2) NOT NULL), 0xffffffffced0b027))) ORDER BY 0Xffffffffb6a154d4 DESC, CAST(2.79314423E8 COLLATE NOCASE AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (rt0.c1)) IN (((rt0.c2) NOT NULL), 0xffffffffced0b027))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0xffffffffb6a154d4 DESC, CAST(2.79314423E8 COLLATE NOCASE AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c0 IN (rt0.c1)) IN (((rt0.c2) NOT NULL), 0xffffffffced0b027))) ORDER BY 0Xffffffffb6a154d4 DESC, CAST(2.79314423E8 COLLATE NOCASE AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (rt0.c1)) IN (((rt0.c2) NOT NULL), 0xffffffffced0b027))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0xffffffffb6a154d4 DESC, CAST(2.79314423E8 COLLATE NOCASE AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c0 IN (rt0.c1)) IN (((rt0.c2) NOT NULL), 0xffffffffced0b027))) ORDER BY 0Xffffffffb6a154d4 DESC, CAST(2.79314423E8 COLLATE NOCASE AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))<((t1.c0)))) BETWEEN (LOWER(DISTINCT t1.c0)) AND ((rt0.c2 IN (t1.c0)))) FULL OUTER JOIN t1 ON rt0.c0 WHERE (((0.07834403013404556)IS NOT(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((0.07834403013404556)IS NOT(t1.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))<((t1.c0)))) BETWEEN (LOWER(DISTINCT t1.c0)) AND ((rt0.c2 IN (t1.c0)))) FULL OUTER JOIN t1 ON rt0.c0);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))<((t1.c0)))) BETWEEN (LOWER(DISTINCT t1.c0)) AND ((rt0.c2 IN (t1.c0)))) FULL OUTER JOIN t1 ON rt0.c0 WHERE (((0.07834403013404556)IS NOT(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((0.07834403013404556)IS NOT(t1.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))<((t1.c0)))) BETWEEN (LOWER(DISTINCT t1.c0)) AND ((rt0.c2 IN (t1.c0)))) FULL OUTER JOIN t1 ON rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (- (rt0.c0)), 0.7344543737921999)) ORDER BY (UPPER(rt0.c1) IN ()) DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN LIKELY(DISTINCT rt0.c0) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-626019344'))) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (- (rt0.c0)), 0.7344543737921999)) IS TRUE)  as count FROM rt0 ORDER BY (UPPER(rt0.c1) IN ()) DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN LIKELY(DISTINCT rt0.c0) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-626019344'))) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (- (rt0.c0)), 0.7344543737921999)) ORDER BY (UPPER(rt0.c1) IN ()) DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN LIKELY(DISTINCT rt0.c0) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-626019344'))) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (- (rt0.c0)), 0.7344543737921999)) IS TRUE)  as count FROM rt0 ORDER BY (UPPER(rt0.c1) IN ()) DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN LIKELY(DISTINCT rt0.c0) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-626019344'))) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (- (rt0.c0)), 0.7344543737921999)) ORDER BY (UPPER(rt0.c1) IN ()) DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN LIKELY(DISTINCT rt0.c0) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-626019344'))) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END ASC;
SELECT * FROM t1, t0 WHERE ((((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY CAST(COALESCE(t1.c0, t1.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(COALESCE(t1.c0, t1.c0) AS REAL) DESC);
SELECT * FROM t1, t0 WHERE ((((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY CAST(COALESCE(t1.c0, t1.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(COALESCE(t1.c0, t1.c0) AS REAL) DESC);
SELECT * FROM t1, t0 WHERE ((((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY CAST(COALESCE(t1.c0, t1.c0) AS REAL) DESC;
SELECT ALL * FROM t0, rt0 WHERE ((((((-1.650577068E9 IN (rt0.c2)))OR((rt0.c1 IN ()))))AND((+ (t0.c0))))) ORDER BY (((t0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND (((NOT (rt0.c0))))) DESC, rt0.c0 COLLATE NOCASE DESC, CASE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((0.8105603115010018) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((-1.650577068E9 IN (rt0.c2)))OR((rt0.c1 IN ()))))AND((+ (t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND (((NOT (rt0.c0))))) DESC, rt0.c0 COLLATE NOCASE DESC, CASE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((0.8105603115010018) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((((-1.650577068E9 IN (rt0.c2)))OR((rt0.c1 IN ()))))AND((+ (t0.c0))))) ORDER BY (((t0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND (((NOT (rt0.c0))))) DESC, rt0.c0 COLLATE NOCASE DESC, CASE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((0.8105603115010018) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((-1.650577068E9 IN (rt0.c2)))OR((rt0.c1 IN ()))))AND((+ (t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND (((NOT (rt0.c0))))) DESC, rt0.c0 COLLATE NOCASE DESC, CASE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((0.8105603115010018) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((((-1.650577068E9 IN (rt0.c2)))OR((rt0.c1 IN ()))))AND((+ (t0.c0))))) ORDER BY (((t0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND (((NOT (rt0.c0))))) DESC, rt0.c0 COLLATE NOCASE DESC, CASE ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((0.8105603115010018) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, t0, rt0);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, t0, rt0);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE (rt0.c1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON CAST((t0.c0 IN ()) AS INTEGER) WHERE (((((((t0.c0) IS FALSE))AND((t1.c0 IN ()))))OR(-1.21822314E9)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) IS FALSE))AND((t1.c0 IN ()))))OR(-1.21822314E9))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON CAST((t0.c0 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON CAST((t0.c0 IN ()) AS INTEGER) WHERE (((((((t0.c0) IS FALSE))AND((t1.c0 IN ()))))OR(-1.21822314E9)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) IS FALSE))AND((t1.c0 IN ()))))OR(-1.21822314E9))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON CAST((t0.c0 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON CAST((t0.c0 IN ()) AS INTEGER) WHERE (((((((t0.c0) IS FALSE))AND((t1.c0 IN ()))))OR(-1.21822314E9)));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0) IS FALSE))OR(((rt0.c0)<(rt0.c2)))))OR(((NULL) NOTNULL))))OR(CASE rt0.c2  WHEN x'' THEN rt0.c1 END)))AND(CAST(rt0.c0 AS TEXT)))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) IS FALSE))OR(((rt0.c0)<(rt0.c2)))))OR(((NULL) NOTNULL))))OR(CASE rt0.c2  WHEN x'' THEN rt0.c1 END)))AND(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ()));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0) IS FALSE))OR(((rt0.c0)<(rt0.c2)))))OR(((NULL) NOTNULL))))OR(CASE rt0.c2  WHEN x'' THEN rt0.c1 END)))AND(CAST(rt0.c0 AS TEXT)))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) IS FALSE))OR(((rt0.c0)<(rt0.c2)))))OR(((NULL) NOTNULL))))OR(CASE rt0.c2  WHEN x'' THEN rt0.c1 END)))AND(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ()));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0) IS FALSE))OR(((rt0.c0)<(rt0.c2)))))OR(((NULL) NOTNULL))))OR(CASE rt0.c2  WHEN x'' THEN rt0.c1 END)))AND(CAST(rt0.c0 AS TEXT)))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ());
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(CASE WHEN x'' THEN t0.c0 END AS NUMERIC) DESC, (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN x'' THEN t0.c0 END AS NUMERIC) DESC, (t0.c0 IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(CASE WHEN x'' THEN t0.c0 END AS NUMERIC) DESC, (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN x'' THEN t0.c0 END AS NUMERIC) DESC, (t0.c0 IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(CASE WHEN x'' THEN t0.c0 END AS NUMERIC) DESC, (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))<=(((((NULL))<(('')))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)IS(rt0.c0))))<=(((((NULL))<((''))))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))<=(((((NULL))<(('')))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)IS(rt0.c0))))<=(((((NULL))<((''))))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))<=(((((NULL))<(('')))))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE BINARY);
SELECT * FROM t1, rt0, t0 WHERE (((((rt0.c0) IS FALSE))%((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))%((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE (((((rt0.c0) IS FALSE))%((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))%((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE (((((rt0.c0) IS FALSE))%((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c0))))));
SELECT ALL * FROM rt0, t0 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN 0.6957371371836324 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END))) ORDER BY LIKELY(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) ASC, (((rt0.c2) NOTNULL) IN ((((rt0.c0))<=((rt0.c1))), CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN 0.6957371371836324 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY LIKELY(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) ASC, (((rt0.c2) NOTNULL) IN ((((rt0.c0))<=((rt0.c1))), CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC);
SELECT ALL * FROM rt0, t0 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN 0.6957371371836324 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END))) ORDER BY LIKELY(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) ASC, (((rt0.c2) NOTNULL) IN ((((rt0.c0))<=((rt0.c1))), CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN 0.6957371371836324 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY LIKELY(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) ASC, (((rt0.c2) NOTNULL) IN ((((rt0.c0))<=((rt0.c1))), CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC);
SELECT ALL * FROM rt0, t0 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN 0.6957371371836324 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END))) ORDER BY LIKELY(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))) ASC, (((rt0.c2) NOTNULL) IN ((((rt0.c0))<=((rt0.c1))), CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR('-362538045')))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR('-362538045')))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR('-362538045')))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR('-362538045')))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR('-362538045')))AND(rt0.c2))))));
SELECT * FROM t0, t1 WHERE (NULL) ORDER BY ((((MAX(t1.c0, t0.c0))OR((~ (t1.c0)))))OR(((t0.c0) NOTNULL))), (t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, t1 ORDER BY ((((MAX(t1.c0, t0.c0))OR((~ (t1.c0)))))OR(((t0.c0) NOTNULL))), (t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0, t1 WHERE (NULL) ORDER BY ((((MAX(t1.c0, t0.c0))OR((~ (t1.c0)))))OR(((t0.c0) NOTNULL))), (t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, t1 ORDER BY ((((MAX(t1.c0, t0.c0))OR((~ (t1.c0)))))OR(((t0.c0) NOTNULL))), (t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0, t1 WHERE (NULL) ORDER BY ((((MAX(t1.c0, t0.c0))OR((~ (t1.c0)))))OR(((t0.c0) NOTNULL))), (t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((('i\Oz') NOT BETWEEN (((t0.c0)*(t0.c0))) AND (((t0.c0)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('i\Oz') NOT BETWEEN (((t0.c0)*(t0.c0))) AND (((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('i\Oz') NOT BETWEEN (((t0.c0)*(t0.c0))) AND (((t0.c0)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('i\Oz') NOT BETWEEN (((t0.c0)*(t0.c0))) AND (((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('i\Oz') NOT BETWEEN (((t0.c0)*(t0.c0))) AND (((t0.c0)AND(t0.c0)))));
SELECT ALL * FROM t0 INNER JOIN t1 ON (NOT (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE (CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (NOT (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)));
SELECT ALL * FROM t0 INNER JOIN t1 ON (NOT (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE (CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (NOT (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)));
SELECT ALL * FROM t0 INNER JOIN t1 ON (NOT (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE (CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (LOWER(rt0.c0) IN ()) WHERE (CAST(t1.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (LOWER(rt0.c0) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (LOWER(rt0.c0) IN ()) WHERE (CAST(t1.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (LOWER(rt0.c0) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (LOWER(rt0.c0) IN ()) WHERE (CAST(t1.c0 COLLATE BINARY AS INTEGER));
SELECT * FROM rt0, t0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (UPPER(rt0.c2)))) ORDER BY ((NULLIF(t0.c0, t0.c0))>=(0.17699073016265632)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (UPPER(rt0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NULLIF(t0.c0, t0.c0))>=(0.17699073016265632)) DESC);
SELECT * FROM rt0, t0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (UPPER(rt0.c2)))) ORDER BY ((NULLIF(t0.c0, t0.c0))>=(0.17699073016265632)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (UPPER(rt0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NULLIF(t0.c0, t0.c0))>=(0.17699073016265632)) DESC);
SELECT * FROM rt0, t0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (UPPER(rt0.c2)))) ORDER BY ((NULLIF(t0.c0, t0.c0))>=(0.17699073016265632)) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN t1 WHERE (((((((((((((((((rt0.c2)AND('-392712721')))OR(CAST(rt0.c1 AS REAL))))AND(0.7654478267252971)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))OR((rt0.c0 IN (t1.c0, rt0.c0)))))AND(CASE WHEN rt0.c2 THEN t1.c0 END))) ORDER BY x'9255', ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END)OR(((t1.c0)GLOB(t1.c0)))))OR(rt0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c2)AND('-392712721')))OR(CAST(rt0.c1 AS REAL))))AND(0.7654478267252971)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))OR((rt0.c0 IN (t1.c0, rt0.c0)))))AND(CASE WHEN rt0.c2 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN t1 ORDER BY x'9255', ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END)OR(((t1.c0)GLOB(t1.c0)))))OR(rt0.c2 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN t1 WHERE (((((((((((((((((rt0.c2)AND('-392712721')))OR(CAST(rt0.c1 AS REAL))))AND(0.7654478267252971)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))OR((rt0.c0 IN (t1.c0, rt0.c0)))))AND(CASE WHEN rt0.c2 THEN t1.c0 END))) ORDER BY x'9255', ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END)OR(((t1.c0)GLOB(t1.c0)))))OR(rt0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c2)AND('-392712721')))OR(CAST(rt0.c1 AS REAL))))AND(0.7654478267252971)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))OR((rt0.c0 IN (t1.c0, rt0.c0)))))AND(CASE WHEN rt0.c2 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN t1 ORDER BY x'9255', ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END)OR(((t1.c0)GLOB(t1.c0)))))OR(rt0.c2 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN t1 WHERE (((((((((((((((((rt0.c2)AND('-392712721')))OR(CAST(rt0.c1 AS REAL))))AND(0.7654478267252971)))AND(LOWER(DISTINCT rt0.c1))))AND(((((rt0.c1)OR(t0.c0)))AND(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))OR((rt0.c0 IN (t1.c0, rt0.c0)))))AND(CASE WHEN rt0.c2 THEN t1.c0 END))) ORDER BY x'9255', ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END)OR(((t1.c0)GLOB(t1.c0)))))OR(rt0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((((NULL)OR(t1.c0)))|((- (t1.c0)))) WHERE (((CAST(t0.c0 AS NUMERIC))>((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))>((t1.c0 IN ())))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((((NULL)OR(t1.c0)))|((- (t1.c0)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((((NULL)OR(t1.c0)))|((- (t1.c0)))) WHERE (((CAST(t0.c0 AS NUMERIC))>((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))>((t1.c0 IN ())))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((((NULL)OR(t1.c0)))|((- (t1.c0)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((((NULL)OR(t1.c0)))|((- (t1.c0)))) WHERE (((CAST(t0.c0 AS NUMERIC))>((t1.c0 IN ()))));
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((SQLITE_SOURCE_ID())AND((rt0.c1 IN ()))))OR(((t1.c0)>(rt0.c2)))) WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((SQLITE_SOURCE_ID())AND((rt0.c1 IN ()))))OR(((t1.c0)>(rt0.c2)))));
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((SQLITE_SOURCE_ID())AND((rt0.c1 IN ()))))OR(((t1.c0)>(rt0.c2)))) WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((SQLITE_SOURCE_ID())AND((rt0.c1 IN ()))))OR(((t1.c0)>(rt0.c2)))));
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((((SQLITE_SOURCE_ID())AND((rt0.c1 IN ()))))OR(((t1.c0)>(rt0.c2)))) WHERE (rt0.c2 COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN (((rt0.c2))>=((NULL))) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)AND(t1.c0)))OR(rt0.c1)) THEN (t1.c0 IN (rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 END THEN CAST(rt0.c0 AS BLOB) ELSE ((t1.c0) BETWEEN (t1.c0) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) IS FALSE)  WHEN (((rt0.c2))>=((NULL))) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)AND(t1.c0)))OR(rt0.c1)) THEN (t1.c0 IN (rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 END THEN CAST(rt0.c0 AS BLOB) ELSE ((t1.c0) BETWEEN (t1.c0) AND (x'')) END) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN (((rt0.c2))>=((NULL))) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)AND(t1.c0)))OR(rt0.c1)) THEN (t1.c0 IN (rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 END THEN CAST(rt0.c0 AS BLOB) ELSE ((t1.c0) BETWEEN (t1.c0) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) IS FALSE)  WHEN (((rt0.c2))>=((NULL))) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)AND(t1.c0)))OR(rt0.c1)) THEN (t1.c0 IN (rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 END THEN CAST(rt0.c0 AS BLOB) ELSE ((t1.c0) BETWEEN (t1.c0) AND (x'')) END) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN (((rt0.c2))>=((NULL))) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)AND(t1.c0)))OR(rt0.c1)) THEN (t1.c0 IN (rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 END THEN CAST(rt0.c0 AS BLOB) ELSE ((t1.c0) BETWEEN (t1.c0) AND (x'')) END);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE (NULL) ORDER BY (('') ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (('') ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE (NULL) ORDER BY (('') ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY (('') ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE (NULL) ORDER BY (('') ISNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((((t1.c0))<((rt0.c0))), NULL COLLATE RTRIM, (NOT (t1.c0))))<=(((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2) IS TRUE), ((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0))<((rt0.c0))), NULL COLLATE RTRIM, (NOT (t1.c0))))<=(((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2) IS TRUE), ((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((((t1.c0))<((rt0.c0))), NULL COLLATE RTRIM, (NOT (t1.c0))))<=(((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2) IS TRUE), ((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0))<((rt0.c0))), NULL COLLATE RTRIM, (NOT (t1.c0))))<=(((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2) IS TRUE), ((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((((t1.c0))<((rt0.c0))), NULL COLLATE RTRIM, (NOT (t1.c0))))<=(((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2) IS TRUE), ((rt0.c0) NOTNULL)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS NUMERIC)))>=((-1.2636913E8))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS NUMERIC)))>=((-1.2636913E8)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS NUMERIC)))>=((-1.2636913E8))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS NUMERIC)))>=((-1.2636913E8)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS NUMERIC)))>=((-1.2636913E8))));
SELECT * FROM rt0, t1, t0 NOT INDEXED WHERE (((((rt0.c0)==(t1.c0)))LIKE((- (''))))) ORDER BY ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM, ((((((((((rt0.c2)<<(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((t1.c0)LIKE(rt0.c2)))))AND((t1.c0 IN ()))))OR((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)==(t1.c0)))LIKE((- (''))))) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM, ((((((((((rt0.c2)<<(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((t1.c0)LIKE(rt0.c2)))))AND((t1.c0 IN ()))))OR((- (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0, t1, t0 NOT INDEXED WHERE (((((rt0.c0)==(t1.c0)))LIKE((- (''))))) ORDER BY ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM, ((((((((((rt0.c2)<<(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((t1.c0)LIKE(rt0.c2)))))AND((t1.c0 IN ()))))OR((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)==(t1.c0)))LIKE((- (''))))) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM, ((((((((((rt0.c2)<<(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((t1.c0)LIKE(rt0.c2)))))AND((t1.c0 IN ()))))OR((- (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0, t1, t0 NOT INDEXED WHERE (((((rt0.c0)==(t1.c0)))LIKE((- (''))))) ORDER BY ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM, ((((((((((rt0.c2)<<(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((t1.c0)LIKE(rt0.c2)))))AND((t1.c0 IN ()))))OR((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM t1, rt0 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END COLLATE NOCASE WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END COLLATE NOCASE);
SELECT * FROM t1, rt0 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END COLLATE NOCASE WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END COLLATE NOCASE);
SELECT * FROM t1, rt0 FULL OUTER JOIN t0 ON CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END COLLATE NOCASE WHERE (t1.c0);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((((t0.c0)IS NOT(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CAST(x'' AS INTEGER)))) ORDER BY TRIM((t1.c0 IN ())) ASC, (((((((((t1.c0)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) IN ((+ (t1.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY TRIM((t1.c0 IN ())) ASC, (((((((((t1.c0)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) IN ((+ (t1.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((((t0.c0)IS NOT(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CAST(x'' AS INTEGER)))) ORDER BY TRIM((t1.c0 IN ())) ASC, (((((((((t1.c0)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) IN ((+ (t1.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY TRIM((t1.c0 IN ())) ASC, (((((((((t1.c0)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) IN ((+ (t1.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM t1, t0, rt0 WHERE (((((t0.c0)IS NOT(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CAST(x'' AS INTEGER)))) ORDER BY TRIM((t1.c0 IN ())) ASC, (((((((((t1.c0)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)) IN ((+ (t1.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) ASC;
SELECT ALL * FROM t1 WHERE ((NOT (0.7053254699022821))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.7053254699022821))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((NOT (0.7053254699022821))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.7053254699022821))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((NOT (0.7053254699022821))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c0)%(t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c0)%(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c0)%(t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c0)%(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c0)%(t1.c0)) COLLATE NOCASE);
SELECT * FROM t0, t1 WHERE (((((t0.c0) NOT NULL))&('-*듷')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))&('-*듷'))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (((((t0.c0) NOT NULL))&('-*듷')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))&('-*듷'))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (((((t0.c0) NOT NULL))&('-*듷')));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (((('-536519027')OR(((rt0.c1)>=(rt0.c2)))))AND(((t1.c0)|(t1.c0)))) FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) IS FALSE) WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((0.5820036953804121)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((0.5820036953804121)<(t0.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((('-536519027')OR(((rt0.c1)>=(rt0.c2)))))AND(((t1.c0)|(t1.c0)))) FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (((('-536519027')OR(((rt0.c1)>=(rt0.c2)))))AND(((t1.c0)|(t1.c0)))) FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) IS FALSE) WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((0.5820036953804121)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((0.5820036953804121)<(t0.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((('-536519027')OR(((rt0.c1)>=(rt0.c2)))))AND(((t1.c0)|(t1.c0)))) FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) IS FALSE));
SELECT * FROM rt0, t0, t1 WHERE (IFNULL(rt0.c1, rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c1, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE (IFNULL(rt0.c1, rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c1, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, t1);
SELECT * FROM rt0, t0, t1 WHERE (IFNULL(rt0.c1, rt0.c2) COLLATE NOCASE);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((NOT (t1.c0)), ((t1.c0)>>(t1.c0)), ((t1.c0)GLOB(t1.c0)))) AND (((t1.c0 IN ()), 'k證', (((t1.c0)) NOT BETWEEN ((x'b805')) AND ((t1.c0))))))) ORDER BY CASE WHEN (~ (t1.c0)) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, t1.c0)) BETWEEN (((NOT (t1.c0)), ((t1.c0)>>(t1.c0)), ((t1.c0)GLOB(t1.c0)))) AND (((t1.c0 IN ()), 'k證', (((t1.c0)) NOT BETWEEN ((x'b805')) AND ((t1.c0))))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (~ (t1.c0)) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((NOT (t1.c0)), ((t1.c0)>>(t1.c0)), ((t1.c0)GLOB(t1.c0)))) AND (((t1.c0 IN ()), 'k證', (((t1.c0)) NOT BETWEEN ((x'b805')) AND ((t1.c0))))))) ORDER BY CASE WHEN (~ (t1.c0)) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, t1.c0)) BETWEEN (((NOT (t1.c0)), ((t1.c0)>>(t1.c0)), ((t1.c0)GLOB(t1.c0)))) AND (((t1.c0 IN ()), 'k證', (((t1.c0)) NOT BETWEEN ((x'b805')) AND ((t1.c0))))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (~ (t1.c0)) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((NOT (t1.c0)), ((t1.c0)>>(t1.c0)), ((t1.c0)GLOB(t1.c0)))) AND (((t1.c0 IN ()), 'k證', (((t1.c0)) NOT BETWEEN ((x'b805')) AND ((t1.c0))))))) ORDER BY CASE WHEN (~ (t1.c0)) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC;
SELECT * FROM t0 WHERE (((t0.c0)>=(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)>=(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)>=(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)>=(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)>=(t0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)<<((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)<<((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)<<((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)<<((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)<<((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT ALL * FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN t0.c0 THEN CAST('-1905633047' AS TEXT) ELSE CASE WHEN t0.c0 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END END WHERE (('Kc?''DH' IN (t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((x'') NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) ELSE ((rt0.c1)>=(rt0.c1)) END ASC  NULLS LAST, (((rt0.c1, rt0.c2, t0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((((t1.c0)OR(t1.c0)))AND(t1.c0)), '')) AND ((((rt0.c0)-(rt0.c1)), (NOT (rt0.c2)), ((rt0.c0) IS FALSE))))  NULLS FIRST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((('Kc?''DH' IN (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN t0.c0 THEN CAST('-1905633047' AS TEXT) ELSE CASE WHEN t0.c0 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END END ORDER BY CASE WHEN ((x'') NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) ELSE ((rt0.c1)>=(rt0.c1)) END ASC  NULLS LAST, (((rt0.c1, rt0.c2, t0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((((t1.c0)OR(t1.c0)))AND(t1.c0)), '')) AND ((((rt0.c0)-(rt0.c1)), (NOT (rt0.c2)), ((rt0.c0) IS FALSE))))  NULLS FIRST, rt0.c1  NULLS LAST);
SELECT ALL * FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN t0.c0 THEN CAST('-1905633047' AS TEXT) ELSE CASE WHEN t0.c0 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END END WHERE (('Kc?''DH' IN (t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((x'') NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) ELSE ((rt0.c1)>=(rt0.c1)) END ASC  NULLS LAST, (((rt0.c1, rt0.c2, t0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((((t1.c0)OR(t1.c0)))AND(t1.c0)), '')) AND ((((rt0.c0)-(rt0.c1)), (NOT (rt0.c2)), ((rt0.c0) IS FALSE))))  NULLS FIRST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((('Kc?''DH' IN (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN t0.c0 THEN CAST('-1905633047' AS TEXT) ELSE CASE WHEN t0.c0 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END END ORDER BY CASE WHEN ((x'') NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) ELSE ((rt0.c1)>=(rt0.c1)) END ASC  NULLS LAST, (((rt0.c1, rt0.c2, t0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((((t1.c0)OR(t1.c0)))AND(t1.c0)), '')) AND ((((rt0.c0)-(rt0.c1)), (NOT (rt0.c2)), ((rt0.c0) IS FALSE))))  NULLS FIRST, rt0.c1  NULLS LAST);
SELECT ALL * FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN t0.c0 THEN CAST('-1905633047' AS TEXT) ELSE CASE WHEN t0.c0 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END END WHERE (('Kc?''DH' IN (t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((x'') NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) ELSE ((rt0.c1)>=(rt0.c1)) END ASC  NULLS LAST, (((rt0.c1, rt0.c2, t0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((((t1.c0)OR(t1.c0)))AND(t1.c0)), '')) AND ((((rt0.c0)-(rt0.c1)), (NOT (rt0.c2)), ((rt0.c0) IS FALSE))))  NULLS FIRST, rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0, t1, t0 WHERE (CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0, t1, t0 WHERE (CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0, t1, t0 WHERE (CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (-6.33364039E8);
SELECT SUM(count) FROM (SELECT ALL ((-6.33364039E8) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (-6.33364039E8);
SELECT SUM(count) FROM (SELECT ALL ((-6.33364039E8) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (-6.33364039E8);
SELECT ALL * FROM t0 WHERE ((((t0.c0, CAST(NULL AS INTEGER), ((t0.c0) ISNULL)))<=((x'' COLLATE BINARY, CAST(t0.c0 AS INTEGER), 0X4587e5ad))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, CAST(NULL AS INTEGER), ((t0.c0) ISNULL)))<=((x'' COLLATE BINARY, CAST(t0.c0 AS INTEGER), 0X4587e5ad)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0, CAST(NULL AS INTEGER), ((t0.c0) ISNULL)))<=((x'' COLLATE BINARY, CAST(t0.c0 AS INTEGER), 0X4587e5ad))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, CAST(NULL AS INTEGER), ((t0.c0) ISNULL)))<=((x'' COLLATE BINARY, CAST(t0.c0 AS INTEGER), 0X4587e5ad)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0, CAST(NULL AS INTEGER), ((t0.c0) ISNULL)))<=((x'' COLLATE BINARY, CAST(t0.c0 AS INTEGER), 0X4587e5ad))));
SELECT * FROM t1, t0 WHERE (((CAST(t1.c0 AS INTEGER))>=(-401428541)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER))>=(-401428541))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (((CAST(t1.c0 AS INTEGER))>=(-401428541)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER))>=(-401428541))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (((CAST(t1.c0 AS INTEGER))>=(-401428541)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (UNLIKELY(DISTINCT rt0.c1) IN (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END)) WHERE ((((((rt0.c0)LIKE(rt0.c2)), '0.3570612767185861', CASE WHEN rt0.c1 THEN t1.c0 END))<=((rt0.c1, 422037182, t1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)LIKE(rt0.c2)), '0.3570612767185861', CASE WHEN rt0.c1 THEN t1.c0 END))<=((rt0.c1, 422037182, t1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (UNLIKELY(DISTINCT rt0.c1) IN (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (UNLIKELY(DISTINCT rt0.c1) IN (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END)) WHERE ((((((rt0.c0)LIKE(rt0.c2)), '0.3570612767185861', CASE WHEN rt0.c1 THEN t1.c0 END))<=((rt0.c1, 422037182, t1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)LIKE(rt0.c2)), '0.3570612767185861', CASE WHEN rt0.c1 THEN t1.c0 END))<=((rt0.c1, 422037182, t1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (UNLIKELY(DISTINCT rt0.c1) IN (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (UNLIKELY(DISTINCT rt0.c1) IN (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 END)) WHERE ((((((rt0.c0)LIKE(rt0.c2)), '0.3570612767185861', CASE WHEN rt0.c1 THEN t1.c0 END))<=((rt0.c1, 422037182, t1.c0 COLLATE NOCASE))));
SELECT * FROM rt0 WHERE ((((json_array_length('-1230940972', rt0.c0)))>((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR('-933465706')))))) ORDER BY (((((~ (rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CAST(rt0.c1 AS REAL))) ASC, ((((((((((rt0.c1)OR(x'')))OR(rt0.c0)))OR('-44180477')))AND(rt0.c0)))|((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((json_array_length('-1230940972', rt0.c0)))>((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR('-933465706')))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((((~ (rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CAST(rt0.c1 AS REAL))) ASC, ((((((((((rt0.c1)OR(x'')))OR(rt0.c0)))OR('-44180477')))AND(rt0.c0)))|((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((json_array_length('-1230940972', rt0.c0)))>((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR('-933465706')))))) ORDER BY (((((~ (rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CAST(rt0.c1 AS REAL))) ASC, ((((((((((rt0.c1)OR(x'')))OR(rt0.c0)))OR('-44180477')))AND(rt0.c0)))|((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((json_array_length('-1230940972', rt0.c0)))>((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR('-933465706')))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((((~ (rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CAST(rt0.c1 AS REAL))) ASC, ((((((((((rt0.c1)OR(x'')))OR(rt0.c0)))OR('-44180477')))AND(rt0.c0)))|((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((json_array_length('-1230940972', rt0.c0)))>((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR('-933465706')))))) ORDER BY (((((~ (rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CAST(rt0.c1 AS REAL))) ASC, ((((((((((rt0.c1)OR(x'')))OR(rt0.c0)))OR('-44180477')))AND(rt0.c0)))|((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE ('-126369130') ORDER BY ((((((rt0.c2) IS FALSE))OR((t0.c0 IN ()))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT (('-126369130') IS TRUE)  as count FROM t1, rt0, t0 ORDER BY ((((((rt0.c2) IS FALSE))OR((t0.c0 IN ()))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))))));
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE ('-126369130') ORDER BY ((((((rt0.c2) IS FALSE))OR((t0.c0 IN ()))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT (('-126369130') IS TRUE)  as count FROM t1, rt0, t0 ORDER BY ((((((rt0.c2) IS FALSE))OR((t0.c0 IN ()))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))))));
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE ('-126369130') ORDER BY ((((((rt0.c2) IS FALSE))OR((t0.c0 IN ()))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN t1 ON t0.c0 WHERE (CHANGES()) ORDER BY t0.c0, (((((+ (t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.19357083992336))))OR((t0.c0 IN ()))) ASC, (((((t0.c0)AND(t1.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t0 INNER JOIN t1 ON t0.c0 ORDER BY t0.c0, (((((+ (t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.19357083992336))))OR((t0.c0 IN ()))) ASC, (((((t0.c0)AND(t1.c0)))AND(t0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN t1 ON t0.c0 WHERE (CHANGES()) ORDER BY t0.c0, (((((+ (t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.19357083992336))))OR((t0.c0 IN ()))) ASC, (((((t0.c0)AND(t1.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t0 INNER JOIN t1 ON t0.c0 ORDER BY t0.c0, (((((+ (t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.19357083992336))))OR((t0.c0 IN ()))) ASC, (((((t0.c0)AND(t1.c0)))AND(t0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN t1 ON t0.c0 WHERE (CHANGES()) ORDER BY t0.c0, (((((+ (t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.19357083992336))))OR((t0.c0 IN ()))) ASC, (((((t0.c0)AND(t1.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1 WHERE (((((rt0.c0)&(rt0.c0)))IS(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c0)))IS(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t1 NOT INDEXED);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((rt0.c0)&(rt0.c0)))IS(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c0)))IS(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t1 NOT INDEXED);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((rt0.c0)&(rt0.c0)))IS(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL * FROM rt0, t0, t1 WHERE (x'') ORDER BY CASE (((rt0.c1))>((x'')))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CAST(rt0.c2 AS BLOB) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CASE (((rt0.c1))>((x'')))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CAST(rt0.c2 AS BLOB) END DESC);
SELECT ALL * FROM rt0, t0, t1 WHERE (x'') ORDER BY CASE (((rt0.c1))>((x'')))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CAST(rt0.c2 AS BLOB) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CASE (((rt0.c1))>((x'')))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CAST(rt0.c2 AS BLOB) END DESC);
SELECT ALL * FROM rt0, t0, t1 WHERE (x'') ORDER BY CASE (((rt0.c1))>((x'')))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CAST(rt0.c2 AS BLOB) END DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((0.9948032611300988) NOT BETWEEN (((-9.86596279E8)IS NOT(t1.c0))) AND (CHANGES())));
SELECT SUM(count) FROM (SELECT ((((0.9948032611300988) NOT BETWEEN (((-9.86596279E8)IS NOT(t1.c0))) AND (CHANGES()))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((0.9948032611300988) NOT BETWEEN (((-9.86596279E8)IS NOT(t1.c0))) AND (CHANGES())));
SELECT SUM(count) FROM (SELECT ((((0.9948032611300988) NOT BETWEEN (((-9.86596279E8)IS NOT(t1.c0))) AND (CHANGES()))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((0.9948032611300988) NOT BETWEEN (((-9.86596279E8)IS NOT(t1.c0))) AND (CHANGES())));
SELECT ALL * FROM t0, rt0, t1 WHERE ((((- (t1.c0)))>>(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (t1.c0)))>>(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE ((((- (t1.c0)))>>(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (t1.c0)))>>(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL * FROM t0, rt0, t1 WHERE ((((- (t1.c0)))>>(((rt0.c1)IS NOT(rt0.c1)))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL * FROM rt0, t1 WHERE (CAST(((((rt0.c2)AND(t1.c0)))OR(rt0.c1)) AS REAL)) ORDER BY ((((rt0.c0) IS FALSE))<<(rt0.c0))  NULLS LAST, (((NOT (t1.c0))) BETWEEN (NULL) AND (ABS(DISTINCT rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND(t1.c0)))OR(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c0) IS FALSE))<<(rt0.c0))  NULLS LAST, (((NOT (t1.c0))) BETWEEN (NULL) AND (ABS(DISTINCT rt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1 WHERE (CAST(((((rt0.c2)AND(t1.c0)))OR(rt0.c1)) AS REAL)) ORDER BY ((((rt0.c0) IS FALSE))<<(rt0.c0))  NULLS LAST, (((NOT (t1.c0))) BETWEEN (NULL) AND (ABS(DISTINCT rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND(t1.c0)))OR(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c0) IS FALSE))<<(rt0.c0))  NULLS LAST, (((NOT (t1.c0))) BETWEEN (NULL) AND (ABS(DISTINCT rt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1 WHERE (CAST(((((rt0.c2)AND(t1.c0)))OR(rt0.c1)) AS REAL)) ORDER BY ((((rt0.c0) IS FALSE))<<(rt0.c0))  NULLS LAST, (((NOT (t1.c0))) BETWEEN (NULL) AND (ABS(DISTINCT rt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 INNER JOIN t0 ON ((0.8508558218137386) BETWEEN (t0.c0 COLLATE NOCASE) AND (((t1.c0)LIKE(t0.c0)))) WHERE (((((NOT (t1.c0)), TRIM(DISTINCT t0.c0), LOWER(t1.c0)))<((((t0.c0)>(t1.c0)), CASE WHEN t1.c0 THEN t0.c0 END, ((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t1.c0)), TRIM(DISTINCT t0.c0), LOWER(t1.c0)))<((((t0.c0)>(t1.c0)), CASE WHEN t1.c0 THEN t0.c0 END, ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((0.8508558218137386) BETWEEN (t0.c0 COLLATE NOCASE) AND (((t1.c0)LIKE(t0.c0)))));
SELECT ALL * FROM t1 INNER JOIN t0 ON ((0.8508558218137386) BETWEEN (t0.c0 COLLATE NOCASE) AND (((t1.c0)LIKE(t0.c0)))) WHERE (((((NOT (t1.c0)), TRIM(DISTINCT t0.c0), LOWER(t1.c0)))<((((t0.c0)>(t1.c0)), CASE WHEN t1.c0 THEN t0.c0 END, ((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t1.c0)), TRIM(DISTINCT t0.c0), LOWER(t1.c0)))<((((t0.c0)>(t1.c0)), CASE WHEN t1.c0 THEN t0.c0 END, ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((0.8508558218137386) BETWEEN (t0.c0 COLLATE NOCASE) AND (((t1.c0)LIKE(t0.c0)))));
SELECT ALL * FROM t1 INNER JOIN t0 ON ((0.8508558218137386) BETWEEN (t0.c0 COLLATE NOCASE) AND (((t1.c0)LIKE(t0.c0)))) WHERE (((((NOT (t1.c0)), TRIM(DISTINCT t0.c0), LOWER(t1.c0)))<((((t0.c0)>(t1.c0)), CASE WHEN t1.c0 THEN t0.c0 END, ((t0.c0) NOT NULL)))));
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t0 INDEXED BY i91, rt0, t1 WHERE (((CASE WHEN rt0.c2 THEN t1.c0 END)<=((((rt0.c2))=((t1.c0)))))) ORDER BY (~ (0.3256312244743156))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN t1.c0 END)<=((((rt0.c2))==((t1.c0)))))) IS TRUE)  as count FROM t0 INDEXED BY i91, rt0, t1 ORDER BY (~ (0.3256312244743156))  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i91, rt0, t1 WHERE (((CASE WHEN rt0.c2 THEN t1.c0 END)<=((((rt0.c2))=((t1.c0)))))) ORDER BY (~ (0.3256312244743156))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN t1.c0 END)<=((((rt0.c2))==((t1.c0)))))) IS TRUE)  as count FROM t0 INDEXED BY i91, rt0, t1 ORDER BY (~ (0.3256312244743156))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c0) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c0) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c0) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c0) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c0) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM t1, t0 WHERE (((CAST(t1.c0 AS INTEGER)) IS FALSE)) ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t0.c0, ((t1.c0)-(0.3204345333557106)), ((t0.c0)==(t1.c0)))) AND ((((((t0.c0)AND(t1.c0)))AND(t1.c0)), json_valid(t0.c0), (t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t1, t0 ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t0.c0, ((t1.c0)-(0.3204345333557106)), ((t0.c0)==(t1.c0)))) AND ((((((t0.c0)AND(t1.c0)))AND(t1.c0)), json_valid(t0.c0), (t1.c0 IN ())))));
SELECT ALL * FROM t1, t0 WHERE (((CAST(t1.c0 AS INTEGER)) IS FALSE)) ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t0.c0, ((t1.c0)-(0.3204345333557106)), ((t0.c0)==(t1.c0)))) AND ((((((t0.c0)AND(t1.c0)))AND(t1.c0)), json_valid(t0.c0), (t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t1, t0 ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t0.c0, ((t1.c0)-(0.3204345333557106)), ((t0.c0)==(t1.c0)))) AND ((((((t0.c0)AND(t1.c0)))AND(t1.c0)), json_valid(t0.c0), (t1.c0 IN ())))));
SELECT ALL * FROM t1, t0 WHERE (((CAST(t1.c0 AS INTEGER)) IS FALSE)) ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t0.c0, ((t1.c0)-(0.3204345333557106)), ((t0.c0)==(t1.c0)))) AND ((((((t0.c0)AND(t1.c0)))AND(t1.c0)), json_valid(t0.c0), (t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR((((t1.c0))==((rt0.c0))))))AND(((rt0.c1)-(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE BINARY)OR((((t1.c0))=((rt0.c0))))))AND(((rt0.c1)-(t1.c0))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR((((t1.c0))==((rt0.c0))))))AND(((rt0.c1)-(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE BINARY)OR((((t1.c0))=((rt0.c0))))))AND(((rt0.c1)-(t1.c0))))) IS TRUE)  as count FROM t0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR((((t1.c0))==((rt0.c0))))))AND(((rt0.c1)-(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((NOT (-999634669)) COLLATE NOCASE) ORDER BY (LIKELIHOOD(t1.c0, 0.9628302842565649) IN ());
SELECT SUM(count) FROM (SELECT (((NOT (-999634669)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (LIKELIHOOD(t1.c0, 0.9628302842565649) IN ()));
SELECT ALL * FROM t1 WHERE ((NOT (-999634669)) COLLATE NOCASE) ORDER BY (LIKELIHOOD(t1.c0, 0.9628302842565649) IN ());
SELECT SUM(count) FROM (SELECT (((NOT (-999634669)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (LIKELIHOOD(t1.c0, 0.9628302842565649) IN ()));
SELECT ALL * FROM t1 WHERE ((NOT (-999634669)) COLLATE NOCASE) ORDER BY (LIKELIHOOD(t1.c0, 0.9628302842565649) IN ());
