-- Time: 2024/06/08 21:32:29
-- Database: database81
-- Database version: 3.40.0
-- seed value: 4102920681
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 BLOB , c1 TEXT , c2 INTEGER ); -- 0ms;
UPDATE t0 SET (c1)=(NULL); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(0.42106112531352813); -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (x''); -- 13ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET c2=x'' WHERE ((x'')-(((t0.c0) NOTNULL))); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 11ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, ']շJ%._C'); -- 4ms;
CREATE UNIQUE INDEX i59 ON t0((c2 COLLATE NOCASE IN ()) COLLATE NOCASE,x'' ASC,((((((c1)AND(c1)))OR(x'')))IS NOT((('-333569769')||(c1)))) COLLATE RTRIM DESC) WHERE COALESCE((c0 IN (c2)), x'', ((0.6641600590221491)>=(c0)), CAST(c0 AS BLOB)); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.3587961566334479); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP INDEX "i59"; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-333569769')LIKE(NULL)) IN (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-333569769 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4168520666638088)) NOT BETWEEN (((('fn℗')>>(NULL)))) AND ((highlight(NULL, -1995502651, NULL, '-1e500')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=443961857 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('-297400969')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffe41760a0)OR(1413593230)))OR(-333569769)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_SOURCE_ID()) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1413593230'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.6641600590221491') IS TRUE))&(0.5469135113312917 COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1995502651 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET((('l9')||(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '2 sz=1413593230 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1680968858 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1995502651'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) NOT BETWEEN (((NULL)*(0.5201060645882144))) AND (((x'')<>(0.2231526938084336)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1461673501'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (QUOTE(0.13744275503570624) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(DISTINCT 0.5469135113312917, 0.23941161437172165)) BETWEEN ((((']շJ%._C'))>=((-1.995502651E9)))) AND (((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-333569769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1836411305 sz=-1929524331 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-940411051 sz=-297400969 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.836411305E9 IN ()))IS NOT(TRIM(DISTINCT '1413593230'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(-4.68229984E8 AS INTEGER) THEN (+ (NULL)) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')|(1225161198)))IS NOT((x'7a115f03' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))<<(((('㲁5/J>9'))==(('Fr'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('⢼paFc\') BETWEEN ('l9') AND (0xffffffffdf28ca35)))IS NOT(0.3587961566334479 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('鯿''')) NOT BETWEEN ((CAST(x'' AS BLOB))) AND (((('') NOT BETWEEN (-670912915) AND ('ycteHQD0'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=443961857 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x'')) NOT BETWEEN (('_')) AND ((NULL))))AND('443961857' COLLATE BINARY)))AND((((NULL))<((1225161198))))))AND(((NULL) NOT BETWEEN ('-_RM') AND (x'08da')))))AND(CASE NULL  WHEN NULL THEN '-745537756' WHEN x'' THEN x'' WHEN 0.37499972046891183 THEN NULL ELSE 0X70607957 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '973683166 904566751 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-418747590 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.'',J聀ig?')IS NOT(x'2a4d')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1736735415'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1900823478 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1609208033 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1920480821'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '726370667 sz=-513012697 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1631901508 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1736735415 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-130338938 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-468229984 sz=1680968858 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=726370667 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2992254622314946; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-17023664 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)OR('-1928052974')))AND(NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(x'2234')))-((((0.17683898224953398, x'', 0.2231526938084336))>(('-539131840', '\n', 419583605))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x''  WHEN 0.5978494166100553 THEN x'' WHEN x'e0fd' THEN '' WHEN '' THEN '' ELSE 0.41029006319305605 END)AND((('-1928052974')-(0.8179909149801389)))))OR(CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-513012697 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1934687099'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1836411305 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1262305631'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-1956585592 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6517922275061591)|(x'57231402')) IN ('q''/⋛' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.24999364334190566) IS FALSE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 1096495108 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-359597764 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE RTRIM))>=((((((((((NULL)AND(NULL)))AND(0.43589143795882646)))AND('<C')))OR(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1900823478 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.24985518078085867)) BETWEEN (('-1558758597')) AND ((0.37277404089024346)))) NOT BETWEEN (('230679944' IN ())) AND (TIME(x'', 'v*\bo d㧞!', NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.2587451557750635 COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1928052974 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('438941718' AS BLOB))AND(CAST('鯿''' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-510958216 sz=-682585516 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('')AND(x'2ec2')))OR(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 'm5T' THEN 0Xffffffffd3ab1fd0 ELSE 'h,' END)-(((NULL) BETWEEN (NULL) AND ('1682657689')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((0.454649257983749 IN (x'')), ((((-527776941)AND(NULL)))AND(-745537756)), (((('1')OR('KSB\I9')))AND(NULL)), (- (x'd8b1'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1934687099'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1368246543 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))>=((NULL))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1479148697 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e244') NOT BETWEEN (0Xffffffffc8d7271e) AND (0xffffffffbd8b33ce))) BETWEEN ((('413547761') ISNULL)) AND ((NULL IN (-682585516)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1479148697 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-539131840 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.1735650463080366)>=(x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1238802450 0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2054460691 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1022008187 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1916832876)OR(0.6430192908865641)))OR(NULL)))&(((x'')-(0x485e52b0)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1022008187 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x34889568; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1619504165 sz=940678906 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.022008187E9) NOT BETWEEN (NULL) AND (x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((0.5827631678768741) IS TRUE), ((x'e5e3') NOTNULL), 0.37277404089024346 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1735650463080366; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffdf28ca35 COLLATE RTRIM) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (((0X21d405da)>=('0.5827631678768741'))) AND (((((0.9081830673827438)OR(x'')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1823197555'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1413593230 sz=726370667 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 904566751 sz=-1836502326 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((RTRIM(0.47197574397204844))>=((((x'', NULL, x''))!=((NULL, x'ddea', '1920480821'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=443961857 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(0.1609015642334254, 'Fr') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('e>_Dat{I,') IS FALSE)))==((((((x'')AND('1413593230')))AND('1492658786'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '1619576003'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((0.37499972046891183 IN (0X339a0905)))) AND (((('k锆B➔!t*o') BETWEEN (0.2992254622314946) AND ('-874727024'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1391568540 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL)) NOT BETWEEN (('-1890296240')) AND ((0.454649257983749)))  WHEN ((0.8483735525072326)AND(0.6434140652094559)) THEN (((('-331131346')OR(x'')))OR(324559642)) ELSE -1040584360 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1098037048'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=514746981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1784295819 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1114558160 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-1214145257 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1321047149 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE RTRIM, NULLIF(1.39156854E9, NULL), CAST(x'56df' AS TEXT)))==((((((0Xffffffffee460577)AND(x'')))AND(0x67847ab7)), '', (((((((('\3')AND('269937139')))AND(0.9888741725031197)))OR(NULL)))AND(0Xfffffffff541397e))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1785959493 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=940678906 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1638496254 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) NOT BETWEEN ((((0xffffffff983558a2, x'7c7cf5ddf2a4', 0.8865091517665575))>((0.8865091517665575, '0.5201060645882144', 0.29641307683688833)))) AND ((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (((1.934687099E9))<((x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2002212336'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1214145257'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 'Q''/⋛'  WHEN NULL THEN 1.609208033E9 WHEN x'' THEN '' WHEN ']շj%._c' THEN NULL END AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=325680043 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-791763594 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-745537756 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((''))<((0X4e625245))), ((((x'')AND('438941718')))OR(1315066437)), ((((((((NULL)AND('-890727162')))AND(NULL)))OR(x'')))AND('X|x'))))<((x'2639cea0' COLLATE RTRIM, ((x'') IS FALSE), CASE 0xffffffff9059a083  WHEN 0.3355779837018519 THEN x'' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(0.2879726393332832, x'')) NOT BETWEEN (x'') AND (((NULL)||('PQZX[s')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1784295819 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1098037048 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=2140148599 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1691883413 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 455974699 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8857880102148716, '-527776941', NULL)) NOT BETWEEN ((x'', 0.24999364334190566, '8SsXfr竕')) AND ((x'', 0.13744275503570624, 'mq')))) NOT BETWEEN (((NULL) NOTNULL)) AND (MIN(0Xffffffff8b2b1653, 0x2e54b9ed))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('' IN ()) THEN ((0.41029006319305605)GLOB(x'')) ELSE QUOTE(NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-497272368 sz=-930388785 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 412101090 sz=-1573279443 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-910461065 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X51f0317d AS BLOB)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('-1836411305', NULL, 1.098037048E9)) BETWEEN ((x'', NULL, 0.8645100725809522)) AND (('534285209', 0.06041836160834568, -1.631901508E9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-930388785 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=760900054'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')=(1.098037048E9))))<=(((((('_O7_kp9V\n')OR(0X7b08ef99)))OR('W镨'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((NULL)OR(x'')))AND(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-250128561 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-631536668 0 sz=-1992975573 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-826476508 sz=279563183 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN '-791763594' THEN ')M' WHEN '' THEN x'92365107' WHEN '1061663383' THEN x'c88c' WHEN 0.831054355310075 THEN x'7076' WHEN 0.8865091517665575 THEN NULL ELSE '\r刁SA' END)OR(TRIM(NULL))))AND(DATETIME(x'', x'1ffa', x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN 0.16152043287309847 THEN x'' ELSE x'' END THEN ((0x5ce7753a)==(x'')) WHEN (NULL IN ()) THEN ((0.2581023448282622) IS FALSE) WHEN 'Infinity' COLLATE RTRIM THEN (NOT ('0.17683898224953398')) WHEN (NULL IN (NULL)) THEN (((NULL))>((-0.0))) WHEN ((0.4242959161417844) NOTNULL) THEN CAST(NULL AS TEXT) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.5469135113312917)/(0.3587961566334479)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1002937809 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=324559642 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-641097148 -874727024 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('')AND(NULL)))AND('-1890296240'))))>=(((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-930388785'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\r刁sa') NOT BETWEEN ('DJ)\Ki|N') AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=603190304 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 868657205 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=136620348 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1783504854 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1761046530 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')AND('v>')))OR(NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 2 sz=438941718 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2600972 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1558661099 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1440915949 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=821244546 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1040931121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1638496254 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-489004992' AS INTEGER))AND(CAST(x'' AS BLOB))))AND((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1861666657 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -1788025637 sz=1358054680 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3140322153449654 IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=-890727162 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.16152043287309847) NOT NULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')==(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '0.24985518078085867' COLLATE NOCASE THEN json_remove(2138611754, x'8b1a') WHEN ((x'')IS('C,\')) THEN ('-1214145257' IN ()) WHEN LIKELIHOOD(DISTINCT -1516953218, 0.32745959096870547) THEN (NOT (0.011033519809560577)) ELSE (('-1415191751') NOT BETWEEN (-1410928538) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7824291200071842))<>((0.09727975505174646))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) NOT BETWEEN ((('[Y+.Oyo')-(1916804480))) AND (((-727703535) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'6b63')) NOT BETWEEN ((1432062857)) AND ((x''))))+((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (-1.04058436E9)))!=(((x'db230918') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1762247030 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>(0.33417855710177047))) NOT BETWEEN (((NULL)>=(x''))) AND (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(('1X' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=388391729 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-682585516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-323265459'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN -1.80274818E8 THEN '' ELSE x'' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)LIKE(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-855307695 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-343780921 -682585516'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '301078680 0 -856685358 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1066326853 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-449645376 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1108108263')<('881366376')))<>((('1457942309')AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1011198'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1413593230 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))IS(0.5890422079235952 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) IS TRUE) THEN ((-6.62996267E8) BETWEEN (NULL) AND ('0.4242959161417844')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0x4172b738 AS TEXT) IN (CAST(NULL AS REAL), UPPER(DISTINCT 0.2587451557750635))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('g-')<<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') BETWEEN (0.2547495658389658) AND ('fBz6vG')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1619504165')<<('-925423842'))) BETWEEN (((NULL)||(-9223372036854775808))) AND (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-892225380 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=865732869 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1491452198 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2027418493 sz=815869686'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2075302979 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOT BETWEEN (((x'')IS NOT(''))) AND (CASE WHEN '1079488839' THEN 0.2547495658389658 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1900823478'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-90776247 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1932214630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1072460741 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1743973487'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=452966780 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 0xffffffffbd8b33ce, x'')) BETWEEN ((NULL, 'kl_	_JV', x'')) AND ((x'', 'G\', '-0.0'))))||('' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1011632135'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7499456918957368; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-464874512 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-226129962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1721495016 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=567543258 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('612585115')GLOB('')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1098037048 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6251463128423645)) BETWEEN ((CASE 0.41391151421777195  WHEN NULL THEN x'a94e' END)) AND (((NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2108251976 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1594914321'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'b29dbeb3')) NOT BETWEEN ((((0X2334508d)*(0X573074d5)))) AND ((((x'') NOT BETWEEN (x'') AND (0.46320058383705986))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('2.s>}t]', NULL, '942118444'))<=((-418747590, 0.1424699889908596, '-520105320'))))>=(((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '2044585253 1098037048'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('904566751' AS TEXT) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=443961857 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1836411305 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CAST(NULL AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1823197555 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3902512564510524 COLLATE RTRIM)+(((x'77c0')>>(0.4436572398019104)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-890727162'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 sz=627362449 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9479876873293223 AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 2 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (('904566751')GLOB('-497272368'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8645100725809522, 0.39164010663201265, '-54117247'))==((x'2c23', -4.97272368E8, 'bD5')))) BETWEEN (0.222700507196135) AND (('1097276904' IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -216027493 sz=1425857420'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1995502651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((-6.79568385E8)) BETWEEN ((0.6378723028413853)) AND (('!鴗<d'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-930388785'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.05623620902658433 IN ('325680043', 0.1735650463080366)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1799557706 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1659911945 sz=-17023664 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x1ee0b785)AND(((0Xffffffffcaeb3702)AND(x'')))))AND(((((((((0.4356379887201107)AND(0.01998030878517887)))OR(x'2a3f')))AND(NULL)))OR(x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1158672473'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1341627473 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=862588418'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1785959493'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=881366376 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))&(CASE WHEN 1.7976931348623157E308 THEN x'' ELSE 'v.0 ~e' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1146424808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.1735650463080366))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))<>(('-1338687292' IN (0.6784000704699039)))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-893903165 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'a0f9' THEN 'ﭧ\n%aqk9' ELSE x'26d4' END)IS((7.26370667E8 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((x'fe47')OR(0.3902512564510524)))AND(0.5469135113312917)))AND(x'')))AND('.'))  WHEN CASE WHEN NULL THEN NULL END THEN ((('0.4436572398019104')) NOT BETWEEN (('-550974923')) AND ((0Xffffffffd802ae6d))) WHEN (NOT ('-743759920')) THEN CAST(x'04ee' AS NUMERIC) WHEN ((0.7002660608313994)AND('-902728877')) THEN LIKELIHOOD('0.3140322153449654', 0.8445004168931415) ELSE (+ (0.5007682342859131)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1025911104 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1011394438 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN (0.21073249824504958) AND (0.5748567637509636)) THEN CAST(-3.33569769E8 AS REAL) WHEN ((NULL)LIKE('494176376')) THEN (+ (0.7695214577262337)) WHEN CAST('' AS INTEGER) THEN 'WB' COLLATE RTRIM WHEN (((''))<=(('1991107294'))) THEN CASE WHEN x'4fee' THEN NULL WHEN 0.09340591445238311 THEN 'A붧' WHEN 1733259122 THEN NULL END WHEN (('-1785959493') NOT BETWEEN (x'') AND (0.15413554172237498)) THEN CASE '1442728659'  WHEN 0.38405140236702495 THEN x'550f' WHEN x'1f65' THEN NULL WHEN x'' THEN 0.8865091517665575 WHEN '' THEN '' WHEN -1.415191751E9 THEN '0.24999364334190566' ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2076') NOT BETWEEN ('') AND ('?S5e*>ke'))) NOT BETWEEN (((x'e4ed') NOT NULL)) AND (('ﭧ\n%aqk9' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=351335760 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '455974699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1902608106 sz=-81953314'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'308f'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1638496254 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKE(0.6378723028413853, '-1364098377', '-')  WHEN CASE 0.8445492867207995  WHEN 0Xffffffffe77a4ffc THEN x'' END THEN '-468229984' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('冧\rh\rVl_\n' IN (0Xdbfe588, NULL)))OR(((0.29739721736096847) NOT NULL))))AND((('1225161198')>>(0.6251463128423645)))))OR((NOT (0.9534310086299521)))))AND((('鼫b') BETWEEN (NULL) AND (-789943851)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1022303389 -551343357 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-830408207') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1000981514 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE CAST((('qoamR䄃8') IS FALSE) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.24999364334190566, 0X13697bab, '')) BETWEEN ((((x'4039') BETWEEN (0x27cec98a) AND (x'')), (('1047079747') NOT BETWEEN (NULL) AND (940678906)), TIME(x'', 1096495108, x'e779'))) AND ((((((0xffffffff8ef7e8cf)AND('')))AND(3.24559642E8)), ((x'') BETWEEN (0.011369013777841497) AND (NULL)), 'ycteHQD0'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6810872448893385)&(NULL)))<<(((((748824346)AND(x'')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=472939952 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) NOT BETWEEN ((NULL)) AND ((x''))))>=((+ (-527776941)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1728402775 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (TRIM(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1413593230 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-818895838 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (x''))  WHEN (('-226520495')AND('')) THEN CAST('dM{Q]' AS NUMERIC) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1541700526'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN x'd8ac' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '-333569769' THEN NULL END)>=(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT '-743759920', 0.6251463128423645) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('2020675485') ISNULL))OR(((0X6e0e60d) BETWEEN (NULL) AND ('')))))OR((0.10006185393797862 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.40431721371528295) NOT NULL))<=((('㋊&~B5')&(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.181405649207651 THEN 0.47789936001831135 WHEN 0.12329133669087833 THEN x'4fd7' WHEN '-1073295910' THEN 1.916832876E9 END) BETWEEN (((NULL)|(x''))) AND (((((-137449202)OR(NULL)))OR(1225161198)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1250460880 sz=827918234 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1486741303 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '1567748241 sz=-930388785'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1390180821'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.37545240788374856 THEN '-297400969' WHEN x'' THEN NULL WHEN x'1f25' THEN 'ﭧ\n%aqk9' ELSE 'Z' END)<<(((x'27d8f1cf')LIKE(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1391568540 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=269937139 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('u|	P6+k㰙')) BETWEEN ((CAST(x'9f99' AS BLOB))) AND ((json('-1379525164')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'' IN (NULL, x''))  WHEN x'0c01' THEN ((0.6554206738439937)||('+N Q\n?')) ELSE (('-513012697') NOT BETWEEN (0X652e5a0b) AND (x'7a7d')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-930388785'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1114165810 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2044636944 -331131346 sz=-2002330863 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9203169691329366) IS FALSE) IN (((((0.2231526938084336)AND(NULL)))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE BINARY))==(((('-662996267')||(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-510958216 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-130338938')) BETWEEN ((((-1.89029624E9) NOT NULL))) AND (((((0.33417855710177047))>=(('-1928052974')))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1986432977 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1826611775'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '474931767 sz=-1660917658 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0X71b9e544)) BETWEEN (('[]')) AND ((777304557))) THEN 'BD''' ELSE (+ ('0.5469135113312917')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1285537411'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-892695507 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1005331388'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 sz=-857838956 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=943156324'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1954084931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('Bts^!Nm')AND(NULL)))AND('+N Q\n?')))OR(x'928f' COLLATE NOCASE)))OR((((0.36784019474856733)) NOT BETWEEN ((1)) AND ((NULL))))))OR(x'')))AND(json_quote(0.22456505978969088))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -1890296240 sz=1523763565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((((x'')AND('bgxl')))AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1784295819 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1100363833 sz=973683166 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=836910432 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((4.43961857E8) NOT BETWEEN (x'359c') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 sz=1091017548 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=981334249 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT ('1846959056')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.4356379887201107'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-4480468 -1836502326 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) NOT BETWEEN (('')) AND (('2135135248'))) IN (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '777304557 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.37277404089024346)AND(x'')))OR('1920480821')) IN (CAST(' a!N睄UX/' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (-1.785959493E9)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '6 sz=2018396611'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((210718656) NOT BETWEEN ('-1238802450') AND (0.5339311907910044))  WHEN TYPEOF(-1404793491) THEN ((0.7458988439663711) IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1461673501 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=456914013 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(CAST(NULL AS NUMERIC), (+ (0.42106112531352813))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-930388785 sz=-180274818'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('u^밸'))) NOT BETWEEN (((((((((0.8579942948027709)AND('硛')))AND('^){GX/_gQ')))AND(-1.80274818E8)))AND(NULL))) AND ((((NULL, NULL, ']\ꮽ]')) BETWEEN ((0.015914431252698646, NULL, 0.5653373448372109)) AND ((x'd2a6', x'', '1098037048'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1197205625 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -1579189626 sz=1691883413'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('623593320') AND (-1655915266))) BETWEEN (((x'') NOTNULL)) AND ((('') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5885459209795063) IS TRUE)) NOT BETWEEN (TYPEOF(DISTINCT NULL)) AND (UPPER(DISTINCT 1691883413))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1098037048 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=336493279 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-17023664'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '815228663 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1781661561 sz=-1960110509 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(CASE WHEN 'ꚜiq' THEN 0.48874194019537154 WHEN 1.680968858E9 THEN '1916832876' WHEN NULL THEN 0.39164010663201265 ELSE x'' END, (((x'', x'0e5b', '	<J96-mO'))>(('1916832876', x'241b', 0.05878575697537003)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=196319060 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((NULL)GLOB('-418747590'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=702662456 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1166989420 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2076329386 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=301002545 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('2107065264')AND(0.3479758176421395)))AND(x'')))+(853710909 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1784295819 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1148916783 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1743529549 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffe16dd4de) BETWEEN (0xffffffffda4c1a49) AND (0.6018782126650103)) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.321047149E9 IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1403299680 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=433539385 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1979821012 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-193972226'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1805437039 sz=-1582697520 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-180274818'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'894b')) BETWEEN ((CASE WHEN '1208282490' THEN '-662996267' WHEN x'' THEN 0.5687392450868234 WHEN NULL THEN NULL END)) AND ((((NULL) BETWEEN (x'') AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1321047149' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0X183b56c9, NULL)) BETWEEN (((('U}A')<>(NULL)), CAST('1638496254' AS BLOB), 0.011369013777841497)) AND ((((((x'982b')AND(x'3a42')))AND(0.02605872841676793)), ((x'') NOT BETWEEN (NULL) AND (NULL)), RTRIM(-539131840)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-42257282 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-418747590 sz=-1017253452 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT 1916832876))>(((0.15733145333411425) NOT BETWEEN (x'') AND (0.004931939168267396)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-527364530 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'd725')) BETWEEN ((LIKELY(DISTINCT 0.17683898224953398))) AND ((CASE 0.17683898224953398  WHEN 0.3386837097819031 THEN '' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-620477279 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(x'1076f908', x'ff5d') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (1.900823478E9)))IS NOT(((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'3ced')AND(0X6d04e4e6)))OR('-455676869')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) BETWEEN (('06X&B፷_')) AND ((NULL))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-863173097 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=777304557 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=514746981 unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE 'b	鉔Z'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((('455974699'))<=((443961857))), (('-1741986892') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1584921880'  WHEN CASE '2098617676'  WHEN NULL THEN x'056f' ELSE 0.8444315965913314 END THEN ((((874608068)OR(-3.33569769E8)))AND(NULL)) ELSE CASE WHEN NULL THEN 0.8925912456861103 END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '525597718'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-930388785'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-359597764'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1595114712 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-692725877 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))!=((NULL))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-22228697 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 -297400969 sz=1469293164'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(0.31675534146073814, NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=533615168 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('i<Pb]B' AS BLOB) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(1.214141104E9 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(x'1907')))GLOB(json_object(NULL, '1098037048'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1022008187'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR((('YZj')GLOB('-539131840')), CASE NULL  WHEN 0.13094552814442784 THEN NULL WHEN 0.11391176918161006 THEN '' WHEN x'' THEN '-1655902349' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (x'9f1a')))AND((0.8308771562633449 IN ()))))AND(((0.8448672668749919)%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1619576003 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'331a' COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=308045825 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1870930162'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-230311028'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-702900616'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-811480074'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2 sz=276945994'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-3.33569769E8) IS FALSE)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -4.97272368E8  WHEN ',O{!릐yf-' THEN NULL WHEN NULL THEN x'' WHEN NULL THEN 0.6452597103875758 END)<(0.5031446682435307)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-373555145'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(x'', json(0.888384303677232)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '580014833 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1144281280'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-497272368 sz=-1704323696 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '1201778125 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1885370711 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (-560468341)))AND((1096495108 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-513012697 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-51716530 483557799 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)&('738622691')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-833433099 1492658786 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.6430192908865641') BETWEEN (NULL) AND (0X2e54b9ed)))!=(((((((((0x19025675)AND('U}A')))AND('1254186756')))AND(x'')))AND(x'd8da')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, NULL, 0Xffffffffd63b83c4)) BETWEEN ((NULL, 1.096495108E9, '-1836411305')) AND ((NULL, '-1836502326', 0.6606878019942369))))OR(CASE WHEN -1.836411305E9 THEN 0.7695214577262337 WHEN 0.6046257536486076 THEN -1.785959493E9 WHEN NULL THEN -1.30338938E8 ELSE '' END)))OR(((x'') NOT BETWEEN (NULL) AND (0.5021950885827591)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1721021426 -1929524331 sz=160763652 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffb6295fee)LIKE(x'')))|((('0.39164010663201265')|('-9223372036854775808')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.5912961987543905 THEN 'D%' WHEN NULL THEN '2054408990' WHEN 0.6879250654016037 THEN x'' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0.1244307998973535 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5866609411888205 AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(-1.022008187E9))) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=997148564 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1329916688 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c756')IS NOT(2004158870))) BETWEEN (CASE -1070631207  WHEN '' THEN '+ꅡIM)2SI' END) AND (json_patch(-851420092, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1260128896 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-539131840 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1614324859 sz=139148976'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.035195113414692614)<('-1631901508')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-810744441 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('b2') AND ('0.1735650463080366'))) NOT BETWEEN (CAST(0.22474024582902297 AS REAL)) AND (CAST(-359597764 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1795104167'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2002212336 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('*Fmo+qp')OR('kA')))OR(x'')) IN (CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1368246543'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS TEXT))OR(0.23670558609479475)))OR(CAST('Cf[0{r\a8' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=-1631901508 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1798719018 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '109418611 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-654675295 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-1290093922 sz=1897827121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '1810869347'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.22408785226959405)<=('')))AND(((((0.16628483212614287)AND(NULL)))AND(0.664046802727925)))))OR(((0.5268478423347587) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) BETWEEN ((+ (x''))) AND (((((-2063243252)AND('')))OR(0xffffffffd3ab1fd0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 534368442 sz=1098037048 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1827257138 -903847977 sz=-1907605328 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-682585516 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1247632614 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 4 sz=1266219546 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-743759920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-334109335 sz=865732869 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=865732869 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1661999836 sz=1944124185 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-874727024 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((('-890727162')|(0xffffffff85462db6)), CAST('-670912915' AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1567693442'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2033581770'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)<<(0x55e482a4)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-791763594 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=200837133 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-326440568' COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1682657689 sz=-76370960 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2113453025 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-4.97272368E8)=('bd''')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-954037121'))) BETWEEN ((1.619576003E9 IN ())) AND ((('943237701') BETWEEN (x'') AND ('-1929524331')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-555725414 0 sz=282920349 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1166314907'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-890727162 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '2052361992'  WHEN NULL THEN '.' END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1460722163 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1609208033'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('mq')&(NULL))) BETWEEN ((x'' IN ())) AND (('*p~L' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1233338169 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1214141104 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 -1825544753 sz=35895668 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1922374373 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('2002212336')))OR(((590288837)+(NULL)))))AND(((0x3d9c2fc2)IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.2315924101967216 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')/('-1507384613')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'', NULL, 0.28001819711835507)) BETWEEN ((0x2bdc168b, 1885069408, '1710076642')) AND ((x'', 0x2ca8f754, 0.4114494185091325)))  WHEN (~ (NULL)) THEN ((('')) BETWEEN ((-444260678)) AND ((''))) WHEN (((((((('-79064948')OR(x'')))AND(0.052884943023352005)))AND('-359597764')))AND(-7.45537756E8)) THEN (((((((('1716048392')OR('')))AND(0.7499456918957368)))OR(1638444064)))OR('-1748520356')) WHEN ((NULL) BETWEEN (NULL) AND (0x4e625245)) THEN (((x''))>=((0.7259422079600167))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>((0Xffffffffb1a5d772)))) BETWEEN (((((0xffffffffdf28ca35)OR(0.8697019239024353)))OR(0.5686869226357175))) AND (CASE WHEN '?pj\JW&o' THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1995502651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-723360254') IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '￿3&<f' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1368246543 -1349129479 sz=-504996258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-387827993 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1044879501 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=212683756 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5007682342859131 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-930388785'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=904566751 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3650555357008759; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=242048663 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1624333088 sz=-1892428387 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1040584360 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM(DISTINCT '-1366687917', NULL) THEN (((NULL, NULL, -1522265424)) BETWEEN ((NULL, x'', 'o/bq')) AND ((NULL, '-1066423708', -5.3913184E8))) WHEN (('') NOT BETWEEN (0X64d81795) AND (x'84eb')) THEN (((('')OR('1917420893')))OR('')) WHEN (x'' IN ()) THEN (('-745537756')<=('')) ELSE (('1638496254') NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1916832876 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.42998494454095726  WHEN 0.36462495962057717 THEN 0.2831094340305709 END)IS NOT(((x'9442') BETWEEN (x'') AND (2.140148599E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-597047643 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -510958216'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=604862773'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((' 0LIHHH')AND(NULL)))AND(''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1055469875)IS(NULL)))|(((((((((x'a9f9')OR(NULL)))AND(0.6180379278852317)))OR(0.5245035217504096)))AND(x'0aaa')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=375023208'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME((((0.09727975505174646))<((0.2151645980164676))), ((0X490008e7)*('-1319034699')), ((((((((x'')OR('0.6784000704699039')))AND(x'')))AND(NULL)))OR(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND (x'5e3d'))) NOT BETWEEN (CASE WHEN NULL THEN NULL ELSE '&u' END) AND ((~ (0.6870738607546718)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9935916354656019)IS NOT(0.8151898152878182)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-5502408 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=41613550'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1731225163 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1147751037 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1078070827'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1929524331 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)<>(NULL))  WHEN (x'' IN (x'6c94')) THEN ((NULL) NOT NULL) WHEN x'' COLLATE NOCASE THEN (('1900823478')<>(-4.97272368E8)) WHEN ((((((((-1.7023664E7)AND(x'76be')))AND(-1.23880245E9)))OR(0.181405649207651)))AND(x'')) THEN CHANGES() END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-278393054'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)&(('-74823644' IN ('F|Va')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-1864904186')OR(0.4007587507812663)))OR(x'f039')))OR(-418747590)))OR(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=-180274818'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '325680043 sz=1892988731 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1479148697 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '633045864 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1716253345 2 sz=-1836411305 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1049927117 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1074253833 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=413547761'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1934687099 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.0875005510161665 AS REAL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1924931230 -1890296240 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 413547761 sz=-970223498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('WB')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-415493903')<(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1463776129'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1636949529 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1631901508 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((('sG(''hnu')<(4.38941718E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(0.5687392450868234 COLLATE NOCASE, (NOT (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=240774000 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((''))>=((0.7650932196160598))) THEN ((x'') BETWEEN (0.9927710012510128) AND ('l9')) WHEN CAST(-1.368246543E9 AS TEXT) THEN CAST(x'' AS NUMERIC) WHEN (NULL IN ()) THEN CASE WHEN x'1a9f' THEN 3.25680043E8 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT CAST(NULL AS TEXT), 'qT' COLLATE BINARY, 65441735, (NULL IN (0.4733865100101493, 0.5937832560311963, '447024182'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-940411051'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1839120341'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(NULL)))AND(x'')))OR(NULL COLLATE RTRIM)))OR(CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((x'' IN ()), 0.5689807836972002); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.665447656197965 COLLATE NOCASE IN ()); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE t0 SET c2='', c0='-745537756'; -- 2ms;
UPDATE OR IGNORE rt0 SET c2=x'', c1=x''; -- 8ms;
UPDATE t0 SET (c0)=(x''); -- 0ms;
ANALYZE t0; -- 8ms;
ANALYZE t0; -- 1ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE ((((t0.c2)||(t0.c2))) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND ((t0.c2 IN ()))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
PRAGMA temp.default_cache_size; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL NTH_VALUE(((rt0.c0) ISNULL), ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (PRINTF(rt0.c0, NULL, rt0.c1)))) OVER () FROM rt0 WHERE (CAST(CASE WHEN 0.30880005217541806 THEN NULL ELSE 0.01066884559560699 END AS REAL)); -- 7ms;
PRAGMA integrity_check; -- 0ms;
DROP VIEW v0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 AFTER UPDATE ON t0 FOR EACH ROW  WHEN UPPER(DISTINCT (~ (t0.c0))) BEGIN DELETE FROM t0;END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(x'6fb8', -1.929524331E9); -- 0ms;
UPDATE t0 SET c1=0.34367675806474673, c1=NULL; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1, c1)=('0.38405140236702495', '') WHERE CASE TRIM(DISTINCT '763974109')  WHEN CASE WHEN rt0.c2 THEN 0.6584054904663541 ELSE NULL END THEN x'16e1' WHEN x'' THEN (rt0.c2 IN ()) WHEN ((rt0.c2)<>(rt0.c0)) THEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) END; -- 0ms;
DROP TABLE rt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_size = 4564376171188615674; -- 0ms;
UPDATE t0 SET (c1, c2)=('?5 (E', 0.8292017517293736) WHERE ((((t0.c0)<>(t0.c1)))-(CASE WHEN 0.890180373882906 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END)); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(0xffffffffdf592757) WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE CAST(((t0.c0)=(t0.c1)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(599329683) WHERE LENGTH(CASE WHEN t0.c0 THEN t0.c0 END); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(NULL, 'qN.-y8e26') WHERE (((t0.c2 IN ())) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET c1='0.3902512564510524'; -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c1)=(0X4aeaf89a, 'k?㋊IhTxL'); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=('-520083205') WHERE 'A秦	%wL*+*'; -- 0ms;
UPDATE OR FAIL t0 SET (c2)=('') WHERE CAST('873901658' AS INTEGER); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c2)=('1874967033'); -- 1ms;
UPDATE OR IGNORE t0 SET c1=NULL, c1='1^YnlEw'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'5ac6' WHERE ((t0.c2) IS TRUE) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'', c0=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=('479759169') WHERE '￿3&<F'; -- 0ms;
UPDATE t0 SET (c2, c1)=(0.10353360478778106, 0.5201060645882144) WHERE CASE SQLITE_COMPILEOPTION_GET(t0.c0)  WHEN ((t0.c2) NOT NULL) THEN (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) END; -- 1ms;
UPDATE OR FAIL t0 SET (c2)=('-1836502326') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.33237689974140283, c0=x'', c2='940678906' WHERE (+ (CASE WHEN x'7d76' THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c2=0.9534310086299521; -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0Xfffffffff5fedcf3, c2=x'' WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE CAST(t0.c0 AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE x'' COLLATE BINARY; -- 1ms;
UPDATE t0 SET c1=x'3bcc' WHERE x''; -- 0ms;
UPDATE t0 SET c0='q8', c2=x''; -- 0ms;
UPDATE t0 SET c2=x'202f'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE (((('-281207454') BETWEEN (1930017893) AND (t0.c2))) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(4.13547761E8) WHERE (+ (CASE t0.c0  WHEN '493662875' THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET (c2)=(NULL) WHERE MIN((- (t0.c1)), NULL); -- 0ms;
UPDATE OR ABORT t0 SET c1=0X6e39d3e4 WHERE t0.c1 COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET c1=NULL WHERE CAST(CAST(t0.c2 AS INTEGER) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'cafc'; -- 0ms;
UPDATE t0 SET (c2, c2, c0)=(NULL, '0.37277404089024346', x'') WHERE ((CASE t0.c2  WHEN t0.c2 THEN x'' END) BETWEEN (t0.c0) AND ((('Z') BETWEEN (t0.c2) AND (t0.c2)))); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('-1785959493'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('2'); -- 0ms;
UPDATE t0 SET (c0)=(-1891958493) WHERE (((CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN NULL THEN t0.c2 END))<=(((~ (x'8155'))))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE ((((NULL) IS TRUE))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN 0.5890422079235952 THEN t0.c2 END)); -- 0ms;
UPDATE t0 SET (c0)=(x'') WHERE CASE WHEN (((t0.c1, t0.c2, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((0.5537360566334207, t0.c0, t0.c0))) THEN DATETIME(t0.c2, t0.c2, t0.c2) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE CAST((-1645965580 IN ()) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'b4731675' WHERE (- ((+ (t0.c1)))); -- 0ms;
UPDATE t0 SET (c0, c0, c1)=(1451630707, 0.5585906378551342, 'Sb'); -- 0ms;
UPDATE OR ABORT t0 SET c0=-1415191751; -- 0ms;
UPDATE t0 SET (c1)=(NULL); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.7002660608313994); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=('5	ꂃ >a') WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'34e1'; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-209027031' WHERE ((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE BINARY; -- 1ms;
UPDATE OR IGNORE t0 SET c2='65451987' WHERE '^^v#7hl'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE CASE (- (t0.c2))  WHEN ((((t0.c0)OR(t0.c1)))OR(t0.c1)) THEN CAST(t0.c2 AS BLOB) WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))>=((t0.c1))) WHEN CAST(t0.c0 AS REAL) THEN CAST(t0.c1 AS TEXT) END; -- 1ms;
UPDATE t0 SET c0='-453366059' WHERE ((((t0.c2)<<(t0.c2)))+((t0.c2 IN (t0.c2)))); -- 0ms;
UPDATE OR REPLACE t0 SET c2=NULL, c2=0.015902998877849184 WHERE (CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE ABS((t0.c0 IN ())); -- 0ms;
UPDATE OR IGNORE t0 SET c1='2140148599'; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(NULL) WHERE ((((NULL)AND(CASE WHEN NULL THEN t0.c0 END)))OR((t0.c0 IN ()))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(0.15844640462422677) WHERE CASE CAST(t0.c2 AS NUMERIC)  WHEN (t0.c2 IN (t0.c1)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(614789410, x''); -- 0ms;
UPDATE t0 SET c2='-539131840' WHERE CAST(((t0.c2)IS(t0.c1)) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('2037860223') WHERE t0.c0; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0.4602737426325687); -- 0ms;
UPDATE t0 SET (c0, c0)=('', 0.4438252618397518) WHERE 0.6044731981625435; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2='1098037048'; -- 0ms;
UPDATE t0 SET c1=NULL, c2='2074650802', c0=-1321047149, c0='0.3355779837018519' WHERE t0.c2; -- 0ms;
UPDATE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(x''); -- 0ms;
UPDATE t0 SET (c1, c1)=(0Xffffffffff24f602, -2054460691); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(x'1684', 0Xffffffffaa06ea38); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=0.8618605972868849; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.8509599411504875); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'5fecd073' WHERE ((CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)>=(((((t0.c0)AND(t0.c2)))AND(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='TVxByS66⢼' WHERE ((0.3988895582637716)GLOB(t0.c0)) COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=('-1956585592') WHERE t0.c0; -- 0ms;
UPDATE OR ABORT t0 SET c0=x''; -- 0ms;
UPDATE t0 SET c2=NULL WHERE load_extension(UPPER(t0.c2), LIKELIHOOD(t0.c2, 0.01617170801768586)); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=-1712727150, c2='726370667' WHERE '㋊肒1[)#''f'; -- 0ms;
UPDATE t0 SET c1=x'', c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(0.4458666916050419, '-834154379') WHERE (((t0.c1 IN ()))IS NOT(SQLITE_COMPILEOPTION_GET(t0.c1))); -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('		'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c0)=(x'', 0xffffffffa1dab23c, '0.6251463128423645') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE ((((TYPEOF(DISTINCT t0.c0))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND('W]li肐')); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-1389567630); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE (((((x'')AND(t0.c0)))OR(t0.c2)) IN ()); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(0.274307318398195) WHERE ((((((((((NULL)OR(t0.c1)))OR(t0.c2)))OR(t0.c2)))OR(t0.c0)))/(t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.29066746331825744) WHERE (CASE WHEN t0.c1 THEN x'a54172660074' END IN (((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))); -- 1ms;
UPDATE t0 SET c0='-54117247'; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-550974923', c0=x'', c1=NULL; -- 0ms;
UPDATE t0 SET c2='-1341257819' WHERE (- (((t0.c2) NOT NULL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE (((HEX(t0.c2)))<((((t0.c1)<=(t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR ABORT t0 SET c0=0x5829038, c0=0.37277404089024346; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE CAST(((t0.c2) NOTNULL) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(x'', NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=('1435258105') WHERE (((0.8483735525072326, t0.c2, ((t0.c1)OR(t0.c1))))>=((t0.c1 COLLATE RTRIM, (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))), IFNULL(t0.c0, t0.c2)))); -- 0ms;
UPDATE t0 SET (c1, c0)=('0.9534310086299521', 0.8284668434960599); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL) WHERE ((CAST(t0.c0 AS BLOB))*(CAST(t0.c1 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='450552451', c0=x'' WHERE ((((t0.c2) NOT NULL)) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET c2='' WHERE (((t0.c0, t0.c2, t0.c0)) BETWEEN ((((t0.c2) ISNULL), t0.c2 COLLATE RTRIM, (t0.c2 IN ()))) AND ((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), '138809728', t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c1=x'' WHERE 0.8158941607520648; -- 0ms;
UPDATE t0 SET c0=-5.27776941E8; -- 0ms;
UPDATE OR FAIL t0 SET (c2, c2, c0, c0)=(NULL, -1.823197555E9, 0.39771841071677294, NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0X53b00d54; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-67035987', c2='b', c2=0Xffffffffe18b6578; -- 0ms;
UPDATE t0 SET c0=x'', c1=-7.45537756E8, c1=''; -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE (((t0.c1)LIKE(t0.c1)) IN ()); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=('838733117') WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END IN (CASE t0.c2  WHEN '' THEN t0.c1 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.15977147325207397); -- 0ms;
UPDATE OR ABORT t0 SET c1='0.6810872448893385'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.6517383354318231; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c1='[x' WHERE '1448458847'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.4806174614448574, c2='BekWd'; -- 0ms;
UPDATE t0 SET c0=0.8179909149801389; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-5.10958216E8); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.7168500421752175); -- 0ms;
UPDATE t0 SET c2='-1995502651' WHERE ((((((((((t0.c2)AND(t0.c2)))OR(NULL)))AND(t0.c2)))AND(t0.c2)))IS('')); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0x6d94a2be) WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE (+ (((t0.c2) BETWEEN (t0.c0) AND (NULL)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c0)=(NULL, 0.22456505978969088, x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0x1eb0f724) WHERE (NOT ((('')/(t0.c2)))); -- 0ms;
UPDATE t0 SET (c2)=('-513012697'); -- 0ms;
UPDATE OR IGNORE t0 SET c2='_N', c0=1206742022 WHERE t0.c0; -- 0ms;
UPDATE t0 SET (c0)=(0X2dc176c4); -- 1ms;
UPDATE OR FAIL t0 SET (c0, c0)=(NULL, 0.222700507196135); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=0.24985518078085867 WHERE t0.c2; -- 0ms;
UPDATE OR ABORT t0 SET c0='-1040584360'; -- 0ms;
UPDATE t0 SET c0='K,V#s5o' WHERE '1557258259'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'2ea9', c2=NULL, c0='0.011033519809560577' WHERE ((((t0.c0) ISNULL)) NOT BETWEEN (LOWER(DISTINCT t0.c0)) AND (((((t0.c2)AND(t0.c2)))OR(x'e8a8')))); -- 0ms;
UPDATE t0 SET c1=x'1243' WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))>=((t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1913492500'; -- 0ms;
UPDATE OR IGNORE t0 SET c2='2140148599', c2=x'' WHERE CAST(t0.c2 COLLATE BINARY AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('in') WHERE ((1.214141104E9)<=((((NULL))<((t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(-1558758597) WHERE ((((((t0.c2)OR(t0.c2)))AND(t0.c1)))=(t0.c1 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t0 SET c2='', c0=0.38405140236702495, c2=x'6ce8' WHERE LIKELY(t0.c2) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c0=1.225161198E9; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.35114302589239266 WHERE ((((((t0.c0)AND(t0.c1)))OR(t0.c2)))!=(((t0.c1)/(0.9856426854584494)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE CAST(CAST(t0.c0 AS INTEGER) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.6163418814215429); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('') WHERE t0.c1; -- 0ms;
UPDATE t0 SET c2='FALSE', c0=0Xfffffffff6f8cb42; -- 1ms;
UPDATE OR FAIL t0 SET c2='1473581181' WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0Xffffffffe5e9578b) WHERE 0Xffffffffae7236f1; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c2)=(NULL, 0.7536300283231949); -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(x'7090'); -- 0ms;
UPDATE OR IGNORE t0 SET c1='f'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('-1515479277'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=NULL WHERE 0.04908092360745775; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE t0.c0; -- 0ms;
UPDATE t0 SET c2=x''; -- 0ms;
UPDATE OR ABORT t0 SET (c2, c2)=(x'', '-16593345') WHERE CAST(((0xffffffffe4555dc7) NOT BETWEEN (t0.c1) AND (t0.c1)) AS TEXT); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-1166989420'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET c1=x'8167', c2='' WHERE (CAST(t0.c2 AS NUMERIC) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.46610733737076715, c1=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR FAIL t0 SET c1='1301977339', c1='w\n Xigw'; -- 0ms;
UPDATE t0 SET c2=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('') WHERE ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE; -- 0ms;
UPDATE t0 SET c2=-968508687 WHERE (((t0.c0)<=(t0.c0)) IN ((('250185483') NOT BETWEEN (t0.c2) AND (t0.c0)))); -- 0ms;
UPDATE OR ABORT t0 SET c1='-418747590'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0.9341304342041391 WHERE 0.1682975108345286 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE ((CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END)&(((t0.c2)>>(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
UPDATE t0 SET c2=x'b39f' WHERE ((((t0.c1)<=(t0.c2))) NOTNULL); -- 0ms;
UPDATE t0 SET (c1, c2)=(x'', 0.12963854464395586) WHERE t0.c2; -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c2)=(0.5978494166100553, 0.3846628305891492) WHERE CAST(((t0.c1) IS TRUE) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(0.7961332797280973, '1836490007') WHERE (((((t0.c0, t0.c1, t0.c0))<((t0.c0, t0.c0, t0.c0))))AND(UNLIKELY(DISTINCT t0.c0))); -- 0ms;
UPDATE t0 SET c2=0.9479876873293223, c1=0.5404964614062325, c1=x''; -- 0ms;
UPDATE OR FAIL t0 SET c2=x'959f'; -- 0ms;
UPDATE t0 SET c0=0.46530304909368647 WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0x6088c4c3; -- 0ms;
UPDATE t0 SET (c0)=('0.47789936001831135') WHERE ((((t0.c1)AND(t0.c1)))AND(t0.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR REPLACE t0 SET c2=-930388785 WHERE (- (CASE WHEN t0.c1 THEN t0.c2 END)); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c1)=(x'', '1638496254') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c0='텱n>HR\' WHERE ((t0.c0)>(x'6c0d')) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('2002212336'); -- 0ms;
UPDATE t0 SET c0=NULL, c1=0.2547495658389658; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.5714358433546547) WHERE (LTRIM(x'', t0.c1) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.2992254622314946 WHERE (NOT ((((t0.c1, t0.c2, t0.c2, t0.c2, t0.c1))>((t0.c0, NULL, t0.c2, t0.c0, t0.c2))))); -- 0ms;
UPDATE OR FAIL t0 SET c0=x'd3fc' WHERE (CAST(t0.c0 AS TEXT) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'db83'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.4891295814101573; -- 0ms;
UPDATE OR FAIL t0 SET c2=x'' WHERE ((0Xffffffff921b7711)+(t0.c1)); -- 0ms;
UPDATE t0 SET c0=1766735516, c0=0.7905290256501953; -- 0ms;
UPDATE OR IGNORE t0 SET c0='959656275', c0=0.4994987711128832 WHERE (((t0.c2 IN (t0.c0))) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2='' WHERE ((LTRIM(t0.c1, t0.c0))+(((t0.c0) BETWEEN (t0.c1) AND (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(0.11893834891015675, 0.5007682342859131) WHERE ((((t0.c2)*(t0.c2)))<=(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0X21d405da, c2='gP'; -- 0ms;
UPDATE OR IGNORE t0 SET c0='-1507384613' WHERE (NOT ((('413547761') NOTNULL))); -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c0, c1)=(0.47197574397204844, 'zꇣ', '') WHERE (t0.c0 IN ()); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c0)=(0.09565103011153364, 0.940500901883956); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=x'' WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(NULL, NULL) WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c1)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(-1989058120, ''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0Xffffffffcae89506) WHERE ((t0.c2)>(((t0.c1)IS NOT(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='S%', c0=0xffffffffb29cf33f; -- 0ms;
UPDATE t0 SET c1='' WHERE 0.37277404089024346; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(NULL, '-1382873271') WHERE (((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0x260cb155; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND (((((t0.c2))=((t0.c1)))))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='' WHERE CASE (((t0.c0))<((t0.c1)))  WHEN ((t0.c2) ISNULL) THEN ((t0.c0) IS TRUE) WHEN NULL THEN (((t0.c1, t0.c1, x'')) BETWEEN ((t0.c2, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, t0.c0))) WHEN CASE WHEN t0.c0 THEN t0.c2 ELSE x'765a76da' END THEN t0.c2 COLLATE RTRIM ELSE x'' END; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-791763594'; -- 0ms;
UPDATE OR IGNORE t0 SET c0='Yv8/EXpH' WHERE IFNULL(DISTINCT ((((t0.c0)OR(t0.c1)))AND(t0.c0)), (((t0.c2, t0.c0, t0.c1, t0.c2, t0.c0)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1, t0.c0, t0.c2)) AND ((t0.c1, t0.c0, t0.c0, t0.c1, t0.c0)))); -- 0ms;
UPDATE t0 SET c0=x'' WHERE ((2026706802) NOT BETWEEN (((((t0.c0)AND(t0.c2)))OR(t0.c1))) AND ((t0.c2 IN (t0.c1, t0.c0)))); -- 0ms;
UPDATE t0 SET c2=NULL WHERE CAST(((t0.c0) NOT NULL) AS BLOB); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(0.011369013777841497) WHERE t0.c0; -- 0ms;
UPDATE t0 SET c1=1.11455816E9 WHERE (((t0.c2)) BETWEEN ((((t0.c1) IS FALSE))) AND ((CHANGES()))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=NULL WHERE (t0.c2 IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('360063154') WHERE ((t0.c1)==((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 1ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0.9831890647234955) WHERE (t0.c2 COLLATE RTRIM IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0='?o'; -- 0ms;
UPDATE t0 SET c0=NULL, c2=NULL, c2=x'a3b5eb44' WHERE ((((1183598810)==(t0.c1)))IS NOT((((t0.c2, t0.c1, t0.c1))<=((t0.c0, 0.17214245252708216, t0.c1))))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1874044040', c0='1785777001' WHERE (((t0.c0, t0.c1, t0.c1)) NOT BETWEEN (((~ (t0.c1)), ((t0.c1) NOTNULL), ((t0.c1)+(t0.c0)))) AND (((t0.c1 IN (t0.c1)), ((t0.c2)<=(t0.c1)), ((t0.c1)>=(t0.c1))))); -- 0ms;
UPDATE t0 SET c2=x'6964' WHERE CAST(t0.c2 COLLATE RTRIM AS INTEGER); -- 1ms;
UPDATE OR REPLACE t0 SET c2=0.17718473632576348 WHERE '1609208033'; -- 0ms;
UPDATE OR IGNORE t0 SET c1='R' WHERE t0.c2; -- 0ms;
UPDATE OR ABORT t0 SET c0='-1214145257' WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET c1=-1.23880245E9, c1=971505925, c2=NULL; -- 0ms;
UPDATE OR ABORT t0 SET c0='S\', c2='1784295819', c2=0.5025132012417214 WHERE t0.c1; -- 0ms;
UPDATE OR REPLACE t0 SET c0=0.37545240788374856; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, '-433006233') WHERE (((t0.c1, x'', t0.c0)) NOT BETWEEN ((((((t0.c2)AND(t0.c2)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, (t0.c2 IN ()))) AND ((CASE WHEN x'' THEN t0.c0 ELSE t0.c1 END, ((t0.c1) ISNULL), IFNULL(DISTINCT t0.c2, t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE TOTAL_CHANGES(); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0x160fad56; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.011369013777841497) WHERE (((t0.c2, t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c0, t0.c0)) AND ((t0.c1, t0.c1, t0.c1))) COLLATE BINARY; -- 1ms;
UPDATE t0 SET (c1, c0)=('-745537756', '~*|N'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1214141104' WHERE (((CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN '89600417' WHEN t0.c2 THEN t0.c1 END))==((((((t0.c0)OR(t0.c1)))AND(t0.c2))))); -- 0ms;
UPDATE t0 SET c2=0x1d6babe4, c2='-827250803' WHERE ((((((((t0.c2)OR(t0.c1)))OR(0.8445492867207995)))OR(t0.c0)))OR(t0.c2)) COLLATE BINARY; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(0x2d2497cb); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.14826123194099727; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(x'', 0x1c33b33); -- 0ms;
UPDATE t0 SET c1='.+'; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.9074851667338713, c0=0.3499355904495891; -- 0ms;
UPDATE OR ABORT t0 SET c0='-1890296240'; -- 1ms;
UPDATE t0 SET (c1, c0)=('610596819', 0.6316976237180678); -- 0ms;
UPDATE t0 SET c1=x'' WHERE ((((t0.c1)<(t0.c1))) NOT NULL); -- 0ms;
UPDATE OR FAIL t0 SET c1=0.38405140236702495, c2=0.49458524686752126 WHERE CASE '456054279'  WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END THEN ((x'')-(t0.c2)) WHEN t0.c2 THEN ((t0.c1) NOT NULL) WHEN ((t0.c2)+(t0.c0)) THEN ((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)) END; -- 1ms;
UPDATE OR REPLACE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET c0=0.02402862806181738; -- 0ms;
UPDATE t0 SET c0=335800947, c0='0.8445492867207995', c1=x'' WHERE CASE WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN ((t0.c2)OR(t0.c0)) WHEN CAST(t0.c1 AS NUMERIC) THEN t0.c1 WHEN ((x'') IS FALSE) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END ELSE ((((t0.c1)OR(t0.c0)))AND(t0.c0)) END; -- 0ms;
UPDATE t0 SET (c1)=(0.12133430608708617); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(NULL) WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c0='0.47789936001831135', c0='1413593230', c1='-17023664' WHERE t0.c0; -- 1ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(NULL); -- 0ms;
UPDATE t0 SET (c0)=('1197982001'); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-1979141378'; -- 0ms;
UPDATE t0 SET c2=0.831054355310075; -- 0ms;
UPDATE t0 SET (c2)=(0.9406196333612277); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0.2927626860024811) WHERE LIKELY(DISTINCT t0.c1); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-1631901508' WHERE (((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, TRIM(DISTINCT t0.c0), ((((t0.c1)AND(t0.c1)))OR(t0.c0)))) AND ((((t0.c0)%(NULL)), ((t0.c2)%(t0.c0)), t0.c1 COLLATE NOCASE))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.1314252820626184) WHERE ((((t0.c0)GLOB(t0.c1)))>>(t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(0.5947820916307944) WHERE (+ ('')); -- 0ms;
UPDATE OR IGNORE t0 SET c1=-6.62996267E8; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=('', 'Sb'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.05016299220076348) WHERE (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=('', x'') WHERE ((((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))OR('-497272368')))|(((t0.c2) IS FALSE))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE x''; -- 0ms;
UPDATE t0 SET (c2)=('1135042308'); -- 0ms;
UPDATE t0 SET c2='-720947631', c2='v㪾 櫥^s', c2=-4.68229984E8; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(NULL, x'0584'); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(-2.054460691E9) WHERE t0.c2; -- 0ms;
UPDATE t0 SET (c1)=(x'91aa'); -- 0ms;
UPDATE t0 SET c0='-1166989420', c2=0.5057824943778966, c0='876682929' WHERE ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) BETWEEN ((((x'3059')) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) AND (CASE t0.c2  WHEN '歽y{D}A' THEN t0.c0 ELSE t0.c0 END)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c2, c0, c0)=(1964196610, NULL, '433360336') WHERE ((((t0.c1) IS FALSE))=(t0.c1 COLLATE NOCASE)); -- 0ms;
UPDATE t0 SET c2=NULL, c2=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET c1=0.5469135113312917; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c0)=(0X4e822d80, '777304557', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c1=NULL, c1=NULL WHERE CASE ((t0.c0)%(t0.c1))  WHEN (t0.c2 IN ()) THEN CAST(t0.c2 AS NUMERIC) END; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-862094726' WHERE (((((t0.c1)/(t0.c1))))=((t0.c2 COLLATE RTRIM))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=('-1785959493') WHERE ((((CAST(t0.c1 AS BLOB))OR(0X64d81795)))AND((~ (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='OcDFz&4Hf'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'', c2='323317679', c1=NULL WHERE t0.c1; -- 0ms;
UPDATE t0 SET c1=0.6478576316423904; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-5.50974923E8, c0=x'' WHERE (((t0.c0)) NOT BETWEEN (((~ (t0.c1)))) AND ((x''))); -- 0ms;
UPDATE OR FAIL t0 SET c1=0X220e4583 WHERE (((~ (t0.c1))) ISNULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('-3') WHERE (((t0.c2))!=((CAST(t0.c1 AS INTEGER)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE (((((((((('0.2992254622314946')>>(t0.c0)))AND(((t0.c0)-(t0.c2)))))OR((NOT (t0.c0)))))OR(((NULL)>=(t0.c1)))))AND(((t0.c0)/(t0.c0)))); -- 0ms;
UPDATE t0 SET (c0, c2)=(NULL, '') WHERE CASE WHEN ((((0.7432875750042256)OR(t0.c0)))AND(t0.c2)) THEN (+ (t0.c1)) ELSE ((t0.c2)/(t0.c0)) END; -- 0ms;
UPDATE t0 SET c2='' WHERE CASE (((t0.c1))<=((t0.c0)))  WHEN t0.c1 THEN IFNULL(DISTINCT t0.c0, t0.c1) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-662996267') WHERE CAST((t0.c1 IN ()) AS BLOB); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(x'a915'); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=('240940252'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(NULL, '777304557'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(1.916832876E9) WHERE -1928052974; -- 0ms;
UPDATE t0 SET c0='' WHERE (((((t0.c0)) BETWEEN ((NULL)) AND ((t0.c2)))) IS FALSE); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(NULL) WHERE (((t0.c2)) NOT BETWEEN ((((t0.c2) BETWEEN (x'c474') AND (t0.c0)))) AND ((CAST(t0.c0 AS REAL)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE (((t0.c1)) NOT BETWEEN ((NULL)) AND (((+ (t0.c0))))); -- 0ms;
UPDATE t0 SET (c1, c1)=(0.35131146540296443, x'bb99'); -- 1ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE (- (t0.c0 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t0 SET c0='0.7499456918957368'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(0.13673762048522975, 790056011); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-1.558758597E9, c2='1609208033', c0=NULL WHERE (((t0.c0)) NOT BETWEEN ((0.9513757292686758)) AND (((+ (t0.c0))))); -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL WHERE (~ (((((t0.c2)AND(t0.c1)))AND(t0.c2)))); -- 1ms;
UPDATE OR IGNORE t0 SET c2=-1592698831 WHERE (((((t0.c0)OR(t0.c1)))AND(t0.c1)) IN ()); -- 0ms;
UPDATE t0 SET (c1, c1, c2)=(0.3355779837018519, '\n)~?', 0x1459d7cf); -- 0ms;
UPDATE OR IGNORE t0 SET c0='>m5EAu', c0=4.43961857E8 WHERE CASE ((t0.c2)||(t0.c2))  WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (NULL)) THEN (NOT (t0.c1)) END; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('') WHERE ((0.8445492867207995) ISNULL) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
UPDATE t0 SET c2=x'' WHERE ((TRIM(t0.c2))=(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))); -- 0ms;
UPDATE OR FAIL t0 SET c2=x'', c1='-1956585592', c1=x''; -- 0ms;
UPDATE OR ABORT t0 SET (c1, c1)=(x'', x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'5bbb') WHERE ((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))*((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(0x321343d9) WHERE (((t0.c0, t0.c0, x'e215')) BETWEEN (('-1225390452', t0.c1, t0.c0)) AND ((t0.c2, t0.c1, t0.c1))) COLLATE RTRIM; -- 0ms;
UPDATE t0 SET (c0)=('-1461826158') WHERE (((t0.c1 IN ())) IS FALSE); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c0, c1)=('-1321047149', -1642957554, 0.5827631678768741) WHERE (((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))>=((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'4b98dd27' WHERE CAST(CAST(t0.c0 AS TEXT) AS BLOB); -- 0ms;
UPDATE t0 SET (c2, c2)=(1272974086, 1.619576003E9); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE ((t0.c1 COLLATE BINARY) NOT NULL); -- 1ms;
UPDATE OR IGNORE t0 SET (c1, c2)=('-1872056667', NULL) WHERE (t0.c1 IN ()) COLLATE NOCASE; -- 0ms;
UPDATE t0 SET (c0)=(230679944); -- 0ms;
UPDATE OR ABORT t0 SET c1=0.24375575288036444; -- 0ms;
UPDATE OR ABORT t0 SET c2=5.67543258E8 WHERE (~ (t0.c0)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.22862790975284453; -- 0ms;
UPDATE OR IGNORE t0 SET c0='-527776941', c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('81717181') WHERE ((((t0.c1) IS TRUE)) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'605bd430'; -- 0ms;
UPDATE OR ABORT t0 SET (c2, c1)=('7C', x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(2.002212336E9, '/F6>s猋Y['); -- 0ms;
UPDATE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('0.29641307683688833'); -- 0ms;
UPDATE t0 SET (c2, c1)=(NULL, 1.096495108E9); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE CAST(0X6d34b698 AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('0.8483735525072326'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE (t0.c1 IN ()); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='1691883413' WHERE CASE WHEN ((t0.c0) ISNULL) THEN ((t0.c0)AND(t0.c2)) WHEN (t0.c2 IN ()) THEN ((x'') BETWEEN (0.9985880646851227) AND (t0.c0)) WHEN ((t0.c0)<(t0.c2)) THEN (+ (t0.c0)) ELSE ((((((((t0.c2)AND(t0.c0)))OR(t0.c2)))OR(NULL)))OR(t0.c2)) END; -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE ((((((t0.c2)OR('0.2581023448282622')))OR(t0.c1))) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(0.13726559073958755, 0.09632723135255361) WHERE 0.19420380952453542; -- 0ms;
UPDATE t0 SET c1=NULL, c2=0.7554671089910462 WHERE (((((- (t0.c0)))AND(t0.c1)))OR((~ (t0.c0)))); -- 0ms;
UPDATE t0 SET c1='2.s>}t]' WHERE 0.9880723861103626 COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE x'8d48'; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-130338938', c0='0.48874194019537154'; -- 0ms;
UPDATE OR FAIL t0 SET (c0, c1)=(NULL, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1='fR[]' WHERE CAST(((t0.c0)IS NOT(t0.c0)) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET c0='L㰧'; -- 0ms;
UPDATE OR ABORT t0 SET (c0, c0)=(0.6644755520557392, '-700535392'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0Xffffffff9a219f67, c2='过IyM/X炴RD'; -- 1ms;
UPDATE OR ABORT t0 SET (c2)=('TRUE') WHERE ((((((((((((t0.c2 COLLATE RTRIM)AND((NOT (t0.c0)))))AND((NOT (t0.c0)))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN '-679568385' END)))OR((((t0.c2))!=((t0.c0))))))AND(((t0.c1)-(t0.c0)))))OR((t0.c0 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE t0.c0; -- 0ms;
UPDATE t0 SET c1=NULL WHERE CASE (t0.c2 IN ())  WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c0)<<(t0.c0)) WHEN ((t0.c0)IS NOT(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) WHEN CASE WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c2 WHEN t0.c2 THEN t0.c0 END THEN CAST(NULL AS NUMERIC) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.8271261014986631) WHERE MAX((t0.c0 IN ()), CASE t0.c1  WHEN NULL THEN x'' WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END); -- 0ms;
UPDATE t0 SET (c2, c1, c2)=('', '751831412', -1618296560); -- 1ms;
UPDATE t0 SET (c2, c1)=('356686731', NULL); -- 1ms;
UPDATE t0 SET c0='-1925298257'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.33417855710177047 WHERE ((((t0.c2))==((t0.c0))) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2, c0)=(x'68bb', x'', 0.5291675595697886) WHERE ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))=(t0.c0)); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0, c0)=('-1960110509', x'4f471498', 'z4B19') WHERE (((((t0.c1)>(t0.c1))))>((((t0.c1) BETWEEN (t0.c2) AND (t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
UPDATE t0 SET (c0, c1)=(0.6280251730200063, x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0='443961857' WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c2='!鴗<d', c1='' WHERE '1457106971'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('') WHERE '-1506395584'; -- 0ms;
UPDATE OR IGNORE t0 SET c2='W?N(*u^' WHERE (((NOT (t0.c2)))GLOB((t0.c1 IN ()))); -- 0ms;
UPDATE t0 SET (c1, c1)=(NULL, '^p') WHERE CASE WHEN ((t0.c0)>>(t0.c0)) THEN ((t0.c2)IS NOT(t0.c0)) WHEN (t0.c0 IN ()) THEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 END WHEN (- (t0.c1)) THEN CAST(t0.c2 AS BLOB) WHEN (('1931839352') BETWEEN (t0.c2) AND (t0.c2)) THEN (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) WHEN (t0.c2 IN ()) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE x'7969' END ELSE (t0.c2 IN ()) END; -- 1ms;
UPDATE OR REPLACE t0 SET c1=NULL, c2=0.8199858404630092; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('1601580758', 0xffffffffe4ca2f53); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(NULL) WHERE ((((t0.c2)GLOB(t0.c0)))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))); -- 0ms;
UPDATE OR FAIL t0 SET (c2, c0)=('Ja', 0.0); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE x''; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0Xffffffffdfdd8040) WHERE ((t0.c1 COLLATE NOCASE) BETWEEN (((t0.c0)<=(t0.c0))) AND ((t0.c0 IN (t0.c2)))); -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(7.26370667E8) WHERE ((((((t0.c0)AND(t0.c2)))OR(t0.c2)))-(x'')); -- 0ms;
UPDATE t0 SET c0='-137974366', c2=x'' WHERE t0.c2; -- 0ms;
UPDATE t0 SET c0='-54117247', c1=x''; -- 0ms;
UPDATE OR FAIL t0 SET c2=0.011369013777841497; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c1)=('wvAnVhvD~', x'', x'') WHERE ((((((((((t0.c2)OR(0.1424699889908596)))AND('')))AND(t0.c0)))OR(0.39232194971746925)))<=(0.4829939913474569)); -- 0ms;
UPDATE OR IGNORE t0 SET c2='l9', c0=0Xfffffffffd986d2f, c1='-1214145257'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=1846869172, c1=0.4899943385254699, c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.7384664651848869; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(x'4fb0'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=0.554056469581055; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(x'7c8b', 0.7604072932866571) WHERE (~ (t0.c0)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(NULL, 0.6628679804900641) WHERE ((((t0.c0)IS(t0.c2)))IS(t0.c0)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('413547761'); -- 0ms;
UPDATE t0 SET (c1, c1)=(NULL, 0xffffffffeb3c0bfe); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(109333889) WHERE CASE WHEN t0.c2 THEN t0.c0 COLLATE BINARY ELSE t0.c0 END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c1=NULL, c0=0.8121154536018718; -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('718497827', 0.9081830673827438); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=NULL; -- 0ms;
UPDATE OR FAIL t0 SET c1=NULL WHERE CASE ((t0.c2)&(t0.c1))  WHEN (+ (t0.c2)) THEN t0.c1 END; -- 0ms;
UPDATE OR REPLACE t0 SET c1='hFmgR' WHERE CAST(HEX(t0.c1) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('..'); -- 0ms;
UPDATE t0 SET c0='', c2='-1040584360', c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1, c1)=(1619504165, 0X2a116a4a, 0.4079406046088806); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE json_array_length(t0.c2, (~ (t0.c0))); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c1)=(NULL, x''); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(x'1a468b66') WHERE (((((NULL)) BETWEEN ((t0.c1)) AND ((t0.c2)))) BETWEEN (t0.c2) AND (TRIM(t0.c0))); -- 0ms;
UPDATE t0 SET c0=-749106749 WHERE 0.27969521129842145; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'6eb2'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.39164010663201265) WHERE (((t0.c2)) NOT BETWEEN ((((t0.c2)/(t0.c1)))) AND ((COALESCE(1391568540, t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c0=NULL, c2=0.6841180430069824; -- 0ms;
UPDATE t0 SET c1='䠣G堍%' WHERE (x'' IN (t0.c1)); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0='455974699'; -- 1ms;
UPDATE OR ROLLBACK t0 SET c2=NULL WHERE CASE WHEN ((t0.c2)||(t0.c0)) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c0)) ELSE ((t0.c1)<=(t0.c2)) END; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(x'') WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('-1836411305'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(-4.68229984E8) WHERE ((((0.6245625006350055) BETWEEN (t0.c2) AND (t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (t0.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(0.04146491705554112) WHERE t0.c1; -- 0ms;
UPDATE OR ABORT t0 SET (c1, c1, c1)=(0x60824134, 0.5655087729603654, '') WHERE ((t0.c2 COLLATE BINARY) NOT NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'96037299') WHERE ((((t0.c1) ISNULL))>=((+ (t0.c2)))); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(x'fb77'); -- 0ms;
UPDATE OR FAIL t0 SET c2=NULL; -- 1ms;
UPDATE OR IGNORE t0 SET c2=0.7695214577262337, c1=NULL WHERE (((((t0.c1 IN ()))AND(((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))))OR(t0.c2 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.00307776009768701) WHERE (((- (t0.c2)))<<(CAST(t0.c2 AS REAL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.401154384580264) WHERE (((t0.c2, t0.c2, t0.c1))>((t0.c1, NULL, t0.c2))) COLLATE BINARY COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c1='170098477', c2=1.680968858E9; -- 0ms;
UPDATE t0 SET c2=0x4ad66705, c0='1619504165'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'', '-1558758597') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('1619576003'); -- 0ms;
UPDATE t0 SET (c0)=(0.1259210590354175); -- 0ms;
UPDATE t0 SET c1=NULL, c1='-484968685'; -- 0ms;
UPDATE OR FAIL t0 SET c2=NULL, c1=0.39164010663201265, c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'3db3' WHERE (CAST(t0.c0 AS REAL) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('0.7824291200071842'); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c1)=('', 'AƇNY') WHERE (((t0.c1, t0.c2, t0.c0, t0.c0, t0.c2)) BETWEEN (((((t0.c1, t0.c0, t0.c1))=((x'', t0.c0, t0.c2))), ((t0.c1)-(t0.c0)), ((((t0.c0)AND(t0.c1)))OR(t0.c0)), (~ (t0.c1)), (+ ('-1238802450')))) AND ((0x721dacad, (0.34543614297355796 IN (t0.c2)), t0.c0 COLLATE RTRIM, t0.c0 COLLATE BINARY, ((t0.c0)GLOB(t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(-954105732); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0xffffffffd4bc3f4e); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'0f0d') WHERE CASE ((t0.c0)GLOB(t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=(-1055618970, 0Xffffffff8d990e28); -- 0ms;
UPDATE t0 SET (c2, c1, c1)=(-1.479148697E9, '1465377738', '') WHERE ((((((((((((((t0.c2)AND(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1))) NOT BETWEEN (t0.c0) AND (t0.c1)); -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c0, c1)=(0.47503047718535474, 0X3b0d710, ']x') WHERE ((((t0.c0) IS FALSE))<=(CAST(t0.c2 AS NUMERIC))); -- 0ms;
UPDATE t0 SET (c0, c1)=(x'', '\n#4''') WHERE ((CAST(t0.c0 AS BLOB)) NOT NULL); -- 1ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(x'', 0.7916433576571508) WHERE CAST(t0.c2 AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE ((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)-(t0.c0)); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.4828130678125344); -- 0ms;
UPDATE OR FAIL t0 SET c2=x'69b7' WHERE ((((t0.c0)|(NULL)))>((((t0.c1, t0.c1, t0.c2))!=((t0.c1, t0.c1, NULL))))); -- 1ms;
UPDATE OR FAIL t0 SET c2=NULL WHERE CAST(((t0.c0)IS NOT(t0.c2)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.8853690220732827, c2=0.47979414540440923, c2='' WHERE ((2.69937139E8) NOT BETWEEN ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) AND (((t0.c1)>('쉅MS+>2Yj')))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1461673501'); -- 0ms;
UPDATE t0 SET c1=0.23278979247818554 WHERE ((CAST(t0.c0 AS BLOB)) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'', c1=0.04570436788535115, c0='-225432695' WHERE (((+ (NULL))) IS FALSE); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c2, c1)=('1920480821', x'', 0.2961260641926905); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ('Lw' COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(''); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET c0=x'', c0=x'400c'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'3fba'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'29f5') WHERE ((((t0.c0 COLLATE NOCASE)OR((NULL IN ()))))AND(NULL)); -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c1)=(NULL, 1.11455816E9) WHERE CASE CASE t0.c1  WHEN t0.c2 THEN t0.c1 END  WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) THEN t0.c1 ELSE NULL END; -- 1ms;
UPDATE OR ROLLBACK t0 SET (c1, c0)=('T\r', 0X1b08a89); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE (((t0.c1)+(t0.c0)) IN ()); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c0)=(NULL, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=('', 0.17326212563603816); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(x'8efe') WHERE (((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2))))-(((t0.c0) ISNULL))); -- 0ms;
UPDATE t0 SET (c0, c0, c2)=(249279643, '', '-1321047149'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c0)=('', x''); -- 0ms;
UPDATE t0 SET (c1)=(-1.7976931348623157E308) WHERE ((((t0.c2)/(t0.c2)))<(CAST(t0.c0 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('1096495108') WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c2)=(x'', '1548511225', x'f641'); -- 0ms;
UPDATE t0 SET (c2, c0, c2)=('', 'X', x'') WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(5.67543258E8); -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL, c0=0.4525418281911049; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'3e6a'; -- 0ms;
UPDATE t0 SET c0='0.46320058383705986'; -- 0ms;
UPDATE t0 SET c1='-86938558', c0='s.'; -- 0ms;
UPDATE t0 SET c1='0.8179909149801389', c1=x'fbfb'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'0bb0', c2='4tn'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1, c0)=(1951121887, 7.77304557E8, -1466460626); -- 0ms;
UPDATE OR ABORT t0 SET c2=NULL, c2=NULL; -- 1ms;
UPDATE OR IGNORE t0 SET c2=-6.79568385E8, c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('0.831054355310075') WHERE ((((t0.c2)<=(t0.c0))) NOT BETWEEN (t0.c1) AND (CAST(t0.c2 AS NUMERIC))); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(x'') WHERE t0.c1; -- 0ms;
UPDATE t0 SET (c0)=('F*') WHERE ((((t0.c0)|(t0.c1))) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'8031'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(x'', NULL) WHERE (((((((t0.c1))>=((t0.c2))))OR(((t0.c0)IS NOT(t0.c1)))))OR(((((((((t0.c0)AND(t0.c0)))AND(0.2241277902316361)))OR(t0.c1)))OR(NULL)))); -- 0ms;
UPDATE OR REPLACE t0 SET c2='<A4o'; -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(x'', 0.5124386639806734); -- 0ms;
UPDATE t0 SET c2=0.4705705188782072, c0='Nb.\na'; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0xffffffffbbaaf218); -- 0ms;
UPDATE t0 SET c0=0.09340591445238311; -- 0ms;
UPDATE t0 SET (c1, c0)=('-497272368', 4.13547761E8); -- 0ms;
UPDATE t0 SET (c0, c1)=('407610635', 'K_%^'); -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE t0.c0; -- 0ms;
UPDATE t0 SET c2=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c2)=('1315066437'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((((((t0.c1) IS TRUE))AND(((((t0.c0)AND(t0.c2)))OR(NULL)))))OR(((((t0.c1)OR(t0.c2)))AND(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=-1.558758597E9, c2=NULL, c2='MU'; -- 0ms;
UPDATE t0 SET (c1)=(0.09284014692512466); -- 0ms;
UPDATE t0 SET (c0, c2, c0)=('RJK%#밯*', x'', x'') WHERE ((((((((((t0.c0)|(t0.c2)))OR(UNICODE('-745537756'))))AND(CAST(t0.c2 AS INTEGER))))OR((~ (t0.c2)))))OR((~ (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.915263380809836) WHERE (((((((((NOT (t0.c0)))AND(t0.c2 COLLATE BINARY)))AND(CASE WHEN '2140148599' THEN t0.c2 ELSE x'' END)))OR(((t0.c2)OR(t0.c0)))))OR((t0.c2 IN ()))); -- 0ms;
UPDATE OR FAIL t0 SET c2='P纗&\r'; -- 0ms;
UPDATE t0 SET c1=x'' WHERE (NOT (x'')); -- 0ms;
UPDATE OR IGNORE t0 SET c1='0.01998030878517887'; -- 0ms;
UPDATE t0 SET (c0)=('0.7695214577262337'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('121682284'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'' WHERE ((t0.c1 COLLATE BINARY)%((t0.c0 IN (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(1.920480821E9) WHERE (NOT (t0.c2)); -- 0ms;
UPDATE OR IGNORE t0 SET c2='' WHERE (((t0.c1) NOT BETWEEN (x'cfcf4602') AND (t0.c0)) IN (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)); -- 1ms;
UPDATE OR ABORT t0 SET c2=x'' WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))) ISNULL); -- 0ms;
UPDATE OR ABORT t0 SET c1=x'5568' WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('413547761') WHERE (((LIKELY(DISTINCT t0.c2)))>(((t0.c2 IN (t0.c0))))); -- 0ms;
UPDATE t0 SET c0=-1040584360 WHERE ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('-1966506756', NULL); -- 0ms;
UPDATE t0 SET (c1, c1)=(NULL, '-2028683536'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(NULL, '0.5890422079235952') WHERE (((t0.c1 IN (t0.c1, t0.c0)))>=(UNLIKELY(t0.c0))); -- 0ms;
UPDATE t0 SET (c2, c0)=(-8.74727024E8, '￿3&<f') WHERE (((t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c2 END, CAST(t0.c1 AS NUMERIC), RTRIM(t0.c0))) AND (((((t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, t0.c2, t0.c1))), (((t0.c2))<=((t0.c2))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.36784019474856733)))))); -- 0ms;
UPDATE OR ABORT t0 SET c2=0Xffffffffb6295fee, c1=0Xffffffff8f545e50; -- 1ms;
UPDATE OR ABORT t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-2105447401 WHERE ((CAST(t0.c2 AS REAL))IS NOT((('s*y')*(t0.c0)))); -- 0ms;
UPDATE t0 SET (c0, c1)=(0X59ed52ce, x'') WHERE (((t0.c0)) NOT BETWEEN ((((t0.c1)>=(t0.c2)))) AND ((((x'a65f')%(t0.c1))))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.05623620902658433 WHERE ((t0.c1) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1, c0)=(x'', NULL, x'') WHERE (+ (((t0.c0)%(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET c2='[Y+.Oyo'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, 0.8481611383297721); -- 0ms;
UPDATE t0 SET c0='鯿''', c0=0.3845329935770153, c1=0xffffffffa0ed83d2; -- 1ms;
UPDATE OR IGNORE t0 SET c2=0X46dbd0d0, c1=x''; -- 0ms;
UPDATE t0 SET (c1)=('-9223372036854775808') WHERE 0.04095888117756985; -- 1ms;
UPDATE t0 SET (c1, c0, c0)=(0.4732017098788669, NULL, 0.9896912054455776) WHERE QUOTE(((((t0.c0)AND(t0.c2)))AND(t0.c1))); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c1)=(0.9499743227987315, NULL); -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL WHERE ((((t0.c0) NOT NULL))<(CAST(t0.c1 AS NUMERIC))); -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x''); -- 0ms;
UPDATE t0 SET c2=0.747385800714466 WHERE ((('Z')) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c1)==(t0.c0))))); -- 1ms;
UPDATE t0 SET c1='-459288437' WHERE ((((t0.c0) IS FALSE))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END)); -- 0ms;
UPDATE t0 SET c1=0.7856750703188743, c2='_W', c0=NULL; -- 0ms;
UPDATE t0 SET c2=0.5797703379089899; -- 0ms;
UPDATE t0 SET c1=x'3e3f', c1='<C' WHERE CHANGES() COLLATE RTRIM; -- 0ms;
UPDATE t0 SET (c2, c0, c2)=(0.010585941264291465, '0I', 0.8838325181608264); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(0.41029006319305605); -- 0ms;
UPDATE OR FAIL t0 SET c0=NULL, c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-855236679' WHERE (- (t0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0Xffffffffe9b28247; -- 0ms;
UPDATE t0 SET (c0)=(0x46d5222d) WHERE HEX(t0.c0 COLLATE RTRIM); -- 0ms;
UPDATE t0 SET c2=NULL WHERE ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE; -- 0ms;
UPDATE t0 SET c0=x'', c1='230679944', c2=''; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0.639365289684828); -- 0ms;
UPDATE t0 SET c1=NULL WHERE (((t0.c1 IN ()))<<(NULL COLLATE BINARY)); -- 1ms;
UPDATE OR REPLACE t0 SET (c0)=(x'') WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c2=NULL WHERE LIKELY(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c0=0.19432453202012623; -- 0ms;
UPDATE t0 SET c2=x'' WHERE CAST(CASE t0.c1  WHEN t0.c0 THEN t0.c0 END AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.6641600590221491; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-745537756') WHERE (((t0.c2)AND(t0.c2)) IN ()); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0X6bd9a2f5; -- 0ms;
UPDATE OR FAIL t0 SET c2=0xffffffffe18b6578, c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE ((t0.c1 COLLATE RTRIM)>>(((t0.c1) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='2076616701' WHERE ((t0.c0 IN ()) IN ((((t0.c0))!=((t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c2=-7.91763594E8 WHERE CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) AS TEXT); -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL WHERE HEX(DISTINCT TYPEOF(DISTINCT 0.7824291200071842)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.8054308344289827; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'54e0' WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('4055320166721621020 798:1357T1363-1592:-6649612159765087082 1759 ') WHERE (((((t0.c2) IS TRUE)))<=(((t0.c0 IN ())))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='1037744671'; -- 0ms;
UPDATE t0 SET c2=-1849509321; -- 0ms;
UPDATE OR ABORT t0 SET (c0, c1)=(NULL, 0.22764555392610675); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('vS>\nf'); -- 0ms;
UPDATE t0 SET c0=NULL WHERE '1114558160'; -- 0ms;
UPDATE OR ABORT t0 SET c2='ws%uoV' WHERE ((t0.c1) ISNULL) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE ((CAST(t0.c0 AS INTEGER))>=(CAST(x'' AS TEXT))); -- 0ms;
UPDATE t0 SET c0=1.262305631E9, c0=0.24611231175269843; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1214145257') WHERE ((+ (NULL)) IN ()); -- 0ms;
UPDATE t0 SET (c1)=(0.40431721371528295); -- 0ms;
UPDATE OR IGNORE t0 SET c1='06X&B፷_'; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=('241126800'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0Xffffffff99d75c6b WHERE (CASE WHEN t0.c0 THEN 0.6548856717510352 END IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0xfffffffffffa62dc, c0=0.011033519809560577; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.23610946521232445 WHERE ((((t0.c2)>=(t0.c0)))>(((t0.c0) IS TRUE))); -- 0ms;
UPDATE OR FAIL t0 SET c0=NULL WHERE CAST((((t0.c2)) NOT BETWEEN ((x'')) AND ((t0.c1))) AS REAL); -- 0ms;
UPDATE t0 SET (c1, c1, c0)=(NULL, 566508254, 0.33417855710177047) WHERE ((CAST(t0.c1 AS BLOB))>=(CAST(t0.c1 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1, c1)=('Y1', '%릐q&>D&%Q', 0X3737533e); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8069068930420863, c1=0.5978494166100553; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'', 0.4804833839530914) WHERE (((t0.c1)) BETWEEN ((((t0.c1) ISNULL))) AND ((CASE '-1513210346'  WHEN '1621561902' THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE NULL END))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=-1439477040 WHERE (+ (CAST(t0.c1 AS REAL))); -- 0ms;
UPDATE t0 SET (c2)=(1498981617) WHERE CAST(CAST(t0.c1 AS REAL) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0Xc5e667) WHERE ((t0.c2) NOT NULL); -- 0ms;
UPDATE t0 SET (c2, c1)=(x'', 0Xffffffffdfdd8040); -- 0ms;
UPDATE OR FAIL t0 SET c2=NULL WHERE CAST(CASE t0.c0  WHEN NULL THEN t0.c0 END AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'', c2=NULL, c1=NULL WHERE (((t0.c1)) BETWEEN ((((((t0.c0)AND(t0.c2)))OR(t0.c1)))) AND (((t0.c2 IN ())))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c2=x'' WHERE t0.c0; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=('1295812883'); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE t0.c1 COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL; -- 0ms;
UPDATE t0 SET (c2)=('-249293392') WHERE (- (((t0.c2) BETWEEN (t0.c1) AND (t0.c2)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0.015914431252698646); -- 0ms;
UPDATE t0 SET (c0, c0)=(NULL, '-1659785946') WHERE '鼫b' COLLATE BINARY; -- 0ms;
UPDATE t0 SET (c2)=(0xffffffffb621d520); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=('0.4356379887201107', '904566751'); -- 0ms;
UPDATE OR ABORT t0 SET c2=x'', c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=('973683166') WHERE (((t0.c1 IN ()))>(CAST(t0.c2 AS TEXT))); -- 0ms;
UPDATE t0 SET (c2)=(0.6528426908322438) WHERE CASE WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN ((t0.c1)*(t0.c2)) ELSE ((x'')<<(t0.c2)) END; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(0X4172b738); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(x'0bf9'); -- 0ms;
UPDATE OR ABORT t0 SET c2='*6a<3X2T'; -- 2ms;
UPDATE OR IGNORE t0 SET c2=NULL, c2='*\r' WHERE ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 END) NOT BETWEEN (NULL) AND (CASE WHEN t0.c2 THEN '762183300' END)); -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE (((((t0.c2, t0.c1, t0.c1))<=((t0.c1, t0.c0, t0.c1))))>=((- (x'')))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.41476885371561145; -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(0.34559724800974434) WHERE ((CAST(0.8057951302645036 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (t0.c1 COLLATE BINARY)); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET (c0)=('?ꚜp^'); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=('G-') WHERE (((((NOT (t0.c0)))AND(((t0.c1) NOTNULL))))AND((((('Ed#')OR(t0.c2)))OR(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0, c2)=(x'', '-1040584360', NULL); -- 0ms;
UPDATE OR FAIL t0 SET c0=0.8787259349835316 WHERE 0.181405649207651; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE t0 SET (c1)=(-890727162) WHERE (((t0.c2 IN (t0.c2, t0.c2))) NOT BETWEEN ((('\h\r')<(t0.c1))) AND (((((t0.c0)OR(t0.c2)))AND(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE json_patch((t0.c2 IN ()), ((t0.c1) ISNULL)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.10238136433663503; -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE TYPEOF(DISTINCT (',dl^' IN ())); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE t0 SET c0='1916832876' WHERE SQLITE_COMPILEOPTION_GET(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END); -- 0ms;
UPDATE t0 SET (c0)=(x'2717'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(x'', '-218753318'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=('', 0.39164010663201265) WHERE ((((t0.c2)OR(t0.c0)))AND(t0.c0)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c1='.(H7', c1='-1785333254'; -- 0ms;
UPDATE OR REPLACE t0 SET c0=0.9629802123199805; -- 0ms;
UPDATE t0 SET (c1, c1)=(1.784295819E9, 1.315066437E9) WHERE CASE WHEN ((t0.c1) ISNULL) THEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c1)))AND(x'fe3b90fe')) WHEN (t0.c1 IN (t0.c2)) THEN (NULL IN ()) WHEN t0.c0 THEN t0.c1 WHEN CAST(t0.c1 AS TEXT) THEN 0.37545240788374856 WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)IS NOT(NULL)) END; -- 0ms;
UPDATE t0 SET (c2, c1)=(NULL, NULL) WHERE CASE NULL  WHEN t0.c2 COLLATE RTRIM THEN t0.c2 COLLATE NOCASE ELSE ((t0.c2) NOT NULL) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE CAST(COALESCE(DISTINCT t0.c1, t0.c2) AS INTEGER); -- 1ms;
UPDATE OR REPLACE t0 SET (c0)=(0.24955672861687617); -- 0ms;
UPDATE t0 SET (c1)=('') WHERE LTRIM(CAST(t0.c1 AS REAL), (t0.c0 IN ())); -- 0ms;
UPDATE OR IGNORE t0 SET c0='졕^MA_&L' WHERE (((((t0.c2)OR(t0.c2)))AND(t0.c2)) IN ()); -- 0ms;
UPDATE t0 SET (c1)=('rnhe?'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE LAST_INSERT_ROWID() COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE CAST(((t0.c0)<>(t0.c0)) AS BLOB); -- 0ms;
UPDATE OR REPLACE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((('諶*')OR(t0.c0)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'a9b6'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0xffffffffe18b6578; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('') WHERE (((t0.c0)) BETWEEN (((NOT (t0.c2)))) AND ((((t0.c1) NOT NULL)))); -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c0)=(NULL, 0.6542355688002558) WHERE CAST(CAST(t0.c2 AS TEXT) AS REAL); -- 0ms;
UPDATE t0 SET c0=x'abee'; -- 0ms;
UPDATE OR ABORT t0 SET (c1, c2)=(NULL, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2='' WHERE (NOT (((0X7b4205c3) BETWEEN (t0.c1) AND (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1.785959493E9) WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1.415191751E9) WHERE CASE WHEN json_quote(t0.c0) THEN ((((t0.c0)OR(t0.c1)))OR(t0.c1)) ELSE UPPER(DISTINCT t0.c2) END; -- 0ms;
UPDATE t0 SET (c0, c1)=('-1317181739', 168279619); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c1=0.3238333129516797 WHERE (t0.c0 IN ()) COLLATE RTRIM; -- 0ms;
UPDATE OR REPLACE t0 SET c2='-418747590' WHERE ''; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.38405140236702495, c1=-6.70912915E8; -- 0ms;
UPDATE t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0Xffffffff96ecd306); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='EI', c1='-1024842925' WHERE ((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=('7Fj_A1-500000ﺽq-', '') WHERE (((t0.c2, t0.c1, t0.c1)) BETWEEN ((((t0.c1) BETWEEN (t0.c0) AND (t0.c1)), CAST(t0.c1 AS INTEGER), ((t0.c2) BETWEEN (t0.c1) AND (t0.c2)))) AND ((CASE WHEN t0.c0 THEN t0.c2 END, t0.c1, 0x65f38f34))); -- 0ms;
UPDATE t0 SET c0=0xffffffffa189d2b9; -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.2701345598979662; -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL, c1=x'' WHERE ((((((t0.c1)<(t0.c2)))OR(((t0.c1)AND(x'')))))AND(((t0.c0) BETWEEN (0Xffffffff958c6bbb) AND (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET (c0)=(0.09727975505174646) WHERE -1321047149; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY; -- 0ms;
UPDATE t0 SET (c1, c0, c2)=(NULL, '1391568540', 0X6e3456a8) WHERE ((((t0.c0) IS FALSE))&(((t0.c1)*(t0.c0)))); -- 0ms;
UPDATE t0 SET (c2, c1)=(0.6323171395545354, 1.262305631E9); -- 0ms;
UPDATE t0 SET (c2)=(0.19433820886693975) WHERE x''; -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET c1=0.7013018851277409; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(NULL) WHERE CASE x'991b' COLLATE NOCASE  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((t0.c0)|(t0.c2)) ELSE CASE t0.c1  WHEN t0.c0 THEN t0.c0 END END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.301130721705574) WHERE ((x'')>('-579026854')) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.34423053803845804 WHERE CAST(COALESCE(DISTINCT t0.c0, t0.c1, t0.c0, t0.c1, t0.c1, t0.c2) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'569c', c1=NULL WHERE ((t0.c0 COLLATE RTRIM) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2, c2)=(NULL, NULL, 0.7458988439663711); -- 1ms;
UPDATE OR IGNORE t0 SET (c1, c2)=('繺\n㋊uqRwn', 1296890809); -- 0ms;
UPDATE OR FAIL t0 SET c0='-662996267'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('&u') WHERE (+ ('1843251570')); -- 0ms;
UPDATE t0 SET (c1)=('149623727') WHERE (+ (t0.c1)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c1=884627416, c0='-1321047149' WHERE ((((((t0.c2)OR(t0.c0)))AND(t0.c2))) NOT BETWEEN ('-1938175954') AND (((((((((t0.c0)OR(x'')))OR(0Xffffffffa62722db)))OR(t0.c0)))OR(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(-116032196, x''); -- 0ms;
UPDATE OR IGNORE t0 SET c1='0.454649257983749', c1=NULL WHERE CAST(((((t0.c0)OR(t0.c2)))AND(t0.c1)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c1=1.784295819E9 WHERE 0.662688702389801; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.4057930541026791; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(0.08869143909228239); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2='-1022008187', c2='894904128' WHERE (((t0.c0 IN ()))=(CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END)); -- 0ms;
UPDATE t0 SET c0=0Xffffffffe5c29d4a; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('', '-743759920') WHERE ((((t0.c1)>=(t0.c1)))<(LIKELY(DISTINCT t0.c2))); -- 1ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 END)|(TYPEOF(DISTINCT t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'1c5b' WHERE CAST((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END) BETWEEN (t0.c1 COLLATE BINARY) AND (((((t0.c1)OR(t0.c2)))OR(t0.c2)))); -- 0ms;
UPDATE OR REPLACE t0 SET c0=x'' WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0x4ef16906; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.7002660608313994); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'ab0f5ba8e664'); -- 1ms;
UPDATE OR ABORT t0 SET c0=x'10dd' WHERE ((((((t0.c1)*(t0.c0)))OR((((t0.c1))=((t0.c0))))))OR('-1321047149')); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.09358222395192506); -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<((LIKELY(DISTINCT t0.c0)))); -- 0ms;
UPDATE OR REPLACE t0 SET c0=x'' WHERE t0.c1; -- 0ms;
UPDATE t0 SET c2=0.9137980168458976; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0, c2)=(0.19097287344151093, NULL, NULL) WHERE CASE WHEN t0.c2 COLLATE NOCASE THEN (t0.c2 IN ()) END; -- 0ms;
UPDATE t0 SET c2=NULL, c0='726370667'; -- 1ms;
UPDATE OR IGNORE t0 SET c2='-197682657', c2='Qy'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=-539131840; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE LOWER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))); -- 0ms;
UPDATE t0 SET c1=x'', c1=NULL, c1=x'c7692455', c1='1267229904' WHERE (((((t0.c2, t0.c2, t0.c1))<((NULL, t0.c0, t0.c2)))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((t0.c2)<<(t0.c2)) COLLATE NOCASE; -- 0ms;
UPDATE t0 SET (c1)=(-8.74727024E8) WHERE CAST(t0.c0 AS REAL); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(0Xffffffffe3656acf) WHERE ((((((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)))AND(NULL)))OR(t0.c1)))OR(t0.c1))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2, c2)=('', x'', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-662996267' WHERE ((((t0.c0)&(t0.c2)))>=(t0.c0 COLLATE RTRIM)); -- 0ms;
UPDATE t0 SET c0=x'877a' WHERE (NOT (((x'') IS TRUE))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.5699350500946574, c0=0x1cfb8ad, c0=x'' WHERE CASE WHEN ((((((((t0.c0)AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))OR(NULL)) THEN t0.c0 END; -- 0ms;
UPDATE t0 SET c2=x'74b5', c1='0.6251463128423645'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE t0 SET (c2)=(0.849023199337486); -- 0ms;
UPDATE t0 SET c1=x'', c1=x'' WHERE ((UPPER(t0.c0))>=(t0.c0 COLLATE RTRIM)); -- 0ms;
UPDATE t0 SET c1=x'' WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE (- ((t0.c1 IN ()))); -- 0ms;
UPDATE OR ABORT t0 SET c0='' WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('KJ'); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('ᖹy'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.05211536874320766 WHERE (t0.c2 IN ()); -- 0ms;
UPDATE t0 SET (c0)=(0.7846627730807907) WHERE TRIM(DISTINCT t0.c2) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=(0.7761184466677453, '8''N') WHERE CAST(x'' COLLATE RTRIM AS TEXT); -- 0ms;
UPDATE OR ABORT t0 SET c2=0.7002660608313994, c1='/' WHERE NULLIF(DISTINCT 0.47597428559069876, t0.c2) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('1934855717'); -- 0ms;
UPDATE t0 SET (c0)=(1.916832876E9) WHERE ((((t0.c1) NOT NULL))>(NULL)); -- 0ms;
UPDATE t0 SET c0=0.37545240788374856; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.26899103155628656); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE ((((t0.c0)>(t0.c0))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0Xffffffffd3ab1fd0) WHERE (((((((t0.c0))>((t0.c0))))OR(CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)))OR(t0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.43097284083166887); -- 0ms;
UPDATE t0 SET c1=0.998804761575844; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('now') WHERE CAST(((t0.c1) IS FALSE) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET c2=-1.823197555E9 WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE (((t0.c0, t0.c2, t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((CAST(t0.c2 AS NUMERIC), ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)), t0.c1, ((-3.31131346E8)OR(t0.c1)), ((t0.c2)+(t0.c1)))) AND ((t0.c0, ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)), (t0.c0 IN ()), (t0.c2 IN (t0.c1)), t0.c2))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(NULL) WHERE ((((t0.c2) BETWEEN (x'') AND ('-1530890485')))<(JULIANDAY(0.29641307683688833, t0.c0, t0.c0))); -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE CASE t0.c1 COLLATE NOCASE  WHEN (t0.c1 IN (t0.c2)) THEN ((t0.c2) NOT NULL) ELSE 'e-Rinz' END; -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE ((LTRIM(t0.c2, t0.c1)) BETWEEN (((('Jc', t0.c0, x'')) BETWEEN ((t0.c0, t0.c2, t0.c2)) AND ((t0.c1, t0.c2, t0.c0)))) AND (((t0.c1) NOT BETWEEN (x'') AND (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0x1a17f0ea; -- 0ms;
UPDATE OR IGNORE t0 SET c0='438941718', c1='' WHERE 1.900823478E9 COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c1)=(x'', 0.24034997908614597, NULL) WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(x'', 1262305631) WHERE ((CAST(t0.c2 AS INTEGER))+(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))); -- 0ms;
UPDATE t0 SET (c0)=(x'5814') WHERE (((t0.c1) IS FALSE) IN ()); -- 0ms;
UPDATE t0 SET c2=0.7474184773756212; -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c1)=(0.07190361759100694, x'') WHERE CAST(((t0.c1)AND(t0.c2)) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'ef17') WHERE (+ (t0.c2)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE OR ABORT t0 SET c0='ధNm 5*r' WHERE (+ (LIKE(t0.c0, t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.7683473108945856 WHERE CASE ((t0.c2)IS NOT(t0.c1))  WHEN t0.c2 COLLATE BINARY THEN ((0.37669854727965246) BETWEEN (t0.c0) AND (t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c2)=(NULL, -1478571515, x''); -- 0ms;
UPDATE OR ABORT t0 SET c0=x'', c2=NULL WHERE ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))&(t0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1040584360' WHERE ((LIKELY(DISTINCT t0.c0)) NOT NULL); -- 0ms;
UPDATE t0 SET c0='940678906' WHERE ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND (('881366376'))) IN ()); -- 0ms;
UPDATE t0 SET c1=x'3795' WHERE ((((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))AND(((t0.c2)>>(t0.c0)))); -- 1ms;
UPDATE OR IGNORE t0 SET c1=NULL, c1=NULL WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0X13697bab, c2=NULL; -- 0ms;
UPDATE OR FAIL t0 SET c2='\[W&銪i?', c0=0.46901388863880544, c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.03257605473345049 WHERE ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) NOT NULL); -- 0ms;
UPDATE t0 SET c0=0.36947927957974624; -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('0.24985518078085867') WHERE 0.5885459209795063; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET (c1)=('-682585516'); -- 0ms;
UPDATE t0 SET (c2, c0)=('', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE ((((t0.c1)IS(t0.c0)))LIKE(((t0.c1)<=(t0.c2)))); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c1)=('!c', 0.5339311907910044) WHERE SQLITE_SOURCE_ID(); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('k?㋊IhTxL'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0xffffffff958c6bbb, c0=NULL, c2=443961857 WHERE ((((t0.c1)OR(0.953738304458652)))OR(t0.c2)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(NULL, '1900823478') WHERE ((COALESCE(DISTINCT t0.c1, t0.c0, t0.c1, t0.c2))*((t0.c1 IN ()))); -- 0ms;
UPDATE t0 SET c0=0.5123795132775248 WHERE CASE x''  WHEN ((t0.c0)-(t0.c2)) THEN ((t0.c1) NOTNULL) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=('0D[%#!	D', 0xffffffffbb878dfc) WHERE json_quote(x'' COLLATE NOCASE); -- 0ms;
UPDATE OR FAIL t0 SET c1=NULL WHERE ((((((((((((CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)OR(0.13744275503570624 COLLATE NOCASE)))AND(((t0.c2)<(t0.c1)))))AND(CAST(t0.c1 AS TEXT))))OR(((t0.c0)IS(t0.c2)))))AND(((t0.c2)/(t0.c1)))))OR('-461495958')); -- 0ms;
UPDATE t0 SET (c0, c0, c2)=('', NULL, ''); -- 0ms;
UPDATE OR IGNORE t0 SET c2='8', c0=NULL WHERE ((((CAST(t0.c1 AS BLOB))AND(((t0.c0) IS FALSE))))AND(((t0.c0)IS NOT(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE CAST(RTRIM(t0.c2) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0Xffffffff8a039aec); -- 0ms;
UPDATE t0 SET c2='0.17683898224953398', c0=0.1637552647699333; -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=('lK&*hP') WHERE CASE WHEN ((t0.c0)|(t0.c2)) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c2)AND(t0.c0)))AND(x'')) THEN t0.c2 COLLATE RTRIM WHEN CAST(t0.c1 AS REAL) THEN t0.c2 COLLATE NOCASE END; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=('n5''t4RE嵍d') WHERE ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c2='UO/T*0r딍', c0=',5㇠' WHERE (('.LTD_') BETWEEN ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0)/(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0xffffffff80dfb48d, c0=0xffffffffd7f8863b WHERE ((t0.c0) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.40918502845640137) WHERE ((((t0.c2)/(t0.c2)))==((NOT (t0.c2)))); -- 0ms;
UPDATE t0 SET c2=0.5469135113312917, c0=0.8483735525072326; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('-1929524331', NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c0, c0)=(NULL, 0.8800794438447476, 1900823478) WHERE (t0.c0 COLLATE RTRIM IN (((t0.c0)==(t0.c1)), 0.3920362459637322)); -- 0ms;
UPDATE t0 SET c1=x'' WHERE CASE ((t0.c2)|(t0.c2))  WHEN ((t0.c2)OR(t0.c1)) THEN (t0.c0 IN (t0.c0, t0.c2)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE CAST((((t0.c0, t0.c1, 0.7899038203982096)) BETWEEN ((t0.c1, NULL, t0.c1)) AND ((t0.c1, t0.c2, t0.c1))) AS NUMERIC); -- 0ms;
UPDATE t0 SET (c2, c0)=(x'', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('^YMB1^') WHERE CASE t0.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) THEN (NOT (t0.c0)) WHEN NULLIF(DISTINCT t0.c2, t0.c0) THEN (t0.c2 IN ()) WHEN ((t0.c2)<(t0.c1)) THEN ((('-180406572', t0.c2, t0.c1))!=((t0.c1, -1389272222, t0.c0))) END; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=('0.6810872448893385') WHERE (~ (t0.c1)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(NULL, 0.1748332746741902); -- 0ms;
UPDATE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.9939449621850188 WHERE (+ ((t0.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE t0 SET (c2)=('-1928052974'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, NULL) WHERE (((((t0.c1)>=(t0.c1))))==((((t0.c2)>=(t0.c2))))); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(881366376) WHERE LIKELIHOOD(((((t0.c0)AND(t0.c0)))AND(t0.c2)), 0.7443313852792548); -- 0ms;
UPDATE OR IGNORE t0 SET c1='' WHERE ((((((t0.c2) NOT BETWEEN (t0.c1) AND (0.16823299890336307)))OR(((t0.c1)||(NULL)))))AND(1.934687099E9)); -- 0ms;
UPDATE t0 SET c1='ejx᲋kt|p*'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c0='1595031091' WHERE (~ (((t0.c2) BETWEEN (t0.c1) AND (t0.c2)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=NULL WHERE CASE WHEN ((0.6497526854092533)>>(t0.c1)) THEN ((t0.c0) IS FALSE) ELSE ((t0.c1) IS FALSE) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0='7h%' WHERE ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))&(((((t0.c2)OR(t0.c1)))OR(t0.c2)))); -- 1ms;
UPDATE OR ABORT t0 SET (c0, c2, c2)=(-527776941, NULL, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((t0.c1) IS FALSE); -- 0ms;
UPDATE t0 SET c0=0.27125934100277194 WHERE ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.2769926954788088, c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'a356') WHERE (((t0.c1 IN ()))IS(LIKELY(DISTINCT -4.1874759E8))); -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE t0.c1; -- 0ms;
UPDATE t0 SET c1=0.034604849970626184; -- 0ms;
UPDATE t0 SET (c2, c2, c2)=('-1928052974', '', 0.9198374638446376) WHERE CASE WHEN ((t0.c0)-(0.8415069864335373)) THEN ((t0.c1)GLOB(t0.c1)) WHEN ((t0.c1)<=(t0.c2)) THEN t0.c2 COLLATE BINARY WHEN (t0.c1 IN (t0.c1)) THEN LOWER(t0.c0) ELSE ((t0.c2)||(t0.c1)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c2=1.691883413E9, c0='-2001826306'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE 0.9203169691329366; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE t0.c1 COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('#TScV'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='I8k\\ip' WHERE CAST((- (t0.c0)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('1-500000') WHERE IFNULL(CAST(t0.c0 AS TEXT), (+ (t0.c2))); -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'd61e'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.3584950459276458); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE ((((((((((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))OR(CASE WHEN t0.c1 THEN t0.c0 END)))OR(t0.c0)))AND(TRIM(t0.c1))))AND(TRIM(DISTINCT t0.c1))); -- 0ms;
UPDATE t0 SET c2=NULL; -- 0ms;
UPDATE OR ABORT t0 SET c2=x'0c7d'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE OR REPLACE t0 SET c1=0.48895678361634687 WHERE CAST((t0.c1 IN (t0.c0)) AS REAL); -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE t0 SET (c1)=(x'df88'); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(2.002212336E9); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1225161198', c0='-925423842' WHERE (((t0.c0)) NOT BETWEEN ((((('start of year'))<((t0.c0))))) AND ((((t0.c1) BETWEEN (t0.c2) AND (t0.c0))))); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(0.9270334532236144) WHERE UNLIKELY(((t0.c1)<=(t0.c0))); -- 0ms;
UPDATE t0 SET (c1)=(0.18472247405494313); -- 1ms;
UPDATE OR ROLLBACK t0 SET (c0)=('-449730967') WHERE (((NULL, ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c0) NOT BETWEEN ('''9M4Q?p') AND (t0.c2))))>((CAST(t0.c2 AS NUMERIC), (t0.c2 IN ()), ((((t0.c2)OR(t0.c0)))AND(t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.46181450265303936; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(x'', 0.038019237529971384) WHERE ((((t0.c1)<('1916832876')))OR(CAST(t0.c1 AS REAL))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'ef94' WHERE ((((((t0.c2) IS TRUE))AND(((((t0.c2)OR(t0.c2)))OR(0.38405140236702495)))))AND(((t0.c1)OR(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'00e0'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'c4ee'; -- 0ms;
UPDATE t0 SET c1='&d'; -- 0ms;
UPDATE t0 SET (c2)=('䆿K?a.') WHERE LTRIM(t0.c1, t0.c2) COLLATE RTRIM; -- 0ms;
UPDATE OR FAIL t0 SET c1=0.6520236894500496, c1=0.5687392450868234, c0=0.6201535885003349; -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0='-297400969'; -- 0ms;
UPDATE t0 SET (c0, c1)=(x'', NULL) WHERE (NOT (((((t0.c1)AND(t0.c1)))AND(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=('1670339627', '') WHERE (((((t0.c2)AND(t0.c1)))AND(t0.c2)) IN (((t0.c0)IS(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(440010771, '-1146424808') WHERE ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('-1321047149', NULL) WHERE (~ (LAST_INSERT_ROWID())); -- 0ms;
UPDATE t0 SET (c1)=(x'') WHERE (((NOT (t0.c1)))AND((t0.c2 IN ()))); -- 0ms;
UPDATE t0 SET (c2)=('1302323891') WHERE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c0=x'a46a', c0=')M'; -- 0ms;
UPDATE t0 SET (c1)=(x'') WHERE (((t0.c2))==(((+ (t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-333569769) WHERE t0.c1; -- 0ms;
UPDATE t0 SET (c1, c0)=('', NULL) WHERE t0.c0; -- 0ms;
UPDATE t0 SET (c0, c2, c2)=(NULL, x'', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(x'd479', 0.6621834482894445) WHERE t0.c2; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'', c2='''㬻em!S', c1=''; -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE x'26bd'; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(0.6400355098527196); -- 0ms;
UPDATE t0 SET (c2)=(0x6088c4c3) WHERE CASE CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 END  WHEN (((('^^v#7hl')AND('&')))AND(t0.c2)) THEN ((((t0.c1)OR(t0.c0)))OR(t0.c1)) ELSE ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) END; -- 0ms;
UPDATE t0 SET c2='銖\zADZ\n썓數', c0=NULL; -- 0ms;
UPDATE t0 SET (c0)=('㥾ꥯ') WHERE '6652928007392641528T7145707962340528666T1810:-7356928838723307660-1591T-2379836727187338568T'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'690d'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'7419'); -- 0ms;
UPDATE t0 SET (c1, c2)=(x'', 0Xffffffffc86ee4bf); -- 0ms;
UPDATE OR IGNORE t0 SET c1=1682657689, c1=NULL WHERE ((((t0.c2 COLLATE RTRIM)OR(load_extension(t0.c1, t0.c1))))AND((((t0.c0, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c0, t0.c0)) AND ((t0.c2, t0.c1, t0.c1))))); -- 0ms;
UPDATE t0 SET c1='KSB\I9'; -- 1ms;
UPDATE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('	<j96-mo'); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.3953534804247687 WHERE (((t0.c2 IN ()))!=(CASE WHEN x'' THEN t0.c2 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('940678906'); -- 0ms;
UPDATE t0 SET (c0)=(0.9371594135082815) WHERE ((((t0.c1))>=((t0.c1))) IN (((((t0.c0)OR(t0.c2)))OR(9.73683166E8)), ((t0.c2)==(t0.c0)))); -- 0ms;
UPDATE t0 SET c1=NULL, c2=NULL; -- 1ms;
UPDATE OR FAIL t0 SET (c2)=('0.3587961566334479'); -- 0ms;
UPDATE t0 SET c1='' WHERE CAST(t0.c2 COLLATE BINARY AS REAL); -- 0ms;
UPDATE OR ABORT t0 SET c0='1900823478'; -- 0ms;
UPDATE OR REPLACE t0 SET c2=NULL WHERE ((t0.c0 COLLATE RTRIM)<=(((t0.c1) NOT BETWEEN (t0.c2) AND (x'')))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.8005612980691985) WHERE (((t0.c0)) BETWEEN ((CAST(t0.c1 AS INTEGER))) AND ((CAST(t0.c2 AS INTEGER)))); -- 0ms;
UPDATE OR ABORT t0 SET c2=x''; -- 0ms;
UPDATE t0 SET c0=''; -- 0ms;
UPDATE OR FAIL t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE CAST(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END AS NUMERIC); -- 0ms;
UPDATE t0 SET (c0)=('fbz6vg') WHERE CASE WHEN ((t0.c2)>>(t0.c0)) THEN ((t0.c1)+(t0.c1)) ELSE CAST(t0.c2 AS NUMERIC) END; -- 0ms;
UPDATE OR ABORT t0 SET c0='-501079156', c1='1397814151' WHERE (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((((0.15145591308678164)*(t0.c2)), TYPEOF(DISTINCT t0.c0), (((t0.c1))>((t0.c2))))) AND (((NOT (t0.c1)), CASE -284830355  WHEN t0.c0 THEN t0.c2 END, t0.c0 COLLATE BINARY))); -- 0ms;
UPDATE t0 SET (c0)=(0.8713796625448691) WHERE CASE (+ (t0.c0))  WHEN (((t0.c1))<=((t0.c0))) THEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)) WHEN LIKELIHOOD(DISTINCT t0.c2, 0.7078547607049102) THEN ((t0.c0) ISNULL) WHEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c1)))AND(t0.c1)))AND('J|')) THEN CASE WHEN NULL THEN t0.c0 END END; -- 0ms;
UPDATE t0 SET c0=x'' WHERE ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=0X490679ee; -- 0ms;
UPDATE OR IGNORE t0 SET c2='DJ)\Ki|N' WHERE ((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((((t0.c0)AND(t0.c1)))AND(t0.c0)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=NULL, c0=x'', c2='' WHERE (((NOT (t0.c0))) BETWEEN (((t0.c0) NOTNULL)) AND (CAST(t0.c1 AS NUMERIC))); -- 0ms;
UPDATE t0 SET c0=0.770277790866028; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('*??r+Z㥾z') WHERE ((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))), ((t0.c0) BETWEEN (NULL) AND (t0.c0)), CAST(t0.c1 AS BLOB)))<(((((t0.c1))>((t0.c1))), 0.4195210833969343, t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=('973683166', x'98c8') WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE ((((((((((t0.c1) NOTNULL))OR(((t0.c2) IS TRUE))))OR(1492658786)))AND(((t0.c0)OR(t0.c0)))))AND(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('') WHERE ((((NULL)OR(t0.c1))) BETWEEN (((t0.c0)|(t0.c0))) AND (t0.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-940411051'; -- 0ms;
UPDATE t0 SET (c0, c1)=(NULL, '-1836411305'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.7566032834130849; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(x'd6f8') WHERE CASE WHEN t0.c1 THEN t0.c1 WHEN SQLITE_SOURCE_ID() THEN t0.c2 WHEN NULL THEN (t0.c0 IN ()) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (0.5748567637509636)) END; -- 0ms;
UPDATE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c0=-9.25423842E8 WHERE (t0.c2 IN ()) COLLATE RTRIM; -- 0ms;
UPDATE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR ABORT t0 SET c2=''; -- 0ms;
UPDATE t0 SET c1=x'0853', c0=NULL, c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('') WHERE (((NOT (t0.c1))) NOT NULL); -- 0ms;
UPDATE t0 SET (c2)=('') WHERE ((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)<=(((t0.c2)<=(t0.c2)))); -- 0ms;
UPDATE t0 SET (c1, c2)=('', '0.48874194019537154') WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE t0 SET c0=-5.10958216E8 WHERE CAST((t0.c2 IN ('807495896', t0.c2)) AS NUMERIC); -- 0ms;
UPDATE t0 SET (c1, c0, c2)=(NULL, NULL, 'b	鉔z') WHERE ((t0.c1) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c0='413547761' WHERE CAST(t0.c2 COLLATE NOCASE AS TEXT); -- 0ms;
UPDATE t0 SET c1=NULL, c1=x'' WHERE ((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN 'o' THEN t0.c2 WHEN 0xffffffffd77e9bff THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)AND((t0.c1 IN ()))))OR(((t0.c0)-(t0.c0)))); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(']շJ%._C') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 1ms;
UPDATE OR FAIL t0 SET c2=')/', c2=NULL WHERE ((((((((((t0.c2) NOT BETWEEN ('-1507384613') AND (t0.c1)))AND(0.1629006587829961)))AND(((t0.c1)||(t0.c2)))))OR(((t0.c0) NOTNULL))))AND((((t0.c1, t0.c2, t0.c2)) BETWEEN ((t0.c1, '-1415191751', t0.c2)) AND ((t0.c0, t0.c0, t0.c2))))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=NULL, c1='㏎l' WHERE ((((t0.c0)<=(t0.c1)))+((0.015743984157216118 IN (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'2152') WHERE (((((NOT (t0.c2)))OR(((NULL)<<(t0.c0)))))OR(CAST(t0.c0 AS REAL))); -- 0ms;
UPDATE t0 SET (c2)=(1214141104); -- 0ms;
UPDATE t0 SET (c1, c0)=(NULL, '-930388785') WHERE CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 END; -- 0ms;
UPDATE OR FAIL t0 SET c2=x'', c1=NULL, c0='-34880857'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE (+ ('-930388785')); -- 0ms;
UPDATE t0 SET c2='-890727162', c0=-1.321047149E9 WHERE x''; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(0.2231526938084336); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.2879726393332832); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(x'bce6') WHERE 443961857; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.9903745623905941) WHERE CAST(t0.c2 AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c0='GFf<Y|P', c0='-1214145257'; -- 0ms;
UPDATE OR REPLACE t0 SET c1=0.43589143795882646, c0='' WHERE CASE (t0.c2 IN (t0.c0))  WHEN ((t0.c0) ISNULL) THEN t0.c2 WHEN NULL THEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(t0.c2)) WHEN IFNULL(t0.c0, t0.c0) THEN ((t0.c2)|(t0.c1)) ELSE CAST(t0.c0 AS BLOB) END; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 1ms;
UPDATE OR REPLACE t0 SET c0=0.7824291200071842; -- 0ms;
UPDATE OR ABORT t0 SET c2=1.225161198E9; -- 0ms;
UPDATE OR IGNORE t0 SET c0='1114558160' WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c2=NULL, c0=0.04730433370531406; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'c407', c0=0.90190882753006 WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c2)=('Voq+q*d', 3.24559642E8) WHERE CAST(CAST(t0.c2 AS TEXT) AS INTEGER); -- 0ms;
UPDATE t0 SET c2=0.7444906654037937; -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('向'''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-940411051'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(-2.054460691E9, NULL) WHERE CAST(json_valid(t0.c2) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c2='{]N\n'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.47789936001831135; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0='-687947615' WHERE (((- (t0.c2))) ISNULL); -- 0ms;
UPDATE OR REPLACE t0 SET c0=0.5978494166100553 WHERE LIKELY((- (t0.c2))); -- 0ms;
UPDATE t0 SET (c2, c0, c0)=(NULL, NULL, 1.784295819E9) WHERE (('423#(o(8X') ISNULL) COLLATE RTRIM; -- 1ms;
UPDATE OR REPLACE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('(b'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE json(((t0.c0)>(t0.c0))); -- 0ms;
UPDATE OR ABORT t0 SET c0='z4' WHERE SQLITE_COMPILEOPTION_GET(((t0.c1) IS FALSE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=('AQ', x'dd63'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-1078595787', c1=NULL WHERE ((((((t0.c2)+(t0.c1)))OR((t0.c2 IN ()))))AND(TRIM(DISTINCT t0.c0, t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1285467834); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.4093504990757031; -- 0ms;
UPDATE t0 SET c2=0.8673317455026274; -- 0ms;
UPDATE OR FAIL t0 SET (c1, c1)=('-1516167921', 977369175); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-1.146424808E9) WHERE ((((((t0.c0)AND(x'')))OR(t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0) BETWEEN (t0.c1) AND ('')))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=''; -- 0ms;
UPDATE t0 SET (c0, c1, c1)=(0X299615d7, NULL, 0.4556843676432023); -- 0ms;
UPDATE t0 SET (c1)=(1492658786); -- 0ms;
UPDATE t0 SET (c0)=('') WHERE (CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END IN ()); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(x'') WHERE t0.c2; -- 0ms;
UPDATE OR FAIL t0 SET (c2, c0)=(NULL, x'40aa') WHERE ((((t0.c0) BETWEEN (t0.c0) AND (0.15962167855648235))) NOT BETWEEN (NULL) AND (((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0xffffffffb54c3f2c WHERE ((('2123653689' IN ())) NOT NULL); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(NULL); -- 0ms;
UPDATE t0 SET (c1, c1, c0, c2)=(0.2386189910028964, x'', 'D%', '-700306291') WHERE CAST(CASE WHEN t0.c2 THEN t0.c1 END AS BLOB); -- 0ms;
UPDATE t0 SET (c0)=(-1.7023664E7) WHERE '\S'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=',o{!릐yf-'; -- 0ms;
UPDATE t0 SET c2='-282874203'; -- 0ms;
UPDATE t0 SET (c1)=(x'') WHERE ((t0.c1 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.7312614824232324); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.9081830673827438, c2=242843773, c0=NULL WHERE CASE WHEN CAST(x'' AS INTEGER) THEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END WHEN LIKE(t0.c2, t0.c0, 'B') THEN ((t0.c0) NOTNULL) WHEN ((t0.c1) IS FALSE) THEN ((t0.c1)||(t0.c1)) ELSE ((t0.c0) IS FALSE) END; -- 0ms;
UPDATE t0 SET (c0, c1)=(0.6321404605105192, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(''); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL) WHERE LIKELY(t0.c1) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(x'90cc') WHERE t0.c0 COLLATE NOCASE; -- 1ms;
UPDATE OR FAIL t0 SET (c2)=(x''); -- 0ms;
UPDATE t0 SET c1=x'', c0=0x64318c9a, c1='cL뜸lB5xxH' WHERE (CAST(t0.c0 AS TEXT) IN ()); -- 0ms;
UPDATE OR ABORT t0 SET c2='w\n' WHERE CASE WHEN t0.c0 THEN CAST(t0.c0 AS BLOB) ELSE (t0.c1 IN ()) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0Xffffffffa9a1fd7b WHERE ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (x'' COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.011849917965988666; -- 0ms;
UPDATE t0 SET c1=-1558758597, c0=0.5078639120985243, c1=0.6251463128423645 WHERE ((t0.c2 COLLATE NOCASE)GLOB(((((t0.c0)OR(t0.c0)))OR(t0.c0)))); -- 0ms;
UPDATE OR FAIL t0 SET c0=NULL WHERE t0.c2; -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(0.8154388725058469); -- 0ms;
UPDATE t0 SET (c1, c0, c0)=(x'5bb9', '<c', 0.8880373188449543); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1, c2)=('-565699590', '-7784601327182642372:-4923167617646347542-953-8969904483996572416--5640402144571030230T-478320986676529704-', -1.507384613E9); -- 0ms;
UPDATE t0 SET c0=0.142544070679957, c0=NULL, c0=0.5037127997212328 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) IN ()); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c1, c2)=(x'', x'', x'3fb0') WHERE CAST(LOWER(t0.c2) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.04662537759451568; -- 0ms;
UPDATE t0 SET c2=NULL, c0=0.7755013395053101 WHERE ((t0.c0) NOT NULL); -- 1ms;
UPDATE OR IGNORE t0 SET c2=0.021224549895845546, c0=1.11455816E9, c0=x''; -- 0ms;
UPDATE t0 SET c2=-890727162 WHERE (((+ (t0.c1)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('If~') WHERE ((((t0.c2) IS FALSE))-(((x'')-(t0.c2)))); -- 0ms;
UPDATE t0 SET (c2, c1)=('[Y+.OYO', 'gA)\'); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE (t0.c0 IN (t0.c1)) COLLATE BINARY; -- 0ms;
UPDATE t0 SET (c1)=('1098037048') WHERE (((('')<<(t0.c1))) NOT BETWEEN (TYPEOF(t0.c1)) AND (((t0.c0) NOTNULL))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=NULL; -- 0ms;
UPDATE OR ABORT t0 SET (c2, c1)=('-1948934716', '') WHERE (((((t0.c0, t0.c1, t0.c2)) NOT BETWEEN ((t0.c0, t0.c2, t0.c2)) AND ((t0.c1, t0.c2, t0.c2))))!=((t0.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE (((t0.c1)) BETWEEN (((+ (0.5029977940201193)))) AND ((CHAR(t0.c1, t0.c1, t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE t0.c0; -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c1)=(x'', '6wKv|') WHERE 1638496254; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-8.74727024E8, c1=-359597764 WHERE (((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c0, t0.c1), (((t0.c0))<=((x''))), json_quote(t0.c2))) AND (((t0.c2 IN ()), (x'' IN ()), t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='', c2='940678906' WHERE t0.c2; -- 0ms;
UPDATE t0 SET c0=1373029027 WHERE ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)||(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)); -- 1ms;
UPDATE OR ABORT t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
UPDATE t0 SET (c1)=(0.7372910999212537); -- 0ms;
UPDATE OR FAIL t0 SET c2=0X72408c6c, c0=0.2231526938084336 WHERE (~ (t0.c0)) COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL) WHERE ((((t0.c2)LIKE(t0.c0))) BETWEEN ((+ (t0.c0))) AND ((t0.c1 IN (NULL, t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE ''; -- 0ms;
UPDATE OR ABORT t0 SET (c0, c0)=('!', '6d2') WHERE ((NULL IN (t0.c0)) IN ()); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(NULL); -- 0ms;
UPDATE t0 SET (c1, c0)=(NULL, '567543258'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-391679237', c0=0.5653373448372109, c1='-167911057' WHERE ((t0.c2 COLLATE NOCASE)&(CAST(t0.c2 AS NUMERIC))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='~B{}'; -- 0ms;
UPDATE t0 SET c0=-1.16698942E9, c1='LI', c0=-1865100101; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-130338938') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('4p'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.6989213370765718; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c2=NULL WHERE (((t0.c1, t0.c0, t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c2 END, ((t0.c2)>(t0.c0)), t0.c1 COLLATE BINARY)) AND ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, (((t0.c1))>=((t0.c0))), ((((((((t0.c2)AND(t0.c2)))OR(x'')))OR(NULL)))AND(t0.c1))))); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(0.9381725473675765); -- 0ms;
UPDATE t0 SET (c2)=(0X6c6cef1d) WHERE ((((t0.c2)>=(t0.c2))) BETWEEN (((t0.c2)IS(t0.c0))) AND ((- (t0.c2)))); -- 0ms;
UPDATE t0 SET (c0)=('') WHERE t0.c2; -- 0ms;
UPDATE t0 SET (c0)=('06X&B፷_') WHERE ((NULL)=((- (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=1391568540 WHERE (((((((((+ (t0.c1)))OR(CASE t0.c2  WHEN t0.c2 THEN NULL ELSE t0.c2 END)))AND(((NULL)IS NOT(t0.c1)))))OR(x'')))OR(t0.c2 COLLATE BINARY)); -- 1ms;
UPDATE t0 SET (c0, c1)=(0xadfff7f, 1.900823478E9) WHERE ((((+ (NULL))))==((((t0.c2)=(t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='' WHERE x''; -- 0ms;
UPDATE t0 SET (c0, c0)=(NULL, 'T>_%+￿_a'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='AA'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE UPPER(DISTINCT ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((LTRIM(t0.c0))>((t0.c2 IN ()))); -- 0ms;
UPDATE t0 SET c1=0x34bd65fe WHERE -4.97272368E8; -- 1ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c0, c1)=('', '-743759920', 'ZⶇF') WHERE ((((t0.c2))>((t0.c0))) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.17683898224953398; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c0='Lxw)NT' WHERE (((t0.c1 IN (t0.c2))) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (x'')); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE json_quote(((t0.c0)==(t0.c1))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.8111062913180775; -- 0ms;
UPDATE t0 SET (c1, c0)=(NULL, NULL) WHERE UPPER(DISTINCT (t0.c2 IN ())); -- 0ms;
UPDATE t0 SET (c0, c2, c0)=(x'2090', 5.14746981E8, 0xfffffffffcc63c81); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.4315691140349306, c2=-80306055 WHERE ((((((((((x'') IS TRUE))AND(CAST(t0.c1 AS BLOB))))OR(CAST(t0.c2 AS REAL))))AND(((t0.c0)IS NOT('-1741334366')))))AND(x'')); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x'') WHERE t0.c1; -- 0ms;
UPDATE t0 SET (c2, c1, c1)=(x'a5f1', NULL, x''); -- 0ms;
UPDATE t0 SET (c2, c1, c1)=(-1701340632, x'', 9.40678906E8) WHERE CASE LIKELIHOOD(DISTINCT t0.c1, 0.7755172605801356)  WHEN x'' THEN ((t0.c0)>(0)) ELSE ((t0.c0) NOTNULL) END; -- 0ms;
UPDATE t0 SET (c2)=('1920480821') WHERE ((CAST(t0.c1 AS BLOB))%(((t0.c0)>=(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE (- (t0.c0)) COLLATE NOCASE; -- 0ms;
UPDATE t0 SET c1='-1022081834', c1=x'' WHERE (((((t0.c1))=((t0.c0))))GLOB(t0.c2)); -- 0ms;
UPDATE t0 SET c1=NULL, c0='e[q9v'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('504125227', NULL) WHERE CAST((- (t0.c2)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c1='jj', c0=x'588d' WHERE ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))<((((t0.c0, t0.c0, t0.c1, t0.c2, t0.c0))>=((0.32046721028697966, t0.c1, t0.c1, t0.c0, x''))))); -- 0ms;
UPDATE t0 SET c0='-175675891'; -- 0ms;
UPDATE t0 SET c0=0.28709596770993606 WHERE json_remove(t0.c2, t0.c2, t0.c1, t0.c1) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.42106112531352813) WHERE (((((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((x''))))AND(t0.c2)))AND(((((t0.c1)AND(t0.c1)))OR(t0.c2)))))OR(t0.c0 COLLATE RTRIM)))OR((t0.c0 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c1='qN.-y8e26', c0=x'', c0=0.5436360277608464 WHERE json_array_length((('^\rN0')&(t0.c0)), LTRIM(t0.c2)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=1.638496254E9; -- 0ms;
UPDATE t0 SET (c0)=('-442009979'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE ((t0.c2 COLLATE NOCASE)AND(((t0.c0)==(t0.c1)))); -- 0ms;
UPDATE OR ABORT t0 SET c1=1391568540; -- 0ms;
UPDATE t0 SET c1=NULL, c2=0.07374520820018926, c0=0x7350fb7b; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE t0 SET c2=x'3365' WHERE ((((t0.c1)IS NOT(t0.c2)))|((-1920363307 IN ()))); -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE (((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))))!=(((~ (t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'cc6b94fe'; -- 0ms;
UPDATE t0 SET (c2)=(0.02605872841676793); -- 0ms;
UPDATE t0 SET (c0)=(x'7bfb'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=1800762106, c0=1685456179, c0='-1836411305' WHERE (IFNULL(DISTINCT t0.c0, t0.c2) IN ()); -- 0ms;
UPDATE OR REPLACE t0 SET c2=0x76f3a869 WHERE ((((t0.c0) IS FALSE)) BETWEEN (CHANGES()) AND (((t0.c0)<=(t0.c0)))); -- 0ms;
UPDATE t0 SET c2=''; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=('1639998247'); -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c2)=(x'', '888256813'); -- 0ms;
UPDATE t0 SET c2=x'88ce', c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0X538d966e) WHERE (((((t0.c0))>=((t0.c0)))) NOT NULL); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.395411429661518) WHERE ((t0.c2) NOT BETWEEN (HEX(DISTINCT t0.c0)) AND (UNLIKELY(DISTINCT t0.c2))); -- 1ms;
UPDATE OR ROLLBACK t0 SET (c0, c2)=(NULL, NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0xffffffff9059a083); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'00b4'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(NULL, NULL) WHERE ((((LOWER(t0.c0))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(UNLIKELY(DISTINCT '-1321047149'))); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(0.6147754387263896); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-1764163116); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.2813521840337555) WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END) NOTNULL); -- 0ms;
UPDATE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c2, c0)=(0.9588811865531245, 0.8392967891874158, -1.995502651E9); -- 0ms;
UPDATE t0 SET c1=0.0691473433030847 WHERE ((t0.c2) NOT BETWEEN (((((((((t0.c1)OR(t0.c2)))AND(-1340745154)))AND(t0.c2)))OR(t0.c2))) AND (((t0.c2) IS FALSE))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=(443961857, '_7hZS') WHERE NULLIF(CAST(t0.c2 AS TEXT), (((t0.c0)) BETWEEN (('U}A')) AND ((t0.c1)))); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET c0='\n3.C?7', c2='1437243515' WHERE ((((t0.c0 IN ())))>=(('t㘵Hధ(n'))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2='867802989' WHERE ((((t0.c0)>>(t0.c1)))<(t0.c0)); -- 0ms;
UPDATE t0 SET c1=x'42c2', c0=x''; -- 0ms;
UPDATE t0 SET (c2)=('-758660603') WHERE CASE WHEN (NOT (t0.c1)) THEN ((t0.c0)AND(t0.c1)) WHEN t0.c2 COLLATE NOCASE THEN ((NULL)GLOB(t0.c0)) WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c0)>(t0.c0)) END; -- 0ms;
UPDATE OR REPLACE t0 SET c1=0x586fa395 WHERE UPPER(t0.c1 COLLATE BINARY); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR FAIL t0 SET c0='-1507384613', c1=NULL, c2=1.609208033E9; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(0.27824078414402564, 0.9763157539852418) WHERE ((((t0.c0, t0.c1, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c1, t0.c1, t0.c0))) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('0.5885459209795063') WHERE (CAST('410487042' AS TEXT) IN (((((t0.c1)AND(t0.c2)))OR(t0.c1)), ((t0.c0)/(t0.c0)))); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c1, c0)=(NULL, NULL, 1.934687099E9); -- 0ms;
UPDATE OR REPLACE t0 SET c0='-1040584360'; -- 0ms;
UPDATE t0 SET c0='-2115443908' WHERE CASE WHEN (((t0.c1))>((t0.c1))) THEN NULL WHEN -1357178282 THEN x'' WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c2) ISNULL) WHEN t0.c0 THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c2)|(t0.c1)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END END; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.015914431252698646); -- 0ms;
UPDATE OR IGNORE t0 SET c2=-1.7023664E7, c2='fK\rF6', c2=2.140148599E9 WHERE (+ (((t0.c0)/(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='', c2=0.7698345769376761 WHERE ((INSTR(t0.c2, t0.c2))AND((t0.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE CAST(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) AS NUMERIC); -- 0ms;
UPDATE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.07955504355323684; -- 0ms;
UPDATE t0 SET (c2)=('*bux/<3%'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0.9783196438826103, NULL) WHERE TRIM(t0.c0); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-1631901508') WHERE (CAST(t0.c0 AS BLOB) IN ()); -- 0ms;
UPDATE t0 SET c0='FEe{'; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c1, c2)=(NULL, NULL, '3嘮裚Y') WHERE ((t0.c0)AND((- (t0.c2)))); -- 0ms;
UPDATE t0 SET (c2)=('0.29641307683688833'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(-513012697, x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-17023664'); -- 0ms;
UPDATE OR IGNORE t0 SET c1='dUZ)|WN(', c0=NULL WHERE ((t0.c0 COLLATE BINARY) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE 0.14753237628657678; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.20905754463326987 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))<((NULL COLLATE RTRIM))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('g3M]먥a5'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.3901171257166406 WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 1ms;
UPDATE OR IGNORE t0 SET c0='1736735415', c1=0xffffffff8b60df88 WHERE CASE t0.c1 COLLATE NOCASE  WHEN 0X485e52b0 THEN CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 END WHEN ((((t0.c1)OR(x'')))OR(t0.c0)) THEN CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN '-1636992740' THEN t0.c0 ELSE t0.c2 END WHEN ((t0.c1)<(t0.c2)) THEN (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) ELSE CAST(t0.c1 AS REAL) END; -- 0ms;
UPDATE t0 SET (c2)=(0x68247ee7) WHERE TYPEOF(DISTINCT ((NULL)<(t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(x'', NULL) WHERE ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))&(CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)); -- 0ms;
UPDATE t0 SET c1=0.5530750214223217 WHERE CASE (t0.c1 IN ())  WHEN ((((0xffffffff84374ee2)AND(t0.c0)))AND(t0.c1)) THEN HEX(DISTINCT t0.c2) END; -- 0ms;
UPDATE OR REPLACE t0 SET c0=NULL WHERE (TRIM(t0.c2) IN (((t0.c2)==(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 1ms;
UPDATE OR ABORT t0 SET c0=NULL WHERE (((t0.c1)|(t0.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1558758597', c2=NULL, c0='-889769256'; -- 0ms;
UPDATE OR REPLACE t0 SET c0=NULL WHERE t0.c0; -- 0ms;
UPDATE t0 SET c1=0.8183672497931465; -- 0ms;
UPDATE t0 SET (c2)=('-10259483') WHERE ((((((t0.c2) NOT NULL))OR((~ (t0.c2)))))OR((+ (t0.c1)))); -- 0ms;
UPDATE OR REPLACE t0 SET c2=0.19357301922403347 WHERE ((((t0.c2 IN (t0.c0))))<=((((t0.c2)GLOB(t0.c1))))); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0xffffffffec1e2117); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE (('-497272368') IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.3355779837018519, c1=x'' WHERE (((CAST(t0.c1 AS NUMERIC)))!=((t0.c2))); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(NULL) WHERE TIME(CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN NULL THEN t0.c0 END, ((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)), ((((((((t0.c1)OR(t0.c2)))OR(0.6641600590221491)))OR(t0.c1)))AND(t0.c0)), (((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, 'W떄ssᙓd', t0.c2)) AND ((t0.c0, t0.c2, t0.c0))), ((t0.c2)|(t0.c0))); -- 0ms;
UPDATE t0 SET c2=0Xffffffffbf1539de, c0=0.4061519536463468 WHERE ((((t0.c0)&(t0.c0))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1='℗pylK嗰QYd', c1=x'3f28'; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('h4') WHERE ((((t0.c0)+(t0.c1))) BETWEEN (((t0.c2)<<(t0.c0))) AND (((NULL) ISNULL))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0='r멼' WHERE CASE WHEN CAST(t0.c1 AS BLOB) THEN CAST(t0.c2 AS TEXT) ELSE t0.c1 END; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=('1\rv.Z(Yᇙ') WHERE CASE t0.c0 COLLATE NOCASE  WHEN ((x'09aa')||(t0.c0)) THEN 0.4945145254894171 END; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(0.7002660608313994) WHERE t0.c1; -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(0.5110349530500811) WHERE x''; -- 0ms;
UPDATE t0 SET c0=0.4356379887201107, c1=NULL, c0=0.36630393337485756 WHERE ((t0.c1) ISNULL) COLLATE NOCASE; -- 0ms;
UPDATE t0 SET (c0)=(0xffffffffcd483cf2) WHERE (((t0.c0)IS(t0.c2)) IN ()); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET c2='\?^'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='-662996267' WHERE ((((json_object(x'', t0.c0))AND(t0.c0)))AND((((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c2, t0.c0, t0.c2))))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='0.1609015642334254' WHERE (NOT (CASE t0.c2  WHEN t0.c0 THEN 0.9888741725031197 END)); -- 0ms;
UPDATE OR FAIL t0 SET c1=0.8729251945512129 WHERE CASE WHEN x'' THEN ')〄u,}{/_''' ELSE ((t0.c0) IS TRUE) END; -- 0ms;
UPDATE t0 SET (c1)=(0x17f0f1b5); -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c0, c0)=('1968777045', NULL, '-577240830') WHERE ((t0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END) AND (((x'476fad28') BETWEEN (t0.c1) AND (t0.c2)))); -- 0ms;
UPDATE t0 SET (c0, c2)=(NULL, x''); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE t0 SET (c0, c0, c0, c1)=(NULL, '1307192627', 0.11769153603584526, '&N!6-gA!') WHERE 'i'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE t0.c0; -- 0ms;
UPDATE t0 SET (c2)=('865732869'); -- 0ms;
UPDATE OR REPLACE t0 SET c1=x'0417', c0=0.7237205484465732; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(1315066437) WHERE (((t0.c1)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))) AND ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN 'ꕶXwnk5ꭸ~' ELSE t0.c0 END))); -- 0ms;
UPDATE OR FAIL t0 SET c2='-539131840', c1=0.6257392296697057; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE ROUND(CASE WHEN t0.c0 THEN t0.c0 END, ((((t0.c1)OR(t0.c1)))OR(t0.c0))); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c1)=(NULL, NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.21329778566769764 WHERE CAST(((t0.c0)&(t0.c0)) AS TEXT); -- 0ms;
UPDATE t0 SET (c1)=('881366376'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0.360326032227537) WHERE ((((((t0.c0)>>(t0.c0)))AND(CAST(t0.c1 AS REAL))))OR(t0.c1)); -- 0ms;
UPDATE OR REPLACE t0 SET c2=x'931e'; -- 0ms;
UPDATE OR IGNORE t0 SET c2='0.7499456918957368' WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1571376985' WHERE (((((-1631901508, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((t0.c0, t0.c1, t0.c0)))) BETWEEN (((t0.c2)%(t0.c2))) AND (t0.c0)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.5708630285151078 WHERE (((((t0.c0, t0.c1, t0.c1, '', t0.c1)) BETWEEN ((t0.c0, t0.c2, t0.c1, t0.c0, t0.c2)) AND ((t0.c1, t0.c0, t0.c1, t0.c0, t0.c1))))<<(NULL)); -- 0ms;
UPDATE t0 SET (c2)=('u,'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8857880102148716; -- 0ms;
UPDATE OR ABORT t0 SET c0=0Xffffffffa5986be0 WHERE IFNULL(CASE WHEN 193446475 THEN x'5413' END, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(x'', '-609026769'); -- 1ms;
UPDATE OR IGNORE t0 SET c2='S沸 \r'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0X42ba0ec) WHERE ((t0.c2) IS FALSE); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=('03'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE (- ((+ (t0.c0)))); -- 0ms;
UPDATE t0 SET c1=NULL WHERE CAST(NULL AS TEXT); -- 0ms;
UPDATE OR ABORT t0 SET c1=0.616619633355192 WHERE ((t0.c1)-(NULLIF(DISTINCT t0.c1, t0.c0))); -- 0ms;
UPDATE t0 SET c2='' WHERE CAST(((t0.c1) NOTNULL) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c2='865732869', c0=0.9670345923637161; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(-678275428); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0Xffffffff8549ea1e); -- 0ms;
UPDATE t0 SET (c2)=('\#-Yk}''h'); -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c2)=(NULL, NULL); -- 0ms;
UPDATE t0 SET (c0)=(0.9398551832567515) WHERE ((((NULL COLLATE NOCASE)AND(CAST('-54117247' AS REAL))))OR((((t0.c1, x'', t0.c2))>((t0.c1, t0.c1, t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.26478259437041507; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-297400969'; -- 0ms;
UPDATE t0 SET c2='-1040584360'; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL) WHERE (t0.c2 IN ((t0.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=('-484635534', NULL) WHERE (NOT (t0.c0 COLLATE BINARY)); -- 0ms;
UPDATE t0 SET c1=-1284380608; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c2='i8M㹶TEc(' WHERE (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END IN ((+ (t0.c0)))); -- 0ms;
UPDATE t0 SET (c0)=(0Xffffffffa3173b3b) WHERE ((((NULLIF(DISTINCT t0.c1, t0.c2))AND((NOT (t0.c0)))))AND(UNLIKELY(t0.c2))); -- 0ms;
UPDATE t0 SET (c0, c2)=('sL', x'65ed'); -- 0ms;
UPDATE t0 SET (c2)=(-1.80274818E8) WHERE HEX(DISTINCT ((t0.c1)OR(t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('-1880046174'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(0.24999364334190566, NULL) WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c1='&u' WHERE ((t0.c1)>=(t0.c0)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('0.5201060645882144'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.9306139926176313; -- 0ms;
UPDATE t0 SET c2=x'' WHERE (- (t0.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0X72783635 WHERE ((((t0.c1) IS FALSE))IS(CAST(t0.c0 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE ((((t0.c1)IS(t0.c0))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE (((t0.c1 COLLATE NOCASE))<=((CASE WHEN t0.c1 THEN 59892635 ELSE t0.c2 END))); -- 0ms;
UPDATE OR FAIL t0 SET c0=0.5110399496713726; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.7356997646227141 WHERE CAST(CAST(t0.c2 AS REAL) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE CAST((NOT (t0.c1)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.1850400101570241; -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(NULL, -1.836502326E9) WHERE (~ (LIKELY(t0.c2))); -- 0ms;
UPDATE OR FAIL t0 SET (c2, c0, c1)=('1811230404', NULL, 1767202074); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(-1298547862); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.26665170120696835); -- 0ms;
UPDATE t0 SET (c0, c0)=(0.48717984765841305, NULL) WHERE ((((t0.c0) NOT NULL))/(CASE t0.c1  WHEN t0.c2 THEN t0.c2 END)); -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE (((~ (t0.c2))) NOT BETWEEN (((t0.c1)&(t0.c2))) AND (((((t0.c0)OR(x'99ef')))AND(t0.c1)))); -- 0ms;
UPDATE t0 SET (c1, c1)=(0Xffffffffc8d7271e, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c2)=(3.24559642E8, -1301923219); -- 0ms;
UPDATE t0 SET c1=x'' WHERE (NOT (CASE x''  WHEN t0.c1 THEN NULL WHEN t0.c2 THEN t0.c1 WHEN 'tkI\r1N(Ux' THEN t0.c0 ELSE t0.c0 END)); -- 0ms;
UPDATE t0 SET c0='324559642' WHERE CASE (t0.c1 IN (t0.c2, t0.c1))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END THEN ('Yt' IN ()) WHEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (0.5748567637509636)) WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c1 COLLATE RTRIM END; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('M}R', NULL) WHERE CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))  WHEN ((t0.c1)GLOB(t0.c1)) THEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) ELSE t0.c2 COLLATE RTRIM END; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.1043065707396964, c0=0.1702067554038853 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))))>(((t0.c1 IN (t0.c1))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0x61a977fe); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.606961232525153); -- 0ms;
UPDATE t0 SET c1='ZZ&K+\rc,)'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.7781241682903387 WHERE (((((((((NOT (t0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))))OR(((t0.c1) NOTNULL))))OR((((t0.c2))>=((t0.c0))))))AND(t0.c2)); -- 0ms;
UPDATE OR REPLACE t0 SET c2=1705752605, c0=x'', c1='+.Tt\Q፷MO' WHERE ((((t0.c1) ISNULL))-((NOT (t0.c0)))); -- 0ms;
UPDATE t0 SET c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.9939086097026779) WHERE ((t0.c0) NOT BETWEEN (t0.c2) AND ('')) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.7548443252127366); -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c1)=('F鵎!ZTCV〄', -1.114950706E9); -- 0ms;
UPDATE t0 SET c0='-539131840' WHERE ((UNLIKELY(t0.c0))*(CASE t0.c0  WHEN t0.c1 THEN t0.c0 END)); -- 0ms;
UPDATE OR ABORT t0 SET c0='e4'; -- 0ms;
UPDATE t0 SET c2='1225161198', c0='o\rz*' WHERE CASE ((t0.c0)*(t0.c1))  WHEN (((t0.c0, t0.c1, t0.c0)) NOT BETWEEN (('V', t0.c0, t0.c0)) AND ((t0.c2, t0.c0, t0.c1))) THEN ((((((((t0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)) ELSE ((t0.c2)==(t0.c0)) END; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.5170040904314062 WHERE ('1391568540' COLLATE BINARY IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR ABORT t0 SET c0=x'ea15', c0=x'', c0=0.4095414952830849; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-771009174', c1=0.5748567637509636, c0=NULL WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.8667659222564575 WHERE TRIM(DISTINCT 0.3438604284000162); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-2100119309); -- 0ms;
UPDATE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('u'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1192242211', c1=x'e23b' WHERE ((((CAST(t0.c2 AS BLOB))AND(((t0.c0) NOT BETWEEN (0.5885459209795063) AND (t0.c0)))))OR(((t0.c0)%(t0.c2)))); -- 1ms;
UPDATE OR IGNORE t0 SET c2=x'dc0e', c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c1='', c2='-1040584360'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
UPDATE t0 SET (c1)=('-437581241'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=('') WHERE ((((t0.c0)||(t0.c0))) NOT BETWEEN (UPPER(t0.c1)) AND (t0.c0 COLLATE BINARY)); -- 1ms;
UPDATE t0 SET (c2, c1, c1)=(x'', 0xfffffffff541397e, 0xffffffffa9dbee68); -- 0ms;
UPDATE OR FAIL t0 SET c1='-1479148697', c1=0.7819036988475732 WHERE (((((t0.c0) IS TRUE)))<=((((t0.c0)<<(t0.c1))))); -- 0ms;
UPDATE t0 SET c2='sG(''hnu'; -- 0ms;
UPDATE OR IGNORE t0 SET c0='', c2='-2072961642'; -- 0ms;
UPDATE OR REPLACE t0 SET c2=x''; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c1)=(0x10eb0360, ''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE (((((((((('1093600924') IS FALSE))OR(t0.c1 COLLATE NOCASE)))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE '783716853' END)))AND(((((t0.c1)OR(t0.c1)))OR(t0.c0)))))AND(ABS(t0.c0))); -- 0ms;
UPDATE t0 SET (c2)=(0.7207205364906567) WHERE 0.05623620902658433; -- 0ms;
UPDATE t0 SET (c1)=(NULL); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=('-539131840'); -- 0ms;
UPDATE t0 SET (c2)=(NULL) WHERE CASE ((t0.c2) ISNULL)  WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN CASE WHEN -799562456 THEN t0.c2 WHEN t0.c0 THEN 0.2581023448282622 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE CAST(t0.c1 AS INTEGER) END; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0.181405649207651; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(x'', '-662996267'); -- 0ms;
UPDATE OR REPLACE t0 SET c1='v뮸奁{', c2='+FY&M^'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE (CAST(t0.c2 AS REAL) IN ()); -- 0ms;
UPDATE t0 SET (c1)=('-1960110509') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.010324885956719654) WHERE t0.c0; -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL, c0=x'6ca35c9d'; -- 0ms;
UPDATE t0 SET (c2)=(0.4236008758216241); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE (NOT ('324559642')); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(1.11455816E9); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE ((((t0.c2)<(t0.c1)))>(((((((((t0.c0)AND(t0.c2)))OR('')))AND(t0.c2)))AND(t0.c1)))); -- 0ms;
UPDATE OR FAIL t0 SET c1=x'b7e8b4a5' WHERE ((((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))IS(((t0.c2) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=('1225161198', -1823197555) WHERE ((((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))OR(t0.c1))) IS FALSE); -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c1, c1)=('-1935118183', 0x35ea97df, '51d4sI\B'); -- 0ms;
UPDATE OR FAIL t0 SET c1=''; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.15413554172237498 WHERE (((((t0.c2)OR(t0.c0)))AND(t0.c1)) IN ()); -- 0ms;
UPDATE t0 SET (c2, c2)=(NULL, '}Q') WHERE ((((t0.c0) BETWEEN (0.8687259167025746) AND (t0.c0)))-((~ (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-367073456'); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-510958216'; -- 0ms;
UPDATE t0 SET c2=NULL WHERE ((((((t0.c0)|(0X40aa4c59)))AND(0.5331949107357095)))AND(((0x7350fb7b)<=(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=1110097495; -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.0621375005910505 WHERE ((((t0.c2)||(t0.c2))) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) NOT NULL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(NULL, NULL) WHERE (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=('') WHERE CASE WHEN ((t0.c2)%('-1014334323')) THEN t0.c2 ELSE t0.c0 COLLATE NOCASE END; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE ((t0.c2 COLLATE BINARY) IS TRUE); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE ((((CAST(t0.c2 AS BLOB))OR('1098037048')))OR((NOT (t0.c1)))); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(0xe8f8cc8) WHERE (((~ (t0.c2)))<>((t0.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.8973067173479808); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(x'') WHERE ((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) NOT BETWEEN (((('xUF軥{r', t0.c0, t0.c2))<>((t0.c1, t0.c1, t0.c1)))) AND (x'02b3')); -- 0ms;
UPDATE t0 SET c1='Q,', c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0x61a977fe WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET c1=0.15290238475335838 WHERE (((t0.c1) ISNULL) IN (CAST(t0.c0 AS REAL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'', '0.5653373448372109') WHERE CASE ((t0.c0) IS FALSE)  WHEN CAST(t0.c1 AS INTEGER) THEN ((t0.c1)!=(t0.c2)) END; -- 1ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE (((t0.c0)) NOT BETWEEN ((((t0.c1) IS FALSE))) AND ((x'c111'))); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('-1410549046'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE CASE COALESCE(DISTINCT t0.c1, t0.c2)  WHEN (((t0.c1, t0.c0, NULL))<((t0.c1, t0.c1, t0.c2))) THEN (~ (t0.c1)) WHEN 'fGc쓃dYI' COLLATE NOCASE THEN (((t0.c1, t0.c2, t0.c1))<=((NULL, t0.c0, t0.c1))) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c2)>=(0.7997623568835517)) ELSE ((t0.c0) ISNULL) END; -- 0ms;
UPDATE t0 SET (c2, c2)=(x'', '0.5469135113312917') WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.17727143560087222 WHERE CASE ((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c1)))OR(t0.c0))  WHEN CAST(t0.c0 AS REAL) THEN SUBSTR(t0.c0, t0.c1) ELSE ((((((((t0.c0)AND(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(t0.c1)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c0=NULL WHERE CAST(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END AS REAL); -- 0ms;
UPDATE t0 SET c2=0.08037304491941843; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(x'89f2', 0.2750318585645096) WHERE DATETIME(t0.c0 COLLATE RTRIM, CAST(t0.c2 AS REAL), CAST(t0.c0 AS NUMERIC)); -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL, c2=NULL, c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-1995502651', c0='' WHERE ((t0.c0)==((t0.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.2100247847165212); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'a6b1e707') WHERE ((0.46034701515154697) IS TRUE) COLLATE RTRIM; -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(0.6451765538310603); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0xffffffffbbfec83e; -- 0ms;
UPDATE OR ABORT t0 SET (c1, c2, c1)=(-1461673501, 0xfffffffff96e7b85, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE ((t0.c2)OR(t0.c0)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-735167703' WHERE CASE WHEN t0.c1 THEN t0.c2 END COLLATE RTRIM; -- 0ms;
UPDATE t0 SET (c1, c2)=(x'', 0xffffffffc7f27755) WHERE ((t0.c2) IS TRUE); -- 0ms;
UPDATE OR FAIL t0 SET c0=0.6174767383635663, c1=NULL; -- 0ms;
UPDATE t0 SET (c0)=('-1303400980'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.34296251399331956 WHERE 'v\n&zR'; -- 0ms;
UPDATE t0 SET c2=0.8887307789106058 WHERE ((((t0.c1) ISNULL))>=(((t0.c0)<(t0.c0)))); -- 0ms;
UPDATE OR FAIL t0 SET c2=x'fd1f', c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=('', '>/x') WHERE ((~ (t0.c0)) IN ()); -- 1ms;
UPDATE OR IGNORE t0 SET c2='[!&.^QL]'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE OR ABORT t0 SET c1='呫9V[ G' WHERE UNICODE((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.24985518078085867) WHERE ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)))OR(t0.c0 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-550974923'); -- 0ms;
UPDATE t0 SET c0='PQZX[S', c0=x'', c2='0.01998030878517887'; -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE t0.c1; -- 0ms;
UPDATE t0 SET (c0, c2, c0)=(NULL, NULL, 0.7522241700530299); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=('514746981'); -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE OR ABORT t0 SET c0='~fQ}8a', c1='z', c2=x'' WHERE ((((((t0.c0)AND(t0.c0)))OR(NULL)))LIKE(((t0.c2) IS TRUE))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=('0.4168520666638088', x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE ((((ABS(t0.c1))OR(((((t0.c0)AND(t0.c2)))OR(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=x''; -- 1ms;
UPDATE t0 SET (c2)=(x'6101'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('', 0.7328422644302108); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('AGb꘧&') WHERE ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN (t0.c2)))))AND((t0.c0 IN ()))))OR(((t0.c1)>>(t0.c2)))))AND((~ (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.2712782429174554); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.2302662340268118, c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE ((+ (t0.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(x'', 1900823478); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c1, c1)=(NULL, 0xffffffffd802ae6d, x'') WHERE ((NOT (t0.c0)) IN ()); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c1, c0)=('ZZ', '', 0x4b336c56); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(x'a430') WHERE ((((((((((t0.c1)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))/((((t0.c1, t0.c0, t0.c2))<>((t0.c1, t0.c1, t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-331131346'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('c\P2ldN', NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1, c2)=(x'', 0.21668470555537733) WHERE CAST((t0.c2 IN ()) AS REAL); -- 0ms;
UPDATE OR REPLACE t0 SET c0='-1917913239'; -- 0ms;
UPDATE OR IGNORE t0 SET c1='1488067450'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1631901508'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(0.06041836160834568, x'6a79') WHERE (((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c2)||(t0.c0)))); -- 0ms;
UPDATE OR FAIL t0 SET c2=NULL; -- 1ms;
UPDATE t0 SET (c1)=(0.6517922275061591); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'9893'); -- 1ms;
UPDATE t0 SET (c0, c1)=(0.9030439831815393, 'DrfM\oX') WHERE t0.c0 COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0.29641307683688833 WHERE CAST((t0.c1 IN ()) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET c0=1.934687099E9; -- 0ms;
UPDATE OR IGNORE t0 SET c2='', c0='-514040099', c2='1735801235'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('		'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=(-9.40411051E8, x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('u|	P6+k㰙') WHERE (t0.c0 COLLATE BINARY IN (t0.c2 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-0.0 WHERE CASE WHEN t0.c0 THEN CASE 0.5007682342859131  WHEN t0.c2 THEN t0.c2 WHEN 0xffffffff94f5a3f7 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END ELSE ((t0.c1) ISNULL) END; -- 0ms;
UPDATE t0 SET (c0)=(0xfffffffffbcb602c); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-3.31131346E8; -- 0ms;
UPDATE t0 SET (c2)=(x''); -- 0ms;
UPDATE t0 SET c0=x'', c1=x'', c2=x'' WHERE (+ (t0.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE (- (((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))); -- 0ms;
UPDATE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.024139803763081558); -- 0ms;
UPDATE OR REPLACE t0 SET c1='-1368246543' WHERE (((((+ (t0.c0)))AND(t0.c2)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))); -- 0ms;
UPDATE t0 SET (c0, c1)=(0.5722883063641105, 'kkpD墢}1') WHERE ((t0.c0 COLLATE RTRIM)>((0.4070631705724743 IN ()))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.8796175917631673, c1='&' WHERE CAST((t0.c2 IN ()) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE CASE WHEN CAST(NULL AS INTEGER) THEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))) ELSE (t0.c2 IN (t0.c2, t0.c0)) END; -- 0ms;
UPDATE OR ABORT t0 SET c1='567543258' WHERE (+ (((((t0.c0)AND(t0.c0)))AND(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='' WHERE ((((t0.c1)>(t0.c0))) ISNULL); -- 1ms;
UPDATE OR IGNORE t0 SET c0=0.47850235051951384 WHERE ((((((((((t0.c0) IS FALSE))OR((((t0.c0)) NOT BETWEEN ((t0.c1)) AND (('269937139'))))))OR(((((t0.c1)OR(t0.c2)))AND(t0.c0)))))OR(t0.c0 COLLATE NOCASE)))AND(CASE WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(NULL) WHERE ((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)>>((+ (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.6791515066294214 WHERE (((t0.c1, NULL, t0.c2)) NOT BETWEEN ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)), t0.c2 COLLATE BINARY, (t0.c2 IN (t0.c0)))) AND ((('wb' IN (t0.c0)), ((x'')>>(0.37277404089024346)), CASE WHEN t0.c0 THEN t0.c0 END))); -- 0ms;
UPDATE t0 SET (c2)=(2061483653); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(x'', '嵈{', 0.5885459209795063) WHERE (((t0.c0 COLLATE BINARY, ((t0.c1) NOTNULL), t0.c0))>(((~ (t0.c2)), CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END, (t0.c1 IN ())))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('0.4242959161417844') WHERE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c2)<<(t0.c2)), ((t0.c1) IS TRUE), (~ (t0.c0)))) AND ((CASE t0.c0  WHEN t0.c1 THEN 0.13744275503570624 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN '' END, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END, t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c2='DJ)\KI|N', c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE (((UNLIKELY(DISTINCT 881366376)))<>((t0.c0 COLLATE NOCASE))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(1.39156854E9, NULL); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(0.5918082275484278); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(0Xffffffffba712794); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE CASE WHEN CAST(NULL AS BLOB) THEN ((t0.c2) IS TRUE) END; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.4986625620514791 WHERE CASE WHEN t0.c2 THEN ((t0.c1)-(t0.c2)) WHEN CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE 0.16152043287309847 END THEN ((t0.c2) ISNULL) WHEN t0.c2 THEN ((t0.c1)<<(t0.c1)) ELSE TOTAL_CHANGES() END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE ((CAST(t0.c1 AS NUMERIC)) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE CASE WHEN ((t0.c2)<=(x'ad3b')) THEN (((0.0689890329562014)) NOT BETWEEN ((t0.c0)) AND ((NULL))) ELSE CAST(t0.c0 AS REAL) END; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.8074929209361446, c2=x'' WHERE (+ (t0.c0)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8559704767693461 WHERE t0.c0 COLLATE NOCASE; -- 1ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET (c1)=('-1890296240'); -- 0ms;
UPDATE t0 SET (c1)=(0.02158067977075606); -- 0ms;
UPDATE OR ABORT t0 SET c2=NULL, c0=NULL, c2='.' WHERE ((t0.c1 COLLATE RTRIM)<(CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)); -- 0ms;
UPDATE t0 SET (c0, c1, c0)=(0x7939b17, '1372244178', x'1aa8de39c564') WHERE LIKELIHOOD((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c1)) AND (('1916832876', t0.c0, t0.c2))), 0.7127848401443438); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.08848926854428774 WHERE CAST(CAST(t0.c2 AS NUMERIC) AS INTEGER); -- 0ms;
UPDATE t0 SET c0='-1022008187', c1=x'', c0=0.8643459738317325; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, NULL) WHERE ((((0.38490970475676545)OR(t0.c1)))AND(t0.c1)) COLLATE BINARY; -- 0ms;
UPDATE t0 SET c0=0.4143949869242467, c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE CAST(t0.c2 AS BLOB) COLLATE BINARY; -- 0ms;
UPDATE t0 SET (c0, c1)=(0.7360943616987001, NULL) WHERE RTRIM(((t0.c1) IS TRUE)); -- 0ms;
UPDATE t0 SET (c2)=(-1595995787); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'b807'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET (c0, c2)=(x'', 0xffffffff8a33bff4) WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.5748567637509636, c2=0.6345651483476776, c2=0xfffffffff9e3bf61; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c1, c2)=(x'', x'') WHERE ((((((t0.c2)OR(t0.c2)))OR(t0.c2))) IS FALSE); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(0.6430192908865641) WHERE UPPER(t0.c1 COLLATE RTRIM); -- 0ms;
UPDATE OR IGNORE t0 SET c1='1619504165'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('-1995502651'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(0Xffffffffc7f27755, 0X4a1402ee) WHERE t0.c1; -- 0ms;
UPDATE t0 SET (c0, c2)=(-1.146424808E9, NULL) WHERE ((((UPPER(t0.c0))OR(((t0.c1)|(t0.c0)))))AND((NOT (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0X30a248c8; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(x'a7dc', x'') WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), t0.c1))>=(('0.5748567637509636', t0.c0 COLLATE BINARY, (~ (t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('567543258'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(x'ab45925a', NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c0)=('906399973', x'') WHERE NULL COLLATE NOCASE; -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c1, c0)=('', '-1321047149', 0.5471739502701344) WHERE CAST((- (t0.c0)) AS NUMERIC); -- 0ms;
UPDATE t0 SET (c1)=(0.13111631834525395); -- 0ms;
UPDATE t0 SET c0=NULL WHERE ((((((t0.c0)GLOB(t0.c2)))AND(((t0.c1)AND(0.06405455499294621)))))OR(((((((((((((t0.c0)OR(t0.c2)))AND(t0.c0)))OR(t0.c2)))OR(t0.c0)))AND(t0.c0)))OR(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.3894370222367901; -- 1ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE NULL; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.7733406167893583) WHERE LOWER(DISTINCT (((t0.c2))==((t0.c2)))); -- 0ms;
UPDATE t0 SET (c2, c1, c2)=(NULL, 0x72783635, '1691883413'); -- 0ms;
UPDATE t0 SET c0=0.5902272921424413, c2=x'', c1='-1836411305'; -- 0ms;
UPDATE OR ABORT t0 SET c1=0.06681400003220583; -- 0ms;
UPDATE t0 SET (c0)=(x'') WHERE (NOT (((t0.c2) IS TRUE))); -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c1))))<((t0.c0 COLLATE NOCASE))); -- 0ms;
UPDATE t0 SET c1='-1415191751' WHERE CAST(CAST(t0.c1 AS NUMERIC) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE ((((0.5110944999392161)LIKE(t0.c0)))!=(((t0.c2) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.8807097998920339) WHERE ((((((t0.c2)OR(t0.c1)))OR(t0.c0)))*(((x'1c69') NOTNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='(G[m+z' WHERE ((t0.c0 COLLATE NOCASE)/((NOT (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0, c2)=(NULL, NULL, x'') WHERE (((t0.c1 IN ())) NOT NULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c1, c0)=('', x'', NULL) WHERE (((- (t0.c1)))*(((t0.c2)|(t0.c1)))); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(x'') WHERE 'FALSE'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('1-500000') WHERE (t0.c2 COLLATE NOCASE IN (((t0.c0) NOT NULL), t0.c1 COLLATE RTRIM, (((t0.c2, t0.c0, t0.c2)) NOT BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((t0.c2, t0.c0, t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=('B	鉔Z', x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-17023664'; -- 0ms;
UPDATE OR REPLACE t0 SET c0=-5.13012697E8 WHERE CASE WHEN t0.c2 THEN (NOT (t0.c0)) END; -- 0ms;
UPDATE OR FAIL t0 SET c2=NULL, c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2='1421664618'; -- 0ms;
UPDATE OR ABORT t0 SET c2=x''; -- 0ms;
UPDATE t0 SET c1=NULL WHERE t0.c2; -- 1ms;
UPDATE OR ABORT t0 SET (c2, c0)=(x'8273', 'ⳔL\n') WHERE ('fm5TC{l' IN ()); -- 0ms;
UPDATE t0 SET (c0)=('-130338938'); -- 0ms;
UPDATE t0 SET c2=NULL, c2=NULL WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1681057059'); -- 0ms;
UPDATE OR REPLACE t0 SET c2='-1145872148'; -- 0ms;
UPDATE t0 SET c1=-679568385, c2='1158869763' WHERE NULLIF(((t0.c1) ISNULL), CASE WHEN t0.c0 THEN t0.c0 END); -- 0ms;
UPDATE t0 SET c1=0.9534310086299521 WHERE ((t0.c2) NOTNULL) COLLATE BINARY COLLATE RTRIM; -- 1ms;
UPDATE OR ABORT t0 SET (c1, c2, c2)=(x'7c70', NULL, NULL); -- 0ms;
UPDATE OR ABORT t0 SET c2='-54117247'; -- 0ms;
UPDATE OR FAIL t0 SET c2=0x465331a4; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE ((~ (t0.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(0.25478826379934616, x'') WHERE (~ ((((t0.c1))<((t0.c2))))); -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL, c2=NULL; -- 0ms;
UPDATE t0 SET c2=516279518; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.5208421147272586; -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE INSTR((t0.c0 IN ()), ((t0.c1) NOT NULL)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-1617389518'); -- 0ms;
UPDATE t0 SET (c2)=('-670912915'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.927694725421975, c2=x'1334' WHERE ((CASE WHEN t0.c2 THEN t0.c0 ELSE 0.8690125296887352 END)>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
UPDATE t0 SET c2='-670912915' WHERE ((SQLITE_COMPILEOPTION_USED(t0.c2)) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=(NULL, '-1214968610'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(0.1539776042462755, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.9086686358383638) WHERE (((((x'')OR(t0.c2)))AND(t0.c0)) IN (((((t0.c2)OR(t0.c1)))OR(t0.c2)), ((t0.c1)>>(NULL)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE ((UPPER(DISTINCT t0.c1)) NOT BETWEEN (t0.c0) AND ((NOT (t0.c2)))); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(0X2e54b9ed); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-705484214') WHERE (NOT (x'')); -- 0ms;
UPDATE OR FAIL t0 SET c1=0.09340591445238311 WHERE (((((~ (t0.c2)))OR(t0.c1)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
UPDATE OR REPLACE t0 SET c2=1616309583 WHERE (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL); -- 0ms;
UPDATE t0 SET (c1)=(0.9724274399087426); -- 0ms;
UPDATE OR IGNORE t0 SET c2='LOSo0Nm('; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('*p~L') WHERE t0.c1; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=x'' WHERE UPPER(SQLITE_SOURCE_ID()); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE json_type((- (t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-791763594', c0='1096495108', c0=')W' WHERE CASE WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) WHEN UPPER(t0.c2) THEN -1669444805 WHEN CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN (+ (t0.c1)) ELSE t0.c0 COLLATE NOCASE END; -- 1ms;
UPDATE t0 SET c0='5', c2=0.20002578167635643 WHERE SUBSTR(((t0.c1)||(t0.c1)), (0.8301633911893204 IN (t0.c0, x''))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='33635372' WHERE ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (x'') AND (x'')); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(-1856202170) WHERE CAST(t0.c0 AS NUMERIC) COLLATE BINARY; -- 0ms;
UPDATE OR ABORT t0 SET c1=-1.114950706E9; -- 0ms;
UPDATE OR IGNORE t0 SET c1=''; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c0='-890727162', c1=x'' WHERE (((t0.c1 IN (t0.c1)))IS(((t0.c0)/(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=-684045950; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c1=NULL, c1=0.7216752353585186; -- 0ms;
UPDATE OR FAIL t0 SET c1='1171383042', c0=7.26370667E8, c0='-297400969' WHERE ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (t0.c1) AND (((((t0.c1)AND(t0.c1)))OR(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1, c1)=(NULL, NULL, '1934687099'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE t0 SET c2=-105925907 WHERE (- (((t0.c0) ISNULL))); -- 0ms;
UPDATE t0 SET (c0, c0)=(x'', '') WHERE CASE WHEN (~ (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN (t0.c0 IN ()) THEN (((t0.c0, t0.c2, t0.c0))=((t0.c2, t0.c1, t0.c0))) WHEN ((t0.c2) ISNULL) THEN ((((((((((((t0.c2)AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(t0.c1)) ELSE (- (t0.c1)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c1='9223372036854775807' WHERE CAST(((((t0.c2)OR(t0.c0)))OR(t0.c2)) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.6776304277961368 WHERE 'A黺क\rꯔNR'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.28655430983121677, c0='438941718'; -- 0ms;
UPDATE t0 SET c2=x'938f190d', c2='777304557' WHERE ((((((((x'')OR(CAST(t0.c2 AS REAL))))OR(CAST(t0.c0 AS INTEGER))))AND((((t0.c0))==((t0.c0))))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-42697990') WHERE ((((((((((((((x'')IS(t0.c0)))OR(((t0.c1)&(t0.c2)))))AND((t0.c1 IN ()))))AND(LTRIM(t0.c2, t0.c1))))AND((((t0.c2))>((t0.c1))))))AND(((t0.c0)||(t0.c2)))))OR(0X72408c6c)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(-6.62996267E8) WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0Xffffffffe4d16bf8, c1=x'' WHERE LIKELIHOOD((t0.c2 IN ()), 0.716660096112643); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.3339013360130245 WHERE (((t0.c2, t0.c0, 0.3656988781987054)) BETWEEN ((((t0.c0)IS(t0.c1)), CAST(t0.c1 AS TEXT), (NOT (t0.c1)))) AND (((+ (t0.c0)), ((t0.c2)>=(0.6697101996830744)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c2))))); -- 0ms;
UPDATE t0 SET c2=1.916832876E9 WHERE (((((t0.c1, t0.c1, 0.37545240788374856))>=((t0.c0, t0.c2, t0.c2)))) NOT NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0='-715157977', c0=0.7397270576741481, c1='1554312578'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(0.1838402846995053, NULL); -- 0ms;
UPDATE t0 SET c1='yVoR&)ネsj'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE OR FAIL t0 SET c0=x'' WHERE x''; -- 0ms;
UPDATE OR ABORT t0 SET c2=-829006283; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c0)=(NULL, '', NULL) WHERE ''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'6afd') WHERE CAST(((t0.c0) NOT BETWEEN (x'') AND (t0.c2)) AS INTEGER); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0xffffffff8e188399, c2='-519776712'; -- 0ms;
UPDATE OR FAIL t0 SET c2='-1558758597'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0xfffffffffcfab129); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET c2=-416622296 WHERE CASE (NOT (t0.c0))  WHEN '-1879540459' THEN t0.c1 COLLATE RTRIM WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN ((t0.c0) IS TRUE) WHEN json_quote(t0.c1) THEN ((t0.c0)%(0.3464065762637698)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(0.7534034888048601, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('207114343') WHERE ((((t0.c0) IS TRUE))LIKE(CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN 0.6308192549520422 END)); -- 0ms;
UPDATE t0 SET c1='d/G/ﭧ', c2=NULL; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=('1114558160') WHERE (- (t0.c0)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=('0.46320058383705986', '1885370711') WHERE ((~ (t0.c1)) IN ()); -- 0ms;
UPDATE t0 SET (c0)=('|Y~?r'); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('438941718'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='0.01998030878517887', c1=x'd02a9c46'; -- 0ms;
UPDATE t0 SET (c2, c2)=(x'', '973683166'); -- 0ms;
UPDATE OR FAIL t0 SET c2='	6ItIꚜdU', c2=-1514193490, c2='ᨐd|H'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE UPPER(DISTINCT ((t0.c1) ISNULL)); -- 0ms;
UPDATE t0 SET c2=0Xffffffffa62722db WHERE CAST(((t0.c1)GLOB(t0.c0)) AS INTEGER); -- 0ms;
UPDATE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(NULL, 'b*4L}*㘵劰3'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'0182f349') WHERE CASE WHEN ((-359597764)|(t0.c2)) THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c0)AND(t0.c2)) THEN ((t0.c0)GLOB(t0.c0)) WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN t0.c2 WHEN ((t0.c1) IS TRUE) THEN CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END WHEN ((NULL) BETWEEN ('C') AND (t0.c0)) THEN (t0.c1 IN ()) ELSE ((0.5827631678768741)GLOB(0.2742739352774165)) END; -- 0ms;
UPDATE OR ABORT t0 SET c2=x'5795' WHERE (((t0.c2) NOT NULL) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'', c2=NULL, c2=-1.823197555E9 WHERE '77115528'; -- 0ms;
UPDATE t0 SET c2=NULL WHERE ((((t0.c2)IS NOT(t0.c0)))/(((t0.c0) IS FALSE))); -- 0ms;
UPDATE t0 SET c0=NULL, c0='' WHERE (((+ (t0.c1))) BETWEEN (((t0.c0) NOT BETWEEN (-5.13012697E8) AND (NULL))) AND (((((t0.c2)OR(NULL)))OR(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2='' WHERE (((t0.c2 COLLATE BINARY))==(((~ (t0.c2))))); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(0.5855639227968029); -- 0ms;
UPDATE OR IGNORE t0 SET c0='434903898' WHERE (((((NOT ('538174911')))AND(((t0.c1)IS NOT(t0.c1)))))OR((((t0.c2))<((t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c2)=('-1415191751', 0X77d1bfb1); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE ((0Xffffffffe70a6b3a)=(t0.c0)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c2='59\jHuT' WHERE 510606953; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=('', NULL); -- 0ms;
UPDATE t0 SET (c1)=(''); -- 0ms;
UPDATE OR FAIL t0 SET c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.5977618054250098, c2='+/7x{#&]w', c0='-199470500' WHERE (NOT ((('C,\')==(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE (+ (CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=1315156074 WHERE CAST(t0.c1 AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(0X784709f4, '-1238802450') WHERE ((((t0.c0)AND((('EN[0BX4') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND (('0.0'))))); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(0.5257327787285575); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(' lCJv', 325680043) WHERE CASE t0.c1  WHEN ((t0.c2)>=(t0.c2)) THEN 0.32446883814487126 ELSE ((((((((t0.c1)OR(t0.c1)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END; -- 0ms;
UPDATE OR ABORT t0 SET c1='LZ', c1='658266957'; -- 0ms;
UPDATE OR ABORT t0 SET (c2, c2)=(NULL, 0.9897028427925358) WHERE ((t0.c1)-(t0.c0)) COLLATE BINARY; -- 0ms;
UPDATE t0 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE (- (t0.c2)) COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t0 SET c1=0Xffffffff998cea80 WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=('', '0.2879726393332832'); -- 0ms;
UPDATE t0 SET (c0)=(1.691883413E9); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.3282735383834685) WHERE (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (t0.c1) AND ((t0.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE 0X67d7838; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE CAST(CASE t0.c1  WHEN t0.c1 THEN t0.c2 END AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE CASE WHEN ((t0.c2)*(t0.c0)) THEN ((t0.c0)AND(t0.c1)) ELSE ((t0.c0)GLOB(t0.c1)) END; -- 0ms;
UPDATE t0 SET c1='[A'; -- 0ms;
UPDATE t0 SET (c0)=(x'') WHERE (+ (((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'47a2', c0=x'' WHERE CAST(CAST(t0.c0 AS REAL) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET c2='926630186' WHERE (t0.c1 IN ()); -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c0)=('-Ek)<-6^^', x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1, c1)=(0X6aebe007, -98944889, '1237074734'); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, '+N Q\n?'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0='!˫' WHERE ((((t0.c1)>=(t0.c0)))IS(((((((((((((t0.c2)OR(t0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))AND(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE (((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1)))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))); -- 0ms;
UPDATE t0 SET c0=0.8840039884495695 WHERE (((((t0.c1 IN ()))OR((t0.c1 IN (t0.c1)))))OR((- (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(NULL, 'u釻') WHERE HEX(DISTINCT 'Sb'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.6756321347488073) WHERE ((((t0.c1)OR(t0.c2)))OR(t0.c2)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c1='bQlZ4', c0=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(x'') WHERE (~ (((t0.c1)LIKE(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.9374574759620672, c0=x'1342'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.590141656283973; -- 0ms;
UPDATE t0 SET (c0)=(0.9203169691329366) WHERE CASE NULL  WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN t0.c2 ELSE (- (t0.c1)) END; -- 0ms;
UPDATE t0 SET (c2)=(''); -- 0ms;
UPDATE OR REPLACE t0 SET c1=0x2d92c045 WHERE ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (0.919594899326069) AND ((+ (t0.c0)))); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=('-910095613'); -- 0ms;
UPDATE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE (~ (t0.c2)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
UPDATE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE CAST((- (t0.c0)) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-160789934'); -- 0ms;
UPDATE t0 SET (c1)=(0.43843456471457976); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c2, c2)=(0.15413554172237498, '8SsXfr竕', ''); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-598097970'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=64556968, c2=1.262305631E9 WHERE (+ (NULL)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'', c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-1873174397) WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) IN (t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET c0=0Xffffffffa6c88a4b WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8323207273080215; -- 0ms;
UPDATE t0 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-745537756'; -- 1ms;
UPDATE OR IGNORE t0 SET c2=NULL, c0=0.3456190948746346, c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('i*K[') WHERE ((t0.c1)>(-1686087630)) COLLATE RTRIM; -- 0ms;
UPDATE t0 SET (c1)=(x'') WHERE ((CAST(t0.c2 AS REAL)) ISNULL); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(x'') WHERE (((((t0.c2))<((t0.c2)))) NOT NULL); -- 0ms;
UPDATE t0 SET c1=-1.785959493E9; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 1ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=1358235998, c1=x'' WHERE CASE CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END  WHEN ((((t0.c2)OR(t0.c0)))AND(t0.c0)) THEN ((((((((t0.c0)AND(t0.c2)))OR(t0.c1)))OR(0.30305870980584826)))OR(t0.c0)) END; -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL WHERE UPPER(DISTINCT (t0.c0 IN ())); -- 0ms;
UPDATE t0 SET (c2, c2, c2)=('-1238802450', 'mV', NULL) WHERE ((CASE t0.c1  WHEN t0.c2 THEN NULL END) NOT BETWEEN ((- (t0.c1))) AND (RTRIM(t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE CASE CAST(t0.c2 AS TEXT)  WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) ELSE ((t0.c1)<=(t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET c2=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(x'c49a') WHERE CASE WHEN ((t0.c0) ISNULL) THEN 0.37369394243933995 ELSE (t0.c0 IN ()) END; -- 0ms;
UPDATE OR REPLACE t0 SET c2=9.04566751E8, c0=x'', c1=3.24559642E8; -- 1ms;
UPDATE OR FAIL t0 SET (c2)=(0X78c96205) WHERE (((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE RTRIM; -- 1ms;
UPDATE OR IGNORE t0 SET c1='0.12329133669087833' WHERE (+ ('0.9479876873293223')); -- 0ms;
UPDATE OR REPLACE t0 SET c1='' WHERE ((CASE WHEN t0.c0 THEN t0.c2 END) BETWEEN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) AND (((t0.c2)LIKE(t0.c0)))); -- 0ms;
UPDATE t0 SET c1=NULL WHERE ((((((((((((((((t0.c2)OR(t0.c1)))OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(((t0.c2) IS TRUE))))AND((((t0.c2)) NOT BETWEEN (('455974699')) AND ((t0.c0))))))AND(((((t0.c1)OR(t0.c2)))OR(t0.c0)))))AND((t0.c2 IN ()))); -- 0ms;
UPDATE OR ABORT t0 SET c0=0Xffffffffc96dcaf7; -- 0ms;
UPDATE t0 SET (c2)=(0.9427481790394372) WHERE ((((NULL) NOTNULL))%((((t0.c0))<=((t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('0!8G NF''v', 0Xffffffff8a2b087b); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(0.4556311900474427, NULL); -- 0ms;
UPDATE OR FAIL t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c2=x'4fb2' WHERE ((0.8898659433085596) IS TRUE); -- 0ms;
UPDATE t0 SET (c2)=(NULL) WHERE (~ ('刁!UtI')) COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t0 SET c1='', c0=x'c150' WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE (t0.c0 IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c2=NULL, c0='1968205316'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.6909882936269323, c0='u^밸'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=']շJ%._C' WHERE ((((t0.c0) NOT BETWEEN (t0.c2) AND ('0.1735650463080366')))OR((- (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2, c2)=('-677305030', 0.5440222192249271, 'eV㹌') WHERE json_array((- (t0.c0)), '0.43589143795882646'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('2009581171'); -- 0ms;
UPDATE t0 SET c1=0Xffffffffc4dee7f8 WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('-1631901508') WHERE ((((t0.c1)>=(t0.c2))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(x'2cd1', x'98a5') WHERE CASE WHEN (((0.43456742760514855)) BETWEEN ((t0.c0)) AND ((t0.c1))) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c2)) WHEN ((((((((NULL)AND(t0.c1)))OR(t0.c2)))AND(t0.c2)))AND(NULL)) THEN (((t0.c2))==((t0.c0))) WHEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c2)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) END; -- 0ms;
UPDATE t0 SET c1=x'' WHERE ((((((t0.c0)OR(t0.c2)))OR((t0.c1 IN ()))))AND(((t0.c0)IS(t0.c2)))); -- 0ms;
UPDATE t0 SET (c0, c1, c0)=(0.21321389543362046, '0.42106112531352813', x'229261e4') WHERE (((t0.c0)) BETWEEN ((((((t0.c1)AND(t0.c0)))AND(t0.c2)))) AND (((NOT (t0.c1))))); -- 0ms;
UPDATE t0 SET (c2, c1)=(0.952931544260521, '') WHERE (NOT (CASE WHEN t0.c1 THEN t0.c2 END)); -- 0ms;
UPDATE t0 SET c1=x'', c0='', c0=NULL WHERE ((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END)AND('-571770812')))AND(x'43de')); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=('p㧐') WHERE ((t0.c1) ISNULL) COLLATE NOCASE; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(0.9450014409360171) WHERE ((((t0.c0)&(t0.c2)))>((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-793617265' WHERE CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=-418747590; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE t0 SET c0=0.022800314770167196; -- 0ms;
UPDATE t0 SET (c0, c0)=('', '-1956585592') WHERE (((t0.c2 IN ()))||((((t0.c2))>((t0.c2))))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(x'0c0f') WHERE (NOT (-5.3913184E8)); -- 0ms;
UPDATE OR IGNORE t0 SET c0='', c1=x'c510', c1=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(-1415191751); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(''); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.7366950024760894; -- 0ms;
UPDATE OR IGNORE t0 SET c1='	<J96-mO', c1=''; -- 0ms;
UPDATE OR ABORT t0 SET c1=x'', c2=x''; -- 0ms;
UPDATE t0 SET c0=NULL WHERE ((x'febe7d85') IS TRUE); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(NULL) WHERE ((((t0.c1) NOTNULL))LIKE(((((t0.c2)AND(t0.c2)))OR(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE CAST((((t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c0)) AND ((t0.c2, t0.c2, t0.c1))) AS TEXT); -- 0ms;
UPDATE t0 SET c0=NULL, c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('\nh', NULL); -- 1ms;
UPDATE t0 SET (c0)=(x'3768'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='fn℗' WHERE ((((((((((t0.c1)!=(t0.c0)))AND(t0.c0)))OR(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))))OR('1114558160')))OR((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((UNICODE(t0.c0)) NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (((t0.c0)-(x'')))); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c0, c2)=(NULL, '-1479148697', '-1558405462') WHERE (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (CAST(t0.c2 AS BLOB)) AND (json_array_length(t0.c2, t0.c1))); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.808966772936214) WHERE LIKELIHOOD(((((t0.c0)AND(t0.c0)))OR(t0.c1)), 0.40229706312864555); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(NULL, 0.8785766612245893) WHERE t0.c1 COLLATE BINARY; -- 1ms;
UPDATE OR IGNORE t0 SET c2=NULL, c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE ((CAST(t0.c0 AS BLOB)) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c0 END) AND ((((t0.c0, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, NULL)) AND ((t0.c0, t0.c2, t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c2)=(0.7772849830635359, -1823332600, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('xWOpd') WHERE ((((t0.c0)&(t0.c0))) BETWEEN (((t0.c0)/(t0.c1))) AND (t0.c0)); -- 0ms;
UPDATE t0 SET (c0, c2, c2, c1)=('', '672648567', NULL, 'FN℗') WHERE (((((t0.c0))>=((t0.c1)))) BETWEEN (((t0.c2)!=(t0.c2))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))OR(t0.c1)))OR(0.03598533127737091)))); -- 0ms;
UPDATE t0 SET c2='' WHERE (((((~ (t0.c0)))OR(((t0.c0) NOTNULL))))AND(((t0.c1) ISNULL))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=x'' WHERE JULIANDAY(t0.c0, t0.c0 COLLATE BINARY, CAST(t0.c2 AS BLOB), ((((t0.c0)OR(t0.c2)))OR(t0.c1)), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE (TYPEOF(DISTINCT t0.c0) IN ()); -- 0ms;
UPDATE t0 SET (c2)=(-1146424808); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-1565187777' WHERE ((((NULL)<(t0.c2))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('269937139') WHERE t0.c2; -- 0ms;
UPDATE OR ABORT t0 SET c0=0.0347270252587738, c2=0.3802831666402937, c1='-359597764'; -- 0ms;
UPDATE t0 SET (c1)=(0.20615164286481047) WHERE CASE ((((t0.c2)AND(t0.c0)))AND(t0.c2))  WHEN '67556756' THEN t0.c1 COLLATE RTRIM END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.18275413191299694, c1=0.6305440579488568; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.2762582459579377); -- 0ms;
UPDATE OR FAIL t0 SET c2='-528170997'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE OR ABORT t0 SET (c0, c0)=(NULL, 0.2586513649495834); -- 0ms;
UPDATE t0 SET (c1)=(x'a73b') WHERE (('')AND((NOT (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) THEN t0.c1 ELSE ((t0.c1) NOT BETWEEN (t0.c0) AND (-631011912)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c2='1)GK' WHERE (('V剅W') IS FALSE); -- 0ms;
UPDATE t0 SET (c0)=('#&4uh3韟'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=1.41359323E9 WHERE CAST(((t0.c1)GLOB(t0.c1)) AS TEXT); -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE 0.011033519809560577; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(0.8401643940819903, NULL) WHERE CAST((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET c2='1135759157'; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1='0.5653373448372109' WHERE (((t0.c1)) BETWEEN ((TRIM(DISTINCT t0.c0, t0.c1))) AND ((((((((((t0.c2)OR(t0.c1)))OR(t0.c0)))OR(x'')))OR(t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE (t0.c0 COLLATE NOCASE IN ()); -- 0ms;
UPDATE OR ABORT t0 SET c0=')m', c1=x'a252', c1=0X50b659d4; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c1=x'', c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('g-') WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'2307'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.5752793824138386; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(-1488840326) WHERE UNLIKELY((NOT (t0.c1))); -- 0ms;
UPDATE OR ABORT t0 SET c0=-1221798879; -- 0ms;
UPDATE t0 SET c1=NULL, c0=NULL WHERE CASE 'qT' COLLATE NOCASE  WHEN ((NULL)||(t0.c1)) THEN '-1836411305' END; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='0b뾙94Gѡv' WHERE ((COALESCE('0.8445492867207995', t0.c2)) NOT NULL); -- 0ms;
UPDATE t0 SET (c2)=('1^YnlEw') WHERE ((t0.c2 COLLATE BINARY) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-4.97272368E8 WHERE CASE ((t0.c1)>=(t0.c1))  WHEN ((((t0.c0)AND(t0.c1)))OR(t0.c0)) THEN NULL END; -- 1ms;
UPDATE t0 SET (c1, c0)=(NULL, 0x261eac04); -- 0ms;
UPDATE t0 SET (c0, c1)=(0X7f8e45ed, 0.36376812552204885) WHERE ((('-1123992993' IN ()))<>(CAST(t0.c0 AS REAL))); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(x'') WHERE (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))IS NOT(t0.c2 COLLATE RTRIM)); -- 0ms;
UPDATE t0 SET (c2, c2)=(x'', '%\S'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-395028372' WHERE ((x'3373') NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c1) NOT NULL))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2, c2, c0)=(-6.79568385E8, '', 0.5007682342859131, 1223942540) WHERE ((t0.c0)*(((((t0.c0)OR(t0.c2)))AND(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-1243058545, c0=x'' WHERE (((((t0.c1))<((t0.c2))))<=(((t0.c0)>>(t0.c1)))); -- 0ms;
UPDATE OR ABORT t0 SET c1=0x7427e8ec, c0=1.619576003E9; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR FAIL t0 SET c2=0.3359424940147163, c0=NULL, c2=x'836e' WHERE ((((((((NULL)OR(t0.c1)))OR('／W|Q8௅M^')))OR(((t0.c0) BETWEEN (t0.c1) AND (0.7442075177095205)))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(544896188, '', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.5245326918024426 WHERE ((CAST(t0.c2 AS INTEGER)) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('0.5827631678768741') WHERE ((t0.c1) ISNULL) COLLATE BINARY; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=('973683166'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=('0.6641600590221491', 0Xffffffffa2525418); -- 0ms;
UPDATE t0 SET (c0)=('') WHERE (((t0.c0 IN ()))>=(json_remove(t0.c2, t0.c2))); -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL WHERE ''; -- 0ms;
UPDATE t0 SET c0=-438103151; -- 0ms;
UPDATE OR ABORT t0 SET c2=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET c0=973683166; -- 0ms;
UPDATE OR REPLACE t0 SET c2=x'f531' WHERE ((((t0.c0)&(t0.c2))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE t0 SET (c0)=(0.8120672104851973) WHERE CASE ((((t0.c1)AND(t0.c1)))OR(t0.c0))  WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN ((t0.c1)GLOB(x'eafb')) ELSE CAST(t0.c0 AS NUMERIC) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0='-1408572879', c1='鼫ue쨵', c0=x''; -- 0ms;
UPDATE t0 SET (c0, c2, c2)=(x'', 0.9510600368827109, NULL) WHERE ((NULLIF(t0.c2, t0.c2)) BETWEEN ((((t0.c1, t0.c1, t0.c1)) BETWEEN ((x'', t0.c1, t0.c1)) AND ((t0.c1, t0.c2, t0.c2)))) AND (t0.c0)); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(0.15529099947604375); -- 0ms;
UPDATE t0 SET c2=0.29641307683688833, c2=x'' WHERE ((((t0.c0) BETWEEN (t0.c1) AND (0.2587451557750635)))>=(t0.c0)); -- 0ms;
UPDATE t0 SET (c1, c1)=(NULL, 0.33417855710177047); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.3210207815103968) WHERE -376743089; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0.04877721059329587, '') WHERE t0.c0; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(0xfffffffffcc63c81); -- 0ms;
UPDATE t0 SET (c2, c1)=(0X1b671899, 0.29472340700450217) WHERE (- (CHAR(t0.c1))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE ((t0.c1) IS TRUE); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE (NOT (((((((((t0.c0)OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))AND(0.39654492559657717)))); -- 0ms;
UPDATE t0 SET (c2)=(NULL) WHERE (('') ISNULL); -- 0ms;
UPDATE OR REPLACE t0 SET c0=x'', c1=x'01bb'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(' '); -- 0ms;
UPDATE t0 SET c0=0.47733595459187184 WHERE (t0.c2 IN (((NULL) ISNULL))); -- 0ms;
UPDATE OR FAIL t0 SET c0='200239663' WHERE (~ (t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE t0 SET (c1)=(x'43c3') WHERE ((((CAST(t0.c2 AS REAL))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))AND(x'a296')); -- 0ms;
UPDATE t0 SET c0=0.9758862301497906, c1=NULL, c0='747343786', c2=0Xffffffffcae89506 WHERE (~ ((t0.c0 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.3067651562513306, c2=0X21d405da; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.6641600590221491 WHERE CASE WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN t0.c1 COLLATE BINARY WHEN ((t0.c2) NOT NULL) THEN (t0.c0 IN ()) WHEN ((t0.c1) NOTNULL) THEN ((t0.c1)+(t0.c2)) END; -- 0ms;
UPDATE t0 SET c0=0.22456505978969088; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0X72408c6c WHERE ((((x'82fa') NOT BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (CASE t0.c1  WHEN t0.c1 THEN t0.c0 END) AND (NULL)); -- 0ms;
UPDATE OR ABORT t0 SET c2=NULL WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(0.8639641889339968, '1934687099'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET c2=0.4673322707925359 WHERE ((CAST(t0.c1 AS NUMERIC))=(((t0.c2)=(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(1262305631); -- 0ms;
UPDATE t0 SET c2=NULL, c2=NULL, c1=1.262305631E9; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(x'') WHERE CASE WHEN t0.c2 THEN json_remove(t0.c1, t0.c1) ELSE ((t0.c0)<<('')) END; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE ((((t0.c1)|(t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))) AND (JULIANDAY(x'', t0.c2, t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('濌') WHERE 'O)\S阭'; -- 0ms;
UPDATE OR IGNORE t0 SET c0='7rS䰞^' WHERE ((((t0.c2)AND(t0.c2))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (t0.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c1)=(NULL, 0.42219270412294807) WHERE (NOT (HEX(DISTINCT t0.c2))); -- 0ms;
UPDATE t0 SET (c0, c2)=(0.3648210264588022, -1.960110509E9) WHERE ((((((t0.c2)|(t0.c0)))AND(t0.c0)))AND(UPPER(DISTINCT t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2, c1)=(0.44692851752799445, '5	ꂃ >a', '冧\rH\rVL_\n'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'92ec') WHERE CAST(((t0.c2)IS NOT('-1222205036')) AS TEXT); -- 0ms;
UPDATE OR REPLACE t0 SET c0=0.9139251946659558; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-1e500', c1='i]K' WHERE (((((t0.c2))<((t0.c0)))) IS FALSE); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=('1900823478') WHERE CAST(((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))AND(t0.c1)) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=1290793446 WHERE ((HEX(DISTINCT t0.c1))>(((t0.c2)OR(t0.c1)))); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(NULL) WHERE '5H'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-263821074); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
UPDATE t0 SET c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(x'', 0.0797005361617108) WHERE t0.c0; -- 0ms;
UPDATE t0 SET c0=0.41647590164198356; -- 0ms;
UPDATE OR ABORT t0 SET c0=x'' WHERE ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 END) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c2) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.47020204055873427 WHERE (((t0.c2, t0.c0, t0.c1)) BETWEEN ((CAST(t0.c0 AS NUMERIC), ((t0.c0)<=(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))) AND ((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN 0.12336877098339827 THEN 0xffffffff8ed27d71 WHEN t0.c2 THEN t0.c2 ELSE NULL END, t0.c0 COLLATE RTRIM, (t0.c2 IN (t0.c0))))); -- 0ms;
UPDATE OR ABORT t0 SET c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('?1') WHERE (((('') NOT BETWEEN (t0.c1) AND (t0.c0)))<=((~ (t0.c0)))); -- 0ms;
UPDATE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR FAIL t0 SET c2='3415923411118653707T63 716:85:-5265096782152626261-'; -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c1, c1)=(NULL, NULL, '-682585516'); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.5601720948842004); -- 0ms;
UPDATE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET c0=NULL, c0=NULL WHERE ((HEX(DISTINCT t0.c0)) BETWEEN (((t0.c1) NOT NULL)) AND (((((t0.c2)AND(t0.c0)))OR(x'5581')))); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(0.39295687096617793) WHERE ((((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))-(((t0.c2)<=(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'', c0=NULL WHERE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=('⋛殻'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8597097905583756 WHERE CAST((((('-1146868238')AND(t0.c2)))AND(t0.c2)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM; -- 0ms;
UPDATE t0 SET c1=x'', c1='㲁5/J>9'; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c2, c2)=('929862204', 0xffffffff8cfdcb95, x'9bcb'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'471f' WHERE (((- (t0.c1))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('') WHERE x''; -- 0ms;
UPDATE t0 SET (c0)=('1262305631') WHERE UNLIKELY(t0.c1) COLLATE RTRIM; -- 0ms;
UPDATE t0 SET (c2, c2)=(x'5727', x'a284') WHERE ((((((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))OR(t0.c2 COLLATE NOCASE)))OR(((t0.c0)AND(t0.c2)))))AND((((t0.c0))<=((t0.c1))))))AND(((((t0.c0)OR(t0.c1)))OR(t0.c2)))); -- 0ms;
UPDATE t0 SET (c1)=(369506411) WHERE t0.c2 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE; -- 0ms;
UPDATE OR FAIL t0 SET (c2, c2, c0)=(0xffffffffd23faf36, '{<שP+', NULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(-1631901508) WHERE CAST(CAST(t0.c0 AS NUMERIC) AS INTEGER); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(x'1439'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('1691883413'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE OR FAIL t0 SET c1=4.55974699E8; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.4682778344476076 WHERE (((((t0.c2)) BETWEEN ((t0.c2)) AND ((0X7be248ad)))) ISNULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c0)=(-1949903106, x'') WHERE ((t0.c2 COLLATE RTRIM)<(((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c1)))); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.7771857198692016) WHERE (((t0.c0)) BETWEEN ((((t0.c2)>>(t0.c1)))) AND ((RTRIM(t0.c2)))); -- 0ms;
UPDATE t0 SET (c0, c1, c1)=(5.14746981E8, x'', NULL) WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)-(t0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=230679944; -- 0ms;
UPDATE OR IGNORE t0 SET c1='' WHERE ((CASE WHEN t0.c2 THEN t0.c2 END)GLOB(((t0.c2)%(NULL)))); -- 0ms;
UPDATE t0 SET c0='}(' WHERE 0xfffffffff541397e; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 1ms;
UPDATE OR ABORT t0 SET c1=0.6862256896693479 WHERE ((((t0.c1) IS TRUE))||(LTRIM(t0.c1))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c0=x'' WHERE (((NOT (t0.c2))) BETWEEN (((t0.c2)/(t0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))); -- 0ms;
UPDATE t0 SET (c0)=('￿3&<f') WHERE ((((t0.c1) BETWEEN (x'') AND (t0.c0)))>=(t0.c0)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0='}J', c2='' WHERE -886655624; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(x'', 0.1148789228063749); -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE ((CAST(t0.c2 AS NUMERIC))<<((+ (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE t0 SET (c0, c1)=('닆h', x'') WHERE (~ (CAST(t0.c0 AS NUMERIC))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE (((((t0.c0)%(t0.c0))))<=((((t0.c2)OR(t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1015028431', c2=x'4f157621'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2, c2, c0)=(0.01998030878517887, NULL, 0x6df88fb1, '-1832246641'); -- 0ms;
UPDATE OR IGNORE t0 SET c2='1315066437', c0='-2064496837', c1=x'' WHERE CAST((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) AS NUMERIC); -- 0ms;
UPDATE t0 SET (c0, c1, c2)=(NULL, 0.9130251138162573, x'548e') WHERE ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE json_array_length(t0.c0) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0.16900057993560713; -- 0ms;
UPDATE OR IGNORE t0 SET c1='285619170'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('456957357', 0X3bdedf20) WHERE DATE(((t0.c1) NOTNULL), (t0.c0 IN ()), CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END, ((((t0.c1)OR(t0.c1)))AND(t0.c0)), ((t0.c1)OR(t0.c2))); -- 0ms;
UPDATE t0 SET c0=x''; -- 1ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE (+ (x'')); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('', '') WHERE CAST((t0.c2 IN ()) AS REAL); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0.9479876873293223) WHERE (t0.c1 COLLATE RTRIM IN (((t0.c0)|(x'3dfd')), t0.c1)); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(')<V|?') WHERE (- (((t0.c0) BETWEEN (t0.c1) AND (x'')))); -- 0ms;
UPDATE OR FAIL t0 SET c1=x''; -- 0ms;
UPDATE t0 SET c1=0.6116569989843863; -- 0ms;
UPDATE OR ABORT t0 SET (c2, c2)=('415124018', ''); -- 0ms;
UPDATE t0 SET (c0, c2, c0)=(0.6705400104308279, x'', 0.8802872767191203); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=-1.836502326E9; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=NULL WHERE ((x'')%((((t0.c0, t0.c2, t0.c1, t0.c1, t0.c0))=((t0.c0, t0.c1, t0.c2, t0.c0, t0.c2))))); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x'') WHERE ((((((((json_remove(t0.c0, x''))OR(CASE WHEN t0.c0 THEN t0.c1 END)))OR(CAST(t0.c1 AS BLOB))))OR(CAST(t0.c1 AS REAL))))OR((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c0, c0)=('㟾-xw', x'510c', '	''') WHERE (((t0.c2 IN (t0.c2))) BETWEEN (CAST('-1956585592' AS INTEGER)) AND (t0.c0)); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c2, c0, c1)=(0.009073311542787788, NULL, '1114558160', NULL) WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c0)=('', '\r', '1181611151'); -- 0ms;
UPDATE OR IGNORE t0 SET c2='*UN2E', c1=x'' WHERE ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END) ISNULL); -- 0ms;
UPDATE t0 SET (c1, c1)=('Zd~b''1', -1.214145257E9); -- 0ms;
UPDATE OR ABORT t0 SET c2='|.'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0X33f0b282) WHERE ((CAST(t0.c2 AS TEXT)) ISNULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c1, c0)=(NULL, NULL, '') WHERE ((t0.c2 COLLATE BINARY) NOT BETWEEN ((((t0.c1, t0.c1, t0.c0))>((t0.c2, t0.c0, t0.c2)))) AND (t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR REPLACE t0 SET c1=x'42a9', c0=NULL, c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0xffffffffe85fa279, c2=0.6948726685972376, c2=x'9eb8' WHERE (((((t0.c2, t0.c1, t0.c2)) NOT BETWEEN ((t0.c0, t0.c1, 0.13438940603410332)) AND ((t0.c2, t0.c1, t0.c0)))) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.23840204528413078) WHERE ((CASE WHEN t0.c0 THEN '0.2547495658389658' ELSE NULL END)>>(((t0.c0) IS TRUE))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE (~ (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c1, c0)=(0.5187665195166523, '1096495108', -1.785959493E9) WHERE (((t0.c0 IN (t0.c0))) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END) AND (t0.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=('Li', NULL) WHERE UNLIKELY((t0.c2 IN ())); -- 0ms;
UPDATE OR ABORT t0 SET c1=x'', c0='z Sm竼F'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.01578452117607143 WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-130338938'; -- 0ms;
UPDATE OR FAIL t0 SET c1=x'' WHERE CASE t0.c0  WHEN ((t0.c0)GLOB(t0.c0)) THEN CAST('' AS BLOB) WHEN t0.c2 COLLATE BINARY THEN (t0.c1 IN ()) WHEN (0.7041435519964124 IN ()) THEN ((t0.c0)OR(t0.c1)) END; -- 0ms;
UPDATE t0 SET c0=0x7a0d160d WHERE ((((t0.c1)GLOB(t0.c2)))<<(0x35321c9)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0Xffffffffad1792ac WHERE CASE WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c2 WHEN t0.c2 COLLATE RTRIM THEN (t0.c0 IN (t0.c1)) WHEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))AND(0.9393350980734917)) THEN t0.c0 ELSE ((((t0.c1)AND(t0.c2)))AND(t0.c1)) END; -- 0ms;
UPDATE t0 SET (c2)=(0X31d304c6) WHERE ((((t0.c0) ISNULL))LIKE(CASE x''  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)); -- 0ms;
UPDATE OR REPLACE t0 SET c1=x'' WHERE LTRIM((t0.c2 IN ())); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0Xffffffffbd8b33ce; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'', c0=x'', c0='2'; -- 0ms;
UPDATE t0 SET c2='pC'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0xffffffffb80d9c25 WHERE (+ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))); -- 0ms;
UPDATE t0 SET (c0)=('1934687099'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0X2726a580; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=('1469576766'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.9684310871124573) WHERE (((t0.c0)) NOT BETWEEN ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))) AND ((((t0.c0) NOTNULL)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0.09727975505174646 WHERE (((((('', t0.c2, t0.c2, t0.c0, t0.c2))<=((NULL, t0.c2, t0.c0, x'', t0.c1)))))>=((((((t0.c1)OR(t0.c1)))AND(t0.c0))))); -- 0ms;
UPDATE t0 SET c0=x'', c1='fn℗'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'bf21'; -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(-5.3913184E8) WHERE CASE WHEN (~ (t0.c1)) THEN t0.c1 COLLATE BINARY END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1, c1)=(x'', 1784295819, 'z*뀛'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE (((((((((((t0.c2)AND(t0.c1)))OR(t0.c2)))OR(t0.c0)))AND(t0.c0))))<((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(x'') WHERE (((((t0.c1))<>((t0.c2))))IS NOT(CAST('⩢' AS REAL))); -- 0ms;
UPDATE t0 SET c1='⩠⾆', c0=NULL, c2=1.11455816E9 WHERE (((((t0.c2 IN (t0.c2)))OR(((t0.c1)%(t0.c2)))))OR(((t0.c1)<<(t0.c0)))); -- 0ms;
UPDATE t0 SET c1=-1812799248 WHERE ((((t0.c2)!=(t0.c0))) IS TRUE); -- 0ms;
UPDATE OR ABORT t0 SET c2=NULL, c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0, c2)=(x'b67d', 0.08396663944616611, NULL) WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET c1='뉲Pcg'; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c2=0.2866821287946142; -- 0ms;
UPDATE t0 SET c1=x'5b3b'; -- 0ms;
UPDATE OR IGNORE t0 SET c0='2002940841'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'2fd9', c2='67117430'; -- 0ms;
UPDATE OR REPLACE t0 SET c1=x'', c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0='304158176'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET (c2)=(0.6851836268700493) WHERE CASE (+ (t0.c1))  WHEN t0.c2 COLLATE NOCASE THEN (t0.c0 IN ()) WHEN CAST(t0.c0 AS TEXT) THEN CASE x''  WHEN t0.c2 THEN t0.c1 END WHEN ((t0.c0)IS NOT(t0.c1)) THEN ((0.4577509261307878)||(t0.c1)) ELSE (NOT (NULL)) END; -- 1ms;
UPDATE OR IGNORE t0 SET c0='0.6784000704699039'; -- 0ms;
UPDATE t0 SET (c1)=('438941718'); -- 0ms;
UPDATE OR FAIL t0 SET c0=NULL WHERE ((((t0.c2)GLOB(t0.c2)))<(t0.c0)); -- 1ms;
UPDATE OR FAIL t0 SET (c2)=(NULL) WHERE (((NOT (t0.c2)))==(((((((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c1)))OR(t0.c0)))OR(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'ac96') WHERE t0.c2; -- 0ms;
UPDATE t0 SET c0=0Xfffffffffefc3d50; -- 0ms;
UPDATE t0 SET (c0)=(',|') WHERE ((((((((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(x'')))AND(t0.c1)))AND(t0.c2)))+((t0.c1 IN (t0.c2)))); -- 0ms;
UPDATE t0 SET (c2)=('G66&') WHERE CAST((t0.c0 IN (t0.c0)) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2, c2)=(0.27913423224095524, x'0fa6', 0x4a06978f); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.5040384804005137, c1=1139449291, c2='NhG->{yP' WHERE CAST((~ (t0.c1)) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-1852380435', c0=0.5933547647371044; -- 0ms;
UPDATE t0 SET c1='' WHERE ((LOWER(DISTINCT t0.c0))%(((x'')AND(t0.c1)))); -- 0ms;
UPDATE t0 SET c2=0.48069536834589555; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('VU췣O㋊ꇣ') WHERE 0.10116238589617377; -- 0ms;
UPDATE t0 SET (c0, c0)=(NULL, '1294426149'); -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c2, c2, c1)=('0.5653373448372109', -2024891093, 0.09797808972029409, 'Fm') WHERE 0.7011355888365652; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(1124134333); -- 1ms;
UPDATE OR IGNORE t0 SET (c2)=(0.5921395979908655); -- 0ms;
UPDATE OR IGNORE t0 SET c1='' WHERE ((ABS(x''))*(CAST(t0.c2 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='6)E44v', c0=x'' WHERE (+ (((t0.c1) ISNULL))); -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0)=(0.7425949165563998, 0.6641600590221491) WHERE CASE ((t0.c2) BETWEEN (t0.c1) AND (t0.c2))  WHEN ((t0.c1) IS FALSE) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0='RrU>Cgn뱻&'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.23973829229951304; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1, c2)=(NULL, 0.2581023448282622, 0.7579918337652615) WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1873174397'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-1.23880245E9, c1=0.3587961566334479, c1=NULL; -- 0ms;
UPDATE t0 SET (c2, c2, c1)=(x'', x'', 0.5827631678768741) WHERE ((((t0.c2)IS(t0.c2))) NOT NULL); -- 0ms;
UPDATE t0 SET c0=0.28778024223554965; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET c0='*2', c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET c0=x'', c1='1962435379'; -- 0ms;
UPDATE OR IGNORE t0 SET c0='532929450'; -- 1ms;
UPDATE OR IGNORE t0 SET c2=''; -- 0ms;
UPDATE t0 SET c2=0.9900496245266988 WHERE CASE ((t0.c2)*(t0.c1))  WHEN (- (t0.c1)) THEN ((t0.c1)<(t0.c2)) ELSE json_insert(t0.c0, t0.c0, t0.c2) END; -- 0ms;
UPDATE OR REPLACE t0 SET c0='', c1=x'', c1='' WHERE ((((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c1 END)OR(((t0.c0) NOT NULL))))OR((((t0.c2, t0.c0, t0.c1, t0.c0, t0.c0))<((t0.c1, t0.c0, t0.c2, 0.11484032571113056, t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(0.16031732643157692, NULL) WHERE (- ((NULL IN ()))); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE CAST((~ (t0.c2)) AS INTEGER); -- 1ms;
PRAGMA short_column_names = false; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS BLOB) AS NUMERIC); -- 0ms;
UPDATE t0 SET c0=x'' WHERE CAST(((t0.c2) NOT NULL) AS REAL); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('') WHERE LIKELY((t0.c0 IN ())); -- 0ms;
UPDATE OR ABORT t0 SET c0=x'c6a8' WHERE t0.c0; -- 0ms;
UPDATE t0 SET c1='0.3479758176421395' WHERE ((NULL) ISNULL); -- 0ms;
UPDATE t0 SET c1=0.7458988439663711, c1='-940411051', c0=1e500; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE 1574060146; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE (((((t0.c2)OR(t0.c2)))AND(t0.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE ((((CASE t0.c2  WHEN t0.c1 THEN 0.6453882292399133 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END)AND(((t0.c2) ISNULL))))OR(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))); -- 0ms;
UPDATE OR REPLACE t0 SET c0='' WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))) BETWEEN ((- (t0.c0))) AND (((t0.c1) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.4168520666638088 WHERE NULL; -- 0ms;
UPDATE t0 SET c1=-1373494148; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('lR'); -- 0ms;
UPDATE t0 SET c2=0xffffffff9ebb28bc, c1=-3.33569769E8 WHERE ((((((0.37389018014379105)LIKE(0.5890422079235952)))OR('\n8￿I')))AND(t0.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=-1137589361 WHERE ((t0.c0)==(t0.c1)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(0.2581023448282622, 0.5597718020686048) WHERE CAST((- (0X3a5a2653)) AS BLOB); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(0.42106112531352813); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.36784019474856733) WHERE (((t0.c1)) NOT BETWEEN ((((t0.c0)AND(t0.c2)))) AND ((((t0.c1) ISNULL)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.5583992568525659, c2=NULL, c0=0.10006185393797862; -- 0ms;
UPDATE t0 SET (c1)=('2002212336'); -- 0ms;
UPDATE OR FAIL t0 SET c0=''; -- 0ms;
UPDATE t0 SET (c2, c0, c2)=(4.55974699E8, -1873174397, NULL) WHERE CASE WHEN t0.c2 THEN (((t0.c2))!=((t0.c0))) ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c2)) END; -- 0ms;
UPDATE t0 SET (c1, c0)=('1638986954', '0.12329133669087833'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=(0.42110592546237335, x'') WHERE (((CASE WHEN 0.4048958963177721 THEN t0.c0 END, t0.c0, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c2)))OR(t0.c2))))==(((('-16660609')>(t0.c2)), (((4.19583605E8))<((t0.c1))), ((t0.c0) IS FALSE)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='859541516' WHERE t0.c0 COLLATE BINARY; -- 0ms;
UPDATE t0 SET (c1)=('-751309490') WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0)=(x'', 1283906512) WHERE (('Yp!')<(((t0.c0)AND(t0.c2)))); -- 1ms;
UPDATE OR IGNORE t0 SET c2='-653847225', c0=-345340079 WHERE (CAST(t0.c2 AS INTEGER) IN (((t0.c2) BETWEEN (t0.c1) AND (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=('', '1680968858'); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(304038824); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('1916832876') WHERE CASE WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN (t0.c1 IN (t0.c1, t0.c0)) ELSE 0.09472056717000965 END; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE COALESCE((~ (t0.c2)), ((((t0.c2)OR(t0.c1)))AND(t0.c2))); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(0.7045585293169833) WHERE ((t0.c1) IS FALSE) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'5cfd', c2=NULL WHERE (((t0.c2)GLOB(t0.c2)) IN (NULL)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c2=-1.956585592E9; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0='yctehqd0'; -- 0ms;
UPDATE t0 SET (c2, c2)=(x'', '968232880') WHERE CAST(t0.c0 AS INTEGER) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1890296240', c2=0.2587451557750635, c0=''; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(0.6784000704699039) WHERE ((CAST(t0.c0 AS REAL))AND(((t0.c0) NOTNULL))); -- 0ms;
UPDATE t0 SET c1=-1558758597, c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.36784019474856733 WHERE '1947560410'; -- 0ms;
UPDATE OR IGNORE t0 SET c1='0.05623620902658433'; -- 0ms;
UPDATE OR REPLACE t0 SET c1='-1734715683'; -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(x'', 0.6915385102004844) WHERE ((((t0.c1)OR(t0.c1 COLLATE NOCASE)))AND(((t0.c0)<(t0.c1)))); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c1)=('++', x'') WHERE (((((t0.c1))>((NULL))))>=(CAST(t0.c2 AS INTEGER))); -- 0ms;
UPDATE t0 SET c0=x''; -- 0ms;
UPDATE t0 SET (c1)=(x'') WHERE ((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c2)!=(t0.c1))) AND (((t0.c2) IS TRUE))); -- 0ms;
UPDATE t0 SET (c1, c2)=(9.40678906E8, NULL); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL) WHERE CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER); -- 0ms;
UPDATE t0 SET c2=0.2095803720904338, c2=''; -- 0ms;
UPDATE t0 SET c2='\r㨐)'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c0)=(1.638496254E9, 0.8636644565901247, 0.9459427260097047); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(0.2378065666196939, '-1097639106') WHERE (- (IFNULL(DISTINCT t0.c2, x'288a'))); -- 0ms;
UPDATE t0 SET c1='' WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE CAST((((t0.c0)) NOT BETWEEN (('0.39164010663201265')) AND ((t0.c0))) AS REAL); -- 0ms;
UPDATE t0 SET c2='-1048122496'; -- 0ms;
UPDATE OR IGNORE t0 SET c0='1469503628'; -- 0ms;
UPDATE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR FAIL t0 SET c2=0.7433488753823089 WHERE ((t0.c1) NOT NULL); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c1)=(0x4f6ccc67, NULL) WHERE CAST(NULLIF(DISTINCT t0.c0, t0.c1) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('') WHERE (((CAST(t0.c2 AS TEXT)))<(((t0.c1 IN ())))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('-5654558', x'') WHERE '-1873174397'; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1, c0)=(x'', x''); -- 0ms;
UPDATE t0 SET c2='' WHERE CASE WHEN (~ (t0.c0)) THEN ((NULL)>(NULL)) WHEN IFNULL(DISTINCT t0.c0, t0.c1) THEN NULL WHEN CAST(t0.c2 AS TEXT) THEN t0.c2 COLLATE BINARY END; -- 0ms;
UPDATE t0 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1, c0)=('796736474', NULL, 0Xffffffff9c5a8973); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('', 'fB'); -- 0ms;
UPDATE t0 SET (c1)=(0.6784000704699039) WHERE ((((NULL))<=((t0.c1))) IN ()); -- 1ms;
UPDATE OR REPLACE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET c2=NULL; -- 1ms;
UPDATE t0 SET (c1, c2)=(0X6ff90c46, x''); -- 0ms;
UPDATE OR IGNORE t0 SET c2='1609208033' WHERE '冧\rh\rVl_\n'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1017129823'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0Xffffffffb81a7187; -- 0ms;
UPDATE t0 SET (c0, c1)=(0.11109076856008115, 'zF)9\r') WHERE ((((((t0.c1) ISNULL))AND(ABS(t0.c0))))AND(t0.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE ((((t0.c0 COLLATE BINARY)AND(((t0.c2) BETWEEN (t0.c1) AND (t0.c2)))))OR(((t0.c2)/(t0.c1)))); -- 0ms;
UPDATE OR ABORT t0 SET c2=0.5106502545384728; -- 0ms;
UPDATE OR REPLACE t0 SET c0='1416163812' WHERE ((((t0.c2)>(t0.c2))) NOT BETWEEN (t0.c2) AND (t0.c2)); -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c0)=(NULL, '-54117247'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'105a'); -- 0ms;
UPDATE OR IGNORE t0 SET c1='', c1=x'', c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET (c0)=(x'775a') WHERE NULL; -- 0ms;
UPDATE t0 SET (c0, c0, c1)=('DrT컐', x'', 'v') WHERE CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) ELSE ((t0.c2) NOTNULL) END; -- 1ms;
UPDATE t0 SET (c1, c2, c1)=(NULL, 0.6040379695504137, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0x1016e9f3); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c1)=('', 0.6445573119053846); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(''); -- 0ms;
UPDATE t0 SET c1=1.680968858E9, c0=x'b5f9'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0X19025675); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(0.8479990803930819, -3.59597764E8); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(x'') WHERE ((t0.c2) NOTNULL) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1823197555); -- 0ms;
UPDATE t0 SET c0=x'', c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE t0 SET c2='sb'; -- 0ms;
UPDATE t0 SET (c0, c1)=('', 0.8340578660445019) WHERE ((t0.c1)+(x'' COLLATE NOCASE)); -- 0ms;
UPDATE t0 SET c2=0.06041836160834568, c0=x''; -- 0ms;
UPDATE t0 SET c1=NULL, c1='TRUE', c0='[]' WHERE CASE (NOT (t0.c1))  WHEN ((t0.c1)<=(t0.c2)) THEN (t0.c0 IN ()) END; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.23787994973028304, c1='FALSE'; -- 1ms;
UPDATE OR IGNORE t0 SET c0=x'', c2='' WHERE CAST(t0.c2 AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE (+ (((t0.c2)LIKE(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'6273') WHERE CASE t0.c1  WHEN t0.c1 THEN t0.c2 END COLLATE RTRIM; -- 0ms;
UPDATE OR FAIL t0 SET c2=NULL WHERE ((((t0.c2)GLOB(t0.c0))) BETWEEN (CAST(t0.c2 AS INTEGER)) AND (CAST(t0.c2 AS NUMERIC))); -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL WHERE (- (t0.c2)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c2)&('0.6554206738439937'))) AND (t0.c1)); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('f|va') WHERE CASE ((((((((t0.c1)AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1))  WHEN (t0.c1 IN ()) THEN ((0X1e1fbd7c)-(t0.c2)) ELSE t0.c2 COLLATE NOCASE END; -- 0ms;
UPDATE t0 SET (c2)=(0x35e5f92); -- 0ms;
UPDATE OR IGNORE t0 SET c1=''; -- 0ms;
UPDATE OR REPLACE t0 SET c2=NULL, c0='_O7_KP9V\n', c2=x'' WHERE ((LOWER(DISTINCT t0.c0))+(t0.c2)); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c0)=(0Xffffffffbc3cdb07, '{%竕'); -- 0ms;
UPDATE t0 SET (c2)=('-1423449723'); -- 0ms;
UPDATE t0 SET c1='骟si3J()*'; -- 0ms;
UPDATE t0 SET c0=x'254a'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 1ms;
UPDATE OR IGNORE t0 SET c1='1214141104'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(NULL, 0.3300137200460228); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(NULL, NULL); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE (- ((((t0.c2, t0.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, t0.c1)) AND ((t0.c1, t0.c0, t0.c1))))); -- 1ms;
UPDATE t0 SET (c2, c2)=('', x'6fee5a58'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET c0='0.37499972046891183', c2=0.37499972046891183; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(1885370711); -- 0ms;
UPDATE t0 SET (c0, c0, c1)=('', 0.7285060992879072, -1368246543) WHERE ((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))<<(((((((((t0.c0)OR(t0.c2)))OR(t0.c2)))AND(t0.c1)))OR(t0.c0)))); -- 0ms;
UPDATE OR ABORT t0 SET c0=0.222700507196135, c1=2140148599, c0=x'9d52'; -- 0ms;
UPDATE OR REPLACE t0 SET c1='1361752319' WHERE CAST((((t0.c1, t0.c0, t0.c2))>=((t0.c1, t0.c2, t0.c1))) AS INTEGER); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(NULL) WHERE ((t0.c0)-(t0.c1)); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=419583605; -- 0ms;
UPDATE t0 SET c2=x'6d50', c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.7575190659875494; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(NULL, x''); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0, c1)=('泷*', 'uv<l', '-1321047149') WHERE '1619504165'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.5944563001200751) WHERE ((((((t0.c2) IS FALSE))OR(((t0.c2)&(t0.c0)))))AND(COALESCE(t0.c2, t0.c1, t0.c0, NULL))); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET c1=-358436650, c2=0x1c206c26, c2='' WHERE (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ()); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(0.05878575697537003); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE OR REPLACE t0 SET c1=0.1592990642734179 WHERE ((((((((((t0.c0) ISNULL))OR((((x'')) BETWEEN ((t0.c0)) AND ((t0.c1))))))AND(((t0.c0)<=(t0.c1)))))OR(((t0.c1)>>(t0.c0)))))OR(t0.c2 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE ((t0.c2 COLLATE NOCASE) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET c2=4.13547761E8 WHERE -1.022008187E9; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE t0 SET c0='-745537756' WHERE UNLIKELY(DISTINCT ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='1405539447', c2=''; -- 0ms;
UPDATE t0 SET c1=0.8089209878877993; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.9242280716087938) WHERE ((CASE t0.c2  WHEN t0.c0 THEN x'' ELSE t0.c1 END)>(((x'')==(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0x50c358e1, c0='-1040584360'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c1='', c0='-550974923'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c0)=(0.4128889644291768, '-647456908', 0xdd6a275) WHERE CAST(CAST(t0.c0 AS BLOB) AS TEXT); -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL, c2='' WHERE ((((NULL)&(t0.c1))) NOT BETWEEN (((t0.c0)<<(t0.c2))) AND (t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c2, c2)=(NULL, 'D8', '1058690847') WHERE ((CAST(t0.c2 AS TEXT)) IS TRUE); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=x'40d1'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c2='904566751'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET c0=',|g7k.M'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0xffffffffb7a19d17, c2=0xffffffff8b2b1653; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=('-297400969') WHERE json_patch((t0.c2 IN ()), (((t0.c2)) BETWEEN ((t0.c2)) AND ((-1985369620)))); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(0X675e12a6); -- 0ms;
UPDATE t0 SET (c1)=('-1479148697') WHERE (((((t0.c0, t0.c1, t0.c0))=((t0.c1, t0.c0, t0.c1))))<(((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE ((((+ (t0.c0))))>((t0.c1 COLLATE RTRIM))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='ᒅ敂s+{\ngU^' WHERE t0.c1; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=0xffffffffa0632be8, c0=NULL WHERE (((t0.c1 IN ('-670912915')))>>(CAST(t0.c0 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-1.368246543E9; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(NULL) WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(NULL, 0.7499456918957368) WHERE ((NULLIF(t0.c2, t0.c1)) IS TRUE); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c0, c1)=(-1.80274818E8, x'', NULL) WHERE (NOT (((t0.c2) BETWEEN (t0.c0) AND (x'c50a')))); -- 0ms;
UPDATE OR FAIL t0 SET c1='-745537756', c0='-1479148697', c1=x'5927'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(NULL, x''); -- 0ms;
UPDATE t0 SET (c1)=(0.7081384429469455) WHERE ((SQLITE_COMPILEOPTION_USED(t0.c2))>(((((t0.c2)OR(t0.c0)))OR(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.9458765514598774, c0=0.791954153374918; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE CASE t0.c2 COLLATE BINARY  WHEN ABS(DISTINCT t0.c2) THEN ((t0.c2)&(t0.c1)) ELSE t0.c0 END; -- 0ms;
UPDATE OR FAIL t0 SET c2=0X1eae6a65 WHERE (((~ (t0.c1))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('*9'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-544353440' WHERE '-1280008734'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=-926590 WHERE ((((((t0.c1)AND(t0.c2)))OR(t0.c0))) BETWEEN (t0.c2) AND (((((0.24985518078085867)OR(x'')))OR(t0.c1)))); -- 0ms;
UPDATE t0 SET c2=x'e822', c0=x'' WHERE 0xffffffff933aabbd; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'd4f8', c1=0.9999567940405641, c0=NULL WHERE (~ (t0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0, c0)=('-719298742', '-2024177139', ''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.636012989191209); -- 0ms;
UPDATE t0 SET c2=3.24559642E8; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.6381638717228305) WHERE CASE t0.c2 COLLATE NOCASE  WHEN t0.c2 COLLATE BINARY THEN t0.c1 COLLATE BINARY ELSE rtreenode(t0.c0, t0.c2) END; -- 0ms;
UPDATE t0 SET c2=0X67a3a244 WHERE CAST((((t0.c0))>=((t0.c1))) AS NUMERIC); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(0.07146616383110438) WHERE TOTAL_CHANGES(); -- 0ms;
UPDATE t0 SET c2=0.47983942069883045; -- 0ms;
UPDATE t0 SET c2='1116776812' WHERE (((t0.c2 IN ())) NOT BETWEEN (x'0edb') AND (((t0.c1) BETWEEN ('') AND (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 1ms;
UPDATE OR REPLACE t0 SET (c1, c2)=(x'', '2107903338') WHERE ((((t0.c2)*(t0.c1))) NOT BETWEEN (((t0.c2) IS TRUE)) AND (((t0.c2)GLOB(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c1=x'' WHERE ((NULL) NOT NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('') WHERE x''; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=NULL, c1=x'3ff7'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.6576444722601276) WHERE SQLITE_SOURCE_ID(); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c2)=(x'f032', x''); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=-1114950706; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-2113784734) WHERE (t0.c2 IN ((t0.c1 IN ()))); -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL WHERE CAST(t0.c2 COLLATE RTRIM AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.5653373448372109 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END)||(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(x''); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1, c0)=('1680968858', '冧\rh\rVl_\n'); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(-273966619); -- 0ms;
UPDATE t0 SET (c0)=('~S礞	hg') WHERE (- (ABS(DISTINCT t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(199400433); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=('1437034247'); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c1)=(NULL, 0.20942912981466344) WHERE (((t0.c0 IN (t0.c0))) NOT BETWEEN (TYPEOF(t0.c0)) AND (t0.c2 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=5.67543258E8, c0=-1929524331; -- 0ms;
UPDATE t0 SET c1=x'' WHERE json_patch(((t0.c2)OR(t0.c0)), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE ((((t0.c0) IS TRUE)) NOT NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c2='i\r', c1=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.6039279953620965) WHERE IFNULL(DISTINCT ((t0.c2) ISNULL), (~ (t0.c2))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0x3f78854e) WHERE (((t0.c1)) NOT BETWEEN ((((t0.c0)!=(t0.c2)))) AND ((t0.c2 COLLATE NOCASE))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('TRUE'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(0.3299685121579914, 0.8668669840206323); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'b98211e4') WHERE ((((((t0.c2, t0.c2, t0.c0))<((t0.c2, t0.c1, t0.c2))), (+ (t0.c0)), CASE t0.c2  WHEN t0.c0 THEN t0.c0 END))=((t0.c1, ((t0.c2)GLOB(x'')), ROUND(t0.c0, t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.5764877269546068) WHERE 0.33971217091476924; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(0.15413554172237498); -- 0ms;
UPDATE OR IGNORE t0 SET c2=1791998927 WHERE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c0='ipN'; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.9245226633024395); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.3790668049602728) WHERE (((((t0.c0))<=((t0.c1)))) NOTNULL); -- 0ms;
UPDATE t0 SET c0=x'' WHERE ((((((((t0.c1)AND(t0.c2)))OR(t0.c0)))AND(((t0.c2)>(t0.c0)))))AND(t0.c2)); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=0xffffffffa7d5fb67; -- 0ms;
UPDATE t0 SET (c0, c2, c1)=(x'', '413294333', NULL) WHERE (((((t0.c2) IS FALSE)))<(((t0.c2 IN ())))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=NULL WHERE 0.4361624565341381; -- 0ms;
UPDATE OR IGNORE t0 SET c2=-1.836411305E9; -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0, c0)=(0Xffffffffd0da1ef2, NULL, x''); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c0, c2, c2)=('', 0.47789936001831135, 0.29739721736096847, 'I<PB]B') WHERE ((CAST(t0.c2 AS INTEGER)) IS FALSE); -- 0ms;
UPDATE OR FAIL t0 SET (c2, c1)=('-1022008187', '-1362862832'); -- 0ms;
UPDATE t0 SET c0='0.8645100725809522', c1=0.5762140779131694 WHERE ((((t0.c0 IN (t0.c2))))<=(('2140148599' COLLATE BINARY))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(0.9702505357998055, '306459741'); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE ((((((t0.c1) IS TRUE))AND(((((t0.c1)AND(t0.c1)))OR(t0.c1)))))OR(((t0.c1)||(t0.c2)))); -- 0ms;
UPDATE t0 SET (c1)=('0.6554206738439937') WHERE CASE t0.c0  WHEN ((t0.c1)LIKE(t0.c1)) THEN (((t0.c1))!=((t0.c2))) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.8201138796533649); -- 0ms;
UPDATE OR FAIL t0 SET c0=0.38486176633013713, c1=1555941714 WHERE ((((((((((t0.c1)AND(t0.c2)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0)==(t0.c2)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)))OR(TRIM(t0.c0, t0.c2))); -- 1ms;
UPDATE OR IGNORE t0 SET c1='-1214145257'; -- 0ms;
UPDATE t0 SET (c0)=(x'92a2') WHERE (SQLITE_COMPILEOPTION_GET(t0.c1) IN (((t0.c2)<=(t0.c1)))); -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL WHERE t0.c0; -- 0ms;
UPDATE OR ABORT t0 SET c1='m,p8g', c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('?5 (E'); -- 0ms;
UPDATE OR ABORT t0 SET c2=NULL, c2=-874727024 WHERE ((load_extension(x'')) BETWEEN (((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))OR(t0.c0))) AND ((- (t0.c2)))); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=('hjNT'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=('', 0.685499700833693); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.22456505978969088); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(x''); -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('iz') WHERE ((((t0.c1)>=(t0.c1)))>=(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('0.9534310086299521') WHERE CASE WHEN ((t0.c2)GLOB(t0.c2)) THEN ((t0.c2)*(t0.c1)) ELSE ((t0.c0) ISNULL) END; -- 0ms;
UPDATE OR IGNORE t0 SET c2='', c2=x''; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0Xffffffffe70a6b3a WHERE 'J㛱tDxF)bT'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'f9a4', c1=NULL, c1=0X2626f1ec; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c2='n}?rd', c0=-1.823197555E9; -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(NULL) WHERE (CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END IN ((('q{Mv') NOTNULL), t0.c2 COLLATE BINARY)); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=('-791763594') WHERE (((t0.c2) NOTNULL) IN (((((t0.c0)OR(t0.c1)))AND(t0.c0)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=0x27b254cc; -- 0ms;
UPDATE OR IGNORE t0 SET c2='2', c2=NULL, c1=x'' WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE (((t0.c2)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))) AND ((t0.c0 COLLATE BINARY))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-2049529528' WHERE NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 1ms;
UPDATE t0 SET c0='詥&,렖+5'; -- 0ms;
UPDATE OR ABORT t0 SET c2=x'', c1=x'a8ab', c0=0.4364745815586961; -- 0ms;
UPDATE OR FAIL t0 SET c0=''; -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(NULL) WHERE ((0.22230864477556112 COLLATE BINARY)>=(((t0.c0) NOT NULL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.3893214371963434) WHERE ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET c0=1736735415 WHERE (- (((NULL)==(t0.c0)))); -- 0ms;
UPDATE t0 SET c2='PQZX[s'; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(0.9044315344638367); -- 1ms;
UPDATE OR IGNORE t0 SET c1='-543587817'; -- 0ms;
UPDATE t0 SET c1=0X415b3004 WHERE CAST(('' IN (t0.c0)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.6018782126650103, c1=0Xffffffff886010f3 WHERE CAST((t0.c2 IN ()) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.6810872448893385); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
UPDATE t0 SET (c0)=('') WHERE (((t0.c1 IN ()))<(t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR ABORT t0 SET c1='#Z' WHERE CAST((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((t0.c1, NULL, t0.c2))) AS BLOB); -- 0ms;
UPDATE t0 SET (c1)=('413547761'); -- 0ms;
UPDATE t0 SET (c2, c1)=('', 0.8079309682911341); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'1df7') WHERE ((NULL)/(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2, c1)=(x'', x'', x'f9c7'); -- 0ms;
UPDATE t0 SET (c2, c2)=(x'', -1636267040); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c2, c1)=('1691883413', 0.4244043433662583, x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1007989154'); -- 0ms;
UPDATE OR REPLACE t0 SET c0=0.8672351457222859, c2=x'63c3' WHERE (('0.6251463128423645')*((t0.c0 IN ()))); -- 0ms;
UPDATE t0 SET (c0)=('Hn'); -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL, c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE CAST((('0.1424699889908596') NOT BETWEEN (t0.c2) AND (t0.c0)) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('1900823478') WHERE CAST((~ (t0.c1)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE (((((t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c1, t0.c2, t0.c0)))) NOT BETWEEN ((t0.c1 IN ())) AND ((((t0.c0))<((t0.c1))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('0.9479876873293223') WHERE json_quote(t0.c0) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(9.40678906E8); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=('-745537756', x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.7519554420178814) WHERE ('*.' IN (((((((((t0.c1)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c1)), (t0.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='1524085538' WHERE CAST(x'ca48' AS NUMERIC) COLLATE NOCASE; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=('-1299487632') WHERE (((t0.c0)=(t0.c1)) IN (CAST(t0.c0 AS INTEGER), t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(x'4cf5', 'dj)\ki|n') WHERE (t0.c0 IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.28838841325287234 WHERE CAST(((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) AS INTEGER); -- 0ms;
UPDATE t0 SET (c1)=(0.6583557545109898); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=('0.5339311907910044') WHERE CASE WHEN LIKELY(DISTINCT t0.c1) THEN ((t0.c2) IS FALSE) WHEN '-54117247' THEN (t0.c0 IN ()) WHEN t0.c0 THEN CAST(t0.c0 AS BLOB) ELSE CAST(t0.c0 AS BLOB) END; -- 0ms;
UPDATE OR REPLACE t0 SET c1=-84383086, c2=0xffffffffb6295fee; -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE t0 SET (c1)=('-513012697'); -- 0ms;
UPDATE OR ABORT t0 SET c2=0.29348695731171526, c1=NULL, c0=0.7526903768564532 WHERE (((((t0.c2 IN ()))OR(t0.c2 COLLATE RTRIM)))AND(((((t0.c2)AND(0.5220399090367154)))OR(t0.c0)))); -- 0ms;
UPDATE t0 SET c1=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1, c1)=(0.7363584939029802, '', x''); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(NULL) WHERE CAST(CAST(t0.c1 AS REAL) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0xffffffffc8ea7916); -- 0ms;
UPDATE OR FAIL t0 SET (c2, c1)=(NULL, ''); -- 0ms;
UPDATE OR ABORT t0 SET c0=x'8c71', c0=NULL, c0=0.1443704599679081; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.5116630237335594 WHERE (- (t0.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE (- ((- (0.8957818318832994)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1361471917'; -- 0ms;
UPDATE t0 SET c0=0.9122975815806819, c2='l9' WHERE (((t0.c1, t0.c0, t0.c1, t0.c0, 0.6177830143440523)) BETWEEN (((- (t0.c2)), (~ (t0.c0)), t0.c2 COLLATE BINARY, ((t0.c1) IS TRUE), 'K澂''e')) AND ((t0.c1, ((t0.c0)&(t0.c2)), t0.c2, ((t0.c1) NOT BETWEEN ('') AND (t0.c0)), t0.c0 COLLATE BINARY))); -- 1ms;
UPDATE OR FAIL t0 SET (c1)=('Cf[0{r\a8') WHERE (((('zagt' IN ())))<=((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'29a0'; -- 1ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(x'd39c05d6', 'v C') WHERE (- (CAST(t0.c1 AS REAL))); -- 0ms;
UPDATE OR FAIL t0 SET c0=0.4242959161417844, c0=0.18316559909741625, c2=0Xffffffffd52f2647 WHERE ((CASE WHEN t0.c1 THEN t0.c1 END) NOT BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))AND(t0.c2)))AND(t0.c0))) AND ((((t0.c0, t0.c2, t0.c2))>=((t0.c2, t0.c0, t0.c1))))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='0.40431721371528295' WHERE (- (((t0.c2)<<(t0.c0)))); -- 0ms;
UPDATE t0 SET c0=''; -- 0ms;
UPDATE t0 SET (c1, c2)=(x'', 0.35018176271882284) WHERE load_extension(CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END, ((t0.c2)*(t0.c2))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=-1.16698942E9; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2, c2)=(NULL, NULL, '0.5890422079235952') WHERE (~ (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1413593230' WHERE ((((((((((((NULL)AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(((0.8460789200691271) IS TRUE))))OR(((t0.c0)GLOB(t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8082363076152382; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-126776944', c0=NULL; -- 0ms;
UPDATE t0 SET c2=NULL WHERE (- (t0.c0 COLLATE BINARY)); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(x'10d2'); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(-1.04058436E9); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0Xffffffffb4523804; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(0Xe4984a9, 0.6783319120526818) WHERE ((((((((((((((((t0.c0)AND(t0.c1)))AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))OR(((0.3295249521405099)||(t0.c0)))))AND(((t0.c1)=(t0.c0)))))AND(CHANGES())))OR(t0.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE '-54117247'; -- 0ms;
UPDATE OR IGNORE t0 SET c1='1229407023'; -- 0ms;
UPDATE t0 SET c2=NULL, c0=0.00997329041768169, c0=NULL WHERE ((((((((((((t0.c1)AND(t0.c2)))OR(t0.c0)))OR(t0.c2)))AND(0x38119efa)))OR(t0.c1)))OR(((t0.c2) NOT NULL))); -- 0ms;
UPDATE t0 SET (c1)=('-463728356'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-501749733') WHERE (NOT (((t0.c1)<=(t0.c0)))); -- 0ms;
UPDATE OR ABORT t0 SET c2=-969954393, c1=0.37545240788374856, c0=0Xffffffffd9f6f39b; -- 0ms;
UPDATE OR REPLACE t0 SET c2=0.6284717392996066; -- 0ms;
UPDATE t0 SET (c1)=(0.05676392455791934) WHERE (~ (((t0.c2)+(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('-133753219') WHERE ((((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))!=(((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))); -- 0ms;
UPDATE t0 SET c0=x''; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE IFNULL(((((t0.c0)AND(t0.c0)))AND(t0.c2)), ((((t0.c0)AND(t0.c2)))AND(t0.c1))); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c2)=(x'', x''); -- 0ms;
UPDATE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0Xffffffffcae89506); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=x''; -- 0ms;
UPDATE OR FAIL t0 SET c2=x'', c2=0.6251463128423645, c0='567543258', c1=NULL WHERE ((CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) IS FALSE); -- 0ms;
UPDATE OR ABORT t0 SET c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE ((t0.c0 COLLATE BINARY)%(((t0.c2)&(t0.c0)))); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(419583605) WHERE (~ (RTRIM(0.29641307683688833))); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(0Xffffffffcae89506) WHERE ((- (t0.c0)) IN ()); -- 0ms;
UPDATE OR FAIL t0 SET c1=x'78d2', c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2='j' WHERE ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY; -- 0ms;
UPDATE OR ABORT t0 SET c1='-748422206', c1=-17023664; -- 0ms;
UPDATE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2, c1)=(0.9598205971267167, '2010683960', '-791763594'); -- 0ms;
UPDATE OR FAIL t0 SET c1=NULL WHERE t0.c2; -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c1)=(x'1040', '-1550448547') WHERE t0.c2; -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-6.70912915E8); -- 1ms;
UPDATE t0 SET (c2, c1)=(-681329849, 0.037252633644186184); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c2='-1214145257' WHERE (CASE WHEN t0.c0 THEN t0.c1 END IN ((NOT (t0.c0)))); -- 1ms;
UPDATE OR ABORT t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c0='f}c	F', c2='A붧'; -- 0ms;
UPDATE OR IGNORE t0 SET c1='' WHERE (NOT ((t0.c2 IN ()))); -- 0ms;
UPDATE t0 SET (c1)=('1'); -- 0ms;
UPDATE t0 SET (c0)=('JK瓇<[O'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(8.65732869E8); -- 0ms;
UPDATE t0 SET (c0)=('-194233934'); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE (((t0.c2)) BETWEEN ((t0.c0)) AND ((CAST(t0.c1 AS REAL)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.03654213684863694, c0=0.750593152289904, c0=x'1e55' WHERE (+ (CASE WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(0.761157529218356); -- 0ms;
UPDATE OR REPLACE t0 SET c0=x''; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(NULL) WHERE ((json_object(t0.c0, t0.c0))<(t0.c1 COLLATE NOCASE)); -- 0ms;
UPDATE t0 SET (c0)=(-1.741334366E9) WHERE ((CASE t0.c2  WHEN t0.c1 THEN t0.c2 END)/(STRFTIME(t0.c2, t0.c2, t0.c1))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x'') WHERE '௅H'; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=('514746981'); -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, 0.8153743498622456); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c2=x'', c0=NULL WHERE ((CAST(t0.c0 AS INTEGER)) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((t0.c2) BETWEEN ((- (t0.c2))) AND (ABS(DISTINCT t0.c0))); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2='?pj\jw&o' WHERE CASE WHEN (((t0.c1, t0.c1, t0.c2))>((t0.c1, t0.c2, t0.c0))) THEN ((((t0.c0)OR(t0.c2)))OR(t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'97df'; -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c0)=(NULL, -545682992) WHERE ((TYPEOF(t0.c0)) BETWEEN (x'') AND ((t0.c0 IN (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c2='5N呿x' WHERE ((((t0.c1) NOTNULL)) NOT BETWEEN ((+ (t0.c0))) AND (((((t0.c1)AND(t0.c2)))OR(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0Xffffffffffffffff; -- 0ms;
UPDATE OR IGNORE t0 SET c1='' WHERE CASE WHEN COALESCE(t0.c2, t0.c2) THEN ((t0.c0)+(t0.c0)) ELSE COALESCE(t0.c1, t0.c0) END; -- 0ms;
UPDATE OR FAIL t0 SET c0=NULL WHERE DATETIME(t0.c0, (((t0.c0))<=((t0.c2))), ((t0.c1)>>(t0.c0)), ((t0.c0)>>(t0.c2)), t0.c1); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('640026001'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=1.609208033E9 WHERE ((((t0.c0 COLLATE RTRIM)AND(((t0.c0) ISNULL))))OR(((t0.c2)>(t0.c0)))); -- 0ms;
UPDATE t0 SET (c1)=(x''); -- 0ms;
UPDATE t0 SET (c0)=('-1230332687') WHERE (((t0.c2) NOTNULL) IN (0x5d3cff84)); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c2, c2)=(NULL, 0.29552868246238495, x'') WHERE (TOTAL_CHANGES() IN ()); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x'') WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))>=((((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'735b'; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('-746302729') WHERE ((t0.c0)<=((NOT (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.09839305861247394 WHERE ((((((x'')OR(t0.c2)))OR(t0.c0))) NOT BETWEEN ((+ (t0.c1))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)); -- 0ms;
UPDATE t0 SET (c1)=('-581346814'); -- 1ms;
UPDATE t0 SET (c2, c2)=('', '-258540831'); -- 0ms;
UPDATE OR REPLACE t0 SET c1=',Mf\' WHERE ((((((t0.c1)AND(t0.c1)))AND(t0.c0)))OR(((t0.c0)>=(t0.c2)))); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c0)=('ho', 'A') WHERE ((((t0.c0)LIKE(t0.c2))) ISNULL); -- 0ms;
UPDATE t0 SET c1=NULL, c1=0.5954207426009773; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.6329109466559896, c2='&*]' WHERE (- (NULLIF(DISTINCT t0.c2, t0.c0))); -- 0ms;
UPDATE OR REPLACE t0 SET c1='-641395260', c1=''; -- 0ms;
UPDATE OR IGNORE t0 SET c1='0.454649257983749', c0=NULL; -- 0ms;
UPDATE t0 SET c1=NULL, c1='-1103102844'; -- 0ms;
UPDATE OR ABORT t0 SET c0=59089643 WHERE t0.c2; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE CAST(((((t0.c1)AND(t0.c0)))AND(t0.c1)) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('H-V㳱fY8'); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE 0X4c2f0945 COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c2='0.10006185393797862' WHERE ((((t0.c2) NOT BETWEEN (1.619504165E9) AND (t0.c0)))!=(NULL)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c0=0x35650965, c1=0.569839886791099 WHERE (NOT (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((((t0.c1) ISNULL))AND((+ (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE CASE t0.c0  WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN ((t0.c0)*(t0.c2)) ELSE ((0Xffffffff851e30d6) BETWEEN (t0.c0) AND (t0.c2)) END; -- 0ms;
UPDATE t0 SET (c0)=(-1.507384613E9) WHERE TRIM(DISTINCT ((t0.c1) ISNULL)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.49161063393635007 WHERE ((TRIM(t0.c2))%(CASE WHEN t0.c0 THEN t0.c2 END)); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(NULL) WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE (((t0.c0)) NOT BETWEEN ((((t0.c2) IS FALSE))) AND ((t0.c0))); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0x485e52b0); -- 0ms;
UPDATE t0 SET c0=x'5f46', c2=x'', c2=-354928287 WHERE ((CAST(t0.c1 AS INTEGER)) NOT NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE t0 SET c0=x'36ec'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0Xffffffffea90f93c, c0='-2062348023', c2=''; -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('\nNA\nv([+') WHERE 'C>'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c1='\niY?[10a9' WHERE ((t0.c1) ISNULL) COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t0 SET c0='', c2=500315919, c2='-1836411305' WHERE (+ ((((t0.c2))<>((t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('^O'); -- 0ms;
UPDATE OR ABORT t0 SET c1=0.6768211688442441; -- 0ms;
UPDATE OR FAIL t0 SET c0=',wl2!]g' WHERE ((t0.c2) NOT BETWEEN ((t0.c1 IN ())) AND (t0.c0)); -- 0ms;
UPDATE OR REPLACE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.4014215294335539); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'6eb322f5'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=0.8440594023943373; -- 0ms;
UPDATE OR REPLACE t0 SET c2='-1420931795'; -- 0ms;
UPDATE OR ABORT t0 SET c1=x'' WHERE (+ ((('sC?o') BETWEEN (t0.c2) AND (t0.c1)))); -- 0ms;
UPDATE t0 SET c2=0.4511316459958433, c1=NULL, c0='-1929477441' WHERE ((t0.c0) NOTNULL) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.5188262319015499; -- 1ms;
UPDATE OR ABORT t0 SET (c2)=(x'6117') WHERE ((((((0.8234121294792625) IS TRUE))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)); -- 0ms;
UPDATE t0 SET (c2)=(0.4644874574631732) WHERE CASE (((t0.c2))==((t0.c0)))  WHEN ((((((((t0.c2)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c2)) THEN json_valid(t0.c1) WHEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) THEN CAST(t0.c2 AS TEXT) WHEN t0.c0 COLLATE BINARY THEN t0.c0 ELSE ((((t0.c1)OR(t0.c2)))AND(t0.c2)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0, c0)=('0.8483735525072326', '904566751', -1328412148) WHERE (((((t0.c1)=('-468229984')), CAST(t0.c1 AS TEXT), INSTR(t0.c0, t0.c1)))>(((NOT (t0.c1)), t0.c2, (t0.c1 IN ())))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(NULL) WHERE CASE WHEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) THEN (NOT (t0.c0)) END; -- 0ms;
UPDATE t0 SET c1='ySo9thRd''', c0=''; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0.726856129229735) WHERE ((((~ (t0.c0)), (- (x'')), (- (t0.c0))))<=((((t0.c1)AND(t0.c1)), json_object(NULL, t0.c1), ((t0.c0)AND(t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0Xfffffffffed38360, c2=x''; -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c1)=(NULL, '-382570502'); -- 0ms;
UPDATE t0 SET (c1, c0)=(NULL, '1500301874') WHERE CASE t0.c2 COLLATE NOCASE  WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)+(0.19424087104112342)) END; -- 0ms;
UPDATE t0 SET c1='1624984051'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('<LW*HaZL)') WHERE CASE WHEN 0.16228351446012512 THEN ((t0.c0) IS TRUE) END; -- 0ms;
UPDATE OR REPLACE t0 SET c1=x'6f89', c2=0.6436582356013029; -- 0ms;
UPDATE OR FAIL t0 SET c1='jvI9E', c0=385512153 WHERE CHAR((NOT (t0.c2)), (NOT ('-740452187')), (('新SB.u1Dn')GLOB(t0.c0))); -- 0ms;
UPDATE OR ABORT t0 SET (c2, c0)=(x'', -884148267); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=('', '') WHERE CASE 0.10081398225628846  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((((((((t0.c1)OR(t0.c2)))OR(t0.c2)))AND(t0.c0)))AND(t0.c2)) WHEN COALESCE(DISTINCT t0.c0, t0.c0) THEN (((t0.c1))<((t0.c2))) WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c1)>=(t0.c2)) END; -- 0ms;
UPDATE OR ABORT t0 SET (c2, c1)=('[M\9產p?\U', x'') WHERE CASE WHEN (t0.c1 IN ()) THEN ((((((((((((t0.c1)OR(t0.c2)))AND(t0.c1)))AND(NULL)))OR(t0.c2)))AND(t0.c1)))AND(t0.c1)) WHEN (~ (t0.c1)) THEN (~ (t0.c0)) WHEN (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) THEN t0.c0 COLLATE NOCASE ELSE CASE t0.c1  WHEN t0.c2 THEN t0.c2 END END; -- 1ms;
UPDATE OR ABORT t0 SET c1='-497272368'; -- 0ms;
UPDATE t0 SET (c1)=(x'd5d7'); -- 0ms;
UPDATE t0 SET c1='372685195' WHERE '-468229984'; -- 0ms;
UPDATE t0 SET (c0)=('0.21073249824504958'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(''); -- 0ms;
UPDATE t0 SET (c0)=('-1214145257') WHERE (((((t0.c0))>=((t0.c1))))||((NOT ('654413501')))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2='1087754694' WHERE (CAST(t0.c1 AS TEXT) IN ()); -- 0ms;
UPDATE t0 SET (c0, c1)=('0.8865091517665575', '{ovO{biw陗}癣') WHERE CAST(t0.c1 AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=4.55974699E8 WHERE t0.c1; -- 0ms;
UPDATE t0 SET c2=x'', c2=NULL, c1='MNZ_Ou+'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE (((NOT (t0.c1)))IS NOT((('v(') BETWEEN (t0.c1) AND ('-333569769')))); -- 0ms;
UPDATE t0 SET (c2)=('-874727024') WHERE ((t0.c2 COLLATE NOCASE) BETWEEN ((t0.c1 IN ())) AND (((t0.c2) ISNULL))); -- 0ms;
UPDATE t0 SET c0=NULL, c2=0.8773053814635546; -- 0ms;
UPDATE OR IGNORE t0 SET c1='!h\gᆓ(', c2='-1931909944' WHERE ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (((t0.c0)AND(t0.c2))) AND (STRFTIME(-418747590, t0.c0, x'', t0.c1, t0.c1))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.016203712775584855, c1=0xffffffffb1426b93 WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-1567099446'); -- 1ms;
UPDATE OR ABORT t0 SET (c1, c1, c0)=('-418747590', 0x5441b88e, 'uf*i-Infinity.շ'); -- 0ms;
UPDATE t0 SET c0='' WHERE ((((t0.c0)+(NULL)))+((t0.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'add24391') WHERE ((CASE t0.c1  WHEN t0.c0 THEN x'' ELSE t0.c1 END)-(((((((((t0.c0)OR(t0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c2)))); -- 0ms;
UPDATE OR ABORT t0 SET c0=x'' WHERE (((((t0.c0))<=((t0.c1)))) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(x'', 0.7474760932871204); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, 0Xffffffffac859a9e) WHERE (NOT (CAST(t0.c1 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1, c0)=(x'bc1e', '0.36784019474856733', NULL); -- 0ms;
UPDATE OR ABORT t0 SET c1=1.934687099E9, c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0X4e625245); -- 0ms;
UPDATE t0 SET c2='-1022008187'; -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c1, c1)=(NULL, NULL, NULL); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x'e89a') WHERE t0.c1; -- 0ms;
UPDATE t0 SET c1=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.011033519809560577); -- 0ms;
UPDATE t0 SET (c2, c1)=(0.23718372931828358, x'db7e') WHERE CASE (t0.c1 IN ())  WHEN (+ (t0.c0)) THEN 0X33b4cc55 END; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=NULL, c1=1.680968858E9; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('Ipmd>qf') WHERE RTRIM(t0.c1); -- 0ms;
UPDATE OR ABORT t0 SET c0=0.49613502931401965 WHERE (CASE WHEN t0.c1 THEN t0.c0 END IN (((t0.c0)LIKE(t0.c1)))); -- 0ms;
UPDATE OR REPLACE t0 SET c0=0.33417855710177047 WHERE -1479148697; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.17683898224953398) WHERE x''; -- 0ms;
UPDATE t0 SET (c1)=(449549615); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'8974' WHERE ((CAST(t0.c0 AS REAL))>=(CAST(t0.c2 AS BLOB))); -- 0ms;
UPDATE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=-679568385; -- 0ms;
UPDATE OR REPLACE t0 SET c2=x'', c0=0.5885459209795063 WHERE ((((t0.c0)OR(t0.c2)))OR(t0.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=('-539131840', x'') WHERE CASE WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c1)/(t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1501144637); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.4168520666638088); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(NULL, '-17023664'); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=('q'); -- 0ms;
UPDATE OR REPLACE t0 SET c2=x'588a'; -- 1ms;
UPDATE t0 SET (c0)=(1615318384) WHERE (((NOT (x'')))<(('{\r' IN ()))); -- 0ms;
UPDATE t0 SET (c2)=('8ssxfr竕'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.17627132008610202); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c1=0X7e55a7a2; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'', c2=x'0312' WHERE (- (t0.c2)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.43887395994483647; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-1479148697); -- 0ms;
UPDATE t0 SET c1=x'7506'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c2)=(x'', '0.9888741725031197', '(!)') WHERE (((((t0.c2 IN ()))AND(CASE WHEN t0.c2 THEN t0.c1 WHEN x'46d6' THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)))AND(t0.c0 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-130338938' WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x''); -- 0ms;
UPDATE t0 SET c2=x'', c2=x'', c0=0.3356432232419658 WHERE ((((t0.c2) NOT BETWEEN (t0.c0) AND (NULL))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2, c0)=(x'', 0Xffffffffc78a4170, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-1321047149' WHERE ''; -- 0ms;
UPDATE t0 SET (c2)=('a궝') WHERE ((CAST(t0.c2 AS BLOB)) IS TRUE); -- 1ms;
UPDATE t0 SET c0=x'9531' WHERE ((((((((t0.c0)OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0 COLLATE RTRIM)); -- 0ms;
UPDATE t0 SET (c1)=(0.02605872841676793); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.5978494166100553) WHERE (((t0.c2)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))); -- 0ms;
UPDATE t0 SET (c1, c1)=(x'978ab192', 0.7695214577262337) WHERE ((NULL) BETWEEN (t0.c0) AND (((t0.c0)+(t0.c1)))); -- 0ms;
UPDATE t0 SET (c0)=('-180274818') WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.22641979889296482) WHERE ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))AND(t0.c0 COLLATE RTRIM)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.8234408132819895, c1='-74881150'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.5885459209795063); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c1, c0)=('', '', NULL); -- 0ms;
UPDATE OR FAIL t0 SET c1=x'', c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1.022008187E9) WHERE ((((t0.c1)LIKE(t0.c1)))AND((t0.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.20241229193842125); -- 0ms;
UPDATE OR REPLACE t0 SET c2=x'' WHERE CASE WHEN ((t0.c2)+(t0.c0)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)) ELSE CAST(t0.c2 AS TEXT) END; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.10006185393797862 WHERE t0.c0; -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c0)=(NULL, x'91e9'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1386351627); -- 0ms;
UPDATE t0 SET (c0)=(0x1b0ff3af); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE t0.c0; -- 0ms;
UPDATE t0 SET (c1, c1, c1)=('Bts^!Nm', '-1507384613', '-1102717568'); -- 0ms;
UPDATE t0 SET (c1)=(x'') WHERE '-890727162'; -- 0ms;
UPDATE OR IGNORE t0 SET c2='', c1='E{'; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL) WHERE t0.c0 COLLATE NOCASE; -- 0ms;
UPDATE t0 SET (c2, c1)=('514746981', x''); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-2054460691'; -- 0ms;
UPDATE t0 SET (c2, c0)=('*', 'f딆0姜V''x&') WHERE ((t0.c2)GLOB((((0Xffffffff9baedd87, t0.c2, t0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c1, t0.c1, t0.c2))))); -- 0ms;
UPDATE t0 SET (c1, c0)=(x'', -6.79568385E8) WHERE (((t0.c1)) NOT BETWEEN ((((t0.c2) ISNULL))) AND (((t0.c2 IN ())))); -- 0ms;
UPDATE t0 SET (c0, c0, c0)=(0.6568601195193906, 0.3898503082511262, 0.02605872841676793) WHERE ((((t0.c2) BETWEEN (x'') AND (t0.c2)))<((+ (t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.8456471031341342) WHERE ((((x'')AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)-(t0.c2)))); -- 0ms;
UPDATE t0 SET (c1)=(x''); -- 0ms;
UPDATE t0 SET c0='201870870' WHERE CASE 0.6612241001662932  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) END; -- 0ms;
UPDATE t0 SET (c1)=('n[r怙Eg') WHERE CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0xffffffff9bef20c7 WHERE ((((((t0.c2)+(t0.c1)))OR((t0.c0 IN ()))))OR(LIKELIHOOD(DISTINCT t0.c2, 0.15037232163920178))); -- 0ms;
UPDATE t0 SET c0=0.6055411739463464; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0x2a2508cf WHERE ((((t0.c1)-(t0.c1))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE (((((t0.c2)||(t0.c1))))<=((((t0.c0)LIKE(0.5469135113312917))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(0xffffffffaba5e339, NULL) WHERE CASE WHEN ((t0.c1) NOTNULL) THEN ((t0.c1) IS FALSE) ELSE ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) END; -- 0ms;
UPDATE OR ABORT t0 SET (c0, c0, c2)=(NULL, -2.054460691E9, '-1836411305') WHERE ((((t0.c1) IS FALSE))LIKE(TYPEOF(t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2='2140148599', c2=-539301879, c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c2='0.9534310086299521' WHERE (~ (t0.c1 COLLATE BINARY)); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=('-1934668227') WHERE LIKELIHOOD(DISTINCT ((t0.c0)%(t0.c1)), 0.2730439225724658); -- 0ms;
UPDATE OR FAIL t0 SET (c2, c2)=(0.8401736184030881, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(-1075836124, 0.25086627511624815) WHERE (((+ ('-1104206407')))<((('-505329960')|('777304557')))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE (t0.c2 IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('h8XT') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE CASE (((t0.c2))<=((t0.c0)))  WHEN ((('ksb\i9', t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, t0.c1, t0.c0)) AND (('-1823197555', t0.c2, t0.c1))) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE ((t0.c1) NOT BETWEEN ('') AND (t0.c0)) END; -- 1ms;
UPDATE OR REPLACE t0 SET c1=0.1248409457025782 WHERE (- (((((t0.c2)AND(t0.c1)))AND(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c0)=(NULL, 0.6434140652094559, 0.7458988439663711); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(-645322400, '1492658786'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=' n	Xoi&V*'; -- 0ms;
UPDATE OR FAIL t0 SET (c2)=('bminutes2') WHERE ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c2) NOTNULL)) AND ((((t0.c2))>((t0.c1))))); -- 0ms;
UPDATE t0 SET c1=1.900823478E9 WHERE ((CAST(t0.c1 AS NUMERIC))IS NOT(DATETIME(t0.c0, t0.c0, t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('/膨4Xxp'); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE (((((NOT (t0.c2)))OR(((((t0.c0)OR(t0.c1)))AND(t0.c0)))))OR(((t0.c2) NOTNULL))); -- 0ms;
UPDATE t0 SET c2=0.6680104448985579 WHERE CASE WHEN json_quote(t0.c2) THEN (NOT (t0.c1)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0x4f2767c1) WHERE (+ (((t0.c1)-(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE ((((t0.c1) NOTNULL)) BETWEEN (LOWER(t0.c1)) AND ((- (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE CAST(((((t0.c1)OR(t0.c0)))OR(t0.c0)) AS INTEGER); -- 0ms;
UPDATE t0 SET c0='ﭧ\n%aqk9' WHERE ((((((t0.c2)AND(t0.c0)))AND(t0.c2)))+((('') ISNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE (((+ (t0.c2))) NOT BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND (CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c1)=(NULL, NULL, 1.691883413E9) WHERE CASE ((t0.c2)/(t0.c0))  WHEN ((t0.c2) ISNULL) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c0 END END; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL, c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0Xa95be85) WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE '?S5e*>ke'; -- 0ms;
UPDATE t0 SET c0='W镨', c2=0.6021446341457402; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1, c2)=('', 'WB', '3<yl') WHERE (((((t0.c1) IS TRUE)))>=((CAST(t0.c2 AS TEXT)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-_RM', c0='0.7824291200071842', c0=-1e500 WHERE ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END) NOT NULL); -- 0ms;
UPDATE t0 SET c1=0.8445492867207995; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.7623853978159173; -- 0ms;
UPDATE OR ABORT t0 SET c0=1.682657689E9 WHERE '-1847788723'; -- 0ms;
UPDATE t0 SET c1='#C'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR FAIL t0 SET c0='-1558758597', c1='' WHERE (((t0.c0)<=(NULL)) IN ()); -- 0ms;
UPDATE t0 SET (c2)=('qN.-y8e26') WHERE (CAST(t0.c2 AS NUMERIC) IN ()); -- 0ms;
UPDATE t0 SET (c2, c1)=(NULL, NULL); -- 0ms;
UPDATE t0 SET (c1)=(x''); -- 0ms;
UPDATE t0 SET c0='b2'; -- 0ms;
UPDATE t0 SET c1='QOAMR䄃8' WHERE ((CAST(t0.c1 AS TEXT)) IS FALSE); -- 0ms;
UPDATE t0 SET c0=NULL WHERE ((t0.c2 IN (t0.c1, t0.c0)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c2='庚7' WHERE CASE CAST(t0.c1 AS REAL)  WHEN t0.c2 COLLATE NOCASE THEN ((t0.c1)-(t0.c0)) ELSE CAST(t0.c1 AS NUMERIC) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.9486448898688302; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=('	<J96-mO'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(1980270766) WHERE ((((CAST(t0.c2 AS BLOB))AND((t0.c0 IN ()))))AND(LIKELY(DISTINCT t0.c1))); -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL WHERE x'11fd'; -- 0ms;
UPDATE OR ABORT t0 SET (c1, c1)=(0.015914431252698646, '') WHERE ((t0.c2 IN ()) IN ()); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=('-17023664') WHERE ((t0.c1 COLLATE NOCASE) NOT NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE CASE WHEN ((t0.c1) IS TRUE) THEN ((((t0.c2)OR(t0.c1)))OR(x'')) END; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0x64d81795); -- 0ms;
UPDATE t0 SET c0=NULL, c1=NULL; -- 0ms;
UPDATE OR ABORT t0 SET c2=0.41029006319305605 WHERE CAST((+ (t0.c0)) AS INTEGER); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=NULL, c1='0.6784000704699039', c1='-1368246543'; -- 0ms;
UPDATE OR IGNORE t0 SET c0='-359597764' WHERE CAST(0.5914909832557175 AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1, c2)=(1521229716, '\n', x''); -- 1ms;
UPDATE OR IGNORE t0 SET c1=x'4034' WHERE (((NOT (t0.c2)))*(t0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('', ' \r6O}?x/⿍') WHERE ((x'') IS FALSE) COLLATE RTRIM; -- 1ms;
UPDATE OR IGNORE t0 SET (c1, c0, c0)=(x'c1a9', NULL, 'eq'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0x4d3d586a); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE IFNULL(t0.c0, t0.c0) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c2=0X6785a030, c0=-602705800 WHERE ((((((((((t0.c1) BETWEEN (t0.c2) AND ('')))AND(((t0.c0)<(t0.c1)))))AND(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(((t0.c2)/(t0.c2)))))AND(((((t0.c2)OR(t0.c0)))AND(t0.c0)))); -- 1ms;
UPDATE OR IGNORE t0 SET c2=NULL, c1=NULL, c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-930388785); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x'a49c'); -- 0ms;
UPDATE t0 SET c1=0.9291988847835909 WHERE CAST(((t0.c2)/(t0.c2)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.8393127355298119; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('-1960110509') WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c2)=(0x2f377fe8, '-1461673501', x''); -- 1ms;
UPDATE t0 SET (c1, c1, c2, c2)=(0x62086299, NULL, 'u_', NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=('1080529238'); -- 0ms;
UPDATE t0 SET (c2)=(0.3946956941960219) WHERE CAST(TYPEOF(t0.c1) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.4773817452659527) WHERE (((t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND ((((t0.c2)<<(t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.9306997772907776 WHERE CASE 0.057316106198744055  WHEN (((t0.c0, t0.c1, 0Xffffffff9ebb28bc)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c1, t0.c0, t0.c1))) THEN UPPER(t0.c1) WHEN (((t0.c1, t0.c0, 'D氦{⢼kg燇''a', t0.c1, t0.c0))==((t0.c0, t0.c1, t0.c1, t0.c0, t0.c0))) THEN ((t0.c1)<(t0.c2)) WHEN (t0.c0 IN ()) THEN ((t0.c0)=(t0.c1)) ELSE LOWER(t0.c2) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2, c1)=(NULL, x'', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'725aef10'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(x'', '	y%6e* ') WHERE (((+ (t0.c1))) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('^W') WHERE t0.c0; -- 0ms;
UPDATE t0 SET c1='#%WT'; -- 0ms;
UPDATE t0 SET c1=1.096495108E9 WHERE ((load_extension(t0.c0, 0x46c3dee4)) NOT BETWEEN ((t0.c1 IN ())) AND ((0.2773937962303481 IN (t0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.9433066261067847; -- 0ms;
UPDATE OR REPLACE t0 SET c0=NULL WHERE (((CAST(t0.c0 AS REAL)))!=((((t0.c1) NOT BETWEEN (-1908561581) AND (t0.c2))))); -- 0ms;
UPDATE t0 SET c2=x'', c1=NULL, c1=0x6a5a318b WHERE ((((((t0.c1)OR('281466826')))OR(t0.c2))) NOT BETWEEN ((t0.c2 IN (t0.c1, t0.c1))) AND (((t0.c1)>=(t0.c1)))); -- 0ms;
UPDATE t0 SET c2=NULL WHERE t0.c1; -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c2)=('-Q싴8'); -- 0ms;
UPDATE t0 SET (c2)=(0.797945436717972); -- 0ms;
UPDATE t0 SET (c0, c1)=(x'', x'd9d3b85d'); -- 0ms;
UPDATE OR FAIL t0 SET c2='\g' WHERE ((TYPEOF(DISTINCT t0.c1))=(t0.c2 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0x6c6625c7); -- 0ms;
UPDATE t0 SET c0=x'', c0=-1709795198 WHERE CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN 0.2607964912601082 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2, c2)=('-418747590', 0x39c3402c, NULL) WHERE (NOT (((t0.c2) IS TRUE))); -- 0ms;
UPDATE OR REPLACE t0 SET c2=NULL; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('-1606798135') WHERE ((CASE WHEN t0.c1 THEN t0.c1 END) NOT BETWEEN (NULL) AND (CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('696345341') WHERE (((((NOT (t0.c2)))AND(t0.c2)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN x'' WHEN t0.c1 THEN t0.c0 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1, c2, c1)=(0.3132897297038838, 0xfffffffff0f5949b, 0X1eae6a65, x'2bff'); -- 0ms;
UPDATE t0 SET c0='-743759920', c1=NULL WHERE ((((t0.c1)<<(1.680968858E9))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (CAST(t0.c0 AS TEXT))); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0, c2)=('1513971533', '-1166989420', '-306388018') WHERE ((((((t0.c2)OR(t0.c1)))AND(t0.c2))) ISNULL); -- 0ms;
UPDATE OR REPLACE t0 SET c1='881366376'; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(0.3326494305053548); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE CAST(((t0.c1)<<(t0.c2)) AS BLOB); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c1)=('136741819', '-447791831'); -- 1ms;
UPDATE OR REPLACE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.5687392450868234) WHERE (((((t0.c1 IN (t0.c0)))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)))AND(UNLIKELY(DISTINCT t0.c0))); -- 0ms;
UPDATE t0 SET (c0, c0)=(1619504165, 0x4cfe8dd0); -- 0ms;
UPDATE OR IGNORE t0 SET c1=-1.23880245E9, c2='1IKID~jX' WHERE TYPEOF(CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1e500' WHERE ((CASE WHEN t0.c0 THEN t0.c2 END)%(((t0.c1) NOT NULL))); -- 0ms;
UPDATE t0 SET c2='', c2=0.7414482981008799; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.14836164618517855); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=('', NULL) WHERE 0.9949921091922034; -- 0ms;
UPDATE t0 SET (c2)=(-299200516) WHERE CAST(((((t0.c0)AND(t0.c2)))OR(t0.c1)) AS NUMERIC); -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(NULL) WHERE CASE CASE t0.c1  WHEN t0.c0 THEN t0.c1 END  WHEN NULL THEN LIKELIHOOD(DISTINCT t0.c1, 0.18560965273111008) END; -- 0ms;
UPDATE OR ABORT t0 SET c1='>\n'; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(0.9479876873293223) WHERE (t0.c0 COLLATE BINARY IN (t0.c0 COLLATE BINARY, ((t0.c2)&(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='777097725' WHERE ((t0.c2)/(CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-670912915'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.35785271535993624 WHERE ((t0.c1)!=(t0.c0)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.22123400519432224; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE CAST((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB); -- 0ms;
UPDATE t0 SET c1=0.2854503574194569, c0=NULL, c1='-1588820994' WHERE ((((((t0.c1)AND(t0.c2)))AND(t0.c2)))!=(358060655)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE (NOT (x'c689')) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=('?3', x''); -- 0ms;
UPDATE t0 SET (c0)=(0.2398495205834298); -- 0ms;
UPDATE t0 SET (c2)=(0xffffffffec1e2117); -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c1, c0)=('287231405', 1214141104, x''); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'', c1=0.36784019474856733; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(NULL) WHERE (((((((t0.c0)AND(t0.c1)))AND(t0.c2))))<=((((t0.c0) BETWEEN (t0.c2) AND (t0.c1))))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0='rh'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.4141076968443378 WHERE ((t0.c0) NOT NULL) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(9.73683166E8); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=('㘵f'); -- 0ms;
UPDATE t0 SET c0=NULL, c1=''; -- 1ms;
UPDATE t0 SET (c0, c2)=(x'820a', '*,') WHERE ((+ (t0.c0)) IN ()); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=('1935083784'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.8483735525072326 WHERE ((CAST(0.4242959161417844 AS BLOB)) NOT BETWEEN (((t0.c2)GLOB(t0.c1))) AND (((t0.c2)*(t0.c0)))); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c1)=(x'', NULL) WHERE (NOT ((+ (t0.c1)))); -- 1ms;
UPDATE OR IGNORE t0 SET c1=1.736735415E9, c2='-1294677640'; -- 0ms;
UPDATE t0 SET (c2)=(-1630084282) WHERE ((((((t0.c2)<(t0.c1)))OR(CAST(t0.c0 AS TEXT))))OR(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)); -- 0ms;
UPDATE OR ABORT t0 SET c1=0.8645100725809522 WHERE ((((NULL) BETWEEN (t0.c1) AND (t0.c0)))=((((t0.c1))<=((t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=('230679944') WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET c2='1691883413' WHERE ((((((((t0.c0)OR(0.7379216229189851)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t0 SET (c1, c0)=('', 9.73683166E8); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(-88883181); -- 0ms;
UPDATE t0 SET c0=x'3577' WHERE ((t0.c1)<>(CASE WHEN '1672414087' THEN t0.c1 ELSE t0.c1 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('fN'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-497272368) WHERE t0.c2; -- 0ms;
UPDATE t0 SET c1=NULL, c2=NULL WHERE ((t0.c1)LIKE(0.3221379427750912)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.08055038607273224; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('670061160'); -- 1ms;
UPDATE OR FAIL t0 SET c1=0x6a4995eb, c1='1388460355'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=('', 0.6560182248627708) WHERE TRIM(DISTINCT ((((0.875475719493153)AND(t0.c2)))AND(t0.c1)), ((t0.c1)<<(t0.c2))); -- 0ms;
UPDATE OR IGNORE t0 SET c2='1682657689' WHERE (~ (((((t0.c0)OR(t0.c0)))OR(t0.c1)))); -- 0ms;
UPDATE OR FAIL t0 SET c2='>.XSv'; -- 0ms;
UPDATE t0 SET (c1)=('-1082382466') WHERE CAST(((t0.c1) ISNULL) AS NUMERIC); -- 0ms;
UPDATE OR ABORT t0 SET c1=NULL; -- 0ms;
UPDATE t0 SET (c0)=(253899656) WHERE CASE WHEN ((t0.c0)GLOB(t0.c0)) THEN CAST(t0.c2 AS TEXT) END; -- 0ms;
UPDATE t0 SET c1=-2055307893 WHERE (~ ((((t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c0, 0.5470996840348413, t0.c0))))); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0.09179651078768658) WHERE '419583605'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('0.43589143795882646') WHERE HEX(CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.5399279617799727, c2=NULL, c0=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c1)=(NULL, NULL) WHERE CASE t0.c1  WHEN x'' THEN ((t0.c2)|(t0.c0)) ELSE (x'c187' IN ()) END; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x'') WHERE 'D'; -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE ((((- (t0.c2))))<>(((NOT (t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0='0.6554206738439937', c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.3440980382546468); -- 0ms;
UPDATE t0 SET c1='ꕶ8' WHERE CASE HEX(DISTINCT 0.9321003742471129)  WHEN x'' COLLATE BINARY THEN '{}' END; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.4281794346193163) WHERE ((t0.c0 IN (x'')) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c1=-6.79568385E8, c1=x'dc86' WHERE (((t0.c0)AND(t0.c1)) IN ('Y07X噵i\nOm')); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=('-17023664'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.038150582602079486, c2=x'' WHERE CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN ((t0.c2)<<(t0.c2)) THEN CAST(t0.c1 AS TEXT) END; -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE (((t0.c1)/(t0.c0)) IN ()); -- 0ms;
UPDATE t0 SET (c1, c0, c2)=(NULL, '-1713220360', x'ffc6'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c2)=('(.', x'') WHERE (((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((1062959683))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=''; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1146424808' WHERE UNLIKELY(((t0.c2)=(t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-17023664'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE t0 SET (c1)=(0.349120107808485); -- 0ms;
UPDATE t0 SET c2=x'', c1=0.18971553031242394, c0=x'' WHERE ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END) NOT BETWEEN ((((t0.c2, t0.c0, t0.c2, t0.c1, t0.c0, t0.c2, t0.c0))>((t0.c0, t0.c1, t0.c1, t0.c0, t0.c2, t0.c1, t0.c1)))) AND ((~ (t0.c1)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x'db49') WHERE ((NULL)GLOB(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))); -- 0ms;
UPDATE t0 SET c0=NULL, c0='-1670595124' WHERE (((((+ (t0.c2)))OR(t0.c2)))AND(((t0.c1)IS(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c1=0x3a7d9f18 WHERE CASE t0.c1  WHEN (t0.c2 IN ()) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) WHEN ((t0.c2) IS FALSE) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) WHEN '鯿e' THEN ((t0.c1)-(t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c2=134929311; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.6182922253586668 WHERE CASE WHEN t0.c2 COLLATE BINARY THEN (- (t0.c0)) END; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.777566213628357); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((((t0.c2) NOTNULL)) BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.7134658404078673 WHERE (((((x'5489')) BETWEEN ((t0.c1)) AND ((t0.c2))))-(UPPER(-1.415191751E9))); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2, c0)=(x'', '-1490696613', x'9fca'); -- 0ms;
UPDATE OR IGNORE t0 SET c2='n#', c2=0.6705576578679997, c1=726370667 WHERE ((CASE '1497041357'  WHEN t0.c0 THEN t0.c2 END) IS FALSE); -- 0ms;
UPDATE t0 SET c2='\rb' WHERE ((((t0.c0)IS NOT(t0.c0)))/(((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))); -- 0ms;
UPDATE t0 SET c0='1665700961', c0=567543258 WHERE ((((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))AND(((((t0.c2)AND(t0.c0)))AND(NULL)))))OR(((x'') IS FALSE))); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.7906250468900661); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=('WLs', '-1321047149') WHERE ((t0.c2)*(CAST(t0.c2 AS INTEGER))); -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(x'', x'6e82') WHERE (- (COALESCE(DISTINCT t0.c0, t0.c1))); -- 0ms;
UPDATE OR REPLACE t0 SET c1=NULL WHERE ((IFNULL(t0.c2, t0.c1))AND((t0.c2 IN ()))); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('713238183') WHERE ((((t0.c1)LIKE(t0.c1)))/(LAST_INSERT_ROWID())); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('') WHERE CAST(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END AS BLOB); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c2)=(NULL, NULL); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.12329133669087833; -- 0ms;
UPDATE OR IGNORE t0 SET c2='Zv烁5'; -- 0ms;
UPDATE OR REPLACE t0 SET c2='23774765' WHERE (- ((((t0.c1, t0.c1, t0.c2))<((t0.c0, t0.c2, t0.c1))))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-510958216, c2='' WHERE ((t0.c1 COLLATE NOCASE)+(((((t0.c2)OR(t0.c1)))OR(t0.c2)))); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=('-818357787'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.39013884080024885) WHERE t0.c2; -- 0ms;
UPDATE t0 SET (c1)=('1143435893') WHERE ((MAX(t0.c0, t0.c0)) IS FALSE); -- 0ms;
UPDATE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR ABORT t0 SET c1='-513012697', c0=x'' WHERE CAST(t0.c0 AS REAL) COLLATE RTRIM; -- 0ms;
UPDATE t0 SET c2=x''; -- 0ms;
UPDATE OR FAIL t0 SET c2='!-B	mEHd(', c2=NULL WHERE (+ (CASE t0.c0  WHEN t0.c2 THEN t0.c0 END)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE t0 SET (c0, c2, c2)=(NULL, 0.1588434892836037, 1e500) WHERE (((t0.c0)) NOT BETWEEN ((IFNULL(t0.c0, t0.c2))) AND (((t0.c2 IN ())))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8493251195762741, c1=0.6522369770533708; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((((((((((((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c2)))AND((('Sa1O뒗*-')-(t0.c1)))))AND((t0.c0 IN ()))))OR(CAST(t0.c1 AS TEXT))))AND((t0.c0 IN (t0.c0, t0.c1)))))AND(t0.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR FAIL t0 SET (c2, c1)=('-1669458875', 0x5317ffc2); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.6486358340711189; -- 0ms;
UPDATE OR IGNORE t0 SET c2='' WHERE ((t0.c1 COLLATE NOCASE) IS FALSE); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c2)=('K拫*\ᙓ'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(726370667) WHERE (((t0.c1)) BETWEEN ((((t0.c2)>(t0.c0)))) AND (((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c2, t0.c1, t0.c1)))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('1996969600', x'') WHERE ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (x'15df') AND (JULIANDAY(t0.c0, 'U*', t0.c2))); -- 0ms;
UPDATE t0 SET (c2)=(1.885370711E9); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0Xffffffffc18cb285, c1=0.44425225263119716; -- 0ms;
UPDATE t0 SET c0='', c2=NULL, c1='-1999517003'; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(1407452148); -- 0ms;
UPDATE t0 SET (c2, c2)=(NULL, x'a788'); -- 0ms;
UPDATE OR IGNORE t0 SET c1='-513012697' WHERE ((COALESCE(DISTINCT t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))) AND ((((t0.c2))>=((t0.c1))))); -- 0ms;
UPDATE t0 SET c0=0X1016e9f3 WHERE '0\s祿'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.8400901698451294); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE CAST(((('', t0.c1, x''))<((x'', t0.c2, t0.c0))) AS TEXT); -- 0ms;
UPDATE OR ABORT t0 SET (c2)=(0.6839472616251749); -- 0ms;
UPDATE OR FAIL t0 SET c2='541813473'; -- 0ms;
UPDATE OR FAIL t0 SET c2=1.262305631E9; -- 0ms;
UPDATE t0 SET c0='VhvC_(M' WHERE (t0.c1 COLLATE NOCASE IN ()); -- 0ms;
UPDATE t0 SET (c2)=('') WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('', NULL) WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c1=-316653066; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(0xffffffffef264d33, NULL); -- 0ms;
UPDATE OR FAIL t0 SET c2=-1060751541, c1=0.19113162073379708 WHERE (((t0.c1)>>(t0.c2)) IN (t0.c1)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0x5fea90e1) WHERE (((NOT (t0.c2))) BETWEEN (((t0.c2) BETWEEN ('E%') AND (t0.c1))) AND (CASE t0.c0  WHEN -785793603 THEN t0.c2 END)); -- 0ms;
UPDATE t0 SET (c2, c2)=(x'', 0.03305027187579146); -- 0ms;
UPDATE OR ABORT t0 SET c0=0.6641600590221491, c2='435036633' WHERE (~ (t0.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0Xffffffffba712794, c1=x'' WHERE (((((+ ('')))OR(0.06139433024287633)))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END)); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=(x'cc08') WHERE INSTR((t0.c1 IN ()), ((((t0.c0)AND(t0.c2)))AND(t0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c0, c2)=('1885370711', 0.7053516437139115, '', NULL) WHERE 'C1'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'5f51f261') WHERE (~ (((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))); -- 0ms;
UPDATE OR ABORT t0 SET (c0, c2)=(-859433239, '-1823197555'); -- 0ms;
UPDATE OR IGNORE t0 SET c1='19192444', c2=0.7827448447374606, c0=x'' WHERE TRIM(CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE ((CAST(t0.c0 AS TEXT)) BETWEEN (TRIM(t0.c1)) AND ((NOT (t0.c1)))); -- 1ms;
UPDATE OR REPLACE t0 SET c1='391510542'; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(x'') WHERE CAST((t0.c1 IN ()) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
UPDATE t0 SET (c0, c0, c2)=(0.5141301138312471, NULL, x'') WHERE (('	y䆁V')+(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))); -- 0ms;
UPDATE t0 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(x'', NULL) WHERE t0.c2; -- 1ms;
UPDATE OR ROLLBACK t0 SET c0='' WHERE ((((rtreenode(t0.c0, t0.c2))AND(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c2) IS TRUE))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='', c1=NULL WHERE ((+ (t0.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(NULL) WHERE CAST((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) AS TEXT); -- 0ms;
UPDATE OR ABORT t0 SET c1=']' WHERE (NOT (NULL)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
UPDATE t0 SET (c0, c0)=(NULL, 0.8578430362867959) WHERE (- (t0.c1)) COLLATE BINARY COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.17289089184371587, c2=0.37818746097824896, c1=90557679; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=x'de0f', c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0xffffffffebbf962a; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.4242959161417844) WHERE ((((t0.c2)AND((t0.c1 IN (t0.c2)))))OR(TOTAL_CHANGES())); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(0Xffffffffe08ac353, x''); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
UPDATE t0 SET c2=NULL, c1=0.7121266747655567; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1, c0)=(-468229984, '1127001334'); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(x'') WHERE ((t0.c2) BETWEEN ((((t0.c2))=((t0.c2)))) AND ((('') NOT BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
UPDATE t0 SET (c1, c2)=('-1918557601', x'ec33') WHERE ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) BETWEEN ((t0.c0 IN (''))) AND ((~ (t0.c1)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='Yu4' WHERE (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.35975582737914324); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(-1.114950706E9) WHERE (((((t0.c0)-(t0.c2))))<=((((t0.c1) ISNULL)))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=1.691883413E9; -- 0ms;
UPDATE OR IGNORE t0 SET c0='0.48874194019537154'; -- 0ms;
UPDATE OR ABORT t0 SET c1=x'' WHERE ((((((0.19814817913494365)<=(t0.c1)))AND(t0.c0)))OR((((''))>=((t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c1='1706720116' WHERE (((t0.c2, NULL, t0.c2)) BETWEEN ((t0.c0, CAST(t0.c1 AS TEXT), (t0.c0 IN ()))) AND ((((((t0.c0)OR(t0.c2)))OR(t0.c2)), CAST(t0.c1 AS REAL), COALESCE(t0.c0, t0.c0)))); -- 0ms;
UPDATE t0 SET c1=0.3140322153449654 WHERE (((- (t0.c0))) BETWEEN ((+ (t0.c2))) AND (((t0.c1) IS TRUE))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.49185880642067115) WHERE x''; -- 0ms;
UPDATE OR ABORT t0 SET c1=x'', c1=x'b133'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE CAST(x'd12f' COLLATE RTRIM AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE CASE WHEN ((t0.c2)-('')) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END ELSE ((t0.c1)OR(t0.c1)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'', c2=-1.479148697E9, c2=NULL; -- 0ms;
UPDATE OR FAIL t0 SET c0='/r'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-749613304, c0=x'', c0=x'b066', c2=x''; -- 1ms;
UPDATE OR ROLLBACK t0 SET c1='' WHERE CASE CAST(t0.c2 AS TEXT)  WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND ('')) THEN t0.c0 END; -- 0ms;
UPDATE t0 SET (c0)=(0.9272850430881454) WHERE '-1364719032'; -- 0ms;
UPDATE t0 SET (c0)=(0.21110019109467804) WHERE CAST(((((x'')OR(t0.c1)))OR(t0.c0)) AS TEXT); -- 0ms;
UPDATE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1, c2)=(x'', '1697346736', x''); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(x'') WHERE CAST((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('54*]') WHERE (((((t0.c0, t0.c2, t0.c1)) BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((t0.c1, t0.c2, t0.c0)))) ISNULL); -- 1ms;
UPDATE t0 SET (c1)=(4.13547761E8) WHERE 0xffffffffe25c39d0; -- 0ms;
UPDATE t0 SET (c1, c0, c0)=('/-', '-1823197555', '-17023664'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=0X644b5199 WHERE ((((t0.c0) NOT NULL)) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=-1817713017 WHERE (+ ((((t0.c1))<((t0.c2))))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'4bc8f2d0'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.4455909831325565 WHERE t0.c1; -- 0ms;
UPDATE OR FAIL t0 SET c2=0.28464958054669354 WHERE (- ((((t0.c1, NULL, t0.c2))=((t0.c1, t0.c1, 'U}A'))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE (((t0.c0)<(t0.c1)) IN (((t0.c1)>=(t0.c1)), '')); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE ((CASE WHEN t0.c0 THEN t0.c1 END) BETWEEN (((t0.c0)>=(t0.c2))) AND (x'd243')); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-1283931671'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(-130371231); -- 0ms;
UPDATE OR IGNORE t0 SET c2='''	V' WHERE (NOT ((t0.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.9193133888064093; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(NULL, 0.05699575460275297); -- 0ms;
UPDATE OR FAIL t0 SET c0='1697876447' WHERE (~ (CASE t0.c1  WHEN t0.c1 THEN t0.c0 END)); -- 0ms;
UPDATE OR IGNORE t0 SET c0='㧞o'; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0.7783803140841049) WHERE CASE CASE WHEN t0.c2 THEN t0.c0 END  WHEN '\n䅟' THEN t0.c2 COLLATE NOCASE END; -- 0ms;
UPDATE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c1='	H', c1='r' WHERE t0.c0; -- 0ms;
UPDATE t0 SET c0=x'4f87', c1=NULL, c0=0.2116307080322174; -- 0ms;
UPDATE OR FAIL t0 SET c0=NULL, c2=x'eb2b' WHERE (- (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c2='0.48874194019537154', c1=0xffffffffc2cf45ba, c0='201179497'; -- 0ms;
UPDATE t0 SET (c2, c2)=(NULL, 'ࣰ9'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(''); -- 0ms;
UPDATE t0 SET (c0)=(0.6987225763243998); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('-1287440150') WHERE TRIM(((t0.c2)+(t0.c1))); -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('', x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c0)=('881366376', '0.454649257983749', 0X73ee8dd3) WHERE CAST((+ (t0.c2)) AS BLOB); -- 0ms;
UPDATE OR REPLACE t0 SET c2='-1368246543' WHERE t0.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'062c' WHERE CASE t0.c2  WHEN -1962745430 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END COLLATE BINARY; -- 0ms;
UPDATE t0 SET (c0, c0, c0)=(x'', 'dw', 0.4964637054760733) WHERE (((t0.c2 IN ())) IS TRUE); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1, c2, c0)=('-130338938', 0.592515212578135, x'fc92') WHERE x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.9203169691329366) WHERE (- (((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(0x645b6210) WHERE ((((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))GLOB(((t0.c0) IS TRUE))); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.6963951514689661 WHERE ((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2)))))=((((((t0.c2)AND(t0.c0)))OR(t0.c0))))); -- 0ms;
UPDATE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR FAIL t0 SET c2=NULL WHERE NULL; -- 0ms;
UPDATE t0 SET (c2)=(0.12310513472998641) WHERE CASE x''  WHEN CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN COALESCE(t0.c2, t0.c2) ELSE t0.c1 END; -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0)=(NULL, x''); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET (c0)=(8.65732869E8) WHERE LOWER(t0.c0 COLLATE BINARY); -- 0ms;
UPDATE t0 SET (c1, c0)=(1.784295819E9, ']*'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.7218917811992979, c1=NULL, c1=0.42831993490633546, c1=0.8179909149801389 WHERE ABS(UNLIKELY(t0.c2)); -- 0ms;
UPDATE OR IGNORE t0 SET c2='-1864820714', c0=x'517ab1e0' WHERE ((t0.c1 COLLATE RTRIM)&(((324559642)<(t0.c0)))); -- 0ms;
UPDATE t0 SET (c1, c0, c1)=(NULL, NULL, NULL); -- 0ms;
UPDATE t0 SET c2=0.49053193761035174, c1=NULL, c1=-978422872 WHERE ((((((((((t0.c2)<=(t0.c2)))AND(((t0.c2) BETWEEN (t0.c2) AND ('1391568540')))))AND(t0.c2 COLLATE BINARY)))AND(t0.c2)))OR(t0.c1)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.6815827717749656; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
UPDATE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR ABORT t0 SET c1='-359597764'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE (((x'')<(t0.c2)) IN (((t0.c0) IS FALSE))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(1175985321); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'', c2='&dEf' WHERE IFNULL(PRINTF(t0.c0, t0.c2, t0.c0, t0.c2, t0.c2), t0.c2); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0Xffffffffcc320691) WHERE ((((t0.c2) NOTNULL)) NOT BETWEEN (CASE t0.c2  WHEN t0.c1 THEN t0.c1 END) AND (t0.c1)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0)=(NULL, '\nv63<ۃ'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2)=('-1214145257', '!g|'); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=('tD'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE (((t0.c2) BETWEEN (t0.c2) AND ('-670912915')) IN ((t0.c1 IN (t0.c2)))); -- 0ms;
UPDATE t0 SET c1=0.03484828640985671, c0=0.181405649207651; -- 0ms;
UPDATE OR ABORT t0 SET (c2)=('鯿'''); -- 0ms;
UPDATE OR IGNORE t0 SET c2='0.42106112531352813'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('1885370711') WHERE (+ (((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))AND(t0.c0)))AND(t0.c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.44216277537378446) WHERE ((((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)))OR(CASE t0.c2  WHEN t0.c2 THEN 0.2828099375548906 ELSE x'' END)))AND(x'e20277ee')))OR(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))AND((t0.c0 IN (t0.c2)))))OR((((t0.c1, t0.c1, t0.c2)) BETWEEN ((0.48874194019537154, t0.c0, t0.c0)) AND ((t0.c0, t0.c2, t0.c1))))))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0x5441b88e); -- 0ms;
UPDATE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('1009895136', 1.682657689E9); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2, c2)=('-853965603', '0.5653373448372109', '266411971'); -- 0ms;
UPDATE t0 SET (c2)=(NULL) WHERE json_type(t0.c2 COLLATE BINARY); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE (t0.c1 IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c0, c1)=(x'', '305191904', '-1022008187', 0.9534310086299521); -- 0ms;
UPDATE OR IGNORE t0 SET c0='E^'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(x'a3ac', '-1166989420'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(-1453356967, 0.03363386006219926) WHERE (NOT ('q''/⋛')); -- 0ms;
UPDATE t0 SET (c2)=(x'') WHERE ((((t0.c0) NOTNULL))>=(TYPEOF(t0.c2))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0='-468229984'; -- 0ms;
UPDATE t0 SET c1=x''; -- 0ms;
UPDATE t0 SET c0=x'', c1=NULL WHERE (((~ (t0.c2)))IS NOT(((t0.c1)>=(0.5469135113312917)))); -- 0ms;
UPDATE OR ABORT t0 SET c2=0.14633055931986116 WHERE t0.c2; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1)=(x''); -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=-130338938; -- 0ms;
UPDATE t0 SET c0=x'', c0=904566751; -- 0ms;
UPDATE OR FAIL t0 SET c0=576783644, c1=''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.4740513141291127) WHERE CASE WHEN x'' THEN CASE t0.c0  WHEN t0.c1 THEN '-743759920' ELSE t0.c0 END ELSE (t0.c2 IN ()) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c1=x'' WHERE t0.c2; -- 0ms;
UPDATE t0 SET c1='+N Q\n?' WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE (((x'ad3f') IS FALSE) IN ((('1934687099') BETWEEN (t0.c0) AND (t0.c1)))); -- 0ms;
UPDATE OR FAIL t0 SET c1=NULL, c0='k锆B➔!t*o' WHERE (- (CAST(t0.c1 AS NUMERIC))); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2)=(x'') WHERE ((t0.c1)>>('545174087')) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(NULL, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('ww+y ') WHERE ((((t0.c0, t0.c1, t0.c1))==((t0.c1, t0.c2, t0.c0))) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0='FR' WHERE CAST(((((((((t0.c1)AND(t0.c1)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT); -- 0ms;
ALTER TABLE t0 ADD COLUMN c63 REAL; -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR FAIL INTO t0(c1, c2, c63, c0) VALUES (x'dd2b', -827902630, '4GR2**', 0.5566329389340445); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, prefix = 430, ); -- 1ms;
VACUUM temp; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=NULL, c0=-1291220784, c0=-6.82585516E8 WHERE (+ (vt0.c0)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffffbe4eaf62 WHERE CASE vt0.c0  WHEN (((vt0.c0))>((vt0.c0))) THEN vt0.c0 END; -- 0ms;
VACUUM; -- 1ms;
CREATE INDEX IF NOT EXISTS i48 ON t0(DATETIME(((((((((c1)OR(c2)))OR(NULL)))AND(c63)))OR(c0)), c63 COLLATE BINARY, (('-1368246543')+(c63))) COLLATE BINARY,((((((((((c1) IS FALSE))OR(c2 COLLATE NOCASE)))AND(c63 COLLATE BINARY)))OR(c0 COLLATE NOCASE)))AND(GLOB('', c0))) ASC,((((((c0)OR(c1)))OR(c1)))AND(c63)) COLLATE NOCASE DESC,((((CAST(x'' AS TEXT))AND(CAST(c2 AS REAL))))AND(((c2) ISNULL))) COLLATE BINARY) WHERE CAST(((c1)LIKE(c1)) AS REAL); -- 1ms;
UPDATE t0 SET (c2, c2)=(NULL, '') WHERE ((((t0.c1) ISNULL))/((+ (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE (((x'')) BETWEEN ((((t0.c2)LIKE(t0.c2)))) AND (((t0.c2 IN (t0.c63, t0.c63))))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0x69c7b05d WHERE ((vt0.c0) NOT NULL); -- 0ms;
CREATE TABLE IF NOT EXISTS t82 (c0 REAL , c1 INT , c2 INT ); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT OR IGNORE INTO t0(c63, c0) VALUES (NULL, '-682585516'); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c1) VALUES ('~K', x''); -- 2ms;
INSERT OR IGNORE INTO t82(c1, c0, c2) VALUES ('Wi', NULL, 221809970); -- 0ms;
INSERT OR REPLACE INTO t82(c1, c0, c2) VALUES ('1682657689', x'6d3693cf', NULL), (-8.74727024E8, '-510958216', 0.6183361274217317), ('h9', 0xffffffffc8d7271e, NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX RTRIM; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49483'); -- 0ms;
PRAGMA application_id; -- 0ms;
UPDATE OR IGNORE t82 SET c0=-7.4375992E8 WHERE CASE CASE t82.c1  WHEN t82.c1 THEN t82.c1 END  WHEN t82.c2 COLLATE RTRIM THEN (- (t82.c0)) END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA main.threads = 373650688134397508; -- 0ms;
COMMIT; -- 0ms;
UPDATE t82 SET (c2, c0)=(NULL, 0Xffffffffd6989be5); -- 1ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE; -- 0ms;
REINDEX i48; -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.4548271489843707; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'84c8'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 752501659); -- 0ms;
PRAGMA main.foreign_keys = true; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS REAL)) ORDER BY (t0.c2 IN ()), '-1836502326' ASC  NULLS FIRST, '1900823478', (((t0.c63)) BETWEEN (((((x'842e')) BETWEEN ((t0.c2)) AND ((t0.c2))))) AND ((HEX(t0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (t0.c2 IN ()), '-1836502326' ASC  NULLS FIRST, '1900823478', (((t0.c63)) BETWEEN (((((x'842e')) BETWEEN ((t0.c2)) AND ((t0.c2))))) AND ((HEX(t0.c1)))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS REAL)) ORDER BY (t0.c2 IN ()), '-1836502326' ASC  NULLS FIRST, '1900823478', (((t0.c63)) BETWEEN (((((x'842e')) BETWEEN ((t0.c2)) AND ((t0.c2))))) AND ((HEX(t0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (t0.c2 IN ()), '-1836502326' ASC  NULLS FIRST, '1900823478', (((t0.c63)) BETWEEN (((((x'842e')) BETWEEN ((t0.c2)) AND ((t0.c2))))) AND ((HEX(t0.c1)))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS REAL)) ORDER BY (t0.c2 IN ()), '-1836502326' ASC  NULLS FIRST, '1900823478', (((t0.c63)) BETWEEN (((((x'842e')) BETWEEN ((t0.c2)) AND ((t0.c2))))) AND ((HEX(t0.c1))));
SELECT ALL * FROM vt0, t82 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((t82.c2)/(vt0.c0)))AND(t82.c2)))OR(((t82.c0)<>(t82.c1))));
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, t82 ORDER BY ((((((t82.c2)/(vt0.c0)))AND(t82.c2)))OR(((t82.c0)<>(t82.c1)))));
SELECT ALL * FROM vt0, t82 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((t82.c2)/(vt0.c0)))AND(t82.c2)))OR(((t82.c0)<>(t82.c1))));
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, t82 ORDER BY ((((((t82.c2)/(vt0.c0)))AND(t82.c2)))OR(((t82.c0)<>(t82.c1)))));
SELECT ALL * FROM vt0, t82 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((t82.c2)/(vt0.c0)))AND(t82.c2)))OR(((t82.c0)<>(t82.c1))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'3bd8');
SELECT SUM(count) FROM (SELECT ((x'3bd8') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'3bd8');
SELECT SUM(count) FROM (SELECT ((x'3bd8') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'3bd8');
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (load_extension(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (load_extension(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (load_extension(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (load_extension(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (load_extension(vt0.c0))));
SELECT ALL * FROM t82 WHERE ((((t82.c0, 654565396, t82.c0)) BETWEEN ((((((t82.c2)AND(t82.c2)))AND(t82.c1)), (((t82.c1, t82.c0, t82.c0)) BETWEEN ((0.41812976097709464, t82.c1, t82.c2)) AND ((t82.c1, t82.c2, t82.c1))), (((t82.c1)) BETWEEN ((0.5206566793169517)) AND ((t82.c1))))) AND ((((t82.c1)+(t82.c2)), (-2.97400969E8 IN (x'')), CASE WHEN t82.c2 THEN t82.c2 END)))) ORDER BY ((((774497072)<=(t82.c0)))&((((t82.c0))<>((0.5885459209795063))))) ASC, NULL;
SELECT SUM(count) FROM (SELECT (((((t82.c0, 654565396, t82.c0)) BETWEEN ((((((t82.c2)AND(t82.c2)))AND(t82.c1)), (((t82.c1, t82.c0, t82.c0)) BETWEEN ((0.41812976097709464, t82.c1, t82.c2)) AND ((t82.c1, t82.c2, t82.c1))), (((t82.c1)) BETWEEN ((0.5206566793169517)) AND ((t82.c1))))) AND ((((t82.c1)+(t82.c2)), (-2.97400969E8 IN (x'')), CASE WHEN t82.c2 THEN t82.c2 END)))) IS TRUE)  as count FROM t82 ORDER BY ((((774497072)<=(t82.c0)))&((((t82.c0))<>((0.5885459209795063))))) ASC, NULL);
SELECT ALL * FROM t82 WHERE ((((t82.c0, 654565396, t82.c0)) BETWEEN ((((((t82.c2)AND(t82.c2)))AND(t82.c1)), (((t82.c1, t82.c0, t82.c0)) BETWEEN ((0.41812976097709464, t82.c1, t82.c2)) AND ((t82.c1, t82.c2, t82.c1))), (((t82.c1)) BETWEEN ((0.5206566793169517)) AND ((t82.c1))))) AND ((((t82.c1)+(t82.c2)), (-2.97400969E8 IN (x'')), CASE WHEN t82.c2 THEN t82.c2 END)))) ORDER BY ((((774497072)<=(t82.c0)))&((((t82.c0))<>((0.5885459209795063))))) ASC, NULL;
SELECT SUM(count) FROM (SELECT (((((t82.c0, 654565396, t82.c0)) BETWEEN ((((((t82.c2)AND(t82.c2)))AND(t82.c1)), (((t82.c1, t82.c0, t82.c0)) BETWEEN ((0.41812976097709464, t82.c1, t82.c2)) AND ((t82.c1, t82.c2, t82.c1))), (((t82.c1)) BETWEEN ((0.5206566793169517)) AND ((t82.c1))))) AND ((((t82.c1)+(t82.c2)), (-2.97400969E8 IN (x'')), CASE WHEN t82.c2 THEN t82.c2 END)))) IS TRUE)  as count FROM t82 ORDER BY ((((774497072)<=(t82.c0)))&((((t82.c0))<>((0.5885459209795063))))) ASC, NULL);
SELECT ALL * FROM t82 WHERE ((((t82.c0, 654565396, t82.c0)) BETWEEN ((((((t82.c2)AND(t82.c2)))AND(t82.c1)), (((t82.c1, t82.c0, t82.c0)) BETWEEN ((0.41812976097709464, t82.c1, t82.c2)) AND ((t82.c1, t82.c2, t82.c1))), (((t82.c1)) BETWEEN ((0.5206566793169517)) AND ((t82.c1))))) AND ((((t82.c1)+(t82.c2)), (-2.97400969E8 IN (x'')), CASE WHEN t82.c2 THEN t82.c2 END)))) ORDER BY ((((774497072)<=(t82.c0)))&((((t82.c0))<>((0.5885459209795063))))) ASC, NULL;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((((t0.c1))!=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((((t0.c1))!=((vt0.c0))))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((((t0.c1))!=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((((t0.c1))!=((vt0.c0))))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((((t0.c1))!=((vt0.c0)))))));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0)/(t0.c1)) AS REAL)) ORDER BY COALESCE(((0xffffffffb2741c7a)<(vt0.c0)), ((t0.c63)*(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)/(t0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY COALESCE(((0xffffffffb2741c7a)<(vt0.c0)), ((t0.c63)*(vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0)/(t0.c1)) AS REAL)) ORDER BY COALESCE(((0xffffffffb2741c7a)<(vt0.c0)), ((t0.c63)*(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)/(t0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY COALESCE(((0xffffffffb2741c7a)<(vt0.c0)), ((t0.c63)*(vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0)/(t0.c1)) AS REAL)) ORDER BY COALESCE(((0xffffffffb2741c7a)<(vt0.c0)), ((t0.c63)*(vt0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t82 RIGHT OUTER JOIN t0 ON (((((((('0.29739721736096847')AND(((t0.c2)>>(t0.c1)))))OR(((t82.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((~ (t0.c2)))))AND((~ (t82.c2)))) INNER JOIN vt0 ON ((((t0.c0) BETWEEN (vt0.c0) AND (x''))) NOTNULL) WHERE (t82.c2) ORDER BY (((vt0.c0) BETWEEN (t0.c2) AND (t82.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((t82.c2) IS TRUE)  as count FROM t82 RIGHT OUTER JOIN t0 ON (((((((('0.29739721736096847')AND(((t0.c2)>>(t0.c1)))))OR(((t82.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((~ (t0.c2)))))AND((~ (t82.c2)))) INNER JOIN vt0 ON ((((t0.c0) BETWEEN (vt0.c0) AND (x''))) NOTNULL) ORDER BY (((vt0.c0) BETWEEN (t0.c2) AND (t82.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t82 RIGHT OUTER JOIN t0 ON (((((((('0.29739721736096847')AND(((t0.c2)>>(t0.c1)))))OR(((t82.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((~ (t0.c2)))))AND((~ (t82.c2)))) INNER JOIN vt0 ON ((((t0.c0) BETWEEN (vt0.c0) AND (x''))) NOTNULL) WHERE (t82.c2) ORDER BY (((vt0.c0) BETWEEN (t0.c2) AND (t82.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((t82.c2) IS TRUE)  as count FROM t82 RIGHT OUTER JOIN t0 ON (((((((('0.29739721736096847')AND(((t0.c2)>>(t0.c1)))))OR(((t82.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((~ (t0.c2)))))AND((~ (t82.c2)))) INNER JOIN vt0 ON ((((t0.c0) BETWEEN (vt0.c0) AND (x''))) NOTNULL) ORDER BY (((vt0.c0) BETWEEN (t0.c2) AND (t82.c0)) IN ()) ASC);
SELECT * FROM t0, vt0, t82 WHERE ((((t0.c0, t82.c2, '279730734')) NOT BETWEEN ((((t0.c0) BETWEEN (x'') AND (t82.c0)), (+ (t82.c1)), CAST('{}' AS NUMERIC))) AND ((NULL, (t82.c0 IN (t0.c0)), vt0.c0 COLLATE RTRIM)))) ORDER BY (NOT ((- (t0.c1)))) ASC, (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t82.c2, '279730734')) NOT BETWEEN ((((t0.c0) BETWEEN (x'') AND (t82.c0)), (+ (t82.c1)), CAST('{}' AS NUMERIC))) AND ((NULL, (t82.c0 IN (t0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY (NOT ((- (t0.c1)))) ASC, (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0, t82 WHERE ((((t0.c0, t82.c2, '279730734')) NOT BETWEEN ((((t0.c0) BETWEEN (x'') AND (t82.c0)), (+ (t82.c1)), CAST('{}' AS NUMERIC))) AND ((NULL, (t82.c0 IN (t0.c0)), vt0.c0 COLLATE RTRIM)))) ORDER BY (NOT ((- (t0.c1)))) ASC, (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t82.c2, '279730734')) NOT BETWEEN ((((t0.c0) BETWEEN (x'') AND (t82.c0)), (+ (t82.c1)), CAST('{}' AS NUMERIC))) AND ((NULL, (t82.c0 IN (t0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY (NOT ((- (t0.c1)))) ASC, (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0, t82 WHERE ((((t0.c0, t82.c2, '279730734')) NOT BETWEEN ((((t0.c0) BETWEEN (x'') AND (t82.c0)), (+ (t82.c1)), CAST('{}' AS NUMERIC))) AND ((NULL, (t82.c0 IN (t0.c0)), vt0.c0 COLLATE RTRIM)))) ORDER BY (NOT ((- (t0.c1)))) ASC, (NOT ((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t82 WHERE (t82.c0) ORDER BY x'29df'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t82.c0) IS TRUE)  as count FROM t82 ORDER BY x'29df'  NULLS LAST);
SELECT COUNT(*) FROM t82 WHERE (t82.c0) ORDER BY x'29df'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t82.c0) IS TRUE)  as count FROM t82 ORDER BY x'29df'  NULLS LAST);
SELECT COUNT(*) FROM t82 WHERE (t82.c0) ORDER BY x'29df'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (('1396933278')*(((t0.c0)GLOB(t0.c1)))) WHERE ((((t0.c2 IN ())) BETWEEN (((((((((vt0.c0)AND(t0.c63)))AND(t0.c2)))OR(t0.c0)))OR(0.8351559511050641))) AND (((t0.c0)||(t0.c2))))) ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c1)IS NOT(t0.c2))) AND (t0.c0)), ((((t0.c0) NOT BETWEEN (0.42421839976719566) AND (t0.c1)))GLOB(vt0.c0)), ((CAST(t0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE WHEN t0.c1 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) BETWEEN (((((((((vt0.c0)AND(t0.c63)))AND(t0.c2)))OR(t0.c0)))OR(0.8351559511050641))) AND (((t0.c0)||(t0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (('1396933278')*(((t0.c0)GLOB(t0.c1)))) ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c1)IS NOT(t0.c2))) AND (t0.c0)), ((((t0.c0) NOT BETWEEN (0.42421839976719566) AND (t0.c1)))GLOB(vt0.c0)), ((CAST(t0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE WHEN t0.c1 THEN t0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (('1396933278')*(((t0.c0)GLOB(t0.c1)))) WHERE ((((t0.c2 IN ())) BETWEEN (((((((((vt0.c0)AND(t0.c63)))AND(t0.c2)))OR(t0.c0)))OR(0.8351559511050641))) AND (((t0.c0)||(t0.c2))))) ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c1)IS NOT(t0.c2))) AND (t0.c0)), ((((t0.c0) NOT BETWEEN (0.42421839976719566) AND (t0.c1)))GLOB(vt0.c0)), ((CAST(t0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE WHEN t0.c1 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) BETWEEN (((((((((vt0.c0)AND(t0.c63)))AND(t0.c2)))OR(t0.c0)))OR(0.8351559511050641))) AND (((t0.c0)||(t0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (('1396933278')*(((t0.c0)GLOB(t0.c1)))) ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c1)IS NOT(t0.c2))) AND (t0.c0)), ((((t0.c0) NOT BETWEEN (0.42421839976719566) AND (t0.c1)))GLOB(vt0.c0)), ((CAST(t0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE WHEN t0.c1 THEN t0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (('1396933278')*(((t0.c0)GLOB(t0.c1)))) WHERE ((((t0.c2 IN ())) BETWEEN (((((((((vt0.c0)AND(t0.c63)))AND(t0.c2)))OR(t0.c0)))OR(0.8351559511050641))) AND (((t0.c0)||(t0.c2))))) ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c1)IS NOT(t0.c2))) AND (t0.c0)), ((((t0.c0) NOT BETWEEN (0.42421839976719566) AND (t0.c1)))GLOB(vt0.c0)), ((CAST(t0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE WHEN t0.c1 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((x'3a3f')GLOB(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((x'3a3f')GLOB(x''))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((x'3a3f')GLOB(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((x'3a3f')GLOB(x''))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((x'3a3f')GLOB(x'')));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))), t0.c0, t0.c0)) AND ((((t0.c1)LIKE(t0.c0)), (((x'41fd'))<=((t0.c0))), t0.c2 COLLATE RTRIM)))) ORDER BY ((x'')LIKE((((t0.c2))<((t0.c63))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, t0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))), t0.c0, t0.c0)) AND ((((t0.c1)LIKE(t0.c0)), (((x'41fd'))<=((t0.c0))), t0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 ORDER BY ((x'')LIKE((((t0.c2))<((t0.c63))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))), t0.c0, t0.c0)) AND ((((t0.c1)LIKE(t0.c0)), (((x'41fd'))<=((t0.c0))), t0.c2 COLLATE RTRIM)))) ORDER BY ((x'')LIKE((((t0.c2))<((t0.c63))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, t0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))), t0.c0, t0.c0)) AND ((((t0.c1)LIKE(t0.c0)), (((x'41fd'))<=((t0.c0))), t0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 ORDER BY ((x'')LIKE((((t0.c2))<((t0.c63))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))), t0.c0, t0.c0)) AND ((((t0.c1)LIKE(t0.c0)), (((x'41fd'))<=((t0.c0))), t0.c2 COLLATE RTRIM)))) ORDER BY ((x'')LIKE((((t0.c2))<((t0.c63))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (LIKELIHOOD(((t82.c1) ISNULL), 0.9178896759971878)) ORDER BY (((CASE x''  WHEN t0.c0 THEN vt0.c0 END, (t82.c2 IN ()), ((vt0.c0)!=(t82.c0)), (NOT (t82.c2)), MAX(t0.c1, t0.c2, vt0.c0, t0.c2)))>((((t82.c1) NOT BETWEEN (t0.c0) AND (-940411051)), t82.c0, CASE WHEN t0.c1 THEN t82.c0 WHEN t0.c63 THEN t0.c0 WHEN t82.c1 THEN t82.c1 ELSE t82.c1 END, ((t82.c0) BETWEEN (t0.c2) AND (vt0.c0)), CAST(t0.c1 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((t82.c1) ISNULL), 0.9178896759971878)) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (((CASE x''  WHEN t0.c0 THEN vt0.c0 END, (t82.c2 IN ()), ((vt0.c0)<>(t82.c0)), (NOT (t82.c2)), MAX(t0.c1, t0.c2, vt0.c0, t0.c2)))>((((t82.c1) NOT BETWEEN (t0.c0) AND (-940411051)), t82.c0, CASE WHEN t0.c1 THEN t82.c0 WHEN t0.c63 THEN t0.c0 WHEN t82.c1 THEN t82.c1 ELSE t82.c1 END, ((t82.c0) BETWEEN (t0.c2) AND (vt0.c0)), CAST(t0.c1 AS INTEGER)))) DESC);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (LIKELIHOOD(((t82.c1) ISNULL), 0.9178896759971878)) ORDER BY (((CASE x''  WHEN t0.c0 THEN vt0.c0 END, (t82.c2 IN ()), ((vt0.c0)!=(t82.c0)), (NOT (t82.c2)), MAX(t0.c1, t0.c2, vt0.c0, t0.c2)))>((((t82.c1) NOT BETWEEN (t0.c0) AND (-940411051)), t82.c0, CASE WHEN t0.c1 THEN t82.c0 WHEN t0.c63 THEN t0.c0 WHEN t82.c1 THEN t82.c1 ELSE t82.c1 END, ((t82.c0) BETWEEN (t0.c2) AND (vt0.c0)), CAST(t0.c1 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((t82.c1) ISNULL), 0.9178896759971878)) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (((CASE x''  WHEN t0.c0 THEN vt0.c0 END, (t82.c2 IN ()), ((vt0.c0)<>(t82.c0)), (NOT (t82.c2)), MAX(t0.c1, t0.c2, vt0.c0, t0.c2)))>((((t82.c1) NOT BETWEEN (t0.c0) AND (-940411051)), t82.c0, CASE WHEN t0.c1 THEN t82.c0 WHEN t0.c63 THEN t0.c0 WHEN t82.c1 THEN t82.c1 ELSE t82.c1 END, ((t82.c0) BETWEEN (t0.c2) AND (vt0.c0)), CAST(t0.c1 AS INTEGER)))) DESC);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (LIKELIHOOD(((t82.c1) ISNULL), 0.9178896759971878)) ORDER BY (((CASE x''  WHEN t0.c0 THEN vt0.c0 END, (t82.c2 IN ()), ((vt0.c0)!=(t82.c0)), (NOT (t82.c2)), MAX(t0.c1, t0.c2, vt0.c0, t0.c2)))>((((t82.c1) NOT BETWEEN (t0.c0) AND (-940411051)), t82.c0, CASE WHEN t0.c1 THEN t82.c0 WHEN t0.c63 THEN t0.c0 WHEN t82.c1 THEN t82.c1 ELSE t82.c1 END, ((t82.c0) BETWEEN (t0.c2) AND (vt0.c0)), CAST(t0.c1 AS INTEGER)))) DESC;
SELECT * FROM t0, t82 WHERE (((((t0.c63)<<(t82.c2))) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c1) AND (t82.c0))) AND (((t82.c1)|(t0.c0))))) ORDER BY CASE ((t0.c1)<>(t82.c0))  WHEN (- (t0.c0)) THEN (t0.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63)<<(t82.c2))) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c1) AND (t82.c0))) AND (((t82.c1)|(t0.c0))))) IS TRUE)  as count FROM t0, t82 ORDER BY CASE ((t0.c1)<>(t82.c0))  WHEN (- (t0.c0)) THEN (t0.c1 IN ()) END  NULLS LAST);
SELECT * FROM t0, t82 WHERE (((((t0.c63)<<(t82.c2))) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c1) AND (t82.c0))) AND (((t82.c1)|(t0.c0))))) ORDER BY CASE ((t0.c1)<>(t82.c0))  WHEN (- (t0.c0)) THEN (t0.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63)<<(t82.c2))) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c1) AND (t82.c0))) AND (((t82.c1)|(t0.c0))))) IS TRUE)  as count FROM t0, t82 ORDER BY CASE ((t0.c1)<>(t82.c0))  WHEN (- (t0.c0)) THEN (t0.c1 IN ()) END  NULLS LAST);
SELECT * FROM t0, t82 WHERE (((((t0.c63)<<(t82.c2))) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c1) AND (t82.c0))) AND (((t82.c1)|(t0.c0))))) ORDER BY CASE ((t0.c1)<>(t82.c0))  WHEN (- (t0.c0)) THEN (t0.c1 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c2) BETWEEN (x'') AND (t0.c1)))&(t82.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (x'') AND (t0.c1)))&(t82.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c2) BETWEEN (x'') AND (t0.c1)))&(t82.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (x'') AND (t0.c1)))&(t82.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c2) BETWEEN (x'') AND (t0.c1)))&(t82.c1 COLLATE NOCASE)));
SELECT * FROM t0, t82 WHERE ('40z젞QMt<&');
SELECT SUM(count) FROM (SELECT (('40z젞QMt<&') IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE ('40z젞QMt<&');
SELECT SUM(count) FROM (SELECT (('40z젞QMt<&') IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE ('40z젞QMt<&');
SELECT * FROM t82 WHERE ((((t82.c1))>=((x'48ba'))) COLLATE BINARY) ORDER BY ROUND(t82.c1, t82.c2) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t82.c1))>=((x'48ba'))) COLLATE BINARY) IS TRUE)  as count FROM t82 ORDER BY ROUND(t82.c1, t82.c2) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM t82 WHERE ((((t82.c1))>=((x'48ba'))) COLLATE BINARY) ORDER BY ROUND(t82.c1, t82.c2) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t82.c1))>=((x'48ba'))) COLLATE BINARY) IS TRUE)  as count FROM t82 ORDER BY ROUND(t82.c1, t82.c2) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM t82 WHERE ((((t82.c1))>=((x'48ba'))) COLLATE BINARY) ORDER BY ROUND(t82.c1, t82.c2) COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM vt0, t82, t0 WHERE (((((t0.c1)OR(((-791763594)OR(t0.c0)))))AND(t82.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)OR(((-791763594)OR(t0.c0)))))AND(t82.c1))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT * FROM vt0, t82, t0 WHERE (((((t0.c1)OR(((-791763594)OR(t0.c0)))))AND(t82.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)OR(((-791763594)OR(t0.c0)))))AND(t82.c1))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT * FROM vt0, t82, t0 WHERE (((((t0.c1)OR(((-791763594)OR(t0.c0)))))AND(t82.c1)));
SELECT COUNT(*) FROM t82 WHERE (CAST((((t82.c0, x'', t82.c2))>((t82.c2, t82.c2, t82.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t82.c0, x'', t82.c2))>((t82.c2, t82.c2, t82.c1))) AS NUMERIC)) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (CAST((((t82.c0, x'', t82.c2))>((t82.c2, t82.c2, t82.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t82.c0, x'', t82.c2))>((t82.c2, t82.c2, t82.c1))) AS NUMERIC)) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (CAST((((t82.c0, x'', t82.c2))>((t82.c2, t82.c2, t82.c1))) AS NUMERIC));
SELECT ALL * FROM t82 FULL OUTER JOIN vt0 ON CAST(SQLITE_VERSION() AS NUMERIC) WHERE (x'' COLLATE RTRIM) ORDER BY NULLIF(NULL, '-1804226613') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON CAST(SQLITE_VERSION() AS NUMERIC) ORDER BY NULLIF(NULL, '-1804226613') ASC  NULLS LAST);
SELECT ALL * FROM t82 FULL OUTER JOIN vt0 ON CAST(SQLITE_VERSION() AS NUMERIC) WHERE (x'' COLLATE RTRIM) ORDER BY NULLIF(NULL, '-1804226613') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON CAST(SQLITE_VERSION() AS NUMERIC) ORDER BY NULLIF(NULL, '-1804226613') ASC  NULLS LAST);
SELECT ALL * FROM t82 FULL OUTER JOIN vt0 ON CAST(SQLITE_VERSION() AS NUMERIC) WHERE (x'' COLLATE RTRIM) ORDER BY NULLIF(NULL, '-1804226613') ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c1, t0.c1)) NOT BETWEEN (0.5514436391730412) AND (0.764106523443121)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(t0.c1, t0.c1)) NOT BETWEEN (0.5514436391730412) AND (0.764106523443121))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c1, t0.c1)) NOT BETWEEN (0.5514436391730412) AND (0.764106523443121)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(t0.c1, t0.c1)) NOT BETWEEN (0.5514436391730412) AND (0.764106523443121))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c1, t0.c1)) NOT BETWEEN (0.5514436391730412) AND (0.764106523443121)));
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (LTRIM(((t82.c2) IS FALSE), LIKELY(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((t82.c2) IS FALSE), LIKELY(DISTINCT vt0.c0))) IS TRUE)  as count FROM t82, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (LTRIM(((t82.c2) IS FALSE), LIKELY(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((t82.c2) IS FALSE), LIKELY(DISTINCT vt0.c0))) IS TRUE)  as count FROM t82, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (LTRIM(((t82.c2) IS FALSE), LIKELY(DISTINCT vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT), x'', (- (x''));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT), x'', (- (x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT), x'', (- (x''));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT), x'', (- (x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS TEXT), x'', (- (x''));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((((((t82.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t82.c2, t82.c2, t82.c0)))))<((2.002212336E9 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((((t82.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t82.c2, t82.c2, t82.c0)))))<((2.002212336E9 COLLATE BINARY)))) IS TRUE)  as count FROM t82, vt0, t0);
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((((((t82.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t82.c2, t82.c2, t82.c0)))))<((2.002212336E9 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((((t82.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t82.c2, t82.c2, t82.c0)))))<((2.002212336E9 COLLATE BINARY)))) IS TRUE)  as count FROM t82, vt0, t0);
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((((((t82.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t82.c2, t82.c2, t82.c0)))))<((2.002212336E9 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)) AS BLOB)) ORDER BY (((((('0.6554206738439937')OR(t82.c2)))AND(t82.c2)))>((((vt0.c0, t82.c2, t82.c2))=((t82.c1, t82.c1, NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN t82 ORDER BY (((((('0.6554206738439937')OR(t82.c2)))AND(t82.c2)))>((((vt0.c0, t82.c2, t82.c2))==((t82.c1, t82.c1, NULL))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)) AS BLOB)) ORDER BY (((((('0.6554206738439937')OR(t82.c2)))AND(t82.c2)))>((((vt0.c0, t82.c2, t82.c2))=((t82.c1, t82.c1, NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN t82 ORDER BY (((((('0.6554206738439937')OR(t82.c2)))AND(t82.c2)))>((((vt0.c0, t82.c2, t82.c2))==((t82.c1, t82.c1, NULL))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)) AS BLOB)) ORDER BY (((((('0.6554206738439937')OR(t82.c2)))AND(t82.c2)))>((((vt0.c0, t82.c2, t82.c2))=((t82.c1, t82.c1, NULL))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t82 WHERE (t82.c2) ORDER BY ((((CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)AND(((vt0.c0) BETWEEN (t82.c0) AND (t82.c2)))))AND((t82.c1 IN (vt0.c0, t82.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c2))))<>(((((t82.c2, t82.c2, t82.c2)) NOT BETWEEN ((t82.c2, vt0.c0, vt0.c0)) AND ((t82.c0, vt0.c0, t82.c2))))))  NULLS FIRST, (NOT ((~ (t82.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t82.c2) IS TRUE)  as count FROM vt0, t82 ORDER BY ((((CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)AND(((vt0.c0) BETWEEN (t82.c0) AND (t82.c2)))))AND((t82.c1 IN (vt0.c0, t82.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c2))))!=(((((t82.c2, t82.c2, t82.c2)) NOT BETWEEN ((t82.c2, vt0.c0, vt0.c0)) AND ((t82.c0, vt0.c0, t82.c2))))))  NULLS FIRST, (NOT ((~ (t82.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t82 WHERE (t82.c2) ORDER BY ((((CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)AND(((vt0.c0) BETWEEN (t82.c0) AND (t82.c2)))))AND((t82.c1 IN (vt0.c0, t82.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c2))))<>(((((t82.c2, t82.c2, t82.c2)) NOT BETWEEN ((t82.c2, vt0.c0, vt0.c0)) AND ((t82.c0, vt0.c0, t82.c2))))))  NULLS FIRST, (NOT ((~ (t82.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t82.c2) IS TRUE)  as count FROM vt0, t82 ORDER BY ((((CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)AND(((vt0.c0) BETWEEN (t82.c0) AND (t82.c2)))))AND((t82.c1 IN (vt0.c0, t82.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c2))))!=(((((t82.c2, t82.c2, t82.c2)) NOT BETWEEN ((t82.c2, vt0.c0, vt0.c0)) AND ((t82.c0, vt0.c0, t82.c2))))))  NULLS FIRST, (NOT ((~ (t82.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t82 WHERE (t82.c2) ORDER BY ((((CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)AND(((vt0.c0) BETWEEN (t82.c0) AND (t82.c2)))))AND((t82.c1 IN (vt0.c0, t82.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c2))))<>(((((t82.c2, t82.c2, t82.c2)) NOT BETWEEN ((t82.c2, vt0.c0, vt0.c0)) AND ((t82.c0, vt0.c0, t82.c2))))))  NULLS FIRST, (NOT ((~ (t82.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c63)/(t0.c0))))) ORDER BY CASE WHEN (t0.c2 IN (t0.c0)) THEN NULLIF(x'', t0.c0) END  NULLS LAST, CHAR(CAST(t0.c2 AS TEXT)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c63)/(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c2 IN (t0.c0)) THEN NULLIF(x'', t0.c0) END  NULLS LAST, CHAR(CAST(t0.c2 AS TEXT)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c63)/(t0.c0))))) ORDER BY CASE WHEN (t0.c2 IN (t0.c0)) THEN NULLIF(x'', t0.c0) END  NULLS LAST, CHAR(CAST(t0.c2 AS TEXT)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c63)/(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c2 IN (t0.c0)) THEN NULLIF(x'', t0.c0) END  NULLS LAST, CHAR(CAST(t0.c2 AS TEXT)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c63)/(t0.c0))))) ORDER BY CASE WHEN (t0.c2 IN (t0.c0)) THEN NULLIF(x'', t0.c0) END  NULLS LAST, CHAR(CAST(t0.c2 AS TEXT)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t82, t0 WHERE ((- (t0.c63 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t0.c63 COLLATE NOCASE))) IS TRUE)  as count FROM t82, t0);
SELECT COUNT(*) FROM t82, t0 WHERE ((- (t0.c63 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t0.c63 COLLATE NOCASE))) IS TRUE)  as count FROM t82, t0);
SELECT COUNT(*) FROM t82, t0 WHERE ((- (t0.c63 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (0.2864410938797698) AND (IFNULL(vt0.c0, vt0.c0)))) ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c0))) NOT BETWEEN (0.2864410938797698) AND (IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (0.2864410938797698) AND (IFNULL(vt0.c0, vt0.c0)))) ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c0))) NOT BETWEEN (0.2864410938797698) AND (IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (0.2864410938797698) AND (IFNULL(vt0.c0, vt0.c0)))) ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM t82, vt0, t0 WHERE (((IFNULL(DISTINCT t0.c1, t82.c2)) NOTNULL)) ORDER BY (((('')AND(x'')))OR((t82.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT t0.c1, t82.c2)) NOTNULL)) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (((('')AND(x'')))OR((t82.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM t82, vt0, t0 WHERE (((IFNULL(DISTINCT t0.c1, t82.c2)) NOTNULL)) ORDER BY (((('')AND(x'')))OR((t82.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT t0.c1, t82.c2)) NOTNULL)) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (((('')AND(x'')))OR((t82.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM t82, vt0, t0 WHERE (((IFNULL(DISTINCT t0.c1, t82.c2)) NOTNULL)) ORDER BY (((('')AND(x'')))OR((t82.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c63))) COLLATE RTRIM) ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c63))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE));
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c63))) COLLATE RTRIM) ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c63))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE));
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c63))) COLLATE RTRIM) ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (((CASE t82.c2  WHEN t82.c2 THEN NULL WHEN -1.7023664E7 THEN t0.c2 WHEN t82.c1 THEN t0.c2 END)|((NOT (t82.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE t82.c2  WHEN t82.c2 THEN NULL WHEN -1.7023664E7 THEN t0.c2 WHEN t82.c1 THEN t0.c2 END)|((NOT (t82.c1))))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (((CASE t82.c2  WHEN t82.c2 THEN NULL WHEN -1.7023664E7 THEN t0.c2 WHEN t82.c1 THEN t0.c2 END)|((NOT (t82.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE t82.c2  WHEN t82.c2 THEN NULL WHEN -1.7023664E7 THEN t0.c2 WHEN t82.c1 THEN t0.c2 END)|((NOT (t82.c1))))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (((CASE t82.c2  WHEN t82.c2 THEN NULL WHEN -1.7023664E7 THEN t0.c2 WHEN t82.c1 THEN t0.c2 END)|((NOT (t82.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (x'') ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))<=(t0.c63 COLLATE RTRIM)), (((t0.c63))==(((((vt0.c0)) NOT BETWEEN ((t82.c1)) AND ((t82.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0, t82 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))<=(t0.c63 COLLATE RTRIM)), (((t0.c63))=(((((vt0.c0)) NOT BETWEEN ((t82.c1)) AND ((t82.c0)))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (x'') ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))<=(t0.c63 COLLATE RTRIM)), (((t0.c63))==(((((vt0.c0)) NOT BETWEEN ((t82.c1)) AND ((t82.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0, t82 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))<=(t0.c63 COLLATE RTRIM)), (((t0.c63))=(((((vt0.c0)) NOT BETWEEN ((t82.c1)) AND ((t82.c0)))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (x'') ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))<=(t0.c63 COLLATE RTRIM)), (((t0.c63))==(((((vt0.c0)) NOT BETWEEN ((t82.c1)) AND ((t82.c0)))))) DESC;
SELECT * FROM vt0 INNER JOIN t0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c63))) IN ((0.2648789838567652 IN ()))) WHERE (NULL) ORDER BY ((NULL)<>(((vt0.c0)|(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c63))) IN ((0.2648789838567652 IN ()))) ORDER BY ((NULL)<>(((vt0.c0)|(t0.c0))))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN t0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c63))) IN ((0.2648789838567652 IN ()))) WHERE (NULL) ORDER BY ((NULL)<>(((vt0.c0)|(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c63))) IN ((0.2648789838567652 IN ()))) ORDER BY ((NULL)<>(((vt0.c0)|(t0.c0))))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN t0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c63))) IN ((0.2648789838567652 IN ()))) WHERE (NULL) ORDER BY ((NULL)<>(((vt0.c0)|(t0.c0))))  NULLS FIRST;
SELECT * FROM vt0, t82 WHERE ('465500444');
SELECT SUM(count) FROM (SELECT (('465500444') IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE ('465500444');
SELECT SUM(count) FROM (SELECT (('465500444') IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE ('465500444');
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (CASE WHEN 0.9200396917709246 THEN CASE WHEN 0x11211d71 THEN t82.c1 ELSE t82.c0 END ELSE ((t0.c2) NOT BETWEEN (t0.c63) AND (t82.c0)) END) ORDER BY UNLIKELY('0.7824291200071842') COLLATE BINARY, CHAR(((((((((t0.c0)OR(t0.c63)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)), ((t0.c0)<(NULL)), ROUND(t82.c2, 0.06752617304190645)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.9200396917709246 THEN CASE WHEN 0x11211d71 THEN t82.c1 ELSE t82.c0 END ELSE ((t0.c2) NOT BETWEEN (t0.c63) AND (t82.c0)) END) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY UNLIKELY('0.7824291200071842') COLLATE BINARY, CHAR(((((((((t0.c0)OR(t0.c63)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)), ((t0.c0)<(NULL)), ROUND(t82.c2, 0.06752617304190645)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (CASE WHEN 0.9200396917709246 THEN CASE WHEN 0x11211d71 THEN t82.c1 ELSE t82.c0 END ELSE ((t0.c2) NOT BETWEEN (t0.c63) AND (t82.c0)) END) ORDER BY UNLIKELY('0.7824291200071842') COLLATE BINARY, CHAR(((((((((t0.c0)OR(t0.c63)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)), ((t0.c0)<(NULL)), ROUND(t82.c2, 0.06752617304190645)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.9200396917709246 THEN CASE WHEN 0x11211d71 THEN t82.c1 ELSE t82.c0 END ELSE ((t0.c2) NOT BETWEEN (t0.c63) AND (t82.c0)) END) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY UNLIKELY('0.7824291200071842') COLLATE BINARY, CHAR(((((((((t0.c0)OR(t0.c63)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)), ((t0.c0)<(NULL)), ROUND(t82.c2, 0.06752617304190645)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (CASE WHEN 0.9200396917709246 THEN CASE WHEN 0x11211d71 THEN t82.c1 ELSE t82.c0 END ELSE ((t0.c2) NOT BETWEEN (t0.c63) AND (t82.c0)) END) ORDER BY UNLIKELY('0.7824291200071842') COLLATE BINARY, CHAR(((((((((t0.c0)OR(t0.c63)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)), ((t0.c0)<(NULL)), ROUND(t82.c2, 0.06752617304190645)) DESC;
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((TRIM(DISTINCT t82.c0, t0.c0)) NOT BETWEEN (((t0.c1)<(vt0.c0))) AND (t0.c1))) ORDER BY ((vt0.c0 COLLATE BINARY)>=((- (t82.c0)))) ASC  NULLS LAST, ((((t0.c0))=((t82.c2))) IN ())  NULLS FIRST, UNICODE(NULLIF(DISTINCT t82.c2, t82.c2));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t82.c0, t0.c0)) NOT BETWEEN (((t0.c1)<(vt0.c0))) AND (t0.c1))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY ((vt0.c0 COLLATE BINARY)>=((- (t82.c0)))) ASC  NULLS LAST, ((((t0.c0))=((t82.c2))) IN ())  NULLS FIRST, UNICODE(NULLIF(DISTINCT t82.c2, t82.c2)));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((TRIM(DISTINCT t82.c0, t0.c0)) NOT BETWEEN (((t0.c1)<(vt0.c0))) AND (t0.c1))) ORDER BY ((vt0.c0 COLLATE BINARY)>=((- (t82.c0)))) ASC  NULLS LAST, ((((t0.c0))=((t82.c2))) IN ())  NULLS FIRST, UNICODE(NULLIF(DISTINCT t82.c2, t82.c2));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t82.c0, t0.c0)) NOT BETWEEN (((t0.c1)<(vt0.c0))) AND (t0.c1))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY ((vt0.c0 COLLATE BINARY)>=((- (t82.c0)))) ASC  NULLS LAST, ((((t0.c0))=((t82.c2))) IN ())  NULLS FIRST, UNICODE(NULLIF(DISTINCT t82.c2, t82.c2)));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((TRIM(DISTINCT t82.c0, t0.c0)) NOT BETWEEN (((t0.c1)<(vt0.c0))) AND (t0.c1))) ORDER BY ((vt0.c0 COLLATE BINARY)>=((- (t82.c0)))) ASC  NULLS LAST, ((((t0.c0))=((t82.c2))) IN ())  NULLS FIRST, UNICODE(NULLIF(DISTINCT t82.c2, t82.c2));
SELECT * FROM t0 WHERE (((((((((t0.c1 COLLATE RTRIM)AND((((t0.c1)) NOT BETWEEN (('s	OW')) AND ((t0.c63))))))OR(t0.c63)))OR((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))))))AND((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c1 COLLATE RTRIM)AND((((t0.c1)) NOT BETWEEN (('s	OW')) AND ((t0.c63))))))OR(t0.c63)))OR((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))))))AND((t0.c1 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c1 COLLATE RTRIM)AND((((t0.c1)) NOT BETWEEN (('s	OW')) AND ((t0.c63))))))OR(t0.c63)))OR((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))))))AND((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c1 COLLATE RTRIM)AND((((t0.c1)) NOT BETWEEN (('s	OW')) AND ((t0.c63))))))OR(t0.c63)))OR((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))))))AND((t0.c1 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c1 COLLATE RTRIM)AND((((t0.c1)) NOT BETWEEN (('s	OW')) AND ((t0.c63))))))OR(t0.c63)))OR((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))))))AND((t0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE ((LENGTH(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LENGTH(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((LENGTH(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LENGTH(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((LENGTH(vt0.c0) IN ()));
SELECT COUNT(*) FROM t0, t82 WHERE ((((t0.c0, t0.c1, t82.c1)) BETWEEN ((((t0.c2)>(t82.c0)), (~ (t0.c63)), (((t82.c1, t82.c0, t0.c1))<=((t0.c63, 0.6255873623394999, t0.c63))))) AND ((((x'') NOTNULL), ((t82.c0)-(t0.c1)), (t82.c1 IN (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c1, t82.c1)) BETWEEN ((((t0.c2)>(t82.c0)), (~ (t0.c63)), (((t82.c1, t82.c0, t0.c1))<=((t0.c63, 0.6255873623394999, t0.c63))))) AND ((((x'') NOTNULL), ((t82.c0)-(t0.c1)), (t82.c1 IN (t0.c2)))))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE ((((t0.c0, t0.c1, t82.c1)) BETWEEN ((((t0.c2)>(t82.c0)), (~ (t0.c63)), (((t82.c1, t82.c0, t0.c1))<=((t0.c63, 0.6255873623394999, t0.c63))))) AND ((((x'') NOTNULL), ((t82.c0)-(t0.c1)), (t82.c1 IN (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c1, t82.c1)) BETWEEN ((((t0.c2)>(t82.c0)), (~ (t0.c63)), (((t82.c1, t82.c0, t0.c1))<=((t0.c63, 0.6255873623394999, t0.c63))))) AND ((((x'') NOTNULL), ((t82.c0)-(t0.c1)), (t82.c1 IN (t0.c2)))))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE ((((t0.c0, t0.c1, t82.c1)) BETWEEN ((((t0.c2)>(t82.c0)), (~ (t0.c63)), (((t82.c1, t82.c0, t0.c1))<=((t0.c63, 0.6255873623394999, t0.c63))))) AND ((((x'') NOTNULL), ((t82.c0)-(t0.c1)), (t82.c1 IN (t0.c2))))));
SELECT COUNT(*) FROM t0, t82 WHERE (CASE ((t0.c0) BETWEEN (t0.c63) AND (t82.c2))  WHEN ((t0.c2)==(t0.c63)) THEN x'' END) ORDER BY (((((('0.9479876873293223')AND(t0.c1)))AND(t82.c2))) BETWEEN (t0.c0) AND (CASE t82.c2  WHEN t0.c0 THEN t0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) BETWEEN (t0.c63) AND (t82.c2))  WHEN ((t0.c2)==(t0.c63)) THEN x'' END) IS TRUE)  as count FROM t0, t82 ORDER BY (((((('0.9479876873293223')AND(t0.c1)))AND(t82.c2))) BETWEEN (t0.c0) AND (CASE t82.c2  WHEN t0.c0 THEN t0.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t82 WHERE (CASE ((t0.c0) BETWEEN (t0.c63) AND (t82.c2))  WHEN ((t0.c2)==(t0.c63)) THEN x'' END) ORDER BY (((((('0.9479876873293223')AND(t0.c1)))AND(t82.c2))) BETWEEN (t0.c0) AND (CASE t82.c2  WHEN t0.c0 THEN t0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) BETWEEN (t0.c63) AND (t82.c2))  WHEN ((t0.c2)==(t0.c63)) THEN x'' END) IS TRUE)  as count FROM t0, t82 ORDER BY (((((('0.9479876873293223')AND(t0.c1)))AND(t82.c2))) BETWEEN (t0.c0) AND (CASE t82.c2  WHEN t0.c0 THEN t0.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t82 WHERE (CASE ((t0.c0) BETWEEN (t0.c63) AND (t82.c2))  WHEN ((t0.c2)==(t0.c63)) THEN x'' END) ORDER BY (((((('0.9479876873293223')AND(t0.c1)))AND(t82.c2))) BETWEEN (t0.c0) AND (CASE t82.c2  WHEN t0.c0 THEN t0.c1 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t82 WHERE (IFNULL(t82.c2 COLLATE RTRIM, CAST(t82.c2 AS REAL))) ORDER BY (((- (t82.c2)))>>((t82.c0 IN ()))) ASC, CASE WHEN (NOT (t82.c0)) THEN (NOT (t82.c2)) WHEN (NOT (t82.c1)) THEN t82.c1 COLLATE RTRIM WHEN ((x'e23f95e6') NOTNULL) THEN ((t82.c1) NOT NULL) WHEN ((((((((NULL)AND(t82.c1)))AND(t82.c2)))AND(t82.c0)))AND(NULL)) THEN ((t82.c0) ISNULL) WHEN TYPEOF(t82.c2) THEN t82.c0 COLLATE NOCASE ELSE t82.c1 COLLATE BINARY END ASC, (~ (((((t82.c2)OR(t82.c1)))OR(t82.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(t82.c2 COLLATE RTRIM, CAST(t82.c2 AS REAL))) IS TRUE)  as count FROM t82 ORDER BY (((- (t82.c2)))>>((t82.c0 IN ()))) ASC, CASE WHEN (NOT (t82.c0)) THEN (NOT (t82.c2)) WHEN (NOT (t82.c1)) THEN t82.c1 COLLATE RTRIM WHEN ((x'e23f95e6') NOTNULL) THEN ((t82.c1) NOT NULL) WHEN ((((((((NULL)AND(t82.c1)))AND(t82.c2)))AND(t82.c0)))AND(NULL)) THEN ((t82.c0) ISNULL) WHEN TYPEOF(t82.c2) THEN t82.c0 COLLATE NOCASE ELSE t82.c1 COLLATE BINARY END ASC, (~ (((((t82.c2)OR(t82.c1)))OR(t82.c0)))));
SELECT ALL * FROM t82 WHERE (IFNULL(t82.c2 COLLATE RTRIM, CAST(t82.c2 AS REAL))) ORDER BY (((- (t82.c2)))>>((t82.c0 IN ()))) ASC, CASE WHEN (NOT (t82.c0)) THEN (NOT (t82.c2)) WHEN (NOT (t82.c1)) THEN t82.c1 COLLATE RTRIM WHEN ((x'e23f95e6') NOTNULL) THEN ((t82.c1) NOT NULL) WHEN ((((((((NULL)AND(t82.c1)))AND(t82.c2)))AND(t82.c0)))AND(NULL)) THEN ((t82.c0) ISNULL) WHEN TYPEOF(t82.c2) THEN t82.c0 COLLATE NOCASE ELSE t82.c1 COLLATE BINARY END ASC, (~ (((((t82.c2)OR(t82.c1)))OR(t82.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(t82.c2 COLLATE RTRIM, CAST(t82.c2 AS REAL))) IS TRUE)  as count FROM t82 ORDER BY (((- (t82.c2)))>>((t82.c0 IN ()))) ASC, CASE WHEN (NOT (t82.c0)) THEN (NOT (t82.c2)) WHEN (NOT (t82.c1)) THEN t82.c1 COLLATE RTRIM WHEN ((x'e23f95e6') NOTNULL) THEN ((t82.c1) NOT NULL) WHEN ((((((((NULL)AND(t82.c1)))AND(t82.c2)))AND(t82.c0)))AND(NULL)) THEN ((t82.c0) ISNULL) WHEN TYPEOF(t82.c2) THEN t82.c0 COLLATE NOCASE ELSE t82.c1 COLLATE BINARY END ASC, (~ (((((t82.c2)OR(t82.c1)))OR(t82.c0)))));
SELECT ALL * FROM t82 WHERE (IFNULL(t82.c2 COLLATE RTRIM, CAST(t82.c2 AS REAL))) ORDER BY (((- (t82.c2)))>>((t82.c0 IN ()))) ASC, CASE WHEN (NOT (t82.c0)) THEN (NOT (t82.c2)) WHEN (NOT (t82.c1)) THEN t82.c1 COLLATE RTRIM WHEN ((x'e23f95e6') NOTNULL) THEN ((t82.c1) NOT NULL) WHEN ((((((((NULL)AND(t82.c1)))AND(t82.c2)))AND(t82.c0)))AND(NULL)) THEN ((t82.c0) ISNULL) WHEN TYPEOF(t82.c2) THEN t82.c0 COLLATE NOCASE ELSE t82.c1 COLLATE BINARY END ASC, (~ (((((t82.c2)OR(t82.c1)))OR(t82.c0))));
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c63)AND(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c63 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)))OR((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c63)AND(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c63 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)))OR((t0.c63 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c63)AND(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c63 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)))OR((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c63)AND(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c63 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)))OR((t0.c63 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c63)AND(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c63 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)))OR((t0.c63 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN t82 ON (((((((x'bdc8')AND(t0.c0)))OR(t82.c2))))=((CAST(t82.c1 AS TEXT)))) WHERE (t82.c0 COLLATE RTRIM) ORDER BY CASE WHEN t82.c2 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.8451847359454332  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t82.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 CROSS JOIN t82 ON (((((((x'bdc8')AND(t0.c0)))OR(t82.c2))))==((CAST(t82.c1 AS TEXT)))) ORDER BY CASE WHEN t82.c2 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.8451847359454332  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN t82 ON (((((((x'bdc8')AND(t0.c0)))OR(t82.c2))))=((CAST(t82.c1 AS TEXT)))) WHERE (t82.c0 COLLATE RTRIM) ORDER BY CASE WHEN t82.c2 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.8451847359454332  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t82.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 CROSS JOIN t82 ON (((((((x'bdc8')AND(t0.c0)))OR(t82.c2))))==((CAST(t82.c1 AS TEXT)))) ORDER BY CASE WHEN t82.c2 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.8451847359454332  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN t82 ON (((((((x'bdc8')AND(t0.c0)))OR(t82.c2))))=((CAST(t82.c1 AS TEXT)))) WHERE (t82.c0 COLLATE RTRIM) ORDER BY CASE WHEN t82.c2 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.8451847359454332  NULLS FIRST;
SELECT COUNT(*) FROM t82, t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE (((t0.c63 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c63 IN ()) IN ())) IS TRUE)  as count FROM t82, t0 FULL OUTER JOIN vt0 ON t0.c0);
SELECT COUNT(*) FROM t82, t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE (((t0.c63 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c63 IN ()) IN ())) IS TRUE)  as count FROM t82, t0 FULL OUTER JOIN vt0 ON t0.c0);
SELECT COUNT(*) FROM t82, t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE (((t0.c63 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL)));
SELECT ALL * FROM t0, vt0, t82 WHERE (((vt0.c0 COLLATE RTRIM)|((((t82.c0))<=((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)|((((t82.c0))<=((t0.c2)))))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0, vt0, t82 WHERE (((vt0.c0 COLLATE RTRIM)|((((t82.c0))<=((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)|((((t82.c0))<=((t0.c2)))))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0, vt0, t82 WHERE (((vt0.c0 COLLATE RTRIM)|((((t82.c0))<=((t0.c2))))));
SELECT * FROM t82, t0 NOT INDEXED, vt0 WHERE (((t0.c1 COLLATE RTRIM)AND(1706280084))) ORDER BY ((LOWER(DISTINCT t82.c2))AND(t0.c63 COLLATE RTRIM)) ASC  NULLS LAST, t0.c63, (((+ (t82.c2))) NOT BETWEEN (((t0.c1)>(x''))) AND (TYPEOF(DISTINCT t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE RTRIM)AND(1706280084))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY ((LOWER(DISTINCT t82.c2))AND(t0.c63 COLLATE RTRIM)) ASC  NULLS LAST, t0.c63, (((+ (t82.c2))) NOT BETWEEN (((t0.c1)>(x''))) AND (TYPEOF(DISTINCT t0.c1)))  NULLS LAST);
SELECT * FROM t82, t0 NOT INDEXED, vt0 WHERE (((t0.c1 COLLATE RTRIM)AND(1706280084))) ORDER BY ((LOWER(DISTINCT t82.c2))AND(t0.c63 COLLATE RTRIM)) ASC  NULLS LAST, t0.c63, (((+ (t82.c2))) NOT BETWEEN (((t0.c1)>(x''))) AND (TYPEOF(DISTINCT t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE RTRIM)AND(1706280084))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY ((LOWER(DISTINCT t82.c2))AND(t0.c63 COLLATE RTRIM)) ASC  NULLS LAST, t0.c63, (((+ (t82.c2))) NOT BETWEEN (((t0.c1)>(x''))) AND (TYPEOF(DISTINCT t0.c1)))  NULLS LAST);
SELECT * FROM t82, t0 NOT INDEXED, vt0 WHERE (((t0.c1 COLLATE RTRIM)AND(1706280084))) ORDER BY ((LOWER(DISTINCT t82.c2))AND(t0.c63 COLLATE RTRIM)) ASC  NULLS LAST, t0.c63, (((+ (t82.c2))) NOT BETWEEN (((t0.c1)>(x''))) AND (TYPEOF(DISTINCT t0.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c63))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) IS TRUE)))) ORDER BY json_quote(t0.c0) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c1) AND (t0.c63))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY json_quote(t0.c0) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c63))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) IS TRUE)))) ORDER BY json_quote(t0.c0) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c1) AND (t0.c63))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY json_quote(t0.c0) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((x'') NOT BETWEEN (((t0.c2) ISNULL)) AND (CAST(t0.c0 AS BLOB)))) ORDER BY (((t82.c2 IN ()))-(t0.c63)) ASC, ((CAST(t82.c0 AS INTEGER))IS NOT((- (t0.c2))))  NULLS FIRST, TRIM(DISTINCT ABS(t0.c63));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((t0.c2) ISNULL)) AND (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (((t82.c2 IN ()))-(t0.c63)) ASC, ((CAST(t82.c0 AS INTEGER))IS NOT((- (t0.c2))))  NULLS FIRST, TRIM(DISTINCT ABS(t0.c63)));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((x'') NOT BETWEEN (((t0.c2) ISNULL)) AND (CAST(t0.c0 AS BLOB)))) ORDER BY (((t82.c2 IN ()))-(t0.c63)) ASC, ((CAST(t82.c0 AS INTEGER))IS NOT((- (t0.c2))))  NULLS FIRST, TRIM(DISTINCT ABS(t0.c63));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((t0.c2) ISNULL)) AND (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (((t82.c2 IN ()))-(t0.c63)) ASC, ((CAST(t82.c0 AS INTEGER))IS NOT((- (t0.c2))))  NULLS FIRST, TRIM(DISTINCT ABS(t0.c63)));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (((x'') NOT BETWEEN (((t0.c2) ISNULL)) AND (CAST(t0.c0 AS BLOB)))) ORDER BY (((t82.c2 IN ()))-(t0.c63)) ASC, ((CAST(t82.c0 AS INTEGER))IS NOT((- (t0.c2))))  NULLS FIRST, TRIM(DISTINCT ABS(t0.c63));
SELECT * FROM t82, vt0, t0 WHERE (((0Xffffffffdc1302bc) BETWEEN (((t0.c2)<=(NULL))) AND (']9')));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffdc1302bc) BETWEEN (((t0.c2)<=(NULL))) AND (']9'))) IS TRUE)  as count FROM t82, vt0, t0);
SELECT * FROM t82, vt0, t0 WHERE (((0Xffffffffdc1302bc) BETWEEN (((t0.c2)<=(NULL))) AND (']9')));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffdc1302bc) BETWEEN (((t0.c2)<=(NULL))) AND (']9'))) IS TRUE)  as count FROM t82, vt0, t0);
SELECT * FROM t82, vt0, t0 WHERE (((0Xffffffffdc1302bc) BETWEEN (((t0.c2)<=(NULL))) AND (']9')));
SELECT COUNT(*) FROM t0, t82 WHERE (((((t0.c1 COLLATE NOCASE)OR(((0x3acb2a53) BETWEEN (t82.c0) AND (t0.c2)))))AND(((t82.c1)<>(t82.c0))))) ORDER BY (CAST(t0.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE NOCASE)OR(((0x3acb2a53) BETWEEN (t82.c0) AND (t0.c2)))))AND(((t82.c1)!=(t82.c0))))) IS TRUE)  as count FROM t0, t82 ORDER BY (CAST(t0.c1 AS BLOB) IN ()));
SELECT COUNT(*) FROM t0, t82 WHERE (((((t0.c1 COLLATE NOCASE)OR(((0x3acb2a53) BETWEEN (t82.c0) AND (t0.c2)))))AND(((t82.c1)<>(t82.c0))))) ORDER BY (CAST(t0.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE NOCASE)OR(((0x3acb2a53) BETWEEN (t82.c0) AND (t0.c2)))))AND(((t82.c1)!=(t82.c0))))) IS TRUE)  as count FROM t0, t82 ORDER BY (CAST(t0.c1 AS BLOB) IN ()));
SELECT COUNT(*) FROM t0, t82 WHERE (((((t0.c1 COLLATE NOCASE)OR(((0x3acb2a53) BETWEEN (t82.c0) AND (t0.c2)))))AND(((t82.c1)<>(t82.c0))))) ORDER BY (CAST(t0.c1 AS BLOB) IN ());
SELECT * FROM t0, t82 WHERE ((((((t0.c2 IN ()))AND((+ (t82.c0)))))OR(((((((((t0.c1)AND(1.900823478E9)))OR(t0.c63)))OR(t0.c63)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2 IN ()))AND((+ (t82.c0)))))OR(((((((((t0.c1)AND(1.900823478E9)))OR(t0.c63)))OR(t0.c63)))AND(t0.c2))))) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE ((((((t0.c2 IN ()))AND((+ (t82.c0)))))OR(((((((((t0.c1)AND(1.900823478E9)))OR(t0.c63)))OR(t0.c63)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2 IN ()))AND((+ (t82.c0)))))OR(((((((((t0.c1)AND(1.900823478E9)))OR(t0.c63)))OR(t0.c63)))AND(t0.c2))))) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE ((((((t0.c2 IN ()))AND((+ (t82.c0)))))OR(((((((((t0.c1)AND(1.900823478E9)))OR(t0.c63)))OR(t0.c63)))AND(t0.c2)))));
SELECT COUNT(*) FROM t82, t0 WHERE (((((((((((t0.c63)/(t82.c2)))AND((t82.c0 IN ()))))OR(CASE WHEN t0.c63 THEN t0.c2 ELSE t82.c1 END)))OR(CASE t82.c0  WHEN t0.c2 THEN t0.c1 WHEN t82.c1 THEN x'' WHEN t82.c1 THEN t82.c0 END)))AND(((t0.c0)<>(t82.c2))))) ORDER BY t0.c1 ASC, UNLIKELY(DISTINCT ((t0.c63) BETWEEN (t82.c2) AND (t82.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c63)/(t82.c2)))AND((t82.c0 IN ()))))OR(CASE WHEN t0.c63 THEN t0.c2 ELSE t82.c1 END)))OR(CASE t82.c0  WHEN t0.c2 THEN t0.c1 WHEN t82.c1 THEN x'' WHEN t82.c1 THEN t82.c0 END)))AND(((t0.c0)!=(t82.c2))))) IS TRUE)  as count FROM t82, t0 ORDER BY t0.c1 ASC, UNLIKELY(DISTINCT ((t0.c63) BETWEEN (t82.c2) AND (t82.c2))) DESC);
SELECT COUNT(*) FROM t82, t0 WHERE (((((((((((t0.c63)/(t82.c2)))AND((t82.c0 IN ()))))OR(CASE WHEN t0.c63 THEN t0.c2 ELSE t82.c1 END)))OR(CASE t82.c0  WHEN t0.c2 THEN t0.c1 WHEN t82.c1 THEN x'' WHEN t82.c1 THEN t82.c0 END)))AND(((t0.c0)<>(t82.c2))))) ORDER BY t0.c1 ASC, UNLIKELY(DISTINCT ((t0.c63) BETWEEN (t82.c2) AND (t82.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c63)/(t82.c2)))AND((t82.c0 IN ()))))OR(CASE WHEN t0.c63 THEN t0.c2 ELSE t82.c1 END)))OR(CASE t82.c0  WHEN t0.c2 THEN t0.c1 WHEN t82.c1 THEN x'' WHEN t82.c1 THEN t82.c0 END)))AND(((t0.c0)!=(t82.c2))))) IS TRUE)  as count FROM t82, t0 ORDER BY t0.c1 ASC, UNLIKELY(DISTINCT ((t0.c63) BETWEEN (t82.c2) AND (t82.c2))) DESC);
SELECT COUNT(*) FROM t82, t0 WHERE (((((((((((t0.c63)/(t82.c2)))AND((t82.c0 IN ()))))OR(CASE WHEN t0.c63 THEN t0.c2 ELSE t82.c1 END)))OR(CASE t82.c0  WHEN t0.c2 THEN t0.c1 WHEN t82.c1 THEN x'' WHEN t82.c1 THEN t82.c0 END)))AND(((t0.c0)<>(t82.c2))))) ORDER BY t0.c1 ASC, UNLIKELY(DISTINCT ((t0.c63) BETWEEN (t82.c2) AND (t82.c2))) DESC;
SELECT ALL * FROM vt0 INNER JOIN t82 ON (((t0.c0))<((t82.c2))) COLLATE RTRIM COLLATE RTRIM FULL OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c63)))OR(NULL))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((t82.c0 IN ()))) WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY (((t82.c2))==(((- ('-1321047149')))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN t82 ON (((t0.c0))<((t82.c2))) COLLATE RTRIM COLLATE RTRIM FULL OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c63)))OR(NULL))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((t82.c0 IN ()))) ORDER BY (((t82.c2))=(((- ('-1321047149'))))));
SELECT ALL * FROM vt0 INNER JOIN t82 ON (((t0.c0))<((t82.c2))) COLLATE RTRIM COLLATE RTRIM FULL OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c63)))OR(NULL))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((t82.c0 IN ()))) WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY (((t82.c2))==(((- ('-1321047149')))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN t82 ON (((t0.c0))<((t82.c2))) COLLATE RTRIM COLLATE RTRIM FULL OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c63)))OR(NULL))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((t82.c0 IN ()))) ORDER BY (((t82.c2))=(((- ('-1321047149'))))));
SELECT * FROM t0 FULL OUTER JOIN t82 ON CASE WHEN ((t82.c2)<(t0.c1)) THEN (- (t0.c2)) WHEN ((((t0.c1)AND(t82.c2)))OR(t82.c0)) THEN (t0.c0 IN ()) WHEN CASE t0.c0  WHEN t0.c63 THEN t82.c1 END THEN (((t0.c63, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c63, t82.c0)) AND ((t82.c0, t82.c0, t82.c1))) END LEFT OUTER JOIN vt0 ON ((((((NULL) NOTNULL))AND(CASE t0.c1  WHEN t0.c63 THEN t82.c1 ELSE NULL END)))AND(t82.c1)) WHERE ((((t0.c1, '-1942133632', x'1cfc')) BETWEEN ((t0.c63, t82.c0, t82.c0)) AND ((t82.c0, t82.c0, t0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t0.c1, '-1942133632', x'1cfc')) BETWEEN ((t0.c63, t82.c0, t82.c0)) AND ((t82.c0, t82.c0, t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN t82 ON CASE WHEN ((t82.c2)<(t0.c1)) THEN (- (t0.c2)) WHEN ((((t0.c1)AND(t82.c2)))OR(t82.c0)) THEN (t0.c0 IN ()) WHEN CASE t0.c0  WHEN t0.c63 THEN t82.c1 END THEN (((t0.c63, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c63, t82.c0)) AND ((t82.c0, t82.c0, t82.c1))) END LEFT OUTER JOIN vt0 ON ((((((NULL) NOTNULL))AND(CASE t0.c1  WHEN t0.c63 THEN t82.c1 ELSE NULL END)))AND(t82.c1)));
SELECT * FROM t0 FULL OUTER JOIN t82 ON CASE WHEN ((t82.c2)<(t0.c1)) THEN (- (t0.c2)) WHEN ((((t0.c1)AND(t82.c2)))OR(t82.c0)) THEN (t0.c0 IN ()) WHEN CASE t0.c0  WHEN t0.c63 THEN t82.c1 END THEN (((t0.c63, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c63, t82.c0)) AND ((t82.c0, t82.c0, t82.c1))) END LEFT OUTER JOIN vt0 ON ((((((NULL) NOTNULL))AND(CASE t0.c1  WHEN t0.c63 THEN t82.c1 ELSE NULL END)))AND(t82.c1)) WHERE ((((t0.c1, '-1942133632', x'1cfc')) BETWEEN ((t0.c63, t82.c0, t82.c0)) AND ((t82.c0, t82.c0, t0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t0.c1, '-1942133632', x'1cfc')) BETWEEN ((t0.c63, t82.c0, t82.c0)) AND ((t82.c0, t82.c0, t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN t82 ON CASE WHEN ((t82.c2)<(t0.c1)) THEN (- (t0.c2)) WHEN ((((t0.c1)AND(t82.c2)))OR(t82.c0)) THEN (t0.c0 IN ()) WHEN CASE t0.c0  WHEN t0.c63 THEN t82.c1 END THEN (((t0.c63, t0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c63, t82.c0)) AND ((t82.c0, t82.c0, t82.c1))) END LEFT OUTER JOIN vt0 ON ((((((NULL) NOTNULL))AND(CASE t0.c1  WHEN t0.c63 THEN t82.c1 ELSE NULL END)))AND(t82.c1)));
SELECT * FROM t82, vt0, t0 WHERE (UNLIKELY(-1.960110509E9)) ORDER BY t0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(-1.960110509E9)) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY t0.c1 DESC  NULLS FIRST);
SELECT * FROM t82, vt0, t0 WHERE (UNLIKELY(-1.960110509E9)) ORDER BY t0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(-1.960110509E9)) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY t0.c1 DESC  NULLS FIRST);
SELECT * FROM t82, vt0, t0 WHERE (UNLIKELY(-1.960110509E9)) ORDER BY t0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON TIME(((t0.c0) BETWEEN (t0.c1) AND (t0.c63)), rtreenode('n', 0.3587961566334479), ((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) WHERE (((x'f6fe')AND(('1067595074' IN ())))) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'f6fe')AND(('1067595074' IN ())))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON TIME(((t0.c0) BETWEEN (t0.c1) AND (t0.c63)), rtreenode('n', 0.3587961566334479), ((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) ORDER BY t0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON TIME(((t0.c0) BETWEEN (t0.c1) AND (t0.c63)), rtreenode('n', 0.3587961566334479), ((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) WHERE (((x'f6fe')AND(('1067595074' IN ())))) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'f6fe')AND(('1067595074' IN ())))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON TIME(((t0.c0) BETWEEN (t0.c1) AND (t0.c63)), rtreenode('n', 0.3587961566334479), ((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) ORDER BY t0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON TIME(((t0.c0) BETWEEN (t0.c1) AND (t0.c63)), rtreenode('n', 0.3587961566334479), ((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) WHERE (((x'f6fe')AND(('1067595074' IN ())))) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t82, t0 WHERE ((((((t82.c1)GLOB(t82.c1))))==((t82.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1)GLOB(t82.c1))))==((t82.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE ((((((t82.c1)GLOB(t82.c1))))==((t82.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1)GLOB(t82.c1))))==((t82.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE ((((((t82.c1)GLOB(t82.c1))))==((t82.c1 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t82 ON 0.6388656529628081 WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN t82 ON 0.6388656529628081);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t82 ON 0.6388656529628081 WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN t82 ON 0.6388656529628081);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t82 ON 0.6388656529628081 WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0) NOT NULL))))) ORDER BY ((vt0.c0 COLLATE NOCASE)*((+ (vt0.c0)))), ((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)>>(vt0.c0)))))OR(TRIM(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)*((+ (vt0.c0)))), ((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)>>(vt0.c0)))))OR(TRIM(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0) NOT NULL))))) ORDER BY ((vt0.c0 COLLATE NOCASE)*((+ (vt0.c0)))), ((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)>>(vt0.c0)))))OR(TRIM(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)*((+ (vt0.c0)))), ((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)>>(vt0.c0)))))OR(TRIM(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0) NOT NULL))))) ORDER BY ((vt0.c0 COLLATE NOCASE)*((+ (vt0.c0)))), ((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)>>(vt0.c0)))))OR(TRIM(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))||((((t82.c2)) BETWEEN ((t0.c0)) AND ((t82.c0)))))) ORDER BY ((((t82.c0)OR(t0.c63)))IS(((t0.c63)<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))||((((t82.c2)) BETWEEN ((t0.c0)) AND ((t82.c0)))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY ((((t82.c0)OR(t0.c63)))IS(((t0.c63)<(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))||((((t82.c2)) BETWEEN ((t0.c0)) AND ((t82.c0)))))) ORDER BY ((((t82.c0)OR(t0.c63)))IS(((t0.c63)<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))||((((t82.c2)) BETWEEN ((t0.c0)) AND ((t82.c0)))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY ((((t82.c0)OR(t0.c63)))IS(((t0.c63)<(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))||((((t82.c2)) BETWEEN ((t0.c0)) AND ((t82.c0)))))) ORDER BY ((((t82.c0)OR(t0.c63)))IS(((t0.c63)<(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT * FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c63)<=(vt0.c0)) THEN NULL WHEN 'B*cA哲5O ' THEN x'' WHEN (vt0.c0 IN (t0.c63)) THEN (t0.c0 IN ()) ELSE (~ (t0.c63)) END WHERE (((t0.c2 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c63)<=(vt0.c0)) THEN NULL WHEN 'B*cA哲5O ' THEN x'' WHEN (vt0.c0 IN (t0.c63)) THEN (t0.c0 IN ()) ELSE (~ (t0.c63)) END);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c63)<=(vt0.c0)) THEN NULL WHEN 'B*cA哲5O ' THEN x'' WHEN (vt0.c0 IN (t0.c63)) THEN (t0.c0 IN ()) ELSE (~ (t0.c63)) END WHERE (((t0.c2 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c63)<=(vt0.c0)) THEN NULL WHEN 'B*cA哲5O ' THEN x'' WHEN (vt0.c0 IN (t0.c63)) THEN (t0.c0 IN ()) ELSE (~ (t0.c63)) END);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c63)<=(vt0.c0)) THEN NULL WHEN 'B*cA哲5O ' THEN x'' WHEN (vt0.c0 IN (t0.c63)) THEN (t0.c0 IN ()) ELSE (~ (t0.c63)) END WHERE (((t0.c2 COLLATE NOCASE) IS TRUE));
SELECT COUNT(*) FROM t82 WHERE (((((t82.c0) ISNULL))<=((t82.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c0) ISNULL))<=((t82.c1 IN ())))) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (((((t82.c0) ISNULL))<=((t82.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c0) ISNULL))<=((t82.c1 IN ())))) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (((((t82.c0) ISNULL))<=((t82.c1 IN ()))));
SELECT * FROM vt0, t82, t0 WHERE (HEX(vt0.c0)) ORDER BY ((MIN(t0.c2, t82.c2, vt0.c0, t82.c0))&(((t82.c0)*(t82.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt0.c0)) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY ((MIN(t0.c2, t82.c2, vt0.c0, t82.c0))&(((t82.c0)*(t82.c1))))  NULLS FIRST);
SELECT * FROM vt0, t82, t0 WHERE (HEX(vt0.c0)) ORDER BY ((MIN(t0.c2, t82.c2, vt0.c0, t82.c0))&(((t82.c0)*(t82.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt0.c0)) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY ((MIN(t0.c2, t82.c2, vt0.c0, t82.c0))&(((t82.c0)*(t82.c1))))  NULLS FIRST);
SELECT * FROM vt0, t82, t0 WHERE (HEX(vt0.c0)) ORDER BY ((MIN(t0.c2, t82.c2, vt0.c0, t82.c0))&(((t82.c0)*(t82.c1))))  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))OR('325680043')))OR(x'775635ee' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR('325680043')))OR(x'775635ee' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))OR('325680043')))OR(x'775635ee' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR('325680043')))OR(x'775635ee' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))OR('325680043')))OR(x'775635ee' COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((CASE 1.784295819E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (UNICODE(vt0.c0)))) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((vt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 1.784295819E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (UNICODE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))>=((vt0.c0 COLLATE RTRIM))) ASC);
SELECT ALL * FROM vt0 WHERE (((CASE 1.784295819E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (UNICODE(vt0.c0)))) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((vt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 1.784295819E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (UNICODE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))>=((vt0.c0 COLLATE RTRIM))) ASC);
SELECT ALL * FROM vt0 WHERE (((CASE 1.784295819E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (UNICODE(vt0.c0)))) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((vt0.c0 COLLATE RTRIM))) ASC;
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((COALESCE(0.6940439126381893, t82.c0)) BETWEEN ((((0.6605915468309622))!=((vt0.c0)))) AND (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t82.c2 END))) ORDER BY (+ (t0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(0.6940439126381893, t82.c0)) BETWEEN ((((0.6605915468309622))!=((vt0.c0)))) AND (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t82.c2 END))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (+ (t0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((COALESCE(0.6940439126381893, t82.c0)) BETWEEN ((((0.6605915468309622))!=((vt0.c0)))) AND (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t82.c2 END))) ORDER BY (+ (t0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(0.6940439126381893, t82.c0)) BETWEEN ((((0.6605915468309622))!=((vt0.c0)))) AND (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t82.c2 END))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (+ (t0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((COALESCE(0.6940439126381893, t82.c0)) BETWEEN ((((0.6605915468309622))!=((vt0.c0)))) AND (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t82.c2 END))) ORDER BY (+ (t0.c2 COLLATE NOCASE));
SELECT ALL * FROM t82 WHERE (CAST(((((((((((((t82.c2)AND(t82.c2)))OR(t82.c2)))AND(t82.c2)))OR(t82.c2)))AND(t82.c0)))AND(t82.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((t82.c2)AND(t82.c2)))OR(t82.c2)))AND(t82.c2)))OR(t82.c2)))AND(t82.c0)))AND(t82.c2)) AS TEXT)) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE (CAST(((((((((((((t82.c2)AND(t82.c2)))OR(t82.c2)))AND(t82.c2)))OR(t82.c2)))AND(t82.c0)))AND(t82.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((t82.c2)AND(t82.c2)))OR(t82.c2)))AND(t82.c2)))OR(t82.c2)))AND(t82.c0)))AND(t82.c2)) AS TEXT)) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE (CAST(((((((((((((t82.c2)AND(t82.c2)))OR(t82.c2)))AND(t82.c2)))OR(t82.c2)))AND(t82.c0)))AND(t82.c2)) AS TEXT));
SELECT * FROM t0, vt0 WHERE ('-1146424808');
SELECT SUM(count) FROM (SELECT (('-1146424808') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('-1146424808');
SELECT SUM(count) FROM (SELECT (('-1146424808') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('-1146424808');
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((((((((vt0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1))))<((((t0.c1) NOT NULL)))) WHERE ((NOT (json_array_length(vt0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (json_array_length(vt0.c0, t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((((((((vt0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1))))<((((t0.c1) NOT NULL)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((((((((vt0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1))))<((((t0.c1) NOT NULL)))) WHERE ((NOT (json_array_length(vt0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (json_array_length(vt0.c0, t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((((((((vt0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1))))<((((t0.c1) NOT NULL)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((((((((vt0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1))))<((((t0.c1) NOT NULL)))) WHERE ((NOT (json_array_length(vt0.c0, t0.c0))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c63, t0.c1, t0.c63)) NOT BETWEEN ((vt0.c0, t0.c1, t0.c2)) AND ((t0.c63, t0.c0, t0.c0))))OR(((t0.c2) IS FALSE))))OR((~ (t0.c0)))))AND(((t0.c2)/(t0.c0)))))AND((('777304557') IS TRUE))) WHERE ((((t0.c0, t0.c1, '-662996267')) NOT BETWEEN ((CASE WHEN t0.c63 THEN '5m' END, t0.c0 COLLATE BINARY, t0.c63 COLLATE BINARY)) AND ((((((t0.c1)AND(t0.c0)))OR(t0.c2)), t0.c63, t0.c1 COLLATE BINARY)))) ORDER BY ((t0.c2 COLLATE NOCASE)||(((0.49214630484721866)||(t0.c0)))), ((UPPER(t0.c0))-(((t0.c1)AND(t0.c2)))) ASC, CASE WHEN (x'' IN (x'', t0.c1)) THEN t0.c1 COLLATE RTRIM ELSE t0.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, '-662996267')) NOT BETWEEN ((CASE WHEN t0.c63 THEN '5m' END, t0.c0 COLLATE BINARY, t0.c63 COLLATE BINARY)) AND ((((((t0.c1)AND(t0.c0)))OR(t0.c2)), t0.c63, t0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c63, t0.c1, t0.c63)) NOT BETWEEN ((vt0.c0, t0.c1, t0.c2)) AND ((t0.c63, t0.c0, t0.c0))))OR(((t0.c2) IS FALSE))))OR((~ (t0.c0)))))AND(((t0.c2)/(t0.c0)))))AND((('777304557') IS TRUE))) ORDER BY ((t0.c2 COLLATE NOCASE)||(((0.49214630484721866)||(t0.c0)))), ((UPPER(t0.c0))-(((t0.c1)AND(t0.c2)))) ASC, CASE WHEN (x'' IN (x'', t0.c1)) THEN t0.c1 COLLATE RTRIM ELSE t0.c2 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c63, t0.c1, t0.c63)) NOT BETWEEN ((vt0.c0, t0.c1, t0.c2)) AND ((t0.c63, t0.c0, t0.c0))))OR(((t0.c2) IS FALSE))))OR((~ (t0.c0)))))AND(((t0.c2)/(t0.c0)))))AND((('777304557') IS TRUE))) WHERE ((((t0.c0, t0.c1, '-662996267')) NOT BETWEEN ((CASE WHEN t0.c63 THEN '5m' END, t0.c0 COLLATE BINARY, t0.c63 COLLATE BINARY)) AND ((((((t0.c1)AND(t0.c0)))OR(t0.c2)), t0.c63, t0.c1 COLLATE BINARY)))) ORDER BY ((t0.c2 COLLATE NOCASE)||(((0.49214630484721866)||(t0.c0)))), ((UPPER(t0.c0))-(((t0.c1)AND(t0.c2)))) ASC, CASE WHEN (x'' IN (x'', t0.c1)) THEN t0.c1 COLLATE RTRIM ELSE t0.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, '-662996267')) NOT BETWEEN ((CASE WHEN t0.c63 THEN '5m' END, t0.c0 COLLATE BINARY, t0.c63 COLLATE BINARY)) AND ((((((t0.c1)AND(t0.c0)))OR(t0.c2)), t0.c63, t0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c63, t0.c1, t0.c63)) NOT BETWEEN ((vt0.c0, t0.c1, t0.c2)) AND ((t0.c63, t0.c0, t0.c0))))OR(((t0.c2) IS FALSE))))OR((~ (t0.c0)))))AND(((t0.c2)/(t0.c0)))))AND((('777304557') IS TRUE))) ORDER BY ((t0.c2 COLLATE NOCASE)||(((0.49214630484721866)||(t0.c0)))), ((UPPER(t0.c0))-(((t0.c1)AND(t0.c2)))) ASC, CASE WHEN (x'' IN (x'', t0.c1)) THEN t0.c1 COLLATE RTRIM ELSE t0.c2 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c63, t0.c1, t0.c63)) NOT BETWEEN ((vt0.c0, t0.c1, t0.c2)) AND ((t0.c63, t0.c0, t0.c0))))OR(((t0.c2) IS FALSE))))OR((~ (t0.c0)))))AND(((t0.c2)/(t0.c0)))))AND((('777304557') IS TRUE))) WHERE ((((t0.c0, t0.c1, '-662996267')) NOT BETWEEN ((CASE WHEN t0.c63 THEN '5m' END, t0.c0 COLLATE BINARY, t0.c63 COLLATE BINARY)) AND ((((((t0.c1)AND(t0.c0)))OR(t0.c2)), t0.c63, t0.c1 COLLATE BINARY)))) ORDER BY ((t0.c2 COLLATE NOCASE)||(((0.49214630484721866)||(t0.c0)))), ((UPPER(t0.c0))-(((t0.c1)AND(t0.c2)))) ASC, CASE WHEN (x'' IN (x'', t0.c1)) THEN t0.c1 COLLATE RTRIM ELSE t0.c2 COLLATE NOCASE END ASC;
SELECT ALL COUNT(*) FROM t82 WHERE (((t82.c0) NOT BETWEEN (CAST(t82.c2 AS TEXT)) AND (CAST(t82.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((t82.c0) NOT BETWEEN (CAST(t82.c2 AS TEXT)) AND (CAST(t82.c2 AS NUMERIC)))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE (((t82.c0) NOT BETWEEN (CAST(t82.c2 AS TEXT)) AND (CAST(t82.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((t82.c0) NOT BETWEEN (CAST(t82.c2 AS TEXT)) AND (CAST(t82.c2 AS NUMERIC)))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE (((t82.c0) NOT BETWEEN (CAST(t82.c2 AS TEXT)) AND (CAST(t82.c2 AS NUMERIC))));
SELECT ALL * FROM t82 FULL OUTER JOIN t0 ON ((CAST(t0.c63 AS TEXT))AND(((t0.c63)|(t82.c0)))) WHERE ((((t82.c0 IN (t0.c1)))|(CASE t82.c1  WHEN t0.c0 THEN 1399485342 WHEN t0.c63 THEN t0.c1 WHEN t0.c63 THEN t82.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t82.c0 IN (t0.c1)))|(CASE t82.c1  WHEN t0.c0 THEN 1399485342 WHEN t0.c63 THEN t0.c1 WHEN t0.c63 THEN t82.c0 END))) IS TRUE)  as count FROM t82 FULL OUTER JOIN t0 ON ((CAST(t0.c63 AS TEXT))AND(((t0.c63)|(t82.c0)))));
SELECT ALL * FROM t82 FULL OUTER JOIN t0 ON ((CAST(t0.c63 AS TEXT))AND(((t0.c63)|(t82.c0)))) WHERE ((((t82.c0 IN (t0.c1)))|(CASE t82.c1  WHEN t0.c0 THEN 1399485342 WHEN t0.c63 THEN t0.c1 WHEN t0.c63 THEN t82.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t82.c0 IN (t0.c1)))|(CASE t82.c1  WHEN t0.c0 THEN 1399485342 WHEN t0.c63 THEN t0.c1 WHEN t0.c63 THEN t82.c0 END))) IS TRUE)  as count FROM t82 FULL OUTER JOIN t0 ON ((CAST(t0.c63 AS TEXT))AND(((t0.c63)|(t82.c0)))));
SELECT ALL * FROM t82 FULL OUTER JOIN t0 ON ((CAST(t0.c63 AS TEXT))AND(((t0.c63)|(t82.c0)))) WHERE ((((t82.c0 IN (t0.c1)))|(CASE t82.c1  WHEN t0.c0 THEN 1399485342 WHEN t0.c63 THEN t0.c1 WHEN t0.c63 THEN t82.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t82 CROSS JOIN t0 ON t82.c2 WHERE (CAST(LOWER(DISTINCT t0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT t0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, t82 CROSS JOIN t0 ON t82.c2);
SELECT ALL COUNT(*) FROM vt0, t82 CROSS JOIN t0 ON t82.c2 WHERE (CAST(LOWER(DISTINCT t0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT t0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, t82 CROSS JOIN t0 ON t82.c2);
SELECT ALL COUNT(*) FROM vt0, t82 CROSS JOIN t0 ON t82.c2 WHERE (CAST(LOWER(DISTINCT t0.c0) AS BLOB));
SELECT COUNT(*) FROM vt0, t82 WHERE ((~ ((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t82);
SELECT COUNT(*) FROM vt0, t82 WHERE ((~ ((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t82);
SELECT COUNT(*) FROM vt0, t82 WHERE ((~ ((((vt0.c0))<>((vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t82 ON (~ (((((((((t0.c0)OR(t82.c1)))OR(t0.c0)))AND(t0.c1)))AND(t82.c1)))) LEFT OUTER JOIN vt0 ON ((((t0.c63 IN ()), t0.c0, (+ (t82.c1)), t0.c63, '868566140'))<((((((((((t0.c63)OR(vt0.c0)))AND(t82.c1)))AND(vt0.c0)))AND(t0.c0)), (- (x'')), (((t0.c0))>((t82.c0))), ((t0.c63) BETWEEN (t82.c1) AND (vt0.c0)), (+ (t82.c1))))) WHERE (CASE WHEN ((t82.c1)<(t0.c0)) THEN t0.c0 ELSE CAST(t82.c2 AS TEXT) END) ORDER BY (((((t82.c0)||(t0.c0))))<=((t0.c2))), (((((((((((vt0.c0))<((t82.c1))))OR((((t0.c0))>=((NULL))))))AND(((t82.c0)<=(t0.c1)))))OR(json_array_length(t82.c0))))OR(CAST(t82.c0 AS BLOB))), x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t82.c1)<(t0.c0)) THEN t0.c0 ELSE CAST(t82.c2 AS TEXT) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t82 ON (~ (((((((((t0.c0)OR(t82.c1)))OR(t0.c0)))AND(t0.c1)))AND(t82.c1)))) LEFT OUTER JOIN vt0 ON ((((t0.c63 IN ()), t0.c0, (+ (t82.c1)), t0.c63, '868566140'))<((((((((((t0.c63)OR(vt0.c0)))AND(t82.c1)))AND(vt0.c0)))AND(t0.c0)), (- (x'')), (((t0.c0))>((t82.c0))), ((t0.c63) BETWEEN (t82.c1) AND (vt0.c0)), (+ (t82.c1))))) ORDER BY (((((t82.c0)||(t0.c0))))<=((t0.c2))), (((((((((((vt0.c0))<((t82.c1))))OR((((t0.c0))>=((NULL))))))AND(((t82.c0)<=(t0.c1)))))OR(json_array_length(t82.c0))))OR(CAST(t82.c0 AS BLOB))), x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t82 ON (~ (((((((((t0.c0)OR(t82.c1)))OR(t0.c0)))AND(t0.c1)))AND(t82.c1)))) LEFT OUTER JOIN vt0 ON ((((t0.c63 IN ()), t0.c0, (+ (t82.c1)), t0.c63, '868566140'))<((((((((((t0.c63)OR(vt0.c0)))AND(t82.c1)))AND(vt0.c0)))AND(t0.c0)), (- (x'')), (((t0.c0))>((t82.c0))), ((t0.c63) BETWEEN (t82.c1) AND (vt0.c0)), (+ (t82.c1))))) WHERE (CASE WHEN ((t82.c1)<(t0.c0)) THEN t0.c0 ELSE CAST(t82.c2 AS TEXT) END) ORDER BY (((((t82.c0)||(t0.c0))))<=((t0.c2))), (((((((((((vt0.c0))<((t82.c1))))OR((((t0.c0))>=((NULL))))))AND(((t82.c0)<=(t0.c1)))))OR(json_array_length(t82.c0))))OR(CAST(t82.c0 AS BLOB))), x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t82.c1)<(t0.c0)) THEN t0.c0 ELSE CAST(t82.c2 AS TEXT) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t82 ON (~ (((((((((t0.c0)OR(t82.c1)))OR(t0.c0)))AND(t0.c1)))AND(t82.c1)))) LEFT OUTER JOIN vt0 ON ((((t0.c63 IN ()), t0.c0, (+ (t82.c1)), t0.c63, '868566140'))<((((((((((t0.c63)OR(vt0.c0)))AND(t82.c1)))AND(vt0.c0)))AND(t0.c0)), (- (x'')), (((t0.c0))>((t82.c0))), ((t0.c63) BETWEEN (t82.c1) AND (vt0.c0)), (+ (t82.c1))))) ORDER BY (((((t82.c0)||(t0.c0))))<=((t0.c2))), (((((((((((vt0.c0))<((t82.c1))))OR((((t0.c0))>=((NULL))))))AND(((t82.c0)<=(t0.c1)))))OR(json_array_length(t82.c0))))OR(CAST(t82.c0 AS BLOB))), x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t82 ON (~ (((((((((t0.c0)OR(t82.c1)))OR(t0.c0)))AND(t0.c1)))AND(t82.c1)))) LEFT OUTER JOIN vt0 ON ((((t0.c63 IN ()), t0.c0, (+ (t82.c1)), t0.c63, '868566140'))<((((((((((t0.c63)OR(vt0.c0)))AND(t82.c1)))AND(vt0.c0)))AND(t0.c0)), (- (x'')), (((t0.c0))>((t82.c0))), ((t0.c63) BETWEEN (t82.c1) AND (vt0.c0)), (+ (t82.c1))))) WHERE (CASE WHEN ((t82.c1)<(t0.c0)) THEN t0.c0 ELSE CAST(t82.c2 AS TEXT) END) ORDER BY (((((t82.c0)||(t0.c0))))<=((t0.c2))), (((((((((((vt0.c0))<((t82.c1))))OR((((t0.c0))>=((NULL))))))AND(((t82.c0)<=(t0.c1)))))OR(json_array_length(t82.c0))))OR(CAST(t82.c0 AS BLOB))), x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (((t82.c2) IS FALSE) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)AND(t82.c2)))OR(x'')) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t82.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t82 ORDER BY CAST(((((vt0.c0)AND(t82.c2)))OR(x'')) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (((t82.c2) IS FALSE) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)AND(t82.c2)))OR(x'')) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t82.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t82 ORDER BY CAST(((((vt0.c0)AND(t82.c2)))OR(x'')) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (((t82.c2) IS FALSE) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)AND(t82.c2)))OR(x'')) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) ORDER BY ((((((((CAST('?5 (e' AS REAL))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c63)))))OR(vt0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((CAST('?5 (e' AS REAL))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c63)))))OR(vt0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c2 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) ORDER BY ((((((((CAST('?5 (e' AS REAL))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c63)))))OR(vt0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((CAST('?5 (e' AS REAL))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c63)))))OR(vt0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c2 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) ORDER BY ((((((((CAST('?5 (e' AS REAL))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c63)))))OR(vt0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c2 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (t82.c1) ORDER BY CASE CAST(t82.c0 AS INTEGER)  WHEN (((t82.c0))>=((t82.c2))) THEN '-1461673501' ELSE (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t82.c1))) END  NULLS FIRST, (((((~ (t0.c0)))AND(((t82.c1) BETWEEN (vt0.c0) AND (t82.c0)))))AND('1680968858'));
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY CASE CAST(t82.c0 AS INTEGER)  WHEN (((t82.c0))>=((t82.c2))) THEN '-1461673501' ELSE (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t82.c1))) END  NULLS FIRST, (((((~ (t0.c0)))AND(((t82.c1) BETWEEN (vt0.c0) AND (t82.c0)))))AND('1680968858')));
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (t82.c1) ORDER BY CASE CAST(t82.c0 AS INTEGER)  WHEN (((t82.c0))>=((t82.c2))) THEN '-1461673501' ELSE (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t82.c1))) END  NULLS FIRST, (((((~ (t0.c0)))AND(((t82.c1) BETWEEN (vt0.c0) AND (t82.c0)))))AND('1680968858'));
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY CASE CAST(t82.c0 AS INTEGER)  WHEN (((t82.c0))>=((t82.c2))) THEN '-1461673501' ELSE (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t82.c1))) END  NULLS FIRST, (((((~ (t0.c0)))AND(((t82.c1) BETWEEN (vt0.c0) AND (t82.c0)))))AND('1680968858')));
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (t82.c1) ORDER BY CASE CAST(t82.c0 AS INTEGER)  WHEN (((t82.c0))>=((t82.c2))) THEN '-1461673501' ELSE (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t82.c1))) END  NULLS FIRST, (((((~ (t0.c0)))AND(((t82.c1) BETWEEN (vt0.c0) AND (t82.c0)))))AND('1680968858'));
SELECT ALL * FROM vt0 NATURAL JOIN t82 WHERE (CAST(CASE WHEN t82.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL), (+ ((((t82.c2))<((t82.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t82.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN t82 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL), (+ ((((t82.c2))<((t82.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t82 WHERE (CAST(CASE WHEN t82.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL), (+ ((((t82.c2))<((t82.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t82.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN t82 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL), (+ ((((t82.c2))<((t82.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t82 WHERE (CAST(CASE WHEN t82.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL), (+ ((((t82.c2))<((t82.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((CASE t82.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)AND(NULL)))OR(t82.c2)) LEFT OUTER JOIN t82 ON ((((((((((t0.c0) NOTNULL))AND(((t0.c2) IS TRUE))))AND(((t0.c1) BETWEEN (t0.c63) AND (t0.c1)))))AND(t0.c2 COLLATE RTRIM)))OR(((t0.c2) BETWEEN (t0.c2) AND (t82.c1)))) WHERE ((((((((t82.c0))<((t82.c0))))OR((('-1479148697')||(t82.c1)))))OR((+ (t0.c0))))) ORDER BY CASE WHEN ((t82.c1) BETWEEN (t0.c2) AND (t82.c0)) THEN t0.c2 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t82.c0))<((t82.c0))))OR((('-1479148697')||(t82.c1)))))OR((+ (t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((CASE t82.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)AND(NULL)))OR(t82.c2)) LEFT OUTER JOIN t82 ON ((((((((((t0.c0) NOTNULL))AND(((t0.c2) IS TRUE))))AND(((t0.c1) BETWEEN (t0.c63) AND (t0.c1)))))AND(t0.c2 COLLATE RTRIM)))OR(((t0.c2) BETWEEN (t0.c2) AND (t82.c1)))) ORDER BY CASE WHEN ((t82.c1) BETWEEN (t0.c2) AND (t82.c0)) THEN t0.c2 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((CASE t82.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)AND(NULL)))OR(t82.c2)) LEFT OUTER JOIN t82 ON ((((((((((t0.c0) NOTNULL))AND(((t0.c2) IS TRUE))))AND(((t0.c1) BETWEEN (t0.c63) AND (t0.c1)))))AND(t0.c2 COLLATE RTRIM)))OR(((t0.c2) BETWEEN (t0.c2) AND (t82.c1)))) WHERE ((((((((t82.c0))<((t82.c0))))OR((('-1479148697')||(t82.c1)))))OR((+ (t0.c0))))) ORDER BY CASE WHEN ((t82.c1) BETWEEN (t0.c2) AND (t82.c0)) THEN t0.c2 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t82.c0))<((t82.c0))))OR((('-1479148697')||(t82.c1)))))OR((+ (t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((CASE t82.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)AND(NULL)))OR(t82.c2)) LEFT OUTER JOIN t82 ON ((((((((((t0.c0) NOTNULL))AND(((t0.c2) IS TRUE))))AND(((t0.c1) BETWEEN (t0.c63) AND (t0.c1)))))AND(t0.c2 COLLATE RTRIM)))OR(((t0.c2) BETWEEN (t0.c2) AND (t82.c1)))) ORDER BY CASE WHEN ((t82.c1) BETWEEN (t0.c2) AND (t82.c0)) THEN t0.c2 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((CASE t82.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)AND(NULL)))OR(t82.c2)) LEFT OUTER JOIN t82 ON ((((((((((t0.c0) NOTNULL))AND(((t0.c2) IS TRUE))))AND(((t0.c1) BETWEEN (t0.c63) AND (t0.c1)))))AND(t0.c2 COLLATE RTRIM)))OR(((t0.c2) BETWEEN (t0.c2) AND (t82.c1)))) WHERE ((((((((t82.c0))<((t82.c0))))OR((('-1479148697')||(t82.c1)))))OR((+ (t0.c0))))) ORDER BY CASE WHEN ((t82.c1) BETWEEN (t0.c2) AND (t82.c0)) THEN t0.c2 COLLATE NOCASE END  NULLS LAST;
SELECT * FROM t82, t0 WHERE (t82.c2) ORDER BY (((t82.c2)) NOT BETWEEN (((t0.c0 IN ()))) AND (((((t0.c63))>((t82.c0))))));
SELECT SUM(count) FROM (SELECT ((t82.c2) IS TRUE)  as count FROM t82, t0 ORDER BY (((t82.c2)) NOT BETWEEN (((t0.c0 IN ()))) AND (((((t0.c63))>((t82.c0)))))));
SELECT * FROM t82, t0 WHERE (t82.c2) ORDER BY (((t82.c2)) NOT BETWEEN (((t0.c0 IN ()))) AND (((((t0.c63))>((t82.c0))))));
SELECT SUM(count) FROM (SELECT ((t82.c2) IS TRUE)  as count FROM t82, t0 ORDER BY (((t82.c2)) NOT BETWEEN (((t0.c0 IN ()))) AND (((((t0.c63))>((t82.c0)))))));
SELECT * FROM t82, t0 WHERE (t82.c2) ORDER BY (((t82.c2)) NOT BETWEEN (((t0.c0 IN ()))) AND (((((t0.c63))>((t82.c0))))));
SELECT * FROM t82 WHERE (((IFNULL(DISTINCT 0xffffffffcf10bcb7, t82.c0)) BETWEEN ('VMX8O') AND ((t82.c0 IN ())))) ORDER BY SQLITE_VERSION()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT 0Xffffffffcf10bcb7, t82.c0)) BETWEEN ('VMX8O') AND ((t82.c0 IN ())))) IS TRUE)  as count FROM t82 ORDER BY SQLITE_VERSION()  NULLS FIRST);
SELECT * FROM t82 WHERE (((IFNULL(DISTINCT 0xffffffffcf10bcb7, t82.c0)) BETWEEN ('VMX8O') AND ((t82.c0 IN ())))) ORDER BY SQLITE_VERSION()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT 0Xffffffffcf10bcb7, t82.c0)) BETWEEN ('VMX8O') AND ((t82.c0 IN ())))) IS TRUE)  as count FROM t82 ORDER BY SQLITE_VERSION()  NULLS FIRST);
SELECT * FROM t82 WHERE (((IFNULL(DISTINCT 0xffffffffcf10bcb7, t82.c0)) BETWEEN ('VMX8O') AND ((t82.c0 IN ())))) ORDER BY SQLITE_VERSION()  NULLS FIRST;
SELECT ALL * FROM t0, t82 WHERE (((t0.c2)&(DATETIME(t0.c2, t82.c0, t0.c63)))) ORDER BY CAST((NOT ('-1928052974')) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)&(DATETIME(t0.c2, t82.c0, t0.c63)))) IS TRUE)  as count FROM t0, t82 ORDER BY CAST((NOT ('-1928052974')) AS BLOB));
SELECT ALL * FROM t0, t82 WHERE (((t0.c2)&(DATETIME(t0.c2, t82.c0, t0.c63)))) ORDER BY CAST((NOT ('-1928052974')) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)&(DATETIME(t0.c2, t82.c0, t0.c63)))) IS TRUE)  as count FROM t0, t82 ORDER BY CAST((NOT ('-1928052974')) AS BLOB));
SELECT ALL * FROM t0, t82 WHERE (((t0.c2)&(DATETIME(t0.c2, t82.c0, t0.c63)))) ORDER BY CAST((NOT ('-1928052974')) AS BLOB);
SELECT COUNT(*) FROM t82 WHERE (TRIM((t82.c0 IN ()), t82.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((t82.c0 IN ()), t82.c0)) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (TRIM((t82.c0 IN ()), t82.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((t82.c0 IN ()), t82.c0)) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (TRIM((t82.c0 IN ()), t82.c0));
SELECT COUNT(*) FROM t0, t82 INDEXED BY i48 WHERE (((CAST(t0.c2 AS INTEGER)) BETWEEN (t0.c1 COLLATE BINARY) AND ((NOT (t82.c0))))) ORDER BY (- (((t0.c2)<=(t0.c2)))) ASC  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND (((+ (t82.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER)) BETWEEN (t0.c1 COLLATE BINARY) AND ((NOT (t82.c0))))) IS TRUE)  as count FROM t0, t82 INDEXED BY i48 ORDER BY (- (((t0.c2)<=(t0.c2)))) ASC  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND (((+ (t82.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, t82 INDEXED BY i48 WHERE (((CAST(t0.c2 AS INTEGER)) BETWEEN (t0.c1 COLLATE BINARY) AND ((NOT (t82.c0))))) ORDER BY (- (((t0.c2)<=(t0.c2)))) ASC  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND (((+ (t82.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER)) BETWEEN (t0.c1 COLLATE BINARY) AND ((NOT (t82.c0))))) IS TRUE)  as count FROM t0, t82 INDEXED BY i48 ORDER BY (- (((t0.c2)<=(t0.c2)))) ASC  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND (((+ (t82.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM t82, vt0 WHERE (RTRIM(CAST(t82.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((RTRIM(CAST(t82.c1 AS NUMERIC))) IS TRUE)  as count FROM t82, vt0);
SELECT ALL * FROM t82, vt0 WHERE (RTRIM(CAST(t82.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((RTRIM(CAST(t82.c1 AS NUMERIC))) IS TRUE)  as count FROM t82, vt0);
SELECT ALL * FROM t82, vt0 WHERE (RTRIM(CAST(t82.c1 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c2) NOT NULL) THEN t0.c63 COLLATE BINARY END) ORDER BY CAST(t0.c1 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c2) NOT NULL) THEN t0.c63 COLLATE BINARY END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY CAST(t0.c1 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c2) NOT NULL) THEN t0.c63 COLLATE BINARY END) ORDER BY CAST(t0.c1 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c2) NOT NULL) THEN t0.c63 COLLATE BINARY END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY CAST(t0.c1 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c2) NOT NULL) THEN t0.c63 COLLATE BINARY END) ORDER BY CAST(t0.c1 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((',]+~-Po>')&((((t0.c0))>((t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL ((((',]+~-Po>')&((((t0.c0))>((t0.c63)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((',]+~-Po>')&((((t0.c0))>((t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL ((((',]+~-Po>')&((((t0.c0))>((t0.c63)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((',]+~-Po>')&((((t0.c0))>((t0.c63))))));
SELECT ALL COUNT(*) FROM t82, vt0 NATURAL JOIN t0 WHERE (((t0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (((t82.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((t0.c2)AND(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t82, vt0 NATURAL JOIN t0 ORDER BY (((t82.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((t0.c2)AND(t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t82, vt0 NATURAL JOIN t0 WHERE (((t0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (((t82.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((t0.c2)AND(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t82, vt0 NATURAL JOIN t0 ORDER BY (((t82.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((t0.c2)AND(t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t82, vt0 NATURAL JOIN t0 WHERE (((t0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (((t82.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((t0.c2)AND(t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (0.1424699889908596) AND (t0.c63))))) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND ('-874727024'))) ISNULL)  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN '2	oT\rK''R~' END) NOTNULL) ASC  NULLS FIRST, (- (((((t0.c63)OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) NOT BETWEEN (0.1424699889908596) AND (t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND ('-874727024'))) ISNULL)  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN '2	oT\rK''R~' END) NOTNULL) ASC  NULLS FIRST, (- (((((t0.c63)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (0.1424699889908596) AND (t0.c63))))) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND ('-874727024'))) ISNULL)  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN '2	oT\rK''R~' END) NOTNULL) ASC  NULLS FIRST, (- (((((t0.c63)OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) NOT BETWEEN (0.1424699889908596) AND (t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND ('-874727024'))) ISNULL)  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN '2	oT\rK''R~' END) NOTNULL) ASC  NULLS FIRST, (- (((((t0.c63)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (0.1424699889908596) AND (t0.c63))))) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND ('-874727024'))) ISNULL)  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN '2	oT\rK''R~' END) NOTNULL) ASC  NULLS FIRST, (- (((((t0.c63)OR(vt0.c0)))OR(vt0.c0))));
SELECT * FROM t82 WHERE ((((((t82.c0)|(x'7595')), ((t82.c0) NOT NULL), ((t82.c2)/(t82.c0))))=((CASE t82.c0  WHEN t82.c1 THEN t82.c0 WHEN t82.c1 THEN t82.c2 WHEN NULL THEN t82.c1 END, t82.c0, ((t82.c2)IS(t82.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t82.c0)|(x'7595')), ((t82.c0) NOT NULL), ((t82.c2)/(t82.c0))))=((CASE t82.c0  WHEN t82.c1 THEN t82.c0 WHEN t82.c1 THEN t82.c2 WHEN NULL THEN t82.c1 END, t82.c0, ((t82.c2)IS(t82.c0)))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ((((((t82.c0)|(x'7595')), ((t82.c0) NOT NULL), ((t82.c2)/(t82.c0))))=((CASE t82.c0  WHEN t82.c1 THEN t82.c0 WHEN t82.c1 THEN t82.c2 WHEN NULL THEN t82.c1 END, t82.c0, ((t82.c2)IS(t82.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t82.c0)|(x'7595')), ((t82.c0) NOT NULL), ((t82.c2)/(t82.c0))))=((CASE t82.c0  WHEN t82.c1 THEN t82.c0 WHEN t82.c1 THEN t82.c2 WHEN NULL THEN t82.c1 END, t82.c0, ((t82.c2)IS(t82.c0)))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ((((((t82.c0)|(x'7595')), ((t82.c0) NOT NULL), ((t82.c2)/(t82.c0))))=((CASE t82.c0  WHEN t82.c1 THEN t82.c0 WHEN t82.c1 THEN t82.c2 WHEN NULL THEN t82.c1 END, t82.c0, ((t82.c2)IS(t82.c0))))));
SELECT * FROM t0, t82 WHERE ((~ ((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c2 IN ())))) IS TRUE)  as count FROM t0, t82 NOT INDEXED);
SELECT * FROM t0, t82 WHERE ((~ ((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c2 IN ())))) IS TRUE)  as count FROM t0, t82 NOT INDEXED);
SELECT * FROM t0, t82 WHERE ((~ ((t0.c2 IN ()))));
SELECT ALL * FROM t0 WHERE ((~ (-3.59597764E8 COLLATE NOCASE))) ORDER BY (('Wp.1{]_w')<>(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN '-1044502935' WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END))  NULLS FIRST, (((((t0.c0, t0.c0, t0.c0))<>((t0.c0, '864421728', t0.c1)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (-3.59597764E8 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (('Wp.1{]_w')!=(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN '-1044502935' WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END))  NULLS FIRST, (((((t0.c0, t0.c0, t0.c0))!=((t0.c0, '864421728', t0.c1)))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((~ (-3.59597764E8 COLLATE NOCASE))) ORDER BY (('Wp.1{]_w')<>(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN '-1044502935' WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END))  NULLS FIRST, (((((t0.c0, t0.c0, t0.c0))<>((t0.c0, '864421728', t0.c1)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (-3.59597764E8 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (('Wp.1{]_w')!=(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN '-1044502935' WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END))  NULLS FIRST, (((((t0.c0, t0.c0, t0.c0))!=((t0.c0, '864421728', t0.c1)))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((~ (-3.59597764E8 COLLATE NOCASE))) ORDER BY (('Wp.1{]_w')<>(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN '-1044502935' WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END))  NULLS FIRST, (((((t0.c0, t0.c0, t0.c0))<>((t0.c0, '864421728', t0.c1)))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM t82, vt0, t0 NOT INDEXED WHERE (t0.c63) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY x'');
SELECT COUNT(*) FROM t82, vt0, t0 NOT INDEXED WHERE (t0.c63) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY x'');
SELECT COUNT(*) FROM t82, vt0, t0 NOT INDEXED WHERE (t0.c63) ORDER BY x'';
SELECT * FROM t82 WHERE (((CASE WHEN t82.c0 THEN t82.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t82.c0 THEN t82.c0 END) NOT NULL)) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (((CASE WHEN t82.c0 THEN t82.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t82.c0 THEN t82.c0 END) NOT NULL)) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (((CASE WHEN t82.c0 THEN t82.c0 END) NOT NULL));
SELECT ALL * FROM t82, t0 WHERE ((((t0.c1 IN (t82.c1)))||(CAST(t82.c2 AS NUMERIC)))) ORDER BY ((((((t82.c2)&('-1995502651')))OR((t0.c1 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))) DESC  NULLS LAST, ((((t82.c1) ISNULL))%(((((((((t0.c1)OR(t82.c2)))AND(t0.c63)))OR(t0.c1)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t82.c1)))||(CAST(t82.c2 AS NUMERIC)))) IS TRUE)  as count FROM t82, t0 ORDER BY ((((((t82.c2)&('-1995502651')))OR((t0.c1 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))) DESC  NULLS LAST, ((((t82.c1) ISNULL))%(((((((((t0.c1)OR(t82.c2)))AND(t0.c63)))OR(t0.c1)))OR(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t82, t0 WHERE ((((t0.c1 IN (t82.c1)))||(CAST(t82.c2 AS NUMERIC)))) ORDER BY ((((((t82.c2)&('-1995502651')))OR((t0.c1 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))) DESC  NULLS LAST, ((((t82.c1) ISNULL))%(((((((((t0.c1)OR(t82.c2)))AND(t0.c63)))OR(t0.c1)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t82.c1)))||(CAST(t82.c2 AS NUMERIC)))) IS TRUE)  as count FROM t82, t0 ORDER BY ((((((t82.c2)&('-1995502651')))OR((t0.c1 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))) DESC  NULLS LAST, ((((t82.c1) ISNULL))%(((((((((t0.c1)OR(t82.c2)))AND(t0.c63)))OR(t0.c1)))OR(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t82, t0 WHERE ((((t0.c1 IN (t82.c1)))||(CAST(t82.c2 AS NUMERIC)))) ORDER BY ((((((t82.c2)&('-1995502651')))OR((t0.c1 IN ()))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))) DESC  NULLS LAST, ((((t82.c1) ISNULL))%(((((((((t0.c1)OR(t82.c2)))AND(t0.c63)))OR(t0.c1)))OR(t0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((t0.c1 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR(((((t0.c63)AND(t0.c63)))OR(t0.c1)))))OR((((t0.c1, t0.c63, t0.c63, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c63, t0.c0, x'')) AND ((t0.c63, t0.c1, t0.c63, t0.c63, 0x592865d8))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR(((((t0.c63)AND(t0.c63)))OR(t0.c1)))))OR((((t0.c1, t0.c63, t0.c63, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c63, t0.c0, x'')) AND ((t0.c63, t0.c1, t0.c63, t0.c63, 0x592865d8)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c1 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR(((((t0.c63)AND(t0.c63)))OR(t0.c1)))))OR((((t0.c1, t0.c63, t0.c63, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c63, t0.c0, x'')) AND ((t0.c63, t0.c1, t0.c63, t0.c63, 0x592865d8))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR(((((t0.c63)AND(t0.c63)))OR(t0.c1)))))OR((((t0.c1, t0.c63, t0.c63, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c63, t0.c0, x'')) AND ((t0.c63, t0.c1, t0.c63, t0.c63, 0x592865d8)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c1 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOT NULL))))OR(((((t0.c63)AND(t0.c63)))OR(t0.c1)))))OR((((t0.c1, t0.c63, t0.c63, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c63, t0.c0, x'')) AND ((t0.c63, t0.c1, t0.c63, t0.c63, 0x592865d8))))));
SELECT * FROM t82 WHERE (0X72783635);
SELECT SUM(count) FROM (SELECT ((0X72783635) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (0X72783635);
SELECT SUM(count) FROM (SELECT ((0X72783635) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (0X72783635);
SELECT COUNT(*) FROM t0, t82 WHERE (((('Z'))=((0.19205099366449963))));
SELECT SUM(count) FROM (SELECT ALL ((((('Z'))=((0.19205099366449963)))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE (((('Z'))=((0.19205099366449963))));
SELECT SUM(count) FROM (SELECT ALL ((((('Z'))=((0.19205099366449963)))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE (((('Z'))=((0.19205099366449963))));
SELECT ALL * FROM t82 INNER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t0 ON t0.c1 WHERE ((((((t82.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))!=((((((NULL)OR(t82.c1)))AND(t82.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))!=((((((NULL)OR(t82.c1)))AND(t82.c2)))))) IS TRUE)  as count FROM t82 INNER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t0 ON t0.c1);
SELECT ALL * FROM t82 INNER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t0 ON t0.c1 WHERE ((((((t82.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))!=((((((NULL)OR(t82.c1)))AND(t82.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))!=((((((NULL)OR(t82.c1)))AND(t82.c2)))))) IS TRUE)  as count FROM t82 INNER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t0 ON t0.c1);
SELECT ALL * FROM t82 INNER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t0 ON t0.c1 WHERE ((((((t82.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))!=((((((NULL)OR(t82.c1)))AND(t82.c2))))));
SELECT ALL * FROM t82 WHERE ((- (t82.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t82.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE ((- (t82.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t82.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE ((- (t82.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE ((((CASE WHEN t82.c2 THEN t0.c63 ELSE t82.c2 END))=(((+ (t82.c2)))))) ORDER BY (((t0.c2)) BETWEEN ((CASE vt0.c0  WHEN t0.c2 THEN t82.c0 WHEN t82.c2 THEN t82.c0 WHEN t82.c2 THEN 0.33874842371513125 END)) AND ((((((t82.c0)AND(t0.c1)))AND(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t82.c2 THEN t0.c63 ELSE t82.c2 END))=(((+ (t82.c2)))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (((t0.c2)) BETWEEN ((CASE vt0.c0  WHEN t0.c2 THEN t82.c0 WHEN t82.c2 THEN t82.c0 WHEN t82.c2 THEN 0.33874842371513125 END)) AND ((((((t82.c0)AND(t0.c1)))AND(t0.c63))))));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE ((((CASE WHEN t82.c2 THEN t0.c63 ELSE t82.c2 END))=(((+ (t82.c2)))))) ORDER BY (((t0.c2)) BETWEEN ((CASE vt0.c0  WHEN t0.c2 THEN t82.c0 WHEN t82.c2 THEN t82.c0 WHEN t82.c2 THEN 0.33874842371513125 END)) AND ((((((t82.c0)AND(t0.c1)))AND(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t82.c2 THEN t0.c63 ELSE t82.c2 END))=(((+ (t82.c2)))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (((t0.c2)) BETWEEN ((CASE vt0.c0  WHEN t0.c2 THEN t82.c0 WHEN t82.c2 THEN t82.c0 WHEN t82.c2 THEN 0.33874842371513125 END)) AND ((((((t82.c0)AND(t0.c1)))AND(t0.c63))))));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE ((((CASE WHEN t82.c2 THEN t0.c63 ELSE t82.c2 END))=(((+ (t82.c2)))))) ORDER BY (((t0.c2)) BETWEEN ((CASE vt0.c0  WHEN t0.c2 THEN t82.c0 WHEN t82.c2 THEN t82.c0 WHEN t82.c2 THEN 0.33874842371513125 END)) AND ((((((t82.c0)AND(t0.c1)))AND(t0.c63)))));
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c2))>((t82.c1))))IS NOT(((t82.c2) BETWEEN (t82.c1) AND (t82.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t82.c2))>((t82.c1))))IS NOT(((t82.c2) BETWEEN (t82.c1) AND (t82.c2))))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c2))>((t82.c1))))IS NOT(((t82.c2) BETWEEN (t82.c1) AND (t82.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t82.c2))>((t82.c1))))IS NOT(((t82.c2) BETWEEN (t82.c1) AND (t82.c2))))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c2))>((t82.c1))))IS NOT(((t82.c2) BETWEEN (t82.c1) AND (t82.c2)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))OR(((t0.c1)-(t0.c0)))))AND((((t0.c2))>=(('-1496036405'))))) WHERE (NULL) ORDER BY ((((((t0.c2)GLOB(t0.c63)))AND(CAST(vt0.c0 AS INTEGER))))AND(t0.c63 COLLATE RTRIM)) DESC, CASE t0.c2  WHEN -1.929524331E9 THEN ((t0.c2)>=(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) END, ((t0.c2) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))OR(((t0.c1)-(t0.c0)))))AND((((t0.c2))>=(('-1496036405'))))) ORDER BY ((((((t0.c2)GLOB(t0.c63)))AND(CAST(vt0.c0 AS INTEGER))))AND(t0.c63 COLLATE RTRIM)) DESC, CASE t0.c2  WHEN -1.929524331E9 THEN ((t0.c2)>=(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) END, ((t0.c2) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))OR(((t0.c1)-(t0.c0)))))AND((((t0.c2))>=(('-1496036405'))))) WHERE (NULL) ORDER BY ((((((t0.c2)GLOB(t0.c63)))AND(CAST(vt0.c0 AS INTEGER))))AND(t0.c63 COLLATE RTRIM)) DESC, CASE t0.c2  WHEN -1.929524331E9 THEN ((t0.c2)>=(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) END, ((t0.c2) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))OR(((t0.c1)-(t0.c0)))))AND((((t0.c2))>=(('-1496036405'))))) ORDER BY ((((((t0.c2)GLOB(t0.c63)))AND(CAST(vt0.c0 AS INTEGER))))AND(t0.c63 COLLATE RTRIM)) DESC, CASE t0.c2  WHEN -1.929524331E9 THEN ((t0.c2)>=(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) END, ((t0.c2) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))OR(((t0.c1)-(t0.c0)))))AND((((t0.c2))>=(('-1496036405'))))) WHERE (NULL) ORDER BY ((((((t0.c2)GLOB(t0.c63)))AND(CAST(vt0.c0 AS INTEGER))))AND(t0.c63 COLLATE RTRIM)) DESC, CASE t0.c2  WHEN -1.929524331E9 THEN ((t0.c2)>=(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) END, ((t0.c2) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c0, t82.c1)) IN ()) CROSS JOIN t0 ON NULL WHERE ((((json_valid(vt0.c0), CASE WHEN t0.c63 THEN t0.c63 WHEN t82.c1 THEN 0.33894495222221543 WHEN t0.c63 THEN t82.c2 ELSE vt0.c0 END, t82.c2))<=((((t0.c1) ISNULL), CASE WHEN t0.c0 THEN vt0.c0 END, t82.c2)))) ORDER BY ((- (t82.c1)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((json_valid(vt0.c0), CASE WHEN t0.c63 THEN t0.c63 WHEN t82.c1 THEN 0.33894495222221543 WHEN t0.c63 THEN t82.c2 ELSE vt0.c0 END, t82.c2))<=((((t0.c1) ISNULL), CASE WHEN t0.c0 THEN vt0.c0 END, t82.c2)))) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c0, t82.c1)) IN ()) CROSS JOIN t0 ON NULL ORDER BY ((- (t82.c1)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c0, t82.c1)) IN ()) CROSS JOIN t0 ON NULL WHERE ((((json_valid(vt0.c0), CASE WHEN t0.c63 THEN t0.c63 WHEN t82.c1 THEN 0.33894495222221543 WHEN t0.c63 THEN t82.c2 ELSE vt0.c0 END, t82.c2))<=((((t0.c1) ISNULL), CASE WHEN t0.c0 THEN vt0.c0 END, t82.c2)))) ORDER BY ((- (t82.c1)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((json_valid(vt0.c0), CASE WHEN t0.c63 THEN t0.c63 WHEN t82.c1 THEN 0.33894495222221543 WHEN t0.c63 THEN t82.c2 ELSE vt0.c0 END, t82.c2))<=((((t0.c1) ISNULL), CASE WHEN t0.c0 THEN vt0.c0 END, t82.c2)))) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c0, t82.c1)) IN ()) CROSS JOIN t0 ON NULL ORDER BY ((- (t82.c1)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c0, t82.c1)) IN ()) CROSS JOIN t0 ON NULL WHERE ((((json_valid(vt0.c0), CASE WHEN t0.c63 THEN t0.c63 WHEN t82.c1 THEN 0.33894495222221543 WHEN t0.c63 THEN t82.c2 ELSE vt0.c0 END, t82.c2))<=((((t0.c1) ISNULL), CASE WHEN t0.c0 THEN vt0.c0 END, t82.c2)))) ORDER BY ((- (t82.c1)) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY (((t0.c2, NULL, t0.c1)) NOT BETWEEN ((((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c63)))AND(t0.c2)), ((t0.c1)<=(t0.c63)), CASE NULL  WHEN t0.c2 THEN t0.c63 ELSE t0.c1 END)) AND ((NULL, ((t0.c2)||(t0.c63)), (((t0.c63))!=((t0.c63)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2, NULL, t0.c1)) NOT BETWEEN ((((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c63)))AND(t0.c2)), ((t0.c1)<=(t0.c63)), CASE NULL  WHEN t0.c2 THEN t0.c63 ELSE t0.c1 END)) AND ((NULL, ((t0.c2)||(t0.c63)), (((t0.c63))<>((t0.c63)))))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY (((t0.c2, NULL, t0.c1)) NOT BETWEEN ((((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c63)))AND(t0.c2)), ((t0.c1)<=(t0.c63)), CASE NULL  WHEN t0.c2 THEN t0.c63 ELSE t0.c1 END)) AND ((NULL, ((t0.c2)||(t0.c63)), (((t0.c63))!=((t0.c63)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2, NULL, t0.c1)) NOT BETWEEN ((((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c63)))AND(t0.c2)), ((t0.c1)<=(t0.c63)), CASE NULL  WHEN t0.c2 THEN t0.c63 ELSE t0.c1 END)) AND ((NULL, ((t0.c2)||(t0.c63)), (((t0.c63))<>((t0.c63)))))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY (((t0.c2, NULL, t0.c1)) NOT BETWEEN ((((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c63)))AND(t0.c2)), ((t0.c1)<=(t0.c63)), CASE NULL  WHEN t0.c2 THEN t0.c63 ELSE t0.c1 END)) AND ((NULL, ((t0.c2)||(t0.c63)), (((t0.c63))!=((t0.c63)))))) DESC;
SELECT ALL * FROM t82, t0 WHERE (1466835006);
SELECT SUM(count) FROM (SELECT ALL ((1466835006) IS TRUE)  as count FROM t82, t0);
SELECT ALL * FROM t82, t0 WHERE (1466835006);
SELECT SUM(count) FROM (SELECT ALL ((1466835006) IS TRUE)  as count FROM t82, t0);
SELECT ALL * FROM t82, t0 WHERE (1466835006);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY (TRIM(DISTINCT vt0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY (TRIM(DISTINCT vt0.c0) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY (TRIM(DISTINCT vt0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY (TRIM(DISTINCT vt0.c0) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY (TRIM(DISTINCT vt0.c0) IN ()) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c63, 0.454649257983749, t0.c1)) NOT BETWEEN ((((t0.c1)%(vt0.c0)), HEX(DISTINCT vt0.c0), ((((0.5978494166100553)AND(t0.c2)))AND(t0.c1)))) AND ((LIKELIHOOD(DISTINCT t0.c63, 0.7641151063582415), ((t0.c1) ISNULL), LOWER('-505493078')))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63, 0.454649257983749, t0.c1)) NOT BETWEEN ((((t0.c1)%(vt0.c0)), HEX(DISTINCT vt0.c0), ((((0.5978494166100553)AND(t0.c2)))AND(t0.c1)))) AND ((LIKELIHOOD(DISTINCT t0.c63, 0.7641151063582415), ((t0.c1) ISNULL), LOWER('-505493078'))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c63, 0.454649257983749, t0.c1)) NOT BETWEEN ((((t0.c1)%(vt0.c0)), HEX(DISTINCT vt0.c0), ((((0.5978494166100553)AND(t0.c2)))AND(t0.c1)))) AND ((LIKELIHOOD(DISTINCT t0.c63, 0.7641151063582415), ((t0.c1) ISNULL), LOWER('-505493078')))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63, 0.454649257983749, t0.c1)) NOT BETWEEN ((((t0.c1)%(vt0.c0)), HEX(DISTINCT vt0.c0), ((((0.5978494166100553)AND(t0.c2)))AND(t0.c1)))) AND ((LIKELIHOOD(DISTINCT t0.c63, 0.7641151063582415), ((t0.c1) ISNULL), LOWER('-505493078'))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c63, 0.454649257983749, t0.c1)) NOT BETWEEN ((((t0.c1)%(vt0.c0)), HEX(DISTINCT vt0.c0), ((((0.5978494166100553)AND(t0.c2)))AND(t0.c1)))) AND ((LIKELIHOOD(DISTINCT t0.c63, 0.7641151063582415), ((t0.c1) ISNULL), LOWER('-505493078')))));
SELECT * FROM t82 WHERE (((((((t82.c2)OR(t82.c2)))OR(t82.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((t82.c2)OR(t82.c2)))OR(t82.c2))) ISNULL)) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (((((((t82.c2)OR(t82.c2)))OR(t82.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((t82.c2)OR(t82.c2)))OR(t82.c2))) ISNULL)) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (((((((t82.c2)OR(t82.c2)))OR(t82.c2))) ISNULL));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM t0, t82 WHERE ((((LIKE(t0.c2, t82.c0)))=((((t82.c2)GLOB(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKE(t0.c2, t82.c0)))==((((t82.c2)GLOB(x'')))))) IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE ((((LIKE(t0.c2, t82.c0)))=((((t82.c2)GLOB(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKE(t0.c2, t82.c0)))==((((t82.c2)GLOB(x'')))))) IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE ((((LIKE(t0.c2, t82.c0)))=((((t82.c2)GLOB(x''))))));
SELECT COUNT(*) FROM vt0 WHERE (((NULL)IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (((((CAST(t82.c2 AS TEXT))OR(json_valid(vt0.c0))))OR(((t82.c0) BETWEEN (t0.c63) AND (t82.c0))))) ORDER BY t82.c1 COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((CAST(t82.c2 AS TEXT))OR(json_valid(vt0.c0))))OR(((t82.c0) BETWEEN (t0.c63) AND (t82.c0))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY t82.c1 COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (((((CAST(t82.c2 AS TEXT))OR(json_valid(vt0.c0))))OR(((t82.c0) BETWEEN (t0.c63) AND (t82.c0))))) ORDER BY t82.c1 COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((CAST(t82.c2 AS TEXT))OR(json_valid(vt0.c0))))OR(((t82.c0) BETWEEN (t0.c63) AND (t82.c0))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY t82.c1 COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (((((CAST(t82.c2 AS TEXT))OR(json_valid(vt0.c0))))OR(((t82.c0) BETWEEN (t0.c63) AND (t82.c0))))) ORDER BY t82.c1 COLLATE NOCASE COLLATE BINARY;
SELECT ALL * FROM vt0 WHERE (((0.7083214573483887) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (0.19990227007396077))))) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7083214573483887) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (0.19990227007396077))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (((0.7083214573483887) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (0.19990227007396077))))) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7083214573483887) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (0.19990227007396077))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (((0.7083214573483887) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (0.19990227007396077))))) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS INTEGER) ASC;
SELECT * FROM t82 WHERE ('H,');
SELECT SUM(count) FROM (SELECT (('H,') IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ('H,');
SELECT SUM(count) FROM (SELECT (('H,') IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ('H,');
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (((((((((t82.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c0)))OR(t82.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((t82.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c0)))OR(t82.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t82, vt0);
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (((((((((t82.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c0)))OR(t82.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((t82.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c0)))OR(t82.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t82, vt0);
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (((((((((t82.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c0)))OR(t82.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM t82, t0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL * FROM t82, t0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL * FROM t82, t0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, 0.2983840411595522, t0.c63))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 END)))AND(((t0.c0)>>(t0.c1))))) ORDER BY (((t0.c0 IN ())) BETWEEN (((((((((t0.c2)OR(t0.c0)))OR(t0.c63)))AND(t0.c63)))OR(t0.c1))) AND (((t0.c1)*(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0, t0.c0, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, 0.2983840411595522, t0.c63))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 END)))AND(((t0.c0)>>(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ())) BETWEEN (((((((((t0.c2)OR(t0.c0)))OR(t0.c63)))AND(t0.c63)))OR(t0.c1))) AND (((t0.c1)*(t0.c0)))));
SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, 0.2983840411595522, t0.c63))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 END)))AND(((t0.c0)>>(t0.c1))))) ORDER BY (((t0.c0 IN ())) BETWEEN (((((((((t0.c2)OR(t0.c0)))OR(t0.c63)))AND(t0.c63)))OR(t0.c1))) AND (((t0.c1)*(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0, t0.c0, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, 0.2983840411595522, t0.c63))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 END)))AND(((t0.c0)>>(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ())) BETWEEN (((((((((t0.c2)OR(t0.c0)))OR(t0.c63)))AND(t0.c63)))OR(t0.c1))) AND (((t0.c1)*(t0.c0)))));
SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, 0.2983840411595522, t0.c63))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 END)))AND(((t0.c0)>>(t0.c1))))) ORDER BY (((t0.c0 IN ())) BETWEEN (((((((((t0.c2)OR(t0.c0)))OR(t0.c63)))AND(t0.c63)))OR(t0.c1))) AND (((t0.c1)*(t0.c0))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(((t82.c0)&(t82.c1)) AS NUMERIC) CROSS JOIN t82 ON (- (((vt0.c0)/(t0.c2)))) WHERE ((((vt0.c0 COLLATE NOCASE))<=((t0.c2)))) ORDER BY ((CASE ',F'  WHEN t82.c2 THEN t82.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))<=((t0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((t82.c0)&(t82.c1)) AS NUMERIC) CROSS JOIN t82 ON (- (((vt0.c0)/(t0.c2)))) ORDER BY ((CASE ',F'  WHEN t82.c2 THEN t82.c0 END) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(((t82.c0)&(t82.c1)) AS NUMERIC) CROSS JOIN t82 ON (- (((vt0.c0)/(t0.c2)))) WHERE ((((vt0.c0 COLLATE NOCASE))<=((t0.c2)))) ORDER BY ((CASE ',F'  WHEN t82.c2 THEN t82.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))<=((t0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((t82.c0)&(t82.c1)) AS NUMERIC) CROSS JOIN t82 ON (- (((vt0.c0)/(t0.c2)))) ORDER BY ((CASE ',F'  WHEN t82.c2 THEN t82.c0 END) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(((t82.c0)&(t82.c1)) AS NUMERIC) CROSS JOIN t82 ON (- (((vt0.c0)/(t0.c2)))) WHERE ((((vt0.c0 COLLATE NOCASE))<=((t0.c2)))) ORDER BY ((CASE ',F'  WHEN t82.c2 THEN t82.c0 END) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM vt0, t82 FULL OUTER JOIN t0 ON (((vt0.c0))<((t0.c1))) COLLATE NOCASE WHERE ((~ (x'3a57')));
SELECT SUM(count) FROM (SELECT (((~ (x'3a57'))) IS TRUE)  as count FROM vt0, t82 FULL OUTER JOIN t0 ON (((vt0.c0))<((t0.c1))) COLLATE NOCASE);
SELECT ALL * FROM vt0, t82 FULL OUTER JOIN t0 ON (((vt0.c0))<((t0.c1))) COLLATE NOCASE WHERE ((~ (x'3a57')));
SELECT SUM(count) FROM (SELECT (((~ (x'3a57'))) IS TRUE)  as count FROM vt0, t82 FULL OUTER JOIN t0 ON (((vt0.c0))<((t0.c1))) COLLATE NOCASE);
SELECT ALL * FROM vt0, t82 FULL OUTER JOIN t0 ON (((vt0.c0))<((t0.c1))) COLLATE NOCASE WHERE ((~ (x'3a57')));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c1 IN ()))AND((t0.c2 IN ()))))OR(((vt0.c0) IS FALSE)))) ORDER BY CAST(CASE t0.c1  WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST, CAST(((t0.c0) IS FALSE) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((((t0.c1 IN ()))AND((t0.c2 IN ()))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CAST(CASE t0.c1  WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST, CAST(((t0.c0) IS FALSE) AS BLOB));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c1 IN ()))AND((t0.c2 IN ()))))OR(((vt0.c0) IS FALSE)))) ORDER BY CAST(CASE t0.c1  WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST, CAST(((t0.c0) IS FALSE) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((((t0.c1 IN ()))AND((t0.c2 IN ()))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CAST(CASE t0.c1  WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST, CAST(((t0.c0) IS FALSE) AS BLOB));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c1 IN ()))AND((t0.c2 IN ()))))OR(((vt0.c0) IS FALSE)))) ORDER BY CAST(CASE t0.c1  WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST, CAST(((t0.c0) IS FALSE) AS BLOB);
SELECT ALL * FROM t82, t0, vt0 WHERE (CASE (('-1191442492')<(t82.c0))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (('-1191442492')<(t82.c0))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 END) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL * FROM t82, t0, vt0 WHERE (CASE (('-1191442492')<(t82.c0))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (('-1191442492')<(t82.c0))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 END) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL * FROM t82, t0, vt0 WHERE (CASE (('-1191442492')<(t82.c0))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 END);
SELECT ALL * FROM t82 CROSS JOIN t0 ON ((vt0.c0) NOT BETWEEN (x'') AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((t82.c0 COLLATE NOCASE)LIKE((~ (t0.c0)))) WHERE (((((t82.c1)||(t0.c63))) IS FALSE)) ORDER BY CAST((t82.c1 IN ()) AS NUMERIC), (~ (t0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c63) IS FALSE) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t82.c1)||(t0.c63))) IS FALSE)) IS TRUE)  as count FROM t82 CROSS JOIN t0 ON ((vt0.c0) NOT BETWEEN (x'') AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((t82.c0 COLLATE NOCASE)LIKE((~ (t0.c0)))) ORDER BY CAST((t82.c1 IN ()) AS NUMERIC), (~ (t0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c63) IS FALSE) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t82 CROSS JOIN t0 ON ((vt0.c0) NOT BETWEEN (x'') AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((t82.c0 COLLATE NOCASE)LIKE((~ (t0.c0)))) WHERE (((((t82.c1)||(t0.c63))) IS FALSE)) ORDER BY CAST((t82.c1 IN ()) AS NUMERIC), (~ (t0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c63) IS FALSE) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t82.c1)||(t0.c63))) IS FALSE)) IS TRUE)  as count FROM t82 CROSS JOIN t0 ON ((vt0.c0) NOT BETWEEN (x'') AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((t82.c0 COLLATE NOCASE)LIKE((~ (t0.c0)))) ORDER BY CAST((t82.c1 IN ()) AS NUMERIC), (~ (t0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c63) IS FALSE) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t82 CROSS JOIN t0 ON ((vt0.c0) NOT BETWEEN (x'') AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((t82.c0 COLLATE NOCASE)LIKE((~ (t0.c0)))) WHERE (((((t82.c1)||(t0.c63))) IS FALSE)) ORDER BY CAST((t82.c1 IN ()) AS NUMERIC), (~ (t0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c63) IS FALSE) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t82 WHERE (((t82.c2)OR(t82.c1)) COLLATE BINARY) ORDER BY (- ((t82.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t82.c2)OR(t82.c1)) COLLATE BINARY) IS TRUE)  as count FROM t82 ORDER BY (- ((t82.c1 IN ()))));
SELECT ALL * FROM t82 WHERE (((t82.c2)OR(t82.c1)) COLLATE BINARY) ORDER BY (- ((t82.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t82.c2)OR(t82.c1)) COLLATE BINARY) IS TRUE)  as count FROM t82 ORDER BY (- ((t82.c1 IN ()))));
SELECT ALL * FROM t82 WHERE (((t82.c2)OR(t82.c1)) COLLATE BINARY) ORDER BY (- ((t82.c1 IN ())));
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE RTRIM DESC);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE RTRIM DESC);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN t82 ON (- (((t0.c63)*(t82.c1)))) LEFT OUTER JOIN t0 ON ((t0.c63)-(t0.c63)) COLLATE RTRIM WHERE (((((t82.c0) NOT BETWEEN (t82.c2) AND (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c0) NOT BETWEEN (t82.c2) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t82 ON (- (((t0.c63)*(t82.c1)))) LEFT OUTER JOIN t0 ON ((t0.c63)-(t0.c63)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 CROSS JOIN t82 ON (- (((t0.c63)*(t82.c1)))) LEFT OUTER JOIN t0 ON ((t0.c63)-(t0.c63)) COLLATE RTRIM WHERE (((((t82.c0) NOT BETWEEN (t82.c2) AND (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c0) NOT BETWEEN (t82.c2) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t82 ON (- (((t0.c63)*(t82.c1)))) LEFT OUTER JOIN t0 ON ((t0.c63)-(t0.c63)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 CROSS JOIN t82 ON (- (((t0.c63)*(t82.c1)))) LEFT OUTER JOIN t0 ON ((t0.c63)-(t0.c63)) COLLATE RTRIM WHERE (((((t82.c0) NOT BETWEEN (t82.c2) AND (t0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(CASE WHEN NULL THEN x'c195' END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE WHEN NULL THEN x'c195' END)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(CASE WHEN NULL THEN x'c195' END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE WHEN NULL THEN x'c195' END)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(CASE WHEN NULL THEN x'c195' END));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE ((((+ (t82.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (t82.c0))) IS FALSE)) IS TRUE)  as count FROM t82, vt0, t0);
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE ((((+ (t82.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (t82.c0))) IS FALSE)) IS TRUE)  as count FROM t82, vt0, t0);
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE ((((+ (t82.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c63) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1) BETWEEN (t0.c63) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c63) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1) BETWEEN (t0.c63) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c63) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE);
SELECT ALL * FROM t82, t0 WHERE (((((((((t82.c2)AND(t0.c1)))OR(t0.c2)))OR(CAST(t82.c2 AS NUMERIC))))AND(t0.c63))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((t82.c2)AND(t0.c1)))OR(t0.c2)))OR(CAST(t82.c2 AS NUMERIC))))AND(t0.c63))) IS TRUE)  as count FROM t82, t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t82, t0 WHERE (((((((((t82.c2)AND(t0.c1)))OR(t0.c2)))OR(CAST(t82.c2 AS NUMERIC))))AND(t0.c63))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((t82.c2)AND(t0.c1)))OR(t0.c2)))OR(CAST(t82.c2 AS NUMERIC))))AND(t0.c63))) IS TRUE)  as count FROM t82, t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t82, t0 WHERE (((((((((t82.c2)AND(t0.c1)))OR(t0.c2)))OR(CAST(t82.c2 AS NUMERIC))))AND(t0.c63))) ORDER BY t0.c0 DESC;
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE ('Az*4(');
SELECT SUM(count) FROM (SELECT ALL (('Az*4(') IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE ('Az*4(');
SELECT SUM(count) FROM (SELECT ALL (('Az*4(') IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE ('Az*4(');
SELECT COUNT(*) FROM t82, vt0 WHERE (x'') ORDER BY 0.46253999470469875  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t82, vt0 ORDER BY 0.46253999470469875  NULLS LAST);
SELECT COUNT(*) FROM t82, vt0 WHERE (x'') ORDER BY 0.46253999470469875  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t82, vt0 ORDER BY 0.46253999470469875  NULLS LAST);
SELECT COUNT(*) FROM t82, vt0 WHERE (x'') ORDER BY 0.46253999470469875  NULLS LAST;
SELECT COUNT(*) FROM t82 WHERE (((((((((((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)))OR(((t82.c1)OR(t82.c0)))))AND(((t82.c1)!=(t82.c1)))))OR(t82.c1 COLLATE RTRIM)))OR(((t82.c1)IS(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)))OR(((t82.c1)OR(t82.c0)))))AND(((t82.c1)!=(t82.c1)))))OR(t82.c1 COLLATE RTRIM)))OR(((t82.c1)IS(t82.c0))))) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (((((((((((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)))OR(((t82.c1)OR(t82.c0)))))AND(((t82.c1)!=(t82.c1)))))OR(t82.c1 COLLATE RTRIM)))OR(((t82.c1)IS(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)))OR(((t82.c1)OR(t82.c0)))))AND(((t82.c1)!=(t82.c1)))))OR(t82.c1 COLLATE RTRIM)))OR(((t82.c1)IS(t82.c0))))) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (((((((((((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)))OR(((t82.c1)OR(t82.c0)))))AND(((t82.c1)!=(t82.c1)))))OR(t82.c1 COLLATE RTRIM)))OR(((t82.c1)IS(t82.c0)))));
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN ((t82.c2)/(t82.c2)) THEN ((((0.4267026353291512)OR(t82.c0)))AND(t82.c2)) END) ORDER BY (((((t82.c1))>((t82.c1)))) NOT BETWEEN (((((t82.c0)OR(t82.c2)))OR(t82.c2))) AND ((t82.c1 IN (t82.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t82.c2)/(t82.c2)) THEN ((((0.4267026353291512)OR(t82.c0)))AND(t82.c2)) END) IS TRUE)  as count FROM t82 ORDER BY (((((t82.c1))>((t82.c1)))) NOT BETWEEN (((((t82.c0)OR(t82.c2)))OR(t82.c2))) AND ((t82.c1 IN (t82.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN ((t82.c2)/(t82.c2)) THEN ((((0.4267026353291512)OR(t82.c0)))AND(t82.c2)) END) ORDER BY (((((t82.c1))>((t82.c1)))) NOT BETWEEN (((((t82.c0)OR(t82.c2)))OR(t82.c2))) AND ((t82.c1 IN (t82.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t82.c2)/(t82.c2)) THEN ((((0.4267026353291512)OR(t82.c0)))AND(t82.c2)) END) IS TRUE)  as count FROM t82 ORDER BY (((((t82.c1))>((t82.c1)))) NOT BETWEEN (((((t82.c0)OR(t82.c2)))OR(t82.c2))) AND ((t82.c1 IN (t82.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN ((t82.c2)/(t82.c2)) THEN ((((0.4267026353291512)OR(t82.c0)))AND(t82.c2)) END) ORDER BY (((((t82.c1))>((t82.c1)))) NOT BETWEEN (((((t82.c0)OR(t82.c2)))OR(t82.c2))) AND ((t82.c1 IN (t82.c2))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((~ (((-2068702095) NOT BETWEEN (NULL) AND (t0.c1))))) ORDER BY ((((t0.c1)>>(t0.c2)))<((('-1022008187') NOT BETWEEN (t0.c63) AND ('-890727162'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((-2068702095) NOT BETWEEN (NULL) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)>>(t0.c2)))<((('-1022008187') NOT BETWEEN (t0.c63) AND ('-890727162'))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (((-2068702095) NOT BETWEEN (NULL) AND (t0.c1))))) ORDER BY ((((t0.c1)>>(t0.c2)))<((('-1022008187') NOT BETWEEN (t0.c63) AND ('-890727162'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((-2068702095) NOT BETWEEN (NULL) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)>>(t0.c2)))<((('-1022008187') NOT BETWEEN (t0.c63) AND ('-890727162'))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (((-2068702095) NOT BETWEEN (NULL) AND (t0.c1))))) ORDER BY ((((t0.c1)>>(t0.c2)))<((('-1022008187') NOT BETWEEN (t0.c63) AND ('-890727162'))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC, '';
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC, '');
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC, '';
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC, '');
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC, '';
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t82 ON ((CAST(t82.c2 AS REAL))IS NOT(((t82.c0)*(vt0.c0)))) WHERE (((((~ (t82.c2))))<>((t82.c2 COLLATE RTRIM)))) ORDER BY (((~ (t82.c1))) BETWEEN (NULL) AND (CAST(t82.c0 AS NUMERIC))), ((((t82.c1)GLOB(t82.c1)))<(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t82.c2))))<>((t82.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t82 ON ((CAST(t82.c2 AS REAL))IS NOT(((t82.c0)*(vt0.c0)))) ORDER BY (((~ (t82.c1))) BETWEEN (NULL) AND (CAST(t82.c0 AS NUMERIC))), ((((t82.c1)GLOB(t82.c1)))<(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t82 ON ((CAST(t82.c2 AS REAL))IS NOT(((t82.c0)*(vt0.c0)))) WHERE (((((~ (t82.c2))))<>((t82.c2 COLLATE RTRIM)))) ORDER BY (((~ (t82.c1))) BETWEEN (NULL) AND (CAST(t82.c0 AS NUMERIC))), ((((t82.c1)GLOB(t82.c1)))<(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t82.c2))))<>((t82.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t82 ON ((CAST(t82.c2 AS REAL))IS NOT(((t82.c0)*(vt0.c0)))) ORDER BY (((~ (t82.c1))) BETWEEN (NULL) AND (CAST(t82.c0 AS NUMERIC))), ((((t82.c1)GLOB(t82.c1)))<(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t82 ON ((CAST(t82.c2 AS REAL))IS NOT(((t82.c0)*(vt0.c0)))) WHERE (((((~ (t82.c2))))<>((t82.c2 COLLATE RTRIM)))) ORDER BY (((~ (t82.c1))) BETWEEN (NULL) AND (CAST(t82.c0 AS NUMERIC))), ((((t82.c1)GLOB(t82.c1)))<(vt0.c0))  NULLS FIRST;
SELECT * FROM t82, t0, vt0 WHERE (CASE WHEN HEX(t82.c2) THEN ((t82.c1)IS(0.7424374158499965)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(t82.c2) THEN ((t82.c1)IS(0.7424374158499965)) END) IS TRUE)  as count FROM t82, t0, vt0);
SELECT * FROM t82, t0, vt0 WHERE (CASE WHEN HEX(t82.c2) THEN ((t82.c1)IS(0.7424374158499965)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(t82.c2) THEN ((t82.c1)IS(0.7424374158499965)) END) IS TRUE)  as count FROM t82, t0, vt0);
SELECT * FROM t82, t0, vt0 WHERE (CASE WHEN HEX(t82.c2) THEN ((t82.c1)IS(0.7424374158499965)) END);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i48 WHERE (CASE (((t0.c0, t0.c1, t0.c63)) BETWEEN ((t0.c1, t0.c63, t0.c1)) AND ((t0.c63, t0.c2, t0.c63)))  WHEN ((t0.c2)*(t0.c63)) THEN (t0.c0 IN (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c1 AS BLOB) WHEN ((t0.c0)IS NOT(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c63 END ELSE ((t0.c2) NOTNULL) END) ORDER BY CAST((NOT (t0.c1)) AS NUMERIC), ((((t0.c2) ISNULL)) ISNULL)  NULLS FIRST, UNICODE(((t0.c1)<>(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0, t0.c1, t0.c63)) BETWEEN ((t0.c1, t0.c63, t0.c1)) AND ((t0.c63, t0.c2, t0.c63)))  WHEN ((t0.c2)*(t0.c63)) THEN (t0.c0 IN (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c1 AS BLOB) WHEN ((t0.c0)IS NOT(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c63 END ELSE ((t0.c2) NOTNULL) END) IS TRUE)  as count FROM t0 INDEXED BY i48 ORDER BY CAST((NOT (t0.c1)) AS NUMERIC), ((((t0.c2) ISNULL)) ISNULL)  NULLS FIRST, UNICODE(((t0.c1)<>(t0.c0))) ASC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i48 WHERE (CASE (((t0.c0, t0.c1, t0.c63)) BETWEEN ((t0.c1, t0.c63, t0.c1)) AND ((t0.c63, t0.c2, t0.c63)))  WHEN ((t0.c2)*(t0.c63)) THEN (t0.c0 IN (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c1 AS BLOB) WHEN ((t0.c0)IS NOT(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c63 END ELSE ((t0.c2) NOTNULL) END) ORDER BY CAST((NOT (t0.c1)) AS NUMERIC), ((((t0.c2) ISNULL)) ISNULL)  NULLS FIRST, UNICODE(((t0.c1)<>(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0, t0.c1, t0.c63)) BETWEEN ((t0.c1, t0.c63, t0.c1)) AND ((t0.c63, t0.c2, t0.c63)))  WHEN ((t0.c2)*(t0.c63)) THEN (t0.c0 IN (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c1 AS BLOB) WHEN ((t0.c0)IS NOT(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c63 END ELSE ((t0.c2) NOTNULL) END) IS TRUE)  as count FROM t0 INDEXED BY i48 ORDER BY CAST((NOT (t0.c1)) AS NUMERIC), ((((t0.c2) ISNULL)) ISNULL)  NULLS FIRST, UNICODE(((t0.c1)<>(t0.c0))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN t82 ON (((t0.c0) IS FALSE) IN (LIKELIHOOD(t82.c1, 0.9356536283624077))) WHERE (LOWER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (~ (NULL)) DESC  NULLS LAST, (((t82.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN t82 ON (((t0.c0) IS FALSE) IN (LIKELIHOOD(t82.c1, 0.9356536283624077))) ORDER BY (~ (NULL)) DESC  NULLS LAST, (((t82.c1 IN ())) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN t82 ON (((t0.c0) IS FALSE) IN (LIKELIHOOD(t82.c1, 0.9356536283624077))) WHERE (LOWER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (~ (NULL)) DESC  NULLS LAST, (((t82.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN t82 ON (((t0.c0) IS FALSE) IN (LIKELIHOOD(t82.c1, 0.9356536283624077))) ORDER BY (~ (NULL)) DESC  NULLS LAST, (((t82.c1 IN ())) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN t82 ON (((t0.c0) IS FALSE) IN (LIKELIHOOD(t82.c1, 0.9356536283624077))) WHERE (LOWER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (~ (NULL)) DESC  NULLS LAST, (((t82.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN ((t82.c0)-(t82.c0)) THEN (NOT (t82.c1)) END) ORDER BY (((((t82.c1)) BETWEEN ((t82.c1)) AND ((t82.c1)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t82.c0)-(t82.c0)) THEN (NOT (t82.c1)) END) IS TRUE)  as count FROM t82 ORDER BY (((((t82.c1)) BETWEEN ((t82.c1)) AND ((t82.c1)))) NOTNULL));
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN ((t82.c0)-(t82.c0)) THEN (NOT (t82.c1)) END) ORDER BY (((((t82.c1)) BETWEEN ((t82.c1)) AND ((t82.c1)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t82.c0)-(t82.c0)) THEN (NOT (t82.c1)) END) IS TRUE)  as count FROM t82 ORDER BY (((((t82.c1)) BETWEEN ((t82.c1)) AND ((t82.c1)))) NOTNULL));
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN ((t82.c0)-(t82.c0)) THEN (NOT (t82.c1)) END) ORDER BY (((((t82.c1)) BETWEEN ((t82.c1)) AND ((t82.c1)))) NOTNULL);
SELECT ALL * FROM t0 NOT INDEXED, vt0, t82 WHERE ((((CASE t0.c0  WHEN t0.c2 THEN t82.c2 WHEN 0.5108403070292302 THEN t82.c1 WHEN t82.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c1 THEN t0.c63 ELSE t82.c2 END, ((vt0.c0)LIKE(t82.c1)), ((((t82.c2)OR(t0.c1)))AND(t0.c63))))=(((~ (t82.c0)), NULL, t82.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c0  WHEN t0.c2 THEN t82.c2 WHEN 0.5108403070292302 THEN t82.c1 WHEN t82.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c1 THEN t0.c63 ELSE t82.c2 END, ((vt0.c0)LIKE(t82.c1)), ((((t82.c2)OR(t0.c1)))AND(t0.c63))))==(((~ (t82.c0)), NULL, t82.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0 NOT INDEXED, vt0, t82 WHERE ((((CASE t0.c0  WHEN t0.c2 THEN t82.c2 WHEN 0.5108403070292302 THEN t82.c1 WHEN t82.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c1 THEN t0.c63 ELSE t82.c2 END, ((vt0.c0)LIKE(t82.c1)), ((((t82.c2)OR(t0.c1)))AND(t0.c63))))=(((~ (t82.c0)), NULL, t82.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c0  WHEN t0.c2 THEN t82.c2 WHEN 0.5108403070292302 THEN t82.c1 WHEN t82.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c1 THEN t0.c63 ELSE t82.c2 END, ((vt0.c0)LIKE(t82.c1)), ((((t82.c2)OR(t0.c1)))AND(t0.c63))))==(((~ (t82.c0)), NULL, t82.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0 NOT INDEXED, vt0, t82 WHERE ((((CASE t0.c0  WHEN t0.c2 THEN t82.c2 WHEN 0.5108403070292302 THEN t82.c1 WHEN t82.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c1 THEN t0.c63 ELSE t82.c2 END, ((vt0.c0)LIKE(t82.c1)), ((((t82.c2)OR(t0.c1)))AND(t0.c63))))=(((~ (t82.c0)), NULL, t82.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((((t0.c63 IN (t0.c1))) NOT BETWEEN (0.6517922275061591) AND (((t82.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN (t0.c1))) NOT BETWEEN (0.6517922275061591) AND (((t82.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((((t0.c63 IN (t0.c1))) NOT BETWEEN (0.6517922275061591) AND (((t82.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN (t0.c1))) NOT BETWEEN (0.6517922275061591) AND (((t82.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((((t0.c63 IN (t0.c1))) NOT BETWEEN (0.6517922275061591) AND (((t82.c2) IS TRUE))));
SELECT COUNT(*) FROM t82, t0, vt0 WHERE ((((((- (t0.c0)))AND(t82.c1)))AND(((t82.c2)>('789014403')))));
SELECT SUM(count) FROM (SELECT (((((((- (t0.c0)))AND(t82.c1)))AND(((t82.c2)>('789014403'))))) IS TRUE)  as count FROM t82, t0, vt0);
SELECT COUNT(*) FROM t82, t0, vt0 WHERE ((((((- (t0.c0)))AND(t82.c1)))AND(((t82.c2)>('789014403')))));
SELECT SUM(count) FROM (SELECT (((((((- (t0.c0)))AND(t82.c1)))AND(((t82.c2)>('789014403'))))) IS TRUE)  as count FROM t82, t0, vt0);
SELECT COUNT(*) FROM t82, t0, vt0 WHERE ((((((- (t0.c0)))AND(t82.c1)))AND(((t82.c2)>('789014403')))));
SELECT * FROM t0, t82, vt0 WHERE ((((((t82.c1)||(vt0.c0))))>=((((t82.c0)>>(t82.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c1)||(vt0.c0))))>=((((t82.c0)>>(t82.c0)))))) IS TRUE)  as count FROM t0, t82, vt0);
SELECT * FROM t0, t82, vt0 WHERE ((((((t82.c1)||(vt0.c0))))>=((((t82.c0)>>(t82.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c1)||(vt0.c0))))>=((((t82.c0)>>(t82.c0)))))) IS TRUE)  as count FROM t0, t82, vt0);
SELECT * FROM t0, t82, vt0 WHERE ((((((t82.c1)||(vt0.c0))))>=((((t82.c0)>>(t82.c0))))));
SELECT * FROM t0 CROSS JOIN t82 ON (((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (- ((((t0.c1))<>((vt0.c0))))) WHERE (CAST(CAST(t82.c1 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t82.c1 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t0 CROSS JOIN t82 ON (((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (- ((((t0.c1))!=((vt0.c0))))));
SELECT * FROM t0 CROSS JOIN t82 ON (((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (- ((((t0.c1))<>((vt0.c0))))) WHERE (CAST(CAST(t82.c1 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t82.c1 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t0 CROSS JOIN t82 ON (((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (- ((((t0.c1))!=((vt0.c0))))));
SELECT * FROM t0 CROSS JOIN t82 ON (((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) IN ()) FULL OUTER JOIN vt0 ON (- ((((t0.c1))<>((vt0.c0))))) WHERE (CAST(CAST(t82.c1 AS TEXT) AS NUMERIC));
SELECT COUNT(*) FROM t82 LEFT OUTER JOIN t0 ON CAST(CASE t0.c63  WHEN 0.2581023448282622 THEN t82.c0 ELSE t0.c2 END AS INTEGER) LEFT OUTER JOIN vt0 ON ((((((t82.c2)AND(t82.c0)))OR(t82.c1)))||(CASE WHEN t82.c2 THEN t0.c63 END)) WHERE (CHAR(vt0.c0, t82.c2, t82.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CHAR(vt0.c0, t82.c2, t82.c0) COLLATE BINARY) IS TRUE)  as count FROM t82 LEFT OUTER JOIN t0 ON CAST(CASE t0.c63  WHEN 0.2581023448282622 THEN t82.c0 ELSE t0.c2 END AS INTEGER) LEFT OUTER JOIN vt0 ON ((((((t82.c2)AND(t82.c0)))OR(t82.c1)))||(CASE WHEN t82.c2 THEN t0.c63 END)));
SELECT COUNT(*) FROM t82 LEFT OUTER JOIN t0 ON CAST(CASE t0.c63  WHEN 0.2581023448282622 THEN t82.c0 ELSE t0.c2 END AS INTEGER) LEFT OUTER JOIN vt0 ON ((((((t82.c2)AND(t82.c0)))OR(t82.c1)))||(CASE WHEN t82.c2 THEN t0.c63 END)) WHERE (CHAR(vt0.c0, t82.c2, t82.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CHAR(vt0.c0, t82.c2, t82.c0) COLLATE BINARY) IS TRUE)  as count FROM t82 LEFT OUTER JOIN t0 ON CAST(CASE t0.c63  WHEN 0.2581023448282622 THEN t82.c0 ELSE t0.c2 END AS INTEGER) LEFT OUTER JOIN vt0 ON ((((((t82.c2)AND(t82.c0)))OR(t82.c1)))||(CASE WHEN t82.c2 THEN t0.c63 END)));
SELECT COUNT(*) FROM t82 LEFT OUTER JOIN t0 ON CAST(CASE t0.c63  WHEN 0.2581023448282622 THEN t82.c0 ELSE t0.c2 END AS INTEGER) LEFT OUTER JOIN vt0 ON ((((((t82.c2)AND(t82.c0)))OR(t82.c1)))||(CASE WHEN t82.c2 THEN t0.c63 END)) WHERE (CHAR(vt0.c0, t82.c2, t82.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY (~ (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY (~ (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY (~ (vt0.c0)) DESC;
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c0)*(t0.c1)), (t0.c0 IN (vt0.c0, t0.c0)), -6.62996267E8)) AND (((~ (vt0.c0)), (~ (t0.c2)), t0.c1)))) ORDER BY (((vt0.c0, t0.c63, t0.c2)) NOT BETWEEN ((((t0.c0)-('}*')), t0.c1 COLLATE BINARY, (NOT (t0.c63)))) AND (((((t0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c63, t0.c63, t0.c2)) AND ((vt0.c0, t0.c1, t0.c0))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), ((t0.c63) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c0)*(t0.c1)), (t0.c0 IN (vt0.c0, t0.c0)), -6.62996267E8)) AND (((~ (vt0.c0)), (~ (t0.c2)), t0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0, t0.c63, t0.c2)) NOT BETWEEN ((((t0.c0)-('}*')), t0.c1 COLLATE BINARY, (NOT (t0.c63)))) AND (((((t0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c63, t0.c63, t0.c2)) AND ((vt0.c0, t0.c1, t0.c0))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), ((t0.c63) IS FALSE)))));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c0)*(t0.c1)), (t0.c0 IN (vt0.c0, t0.c0)), -6.62996267E8)) AND (((~ (vt0.c0)), (~ (t0.c2)), t0.c1)))) ORDER BY (((vt0.c0, t0.c63, t0.c2)) NOT BETWEEN ((((t0.c0)-('}*')), t0.c1 COLLATE BINARY, (NOT (t0.c63)))) AND (((((t0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c63, t0.c63, t0.c2)) AND ((vt0.c0, t0.c1, t0.c0))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), ((t0.c63) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c0)*(t0.c1)), (t0.c0 IN (vt0.c0, t0.c0)), -6.62996267E8)) AND (((~ (vt0.c0)), (~ (t0.c2)), t0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0, t0.c63, t0.c2)) NOT BETWEEN ((((t0.c0)-('}*')), t0.c1 COLLATE BINARY, (NOT (t0.c63)))) AND (((((t0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c63, t0.c63, t0.c2)) AND ((vt0.c0, t0.c1, t0.c0))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), ((t0.c63) IS FALSE)))));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c0)*(t0.c1)), (t0.c0 IN (vt0.c0, t0.c0)), -6.62996267E8)) AND (((~ (vt0.c0)), (~ (t0.c2)), t0.c1)))) ORDER BY (((vt0.c0, t0.c63, t0.c2)) NOT BETWEEN ((((t0.c0)-('}*')), t0.c1 COLLATE BINARY, (NOT (t0.c63)))) AND (((((t0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c63, t0.c63, t0.c2)) AND ((vt0.c0, t0.c1, t0.c0))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), ((t0.c63) IS FALSE))));
SELECT ALL * FROM t82 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE ((NOT (NULL)));
SELECT ALL COUNT(*) FROM t0, t82 WHERE ((((((~ (t82.c2)))AND(((t82.c0)<(t82.c2)))))AND(((t82.c2)AND(t0.c63))))) ORDER BY (((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)) IN (t0.c63 COLLATE RTRIM, t82.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t82.c2)))AND(((t82.c0)<(t82.c2)))))AND(((t82.c2)AND(t0.c63))))) IS TRUE)  as count FROM t0, t82 ORDER BY (((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)) IN (t0.c63 COLLATE RTRIM, t82.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t82 WHERE ((((((~ (t82.c2)))AND(((t82.c0)<(t82.c2)))))AND(((t82.c2)AND(t0.c63))))) ORDER BY (((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)) IN (t0.c63 COLLATE RTRIM, t82.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t82.c2)))AND(((t82.c0)<(t82.c2)))))AND(((t82.c2)AND(t0.c63))))) IS TRUE)  as count FROM t0, t82 ORDER BY (((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)) IN (t0.c63 COLLATE RTRIM, t82.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t82 WHERE ((((((~ (t82.c2)))AND(((t82.c0)<(t82.c2)))))AND(((t82.c2)AND(t0.c63))))) ORDER BY (((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)) IN (t0.c63 COLLATE RTRIM, t82.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM t82 WHERE ((((LIKELY(DISTINCT t82.c0)))!=((((((((((t82.c0)AND(t82.c0)))OR(t82.c1)))AND(t82.c2)))OR(t82.c2)))))) ORDER BY ((((((t82.c1))>=((t82.c2)))))>((((t82.c2)%(t82.c1)))))  NULLS LAST, (((((t82.c1)) BETWEEN ((t82.c2)) AND ((t82.c0)))) IS FALSE), (((((t82.c1)AND(t82.c0)))OR(t82.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(DISTINCT t82.c0)))<>((((((((((t82.c0)AND(t82.c0)))OR(t82.c1)))AND(t82.c2)))OR(t82.c2)))))) IS TRUE)  as count FROM t82 ORDER BY ((((((t82.c1))>=((t82.c2)))))>((((t82.c2)%(t82.c1)))))  NULLS LAST, (((((t82.c1)) BETWEEN ((t82.c2)) AND ((t82.c0)))) IS FALSE), (((((t82.c1)AND(t82.c0)))OR(t82.c0)) IN ())  NULLS LAST);
SELECT * FROM t82 WHERE ((((LIKELY(DISTINCT t82.c0)))!=((((((((((t82.c0)AND(t82.c0)))OR(t82.c1)))AND(t82.c2)))OR(t82.c2)))))) ORDER BY ((((((t82.c1))>=((t82.c2)))))>((((t82.c2)%(t82.c1)))))  NULLS LAST, (((((t82.c1)) BETWEEN ((t82.c2)) AND ((t82.c0)))) IS FALSE), (((((t82.c1)AND(t82.c0)))OR(t82.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(DISTINCT t82.c0)))<>((((((((((t82.c0)AND(t82.c0)))OR(t82.c1)))AND(t82.c2)))OR(t82.c2)))))) IS TRUE)  as count FROM t82 ORDER BY ((((((t82.c1))>=((t82.c2)))))>((((t82.c2)%(t82.c1)))))  NULLS LAST, (((((t82.c1)) BETWEEN ((t82.c2)) AND ((t82.c0)))) IS FALSE), (((((t82.c1)AND(t82.c0)))OR(t82.c0)) IN ())  NULLS LAST);
SELECT * FROM t82 WHERE ((((LIKELY(DISTINCT t82.c0)))!=((((((((((t82.c0)AND(t82.c0)))OR(t82.c1)))AND(t82.c2)))OR(t82.c2)))))) ORDER BY ((((((t82.c1))>=((t82.c2)))))>((((t82.c2)%(t82.c1)))))  NULLS LAST, (((((t82.c1)) BETWEEN ((t82.c2)) AND ((t82.c0)))) IS FALSE), (((((t82.c1)AND(t82.c0)))OR(t82.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t82 WHERE (x'ea2e');
SELECT SUM(count) FROM (SELECT ALL ((x'ea2e') IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (x'ea2e');
SELECT SUM(count) FROM (SELECT ALL ((x'ea2e') IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (x'ea2e');
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c2) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOTNULL) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c2) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOTNULL) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c2) NOTNULL) AS TEXT));
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c2, t82.c0, t82.c1))=((t82.c1, t82.c2, t82.c1))))LIKE(t82.c2)));
SELECT SUM(count) FROM (SELECT (((((((t82.c2, t82.c0, t82.c1))==((t82.c1, t82.c2, t82.c1))))LIKE(t82.c2))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c2, t82.c0, t82.c1))=((t82.c1, t82.c2, t82.c1))))LIKE(t82.c2)));
SELECT SUM(count) FROM (SELECT (((((((t82.c2, t82.c0, t82.c1))==((t82.c1, t82.c2, t82.c1))))LIKE(t82.c2))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c2, t82.c0, t82.c1))=((t82.c1, t82.c2, t82.c1))))LIKE(t82.c2)));
SELECT * FROM vt0, t82 WHERE (CASE CAST(x'a4ed' AS REAL)  WHEN (+ (t82.c1)) THEN ((((t82.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(x'a4ed' AS REAL)  WHEN (+ (t82.c1)) THEN ((((t82.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE (CASE CAST(x'a4ed' AS REAL)  WHEN (+ (t82.c1)) THEN ((((t82.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(x'a4ed' AS REAL)  WHEN (+ (t82.c1)) THEN ((((t82.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE (CASE CAST(x'a4ed' AS REAL)  WHEN (+ (t82.c1)) THEN ((((t82.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM t82 WHERE (((((((t82.c2)LIKE(0.6397089735256831)))OR(CAST(t82.c1 AS NUMERIC))))AND(t82.c1))) ORDER BY CAST(((t82.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((t82.c2)LIKE(0.6397089735256831)))OR(CAST(t82.c1 AS NUMERIC))))AND(t82.c1))) IS TRUE)  as count FROM t82 ORDER BY CAST(((t82.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) AS REAL));
SELECT COUNT(*) FROM t82 WHERE (((((((t82.c2)LIKE(0.6397089735256831)))OR(CAST(t82.c1 AS NUMERIC))))AND(t82.c1))) ORDER BY CAST(((t82.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((t82.c2)LIKE(0.6397089735256831)))OR(CAST(t82.c1 AS NUMERIC))))AND(t82.c1))) IS TRUE)  as count FROM t82 ORDER BY CAST(((t82.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) AS REAL));
SELECT COUNT(*) FROM t82 WHERE (((((((t82.c2)LIKE(0.6397089735256831)))OR(CAST(t82.c1 AS NUMERIC))))AND(t82.c1))) ORDER BY CAST(((t82.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) AS REAL);
SELECT * FROM t0 NOT INDEXED, t82 WHERE (((0.6251463128423645) BETWEEN (t82.c1 COLLATE RTRIM) AND (t82.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((0.6251463128423645) BETWEEN (t82.c1 COLLATE RTRIM) AND (t82.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0 NOT INDEXED, t82 WHERE (((0.6251463128423645) BETWEEN (t82.c1 COLLATE RTRIM) AND (t82.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((0.6251463128423645) BETWEEN (t82.c1 COLLATE RTRIM) AND (t82.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0 NOT INDEXED, t82 WHERE (((0.6251463128423645) BETWEEN (t82.c1 COLLATE RTRIM) AND (t82.c1 COLLATE RTRIM)));
SELECT ALL * FROM t82 WHERE (((t82.c1) BETWEEN (t82.c1) AND (t82.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((t82.c1) IS TRUE) THEN ((t82.c1)AND(t82.c0)) ELSE ((t82.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((t82.c1) BETWEEN (t82.c1) AND (t82.c0)) COLLATE BINARY) IS TRUE)  as count FROM t82 ORDER BY CASE WHEN ((t82.c1) IS TRUE) THEN ((t82.c1)AND(t82.c0)) ELSE ((t82.c0) ISNULL) END DESC);
SELECT ALL * FROM t82 WHERE (((t82.c1) BETWEEN (t82.c1) AND (t82.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((t82.c1) IS TRUE) THEN ((t82.c1)AND(t82.c0)) ELSE ((t82.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((t82.c1) BETWEEN (t82.c1) AND (t82.c0)) COLLATE BINARY) IS TRUE)  as count FROM t82 ORDER BY CASE WHEN ((t82.c1) IS TRUE) THEN ((t82.c1)AND(t82.c0)) ELSE ((t82.c0) ISNULL) END DESC);
SELECT ALL * FROM t82 WHERE (((t82.c1) BETWEEN (t82.c1) AND (t82.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((t82.c1) IS TRUE) THEN ((t82.c1)AND(t82.c0)) ELSE ((t82.c0) ISNULL) END DESC;
SELECT ALL * FROM t0, vt0, t82 WHERE (((((NULL) ISNULL)) BETWEEN (0.50291929229554) AND ((~ (t82.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL)) BETWEEN (0.50291929229554) AND ((~ (t82.c1))))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0, vt0, t82 WHERE (((((NULL) ISNULL)) BETWEEN (0.50291929229554) AND ((~ (t82.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL)) BETWEEN (0.50291929229554) AND ((~ (t82.c1))))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0, vt0, t82 WHERE (((((NULL) ISNULL)) BETWEEN (0.50291929229554) AND ((~ (t82.c1)))));
SELECT ALL * FROM t82, t0 WHERE (((NOT (t0.c1)) IN (((t0.c1)!=(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c1)) IN (((t0.c1)<>(t82.c0))))) IS TRUE)  as count FROM t82, t0);
SELECT ALL * FROM t82, t0 WHERE (((NOT (t0.c1)) IN (((t0.c1)!=(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c1)) IN (((t0.c1)<>(t82.c0))))) IS TRUE)  as count FROM t82, t0);
SELECT ALL * FROM t82, t0 WHERE (((NOT (t0.c1)) IN (((t0.c1)!=(t82.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t82 ON (- (((('?q', t0.c63, t82.c2))>((t0.c0, t0.c2, 0.18764661432413254))))) CROSS JOIN t0 ON NULL WHERE ((((((t82.c0)<<(t0.c1))))<((t0.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c0)<<(t0.c1))))<((t0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN t82 ON (- (((('?q', t0.c63, t82.c2))>((t0.c0, t0.c2, 0.18764661432413254))))) CROSS JOIN t0 ON NULL ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) DESC);
SELECT ALL * FROM vt0 CROSS JOIN t82 ON (- (((('?q', t0.c63, t82.c2))>((t0.c0, t0.c2, 0.18764661432413254))))) CROSS JOIN t0 ON NULL WHERE ((((((t82.c0)<<(t0.c1))))<((t0.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c0)<<(t0.c1))))<((t0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN t82 ON (- (((('?q', t0.c63, t82.c2))>((t0.c0, t0.c2, 0.18764661432413254))))) CROSS JOIN t0 ON NULL ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) DESC);
SELECT ALL * FROM vt0 CROSS JOIN t82 ON (- (((('?q', t0.c63, t82.c2))>((t0.c0, t0.c2, 0.18764661432413254))))) CROSS JOIN t0 ON NULL WHERE ((((((t82.c0)<<(t0.c1))))<((t0.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (UNLIKELY(DISTINCT ((((t82.c1)AND(t0.c0)))AND(t82.c2)))) ORDER BY UNLIKELY(HEX(DISTINCT t82.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((t82.c1)AND(t0.c0)))AND(t82.c2)))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY UNLIKELY(HEX(DISTINCT t82.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (UNLIKELY(DISTINCT ((((t82.c1)AND(t0.c0)))AND(t82.c2)))) ORDER BY UNLIKELY(HEX(DISTINCT t82.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((t82.c1)AND(t0.c0)))AND(t82.c2)))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY UNLIKELY(HEX(DISTINCT t82.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (UNLIKELY(DISTINCT ((((t82.c1)AND(t0.c0)))AND(t82.c2)))) ORDER BY UNLIKELY(HEX(DISTINCT t82.c0))  NULLS LAST;
SELECT ALL * FROM t82 WHERE (((((t82.c1)!=(t82.c0)))AND(((t82.c1) NOT BETWEEN (0Xffffffff9efdf741) AND (t82.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c1)!=(t82.c0)))AND(((t82.c1) NOT BETWEEN (0xffffffff9efdf741) AND (t82.c1))))) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE (((((t82.c1)!=(t82.c0)))AND(((t82.c1) NOT BETWEEN (0Xffffffff9efdf741) AND (t82.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c1)!=(t82.c0)))AND(((t82.c1) NOT BETWEEN (0xffffffff9efdf741) AND (t82.c1))))) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE (((((t82.c1)!=(t82.c0)))AND(((t82.c1) NOT BETWEEN (0Xffffffff9efdf741) AND (t82.c1)))));
SELECT ALL * FROM vt0 WHERE (json_quote(CAST(vt0.c0 AS BLOB))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_quote(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (json_quote(CAST(vt0.c0 AS BLOB))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_quote(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (json_quote(CAST(vt0.c0 AS BLOB))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((x'' IN ()));
SELECT * FROM vt0, t0, t82 WHERE ((((((t82.c1)+(vt0.c0)), ((((0.760137507636881)OR(t82.c2)))AND(t0.c1)), SQLITE_SOURCE_ID(), t82.c1 COLLATE RTRIM, 'ﭧ\n%aqk9'))<>((((((((((NULL)OR(t82.c1)))OR(t82.c0)))AND(t82.c0)))AND(t0.c1)), CASE WHEN t0.c2 THEN t0.c63 WHEN t82.c1 THEN t0.c63 WHEN t82.c2 THEN 0.4168520666638088 WHEN t82.c2 THEN t82.c0 WHEN vt0.c0 THEN t82.c2 END, IFNULL(t0.c63, vt0.c0), (+ (t82.c1)), CAST(t0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1)+(vt0.c0)), ((((0.760137507636881)OR(t82.c2)))AND(t0.c1)), SQLITE_SOURCE_ID(), t82.c1 COLLATE RTRIM, 'ﭧ\n%aqk9'))!=((((((((((NULL)OR(t82.c1)))OR(t82.c0)))AND(t82.c0)))AND(t0.c1)), CASE WHEN t0.c2 THEN t0.c63 WHEN t82.c1 THEN t0.c63 WHEN t82.c2 THEN 0.4168520666638088 WHEN t82.c2 THEN t82.c0 WHEN vt0.c0 THEN t82.c2 END, IFNULL(t0.c63, vt0.c0), (+ (t82.c1)), CAST(t0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT * FROM vt0, t0, t82 WHERE ((((((t82.c1)+(vt0.c0)), ((((0.760137507636881)OR(t82.c2)))AND(t0.c1)), SQLITE_SOURCE_ID(), t82.c1 COLLATE RTRIM, 'ﭧ\n%aqk9'))<>((((((((((NULL)OR(t82.c1)))OR(t82.c0)))AND(t82.c0)))AND(t0.c1)), CASE WHEN t0.c2 THEN t0.c63 WHEN t82.c1 THEN t0.c63 WHEN t82.c2 THEN 0.4168520666638088 WHEN t82.c2 THEN t82.c0 WHEN vt0.c0 THEN t82.c2 END, IFNULL(t0.c63, vt0.c0), (+ (t82.c1)), CAST(t0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1)+(vt0.c0)), ((((0.760137507636881)OR(t82.c2)))AND(t0.c1)), SQLITE_SOURCE_ID(), t82.c1 COLLATE RTRIM, 'ﭧ\n%aqk9'))!=((((((((((NULL)OR(t82.c1)))OR(t82.c0)))AND(t82.c0)))AND(t0.c1)), CASE WHEN t0.c2 THEN t0.c63 WHEN t82.c1 THEN t0.c63 WHEN t82.c2 THEN 0.4168520666638088 WHEN t82.c2 THEN t82.c0 WHEN vt0.c0 THEN t82.c2 END, IFNULL(t0.c63, vt0.c0), (+ (t82.c1)), CAST(t0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT * FROM vt0, t0, t82 WHERE ((((((t82.c1)+(vt0.c0)), ((((0.760137507636881)OR(t82.c2)))AND(t0.c1)), SQLITE_SOURCE_ID(), t82.c1 COLLATE RTRIM, 'ﭧ\n%aqk9'))<>((((((((((NULL)OR(t82.c1)))OR(t82.c0)))AND(t82.c0)))AND(t0.c1)), CASE WHEN t0.c2 THEN t0.c63 WHEN t82.c1 THEN t0.c63 WHEN t82.c2 THEN 0.4168520666638088 WHEN t82.c2 THEN t82.c0 WHEN vt0.c0 THEN t82.c2 END, IFNULL(t0.c63, vt0.c0), (+ (t82.c1)), CAST(t0.c1 AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME(CAST(vt0.c0 AS REAL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN (0.041012646720970936))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TIME(CAST(vt0.c0 AS REAL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN (0.041012646720970936))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME(CAST(vt0.c0 AS REAL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN (0.041012646720970936))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TIME(CAST(vt0.c0 AS REAL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN (0.041012646720970936))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME(CAST(vt0.c0 AS REAL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN (0.041012646720970936))) AND ((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t82 WHERE (CASE ((t82.c1)>=(t82.c1))  WHEN t82.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t82.c1)>=(t82.c1))  WHEN t82.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t82);
SELECT ALL * FROM vt0, t82 WHERE (CASE ((t82.c1)>=(t82.c1))  WHEN t82.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t82.c1)>=(t82.c1))  WHEN t82.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t82);
SELECT ALL * FROM vt0, t82 WHERE (CASE ((t82.c1)>=(t82.c1))  WHEN t82.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i48, t82 WHERE (0.5618760052788088 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.5618760052788088 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 INDEXED BY i48, t82);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i48, t82 WHERE (0.5618760052788088 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.5618760052788088 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 INDEXED BY i48, t82);
SELECT ALL * FROM vt0, t82, t0 WHERE ((~ (UPPER(t82.c0)))) ORDER BY (((x'' IN ())) BETWEEN (CASE t0.c63  WHEN t0.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c0 ELSE t0.c2 END) AND (((((((((t0.c63)AND(t82.c2)))OR(t82.c0)))AND(t0.c2)))OR(t0.c63))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(t82.c0)))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (((x'' IN ())) BETWEEN (CASE t0.c63  WHEN t0.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c0 ELSE t0.c2 END) AND (((((((((t0.c63)AND(t82.c2)))OR(t82.c0)))AND(t0.c2)))OR(t0.c63))))  NULLS FIRST);
SELECT ALL * FROM vt0, t82, t0 WHERE ((~ (UPPER(t82.c0)))) ORDER BY (((x'' IN ())) BETWEEN (CASE t0.c63  WHEN t0.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c0 ELSE t0.c2 END) AND (((((((((t0.c63)AND(t82.c2)))OR(t82.c0)))AND(t0.c2)))OR(t0.c63))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(t82.c0)))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (((x'' IN ())) BETWEEN (CASE t0.c63  WHEN t0.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c0 ELSE t0.c2 END) AND (((((((((t0.c63)AND(t82.c2)))OR(t82.c0)))AND(t0.c2)))OR(t0.c63))))  NULLS FIRST);
SELECT ALL * FROM vt0, t82, t0 WHERE ((~ (UPPER(t82.c0)))) ORDER BY (((x'' IN ())) BETWEEN (CASE t0.c63  WHEN t0.c1 THEN vt0.c0 WHEN t82.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c0 ELSE t0.c2 END) AND (((((((((t0.c63)AND(t82.c2)))OR(t82.c0)))AND(t0.c2)))OR(t0.c63))))  NULLS FIRST;
SELECT ALL * FROM t0, t82 NATURAL JOIN vt0 WHERE (((json_array_length(vt0.c0))IS NOT((((t82.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, t82.c2, t0.c63)) AND ((t0.c63, vt0.c0, t0.c0)))))) ORDER BY 0.45570386991348166, CASE (NULL IN ())  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(t82.c2, t82.c1) ELSE TRIM(t0.c2, vt0.c0) END DESC, (CAST(t0.c63 AS TEXT) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(vt0.c0))IS NOT((((t82.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, t82.c2, t0.c63)) AND ((t0.c63, vt0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, t82 NATURAL JOIN vt0 ORDER BY 0.45570386991348166, CASE (NULL IN ())  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(t82.c2, t82.c1) ELSE TRIM(t0.c2, vt0.c0) END DESC, (CAST(t0.c63 AS TEXT) IN ())  NULLS FIRST);
SELECT ALL * FROM t0, t82 NATURAL JOIN vt0 WHERE (((json_array_length(vt0.c0))IS NOT((((t82.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, t82.c2, t0.c63)) AND ((t0.c63, vt0.c0, t0.c0)))))) ORDER BY 0.45570386991348166, CASE (NULL IN ())  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(t82.c2, t82.c1) ELSE TRIM(t0.c2, vt0.c0) END DESC, (CAST(t0.c63 AS TEXT) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(vt0.c0))IS NOT((((t82.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, t82.c2, t0.c63)) AND ((t0.c63, vt0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, t82 NATURAL JOIN vt0 ORDER BY 0.45570386991348166, CASE (NULL IN ())  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(t82.c2, t82.c1) ELSE TRIM(t0.c2, vt0.c0) END DESC, (CAST(t0.c63 AS TEXT) IN ())  NULLS FIRST);
SELECT ALL * FROM t0, t82 NATURAL JOIN vt0 WHERE (((json_array_length(vt0.c0))IS NOT((((t82.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, t82.c2, t0.c63)) AND ((t0.c63, vt0.c0, t0.c0)))))) ORDER BY 0.45570386991348166, CASE (NULL IN ())  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(t82.c2, t82.c1) ELSE TRIM(t0.c2, vt0.c0) END DESC, (CAST(t0.c63 AS TEXT) IN ())  NULLS FIRST;
SELECT * FROM t82, vt0, t0 WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t82, vt0, t0);
SELECT * FROM t82, vt0, t0 WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t82, vt0, t0);
SELECT * FROM t82, vt0, t0 WHERE (t82.c1);
SELECT COUNT(*) FROM t82 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (x'');
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t82 ON CAST(t82.c0 COLLATE BINARY AS TEXT) WHERE ('%B*');
SELECT SUM(count) FROM (SELECT ALL (('%B*') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t82 ON CAST(t82.c0 COLLATE BINARY AS TEXT));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t82 ON CAST(t82.c0 COLLATE BINARY AS TEXT) WHERE ('%B*');
SELECT SUM(count) FROM (SELECT ALL (('%B*') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t82 ON CAST(t82.c0 COLLATE BINARY AS TEXT));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t82 ON CAST(t82.c0 COLLATE BINARY AS TEXT) WHERE ('%B*');
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CAST(t82.c2 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t82.c2 AS BLOB)) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CAST(t82.c2 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t82.c2 AS BLOB)) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CAST(t82.c2 AS BLOB));
SELECT * FROM t82, vt0 WHERE (((((t82.c0) IS TRUE)) NOT BETWEEN (t82.c2) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c0) IS TRUE)) NOT BETWEEN (t82.c2) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t82, vt0);
SELECT * FROM t82, vt0 WHERE (((((t82.c0) IS TRUE)) NOT BETWEEN (t82.c2) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c0) IS TRUE)) NOT BETWEEN (t82.c2) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t82, vt0);
SELECT * FROM t82, vt0 WHERE (((((t82.c0) IS TRUE)) NOT BETWEEN (t82.c2) AND (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, t82 WHERE (TRIM(DISTINCT t0.c0, t82.c0) COLLATE RTRIM) ORDER BY (((t82.c1) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT t0.c0, t82.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, t82 ORDER BY (((t82.c1) IS FALSE) IN ()));
SELECT COUNT(*) FROM t0, t82 WHERE (TRIM(DISTINCT t0.c0, t82.c0) COLLATE RTRIM) ORDER BY (((t82.c1) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT t0.c0, t82.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, t82 ORDER BY (((t82.c1) IS FALSE) IN ()));
SELECT COUNT(*) FROM t0, t82 WHERE (TRIM(DISTINCT t0.c0, t82.c0) COLLATE RTRIM) ORDER BY (((t82.c1) IS FALSE) IN ());
SELECT * FROM t82 RIGHT OUTER JOIN t0 ON CASE WHEN ABS(t82.c2) THEN vt0.c0 WHEN t82.c1 THEN t82.c1 WHEN ((0.23262398634194348)<(t82.c2)) THEN (+ (x'')) ELSE ((((t0.c0)AND(t0.c1)))AND(t82.c1)) END LEFT OUTER JOIN vt0 ON TRIM(DISTINCT ((t82.c1)|(t82.c0)), vt0.c0) WHERE ((((((((('')OR(((((t0.c63)OR(t0.c2)))AND(vt0.c0)))))AND((((vt0.c0, 0.10006185393797862, t0.c1))>((t0.c63, t0.c63, t0.c0))))))OR(((vt0.c0) NOT BETWEEN (t82.c1) AND (t82.c2)))))OR((((('0.7695214577262337')OR(vt0.c0)))AND(t82.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((('')OR(((((t0.c63)OR(t0.c2)))AND(vt0.c0)))))AND((((vt0.c0, 0.10006185393797862, t0.c1))>((t0.c63, t0.c63, t0.c0))))))OR(((vt0.c0) NOT BETWEEN (t82.c1) AND (t82.c2)))))OR((((('0.7695214577262337')OR(vt0.c0)))AND(t82.c0))))) IS TRUE)  as count FROM t82 RIGHT OUTER JOIN t0 ON CASE WHEN ABS(t82.c2) THEN vt0.c0 WHEN t82.c1 THEN t82.c1 WHEN ((0.23262398634194348)<(t82.c2)) THEN (+ (x'')) ELSE ((((t0.c0)AND(t0.c1)))AND(t82.c1)) END LEFT OUTER JOIN vt0 ON TRIM(DISTINCT ((t82.c1)|(t82.c0)), vt0.c0));
SELECT * FROM t82 RIGHT OUTER JOIN t0 ON CASE WHEN ABS(t82.c2) THEN vt0.c0 WHEN t82.c1 THEN t82.c1 WHEN ((0.23262398634194348)<(t82.c2)) THEN (+ (x'')) ELSE ((((t0.c0)AND(t0.c1)))AND(t82.c1)) END LEFT OUTER JOIN vt0 ON TRIM(DISTINCT ((t82.c1)|(t82.c0)), vt0.c0) WHERE ((((((((('')OR(((((t0.c63)OR(t0.c2)))AND(vt0.c0)))))AND((((vt0.c0, 0.10006185393797862, t0.c1))>((t0.c63, t0.c63, t0.c0))))))OR(((vt0.c0) NOT BETWEEN (t82.c1) AND (t82.c2)))))OR((((('0.7695214577262337')OR(vt0.c0)))AND(t82.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((('')OR(((((t0.c63)OR(t0.c2)))AND(vt0.c0)))))AND((((vt0.c0, 0.10006185393797862, t0.c1))>((t0.c63, t0.c63, t0.c0))))))OR(((vt0.c0) NOT BETWEEN (t82.c1) AND (t82.c2)))))OR((((('0.7695214577262337')OR(vt0.c0)))AND(t82.c0))))) IS TRUE)  as count FROM t82 RIGHT OUTER JOIN t0 ON CASE WHEN ABS(t82.c2) THEN vt0.c0 WHEN t82.c1 THEN t82.c1 WHEN ((0.23262398634194348)<(t82.c2)) THEN (+ (x'')) ELSE ((((t0.c0)AND(t0.c1)))AND(t82.c1)) END LEFT OUTER JOIN vt0 ON TRIM(DISTINCT ((t82.c1)|(t82.c0)), vt0.c0));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (IFNULL(DISTINCT t0.c63 COLLATE RTRIM, ((t0.c63)*(t0.c2)))) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT t0.c63 COLLATE RTRIM, ((t0.c63)*(t0.c2)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (IFNULL(DISTINCT t0.c63 COLLATE RTRIM, ((t0.c63)*(t0.c2)))) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT t0.c63 COLLATE RTRIM, ((t0.c63)*(t0.c2)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (IFNULL(DISTINCT t0.c63 COLLATE RTRIM, ((t0.c63)*(t0.c2)))) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((('', t0.c2, t82.c0)) BETWEEN ((TRIM(t0.c0), CASE t0.c1  WHEN t0.c1 THEN 0.4356379887201107 END, MIN(t0.c0, t82.c0))) AND ((((t82.c0)=(t82.c1)), (((t82.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), CASE WHEN t82.c2 THEN '1365691585' END))));
SELECT SUM(count) FROM (SELECT ((((('', t0.c2, t82.c0)) BETWEEN ((TRIM(t0.c0), CASE t0.c1  WHEN t0.c1 THEN 0.4356379887201107 END, MIN(t0.c0, t82.c0))) AND ((((t82.c0)=(t82.c1)), (((t82.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), CASE WHEN t82.c2 THEN '1365691585' END)))) IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((('', t0.c2, t82.c0)) BETWEEN ((TRIM(t0.c0), CASE t0.c1  WHEN t0.c1 THEN 0.4356379887201107 END, MIN(t0.c0, t82.c0))) AND ((((t82.c0)=(t82.c1)), (((t82.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), CASE WHEN t82.c2 THEN '1365691585' END))));
SELECT SUM(count) FROM (SELECT ((((('', t0.c2, t82.c0)) BETWEEN ((TRIM(t0.c0), CASE t0.c1  WHEN t0.c1 THEN 0.4356379887201107 END, MIN(t0.c0, t82.c0))) AND ((((t82.c0)=(t82.c1)), (((t82.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), CASE WHEN t82.c2 THEN '1365691585' END)))) IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((('', t0.c2, t82.c0)) BETWEEN ((TRIM(t0.c0), CASE t0.c1  WHEN t0.c1 THEN 0.4356379887201107 END, MIN(t0.c0, t82.c0))) AND ((((t82.c0)=(t82.c1)), (((t82.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), CASE WHEN t82.c2 THEN '1365691585' END))));
SELECT ALL COUNT(*) FROM t0 WHERE (2124356016) ORDER BY ((((((((t0.c2)OR(t0.c63)))AND(t0.c2)))AND(CASE WHEN t0.c2 THEN t0.c0 END)))AND(t0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((2124356016) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c2)OR(t0.c63)))AND(t0.c2)))AND(CASE WHEN t0.c2 THEN t0.c0 END)))AND(t0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE (2124356016) ORDER BY ((((((((t0.c2)OR(t0.c63)))AND(t0.c2)))AND(CASE WHEN t0.c2 THEN t0.c0 END)))AND(t0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((2124356016) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c2)OR(t0.c63)))AND(t0.c2)))AND(CASE WHEN t0.c2 THEN t0.c0 END)))AND(t0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE (2124356016) ORDER BY ((((((((t0.c2)OR(t0.c63)))AND(t0.c2)))AND(CASE WHEN t0.c2 THEN t0.c0 END)))AND(t0.c1 COLLATE NOCASE));
SELECT * FROM t82, vt0 WHERE ((- ('e箫w95y' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- ('e箫w95y' COLLATE RTRIM))) IS TRUE)  as count FROM t82, vt0);
SELECT * FROM t82, vt0 WHERE ((- ('e箫w95y' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- ('e箫w95y' COLLATE RTRIM))) IS TRUE)  as count FROM t82, vt0);
SELECT * FROM t82, vt0 WHERE ((- ('e箫w95y' COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE ((~ (((t82.c2)GLOB(t82.c1))))) ORDER BY ((t82.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t82.c2)GLOB(t82.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t82 ORDER BY ((t82.c0 COLLATE NOCASE) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE ((~ (((t82.c2)GLOB(t82.c1))))) ORDER BY ((t82.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t82.c2)GLOB(t82.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t82 ORDER BY ((t82.c0 COLLATE NOCASE) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE ((~ (((t82.c2)GLOB(t82.c1))))) ORDER BY ((t82.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT ALL * FROM vt0, t0, t82 WHERE ((((((vt0.c0, vt0.c0, t0.c63))>((t82.c1, t0.c2, t82.c2)))) NOT BETWEEN (LOWER(DISTINCT t82.c2)) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, t0.c63))>((t82.c1, t0.c2, t82.c2)))) NOT BETWEEN (LOWER(DISTINCT t82.c2)) AND (t0.c2))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL * FROM vt0, t0, t82 WHERE ((((((vt0.c0, vt0.c0, t0.c63))>((t82.c1, t0.c2, t82.c2)))) NOT BETWEEN (LOWER(DISTINCT t82.c2)) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, t0.c63))>((t82.c1, t0.c2, t82.c2)))) NOT BETWEEN (LOWER(DISTINCT t82.c2)) AND (t0.c2))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL * FROM vt0, t0, t82 WHERE ((((((vt0.c0, vt0.c0, t0.c63))>((t82.c1, t0.c2, t82.c2)))) NOT BETWEEN (LOWER(DISTINCT t82.c2)) AND (t0.c2)));
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((((t0.c63))>=((t0.c63))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63))>=((t0.c63))) IN ())) IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((((t0.c63))>=((t0.c63))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63))>=((t0.c63))) IN ())) IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((((t0.c63))>=((t0.c63))) IN ()));
SELECT * FROM t82 WHERE ((NOT (((t82.c1)IS NOT(t82.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t82.c1)IS NOT(t82.c1))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ((NOT (((t82.c1)IS NOT(t82.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t82.c1)IS NOT(t82.c1))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ((NOT (((t82.c1)IS NOT(t82.c1)))));
SELECT * FROM t82 WHERE ((((((t82.c2)) BETWEEN ((t82.c0)) AND ((t82.c2)))) NOT BETWEEN (t82.c0 COLLATE RTRIM) AND ((('-1928052974')LIKE(t82.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c2)) BETWEEN ((t82.c0)) AND ((t82.c2)))) NOT BETWEEN (t82.c0 COLLATE RTRIM) AND ((('-1928052974')LIKE(t82.c2))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ((((((t82.c2)) BETWEEN ((t82.c0)) AND ((t82.c2)))) NOT BETWEEN (t82.c0 COLLATE RTRIM) AND ((('-1928052974')LIKE(t82.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c2)) BETWEEN ((t82.c0)) AND ((t82.c2)))) NOT BETWEEN (t82.c0 COLLATE RTRIM) AND ((('-1928052974')LIKE(t82.c2))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ((((((t82.c2)) BETWEEN ((t82.c0)) AND ((t82.c2)))) NOT BETWEEN (t82.c0 COLLATE RTRIM) AND ((('-1928052974')LIKE(t82.c2)))));
SELECT ALL * FROM t82, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t82, t0);
SELECT ALL * FROM t82, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t82, t0);
SELECT ALL * FROM t82, t0 WHERE (t0.c2);
SELECT * FROM t82, vt0 FULL OUTER JOIN t0 ON ((((t82.c0) ISNULL))>>(t0.c63 COLLATE RTRIM)) WHERE (x'3ea8b9aa') ORDER BY ((((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0))) BETWEEN (t82.c1 COLLATE RTRIM) AND ((+ (t82.c2)))), (NOT (CAST(t82.c2 AS TEXT)))  NULLS LAST, ((((((t0.c2)AND('-670912915')))OR(t82.c2)))*(highlight(NULL, t0.c0, t82.c0, t82.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'3ea8b9aa') IS TRUE)  as count FROM t82, vt0 FULL OUTER JOIN t0 ON ((((t82.c0) ISNULL))>>(t0.c63 COLLATE RTRIM)) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0))) BETWEEN (t82.c1 COLLATE RTRIM) AND ((+ (t82.c2)))), (NOT (CAST(t82.c2 AS TEXT)))  NULLS LAST, ((((((t0.c2)AND('-670912915')))OR(t82.c2)))*(highlight(NULL, t0.c0, t82.c0, t82.c1)))  NULLS LAST);
SELECT * FROM t82, vt0 FULL OUTER JOIN t0 ON ((((t82.c0) ISNULL))>>(t0.c63 COLLATE RTRIM)) WHERE (x'3ea8b9aa') ORDER BY ((((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0))) BETWEEN (t82.c1 COLLATE RTRIM) AND ((+ (t82.c2)))), (NOT (CAST(t82.c2 AS TEXT)))  NULLS LAST, ((((((t0.c2)AND('-670912915')))OR(t82.c2)))*(highlight(NULL, t0.c0, t82.c0, t82.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'3ea8b9aa') IS TRUE)  as count FROM t82, vt0 FULL OUTER JOIN t0 ON ((((t82.c0) ISNULL))>>(t0.c63 COLLATE RTRIM)) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0))) BETWEEN (t82.c1 COLLATE RTRIM) AND ((+ (t82.c2)))), (NOT (CAST(t82.c2 AS TEXT)))  NULLS LAST, ((((((t0.c2)AND('-670912915')))OR(t82.c2)))*(highlight(NULL, t0.c0, t82.c0, t82.c1)))  NULLS LAST);
SELECT COUNT(*) FROM t82, t0, vt0 WHERE ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t82, t0, vt0);
SELECT COUNT(*) FROM t82, t0, vt0 WHERE ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t82, t0, vt0);
SELECT COUNT(*) FROM t82, t0, vt0 WHERE ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM t82, t0 WHERE (CASE WHEN ((t0.c63)>(t0.c0)) THEN ((((((((t0.c0)OR(t0.c1)))OR(t0.c63)))OR(t0.c0)))OR(t82.c1)) ELSE (((t0.c2))<((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c63)>(t0.c0)) THEN ((((((((t0.c0)OR(t0.c1)))OR(t0.c63)))OR(t0.c0)))OR(t82.c1)) ELSE (((t0.c2))<((t0.c2))) END) IS TRUE)  as count FROM t82, t0);
SELECT ALL * FROM t82, t0 WHERE (CASE WHEN ((t0.c63)>(t0.c0)) THEN ((((((((t0.c0)OR(t0.c1)))OR(t0.c63)))OR(t0.c0)))OR(t82.c1)) ELSE (((t0.c2))<((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c63)>(t0.c0)) THEN ((((((((t0.c0)OR(t0.c1)))OR(t0.c63)))OR(t0.c0)))OR(t82.c1)) ELSE (((t0.c2))<((t0.c2))) END) IS TRUE)  as count FROM t82, t0);
SELECT ALL * FROM t82, t0 WHERE (CASE WHEN ((t0.c63)>(t0.c0)) THEN ((((((((t0.c0)OR(t0.c1)))OR(t0.c63)))OR(t0.c0)))OR(t82.c1)) ELSE (((t0.c2))<((t0.c2))) END);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((vt0.c0))==((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 1343448735, vt0.c0))))-(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ((((vt0.c0))==((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 1343448735, vt0.c0))))-(((vt0.c0)<(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((vt0.c0))==((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 1343448735, vt0.c0))))-(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ((((vt0.c0))==((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 1343448735, vt0.c0))))-(((vt0.c0)<(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((vt0.c0))==((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, 1343448735, vt0.c0))))-(((vt0.c0)<(vt0.c0))));
SELECT * FROM t0, t82, vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(0.11862993050396375)) IN ((((t0.c1))<((t82.c1))), t0.c0))) ORDER BY t82.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(0.11862993050396375)) IN ((((t0.c1))<((t82.c1))), t0.c0))) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY t82.c2 ASC  NULLS LAST);
SELECT * FROM t0, t82, vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(0.11862993050396375)) IN ((((t0.c1))<((t82.c1))), t0.c0))) ORDER BY t82.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(0.11862993050396375)) IN ((((t0.c1))<((t82.c1))), t0.c0))) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY t82.c2 ASC  NULLS LAST);
SELECT * FROM t0, t82, vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(0.11862993050396375)) IN ((((t0.c1))<((t82.c1))), t0.c0))) ORDER BY t82.c2 ASC  NULLS LAST;
SELECT ALL * FROM vt0, t82 WHERE (0xffffffffee460577);
SELECT SUM(count) FROM (SELECT ((0xffffffffee460577) IS TRUE)  as count FROM vt0 NOT INDEXED, t82);
SELECT ALL * FROM vt0, t82 WHERE (0xffffffffee460577);
SELECT SUM(count) FROM (SELECT ((0xffffffffee460577) IS TRUE)  as count FROM vt0 NOT INDEXED, t82);
SELECT ALL * FROM vt0, t82 WHERE (0xffffffffee460577);
SELECT * FROM t82, vt0 WHERE (((x'' COLLATE RTRIM)==(0.485035975663769))) ORDER BY ((((t82.c1) BETWEEN (t82.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t82.c2)) AND ((t82.c0)))) AND (((((t82.c2)OR(t82.c2)))OR(t82.c2)))) DESC  NULLS FIRST, (((t82.c2) NOT BETWEEN (t82.c1) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE RTRIM)=(0.485035975663769))) IS TRUE)  as count FROM t82, vt0 ORDER BY ((((t82.c1) BETWEEN (t82.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t82.c2)) AND ((t82.c0)))) AND (((((t82.c2)OR(t82.c2)))OR(t82.c2)))) DESC  NULLS FIRST, (((t82.c2) NOT BETWEEN (t82.c1) AND (vt0.c0)) IN ()) ASC);
SELECT * FROM t82, vt0 WHERE (((x'' COLLATE RTRIM)==(0.485035975663769))) ORDER BY ((((t82.c1) BETWEEN (t82.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t82.c2)) AND ((t82.c0)))) AND (((((t82.c2)OR(t82.c2)))OR(t82.c2)))) DESC  NULLS FIRST, (((t82.c2) NOT BETWEEN (t82.c1) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE RTRIM)=(0.485035975663769))) IS TRUE)  as count FROM t82, vt0 ORDER BY ((((t82.c1) BETWEEN (t82.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t82.c2)) AND ((t82.c0)))) AND (((((t82.c2)OR(t82.c2)))OR(t82.c2)))) DESC  NULLS FIRST, (((t82.c2) NOT BETWEEN (t82.c1) AND (vt0.c0)) IN ()) ASC);
SELECT * FROM t82, vt0 WHERE (((x'' COLLATE RTRIM)==(0.485035975663769))) ORDER BY ((((t82.c1) BETWEEN (t82.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t82.c2)) AND ((t82.c0)))) AND (((((t82.c2)OR(t82.c2)))OR(t82.c2)))) DESC  NULLS FIRST, (((t82.c2) NOT BETWEEN (t82.c1) AND (vt0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN -1378058679 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c63)))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN -1378058679 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c63)))) AND (t0.c0))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN -1378058679 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c63)))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN -1378058679 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c63)))) AND (t0.c0))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN -1378058679 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c63)))) AND (t0.c0)));
SELECT * FROM t82, vt0 WHERE (CASE ABS(vt0.c0)  WHEN (+ (t82.c0)) THEN ((((t82.c0)AND(t82.c1)))OR(vt0.c0)) END) ORDER BY CAST((((vt0.c0, t82.c2, vt0.c0)) BETWEEN ((t82.c2, t82.c0, t82.c0)) AND ((0.8511667685415806, vt0.c0, vt0.c0))) AS REAL), UNICODE((((vt0.c0))<((t82.c0)))), (NOT (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE ABS(vt0.c0)  WHEN (+ (t82.c0)) THEN ((((t82.c0)AND(t82.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM t82, vt0 ORDER BY CAST((((vt0.c0, t82.c2, vt0.c0)) BETWEEN ((t82.c2, t82.c0, t82.c0)) AND ((0.8511667685415806, vt0.c0, vt0.c0))) AS REAL), UNICODE((((vt0.c0))<((t82.c0)))), (NOT (vt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM t82, vt0 WHERE (CASE ABS(vt0.c0)  WHEN (+ (t82.c0)) THEN ((((t82.c0)AND(t82.c1)))OR(vt0.c0)) END) ORDER BY CAST((((vt0.c0, t82.c2, vt0.c0)) BETWEEN ((t82.c2, t82.c0, t82.c0)) AND ((0.8511667685415806, vt0.c0, vt0.c0))) AS REAL), UNICODE((((vt0.c0))<((t82.c0)))), (NOT (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE ABS(vt0.c0)  WHEN (+ (t82.c0)) THEN ((((t82.c0)AND(t82.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM t82, vt0 ORDER BY CAST((((vt0.c0, t82.c2, vt0.c0)) BETWEEN ((t82.c2, t82.c0, t82.c0)) AND ((0.8511667685415806, vt0.c0, vt0.c0))) AS REAL), UNICODE((((vt0.c0))<((t82.c0)))), (NOT (vt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM t82, vt0 WHERE (CASE ABS(vt0.c0)  WHEN (+ (t82.c0)) THEN ((((t82.c0)AND(t82.c1)))OR(vt0.c0)) END) ORDER BY CAST((((vt0.c0, t82.c2, vt0.c0)) BETWEEN ((t82.c2, t82.c0, t82.c0)) AND ((0.8511667685415806, vt0.c0, vt0.c0))) AS REAL), UNICODE((((vt0.c0))<((t82.c0)))), (NOT (vt0.c0)) COLLATE NOCASE ASC;
SELECT * FROM t82, t0 WHERE (((t82.c2) IS TRUE)) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c63 AS REAL) ELSE ((((t0.c2)OR(t0.c1)))AND(t82.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t82.c2) IS TRUE)) IS TRUE)  as count FROM t82, t0 ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c63 AS REAL) ELSE ((((t0.c2)OR(t0.c1)))AND(t82.c1)) END  NULLS LAST);
SELECT * FROM t82, t0 WHERE (((t82.c2) IS TRUE)) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c63 AS REAL) ELSE ((((t0.c2)OR(t0.c1)))AND(t82.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t82.c2) IS TRUE)) IS TRUE)  as count FROM t82, t0 ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c63 AS REAL) ELSE ((((t0.c2)OR(t0.c1)))AND(t82.c1)) END  NULLS LAST);
SELECT * FROM t82, t0 WHERE (((t82.c2) IS TRUE)) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c63 AS REAL) ELSE ((((t0.c2)OR(t0.c1)))AND(t82.c1)) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, t82 WHERE (CAST('' AS REAL)) ORDER BY (((((- (t0.c0)))AND(((vt0.c0) IS TRUE))))OR('Llh#')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS REAL)) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY (((((- (t0.c0)))AND(((vt0.c0) IS TRUE))))OR('Llh#')) ASC);
SELECT COUNT(*) FROM vt0, t0, t82 WHERE (CAST('' AS REAL)) ORDER BY (((((- (t0.c0)))AND(((vt0.c0) IS TRUE))))OR('Llh#')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS REAL)) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY (((((- (t0.c0)))AND(((vt0.c0) IS TRUE))))OR('Llh#')) ASC);
SELECT COUNT(*) FROM vt0, t0, t82 WHERE (CAST('' AS REAL)) ORDER BY (((((- (t0.c0)))AND(((vt0.c0) IS TRUE))))OR('Llh#')) ASC;
SELECT * FROM t82 WHERE (((((((((((t82.c1)%(t82.c0)))OR(((t82.c2) NOTNULL))))AND(((t82.c2)|(t82.c2)))))AND(((t82.c2) NOT NULL))))AND((~ (t82.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t82.c1)%(t82.c0)))OR(((t82.c2) NOTNULL))))AND(((t82.c2)|(t82.c2)))))AND(((t82.c2) NOT NULL))))AND((~ (t82.c2))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (((((((((((t82.c1)%(t82.c0)))OR(((t82.c2) NOTNULL))))AND(((t82.c2)|(t82.c2)))))AND(((t82.c2) NOT NULL))))AND((~ (t82.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t82.c1)%(t82.c0)))OR(((t82.c2) NOTNULL))))AND(((t82.c2)|(t82.c2)))))AND(((t82.c2) NOT NULL))))AND((~ (t82.c2))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (((((((((((t82.c1)%(t82.c0)))OR(((t82.c2) NOTNULL))))AND(((t82.c2)|(t82.c2)))))AND(((t82.c2) NOT NULL))))AND((~ (t82.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)>>(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)>>(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)>>(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)>>(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)>>(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT * FROM t82, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t82, vt0, t0);
SELECT * FROM t82, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t82, vt0, t0);
SELECT * FROM t82, vt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((((((((((t82.c1 IN ()))AND(((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)))))AND(CAST(t82.c1 AS NUMERIC))))AND((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))OR('749111691'))) ORDER BY ((x'')/(LOWER(DISTINCT t82.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t82.c1 IN ()))AND(((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)))))AND(CAST(t82.c1 AS NUMERIC))))AND((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))OR('749111691'))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY ((x'')/(LOWER(DISTINCT t82.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((((((((((t82.c1 IN ()))AND(((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)))))AND(CAST(t82.c1 AS NUMERIC))))AND((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))OR('749111691'))) ORDER BY ((x'')/(LOWER(DISTINCT t82.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t82.c1 IN ()))AND(((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)))))AND(CAST(t82.c1 AS NUMERIC))))AND((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))OR('749111691'))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY ((x'')/(LOWER(DISTINCT t82.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((((((((((t82.c1 IN ()))AND(((t82.c0) NOT BETWEEN (t82.c0) AND (t0.c63)))))AND(CAST(t82.c1 AS NUMERIC))))AND((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))OR('749111691'))) ORDER BY ((x'')/(LOWER(DISTINCT t82.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c0)AND(t0.c63)))OR(t0.c63))))>((CAST(t0.c1 AS INTEGER))))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)AND(t0.c63)))OR(t0.c63))))>((CAST(t0.c1 AS INTEGER))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c0)AND(t0.c63)))OR(t0.c63))))>((CAST(t0.c1 AS INTEGER))))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)AND(t0.c63)))OR(t0.c63))))>((CAST(t0.c1 AS INTEGER))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c0)AND(t0.c63)))OR(t0.c63))))>((CAST(t0.c1 AS INTEGER))))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((NOT (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((NOT (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((NOT (vt0.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, t82 WHERE ((~ ((~ (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (t0.c63))))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE ((~ ((~ (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (t0.c63))))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE ((~ ((~ (t0.c63)))));
SELECT * FROM t0, t82, vt0 WHERE ((((NULL) BETWEEN (vt0.c0) AND (t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) BETWEEN (vt0.c0) AND (t0.c63)) IN ())) IS TRUE)  as count FROM t0, t82, vt0);
SELECT * FROM t0, t82, vt0 WHERE ((((NULL) BETWEEN (vt0.c0) AND (t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) BETWEEN (vt0.c0) AND (t0.c63)) IN ())) IS TRUE)  as count FROM t0, t82, vt0);
SELECT * FROM t0, t82, vt0 WHERE ((((NULL) BETWEEN (vt0.c0) AND (t0.c63)) IN ()));
SELECT ALL * FROM t0, vt0, t82 WHERE ((NOT (json_array_length(t82.c0, t0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_array_length(t82.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY vt0.c0);
SELECT ALL * FROM t0, vt0, t82 WHERE ((NOT (json_array_length(t82.c0, t0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_array_length(t82.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY vt0.c0);
SELECT ALL * FROM t0, vt0, t82 WHERE ((NOT (json_array_length(t82.c0, t0.c0)))) ORDER BY vt0.c0;
SELECT * FROM vt0 NOT INDEXED, t0, t82 WHERE ((((t82.c1)) NOT BETWEEN ((((((t82.c1)AND(NULL)))OR(t0.c63)))) AND ((-1.785959493E9))));
SELECT SUM(count) FROM (SELECT ALL (((((t82.c1)) NOT BETWEEN ((((((t82.c1)AND(NULL)))OR(t0.c63)))) AND ((-1.785959493E9)))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT * FROM vt0 NOT INDEXED, t0, t82 WHERE ((((t82.c1)) NOT BETWEEN ((((((t82.c1)AND(NULL)))OR(t0.c63)))) AND ((-1.785959493E9))));
SELECT SUM(count) FROM (SELECT ALL (((((t82.c1)) NOT BETWEEN ((((((t82.c1)AND(NULL)))OR(t0.c63)))) AND ((-1.785959493E9)))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT * FROM vt0 NOT INDEXED, t0, t82 WHERE ((((t82.c1)) NOT BETWEEN ((((((t82.c1)AND(NULL)))OR(t0.c63)))) AND ((-1.785959493E9))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE (((((((((((((((0.8561465954989966) IS FALSE))AND((NOT (t82.c0)))))OR(((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c0)))))AND(HEX(t82.c1))))AND(CASE t82.c1  WHEN t82.c1 THEN 'JC]*' END)))AND((t82.c2 IN ()))))OR(CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c0 END))) ORDER BY ((((((t82.c0)OR(NULL)))OR(t82.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((0.8561465954989966) IS FALSE))AND((NOT (t82.c0)))))OR(((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c0)))))AND(HEX(t82.c1))))AND(CASE t82.c1  WHEN t82.c1 THEN 'JC]*' END)))AND((t82.c2 IN ()))))OR(CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c0 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN t82 ORDER BY ((((((t82.c0)OR(NULL)))OR(t82.c1))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE (((((((((((((((0.8561465954989966) IS FALSE))AND((NOT (t82.c0)))))OR(((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c0)))))AND(HEX(t82.c1))))AND(CASE t82.c1  WHEN t82.c1 THEN 'JC]*' END)))AND((t82.c2 IN ()))))OR(CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c0 END))) ORDER BY ((((((t82.c0)OR(NULL)))OR(t82.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((0.8561465954989966) IS FALSE))AND((NOT (t82.c0)))))OR(((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c0)))))AND(HEX(t82.c1))))AND(CASE t82.c1  WHEN t82.c1 THEN 'JC]*' END)))AND((t82.c2 IN ()))))OR(CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c0 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN t82 ORDER BY ((((((t82.c0)OR(NULL)))OR(t82.c1))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE (((((((((((((((0.8561465954989966) IS FALSE))AND((NOT (t82.c0)))))OR(((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c0)))))AND(HEX(t82.c1))))AND(CASE t82.c1  WHEN t82.c1 THEN 'JC]*' END)))AND((t82.c2 IN ()))))OR(CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c0 END))) ORDER BY ((((((t82.c0)OR(NULL)))OR(t82.c1))) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN t82 ON (CASE t82.c1  WHEN t82.c0 THEN t82.c2 ELSE t82.c1 END IN (((((((((t82.c0)OR(t0.c0)))AND(t82.c0)))OR(x'')))AND(t0.c2)), ((t82.c2) NOT BETWEEN (t0.c63) AND (t82.c2)), x'')) LEFT OUTER JOIN t0 ON (- (-2054460691)) WHERE ((((t0.c63 IN ()))LIKE(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN ()))LIKE(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN t82 ON (CASE t82.c1  WHEN t82.c0 THEN t82.c2 ELSE t82.c1 END IN (((((((((t82.c0)OR(t0.c0)))AND(t82.c0)))OR(x'')))AND(t0.c2)), ((t82.c2) NOT BETWEEN (t0.c63) AND (t82.c2)), x'')) LEFT OUTER JOIN t0 ON (- (-2054460691)));
SELECT ALL * FROM vt0 INNER JOIN t82 ON (CASE t82.c1  WHEN t82.c0 THEN t82.c2 ELSE t82.c1 END IN (((((((((t82.c0)OR(t0.c0)))AND(t82.c0)))OR(x'')))AND(t0.c2)), ((t82.c2) NOT BETWEEN (t0.c63) AND (t82.c2)), x'')) LEFT OUTER JOIN t0 ON (- (-2054460691)) WHERE ((((t0.c63 IN ()))LIKE(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN ()))LIKE(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN t82 ON (CASE t82.c1  WHEN t82.c0 THEN t82.c2 ELSE t82.c1 END IN (((((((((t82.c0)OR(t0.c0)))AND(t82.c0)))OR(x'')))AND(t0.c2)), ((t82.c2) NOT BETWEEN (t0.c63) AND (t82.c2)), x'')) LEFT OUTER JOIN t0 ON (- (-2054460691)));
SELECT ALL * FROM vt0 INNER JOIN t82 ON (CASE t82.c1  WHEN t82.c0 THEN t82.c2 ELSE t82.c1 END IN (((((((((t82.c0)OR(t0.c0)))AND(t82.c0)))OR(x'')))AND(t0.c2)), ((t82.c2) NOT BETWEEN (t0.c63) AND (t82.c2)), x'')) LEFT OUTER JOIN t0 ON (- (-2054460691)) WHERE ((((t0.c63 IN ()))LIKE(NULL COLLATE BINARY)));
SELECT ALL * FROM t82, t0, vt0 WHERE ((NOT (CAST(t82.c1 AS BLOB)))) ORDER BY CASE WHEN 1.900823478E9 THEN LIKELIHOOD(t0.c2, 0.9459839940103705) END  NULLS LAST, ((((0.42369376418456806)/(t82.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t82.c1 AS BLOB)))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY CASE WHEN 1.900823478E9 THEN LIKELIHOOD(t0.c2, 0.9459839940103705) END  NULLS LAST, ((((0.42369376418456806)/(t82.c0))) NOTNULL));
SELECT ALL * FROM t82, t0, vt0 WHERE ((NOT (CAST(t82.c1 AS BLOB)))) ORDER BY CASE WHEN 1.900823478E9 THEN LIKELIHOOD(t0.c2, 0.9459839940103705) END  NULLS LAST, ((((0.42369376418456806)/(t82.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t82.c1 AS BLOB)))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY CASE WHEN 1.900823478E9 THEN LIKELIHOOD(t0.c2, 0.9459839940103705) END  NULLS LAST, ((((0.42369376418456806)/(t82.c0))) NOTNULL));
SELECT ALL * FROM t82, t0, vt0 WHERE ((NOT (CAST(t82.c1 AS BLOB)))) ORDER BY CASE WHEN 1.900823478E9 THEN LIKELIHOOD(t0.c2, 0.9459839940103705) END  NULLS LAST, ((((0.42369376418456806)/(t82.c0))) NOTNULL);
SELECT ALL COUNT(*) FROM t82 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t82.c2)) AND ((((x'9eb6') NOT BETWEEN (t0.c63) AND (t82.c1))))) WHERE (CASE (((t82.c2))>=((t0.c1)))  WHEN t0.c1 THEN LIKELIHOOD(DISTINCT t0.c0, 0.2371575506689404) ELSE CASE t82.c1  WHEN t82.c0 THEN t0.c0 WHEN '-946817391' THEN t82.c1 WHEN t82.c2 THEN '1225161198' WHEN t0.c63 THEN t82.c2 WHEN t82.c2 THEN t82.c0 ELSE t82.c2 END END) ORDER BY (~ (t0.c63 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t82.c2))>=((t0.c1)))  WHEN t0.c1 THEN LIKELIHOOD(DISTINCT t0.c0, 0.2371575506689404) ELSE CASE t82.c1  WHEN t82.c0 THEN t0.c0 WHEN '-946817391' THEN t82.c1 WHEN t82.c2 THEN '1225161198' WHEN t0.c63 THEN t82.c2 WHEN t82.c2 THEN t82.c0 ELSE t82.c2 END END) IS TRUE)  as count FROM t82 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t82.c2)) AND ((((x'9eb6') NOT BETWEEN (t0.c63) AND (t82.c1))))) ORDER BY (~ (t0.c63 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t82 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t82.c2)) AND ((((x'9eb6') NOT BETWEEN (t0.c63) AND (t82.c1))))) WHERE (CASE (((t82.c2))>=((t0.c1)))  WHEN t0.c1 THEN LIKELIHOOD(DISTINCT t0.c0, 0.2371575506689404) ELSE CASE t82.c1  WHEN t82.c0 THEN t0.c0 WHEN '-946817391' THEN t82.c1 WHEN t82.c2 THEN '1225161198' WHEN t0.c63 THEN t82.c2 WHEN t82.c2 THEN t82.c0 ELSE t82.c2 END END) ORDER BY (~ (t0.c63 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t82.c2))>=((t0.c1)))  WHEN t0.c1 THEN LIKELIHOOD(DISTINCT t0.c0, 0.2371575506689404) ELSE CASE t82.c1  WHEN t82.c0 THEN t0.c0 WHEN '-946817391' THEN t82.c1 WHEN t82.c2 THEN '1225161198' WHEN t0.c63 THEN t82.c2 WHEN t82.c2 THEN t82.c0 ELSE t82.c2 END END) IS TRUE)  as count FROM t82 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t82.c2)) AND ((((x'9eb6') NOT BETWEEN (t0.c63) AND (t82.c1))))) ORDER BY (~ (t0.c63 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t82 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t82.c2)) AND ((((x'9eb6') NOT BETWEEN (t0.c63) AND (t82.c1))))) WHERE (CASE (((t82.c2))>=((t0.c1)))  WHEN t0.c1 THEN LIKELIHOOD(DISTINCT t0.c0, 0.2371575506689404) ELSE CASE t82.c1  WHEN t82.c0 THEN t0.c0 WHEN '-946817391' THEN t82.c1 WHEN t82.c2 THEN '1225161198' WHEN t0.c63 THEN t82.c2 WHEN t82.c2 THEN t82.c0 ELSE t82.c2 END END) ORDER BY (~ (t0.c63 COLLATE BINARY));
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT ALL * FROM vt0, t82 WHERE (CASE ((vt0.c0)>=(t82.c1))  WHEN '-206708707' THEN ((((t82.c0)OR(t82.c1)))OR(t82.c2)) WHEN ((t82.c2)<(t82.c0)) THEN vt0.c0 WHEN t82.c1 COLLATE RTRIM THEN t82.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>=(t82.c1))  WHEN '-206708707' THEN ((((t82.c0)OR(t82.c1)))OR(t82.c2)) WHEN ((t82.c2)<(t82.c0)) THEN vt0.c0 WHEN t82.c1 COLLATE RTRIM THEN t82.c2 END) IS TRUE)  as count FROM vt0, t82);
SELECT ALL * FROM vt0, t82 WHERE (CASE ((vt0.c0)>=(t82.c1))  WHEN '-206708707' THEN ((((t82.c0)OR(t82.c1)))OR(t82.c2)) WHEN ((t82.c2)<(t82.c0)) THEN vt0.c0 WHEN t82.c1 COLLATE RTRIM THEN t82.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>=(t82.c1))  WHEN '-206708707' THEN ((((t82.c0)OR(t82.c1)))OR(t82.c2)) WHEN ((t82.c2)<(t82.c0)) THEN vt0.c0 WHEN t82.c1 COLLATE RTRIM THEN t82.c2 END) IS TRUE)  as count FROM vt0, t82);
SELECT ALL * FROM vt0, t82 WHERE (CASE ((vt0.c0)>=(t82.c1))  WHEN '-206708707' THEN ((((t82.c0)OR(t82.c1)))OR(t82.c2)) WHEN ((t82.c2)<(t82.c0)) THEN vt0.c0 WHEN t82.c1 COLLATE RTRIM THEN t82.c2 END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((- (t0.c63))) IS TRUE)) ORDER BY CAST(t0.c63 COLLATE NOCASE AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((- (t0.c63))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(t0.c63 COLLATE NOCASE AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((- (t0.c63))) IS TRUE)) ORDER BY CAST(t0.c63 COLLATE NOCASE AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((- (t0.c63))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(t0.c63 COLLATE NOCASE AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((- (t0.c63))) IS TRUE)) ORDER BY CAST(t0.c63 COLLATE NOCASE AS REAL) DESC;
SELECT ALL * FROM vt0, t0 WHERE (rtreenode(NULL, (NOT (t0.c1)))) ORDER BY (+ ((((t0.c1))>=((t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(NULL, (NOT (t0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ ((((t0.c1))>=((t0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (rtreenode(NULL, (NOT (t0.c1)))) ORDER BY (+ ((((t0.c1))>=((t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(NULL, (NOT (t0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ ((((t0.c1))>=((t0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (rtreenode(NULL, (NOT (t0.c1)))) ORDER BY (+ ((((t0.c1))>=((t0.c0))))) ASC  NULLS LAST;
SELECT * FROM t0, t82, vt0 WHERE (CASE WHEN ((t0.c0)<<(t0.c1)) THEN ((((t0.c0)OR(0.0019153214652531947)))OR(t82.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)<<(t0.c1)) THEN ((((t0.c0)OR(0.0019153214652531947)))OR(t82.c2)) END) IS TRUE)  as count FROM t0, t82, vt0);
SELECT * FROM t0, t82, vt0 WHERE (CASE WHEN ((t0.c0)<<(t0.c1)) THEN ((((t0.c0)OR(0.0019153214652531947)))OR(t82.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)<<(t0.c1)) THEN ((((t0.c0)OR(0.0019153214652531947)))OR(t82.c2)) END) IS TRUE)  as count FROM t0, t82, vt0);
SELECT * FROM t0, t82, vt0 WHERE (CASE WHEN ((t0.c0)<<(t0.c1)) THEN ((((t0.c0)OR(0.0019153214652531947)))OR(t82.c2)) END);
SELECT ALL * FROM t82, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t82.c1 END)>(TRIM(t0.c63, t0.c63))) WHERE (((((t0.c1) IS TRUE)) IS TRUE)) ORDER BY CASE (vt0.c0 IN ())  WHEN ((((t82.c2)OR(t0.c63)))AND(t0.c0)) THEN 0.5128788307632804 END  NULLS LAST, (((((t0.c63)>>(t82.c1))))>=((((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1))))) DESC  NULLS LAST, ((t82.c1) BETWEEN (t82.c0) AND (t0.c63)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM t82, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t82.c1 END)>(TRIM(t0.c63, t0.c63))) ORDER BY CASE (vt0.c0 IN ())  WHEN ((((t82.c2)OR(t0.c63)))AND(t0.c0)) THEN 0.5128788307632804 END  NULLS LAST, (((((t0.c63)>>(t82.c1))))>=((((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1))))) DESC  NULLS LAST, ((t82.c1) BETWEEN (t82.c0) AND (t0.c63)) COLLATE BINARY ASC);
SELECT ALL * FROM t82, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t82.c1 END)>(TRIM(t0.c63, t0.c63))) WHERE (((((t0.c1) IS TRUE)) IS TRUE)) ORDER BY CASE (vt0.c0 IN ())  WHEN ((((t82.c2)OR(t0.c63)))AND(t0.c0)) THEN 0.5128788307632804 END  NULLS LAST, (((((t0.c63)>>(t82.c1))))>=((((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1))))) DESC  NULLS LAST, ((t82.c1) BETWEEN (t82.c0) AND (t0.c63)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM t82, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t82.c1 END)>(TRIM(t0.c63, t0.c63))) ORDER BY CASE (vt0.c0 IN ())  WHEN ((((t82.c2)OR(t0.c63)))AND(t0.c0)) THEN 0.5128788307632804 END  NULLS LAST, (((((t0.c63)>>(t82.c1))))>=((((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1))))) DESC  NULLS LAST, ((t82.c1) BETWEEN (t82.c0) AND (t0.c63)) COLLATE BINARY ASC);
SELECT ALL * FROM t82, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN t0.c0 THEN t82.c1 END)>(TRIM(t0.c63, t0.c63))) WHERE (((((t0.c1) IS TRUE)) IS TRUE)) ORDER BY CASE (vt0.c0 IN ())  WHEN ((((t82.c2)OR(t0.c63)))AND(t0.c0)) THEN 0.5128788307632804 END  NULLS LAST, (((((t0.c63)>>(t82.c1))))>=((((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1))))) DESC  NULLS LAST, ((t82.c1) BETWEEN (t82.c0) AND (t0.c63)) COLLATE BINARY ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE ((~ (((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t82);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE ((~ (((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t82);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t82 WHERE ((~ (((t82.c2) NOT BETWEEN (t82.c1) AND (t82.c1)))));
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT * FROM t82 WHERE ((CAST(t82.c2 AS TEXT) IN (STRFTIME(t82.c2, t82.c2, t82.c2)))) ORDER BY (((t82.c2)=(t82.c1)) IN (t82.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((CAST(t82.c2 AS TEXT) IN (STRFTIME(t82.c2, t82.c2, t82.c2)))) IS TRUE)  as count FROM t82 ORDER BY (((t82.c2)=(t82.c1)) IN (t82.c2 COLLATE NOCASE)));
SELECT * FROM t82 WHERE ((CAST(t82.c2 AS TEXT) IN (STRFTIME(t82.c2, t82.c2, t82.c2)))) ORDER BY (((t82.c2)=(t82.c1)) IN (t82.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((CAST(t82.c2 AS TEXT) IN (STRFTIME(t82.c2, t82.c2, t82.c2)))) IS TRUE)  as count FROM t82 ORDER BY (((t82.c2)=(t82.c1)) IN (t82.c2 COLLATE NOCASE)));
SELECT * FROM t82 WHERE ((CAST(t82.c2 AS TEXT) IN (STRFTIME(t82.c2, t82.c2, t82.c2)))) ORDER BY (((t82.c2)=(t82.c1)) IN (t82.c2 COLLATE NOCASE));
SELECT ALL * FROM t0, t82 WHERE ((((t0.c0)) NOT BETWEEN (((+ (0Xffffffffa61ccf5b)))) AND ((TYPEOF(DISTINCT t0.c63))))) ORDER BY INSTR(CAST(t0.c63 AS INTEGER), t0.c63 COLLATE BINARY) ASC, NULLIF(DISTINCT NULL, (((NULL, t0.c1, t82.c0)) NOT BETWEEN ((t82.c2, t82.c0, t0.c0)) AND ((t0.c0, x'', t82.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((+ (0Xffffffffa61ccf5b)))) AND ((TYPEOF(DISTINCT t0.c63))))) IS TRUE)  as count FROM t0, t82 ORDER BY INSTR(CAST(t0.c63 AS INTEGER), t0.c63 COLLATE BINARY) ASC, NULLIF(DISTINCT NULL, (((NULL, t0.c1, t82.c0)) NOT BETWEEN ((t82.c2, t82.c0, t0.c0)) AND ((t0.c0, x'', t82.c0)))) DESC);
SELECT ALL * FROM t0, t82 WHERE ((((t0.c0)) NOT BETWEEN (((+ (0Xffffffffa61ccf5b)))) AND ((TYPEOF(DISTINCT t0.c63))))) ORDER BY INSTR(CAST(t0.c63 AS INTEGER), t0.c63 COLLATE BINARY) ASC, NULLIF(DISTINCT NULL, (((NULL, t0.c1, t82.c0)) NOT BETWEEN ((t82.c2, t82.c0, t0.c0)) AND ((t0.c0, x'', t82.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((+ (0Xffffffffa61ccf5b)))) AND ((TYPEOF(DISTINCT t0.c63))))) IS TRUE)  as count FROM t0, t82 ORDER BY INSTR(CAST(t0.c63 AS INTEGER), t0.c63 COLLATE BINARY) ASC, NULLIF(DISTINCT NULL, (((NULL, t0.c1, t82.c0)) NOT BETWEEN ((t82.c2, t82.c0, t0.c0)) AND ((t0.c0, x'', t82.c0)))) DESC);
SELECT ALL * FROM t0, t82 WHERE ((((t0.c0)) NOT BETWEEN (((+ (0Xffffffffa61ccf5b)))) AND ((TYPEOF(DISTINCT t0.c63))))) ORDER BY INSTR(CAST(t0.c63 AS INTEGER), t0.c63 COLLATE BINARY) ASC, NULLIF(DISTINCT NULL, (((NULL, t0.c1, t82.c0)) NOT BETWEEN ((t82.c2, t82.c0, t0.c0)) AND ((t0.c0, x'', t82.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((0.9215535866520288)AND(t0.c2)))AND(vt0.c0)))%(((((t0.c1)OR(t0.c2)))AND(t0.c0))))) ORDER BY CAST('' AS INTEGER) DESC, CASE ((0xffffffffdb4925b6) BETWEEN (0x1a29b816) AND (t0.c63))  WHEN json_object(t0.c0, t0.c2) THEN (((t0.c2, t0.c63, t0.c0)) NOT BETWEEN ((t0.c1, 0.09343036021933837, t0.c0)) AND ((t0.c0, t0.c0, t0.c63))) ELSE (vt0.c0 IN ()) END ASC, ((1856117961)>(((t0.c1)=(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((0.9215535866520288)AND(t0.c2)))AND(vt0.c0)))%(((((t0.c1)OR(t0.c2)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST('' AS INTEGER) DESC, CASE ((0xffffffffdb4925b6) BETWEEN (0x1a29b816) AND (t0.c63))  WHEN json_object(t0.c0, t0.c2) THEN (((t0.c2, t0.c63, t0.c0)) NOT BETWEEN ((t0.c1, 0.09343036021933837, t0.c0)) AND ((t0.c0, t0.c0, t0.c63))) ELSE (vt0.c0 IN ()) END ASC, ((1856117961)>(((t0.c1)==(t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((0.9215535866520288)AND(t0.c2)))AND(vt0.c0)))%(((((t0.c1)OR(t0.c2)))AND(t0.c0))))) ORDER BY CAST('' AS INTEGER) DESC, CASE ((0xffffffffdb4925b6) BETWEEN (0x1a29b816) AND (t0.c63))  WHEN json_object(t0.c0, t0.c2) THEN (((t0.c2, t0.c63, t0.c0)) NOT BETWEEN ((t0.c1, 0.09343036021933837, t0.c0)) AND ((t0.c0, t0.c0, t0.c63))) ELSE (vt0.c0 IN ()) END ASC, ((1856117961)>(((t0.c1)=(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((0.9215535866520288)AND(t0.c2)))AND(vt0.c0)))%(((((t0.c1)OR(t0.c2)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST('' AS INTEGER) DESC, CASE ((0xffffffffdb4925b6) BETWEEN (0x1a29b816) AND (t0.c63))  WHEN json_object(t0.c0, t0.c2) THEN (((t0.c2, t0.c63, t0.c0)) NOT BETWEEN ((t0.c1, 0.09343036021933837, t0.c0)) AND ((t0.c0, t0.c0, t0.c63))) ELSE (vt0.c0 IN ()) END ASC, ((1856117961)>(((t0.c1)==(t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((0.9215535866520288)AND(t0.c2)))AND(vt0.c0)))%(((((t0.c1)OR(t0.c2)))AND(t0.c0))))) ORDER BY CAST('' AS INTEGER) DESC, CASE ((0xffffffffdb4925b6) BETWEEN (0x1a29b816) AND (t0.c63))  WHEN json_object(t0.c0, t0.c2) THEN (((t0.c2, t0.c63, t0.c0)) NOT BETWEEN ((t0.c1, 0.09343036021933837, t0.c0)) AND ((t0.c0, t0.c0, t0.c63))) ELSE (vt0.c0 IN ()) END ASC, ((1856117961)>(((t0.c1)=(t0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE '1784295819'  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE '1784295819'  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE '1784295819'  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE '1784295819'  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE '1784295819'  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c63))==((t0.c1))))AND(json_valid(t0.c2))) WHERE (IFNULL((t0.c1 IN ()), t0.c2 COLLATE RTRIM)) ORDER BY CASE WHEN CAST(-2005541406 AS INTEGER) THEN ((t0.c0)<=(NULL)) ELSE CAST(t0.c2 AS REAL) END  NULLS LAST, ((CAST(t0.c2 AS TEXT))<>(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL((t0.c1 IN ()), t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c63))=((t0.c1))))AND(json_valid(t0.c2))) ORDER BY CASE WHEN CAST(-2005541406 AS INTEGER) THEN ((t0.c0)<=(NULL)) ELSE CAST(t0.c2 AS REAL) END  NULLS LAST, ((CAST(t0.c2 AS TEXT))<>(t0.c0)) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c63))==((t0.c1))))AND(json_valid(t0.c2))) WHERE (IFNULL((t0.c1 IN ()), t0.c2 COLLATE RTRIM)) ORDER BY CASE WHEN CAST(-2005541406 AS INTEGER) THEN ((t0.c0)<=(NULL)) ELSE CAST(t0.c2 AS REAL) END  NULLS LAST, ((CAST(t0.c2 AS TEXT))<>(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL((t0.c1 IN ()), t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c63))=((t0.c1))))AND(json_valid(t0.c2))) ORDER BY CASE WHEN CAST(-2005541406 AS INTEGER) THEN ((t0.c0)<=(NULL)) ELSE CAST(t0.c2 AS REAL) END  NULLS LAST, ((CAST(t0.c2 AS TEXT))<>(t0.c0)) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c63))==((t0.c1))))AND(json_valid(t0.c2))) WHERE (IFNULL((t0.c1 IN ()), t0.c2 COLLATE RTRIM)) ORDER BY CASE WHEN CAST(-2005541406 AS INTEGER) THEN ((t0.c0)<=(NULL)) ELSE CAST(t0.c2 AS REAL) END  NULLS LAST, ((CAST(t0.c2 AS TEXT))<>(t0.c0)) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE t0.c2  WHEN t0.c0 COLLATE NOCASE THEN ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c1)) END) ORDER BY CASE '-2140525438'  WHEN (t0.c0 IN (t0.c2)) THEN (~ (t0.c2)) ELSE ((t0.c63)+(t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN t0.c0 COLLATE NOCASE THEN ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE '-2140525438'  WHEN (t0.c0 IN (t0.c2)) THEN (~ (t0.c2)) ELSE ((t0.c63)+(t0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE t0.c2  WHEN t0.c0 COLLATE NOCASE THEN ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c1)) END) ORDER BY CASE '-2140525438'  WHEN (t0.c0 IN (t0.c2)) THEN (~ (t0.c2)) ELSE ((t0.c63)+(t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN t0.c0 COLLATE NOCASE THEN ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE '-2140525438'  WHEN (t0.c0 IN (t0.c2)) THEN (~ (t0.c2)) ELSE ((t0.c63)+(t0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE t0.c2  WHEN t0.c0 COLLATE NOCASE THEN ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c1)) END) ORDER BY CASE '-2140525438'  WHEN (t0.c0 IN (t0.c2)) THEN (~ (t0.c2)) ELSE ((t0.c63)+(t0.c1)) END  NULLS FIRST;
SELECT ALL * FROM t82 WHERE (((CAST(t82.c0 AS NUMERIC))IS NOT((t82.c2 IN ())))) ORDER BY ((t82.c0) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t82.c0 AS NUMERIC))IS NOT((t82.c2 IN ())))) IS TRUE)  as count FROM t82 ORDER BY ((t82.c0) IS FALSE) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t82 WHERE (((CAST(t82.c0 AS NUMERIC))IS NOT((t82.c2 IN ())))) ORDER BY ((t82.c0) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t82.c0 AS NUMERIC))IS NOT((t82.c2 IN ())))) IS TRUE)  as count FROM t82 ORDER BY ((t82.c0) IS FALSE) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t82 WHERE (((CAST(t82.c0 AS NUMERIC))IS NOT((t82.c2 IN ())))) ORDER BY ((t82.c0) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t82 ON (('W|角n') BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0)LIKE(t0.c2)))) LEFT OUTER JOIN t0 ON (t0.c0 IN ()) WHERE (((((t82.c1)OR(t82.c2)))AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((t82.c1)OR(t82.c2)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t82 ON (('W|角n') BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0)LIKE(t0.c2)))) LEFT OUTER JOIN t0 ON (t0.c0 IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t82 ON (('W|角n') BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0)LIKE(t0.c2)))) LEFT OUTER JOIN t0 ON (t0.c0 IN ()) WHERE (((((t82.c1)OR(t82.c2)))AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((t82.c1)OR(t82.c2)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t82 ON (('W|角n') BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0)LIKE(t0.c2)))) LEFT OUTER JOIN t0 ON (t0.c0 IN ()));
SELECT * FROM t0 WHERE (((((((((((('0.9479876873293223')) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))OR(t0.c1)))OR(CAST(t0.c2 AS INTEGER))))OR('0.41029006319305605')))OR(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('0.9479876873293223')) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))OR(t0.c1)))OR(CAST(t0.c2 AS INTEGER))))OR('0.41029006319305605')))OR(NULL COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((('0.9479876873293223')) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))OR(t0.c1)))OR(CAST(t0.c2 AS INTEGER))))OR('0.41029006319305605')))OR(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('0.9479876873293223')) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))OR(t0.c1)))OR(CAST(t0.c2 AS INTEGER))))OR('0.41029006319305605')))OR(NULL COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((('0.9479876873293223')) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))OR(t0.c1)))OR(CAST(t0.c2 AS INTEGER))))OR('0.41029006319305605')))OR(NULL COLLATE RTRIM)));
SELECT * FROM vt0, t82, t0 WHERE ((((+ (t0.c63))) NOT BETWEEN ((((t0.c2))<=((t0.c63)))) AND (((t82.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c63))) NOT BETWEEN ((((t0.c2))<=((t0.c63)))) AND (((t82.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT * FROM vt0, t82, t0 WHERE ((((+ (t0.c63))) NOT BETWEEN ((((t0.c2))<=((t0.c63)))) AND (((t82.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c63))) NOT BETWEEN ((((t0.c2))<=((t0.c63)))) AND (((t82.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT * FROM vt0, t82, t0 WHERE ((((+ (t0.c63))) NOT BETWEEN ((((t0.c2))<=((t0.c63)))) AND (((t82.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN t0.c63 END CROSS JOIN t82 ON (t0.c63 COLLATE BINARY IN ()) WHERE ((((((((NULL))<>((t82.c2))))OR(((t0.c63)!=(t82.c2)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL))!=((t82.c2))))OR(((t0.c63)<>(t82.c2)))))OR(NULL))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN t0.c63 END CROSS JOIN t82 ON (t0.c63 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN t0.c63 END CROSS JOIN t82 ON (t0.c63 COLLATE BINARY IN ()) WHERE ((((((((NULL))<>((t82.c2))))OR(((t0.c63)!=(t82.c2)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL))!=((t82.c2))))OR(((t0.c63)<>(t82.c2)))))OR(NULL))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN t0.c63 END CROSS JOIN t82 ON (t0.c63 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN t0.c63 END CROSS JOIN t82 ON (t0.c63 COLLATE BINARY IN ()) WHERE ((((((((NULL))<>((t82.c2))))OR(((t0.c63)!=(t82.c2)))))OR(NULL)));
SELECT ALL * FROM t82 LEFT OUTER JOIN vt0 ON (NOT (CASE t0.c1  WHEN 0.3510536625825066 THEN t0.c63 END)) FULL OUTER JOIN t0 ON x'865157c8' WHERE (CAST('?S5e*>ke' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('?S5e*>ke' AS NUMERIC)) IS TRUE)  as count FROM t82 LEFT OUTER JOIN vt0 ON (NOT (CASE t0.c1  WHEN 0.3510536625825066 THEN t0.c63 END)) FULL OUTER JOIN t0 ON x'865157c8');
SELECT ALL * FROM t82 LEFT OUTER JOIN vt0 ON (NOT (CASE t0.c1  WHEN 0.3510536625825066 THEN t0.c63 END)) FULL OUTER JOIN t0 ON x'865157c8' WHERE (CAST('?S5e*>ke' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('?S5e*>ke' AS NUMERIC)) IS TRUE)  as count FROM t82 LEFT OUTER JOIN vt0 ON (NOT (CASE t0.c1  WHEN 0.3510536625825066 THEN t0.c63 END)) FULL OUTER JOIN t0 ON x'865157c8');
SELECT COUNT(*) FROM t0, t82 WHERE ((((- ('dMdBni'))) NOT BETWEEN ((NOT (-522863652))) AND (t82.c2))) ORDER BY ((((((t0.c63)OR(t82.c0)))OR(t82.c1))) BETWEEN (CASE t82.c2  WHEN t82.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t82.c0 END) AND (t0.c1 COLLATE RTRIM)) DESC, ((((((t0.c0)!=(t82.c2)))AND(((t82.c0)%(t82.c1)))))AND(0.7963908661351038));
SELECT SUM(count) FROM (SELECT (((((- ('dMdBni'))) NOT BETWEEN ((NOT (-522863652))) AND (t82.c2))) IS TRUE)  as count FROM t0, t82 ORDER BY ((((((t0.c63)OR(t82.c0)))OR(t82.c1))) BETWEEN (CASE t82.c2  WHEN t82.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t82.c0 END) AND (t0.c1 COLLATE RTRIM)) DESC, ((((((t0.c0)<>(t82.c2)))AND(((t82.c0)%(t82.c1)))))AND(0.7963908661351038)));
SELECT COUNT(*) FROM t0, t82 WHERE ((((- ('dMdBni'))) NOT BETWEEN ((NOT (-522863652))) AND (t82.c2))) ORDER BY ((((((t0.c63)OR(t82.c0)))OR(t82.c1))) BETWEEN (CASE t82.c2  WHEN t82.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t82.c0 END) AND (t0.c1 COLLATE RTRIM)) DESC, ((((((t0.c0)!=(t82.c2)))AND(((t82.c0)%(t82.c1)))))AND(0.7963908661351038));
SELECT SUM(count) FROM (SELECT (((((- ('dMdBni'))) NOT BETWEEN ((NOT (-522863652))) AND (t82.c2))) IS TRUE)  as count FROM t0, t82 ORDER BY ((((((t0.c63)OR(t82.c0)))OR(t82.c1))) BETWEEN (CASE t82.c2  WHEN t82.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t82.c0 END) AND (t0.c1 COLLATE RTRIM)) DESC, ((((((t0.c0)<>(t82.c2)))AND(((t82.c0)%(t82.c1)))))AND(0.7963908661351038)));
SELECT COUNT(*) FROM t0, t82 WHERE ((((- ('dMdBni'))) NOT BETWEEN ((NOT (-522863652))) AND (t82.c2))) ORDER BY ((((((t0.c63)OR(t82.c0)))OR(t82.c1))) BETWEEN (CASE t82.c2  WHEN t82.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t82.c0 END) AND (t0.c1 COLLATE RTRIM)) DESC, ((((((t0.c0)!=(t82.c2)))AND(((t82.c0)%(t82.c1)))))AND(0.7963908661351038));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('')AND(((vt0.c0)+(vt0.c0)))))OR(vt0.c0))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(((vt0.c0)+(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('')AND(((vt0.c0)+(vt0.c0)))))OR(vt0.c0))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(((vt0.c0)+(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('')AND(((vt0.c0)+(vt0.c0)))))OR(vt0.c0))) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM t82, t0 NATURAL JOIN vt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t82, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t82, t0 NATURAL JOIN vt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t82, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t82, t0 NATURAL JOIN vt0 WHERE (t0.c1);
SELECT ALL * FROM t0 WHERE (240881594) ORDER BY ((((t0.c1)<>(t0.c63)))OR((t0.c2 IN (t0.c1))))  NULLS LAST, CASE WHEN 'years' THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE (t0.c63 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((240881594) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)!=(t0.c63)))OR((t0.c2 IN (t0.c1))))  NULLS LAST, CASE WHEN 'years' THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE (t0.c63 IN ()) END ASC);
SELECT ALL * FROM t0 WHERE (240881594) ORDER BY ((((t0.c1)<>(t0.c63)))OR((t0.c2 IN (t0.c1))))  NULLS LAST, CASE WHEN 'years' THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE (t0.c63 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((240881594) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)!=(t0.c63)))OR((t0.c2 IN (t0.c1))))  NULLS LAST, CASE WHEN 'years' THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE (t0.c63 IN ()) END ASC);
SELECT ALL * FROM t0 WHERE (240881594) ORDER BY ((((t0.c1)<>(t0.c63)))OR((t0.c2 IN (t0.c1))))  NULLS LAST, CASE WHEN 'years' THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE (t0.c63 IN ()) END ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c1) NOT NULL))OR(((((t0.c2)OR(x'')))OR(t0.c1)))))AND(CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOT NULL))OR(((((t0.c2)OR(x'')))OR(t0.c1)))))AND(CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c1) NOT NULL))OR(((((t0.c2)OR(x'')))OR(t0.c1)))))AND(CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOT NULL))OR(((((t0.c2)OR(x'')))OR(t0.c1)))))AND(CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c1) NOT NULL))OR(((((t0.c2)OR(x'')))OR(t0.c1)))))AND(CASE WHEN NULL THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN (t0.c1 IN ()) THEN ((((t0.c2)AND(t0.c63)))AND(t0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c63)) END) ORDER BY (t0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE RTRIM  WHEN (t0.c1 IN ()) THEN ((((t0.c2)AND(t0.c63)))AND(t0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c63)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN (t0.c1 IN ()) THEN ((((t0.c2)AND(t0.c63)))AND(t0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c63)) END) ORDER BY (t0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE RTRIM  WHEN (t0.c1 IN ()) THEN ((((t0.c2)AND(t0.c63)))AND(t0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c63)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN (t0.c1 IN ()) THEN ((((t0.c2)AND(t0.c63)))AND(t0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c63)) END) ORDER BY (t0.c0 IN ()) COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (((((0.15733145333411425) IS FALSE)) NOT BETWEEN (COALESCE(0.26455553924859243, vt0.c0, vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((0.15733145333411425) IS FALSE)) NOT BETWEEN (COALESCE(0.26455553924859243, vt0.c0, vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((0.15733145333411425) IS FALSE)) NOT BETWEEN (COALESCE(0.26455553924859243, vt0.c0, vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((0.15733145333411425) IS FALSE)) NOT BETWEEN (COALESCE(0.26455553924859243, vt0.c0, vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((0.15733145333411425) IS FALSE)) NOT BETWEEN (COALESCE(0.26455553924859243, vt0.c0, vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM t0, t82 WHERE ((((((((t0.c0)) BETWEEN ((x'')) AND ((t82.c2))))OR(((t82.c0)<(t82.c0)))))AND(((t82.c2)&(t0.c63))))) ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) BETWEEN ((x'')) AND ((t82.c2))))OR(((t82.c0)<(t82.c0)))))AND(((t82.c2)&(t0.c63))))) IS TRUE)  as count FROM t0, t82 ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM t0, t82 WHERE ((((((((t0.c0)) BETWEEN ((x'')) AND ((t82.c2))))OR(((t82.c0)<(t82.c0)))))AND(((t82.c2)&(t0.c63))))) ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) BETWEEN ((x'')) AND ((t82.c2))))OR(((t82.c0)<(t82.c0)))))AND(((t82.c2)&(t0.c63))))) IS TRUE)  as count FROM t0, t82 ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM t0, t82 WHERE ((((((((t0.c0)) BETWEEN ((x'')) AND ((t82.c2))))OR(((t82.c0)<(t82.c0)))))AND(((t82.c2)&(t0.c63))))) ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL);
SELECT ALL COUNT(*) FROM t82 WHERE ((((NOT (t82.c2))) IS FALSE)) ORDER BY ((((t82.c0) BETWEEN (t82.c0) AND (t82.c2))) ISNULL)  NULLS LAST, (((+ (t82.c0)))IS NOT(ABS(t82.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t82.c2))) IS FALSE)) IS TRUE)  as count FROM t82 ORDER BY ((((t82.c0) BETWEEN (t82.c0) AND (t82.c2))) ISNULL)  NULLS LAST, (((+ (t82.c0)))IS NOT(ABS(t82.c1))));
SELECT ALL COUNT(*) FROM t82 WHERE ((((NOT (t82.c2))) IS FALSE)) ORDER BY ((((t82.c0) BETWEEN (t82.c0) AND (t82.c2))) ISNULL)  NULLS LAST, (((+ (t82.c0)))IS NOT(ABS(t82.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t82.c2))) IS FALSE)) IS TRUE)  as count FROM t82 ORDER BY ((((t82.c0) BETWEEN (t82.c0) AND (t82.c2))) ISNULL)  NULLS LAST, (((+ (t82.c0)))IS NOT(ABS(t82.c1))));
SELECT ALL COUNT(*) FROM t82 WHERE ((((NOT (t82.c2))) IS FALSE)) ORDER BY ((((t82.c0) BETWEEN (t82.c0) AND (t82.c2))) ISNULL)  NULLS LAST, (((+ (t82.c0)))IS NOT(ABS(t82.c1)));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c0)<<(t0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<<(t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, t82, t0);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c0)<<(t0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<<(t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, t82, t0);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c0)<<(t0.c2))) NOT NULL));
SELECT ALL * FROM t82, vt0 FULL OUTER JOIN t0 ON x'c371' WHERE ('938489289') ORDER BY ((t0.c0)*(t0.c0)) COLLATE BINARY  NULLS LAST, (((t0.c2)) BETWEEN (((- (t0.c2)))) AND ((((t82.c1)+(t82.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (('938489289') IS TRUE)  as count FROM t82, vt0 FULL OUTER JOIN t0 ON x'c371' ORDER BY ((t0.c0)*(t0.c0)) COLLATE BINARY  NULLS LAST, (((t0.c2)) BETWEEN (((- (t0.c2)))) AND ((((t82.c1)+(t82.c2))))) DESC);
SELECT ALL * FROM t82, vt0 FULL OUTER JOIN t0 ON x'c371' WHERE ('938489289') ORDER BY ((t0.c0)*(t0.c0)) COLLATE BINARY  NULLS LAST, (((t0.c2)) BETWEEN (((- (t0.c2)))) AND ((((t82.c1)+(t82.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (('938489289') IS TRUE)  as count FROM t82, vt0 FULL OUTER JOIN t0 ON x'c371' ORDER BY ((t0.c0)*(t0.c0)) COLLATE BINARY  NULLS LAST, (((t0.c2)) BETWEEN (((- (t0.c2)))) AND ((((t82.c1)+(t82.c2))))) DESC);
SELECT ALL * FROM t82, vt0 FULL OUTER JOIN t0 ON x'c371' WHERE ('938489289') ORDER BY ((t0.c0)*(t0.c0)) COLLATE BINARY  NULLS LAST, (((t0.c2)) BETWEEN (((- (t0.c2)))) AND ((((t82.c1)+(t82.c2))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, '%^a민RQ', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))=((((vt0.c0)*(vt0.c0)))))) ORDER BY ((('{}') NOTNULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, '%^a민RQ', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))==((((vt0.c0)*(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((('{}') NOTNULL) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, '%^a민RQ', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))=((((vt0.c0)*(vt0.c0)))))) ORDER BY ((('{}') NOTNULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, '%^a민RQ', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))==((((vt0.c0)*(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((('{}') NOTNULL) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, '%^a민RQ', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))=((((vt0.c0)*(vt0.c0)))))) ORDER BY ((('{}') NOTNULL) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c1  WHEN '!鴗<d' THEN t0.c2 END COLLATE BINARY) ORDER BY 0xffffffffa54419ba ASC  NULLS LAST, CAST(((t0.c63)AND(t0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN '!鴗<d' THEN t0.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY 0Xffffffffa54419ba ASC  NULLS LAST, CAST(((t0.c63)AND(t0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c1  WHEN '!鴗<d' THEN t0.c2 END COLLATE BINARY) ORDER BY 0xffffffffa54419ba ASC  NULLS LAST, CAST(((t0.c63)AND(t0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN '!鴗<d' THEN t0.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY 0Xffffffffa54419ba ASC  NULLS LAST, CAST(((t0.c63)AND(t0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c1  WHEN '!鴗<d' THEN t0.c2 END COLLATE BINARY) ORDER BY 0xffffffffa54419ba ASC  NULLS LAST, CAST(((t0.c63)AND(t0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t82 ON ((highlight(t82.c2, vt0.c0, t82.c1, t82.c1))IS NOT((((('fr')OR(t82.c1)))AND(t82.c2)))) WHERE ((((t82.c1)GLOB(vt0.c0)) IN ())) ORDER BY (NOT (((((vt0.c0)AND(t82.c0)))AND(t82.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t82.c1)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t82 ON ((highlight(t82.c2, vt0.c0, t82.c1, t82.c1))IS NOT((((('fr')OR(t82.c1)))AND(t82.c2)))) ORDER BY (NOT (((((vt0.c0)AND(t82.c0)))AND(t82.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t82 ON ((highlight(t82.c2, vt0.c0, t82.c1, t82.c1))IS NOT((((('fr')OR(t82.c1)))AND(t82.c2)))) WHERE ((((t82.c1)GLOB(vt0.c0)) IN ())) ORDER BY (NOT (((((vt0.c0)AND(t82.c0)))AND(t82.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t82.c1)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t82 ON ((highlight(t82.c2, vt0.c0, t82.c1, t82.c1))IS NOT((((('fr')OR(t82.c1)))AND(t82.c2)))) ORDER BY (NOT (((((vt0.c0)AND(t82.c0)))AND(t82.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t82 ON ((highlight(t82.c2, vt0.c0, t82.c1, t82.c1))IS NOT((((('fr')OR(t82.c1)))AND(t82.c2)))) WHERE ((((t82.c1)GLOB(vt0.c0)) IN ())) ORDER BY (NOT (((((vt0.c0)AND(t82.c0)))AND(t82.c1))));
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c63) IS FALSE)) BETWEEN (((t0.c1)==(t82.c1))) AND (((t0.c63) BETWEEN (NULL) AND (t0.c2))))) ORDER BY t82.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) IS FALSE)) BETWEEN (((t0.c1)==(t82.c1))) AND (((t0.c63) BETWEEN (NULL) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY t82.c1  NULLS LAST);
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c63) IS FALSE)) BETWEEN (((t0.c1)==(t82.c1))) AND (((t0.c63) BETWEEN (NULL) AND (t0.c2))))) ORDER BY t82.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) IS FALSE)) BETWEEN (((t0.c1)==(t82.c1))) AND (((t0.c63) BETWEEN (NULL) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY t82.c1  NULLS LAST);
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c63) IS FALSE)) BETWEEN (((t0.c1)==(t82.c1))) AND (((t0.c63) BETWEEN (NULL) AND (t0.c2))))) ORDER BY t82.c1  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c63)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL) WHERE (((((vt0.c0)+(t0.c63)))>(x'')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(t0.c63)))>(x''))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c63)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c63)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL) WHERE (((((vt0.c0)+(t0.c63)))>(x'')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(t0.c63)))>(x''))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c63)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c63)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL) WHERE (((((vt0.c0)+(t0.c63)))>(x'')));
SELECT * FROM vt0, t0 WHERE ((~ (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((~ (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((~ (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))));
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((((t0.c63)-(t0.c63))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c63)-(t0.c63))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, t82);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((((t0.c63)-(t0.c63))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c63)-(t0.c63))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, t82);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((((t0.c63)-(t0.c63))) IS TRUE));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (vt0.c0) ORDER BY (((((t0.c1) BETWEEN (t0.c2) AND (t82.c1))))<=((t82.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (((((t0.c1) BETWEEN (t0.c2) AND (t82.c1))))<=((t82.c1))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (vt0.c0) ORDER BY (((((t0.c1) BETWEEN (t0.c2) AND (t82.c1))))<=((t82.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (((((t0.c1) BETWEEN (t0.c2) AND (t82.c1))))<=((t82.c1))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (vt0.c0) ORDER BY (((((t0.c1) BETWEEN (t0.c2) AND (t82.c1))))<=((t82.c1))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t82, vt0, t0 WHERE ((((((t0.c2)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM t82, vt0, t0);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE ((((((t0.c2)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM t82, vt0, t0);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE ((((((t0.c2)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) NOT NULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c1 AS REAL)) NOTNULL) WHERE (((((CAST(NULL AS REAL))AND(INSTR(t0.c63, t0.c2))))AND(((t0.c1)<>(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(NULL AS REAL))AND(INSTR(t0.c63, t0.c2))))AND(((t0.c1)<>(t0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c1 AS REAL)) NOTNULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c1 AS REAL)) NOTNULL) WHERE (((((CAST(NULL AS REAL))AND(INSTR(t0.c63, t0.c2))))AND(((t0.c1)<>(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(NULL AS REAL))AND(INSTR(t0.c63, t0.c2))))AND(((t0.c1)<>(t0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c1 AS REAL)) NOTNULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c1 AS REAL)) NOTNULL) WHERE (((((CAST(NULL AS REAL))AND(INSTR(t0.c63, t0.c2))))AND(((t0.c1)<>(t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c1)+(t0.c63)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)+(t0.c63)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c1)+(t0.c63)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)+(t0.c63)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c1)+(t0.c63)) AS BLOB));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((0xffffffffc7077e55))<((vt0.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((0Xffffffffc7077e55))<((vt0.c0))) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((0xffffffffc7077e55))<((vt0.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((0Xffffffffc7077e55))<((vt0.c0))) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((0xffffffffc7077e55))<((vt0.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN t82 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0 NATURAL JOIN t82);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN t82 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0 NATURAL JOIN t82);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN t82 WHERE (x'');
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((t0.c2)*(t82.c0)) COLLATE BINARY) ORDER BY t82.c0  NULLS FIRST, CAST('823828608' AS REAL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)*(t82.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY t82.c0  NULLS FIRST, CAST('823828608' AS REAL) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((t0.c2)*(t82.c0)) COLLATE BINARY) ORDER BY t82.c0  NULLS FIRST, CAST('823828608' AS REAL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)*(t82.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY t82.c0  NULLS FIRST, CAST('823828608' AS REAL) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((t0.c2)*(t82.c0)) COLLATE BINARY) ORDER BY t82.c0  NULLS FIRST, CAST('823828608' AS REAL) COLLATE NOCASE DESC;
SELECT * FROM t82 WHERE ((((((t82.c1)AND(t82.c1)))OR(t82.c2)) IN ())) ORDER BY (+ (((((((((((((t82.c2)OR(t82.c2)))OR(t82.c0)))OR(t82.c0)))AND(t82.c0)))AND(t82.c2)))AND(t82.c0)))) ASC, (((+ (t82.c1)))*(((t82.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c1)AND(t82.c1)))OR(t82.c2)) IN ())) IS TRUE)  as count FROM t82 ORDER BY (+ (((((((((((((t82.c2)OR(t82.c2)))OR(t82.c0)))OR(t82.c0)))AND(t82.c0)))AND(t82.c2)))AND(t82.c0)))) ASC, (((+ (t82.c1)))*(((t82.c1) IS TRUE))) DESC);
SELECT * FROM t82 WHERE ((((((t82.c1)AND(t82.c1)))OR(t82.c2)) IN ())) ORDER BY (+ (((((((((((((t82.c2)OR(t82.c2)))OR(t82.c0)))OR(t82.c0)))AND(t82.c0)))AND(t82.c2)))AND(t82.c0)))) ASC, (((+ (t82.c1)))*(((t82.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c1)AND(t82.c1)))OR(t82.c2)) IN ())) IS TRUE)  as count FROM t82 ORDER BY (+ (((((((((((((t82.c2)OR(t82.c2)))OR(t82.c0)))OR(t82.c0)))AND(t82.c0)))AND(t82.c2)))AND(t82.c0)))) ASC, (((+ (t82.c1)))*(((t82.c1) IS TRUE))) DESC);
SELECT * FROM t82 WHERE ((((((t82.c1)AND(t82.c1)))OR(t82.c2)) IN ())) ORDER BY (+ (((((((((((((t82.c2)OR(t82.c2)))OR(t82.c0)))OR(t82.c0)))AND(t82.c0)))AND(t82.c2)))AND(t82.c0)))) ASC, (((+ (t82.c1)))*(((t82.c1) IS TRUE))) DESC;
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE t0.c63  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c63 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE t0.c63  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE t0.c63  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c63 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE t0.c63  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE t0.c63  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c63 END)));
SELECT * FROM t82 WHERE ((+ (((t82.c0)IS(t82.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((t82.c0)IS(t82.c2))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ((+ (((t82.c0)IS(t82.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((t82.c0)IS(t82.c2))))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE ((+ (((t82.c0)IS(t82.c2)))));
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (NULLIF(CASE t82.c2  WHEN t82.c1 THEN t0.c2 END, ((t82.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE t82.c2  WHEN t82.c1 THEN t0.c2 END, ((t82.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t82, vt0, t0);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (NULLIF(CASE t82.c2  WHEN t82.c1 THEN t0.c2 END, ((t82.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE t82.c2  WHEN t82.c1 THEN t0.c2 END, ((t82.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t82, vt0, t0);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (NULLIF(CASE t82.c2  WHEN t82.c1 THEN t0.c2 END, ((t82.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT * FROM t82, t0 WHERE ((((((((t0.c63)AND(t0.c63)))OR(t0.c63))))>=(((t82.c1 IN ()))))) ORDER BY (+ (((t0.c2)-(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c63)AND(t0.c63)))OR(t0.c63))))>=(((t82.c1 IN ()))))) IS TRUE)  as count FROM t82, t0 ORDER BY (+ (((t0.c2)-(t0.c2))))  NULLS LAST);
SELECT * FROM t82, t0 WHERE ((((((((t0.c63)AND(t0.c63)))OR(t0.c63))))>=(((t82.c1 IN ()))))) ORDER BY (+ (((t0.c2)-(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c63)AND(t0.c63)))OR(t0.c63))))>=(((t82.c1 IN ()))))) IS TRUE)  as count FROM t82, t0 ORDER BY (+ (((t0.c2)-(t0.c2))))  NULLS LAST);
SELECT * FROM t82, t0 WHERE ((((((((t0.c63)AND(t0.c63)))OR(t0.c63))))>=(((t82.c1 IN ()))))) ORDER BY (+ (((t0.c2)-(t0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c63) IS FALSE))%(t0.c2)) WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY (((t0.c0, t0.c63, vt0.c0)) BETWEEN (((+ (t0.c0)), ((((((((t0.c0)AND(t0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c63)), ((t0.c0) ISNULL))) AND ((((t0.c0) NOT NULL), (((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c63, t0.c1, t0.c63)) AND ((NULL, t0.c63, vt0.c0))), (+ (t0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c63) IS FALSE))%(t0.c2)) ORDER BY (((t0.c0, t0.c63, vt0.c0)) BETWEEN (((+ (t0.c0)), ((((((((t0.c0)AND(t0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c63)), ((t0.c0) ISNULL))) AND ((((t0.c0) NOT NULL), (((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c63, t0.c1, t0.c63)) AND ((NULL, t0.c63, vt0.c0))), (+ (t0.c2))))) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c63) IS FALSE))%(t0.c2)) WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY (((t0.c0, t0.c63, vt0.c0)) BETWEEN (((+ (t0.c0)), ((((((((t0.c0)AND(t0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c63)), ((t0.c0) ISNULL))) AND ((((t0.c0) NOT NULL), (((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c63, t0.c1, t0.c63)) AND ((NULL, t0.c63, vt0.c0))), (+ (t0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c63) IS FALSE))%(t0.c2)) ORDER BY (((t0.c0, t0.c63, vt0.c0)) BETWEEN (((+ (t0.c0)), ((((((((t0.c0)AND(t0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c63)), ((t0.c0) ISNULL))) AND ((((t0.c0) NOT NULL), (((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c63, t0.c1, t0.c63)) AND ((NULL, t0.c63, vt0.c0))), (+ (t0.c2))))) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c63) IS FALSE))%(t0.c2)) WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY (((t0.c0, t0.c63, vt0.c0)) BETWEEN (((+ (t0.c0)), ((((((((t0.c0)AND(t0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c63)), ((t0.c0) ISNULL))) AND ((((t0.c0) NOT NULL), (((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((t0.c63, t0.c1, t0.c63)) AND ((NULL, t0.c63, vt0.c0))), (+ (t0.c2))))) DESC;
SELECT * FROM t0, t82 WHERE ((NOT (t0.c0 COLLATE RTRIM))) ORDER BY '7?*C|' ASC  NULLS FIRST, CASE WHEN (NOT (t0.c1)) THEN ((((t82.c1)OR(t82.c0)))AND(t82.c1)) END, (((('')OR(((((((((t82.c1)OR(t82.c0)))OR(t82.c0)))OR(t0.c0)))AND(t82.c1)))))AND(((((((((t82.c2)OR(0.13744275503570624)))AND(t0.c0)))OR(t82.c1)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t82 ORDER BY '7?*C|' ASC  NULLS FIRST, CASE WHEN (NOT (t0.c1)) THEN ((((t82.c1)OR(t82.c0)))AND(t82.c1)) END, (((('')OR(((((((((t82.c1)OR(t82.c0)))OR(t82.c0)))OR(t0.c0)))AND(t82.c1)))))AND(((((((((t82.c2)OR(0.13744275503570624)))AND(t0.c0)))OR(t82.c1)))AND(t0.c0)))));
SELECT * FROM t0, t82 WHERE ((NOT (t0.c0 COLLATE RTRIM))) ORDER BY '7?*C|' ASC  NULLS FIRST, CASE WHEN (NOT (t0.c1)) THEN ((((t82.c1)OR(t82.c0)))AND(t82.c1)) END, (((('')OR(((((((((t82.c1)OR(t82.c0)))OR(t82.c0)))OR(t0.c0)))AND(t82.c1)))))AND(((((((((t82.c2)OR(0.13744275503570624)))AND(t0.c0)))OR(t82.c1)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t82 ORDER BY '7?*C|' ASC  NULLS FIRST, CASE WHEN (NOT (t0.c1)) THEN ((((t82.c1)OR(t82.c0)))AND(t82.c1)) END, (((('')OR(((((((((t82.c1)OR(t82.c0)))OR(t82.c0)))OR(t0.c0)))AND(t82.c1)))))AND(((((((((t82.c2)OR(0.13744275503570624)))AND(t0.c0)))OR(t82.c1)))AND(t0.c0)))));
SELECT * FROM t0, t82 WHERE ((NOT (t0.c0 COLLATE RTRIM))) ORDER BY '7?*C|' ASC  NULLS FIRST, CASE WHEN (NOT (t0.c1)) THEN ((((t82.c1)OR(t82.c0)))AND(t82.c1)) END, (((('')OR(((((((((t82.c1)OR(t82.c0)))OR(t82.c0)))OR(t0.c0)))AND(t82.c1)))))AND(((((((((t82.c2)OR(0.13744275503570624)))AND(t0.c0)))OR(t82.c1)))AND(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c63 COLLATE RTRIM)IS(CASE t0.c63  WHEN t0.c2 THEN t0.c1 END))) ORDER BY CASE '1418933321'  WHEN x'' THEN TYPEOF(DISTINCT t0.c63) WHEN ROUND(t0.c2, t0.c0) THEN LIKELY(t0.c0) WHEN (t0.c1 IN (t0.c2, t0.c2)) THEN CASE WHEN '726370667' THEN t0.c0 WHEN t0.c1 THEN 0.6621713749067062 WHEN NULL THEN t0.c1 END ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND (('-761763960'))) END;
SELECT SUM(count) FROM (SELECT ((((t0.c63 COLLATE RTRIM)IS(CASE t0.c63  WHEN t0.c2 THEN t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY CASE '1418933321'  WHEN x'' THEN TYPEOF(DISTINCT t0.c63) WHEN ROUND(t0.c2, t0.c0) THEN LIKELY(t0.c0) WHEN (t0.c1 IN (t0.c2, t0.c2)) THEN CASE WHEN '726370667' THEN t0.c0 WHEN t0.c1 THEN 0.6621713749067062 WHEN NULL THEN t0.c1 END ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND (('-761763960'))) END);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63 COLLATE RTRIM)IS(CASE t0.c63  WHEN t0.c2 THEN t0.c1 END))) ORDER BY CASE '1418933321'  WHEN x'' THEN TYPEOF(DISTINCT t0.c63) WHEN ROUND(t0.c2, t0.c0) THEN LIKELY(t0.c0) WHEN (t0.c1 IN (t0.c2, t0.c2)) THEN CASE WHEN '726370667' THEN t0.c0 WHEN t0.c1 THEN 0.6621713749067062 WHEN NULL THEN t0.c1 END ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND (('-761763960'))) END;
SELECT SUM(count) FROM (SELECT ((((t0.c63 COLLATE RTRIM)IS(CASE t0.c63  WHEN t0.c2 THEN t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY CASE '1418933321'  WHEN x'' THEN TYPEOF(DISTINCT t0.c63) WHEN ROUND(t0.c2, t0.c0) THEN LIKELY(t0.c0) WHEN (t0.c1 IN (t0.c2, t0.c2)) THEN CASE WHEN '726370667' THEN t0.c0 WHEN t0.c1 THEN 0.6621713749067062 WHEN NULL THEN t0.c1 END ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND (('-761763960'))) END);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63 COLLATE RTRIM)IS(CASE t0.c63  WHEN t0.c2 THEN t0.c1 END))) ORDER BY CASE '1418933321'  WHEN x'' THEN TYPEOF(DISTINCT t0.c63) WHEN ROUND(t0.c2, t0.c0) THEN LIKELY(t0.c0) WHEN (t0.c1 IN (t0.c2, t0.c2)) THEN CASE WHEN '726370667' THEN t0.c0 WHEN t0.c1 THEN 0.6621713749067062 WHEN NULL THEN t0.c1 END ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND (('-761763960'))) END;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.8493109529997436)GLOB(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8493109529997436)GLOB(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.8493109529997436)GLOB(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8493109529997436)GLOB(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.8493109529997436)GLOB(((t0.c0) IS TRUE))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON t82.c1 FULL OUTER JOIN t82 ON (('\rz*7')GLOB((t82.c2 IN ()))) WHERE ((((((t0.c63, '', t0.c2))>((t0.c0, t82.c2, t0.c2))))|((((t82.c1)) BETWEEN ((t82.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63, '', t0.c2))>((t0.c0, t82.c2, t0.c2))))|((((t82.c1)) BETWEEN ((t82.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t82.c1 FULL OUTER JOIN t82 ON (('\rz*7')GLOB((t82.c2 IN ()))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON t82.c1 FULL OUTER JOIN t82 ON (('\rz*7')GLOB((t82.c2 IN ()))) WHERE ((((((t0.c63, '', t0.c2))>((t0.c0, t82.c2, t0.c2))))|((((t82.c1)) BETWEEN ((t82.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63, '', t0.c2))>((t0.c0, t82.c2, t0.c2))))|((((t82.c1)) BETWEEN ((t82.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t82.c1 FULL OUTER JOIN t82 ON (('\rz*7')GLOB((t82.c2 IN ()))));
SELECT ALL COUNT(*) FROM t82, t0 WHERE (t82.c0) ORDER BY (t82.c2 IN ()) COLLATE NOCASE, (0.5542208761546413 IN ()) ASC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(CAST(t0.c63 AS REAL))))OR((('1096495108') NOTNULL))))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND((((t82.c0))<=((t82.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t82.c0) IS TRUE)  as count FROM t82, t0 ORDER BY (t82.c2 IN ()) COLLATE NOCASE, (0.5542208761546413 IN ()) ASC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(CAST(t0.c63 AS REAL))))OR((('1096495108') NOTNULL))))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND((((t82.c0))<=((t82.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t82, t0 WHERE (t82.c0) ORDER BY (t82.c2 IN ()) COLLATE NOCASE, (0.5542208761546413 IN ()) ASC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(CAST(t0.c63 AS REAL))))OR((('1096495108') NOTNULL))))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND((((t82.c0))<=((t82.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t82.c0) IS TRUE)  as count FROM t82, t0 ORDER BY (t82.c2 IN ()) COLLATE NOCASE, (0.5542208761546413 IN ()) ASC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(CAST(t0.c63 AS REAL))))OR((('1096495108') NOTNULL))))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND((((t82.c0))<=((t82.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t82, t0 WHERE (t82.c0) ORDER BY (t82.c2 IN ()) COLLATE NOCASE, (0.5542208761546413 IN ()) ASC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(CAST(t0.c63 AS REAL))))OR((('1096495108') NOTNULL))))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND((((t82.c0))<=((t82.c2)))))  NULLS LAST;
SELECT ALL * FROM t0, t82 WHERE (SQLITE_VERSION()) ORDER BY CASE WHEN CASE t82.c2  WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN t0.c2 END THEN ((t82.c2)<<(x'')) WHEN ((NULL)>=(t0.c2)) THEN ((t0.c63) NOT BETWEEN (x'39a9') AND (t0.c63)) WHEN t82.c1 COLLATE BINARY THEN NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, t82 ORDER BY CASE WHEN CASE t82.c2  WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN t0.c2 END THEN ((t82.c2)<<(x'')) WHEN ((NULL)>=(t0.c2)) THEN ((t0.c63) NOT BETWEEN (x'39a9') AND (t0.c63)) WHEN t82.c1 COLLATE BINARY THEN NULL END DESC);
SELECT ALL * FROM t0, t82 WHERE (SQLITE_VERSION()) ORDER BY CASE WHEN CASE t82.c2  WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN t0.c2 END THEN ((t82.c2)<<(x'')) WHEN ((NULL)>=(t0.c2)) THEN ((t0.c63) NOT BETWEEN (x'39a9') AND (t0.c63)) WHEN t82.c1 COLLATE BINARY THEN NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, t82 ORDER BY CASE WHEN CASE t82.c2  WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN t0.c2 END THEN ((t82.c2)<<(x'')) WHEN ((NULL)>=(t0.c2)) THEN ((t0.c63) NOT BETWEEN (x'39a9') AND (t0.c63)) WHEN t82.c1 COLLATE BINARY THEN NULL END DESC);
SELECT ALL * FROM t0, t82 WHERE (SQLITE_VERSION()) ORDER BY CASE WHEN CASE t82.c2  WHEN t0.c63 THEN t0.c63 WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN t0.c2 END THEN ((t82.c2)<<(x'')) WHEN ((NULL)>=(t0.c2)) THEN ((t0.c63) NOT BETWEEN (x'39a9') AND (t0.c63)) WHEN t82.c1 COLLATE BINARY THEN NULL END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'');
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((CAST(t82.c2 AS INTEGER))GLOB(((NULL)>(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t82.c2 AS INTEGER))GLOB(((NULL)>(t0.c63))))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((CAST(t82.c2 AS INTEGER))GLOB(((NULL)>(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t82.c2 AS INTEGER))GLOB(((NULL)>(t0.c63))))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((CAST(t82.c2 AS INTEGER))GLOB(((NULL)>(t0.c63)))));
SELECT ALL * FROM vt0, t0, t82 WHERE (CASE (- (t82.c1))  WHEN HEX(t82.c1) THEN ((t0.c1)OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (t82.c1))  WHEN HEX(t82.c1) THEN ((t0.c1)OR(t0.c0)) END) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL * FROM vt0, t0, t82 WHERE (CASE (- (t82.c1))  WHEN HEX(t82.c1) THEN ((t0.c1)OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (t82.c1))  WHEN HEX(t82.c1) THEN ((t0.c1)OR(t0.c0)) END) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL * FROM vt0, t0, t82 WHERE (CASE (- (t82.c1))  WHEN HEX(t82.c1) THEN ((t0.c1)OR(t0.c0)) END);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE t0.c2  WHEN json_valid(t82.c0) THEN ((t0.c63) BETWEEN (t0.c2) AND (t82.c2)) ELSE CASE t0.c1  WHEN t0.c2 THEN t0.c63 WHEN vt0.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c1 ELSE t0.c1 END END CROSS JOIN t82 ON t0.c63 WHERE ((((t82.c1 IN (x''))) NOTNULL)) ORDER BY ((((((vt0.c0)OR(t0.c63)))AND(t0.c2))) NOT BETWEEN (((t0.c63)>>(t0.c1))) AND (CAST(t0.c2 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t82.c1 IN (x''))) NOTNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE t0.c2  WHEN json_valid(t82.c0) THEN ((t0.c63) BETWEEN (t0.c2) AND (t82.c2)) ELSE CASE t0.c1  WHEN t0.c2 THEN t0.c63 WHEN vt0.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c1 ELSE t0.c1 END END CROSS JOIN t82 ON t0.c63 ORDER BY ((((((vt0.c0)OR(t0.c63)))AND(t0.c2))) NOT BETWEEN (((t0.c63)>>(t0.c1))) AND (CAST(t0.c2 AS REAL)))  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE t0.c2  WHEN json_valid(t82.c0) THEN ((t0.c63) BETWEEN (t0.c2) AND (t82.c2)) ELSE CASE t0.c1  WHEN t0.c2 THEN t0.c63 WHEN vt0.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c1 ELSE t0.c1 END END CROSS JOIN t82 ON t0.c63 WHERE ((((t82.c1 IN (x''))) NOTNULL)) ORDER BY ((((((vt0.c0)OR(t0.c63)))AND(t0.c2))) NOT BETWEEN (((t0.c63)>>(t0.c1))) AND (CAST(t0.c2 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t82.c1 IN (x''))) NOTNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE t0.c2  WHEN json_valid(t82.c0) THEN ((t0.c63) BETWEEN (t0.c2) AND (t82.c2)) ELSE CASE t0.c1  WHEN t0.c2 THEN t0.c63 WHEN vt0.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c1 ELSE t0.c1 END END CROSS JOIN t82 ON t0.c63 ORDER BY ((((((vt0.c0)OR(t0.c63)))AND(t0.c2))) NOT BETWEEN (((t0.c63)>>(t0.c1))) AND (CAST(t0.c2 AS REAL)))  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE t0.c2  WHEN json_valid(t82.c0) THEN ((t0.c63) BETWEEN (t0.c2) AND (t82.c2)) ELSE CASE t0.c1  WHEN t0.c2 THEN t0.c63 WHEN vt0.c0 THEN t82.c0 WHEN t0.c63 THEN t82.c1 ELSE t0.c1 END END CROSS JOIN t82 ON t0.c63 WHERE ((((t82.c1 IN (x''))) NOTNULL)) ORDER BY ((((((vt0.c0)OR(t0.c63)))AND(t0.c2))) NOT BETWEEN (((t0.c63)>>(t0.c1))) AND (CAST(t0.c2 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1)AND('F( <'))  WHEN (0.7023765860351407 IN ()) THEN t0.c1 COLLATE NOCASE WHEN (NOT (t0.c0)) THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN (((t0.c0, t0.c63, t0.c2, t0.c1, t0.c2, x'', t0.c1))<>((NULL, t0.c63, t0.c1, x'', t0.c2, '', t0.c2))) END) ORDER BY ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR((t0.c63 IN ()))))OR('0.7824291200071842'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1)AND('F( <'))  WHEN (0.7023765860351407 IN ()) THEN t0.c1 COLLATE NOCASE WHEN (NOT (t0.c0)) THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN (((t0.c0, t0.c63, t0.c2, t0.c1, t0.c2, x'', t0.c1))!=((NULL, t0.c63, t0.c1, x'', t0.c2, '', t0.c2))) END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR((t0.c63 IN ()))))OR('0.7824291200071842'))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1)AND('F( <'))  WHEN (0.7023765860351407 IN ()) THEN t0.c1 COLLATE NOCASE WHEN (NOT (t0.c0)) THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN (((t0.c0, t0.c63, t0.c2, t0.c1, t0.c2, x'', t0.c1))<>((NULL, t0.c63, t0.c1, x'', t0.c2, '', t0.c2))) END) ORDER BY ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR((t0.c63 IN ()))))OR('0.7824291200071842'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1)AND('F( <'))  WHEN (0.7023765860351407 IN ()) THEN t0.c1 COLLATE NOCASE WHEN (NOT (t0.c0)) THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN (((t0.c0, t0.c63, t0.c2, t0.c1, t0.c2, x'', t0.c1))!=((NULL, t0.c63, t0.c1, x'', t0.c2, '', t0.c2))) END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR((t0.c63 IN ()))))OR('0.7824291200071842'))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1)AND('F( <'))  WHEN (0.7023765860351407 IN ()) THEN t0.c1 COLLATE NOCASE WHEN (NOT (t0.c0)) THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN (((t0.c0, t0.c63, t0.c2, t0.c1, t0.c2, x'', t0.c1))<>((NULL, t0.c63, t0.c1, x'', t0.c2, '', t0.c2))) END) ORDER BY ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR((t0.c63 IN ()))))OR('0.7824291200071842'))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)<>(vt0.c0)))|(x''));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))|(x'')));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)<>(vt0.c0)))|(x''));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))|(x'')));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)<>(vt0.c0)))|(x''));
SELECT ALL * FROM vt0, t82, t0 WHERE (((((t0.c2)<>(t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<>(t0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, t82, t0);
SELECT ALL * FROM vt0, t82, t0 WHERE (((((t0.c2)<>(t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<>(t0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, t82, t0);
SELECT ALL * FROM vt0, t82, t0 WHERE (((((t0.c2)<>(t0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM t82 FULL OUTER JOIN vt0 ON (((((t0.c2))<((t82.c0))))-(((((((((t82.c1)AND(t0.c2)))OR(t82.c2)))OR(t0.c63)))OR(t0.c63)))) FULL OUTER JOIN t0 ON ((((vt0.c0)|(vt0.c0))) BETWEEN (24946929) AND (CAST(t82.c1 AS NUMERIC))) WHERE ((((((t82.c0) IS TRUE), LIKELY(DISTINCT t82.c1), (~ (t82.c0))))<=((CAST(t0.c0 AS NUMERIC), ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)), ((t0.c63) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((t82.c0) IS TRUE), LIKELY(DISTINCT t82.c1), (~ (t82.c0))))<=((CAST(t0.c0 AS NUMERIC), ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)), ((t0.c63) NOTNULL))))) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON (((((t0.c2))<((t82.c0))))-(((((((((t82.c1)AND(t0.c2)))OR(t82.c2)))OR(t0.c63)))OR(t0.c63)))) FULL OUTER JOIN t0 ON ((((vt0.c0)|(vt0.c0))) BETWEEN (24946929) AND (CAST(t82.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t82 FULL OUTER JOIN vt0 ON (((((t0.c2))<((t82.c0))))-(((((((((t82.c1)AND(t0.c2)))OR(t82.c2)))OR(t0.c63)))OR(t0.c63)))) FULL OUTER JOIN t0 ON ((((vt0.c0)|(vt0.c0))) BETWEEN (24946929) AND (CAST(t82.c1 AS NUMERIC))) WHERE ((((((t82.c0) IS TRUE), LIKELY(DISTINCT t82.c1), (~ (t82.c0))))<=((CAST(t0.c0 AS NUMERIC), ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)), ((t0.c63) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((t82.c0) IS TRUE), LIKELY(DISTINCT t82.c1), (~ (t82.c0))))<=((CAST(t0.c0 AS NUMERIC), ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)), ((t0.c63) NOTNULL))))) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON (((((t0.c2))<((t82.c0))))-(((((((((t82.c1)AND(t0.c2)))OR(t82.c2)))OR(t0.c63)))OR(t0.c63)))) FULL OUTER JOIN t0 ON ((((vt0.c0)|(vt0.c0))) BETWEEN (24946929) AND (CAST(t82.c1 AS NUMERIC))));
SELECT ALL * FROM t0 WHERE (CASE WHEN (+ ('')) THEN HEX(t0.c1) WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN TRIM(DISTINCT t0.c2) ELSE ((t0.c1)<(t0.c2)) END) ORDER BY CAST(HEX(x'') AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ ('')) THEN HEX(t0.c1) WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN TRIM(DISTINCT t0.c2) ELSE ((t0.c1)<(t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY CAST(HEX(x'') AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN (+ ('')) THEN HEX(t0.c1) WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN TRIM(DISTINCT t0.c2) ELSE ((t0.c1)<(t0.c2)) END) ORDER BY CAST(HEX(x'') AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ ('')) THEN HEX(t0.c1) WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN TRIM(DISTINCT t0.c2) ELSE ((t0.c1)<(t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY CAST(HEX(x'') AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN (+ ('')) THEN HEX(t0.c1) WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN TRIM(DISTINCT t0.c2) ELSE ((t0.c1)<(t0.c2)) END) ORDER BY CAST(HEX(x'') AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c1)IS NOT(t0.c2))) NOT NULL)) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)IS NOT(t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c1  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c1)IS NOT(t0.c2))) NOT NULL)) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)IS NOT(t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c1  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c1)IS NOT(t0.c2))) NOT NULL)) ORDER BY t0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN LIKE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((((((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) IS FALSE))) DESC, NULL DESC  NULLS LAST, (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) IS FALSE))) DESC, NULL DESC  NULLS LAST, (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN LIKE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((((((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) IS FALSE))) DESC, NULL DESC  NULLS LAST, (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) IS FALSE))) DESC, NULL DESC  NULLS LAST, (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN LIKE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((((((((((vt0.c0) NOTNULL))AND(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) IS FALSE))) DESC, NULL DESC  NULLS LAST, (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t82, vt0 WHERE ((((((t0.c0) NOTNULL)))=((((t0.c1)<=(t82.c0)))))) ORDER BY CASE (t0.c2 IN ())  WHEN CAST(t82.c2 AS TEXT) THEN ((t82.c0) IS FALSE) ELSE CAST(t0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOTNULL)))=((((t0.c1)<=(t82.c0)))))) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY CASE (t0.c2 IN ())  WHEN CAST(t82.c2 AS TEXT) THEN ((t82.c0) IS FALSE) ELSE CAST(t0.c0 AS TEXT) END  NULLS LAST);
SELECT COUNT(*) FROM t0, t82, vt0 WHERE ((((((t0.c0) NOTNULL)))=((((t0.c1)<=(t82.c0)))))) ORDER BY CASE (t0.c2 IN ())  WHEN CAST(t82.c2 AS TEXT) THEN ((t82.c0) IS FALSE) ELSE CAST(t0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOTNULL)))=((((t0.c1)<=(t82.c0)))))) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY CASE (t0.c2 IN ())  WHEN CAST(t82.c2 AS TEXT) THEN ((t82.c0) IS FALSE) ELSE CAST(t0.c0 AS TEXT) END  NULLS LAST);
SELECT COUNT(*) FROM t0, t82, vt0 WHERE ((((((t0.c0) NOTNULL)))=((((t0.c1)<=(t82.c0)))))) ORDER BY CASE (t0.c2 IN ())  WHEN CAST(t82.c2 AS TEXT) THEN ((t82.c0) IS FALSE) ELSE CAST(t0.c0 AS TEXT) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t82 WHERE (0.8230264016488419);
SELECT SUM(count) FROM (SELECT ((0.8230264016488419) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE (0.8230264016488419);
SELECT SUM(count) FROM (SELECT ((0.8230264016488419) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE (0.8230264016488419);
SELECT COUNT(*) FROM t82 WHERE (((t82.c1 COLLATE NOCASE)OR(((t82.c2)<(t82.c1))))) ORDER BY (((t82.c2)%(t82.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((t82.c1 COLLATE NOCASE)OR(((t82.c2)<(t82.c1))))) IS TRUE)  as count FROM t82 ORDER BY (((t82.c2)%(t82.c1)) IN ()) ASC);
SELECT COUNT(*) FROM t82 WHERE (((t82.c1 COLLATE NOCASE)OR(((t82.c2)<(t82.c1))))) ORDER BY (((t82.c2)%(t82.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((t82.c1 COLLATE NOCASE)OR(((t82.c2)<(t82.c1))))) IS TRUE)  as count FROM t82 ORDER BY (((t82.c2)%(t82.c1)) IN ()) ASC);
SELECT COUNT(*) FROM t82 WHERE (((t82.c1 COLLATE NOCASE)OR(((t82.c2)<(t82.c1))))) ORDER BY (((t82.c2)%(t82.c1)) IN ()) ASC;
SELECT * FROM t82, vt0 WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t82, vt0);
SELECT * FROM t82, vt0 WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t82, vt0);
SELECT * FROM t82, vt0 WHERE (t82.c1);
SELECT * FROM vt0, t0 WHERE (t0.c2) ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST, CASE t0.c2  WHEN (((t0.c1, t0.c0, t0.c1))=((vt0.c0, vt0.c0, t0.c1))) THEN (t0.c0 IN (t0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST, CASE t0.c2  WHEN (((t0.c1, t0.c0, t0.c1))=((vt0.c0, vt0.c0, t0.c1))) THEN (t0.c0 IN (t0.c1)) END ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (t0.c2) ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST, CASE t0.c2  WHEN (((t0.c1, t0.c0, t0.c1))=((vt0.c0, vt0.c0, t0.c1))) THEN (t0.c0 IN (t0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST, CASE t0.c2  WHEN (((t0.c1, t0.c0, t0.c1))=((vt0.c0, vt0.c0, t0.c1))) THEN (t0.c0 IN (t0.c1)) END ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (t0.c2) ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST, CASE t0.c2  WHEN (((t0.c1, t0.c0, t0.c1))=((vt0.c0, vt0.c0, t0.c1))) THEN (t0.c0 IN (t0.c1)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))IS(CASE x'f9b9'  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) ORDER BY (((((((((vt0.c0 IN ()))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, CASE x'' COLLATE RTRIM  WHEN '' COLLATE BINARY THEN ((vt0.c0)<>(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))IS(CASE x'f9b9'  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, CASE x'' COLLATE RTRIM  WHEN '' COLLATE BINARY THEN ((vt0.c0)<>(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))IS(CASE x'f9b9'  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) ORDER BY (((((((((vt0.c0 IN ()))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, CASE x'' COLLATE RTRIM  WHEN '' COLLATE BINARY THEN ((vt0.c0)<>(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))IS(CASE x'f9b9'  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, CASE x'' COLLATE RTRIM  WHEN '' COLLATE BINARY THEN ((vt0.c0)<>(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))IS(CASE x'f9b9'  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) ORDER BY (((((((((vt0.c0 IN ()))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, CASE x'' COLLATE RTRIM  WHEN '' COLLATE BINARY THEN ((vt0.c0)<>(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END DESC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (t0.c63) AND (t0.c1)) COLLATE NOCASE) ORDER BY CASE (~ (t0.c2))  WHEN ((0.9865321923583957) NOT NULL) THEN (t0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (t0.c63) AND (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (~ (t0.c2))  WHEN ((0.9865321923583957) NOT NULL) THEN (t0.c1 IN ()) END);
SELECT * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (t0.c63) AND (t0.c1)) COLLATE NOCASE) ORDER BY CASE (~ (t0.c2))  WHEN ((0.9865321923583957) NOT NULL) THEN (t0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (t0.c63) AND (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (~ (t0.c2))  WHEN ((0.9865321923583957) NOT NULL) THEN (t0.c1 IN ()) END);
SELECT * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (t0.c63) AND (t0.c1)) COLLATE NOCASE) ORDER BY CASE (~ (t0.c2))  WHEN ((0.9865321923583957) NOT NULL) THEN (t0.c1 IN ()) END;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t82 ON (((((t82.c2)) BETWEEN ((t82.c2)) AND ((vt0.c0))))+(UNLIKELY(t82.c2))) INNER JOIN vt0 ON (((t0.c1)) NOT BETWEEN ((NULLIF(t0.c1, NULL))) AND ((((((((((((((t0.c1)AND(t82.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t82.c2)))OR(vt0.c0)))OR(vt0.c0))))) WHERE ((((t82.c0, t0.c2, (t82.c2 IN ())))<((((t0.c1)%(t0.c0)), (t0.c0 IN ()), ((((t0.c1)OR(vt0.c0)))OR(t0.c2)))))) ORDER BY (((((t82.c2)-(t82.c2))))<=((NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t82.c0, t0.c2, (t82.c2 IN ())))<((((t0.c1)%(t0.c0)), (t0.c0 IN ()), ((((t0.c1)OR(vt0.c0)))OR(t0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t82 ON (((((t82.c2)) BETWEEN ((t82.c2)) AND ((vt0.c0))))+(UNLIKELY(t82.c2))) INNER JOIN vt0 ON (((t0.c1)) NOT BETWEEN ((NULLIF(t0.c1, NULL))) AND ((((((((((((((t0.c1)AND(t82.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t82.c2)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((t82.c2)-(t82.c2))))<=((NULL))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t82 ON (((((t82.c2)) BETWEEN ((t82.c2)) AND ((vt0.c0))))+(UNLIKELY(t82.c2))) INNER JOIN vt0 ON (((t0.c1)) NOT BETWEEN ((NULLIF(t0.c1, NULL))) AND ((((((((((((((t0.c1)AND(t82.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t82.c2)))OR(vt0.c0)))OR(vt0.c0))))) WHERE ((((t82.c0, t0.c2, (t82.c2 IN ())))<((((t0.c1)%(t0.c0)), (t0.c0 IN ()), ((((t0.c1)OR(vt0.c0)))OR(t0.c2)))))) ORDER BY (((((t82.c2)-(t82.c2))))<=((NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t82.c0, t0.c2, (t82.c2 IN ())))<((((t0.c1)%(t0.c0)), (t0.c0 IN ()), ((((t0.c1)OR(vt0.c0)))OR(t0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t82 ON (((((t82.c2)) BETWEEN ((t82.c2)) AND ((vt0.c0))))+(UNLIKELY(t82.c2))) INNER JOIN vt0 ON (((t0.c1)) NOT BETWEEN ((NULLIF(t0.c1, NULL))) AND ((((((((((((((t0.c1)AND(t82.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t82.c2)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((t82.c2)-(t82.c2))))<=((NULL))));
SELECT ALL * FROM t0, vt0, t82 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0, vt0, t82 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0, vt0, t82 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c63)!=(t0.c0))))) ORDER BY CASE WHEN (NOT ('9G')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) ELSE t0.c2 END;
SELECT SUM(count) FROM (SELECT (((- (((t0.c63)!=(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (NOT ('9G')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) ELSE t0.c2 END);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c63)!=(t0.c0))))) ORDER BY CASE WHEN (NOT ('9G')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) ELSE t0.c2 END;
SELECT SUM(count) FROM (SELECT (((- (((t0.c63)!=(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (NOT ('9G')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) ELSE t0.c2 END);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c63)!=(t0.c0))))) ORDER BY CASE WHEN (NOT ('9G')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) ELSE t0.c2 END;
SELECT ALL COUNT(*) FROM t82, t0 RIGHT OUTER JOIN vt0 ON (((('643013698')AND(((t0.c2)/(t0.c1)))))OR(CASE WHEN t0.c2 THEN t82.c0 ELSE vt0.c0 END)) WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t82, t0 RIGHT OUTER JOIN vt0 ON (((('643013698')AND(((t0.c2)/(t0.c1)))))OR(CASE WHEN t0.c2 THEN t82.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t82, t0 RIGHT OUTER JOIN vt0 ON (((('643013698')AND(((t0.c2)/(t0.c1)))))OR(CASE WHEN t0.c2 THEN t82.c0 ELSE vt0.c0 END)) WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t82, t0 RIGHT OUTER JOIN vt0 ON (((('643013698')AND(((t0.c2)/(t0.c1)))))OR(CASE WHEN t0.c2 THEN t82.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t82, t0 RIGHT OUTER JOIN vt0 ON (((('643013698')AND(((t0.c2)/(t0.c1)))))OR(CASE WHEN t0.c2 THEN t82.c0 ELSE vt0.c0 END)) WHERE (t82.c1);
SELECT * FROM t82 WHERE (((-9.25423842E8) BETWEEN (((t82.c0) NOT NULL)) AND (CASE WHEN t82.c2 THEN t82.c2 WHEN t82.c1 THEN t82.c0 WHEN t82.c0 THEN t82.c0 END))) ORDER BY CAST(MIN(t82.c2, t82.c1) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-9.25423842E8) BETWEEN (((t82.c0) NOT NULL)) AND (CASE WHEN t82.c2 THEN t82.c2 WHEN t82.c1 THEN t82.c0 WHEN t82.c0 THEN t82.c0 END))) IS TRUE)  as count FROM t82 ORDER BY CAST(MIN(t82.c2, t82.c1) AS NUMERIC)  NULLS LAST);
SELECT * FROM t82 WHERE (((-9.25423842E8) BETWEEN (((t82.c0) NOT NULL)) AND (CASE WHEN t82.c2 THEN t82.c2 WHEN t82.c1 THEN t82.c0 WHEN t82.c0 THEN t82.c0 END))) ORDER BY CAST(MIN(t82.c2, t82.c1) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-9.25423842E8) BETWEEN (((t82.c0) NOT NULL)) AND (CASE WHEN t82.c2 THEN t82.c2 WHEN t82.c1 THEN t82.c0 WHEN t82.c0 THEN t82.c0 END))) IS TRUE)  as count FROM t82 ORDER BY CAST(MIN(t82.c2, t82.c1) AS NUMERIC)  NULLS LAST);
SELECT * FROM t82 WHERE (((-9.25423842E8) BETWEEN (((t82.c0) NOT NULL)) AND (CASE WHEN t82.c2 THEN t82.c2 WHEN t82.c1 THEN t82.c0 WHEN t82.c0 THEN t82.c0 END))) ORDER BY CAST(MIN(t82.c2, t82.c1) AS NUMERIC)  NULLS LAST;
SELECT * FROM t0, t82, vt0 WHERE (CAST((((t0.c1))<((vt0.c0))) AS NUMERIC)) ORDER BY CASE IFNULL(DISTINCT t0.c0, vt0.c0)  WHEN t0.c2 THEN t82.c1 COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) THEN LOWER(t82.c2) WHEN (+ (NULL)) THEN NULL END;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c1))<((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY CASE IFNULL(DISTINCT t0.c0, vt0.c0)  WHEN t0.c2 THEN t82.c1 COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) THEN LOWER(t82.c2) WHEN (+ (NULL)) THEN NULL END);
SELECT * FROM t0, t82, vt0 WHERE (CAST((((t0.c1))<((vt0.c0))) AS NUMERIC)) ORDER BY CASE IFNULL(DISTINCT t0.c0, vt0.c0)  WHEN t0.c2 THEN t82.c1 COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) THEN LOWER(t82.c2) WHEN (+ (NULL)) THEN NULL END;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c1))<((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY CASE IFNULL(DISTINCT t0.c0, vt0.c0)  WHEN t0.c2 THEN t82.c1 COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) THEN LOWER(t82.c2) WHEN (+ (NULL)) THEN NULL END);
SELECT * FROM t0, t82, vt0 WHERE (CAST((((t0.c1))<((vt0.c0))) AS NUMERIC)) ORDER BY CASE IFNULL(DISTINCT t0.c0, vt0.c0)  WHEN t0.c2 THEN t82.c1 COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) THEN LOWER(t82.c2) WHEN (+ (NULL)) THEN NULL END;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))LIKE(-157301067)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0)))LIKE(-157301067))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))LIKE(-157301067)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0)))LIKE(-157301067))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))LIKE(-157301067)));
SELECT COUNT(*) FROM vt0, t0, t82 WHERE ((- (t82.c0))) ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t82.c1))) AS TEXT) ASC, -7.45537756E8 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t82.c0))) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t82.c1))) AS TEXT) ASC, -7.45537756E8 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t82 WHERE ((- (t82.c0))) ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t82.c1))) AS TEXT) ASC, -7.45537756E8 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t82.c0))) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t82.c1))) AS TEXT) ASC, -7.45537756E8 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t82 WHERE ((- (t82.c0))) ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t82.c1))) AS TEXT) ASC, -7.45537756E8 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((((((((((((((((((((t0.c2)AND(vt0.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t0.c1)))OR(t82.c0)))AND(t82.c1)))OR(t0.c2)))OR(t0.c63)))OR((((t82.c2)) BETWEEN ((t0.c2)) AND ((NULL))))))AND(((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c2)AND(vt0.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t0.c1)))OR(t82.c0)))AND(t82.c1)))OR(t0.c2)))OR(t0.c63)))OR((((t82.c2)) BETWEEN ((t0.c2)) AND ((NULL))))))AND(((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((((((((((((((((((((t0.c2)AND(vt0.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t0.c1)))OR(t82.c0)))AND(t82.c1)))OR(t0.c2)))OR(t0.c63)))OR((((t82.c2)) BETWEEN ((t0.c2)) AND ((NULL))))))AND(((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c2)AND(vt0.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t0.c1)))OR(t82.c0)))AND(t82.c1)))OR(t0.c2)))OR(t0.c63)))OR((((t82.c2)) BETWEEN ((t0.c2)) AND ((NULL))))))AND(((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE (((((((((((((((((((((t0.c2)AND(vt0.c0)))OR(t82.c0)))OR(vt0.c0)))OR(t0.c1)))OR(t82.c0)))AND(t82.c1)))OR(t0.c2)))OR(t0.c63)))OR((((t82.c2)) BETWEEN ((t0.c2)) AND ((NULL))))))AND(((t0.c1) NOTNULL))));
SELECT * FROM vt0, t0, t82 WHERE ((((((((t82.c2)AND(t82.c2)))AND(vt0.c0))))>((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t82.c2)AND(t82.c2)))AND(vt0.c0))))>((x'')))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT * FROM vt0, t0, t82 WHERE ((((((((t82.c2)AND(t82.c2)))AND(vt0.c0))))>((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t82.c2)AND(t82.c2)))AND(vt0.c0))))>((x'')))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT * FROM vt0, t0, t82 WHERE ((((((((t82.c2)AND(t82.c2)))AND(vt0.c0))))>((x''))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((t82.c2 COLLATE RTRIM)*('438941718' COLLATE RTRIM)) CROSS JOIN t82 ON (((t0.c2)) BETWEEN ((json_type(t82.c1))) AND ((t82.c0))) WHERE (((((LENGTH(t0.c2))AND(CASE t0.c63  WHEN vt0.c0 THEN t0.c1 ELSE t82.c2 END)))AND(rtreenode(t0.c63, t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((LENGTH(t0.c2))AND(CASE t0.c63  WHEN vt0.c0 THEN t0.c1 ELSE t82.c2 END)))AND(rtreenode(t0.c63, t0.c1)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t82.c2 COLLATE RTRIM)*('438941718' COLLATE RTRIM)) CROSS JOIN t82 ON (((t0.c2)) BETWEEN ((json_type(t82.c1))) AND ((t82.c0))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((t82.c2 COLLATE RTRIM)*('438941718' COLLATE RTRIM)) CROSS JOIN t82 ON (((t0.c2)) BETWEEN ((json_type(t82.c1))) AND ((t82.c0))) WHERE (((((LENGTH(t0.c2))AND(CASE t0.c63  WHEN vt0.c0 THEN t0.c1 ELSE t82.c2 END)))AND(rtreenode(t0.c63, t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((LENGTH(t0.c2))AND(CASE t0.c63  WHEN vt0.c0 THEN t0.c1 ELSE t82.c2 END)))AND(rtreenode(t0.c63, t0.c1)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t82.c2 COLLATE RTRIM)*('438941718' COLLATE RTRIM)) CROSS JOIN t82 ON (((t0.c2)) BETWEEN ((json_type(t82.c1))) AND ((t82.c0))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((t82.c2 COLLATE RTRIM)*('438941718' COLLATE RTRIM)) CROSS JOIN t82 ON (((t0.c2)) BETWEEN ((json_type(t82.c1))) AND ((t82.c0))) WHERE (((((LENGTH(t0.c2))AND(CASE t0.c63  WHEN vt0.c0 THEN t0.c1 ELSE t82.c2 END)))AND(rtreenode(t0.c63, t0.c1))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((0.046657945672835655) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0x5fea90e1)) END) ORDER BY ((((vt0.c0)AND(LENGTH(vt0.c0))))AND(rtreenode(vt0.c0, vt0.c0)))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.046657945672835655) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0X5fea90e1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(LENGTH(vt0.c0))))AND(rtreenode(vt0.c0, vt0.c0)))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, CAST(vt0.c0 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((0.046657945672835655) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0x5fea90e1)) END) ORDER BY ((((vt0.c0)AND(LENGTH(vt0.c0))))AND(rtreenode(vt0.c0, vt0.c0)))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.046657945672835655) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0X5fea90e1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(LENGTH(vt0.c0))))AND(rtreenode(vt0.c0, vt0.c0)))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, CAST(vt0.c0 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((0.046657945672835655) IS FALSE) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0x5fea90e1)) END) ORDER BY ((((vt0.c0)AND(LENGTH(vt0.c0))))AND(rtreenode(vt0.c0, vt0.c0)))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0, t82 WHERE ((((t82.c1)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN t82.c2 THEN vt0.c0 ELSE t82.c1 END))));
SELECT SUM(count) FROM (SELECT (((((t82.c1)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN t82.c2 THEN vt0.c0 ELSE t82.c1 END)))) IS TRUE)  as count FROM vt0, t82);
SELECT ALL * FROM vt0, t82 WHERE ((((t82.c1)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN t82.c2 THEN vt0.c0 ELSE t82.c1 END))));
SELECT SUM(count) FROM (SELECT (((((t82.c1)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN t82.c2 THEN vt0.c0 ELSE t82.c1 END)))) IS TRUE)  as count FROM vt0, t82);
SELECT ALL * FROM vt0, t82 WHERE ((((t82.c1)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN t82.c2 THEN vt0.c0 ELSE t82.c1 END))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((~ (t0.c2)))) INNER JOIN t82 ON CASE WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN t0.c1 WHEN CASE WHEN t0.c2 THEN x'' WHEN t82.c0 THEN t0.c1 WHEN t0.c63 THEN t0.c2 END THEN UNLIKELY(DISTINCT t82.c1) WHEN x'' THEN json_type('1e500') WHEN ((t0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN t0.c2 END WHEN ((vt0.c0) NOT NULL) THEN ((t0.c1) ISNULL) ELSE ((t0.c2)>>(t0.c2)) END WHERE (((((t82.c2)IS NOT(t82.c2))) IS FALSE)) ORDER BY ((((NULL) NOT NULL))>(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c2)IS NOT(t82.c2))) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((~ (t0.c2)))) INNER JOIN t82 ON CASE WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN t0.c1 WHEN CASE WHEN t0.c2 THEN x'' WHEN t82.c0 THEN t0.c1 WHEN t0.c63 THEN t0.c2 END THEN UNLIKELY(DISTINCT t82.c1) WHEN x'' THEN json_type('1e500') WHEN ((t0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN t0.c2 END WHEN ((vt0.c0) NOT NULL) THEN ((t0.c1) ISNULL) ELSE ((t0.c2)>>(t0.c2)) END ORDER BY ((((NULL) NOT NULL))>(t0.c0)) ASC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((~ (t0.c2)))) INNER JOIN t82 ON CASE WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN t0.c1 WHEN CASE WHEN t0.c2 THEN x'' WHEN t82.c0 THEN t0.c1 WHEN t0.c63 THEN t0.c2 END THEN UNLIKELY(DISTINCT t82.c1) WHEN x'' THEN json_type('1e500') WHEN ((t0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN t0.c2 END WHEN ((vt0.c0) NOT NULL) THEN ((t0.c1) ISNULL) ELSE ((t0.c2)>>(t0.c2)) END WHERE (((((t82.c2)IS NOT(t82.c2))) IS FALSE)) ORDER BY ((((NULL) NOT NULL))>(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c2)IS NOT(t82.c2))) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((~ (t0.c2)))) INNER JOIN t82 ON CASE WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN t0.c1 WHEN CASE WHEN t0.c2 THEN x'' WHEN t82.c0 THEN t0.c1 WHEN t0.c63 THEN t0.c2 END THEN UNLIKELY(DISTINCT t82.c1) WHEN x'' THEN json_type('1e500') WHEN ((t0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN t0.c2 END WHEN ((vt0.c0) NOT NULL) THEN ((t0.c1) ISNULL) ELSE ((t0.c2)>>(t0.c2)) END ORDER BY ((((NULL) NOT NULL))>(t0.c0)) ASC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((~ (t0.c2)))) INNER JOIN t82 ON CASE WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN t0.c1 WHEN CASE WHEN t0.c2 THEN x'' WHEN t82.c0 THEN t0.c1 WHEN t0.c63 THEN t0.c2 END THEN UNLIKELY(DISTINCT t82.c1) WHEN x'' THEN json_type('1e500') WHEN ((t0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN t0.c2 END WHEN ((vt0.c0) NOT NULL) THEN ((t0.c1) ISNULL) ELSE ((t0.c2)>>(t0.c2)) END WHERE (((((t82.c2)IS NOT(t82.c2))) IS FALSE)) ORDER BY ((((NULL) NOT NULL))>(t0.c0)) ASC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t82 ON (NOT (t0.c0)) COLLATE NOCASE WHERE ((NOT (((t82.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t82.c0) IS TRUE)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t82 ON (NOT (t0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t82 ON (NOT (t0.c0)) COLLATE NOCASE WHERE ((NOT (((t82.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t82.c0) IS TRUE)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t82 ON (NOT (t0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t82 ON (NOT (t0.c0)) COLLATE NOCASE WHERE ((NOT (((t82.c0) IS TRUE))));
SELECT ALL * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 END)<(((x'10b2')<<(t0.c1))))) ORDER BY CASE ((t0.c63) NOT BETWEEN (t0.c1) AND (NULL))  WHEN (((t0.c0, t0.c2, vt0.c0))=((NULL, t0.c0, t0.c0))) THEN ((t0.c0)%(t0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c0 END)<(((x'10b2')<<(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c63) NOT BETWEEN (t0.c1) AND (NULL))  WHEN (((t0.c0, t0.c2, vt0.c0))=((NULL, t0.c0, t0.c0))) THEN ((t0.c0)%(t0.c0)) END DESC);
SELECT ALL * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 END)<(((x'10b2')<<(t0.c1))))) ORDER BY CASE ((t0.c63) NOT BETWEEN (t0.c1) AND (NULL))  WHEN (((t0.c0, t0.c2, vt0.c0))=((NULL, t0.c0, t0.c0))) THEN ((t0.c0)%(t0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c0 END)<(((x'10b2')<<(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c63) NOT BETWEEN (t0.c1) AND (NULL))  WHEN (((t0.c0, t0.c2, vt0.c0))=((NULL, t0.c0, t0.c0))) THEN ((t0.c0)%(t0.c0)) END DESC);
SELECT ALL * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 END)<(((x'10b2')<<(t0.c1))))) ORDER BY CASE ((t0.c63) NOT BETWEEN (t0.c1) AND (NULL))  WHEN (((t0.c0, t0.c2, vt0.c0))=((NULL, t0.c0, t0.c0))) THEN ((t0.c0)%(t0.c0)) END DESC;
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN json_insert(t82.c2, t82.c0, t82.c1) THEN (- (t82.c1)) WHEN ((t82.c1) NOTNULL) THEN CAST(t82.c1 AS NUMERIC) WHEN ((t82.c0)-(t82.c1)) THEN (+ (t82.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_insert(t82.c2, t82.c0, t82.c1) THEN (- (t82.c1)) WHEN ((t82.c1) NOTNULL) THEN CAST(t82.c1 AS NUMERIC) WHEN ((t82.c0)-(t82.c1)) THEN (+ (t82.c1)) END) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN json_insert(t82.c2, t82.c0, t82.c1) THEN (- (t82.c1)) WHEN ((t82.c1) NOTNULL) THEN CAST(t82.c1 AS NUMERIC) WHEN ((t82.c0)-(t82.c1)) THEN (+ (t82.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_insert(t82.c2, t82.c0, t82.c1) THEN (- (t82.c1)) WHEN ((t82.c1) NOTNULL) THEN CAST(t82.c1 AS NUMERIC) WHEN ((t82.c0)-(t82.c1)) THEN (+ (t82.c1)) END) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (CASE WHEN json_insert(t82.c2, t82.c0, t82.c1) THEN (- (t82.c1)) WHEN ((t82.c1) NOTNULL) THEN CAST(t82.c1 AS NUMERIC) WHEN ((t82.c0)-(t82.c1)) THEN (+ (t82.c1)) END);
SELECT COUNT(*) FROM t82, t0 WHERE (((((t0.c63, t82.c1, t82.c1)) BETWEEN ((t82.c1, 0.765754629583227, t0.c1)) AND ((t82.c0, t0.c1, t0.c1))) IN ())) ORDER BY ((1e500)LIKE(((t82.c1) BETWEEN (t0.c2) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63, t82.c1, t82.c1)) BETWEEN ((t82.c1, 0.765754629583227, t0.c1)) AND ((t82.c0, t0.c1, t0.c1))) IN ())) IS TRUE)  as count FROM t82, t0 ORDER BY ((1e500)LIKE(((t82.c1) BETWEEN (t0.c2) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t82, t0 WHERE (((((t0.c63, t82.c1, t82.c1)) BETWEEN ((t82.c1, 0.765754629583227, t0.c1)) AND ((t82.c0, t0.c1, t0.c1))) IN ())) ORDER BY ((1e500)LIKE(((t82.c1) BETWEEN (t0.c2) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63, t82.c1, t82.c1)) BETWEEN ((t82.c1, 0.765754629583227, t0.c1)) AND ((t82.c0, t0.c1, t0.c1))) IN ())) IS TRUE)  as count FROM t82, t0 ORDER BY ((1e500)LIKE(((t82.c1) BETWEEN (t0.c2) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t82, t0 WHERE (((((t0.c63, t82.c1, t82.c1)) BETWEEN ((t82.c1, 0.765754629583227, t0.c1)) AND ((t82.c0, t0.c1, t0.c1))) IN ())) ORDER BY ((1e500)LIKE(((t82.c1) BETWEEN (t0.c2) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t82 WHERE ((~ (((t82.c0) BETWEEN (t82.c1) AND (t82.c2))))) ORDER BY (((NOT (t82.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t82.c0) BETWEEN (t82.c1) AND (t82.c2))))) IS TRUE)  as count FROM t82 ORDER BY (((NOT (t82.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM t82 WHERE ((~ (((t82.c0) BETWEEN (t82.c1) AND (t82.c2))))) ORDER BY (((NOT (t82.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t82.c0) BETWEEN (t82.c1) AND (t82.c2))))) IS TRUE)  as count FROM t82 ORDER BY (((NOT (t82.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM t82 WHERE ((~ (((t82.c0) BETWEEN (t82.c1) AND (t82.c2))))) ORDER BY (((NOT (t82.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t82 ON ((((NULL)OR(t82.c0)))AND(t82.c2)) COLLATE RTRIM COLLATE NOCASE WHERE (t0.c1) ORDER BY t0.c0 COLLATE NOCASE ASC, ((-4.68229984E8) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 CROSS JOIN t82 ON ((((NULL)OR(t82.c0)))AND(t82.c2)) COLLATE RTRIM COLLATE NOCASE ORDER BY t0.c0 COLLATE NOCASE ASC, ((-4.68229984E8) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t82 ON ((((NULL)OR(t82.c0)))AND(t82.c2)) COLLATE RTRIM COLLATE NOCASE WHERE (t0.c1) ORDER BY t0.c0 COLLATE NOCASE ASC, ((-4.68229984E8) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 CROSS JOIN t82 ON ((((NULL)OR(t82.c0)))AND(t82.c2)) COLLATE RTRIM COLLATE NOCASE ORDER BY t0.c0 COLLATE NOCASE ASC, ((-4.68229984E8) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t82 ON ((((NULL)OR(t82.c0)))AND(t82.c2)) COLLATE RTRIM COLLATE NOCASE WHERE (t0.c1) ORDER BY t0.c0 COLLATE NOCASE ASC, ((-4.68229984E8) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t82 CROSS JOIN t0 ON CAST('5	ꂃ >a' COLLATE NOCASE AS REAL) INNER JOIN vt0 ON (~ (HEX(DISTINCT t82.c2))) WHERE (((TRIM('-743759920', t82.c0))LIKE(t0.c1))) ORDER BY ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM('-743759920', t82.c0))LIKE(t0.c1))) IS TRUE)  as count FROM t82 CROSS JOIN t0 ON CAST('5	ꂃ >a' COLLATE NOCASE AS REAL) INNER JOIN vt0 ON (~ (HEX(DISTINCT t82.c2))) ORDER BY ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t82 CROSS JOIN t0 ON CAST('5	ꂃ >a' COLLATE NOCASE AS REAL) INNER JOIN vt0 ON (~ (HEX(DISTINCT t82.c2))) WHERE (((TRIM('-743759920', t82.c0))LIKE(t0.c1))) ORDER BY ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM('-743759920', t82.c0))LIKE(t0.c1))) IS TRUE)  as count FROM t82 CROSS JOIN t0 ON CAST('5	ꂃ >a' COLLATE NOCASE AS REAL) INNER JOIN vt0 ON (~ (HEX(DISTINCT t82.c2))) ORDER BY ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t82 CROSS JOIN t0 ON CAST('5	ꂃ >a' COLLATE NOCASE AS REAL) INNER JOIN vt0 ON (~ (HEX(DISTINCT t82.c2))) WHERE (((TRIM('-743759920', t82.c0))LIKE(t0.c1))) ORDER BY ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((('904566751') NOT BETWEEN ((- (t0.c63))) AND (t82.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((t82.c1)>=(t0.c2)) THEN ((t82.c2)+(t0.c1)) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('904566751') NOT BETWEEN ((- (t0.c63))) AND (t82.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY CASE WHEN ((t82.c1)>=(t0.c2)) THEN ((t82.c2)+(t0.c1)) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((('904566751') NOT BETWEEN ((- (t0.c63))) AND (t82.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((t82.c1)>=(t0.c2)) THEN ((t82.c2)+(t0.c1)) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('904566751') NOT BETWEEN ((- (t0.c63))) AND (t82.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY CASE WHEN ((t82.c1)>=(t0.c2)) THEN ((t82.c2)+(t0.c1)) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((('904566751') NOT BETWEEN ((- (t0.c63))) AND (t82.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((t82.c1)>=(t0.c2)) THEN ((t82.c2)+(t0.c1)) ELSE ((t0.c0) NOT BETWEEN (NULL) AND (t0.c2)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CAST(NULL AS REAL))>=(json_remove(t0.c2, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL))>=(json_remove(t0.c2, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(NULL AS REAL))>=(json_remove(t0.c2, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL))>=(json_remove(t0.c2, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM vt0, t0, t82 WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM vt0, t0, t82);
SELECT COUNT(*) FROM vt0, t0, t82 WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM vt0, t0, t82);
SELECT COUNT(*) FROM vt0, t0, t82 WHERE (t82.c1);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((CAST(t0.c2 AS TEXT) IN ())) ORDER BY ((((t82.c1))<((t0.c63))) IN (t0.c63))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY ((((t82.c1))<((t0.c63))) IN (t0.c63))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((CAST(t0.c2 AS TEXT) IN ())) ORDER BY ((((t82.c1))<((t0.c63))) IN (t0.c63))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY ((((t82.c1))<((t0.c63))) IN (t0.c63))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((CAST(t0.c2 AS TEXT) IN ())) ORDER BY ((((t82.c1))<((t0.c63))) IN (t0.c63))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t82, t0 WHERE ((((TRIM(DISTINCT t0.c0, t0.c1), (t0.c0 IN ('510009290', t82.c0)), ((t82.c2) BETWEEN (t82.c0) AND (t82.c0))))!=(('419583605', ('-930388785' IN ()), ((((((((t0.c2)AND(t82.c0)))OR(t82.c0)))AND(t0.c63)))AND(t0.c63)))))) ORDER BY CAST((((t82.c2, t82.c0, x''))==((t82.c0, t82.c2, t0.c2))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TRIM(DISTINCT t0.c0, t0.c1), (t0.c0 IN ('510009290', t82.c0)), ((t82.c2) BETWEEN (t82.c0) AND (t82.c0))))<>(('419583605', ('-930388785' IN ()), ((((((((t0.c2)AND(t82.c0)))OR(t82.c0)))AND(t0.c63)))AND(t0.c63)))))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY CAST((((t82.c2, t82.c0, x''))==((t82.c0, t82.c2, t0.c2))) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE ((((TRIM(DISTINCT t0.c0, t0.c1), (t0.c0 IN ('510009290', t82.c0)), ((t82.c2) BETWEEN (t82.c0) AND (t82.c0))))!=(('419583605', ('-930388785' IN ()), ((((((((t0.c2)AND(t82.c0)))OR(t82.c0)))AND(t0.c63)))AND(t0.c63)))))) ORDER BY CAST((((t82.c2, t82.c0, x''))==((t82.c0, t82.c2, t0.c2))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TRIM(DISTINCT t0.c0, t0.c1), (t0.c0 IN ('510009290', t82.c0)), ((t82.c2) BETWEEN (t82.c0) AND (t82.c0))))<>(('419583605', ('-930388785' IN ()), ((((((((t0.c2)AND(t82.c0)))OR(t82.c0)))AND(t0.c63)))AND(t0.c63)))))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY CAST((((t82.c2, t82.c0, x''))==((t82.c0, t82.c2, t0.c2))) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE ((((TRIM(DISTINCT t0.c0, t0.c1), (t0.c0 IN ('510009290', t82.c0)), ((t82.c2) BETWEEN (t82.c0) AND (t82.c0))))!=(('419583605', ('-930388785' IN ()), ((((((((t0.c2)AND(t82.c0)))OR(t82.c0)))AND(t0.c63)))AND(t0.c63)))))) ORDER BY CAST((((t82.c2, t82.c0, x''))==((t82.c0, t82.c2, t0.c2))) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN t82 ON '\nsFV3rnFQ' WHERE (((CAST(t0.c2 AS REAL))&(ROUND(t0.c63, t0.c63)))) ORDER BY UNLIKELY(((t0.c2) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS REAL))&(ROUND(t0.c63, t0.c63)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN t82 ON '\nsFV3rnFQ' ORDER BY UNLIKELY(((t0.c2) ISNULL)) ASC);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN t82 ON '\nsFV3rnFQ' WHERE (((CAST(t0.c2 AS REAL))&(ROUND(t0.c63, t0.c63)))) ORDER BY UNLIKELY(((t0.c2) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS REAL))&(ROUND(t0.c63, t0.c63)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN t82 ON '\nsFV3rnFQ' ORDER BY UNLIKELY(((t0.c2) ISNULL)) ASC);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN t82 ON '\nsFV3rnFQ' WHERE (((CAST(t0.c2 AS REAL))&(ROUND(t0.c63, t0.c63)))) ORDER BY UNLIKELY(((t0.c2) ISNULL)) ASC;
SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<>(0.6434140652094559)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(t0.c0)))!=(0.6434140652094559))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<>(0.6434140652094559)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(t0.c0)))!=(0.6434140652094559))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<>(0.6434140652094559)));
SELECT COUNT(*) FROM t82, t0 WHERE (CASE CAST(t0.c1 AS BLOB)  WHEN ((t82.c2)LIKE(t82.c0)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((1920480821)+(t0.c2)) THEN ((((t0.c63)OR(t82.c2)))AND(t0.c2)) WHEN (((t0.c63, t82.c0, t82.c1)) NOT BETWEEN ((t82.c0, '-709428916', t82.c0)) AND ((t0.c1, t0.c2, t0.c63))) THEN '' END) ORDER BY CASE ''  WHEN ((t0.c1)>=(NULL)) THEN t82.c0 COLLATE BINARY ELSE t0.c63 END ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c1 AS BLOB)  WHEN ((t82.c2)LIKE(t82.c0)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((1920480821)+(t0.c2)) THEN ((((t0.c63)OR(t82.c2)))AND(t0.c2)) WHEN (((t0.c63, t82.c0, t82.c1)) NOT BETWEEN ((t82.c0, '-709428916', t82.c0)) AND ((t0.c1, t0.c2, t0.c63))) THEN '' END) IS TRUE)  as count FROM t82, t0 ORDER BY CASE ''  WHEN ((t0.c1)>=(NULL)) THEN t82.c0 COLLATE BINARY ELSE t0.c63 END ASC);
SELECT COUNT(*) FROM t82, t0 WHERE (CASE CAST(t0.c1 AS BLOB)  WHEN ((t82.c2)LIKE(t82.c0)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((1920480821)+(t0.c2)) THEN ((((t0.c63)OR(t82.c2)))AND(t0.c2)) WHEN (((t0.c63, t82.c0, t82.c1)) NOT BETWEEN ((t82.c0, '-709428916', t82.c0)) AND ((t0.c1, t0.c2, t0.c63))) THEN '' END) ORDER BY CASE ''  WHEN ((t0.c1)>=(NULL)) THEN t82.c0 COLLATE BINARY ELSE t0.c63 END ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c1 AS BLOB)  WHEN ((t82.c2)LIKE(t82.c0)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((1920480821)+(t0.c2)) THEN ((((t0.c63)OR(t82.c2)))AND(t0.c2)) WHEN (((t0.c63, t82.c0, t82.c1)) NOT BETWEEN ((t82.c0, '-709428916', t82.c0)) AND ((t0.c1, t0.c2, t0.c63))) THEN '' END) IS TRUE)  as count FROM t82, t0 ORDER BY CASE ''  WHEN ((t0.c1)>=(NULL)) THEN t82.c0 COLLATE BINARY ELSE t0.c63 END ASC);
SELECT COUNT(*) FROM t82, t0 WHERE (CASE CAST(t0.c1 AS BLOB)  WHEN ((t82.c2)LIKE(t82.c0)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((1920480821)+(t0.c2)) THEN ((((t0.c63)OR(t82.c2)))AND(t0.c2)) WHEN (((t0.c63, t82.c0, t82.c1)) NOT BETWEEN ((t82.c0, '-709428916', t82.c0)) AND ((t0.c1, t0.c2, t0.c63))) THEN '' END) ORDER BY CASE ''  WHEN ((t0.c1)>=(NULL)) THEN t82.c0 COLLATE BINARY ELSE t0.c63 END ASC;
SELECT ALL * FROM vt0, t0, t82 WHERE ((~ (((vt0.c0)-(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)-(t82.c0))))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL * FROM vt0, t0, t82 WHERE ((~ (((vt0.c0)-(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)-(t82.c0))))) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL * FROM vt0, t0, t82 WHERE ((~ (((vt0.c0)-(t82.c0)))));
SELECT * FROM vt0, t82 WHERE ('6될') ORDER BY CAST(CAST(t82.c0 AS NUMERIC) AS REAL);
SELECT SUM(count) FROM (SELECT (('6될') IS TRUE)  as count FROM vt0, t82 ORDER BY CAST(CAST(t82.c0 AS NUMERIC) AS REAL));
SELECT * FROM vt0, t82 WHERE ('6될') ORDER BY CAST(CAST(t82.c0 AS NUMERIC) AS REAL);
SELECT SUM(count) FROM (SELECT (('6될') IS TRUE)  as count FROM vt0, t82 ORDER BY CAST(CAST(t82.c0 AS NUMERIC) AS REAL));
SELECT * FROM vt0, t82 WHERE ('6될') ORDER BY CAST(CAST(t82.c0 AS NUMERIC) AS REAL);
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (((((TRIM('0.12329133669087833'))AND(x'')))AND((t82.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM('0.12329133669087833'))AND(x'')))AND((t82.c2 IN ())))) IS TRUE)  as count FROM vt0, t82);
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (((((TRIM('0.12329133669087833'))AND(x'')))AND((t82.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM('0.12329133669087833'))AND(x'')))AND((t82.c2 IN ())))) IS TRUE)  as count FROM vt0, t82);
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (((((TRIM('0.12329133669087833'))AND(x'')))AND((t82.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (x'') ORDER BY CAST(t0.c63 AS TEXT) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, t82 ORDER BY CAST(t0.c63 AS TEXT) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (x'') ORDER BY CAST(t0.c63 AS TEXT) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, t82 ORDER BY CAST(t0.c63 AS TEXT) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE (x'') ORDER BY CAST(t0.c63 AS TEXT) COLLATE RTRIM DESC;
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c1 IN (t0.c0, t0.c1, t0.c0)) THEN (t0.c63 IN ()) WHEN ((((t0.c63)OR(t0.c1)))OR(t0.c2)) THEN (((t0.c63))>=((x''))) WHEN t0.c1 COLLATE BINARY THEN NULL ELSE CASE NULL  WHEN t0.c2 THEN t0.c2 ELSE 'Y3' END END) ORDER BY (CASE t0.c2  WHEN t0.c2 THEN t0.c63 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c1 IN (t0.c0, t0.c1, t0.c0)) THEN (t0.c63 IN ()) WHEN ((((t0.c63)OR(t0.c1)))OR(t0.c2)) THEN (((t0.c63))>=((x''))) WHEN t0.c1 COLLATE BINARY THEN NULL ELSE CASE NULL  WHEN t0.c2 THEN t0.c2 ELSE 'Y3' END END) IS TRUE)  as count FROM t0 ORDER BY (CASE t0.c2  WHEN t0.c2 THEN t0.c63 END IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c1 IN (t0.c0, t0.c1, t0.c0)) THEN (t0.c63 IN ()) WHEN ((((t0.c63)OR(t0.c1)))OR(t0.c2)) THEN (((t0.c63))>=((x''))) WHEN t0.c1 COLLATE BINARY THEN NULL ELSE CASE NULL  WHEN t0.c2 THEN t0.c2 ELSE 'Y3' END END) ORDER BY (CASE t0.c2  WHEN t0.c2 THEN t0.c63 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c1 IN (t0.c0, t0.c1, t0.c0)) THEN (t0.c63 IN ()) WHEN ((((t0.c63)OR(t0.c1)))OR(t0.c2)) THEN (((t0.c63))>=((x''))) WHEN t0.c1 COLLATE BINARY THEN NULL ELSE CASE NULL  WHEN t0.c2 THEN t0.c2 ELSE 'Y3' END END) IS TRUE)  as count FROM t0 ORDER BY (CASE t0.c2  WHEN t0.c2 THEN t0.c63 END IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c1 IN (t0.c0, t0.c1, t0.c0)) THEN (t0.c63 IN ()) WHEN ((((t0.c63)OR(t0.c1)))OR(t0.c2)) THEN (((t0.c63))>=((x''))) WHEN t0.c1 COLLATE BINARY THEN NULL ELSE CASE NULL  WHEN t0.c2 THEN t0.c2 ELSE 'Y3' END END) ORDER BY (CASE t0.c2  WHEN t0.c2 THEN t0.c63 END IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (((ABS(t0.c63))OR(((((t0.c1)OR(t82.c2)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((ABS(t0.c63))OR(((((t0.c1)OR(t82.c2)))AND(t0.c2))))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (((ABS(t0.c63))OR(((((t0.c1)OR(t82.c2)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((ABS(t0.c63))OR(((((t0.c1)OR(t82.c2)))AND(t0.c2))))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL COUNT(*) FROM t0, vt0, t82 WHERE (((ABS(t0.c63))OR(((((t0.c1)OR(t82.c2)))AND(t0.c2)))));
SELECT ALL * FROM t0 INNER JOIN t82 ON IFNULL(DISTINCT ((t0.c2) NOTNULL), ((((t0.c0)OR(vt0.c0)))AND(t82.c2))) LEFT OUTER JOIN vt0 ON (((NULL IN (t0.c63)))%(((((t82.c1)AND(t0.c1)))AND(vt0.c0)))) WHERE ((NOT (CASE WHEN vt0.c0 THEN t82.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN t82.c2 END))) IS TRUE)  as count FROM t0 INNER JOIN t82 ON IFNULL(DISTINCT ((t0.c2) NOTNULL), ((((t0.c0)OR(vt0.c0)))AND(t82.c2))) LEFT OUTER JOIN vt0 ON (((NULL IN (t0.c63)))%(((((t82.c1)AND(t0.c1)))AND(vt0.c0)))));
SELECT ALL * FROM t0 INNER JOIN t82 ON IFNULL(DISTINCT ((t0.c2) NOTNULL), ((((t0.c0)OR(vt0.c0)))AND(t82.c2))) LEFT OUTER JOIN vt0 ON (((NULL IN (t0.c63)))%(((((t82.c1)AND(t0.c1)))AND(vt0.c0)))) WHERE ((NOT (CASE WHEN vt0.c0 THEN t82.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN t82.c2 END))) IS TRUE)  as count FROM t0 INNER JOIN t82 ON IFNULL(DISTINCT ((t0.c2) NOTNULL), ((((t0.c0)OR(vt0.c0)))AND(t82.c2))) LEFT OUTER JOIN vt0 ON (((NULL IN (t0.c63)))%(((((t82.c1)AND(t0.c1)))AND(vt0.c0)))));
SELECT ALL * FROM t0 INNER JOIN t82 ON IFNULL(DISTINCT ((t0.c2) NOTNULL), ((((t0.c0)OR(vt0.c0)))AND(t82.c2))) LEFT OUTER JOIN vt0 ON (((NULL IN (t0.c63)))%(((((t82.c1)AND(t0.c1)))AND(vt0.c0)))) WHERE ((NOT (CASE WHEN vt0.c0 THEN t82.c2 END)));
SELECT COUNT(*) FROM t82, t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))>(((t0.c1)GLOB(NULL))))) ORDER BY (- (((t0.c1) IS TRUE)))  NULLS FIRST, json_object(CASE t0.c63  WHEN t0.c63 THEN t0.c0 WHEN t0.c63 THEN t0.c2 WHEN t82.c0 THEN t82.c0 ELSE t82.c1 END, ((t0.c63)LIKE(t82.c1)), ((t82.c1) IS TRUE), (((t0.c1))<((t82.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))>(((t0.c1)GLOB(NULL))))) IS TRUE)  as count FROM t82, t0 ORDER BY (- (((t0.c1) IS TRUE)))  NULLS FIRST, json_object(CASE t0.c63  WHEN t0.c63 THEN t0.c0 WHEN t0.c63 THEN t0.c2 WHEN t82.c0 THEN t82.c0 ELSE t82.c1 END, ((t0.c63)LIKE(t82.c1)), ((t82.c1) IS TRUE), (((t0.c1))<((t82.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t82, t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))>(((t0.c1)GLOB(NULL))))) ORDER BY (- (((t0.c1) IS TRUE)))  NULLS FIRST, json_object(CASE t0.c63  WHEN t0.c63 THEN t0.c0 WHEN t0.c63 THEN t0.c2 WHEN t82.c0 THEN t82.c0 ELSE t82.c1 END, ((t0.c63)LIKE(t82.c1)), ((t82.c1) IS TRUE), (((t0.c1))<((t82.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))>(((t0.c1)GLOB(NULL))))) IS TRUE)  as count FROM t82, t0 ORDER BY (- (((t0.c1) IS TRUE)))  NULLS FIRST, json_object(CASE t0.c63  WHEN t0.c63 THEN t0.c0 WHEN t0.c63 THEN t0.c2 WHEN t82.c0 THEN t82.c0 ELSE t82.c1 END, ((t0.c63)LIKE(t82.c1)), ((t82.c1) IS TRUE), (((t0.c1))<((t82.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE (- (x''))  WHEN ((vt0.c0) IS TRUE) THEN CAST(t82.c0 AS BLOB) WHEN ((0.7705001777577648)%(t0.c0)) THEN (+ (t82.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((t82.c1))<((t0.c0))) END FULL OUTER JOIN t82 ON ((((t0.c2) IS TRUE)) BETWEEN (t82.c2 COLLATE NOCASE) AND (((t82.c0)<<('-1787294571')))) WHERE (CASE t0.c1  WHEN t0.c0 THEN vt0.c0 ELSE t82.c1 END COLLATE NOCASE) ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN t0.c0 THEN vt0.c0 ELSE t82.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE (- (x''))  WHEN ((vt0.c0) IS TRUE) THEN CAST(t82.c0 AS BLOB) WHEN ((0.7705001777577648)%(t0.c0)) THEN (+ (t82.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((t82.c1))<((t0.c0))) END FULL OUTER JOIN t82 ON ((((t0.c2) IS TRUE)) BETWEEN (t82.c2 COLLATE NOCASE) AND (((t82.c0)<<('-1787294571')))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE (- (x''))  WHEN ((vt0.c0) IS TRUE) THEN CAST(t82.c0 AS BLOB) WHEN ((0.7705001777577648)%(t0.c0)) THEN (+ (t82.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((t82.c1))<((t0.c0))) END FULL OUTER JOIN t82 ON ((((t0.c2) IS TRUE)) BETWEEN (t82.c2 COLLATE NOCASE) AND (((t82.c0)<<('-1787294571')))) WHERE (CASE t0.c1  WHEN t0.c0 THEN vt0.c0 ELSE t82.c1 END COLLATE NOCASE) ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN t0.c0 THEN vt0.c0 ELSE t82.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE (- (x''))  WHEN ((vt0.c0) IS TRUE) THEN CAST(t82.c0 AS BLOB) WHEN ((0.7705001777577648)%(t0.c0)) THEN (+ (t82.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((t82.c1))<((t0.c0))) END FULL OUTER JOIN t82 ON ((((t0.c2) IS TRUE)) BETWEEN (t82.c2 COLLATE NOCASE) AND (((t82.c0)<<('-1787294571')))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST);
SELECT * FROM t0, t82 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM t82, vt0, t0 WHERE (((((t82.c2)%(t82.c2)))|((NOT (t0.c0))))) ORDER BY (~ ('-527776941'))  NULLS FIRST, MIN(CAST(t0.c1 AS NUMERIC), ((vt0.c0) ISNULL), CASE t0.c63  WHEN vt0.c0 THEN NULL WHEN t82.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 END, 1885370711, ((((t0.c63)AND(t0.c63)))OR('KBtm%')), ((t0.c0)=(t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t82.c2)%(t82.c2)))|((NOT (t0.c0))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (~ ('-527776941'))  NULLS FIRST, MIN(CAST(t0.c1 AS NUMERIC), ((vt0.c0) ISNULL), CASE t0.c63  WHEN vt0.c0 THEN NULL WHEN t82.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 END, 1885370711, ((((t0.c63)AND(t0.c63)))OR('KBtm%')), ((t0.c0)=(t0.c2)))  NULLS FIRST);
SELECT ALL * FROM t82, vt0, t0 WHERE (((((t82.c2)%(t82.c2)))|((NOT (t0.c0))))) ORDER BY (~ ('-527776941'))  NULLS FIRST, MIN(CAST(t0.c1 AS NUMERIC), ((vt0.c0) ISNULL), CASE t0.c63  WHEN vt0.c0 THEN NULL WHEN t82.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 END, 1885370711, ((((t0.c63)AND(t0.c63)))OR('KBtm%')), ((t0.c0)=(t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t82.c2)%(t82.c2)))|((NOT (t0.c0))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (~ ('-527776941'))  NULLS FIRST, MIN(CAST(t0.c1 AS NUMERIC), ((vt0.c0) ISNULL), CASE t0.c63  WHEN vt0.c0 THEN NULL WHEN t82.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 END, 1885370711, ((((t0.c63)AND(t0.c63)))OR('KBtm%')), ((t0.c0)=(t0.c2)))  NULLS FIRST);
SELECT ALL * FROM t82, vt0, t0 WHERE (((((t82.c2)%(t82.c2)))|((NOT (t0.c0))))) ORDER BY (~ ('-527776941'))  NULLS FIRST, MIN(CAST(t0.c1 AS NUMERIC), ((vt0.c0) ISNULL), CASE t0.c63  WHEN vt0.c0 THEN NULL WHEN t82.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 END, 1885370711, ((((t0.c63)AND(t0.c63)))OR('KBtm%')), ((t0.c0)=(t0.c2)))  NULLS FIRST;
SELECT * FROM t0 INDEXED BY i48 RIGHT OUTER JOIN t82 ON CASE (((t82.c1))>((t82.c1)))  WHEN CAST(t82.c2 AS TEXT) THEN rtreenode(vt0.c0, vt0.c0) WHEN ((846448738)/(t0.c0)) THEN ((t82.c2) BETWEEN (t0.c2) AND ('-1873174397')) WHEN ((t0.c0)GLOB(t82.c2)) THEN CASE t82.c1  WHEN t0.c1 THEN t82.c2 WHEN vt0.c0 THEN '-325905849' WHEN vt0.c0 THEN NULL ELSE t82.c2 END ELSE (((t82.c1))<=((vt0.c0))) END INNER JOIN vt0 ON (~ (((t82.c0)>>(t0.c2)))) WHERE (t0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0 INDEXED BY i48 RIGHT OUTER JOIN t82 ON CASE (((t82.c1))>((t82.c1)))  WHEN CAST(t82.c2 AS TEXT) THEN rtreenode(vt0.c0, vt0.c0) WHEN ((846448738)/(t0.c0)) THEN ((t82.c2) BETWEEN (t0.c2) AND ('-1873174397')) WHEN ((t0.c0)GLOB(t82.c2)) THEN CASE t82.c1  WHEN t0.c1 THEN t82.c2 WHEN vt0.c0 THEN '-325905849' WHEN vt0.c0 THEN NULL ELSE t82.c2 END ELSE (((t82.c1))<=((vt0.c0))) END INNER JOIN vt0 ON (~ (((t82.c0)>>(t0.c2)))));
SELECT * FROM t0 INDEXED BY i48 RIGHT OUTER JOIN t82 ON CASE (((t82.c1))>((t82.c1)))  WHEN CAST(t82.c2 AS TEXT) THEN rtreenode(vt0.c0, vt0.c0) WHEN ((846448738)/(t0.c0)) THEN ((t82.c2) BETWEEN (t0.c2) AND ('-1873174397')) WHEN ((t0.c0)GLOB(t82.c2)) THEN CASE t82.c1  WHEN t0.c1 THEN t82.c2 WHEN vt0.c0 THEN '-325905849' WHEN vt0.c0 THEN NULL ELSE t82.c2 END ELSE (((t82.c1))<=((vt0.c0))) END INNER JOIN vt0 ON (~ (((t82.c0)>>(t0.c2)))) WHERE (t0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0 INDEXED BY i48 RIGHT OUTER JOIN t82 ON CASE (((t82.c1))>((t82.c1)))  WHEN CAST(t82.c2 AS TEXT) THEN rtreenode(vt0.c0, vt0.c0) WHEN ((846448738)/(t0.c0)) THEN ((t82.c2) BETWEEN (t0.c2) AND ('-1873174397')) WHEN ((t0.c0)GLOB(t82.c2)) THEN CASE t82.c1  WHEN t0.c1 THEN t82.c2 WHEN vt0.c0 THEN '-325905849' WHEN vt0.c0 THEN NULL ELSE t82.c2 END ELSE (((t82.c1))<=((vt0.c0))) END INNER JOIN vt0 ON (~ (((t82.c0)>>(t0.c2)))));
SELECT ALL COUNT(*) FROM t82 CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) IS FALSE) WHERE ((((((t82.c1)+(t82.c1))))!=((((t82.c1) BETWEEN (vt0.c0) AND (t82.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1)+(t82.c1))))!=((((t82.c1) BETWEEN (vt0.c0) AND (t82.c1)))))) IS TRUE)  as count FROM t82 CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM t82 CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) IS FALSE) WHERE ((((((t82.c1)+(t82.c1))))!=((((t82.c1) BETWEEN (vt0.c0) AND (t82.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1)+(t82.c1))))!=((((t82.c1) BETWEEN (vt0.c0) AND (t82.c1)))))) IS TRUE)  as count FROM t82 CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM t82 CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) IS FALSE) WHERE ((((((t82.c1)+(t82.c1))))!=((((t82.c1) BETWEEN (vt0.c0) AND (t82.c1))))));
SELECT ALL COUNT(*) FROM t0 WHERE (highlight(((t0.c63) NOT NULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c63)), ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)), ((t0.c63)&(t0.c0)))) ORDER BY ((((((t0.c0)AND(NULL)))AND(t0.c2)))>=((~ ('1619504165'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((t0.c63) NOT NULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c63)), ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)), ((t0.c63)&(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(NULL)))AND(t0.c2)))>=((~ ('1619504165'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (highlight(((t0.c63) NOT NULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c63)), ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)), ((t0.c63)&(t0.c0)))) ORDER BY ((((((t0.c0)AND(NULL)))AND(t0.c2)))>=((~ ('1619504165'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((t0.c63) NOT NULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c63)), ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)), ((t0.c63)&(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(NULL)))AND(t0.c2)))>=((~ ('1619504165'))))  NULLS FIRST);
SELECT * FROM vt0, t82 WHERE (((((((((0.2795014843906719)AND(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c0)))))OR(((t82.c1)*('879016122')))))OR(7.26370667E8)))OR(((t82.c0)==(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.2795014843906719)AND(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c0)))))OR(((t82.c1)*('879016122')))))OR(7.26370667E8)))OR(((t82.c0)==(t82.c0))))) IS TRUE)  as count FROM vt0, t82 NOT INDEXED);
SELECT * FROM vt0, t82 WHERE (((((((((0.2795014843906719)AND(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c0)))))OR(((t82.c1)*('879016122')))))OR(7.26370667E8)))OR(((t82.c0)==(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.2795014843906719)AND(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c0)))))OR(((t82.c1)*('879016122')))))OR(7.26370667E8)))OR(((t82.c0)==(t82.c0))))) IS TRUE)  as count FROM vt0, t82 NOT INDEXED);
SELECT * FROM vt0, t82 WHERE (((((((((0.2795014843906719)AND(((vt0.c0) BETWEEN (vt0.c0) AND (t82.c0)))))OR(((t82.c1)*('879016122')))))OR(7.26370667E8)))OR(((t82.c0)==(t82.c0)))));
SELECT ALL * FROM t82, t0, vt0 WHERE ((((t82.c2)) BETWEEN ((((0.30618222607746937)||(t0.c63)))) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY (((t0.c63, 940678906, t82.c0, t82.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c2) AND ('e''9O)Y')), (((t0.c1)) BETWEEN ((t82.c2)) AND ((t82.c1))), CAST(vt0.c0 AS TEXT), (t82.c2 IN (t0.c0)), ((t82.c0) IS TRUE))) AND ((t0.c63, SQLITE_COMPILEOPTION_GET(vt0.c0), (t82.c0 IN ()), CAST(x'4c06' AS TEXT), CAST(vt0.c0 AS NUMERIC)))), ((((((t0.c0)AND(t82.c1)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(t0.c0)))AND(t0.c1))) AND (((t0.c63)/(t82.c1)))) DESC, (((((t0.c1))<((t82.c1)))) BETWEEN (x'') AND (((t0.c2)|(x'')))) ASC;
SELECT SUM(count) FROM (SELECT (((((t82.c2)) BETWEEN ((((0.30618222607746937)||(t0.c63)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY (((t0.c63, 940678906, t82.c0, t82.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c2) AND ('e''9O)Y')), (((t0.c1)) BETWEEN ((t82.c2)) AND ((t82.c1))), CAST(vt0.c0 AS TEXT), (t82.c2 IN (t0.c0)), ((t82.c0) IS TRUE))) AND ((t0.c63, SQLITE_COMPILEOPTION_GET(vt0.c0), (t82.c0 IN ()), CAST(x'4c06' AS TEXT), CAST(vt0.c0 AS NUMERIC)))), ((((((t0.c0)AND(t82.c1)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(t0.c0)))AND(t0.c1))) AND (((t0.c63)/(t82.c1)))) DESC, (((((t0.c1))<((t82.c1)))) BETWEEN (x'') AND (((t0.c2)|(x'')))) ASC);
SELECT ALL * FROM t82, t0, vt0 WHERE ((((t82.c2)) BETWEEN ((((0.30618222607746937)||(t0.c63)))) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY (((t0.c63, 940678906, t82.c0, t82.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c2) AND ('e''9O)Y')), (((t0.c1)) BETWEEN ((t82.c2)) AND ((t82.c1))), CAST(vt0.c0 AS TEXT), (t82.c2 IN (t0.c0)), ((t82.c0) IS TRUE))) AND ((t0.c63, SQLITE_COMPILEOPTION_GET(vt0.c0), (t82.c0 IN ()), CAST(x'4c06' AS TEXT), CAST(vt0.c0 AS NUMERIC)))), ((((((t0.c0)AND(t82.c1)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(t0.c0)))AND(t0.c1))) AND (((t0.c63)/(t82.c1)))) DESC, (((((t0.c1))<((t82.c1)))) BETWEEN (x'') AND (((t0.c2)|(x'')))) ASC;
SELECT SUM(count) FROM (SELECT (((((t82.c2)) BETWEEN ((((0.30618222607746937)||(t0.c63)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY (((t0.c63, 940678906, t82.c0, t82.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c2) AND ('e''9O)Y')), (((t0.c1)) BETWEEN ((t82.c2)) AND ((t82.c1))), CAST(vt0.c0 AS TEXT), (t82.c2 IN (t0.c0)), ((t82.c0) IS TRUE))) AND ((t0.c63, SQLITE_COMPILEOPTION_GET(vt0.c0), (t82.c0 IN ()), CAST(x'4c06' AS TEXT), CAST(vt0.c0 AS NUMERIC)))), ((((((t0.c0)AND(t82.c1)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(t0.c0)))AND(t0.c1))) AND (((t0.c63)/(t82.c1)))) DESC, (((((t0.c1))<((t82.c1)))) BETWEEN (x'') AND (((t0.c2)|(x'')))) ASC);
SELECT ALL * FROM t82, t0, vt0 WHERE ((((t82.c2)) BETWEEN ((((0.30618222607746937)||(t0.c63)))) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY (((t0.c63, 940678906, t82.c0, t82.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c2) AND ('e''9O)Y')), (((t0.c1)) BETWEEN ((t82.c2)) AND ((t82.c1))), CAST(vt0.c0 AS TEXT), (t82.c2 IN (t0.c0)), ((t82.c0) IS TRUE))) AND ((t0.c63, SQLITE_COMPILEOPTION_GET(vt0.c0), (t82.c0 IN ()), CAST(x'4c06' AS TEXT), CAST(vt0.c0 AS NUMERIC)))), ((((((t0.c0)AND(t82.c1)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(t0.c0)))AND(t0.c1))) AND (((t0.c63)/(t82.c1)))) DESC, (((((t0.c1))<((t82.c1)))) BETWEEN (x'') AND (((t0.c2)|(x'')))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))>>(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0)))>>(x''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))>>(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0)))>>(x''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))>>(x'')));
SELECT ALL COUNT(*) FROM t0, t82 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE (x'');
SELECT COUNT(*) FROM t82 WHERE ((((0xffffffffcae89506)) NOT BETWEEN ((t82.c0)) AND ((t82.c2))) COLLATE BINARY) ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0xffffffffcae89506)) NOT BETWEEN ((t82.c0)) AND ((t82.c2))) COLLATE BINARY) IS TRUE)  as count FROM t82 ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t82 WHERE ((((0xffffffffcae89506)) NOT BETWEEN ((t82.c0)) AND ((t82.c2))) COLLATE BINARY) ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0xffffffffcae89506)) NOT BETWEEN ((t82.c0)) AND ((t82.c2))) COLLATE BINARY) IS TRUE)  as count FROM t82 ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t82 WHERE ((((0xffffffffcae89506)) NOT BETWEEN ((t82.c0)) AND ((t82.c2))) COLLATE BINARY) ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t82 WHERE (IFNULL(DISTINCT ((((t82.c0)AND(t82.c0)))AND(t82.c0)), (t82.c0 IN (t82.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((t82.c0)AND(t82.c0)))AND(t82.c0)), (t82.c0 IN (t82.c0)))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (IFNULL(DISTINCT ((((t82.c0)AND(t82.c0)))AND(t82.c0)), (t82.c0 IN (t82.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((t82.c0)AND(t82.c0)))AND(t82.c0)), (t82.c0 IN (t82.c0)))) IS TRUE)  as count FROM t82);
SELECT * FROM t82 WHERE (IFNULL(DISTINCT ((((t82.c0)AND(t82.c0)))AND(t82.c0)), (t82.c0 IN (t82.c0))));
SELECT ALL COUNT(*) FROM t82 WHERE (ROUND(((t82.c0)IS NOT(t82.c2)), CASE WHEN t82.c0 THEN t82.c1 WHEN t82.c1 THEN t82.c2 WHEN t82.c2 THEN t82.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((t82.c0)IS NOT(t82.c2)), CASE WHEN t82.c0 THEN t82.c1 WHEN t82.c1 THEN t82.c2 WHEN t82.c2 THEN t82.c0 END)) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE (ROUND(((t82.c0)IS NOT(t82.c2)), CASE WHEN t82.c0 THEN t82.c1 WHEN t82.c1 THEN t82.c2 WHEN t82.c2 THEN t82.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((t82.c0)IS NOT(t82.c2)), CASE WHEN t82.c0 THEN t82.c1 WHEN t82.c1 THEN t82.c2 WHEN t82.c2 THEN t82.c0 END)) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE (ROUND(((t82.c0)IS NOT(t82.c2)), CASE WHEN t82.c0 THEN t82.c1 WHEN t82.c1 THEN t82.c2 WHEN t82.c2 THEN t82.c0 END));
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (CASE (t0.c63 IN ())  WHEN NULL THEN CHAR(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c63 IN ())  WHEN NULL THEN CHAR(vt0.c0) END) IS TRUE)  as count FROM t82, vt0, t0);
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (CASE (t0.c63 IN ())  WHEN NULL THEN CHAR(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c63 IN ())  WHEN NULL THEN CHAR(vt0.c0) END) IS TRUE)  as count FROM t82, vt0, t0);
SELECT ALL COUNT(*) FROM t82, vt0, t0 WHERE (CASE (t0.c63 IN ())  WHEN NULL THEN CHAR(vt0.c0) END);
SELECT * FROM vt0 WHERE ('') ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, ((vt0.c0)/(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, ((vt0.c0)/(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ('') ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, ((vt0.c0)/(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, ((vt0.c0)/(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ('') ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, ((vt0.c0)/(vt0.c0)))) DESC;
SELECT ALL * FROM t82, vt0 WHERE (t82.c2);
SELECT SUM(count) FROM (SELECT ((t82.c2) IS TRUE)  as count FROM t82, vt0);
SELECT ALL * FROM t82, vt0 WHERE (t82.c2);
SELECT SUM(count) FROM (SELECT ((t82.c2) IS TRUE)  as count FROM t82, vt0);
SELECT ALL * FROM t82, vt0 WHERE (t82.c2);
SELECT * FROM t82, vt0 INNER JOIN t0 ON (((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND (('1492658786'))))OR((NOT (x'')))))OR(((t82.c1) NOT BETWEEN (t82.c0) AND (x'')))) WHERE (((((vt0.c0) BETWEEN (t82.c0) AND (t0.c2)))GLOB(CAST(t0.c0 AS REAL)))) ORDER BY ((COALESCE(vt0.c0, x''))+(t0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t82.c0) AND (t0.c2)))GLOB(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t82, vt0 INNER JOIN t0 ON (((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND (('1492658786'))))OR((NOT (x'')))))OR(((t82.c1) NOT BETWEEN (t82.c0) AND (x'')))) ORDER BY ((COALESCE(vt0.c0, x''))+(t0.c1 COLLATE RTRIM)));
SELECT * FROM t82, vt0 INNER JOIN t0 ON (((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND (('1492658786'))))OR((NOT (x'')))))OR(((t82.c1) NOT BETWEEN (t82.c0) AND (x'')))) WHERE (((((vt0.c0) BETWEEN (t82.c0) AND (t0.c2)))GLOB(CAST(t0.c0 AS REAL)))) ORDER BY ((COALESCE(vt0.c0, x''))+(t0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t82.c0) AND (t0.c2)))GLOB(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t82, vt0 INNER JOIN t0 ON (((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND (('1492658786'))))OR((NOT (x'')))))OR(((t82.c1) NOT BETWEEN (t82.c0) AND (x'')))) ORDER BY ((COALESCE(vt0.c0, x''))+(t0.c1 COLLATE RTRIM)));
SELECT * FROM t82, vt0 INNER JOIN t0 ON (((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND (('1492658786'))))OR((NOT (x'')))))OR(((t82.c1) NOT BETWEEN (t82.c0) AND (x'')))) WHERE (((((vt0.c0) BETWEEN (t82.c0) AND (t0.c2)))GLOB(CAST(t0.c0 AS REAL)))) ORDER BY ((COALESCE(vt0.c0, x''))+(t0.c1 COLLATE RTRIM));
SELECT * FROM vt0 INDEXED BY i48, t82, t0 WHERE ('') ORDER BY CASE WHEN ((((NULL)OR(t82.c2)))OR(t0.c0)) THEN CASE t82.c1  WHEN t0.c2 THEN vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 INDEXED BY i48, t82, t0 ORDER BY CASE WHEN ((((NULL)OR(t82.c2)))OR(t0.c0)) THEN CASE t82.c1  WHEN t0.c2 THEN vt0.c0 END END  NULLS FIRST);
SELECT * FROM vt0 INDEXED BY i48, t82, t0 WHERE ('') ORDER BY CASE WHEN ((((NULL)OR(t82.c2)))OR(t0.c0)) THEN CASE t82.c1  WHEN t0.c2 THEN vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 INDEXED BY i48, t82, t0 ORDER BY CASE WHEN ((((NULL)OR(t82.c2)))OR(t0.c0)) THEN CASE t82.c1  WHEN t0.c2 THEN vt0.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ('-1804880000') ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) IS TRUE) DESC  NULLS FIRST, SQLITE_COMPILEOPTION_USED((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0X7fffffffffffffff, vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1804880000') IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) IS TRUE) DESC  NULLS FIRST, SQLITE_COMPILEOPTION_USED((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0X7fffffffffffffff, vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('-1804880000') ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) IS TRUE) DESC  NULLS FIRST, SQLITE_COMPILEOPTION_USED((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0X7fffffffffffffff, vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1804880000') IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) IS TRUE) DESC  NULLS FIRST, SQLITE_COMPILEOPTION_USED((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0X7fffffffffffffff, vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('-1804880000') ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) IS TRUE) DESC  NULLS FIRST, SQLITE_COMPILEOPTION_USED((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0X7fffffffffffffff, vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((('1424092008') NOT BETWEEN (((t0.c63)/(vt0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)==(t82.c2)))<=(x'5fec')), (((t0.c2)IS NOT(t0.c2)) IN ((t82.c0 IN (t0.c2, t82.c2)), json_quote(t82.c1)));
SELECT SUM(count) FROM (SELECT ALL (((('1424092008') NOT BETWEEN (((t0.c63)/(vt0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY ((((vt0.c0)==(t82.c2)))<=(x'5fec')), (((t0.c2)IS NOT(t0.c2)) IN ((t82.c0 IN (t0.c2, t82.c2)), json_quote(t82.c1))));
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((('1424092008') NOT BETWEEN (((t0.c63)/(vt0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)==(t82.c2)))<=(x'5fec')), (((t0.c2)IS NOT(t0.c2)) IN ((t82.c0 IN (t0.c2, t82.c2)), json_quote(t82.c1)));
SELECT SUM(count) FROM (SELECT ALL (((('1424092008') NOT BETWEEN (((t0.c63)/(vt0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY ((((vt0.c0)==(t82.c2)))<=(x'5fec')), (((t0.c2)IS NOT(t0.c2)) IN ((t82.c0 IN (t0.c2, t82.c2)), json_quote(t82.c1))));
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((('1424092008') NOT BETWEEN (((t0.c63)/(vt0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)==(t82.c2)))<=(x'5fec')), (((t0.c2)IS NOT(t0.c2)) IN ((t82.c0 IN (t0.c2, t82.c2)), json_quote(t82.c1)));
SELECT ALL * FROM t82 FULL OUTER JOIN t0 ON x'' WHERE (LIKELY(DISTINCT t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT t0.c2)) IS TRUE)  as count FROM t82 FULL OUTER JOIN t0 ON x'');
SELECT ALL * FROM t82 FULL OUTER JOIN t0 ON x'' WHERE (LIKELY(DISTINCT t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT t0.c2)) IS TRUE)  as count FROM t82 FULL OUTER JOIN t0 ON x'');
SELECT ALL * FROM t82 FULL OUTER JOIN t0 ON x'' WHERE (LIKELY(DISTINCT t0.c2));
SELECT * FROM t82, vt0 WHERE (((((vt0.c0)AND((vt0.c0 IN (t82.c0, t82.c1)))))OR(((((((((vt0.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c1)))OR(t82.c2))))) ORDER BY ((x'')GLOB(HEX(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((vt0.c0 IN (t82.c0, t82.c1)))))OR(((((((((vt0.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c1)))OR(t82.c2))))) IS TRUE)  as count FROM t82, vt0 ORDER BY ((x'')GLOB(HEX(DISTINCT vt0.c0))) DESC);
SELECT * FROM t82, vt0 WHERE (((((vt0.c0)AND((vt0.c0 IN (t82.c0, t82.c1)))))OR(((((((((vt0.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c1)))OR(t82.c2))))) ORDER BY ((x'')GLOB(HEX(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((vt0.c0 IN (t82.c0, t82.c1)))))OR(((((((((vt0.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c1)))OR(t82.c2))))) IS TRUE)  as count FROM t82, vt0 ORDER BY ((x'')GLOB(HEX(DISTINCT vt0.c0))) DESC);
SELECT * FROM t82, vt0 WHERE (((((vt0.c0)AND((vt0.c0 IN (t82.c0, t82.c1)))))OR(((((((((vt0.c0)OR(t82.c2)))OR(t82.c2)))OR(t82.c1)))OR(t82.c2))))) ORDER BY ((x'')GLOB(HEX(DISTINCT vt0.c0))) DESC;
SELECT ALL * FROM t82 RIGHT OUTER JOIN vt0 ON CASE WHEN t82.c1 COLLATE BINARY THEN ((((((((((((0Xffffffffd2ab81fa)AND(t0.c2)))AND('1958895901')))AND(t82.c2)))AND(t82.c2)))AND(t0.c0)))AND('p89f\r')) END LEFT OUTER JOIN t0 ON ('-662996267' IN ()) WHERE (((UNICODE(t82.c0))IS(((t0.c63) NOT BETWEEN (t82.c1) AND (t0.c0))))) ORDER BY (~ ((+ (t82.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(t82.c0))IS(((t0.c63) NOT BETWEEN (t82.c1) AND (t0.c0))))) IS TRUE)  as count FROM t82 RIGHT OUTER JOIN vt0 ON CASE WHEN t82.c1 COLLATE BINARY THEN ((((((((((((0xffffffffd2ab81fa)AND(t0.c2)))AND('1958895901')))AND(t82.c2)))AND(t82.c2)))AND(t0.c0)))AND('p89f\r')) END LEFT OUTER JOIN t0 ON ('-662996267' IN ()) ORDER BY (~ ((+ (t82.c0))))  NULLS FIRST);
SELECT ALL * FROM t82 RIGHT OUTER JOIN vt0 ON CASE WHEN t82.c1 COLLATE BINARY THEN ((((((((((((0Xffffffffd2ab81fa)AND(t0.c2)))AND('1958895901')))AND(t82.c2)))AND(t82.c2)))AND(t0.c0)))AND('p89f\r')) END LEFT OUTER JOIN t0 ON ('-662996267' IN ()) WHERE (((UNICODE(t82.c0))IS(((t0.c63) NOT BETWEEN (t82.c1) AND (t0.c0))))) ORDER BY (~ ((+ (t82.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(t82.c0))IS(((t0.c63) NOT BETWEEN (t82.c1) AND (t0.c0))))) IS TRUE)  as count FROM t82 RIGHT OUTER JOIN vt0 ON CASE WHEN t82.c1 COLLATE BINARY THEN ((((((((((((0xffffffffd2ab81fa)AND(t0.c2)))AND('1958895901')))AND(t82.c2)))AND(t82.c2)))AND(t0.c0)))AND('p89f\r')) END LEFT OUTER JOIN t0 ON ('-662996267' IN ()) ORDER BY (~ ((+ (t82.c0))))  NULLS FIRST);
SELECT ALL * FROM t82 WHERE (CASE (+ (t82.c2))  WHEN t82.c1 THEN (NOT (t82.c0)) ELSE ((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (t82.c2))  WHEN t82.c1 THEN (NOT (t82.c0)) ELSE ((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)) END) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE (CASE (+ (t82.c2))  WHEN t82.c1 THEN (NOT (t82.c0)) ELSE ((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (t82.c2))  WHEN t82.c1 THEN (NOT (t82.c0)) ELSE ((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)) END) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE (CASE (+ (t82.c2))  WHEN t82.c1 THEN (NOT (t82.c0)) ELSE ((t82.c0) NOT BETWEEN (t82.c1) AND (t82.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t82 WHERE (((((t82.c1) BETWEEN (t82.c2) AND (t82.c0)))>>(((t82.c1)=(t82.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t82.c1) BETWEEN (t82.c2) AND (t82.c0)))>>(((t82.c1)=(t82.c2))))) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (((((t82.c1) BETWEEN (t82.c2) AND (t82.c0)))>>(((t82.c1)=(t82.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t82.c1) BETWEEN (t82.c2) AND (t82.c0)))>>(((t82.c1)=(t82.c2))))) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (((((t82.c1) BETWEEN (t82.c2) AND (t82.c0)))>>(((t82.c1)=(t82.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((rtreenode(t0.c1, 0xffffffff92b68f6e))AND((((vt0.c0))<=((t0.c63))))))OR(((((t0.c2)OR(t0.c2)))OR(t0.c63)))))AND('?揞LgwE\nUY')))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((t0.c0 COLLATE BINARY)|(t0.c63 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rtreenode(t0.c1, 0Xffffffff92b68f6e))AND((((vt0.c0))<=((t0.c63))))))OR(((((t0.c2)OR(t0.c2)))OR(t0.c63)))))AND('?揞LgwE\nUY')))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0 COLLATE BINARY)|(t0.c63 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((rtreenode(t0.c1, 0xffffffff92b68f6e))AND((((vt0.c0))<=((t0.c63))))))OR(((((t0.c2)OR(t0.c2)))OR(t0.c63)))))AND('?揞LgwE\nUY')))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((t0.c0 COLLATE BINARY)|(t0.c63 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rtreenode(t0.c1, 0Xffffffff92b68f6e))AND((((vt0.c0))<=((t0.c63))))))OR(((((t0.c2)OR(t0.c2)))OR(t0.c63)))))AND('?揞LgwE\nUY')))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0 COLLATE BINARY)|(t0.c63 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((rtreenode(t0.c1, 0xffffffff92b68f6e))AND((((vt0.c0))<=((t0.c63))))))OR(((((t0.c2)OR(t0.c2)))OR(t0.c63)))))AND('?揞LgwE\nUY')))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((t0.c0 COLLATE BINARY)|(t0.c63 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t0 WHERE (0Xffffffffad98ce89);
SELECT SUM(count) FROM (SELECT ((0xffffffffad98ce89) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0Xffffffffad98ce89);
SELECT SUM(count) FROM (SELECT ((0xffffffffad98ce89) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0Xffffffffad98ce89);
SELECT ALL * FROM vt0, t82, t0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (~ (((t0.c63)<=(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (~ (((t0.c63)<=(t0.c2)))));
SELECT ALL * FROM vt0, t82, t0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (~ (((t0.c63)<=(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (~ (((t0.c63)<=(t0.c2)))));
SELECT ALL * FROM vt0, t82, t0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (~ (((t0.c63)<=(t0.c2))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(t0.c63)))LIKE(((((((((((((t0.c2)OR(x'')))AND(vt0.c0)))OR(t0.c63)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))) WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(t0.c63)))LIKE(((((((((((((t0.c2)OR(x'')))AND(vt0.c0)))OR(t0.c63)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(t0.c63)))LIKE(((((((((((((t0.c2)OR(x'')))AND(vt0.c0)))OR(t0.c63)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))) WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(t0.c63)))LIKE(((((((((((((t0.c2)OR(x'')))AND(vt0.c0)))OR(t0.c63)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(t0.c63)))LIKE(((((((((((((t0.c2)OR(x'')))AND(vt0.c0)))OR(t0.c63)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))) WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT * FROM vt0, t82, t0 WHERE ('-1846092961');
SELECT SUM(count) FROM (SELECT (('-1846092961') IS TRUE)  as count FROM vt0, t82, t0);
SELECT * FROM vt0, t82, t0 WHERE ('-1846092961');
SELECT SUM(count) FROM (SELECT (('-1846092961') IS TRUE)  as count FROM vt0, t82, t0);
SELECT * FROM vt0, t82, t0 WHERE ('-1846092961');
SELECT ALL * FROM t0, t82 WHERE ((((((t82.c1)AND(x'')))AND(t0.c2)) IN ())) ORDER BY ((((((((((t82.c1)AND(t82.c1)))OR(t82.c1)))AND(t0.c63)))AND(t0.c0))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((t82.c0 IN (t0.c2, x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c1)AND(x'')))AND(t0.c2)) IN ())) IS TRUE)  as count FROM t0, t82 ORDER BY ((((((((((t82.c1)AND(t82.c1)))OR(t82.c1)))AND(t0.c63)))AND(t0.c0))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((t82.c0 IN (t0.c2, x''))))  NULLS LAST);
SELECT ALL * FROM t0, t82 WHERE ((((((t82.c1)AND(x'')))AND(t0.c2)) IN ())) ORDER BY ((((((((((t82.c1)AND(t82.c1)))OR(t82.c1)))AND(t0.c63)))AND(t0.c0))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((t82.c0 IN (t0.c2, x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t82.c1)AND(x'')))AND(t0.c2)) IN ())) IS TRUE)  as count FROM t0, t82 ORDER BY ((((((((((t82.c1)AND(t82.c1)))OR(t82.c1)))AND(t0.c63)))AND(t0.c0))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((t82.c0 IN (t0.c2, x''))))  NULLS LAST);
SELECT ALL * FROM t0, t82 WHERE ((((((t82.c1)AND(x'')))AND(t0.c2)) IN ())) ORDER BY ((((((((((t82.c1)AND(t82.c1)))OR(t82.c1)))AND(t0.c63)))AND(t0.c0))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((t82.c0 IN (t0.c2, x''))))  NULLS LAST;
SELECT ALL * FROM t82, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((t82.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t82.c0, t0.c63)) AND ((t0.c2, t0.c0, t82.c1))) THEN t0.c2 COLLATE NOCASE END WHERE (((((t0.c0)/(t82.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(t82.c2))) NOTNULL)) IS TRUE)  as count FROM t82, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((t82.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t82.c0, t0.c63)) AND ((t0.c2, t0.c0, t82.c1))) THEN t0.c2 COLLATE NOCASE END);
SELECT ALL * FROM t82, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((t82.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t82.c0, t0.c63)) AND ((t0.c2, t0.c0, t82.c1))) THEN t0.c2 COLLATE NOCASE END WHERE (((((t0.c0)/(t82.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(t82.c2))) NOTNULL)) IS TRUE)  as count FROM t82, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((t82.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t82.c0, t0.c63)) AND ((t0.c2, t0.c0, t82.c1))) THEN t0.c2 COLLATE NOCASE END);
SELECT ALL * FROM t82, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((t82.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t82.c0, t0.c63)) AND ((t0.c2, t0.c0, t82.c1))) THEN t0.c2 COLLATE NOCASE END WHERE (((((t0.c0)/(t82.c2))) NOTNULL));
SELECT * FROM t0 WHERE ('-54117247') ORDER BY (- ((t0.c2 IN (t0.c1)))), UPPER('-840481057') DESC, (~ ((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-54117247') IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c2 IN (t0.c1)))), UPPER('-840481057') DESC, (~ ((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c2)))))  NULLS LAST);
SELECT * FROM t0 WHERE ('-54117247') ORDER BY (- ((t0.c2 IN (t0.c1)))), UPPER('-840481057') DESC, (~ ((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-54117247') IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c2 IN (t0.c1)))), UPPER('-840481057') DESC, (~ ((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c2)))))  NULLS LAST);
SELECT * FROM t0 WHERE ('-54117247') ORDER BY (- ((t0.c2 IN (t0.c1)))), UPPER('-840481057') DESC, (~ ((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t82 WHERE (((((t82.c2))<=((t82.c2))) IN ())) ORDER BY ((((t82.c1)=(t82.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((t82.c2))<=((t82.c2))) IN ())) IS TRUE)  as count FROM t82 ORDER BY ((((t82.c1)=(t82.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t82 WHERE (((((t82.c2))<=((t82.c2))) IN ())) ORDER BY ((((t82.c1)=(t82.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((t82.c2))<=((t82.c2))) IN ())) IS TRUE)  as count FROM t82 ORDER BY ((((t82.c1)=(t82.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t82 WHERE (((((t82.c2))<=((t82.c2))) IN ())) ORDER BY ((((t82.c1)=(t82.c0))) NOT NULL) DESC;
SELECT ALL * FROM t0, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT * FROM t82, vt0 WHERE (json_insert(x'', vt0.c0, ((vt0.c0) BETWEEN (t82.c2) AND (t82.c0)))) ORDER BY (((((vt0.c0 IN ()))OR(((t82.c0)>(t82.c0)))))OR(vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_insert(x'', vt0.c0, ((vt0.c0) BETWEEN (t82.c2) AND (t82.c0)))) IS TRUE)  as count FROM t82, vt0 ORDER BY (((((vt0.c0 IN ()))OR(((t82.c0)>(t82.c0)))))OR(vt0.c0)));
SELECT * FROM t82, vt0 WHERE (json_insert(x'', vt0.c0, ((vt0.c0) BETWEEN (t82.c2) AND (t82.c0)))) ORDER BY (((((vt0.c0 IN ()))OR(((t82.c0)>(t82.c0)))))OR(vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_insert(x'', vt0.c0, ((vt0.c0) BETWEEN (t82.c2) AND (t82.c0)))) IS TRUE)  as count FROM t82, vt0 ORDER BY (((((vt0.c0 IN ()))OR(((t82.c0)>(t82.c0)))))OR(vt0.c0)));
SELECT * FROM t82, vt0 WHERE (json_insert(x'', vt0.c0, ((vt0.c0) BETWEEN (t82.c2) AND (t82.c0)))) ORDER BY (((((vt0.c0 IN ()))OR(((t82.c0)>(t82.c0)))))OR(vt0.c0));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() INNER JOIN t82 ON ((((CAST(t0.c1 AS NUMERIC))OR(t0.c1)))OR((0.29298621557127325 IN ()))) WHERE ((LENGTH(t0.c0) IN ())) ORDER BY (((t82.c0, t82.c2, t82.c1)) NOT BETWEEN ((((t82.c1)!=(t82.c0)), x'b42e7951', ((t0.c63)&(t82.c0)))) AND ((((t82.c0)>>(t82.c0)), CAST(vt0.c0 AS INTEGER), ((t82.c2) NOT BETWEEN (t0.c63) AND (t0.c1))))) ASC, CAST(t82.c0 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LENGTH(t0.c0) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() INNER JOIN t82 ON ((((CAST(t0.c1 AS NUMERIC))OR(t0.c1)))OR((0.29298621557127325 IN ()))) ORDER BY (((t82.c0, t82.c2, t82.c1)) NOT BETWEEN ((((t82.c1)!=(t82.c0)), x'b42e7951', ((t0.c63)&(t82.c0)))) AND ((((t82.c0)>>(t82.c0)), CAST(vt0.c0 AS INTEGER), ((t82.c2) NOT BETWEEN (t0.c63) AND (t0.c1))))) ASC, CAST(t82.c0 AS BLOB) ASC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() INNER JOIN t82 ON ((((CAST(t0.c1 AS NUMERIC))OR(t0.c1)))OR((0.29298621557127325 IN ()))) WHERE ((LENGTH(t0.c0) IN ())) ORDER BY (((t82.c0, t82.c2, t82.c1)) NOT BETWEEN ((((t82.c1)!=(t82.c0)), x'b42e7951', ((t0.c63)&(t82.c0)))) AND ((((t82.c0)>>(t82.c0)), CAST(vt0.c0 AS INTEGER), ((t82.c2) NOT BETWEEN (t0.c63) AND (t0.c1))))) ASC, CAST(t82.c0 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LENGTH(t0.c0) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() INNER JOIN t82 ON ((((CAST(t0.c1 AS NUMERIC))OR(t0.c1)))OR((0.29298621557127325 IN ()))) ORDER BY (((t82.c0, t82.c2, t82.c1)) NOT BETWEEN ((((t82.c1)!=(t82.c0)), x'b42e7951', ((t0.c63)&(t82.c0)))) AND ((((t82.c0)>>(t82.c0)), CAST(vt0.c0 AS INTEGER), ((t82.c2) NOT BETWEEN (t0.c63) AND (t0.c1))))) ASC, CAST(t82.c0 AS BLOB) ASC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() INNER JOIN t82 ON ((((CAST(t0.c1 AS NUMERIC))OR(t0.c1)))OR((0.29298621557127325 IN ()))) WHERE ((LENGTH(t0.c0) IN ())) ORDER BY (((t82.c0, t82.c2, t82.c1)) NOT BETWEEN ((((t82.c1)!=(t82.c0)), x'b42e7951', ((t0.c63)&(t82.c0)))) AND ((((t82.c0)>>(t82.c0)), CAST(vt0.c0 AS INTEGER), ((t82.c2) NOT BETWEEN (t0.c63) AND (t0.c1))))) ASC, CAST(t82.c0 AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN t82 ON (((((t0.c1)<<(t0.c2)), ((t0.c0) IS FALSE), (~ (NULL))))>=((t82.c0 COLLATE BINARY, 0.6734479023663262, (NULL IN ())))) WHERE (((((t82.c0 IN ())))==((((vt0.c0)!=(vt0.c0)))))) ORDER BY (CAST(t0.c63 AS NUMERIC) IN (((x'')+(t82.c1)), t82.c1 COLLATE NOCASE)), ((((t0.c63) NOT BETWEEN (t0.c0) AND (t82.c0)))IS(json_patch(t0.c63, NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t82.c0 IN ())))=((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN t82 ON (((((t0.c1)<<(t0.c2)), ((t0.c0) IS FALSE), (~ (NULL))))>=((t82.c0 COLLATE BINARY, 0.6734479023663262, (NULL IN ())))) ORDER BY (CAST(t0.c63 AS NUMERIC) IN (((x'')+(t82.c1)), t82.c1 COLLATE NOCASE)), ((((t0.c63) NOT BETWEEN (t0.c0) AND (t82.c0)))IS(json_patch(t0.c63, NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN t82 ON (((((t0.c1)<<(t0.c2)), ((t0.c0) IS FALSE), (~ (NULL))))>=((t82.c0 COLLATE BINARY, 0.6734479023663262, (NULL IN ())))) WHERE (((((t82.c0 IN ())))==((((vt0.c0)!=(vt0.c0)))))) ORDER BY (CAST(t0.c63 AS NUMERIC) IN (((x'')+(t82.c1)), t82.c1 COLLATE NOCASE)), ((((t0.c63) NOT BETWEEN (t0.c0) AND (t82.c0)))IS(json_patch(t0.c63, NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t82.c0 IN ())))=((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN t82 ON (((((t0.c1)<<(t0.c2)), ((t0.c0) IS FALSE), (~ (NULL))))>=((t82.c0 COLLATE BINARY, 0.6734479023663262, (NULL IN ())))) ORDER BY (CAST(t0.c63 AS NUMERIC) IN (((x'')+(t82.c1)), t82.c1 COLLATE NOCASE)), ((((t0.c63) NOT BETWEEN (t0.c0) AND (t82.c0)))IS(json_patch(t0.c63, NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN t82 ON (((((t0.c1)<<(t0.c2)), ((t0.c0) IS FALSE), (~ (NULL))))>=((t82.c0 COLLATE BINARY, 0.6734479023663262, (NULL IN ())))) WHERE (((((t82.c0 IN ())))==((((vt0.c0)!=(vt0.c0)))))) ORDER BY (CAST(t0.c63 AS NUMERIC) IN (((x'')+(t82.c1)), t82.c1 COLLATE NOCASE)), ((((t0.c63) NOT BETWEEN (t0.c0) AND (t82.c0)))IS(json_patch(t0.c63, NULL))) ASC;
SELECT COUNT(*) FROM vt0, t0, t82 WHERE ((((t82.c2)+(t0.c1)) IN ())) ORDER BY ((((x'e1da')OR(vt0.c0)))AND(((t82.c1) BETWEEN (t82.c1) AND (t82.c0)))), ((((t82.c1) BETWEEN (t82.c2) AND (t0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t82.c2)+(t0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY ((((x'e1da')OR(vt0.c0)))AND(((t82.c1) BETWEEN (t82.c1) AND (t82.c0)))), ((((t82.c1) BETWEEN (t82.c2) AND (t0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, t0, t82 WHERE ((((t82.c2)+(t0.c1)) IN ())) ORDER BY ((((x'e1da')OR(vt0.c0)))AND(((t82.c1) BETWEEN (t82.c1) AND (t82.c0)))), ((((t82.c1) BETWEEN (t82.c2) AND (t0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t82.c2)+(t0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY ((((x'e1da')OR(vt0.c0)))AND(((t82.c1) BETWEEN (t82.c1) AND (t82.c0)))), ((((t82.c1) BETWEEN (t82.c2) AND (t0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, t0, t82 WHERE ((((t82.c2)+(t0.c1)) IN ())) ORDER BY ((((x'e1da')OR(vt0.c0)))AND(((t82.c1) BETWEEN (t82.c1) AND (t82.c0)))), ((((t82.c1) BETWEEN (t82.c2) AND (t0.c0))) NOTNULL);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))>(RTRIM('-1610222989')))) ORDER BY ((((((((((((t0.c63)AND(t0.c0)))AND(t0.c1)))AND((+ (t0.c2)))))OR(CAST(t0.c1 AS BLOB))))OR((((t0.c0))=((t0.c63))))))AND(0.19935652914275492)) ASC, CAST((+ (-367091891)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))>(RTRIM('-1610222989')))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((t0.c63)AND(t0.c0)))AND(t0.c1)))AND((+ (t0.c2)))))OR(CAST(t0.c1 AS BLOB))))OR((((t0.c0))==((t0.c63))))))AND(0.19935652914275492)) ASC, CAST((+ (-367091891)) AS BLOB));
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))>(RTRIM('-1610222989')))) ORDER BY ((((((((((((t0.c63)AND(t0.c0)))AND(t0.c1)))AND((+ (t0.c2)))))OR(CAST(t0.c1 AS BLOB))))OR((((t0.c0))=((t0.c63))))))AND(0.19935652914275492)) ASC, CAST((+ (-367091891)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))>(RTRIM('-1610222989')))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((t0.c63)AND(t0.c0)))AND(t0.c1)))AND((+ (t0.c2)))))OR(CAST(t0.c1 AS BLOB))))OR((((t0.c0))==((t0.c63))))))AND(0.19935652914275492)) ASC, CAST((+ (-367091891)) AS BLOB));
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))>(RTRIM('-1610222989')))) ORDER BY ((((((((((((t0.c63)AND(t0.c0)))AND(t0.c1)))AND((+ (t0.c2)))))OR(CAST(t0.c1 AS BLOB))))OR((((t0.c0))=((t0.c63))))))AND(0.19935652914275492)) ASC, CAST((+ (-367091891)) AS BLOB);
SELECT ALL COUNT(*) FROM vt0, t82 INDEXED BY i48, t0 WHERE ((t82.c2 IN (((((((((t82.c1)OR(t82.c1)))AND(t82.c1)))OR(t82.c0)))OR(t82.c0))))) ORDER BY (((t0.c63)AND(t0.c1)) IN ()) ASC  NULLS FIRST, t82.c2 COLLATE RTRIM ASC  NULLS FIRST, ((((t82.c1) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t82.c2 IN (((((((((t82.c1)OR(t82.c1)))AND(t82.c1)))OR(t82.c0)))OR(t82.c0))))) IS TRUE)  as count FROM vt0, t82 INDEXED BY i48, t0 ORDER BY (((t0.c63)AND(t0.c1)) IN ()) ASC  NULLS FIRST, t82.c2 COLLATE RTRIM ASC  NULLS FIRST, ((((t82.c1) IS FALSE)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t82 INDEXED BY i48, t0 WHERE ((t82.c2 IN (((((((((t82.c1)OR(t82.c1)))AND(t82.c1)))OR(t82.c0)))OR(t82.c0))))) ORDER BY (((t0.c63)AND(t0.c1)) IN ()) ASC  NULLS FIRST, t82.c2 COLLATE RTRIM ASC  NULLS FIRST, ((((t82.c1) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t82.c2 IN (((((((((t82.c1)OR(t82.c1)))AND(t82.c1)))OR(t82.c0)))OR(t82.c0))))) IS TRUE)  as count FROM vt0, t82 INDEXED BY i48, t0 ORDER BY (((t0.c63)AND(t0.c1)) IN ()) ASC  NULLS FIRST, t82.c2 COLLATE RTRIM ASC  NULLS FIRST, ((((t82.c1) IS FALSE)) IS FALSE)  NULLS FIRST);
SELECT * FROM t82 FULL OUTER JOIN vt0 ON (((NOT (t82.c2))) NOTNULL) WHERE ((((vt0.c0)) BETWEEN ((((((((((t82.c0)OR(vt0.c0)))AND(t82.c2)))AND(t82.c0)))OR(t82.c1)))) AND ((((NULL) NOT BETWEEN (t82.c1) AND (t82.c0)))))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0)<>(t82.c2)))))OR(((x'f707')IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((((((t82.c0)OR(vt0.c0)))AND(t82.c2)))AND(t82.c0)))OR(t82.c1)))) AND ((((NULL) NOT BETWEEN (t82.c1) AND (t82.c0)))))) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON (((NOT (t82.c2))) NOTNULL) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0)<>(t82.c2)))))OR(((x'f707')IS NOT(vt0.c0)))) DESC);
SELECT * FROM t82 FULL OUTER JOIN vt0 ON (((NOT (t82.c2))) NOTNULL) WHERE ((((vt0.c0)) BETWEEN ((((((((((t82.c0)OR(vt0.c0)))AND(t82.c2)))AND(t82.c0)))OR(t82.c1)))) AND ((((NULL) NOT BETWEEN (t82.c1) AND (t82.c0)))))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0)<>(t82.c2)))))OR(((x'f707')IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((((((t82.c0)OR(vt0.c0)))AND(t82.c2)))AND(t82.c0)))OR(t82.c1)))) AND ((((NULL) NOT BETWEEN (t82.c1) AND (t82.c0)))))) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON (((NOT (t82.c2))) NOTNULL) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0)<>(t82.c2)))))OR(((x'f707')IS NOT(vt0.c0)))) DESC);
SELECT * FROM t82 FULL OUTER JOIN vt0 ON (((NOT (t82.c2))) NOTNULL) WHERE ((((vt0.c0)) BETWEEN ((((((((((t82.c0)OR(vt0.c0)))AND(t82.c2)))AND(t82.c0)))OR(t82.c1)))) AND ((((NULL) NOT BETWEEN (t82.c1) AND (t82.c0)))))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0)<>(t82.c2)))))OR(((x'f707')IS NOT(vt0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c1, t0.c1, t0.c2))>((t0.c2, t0.c63, t0.c63))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c1, t0.c2))>((t0.c2, t0.c63, t0.c63))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1, t0.c1, t0.c2))>((t0.c2, t0.c63, t0.c63))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c1, t0.c2))>((t0.c2, t0.c63, t0.c63))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1, t0.c1, t0.c2))>((t0.c2, t0.c63, t0.c63))) COLLATE BINARY);
SELECT * FROM vt0, t82, t0 WHERE ((((((((t82.c2, t82.c0, t0.c63))!=((NULL, t0.c0, t0.c0))))AND((((t0.c63)) BETWEEN ((t82.c0)) AND ((t82.c1))))))OR(x''))) ORDER BY (((((t0.c0 IN (t82.c0)))OR(t0.c2)))OR(t0.c1));
SELECT SUM(count) FROM (SELECT (((((((((t82.c2, t82.c0, t0.c63))<>((NULL, t0.c0, t0.c0))))AND((((t0.c63)) BETWEEN ((t82.c0)) AND ((t82.c1))))))OR(x''))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (((((t0.c0 IN (t82.c0)))OR(t0.c2)))OR(t0.c1)));
SELECT * FROM vt0, t82, t0 WHERE ((((((((t82.c2, t82.c0, t0.c63))!=((NULL, t0.c0, t0.c0))))AND((((t0.c63)) BETWEEN ((t82.c0)) AND ((t82.c1))))))OR(x''))) ORDER BY (((((t0.c0 IN (t82.c0)))OR(t0.c2)))OR(t0.c1));
SELECT SUM(count) FROM (SELECT (((((((((t82.c2, t82.c0, t0.c63))<>((NULL, t0.c0, t0.c0))))AND((((t0.c63)) BETWEEN ((t82.c0)) AND ((t82.c1))))))OR(x''))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (((((t0.c0 IN (t82.c0)))OR(t0.c2)))OR(t0.c1)));
SELECT * FROM vt0, t82, t0 WHERE ((((((((t82.c2, t82.c0, t0.c63))!=((NULL, t0.c0, t0.c0))))AND((((t0.c63)) BETWEEN ((t82.c0)) AND ((t82.c1))))))OR(x''))) ORDER BY (((((t0.c0 IN (t82.c0)))OR(t0.c2)))OR(t0.c1));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), (vt0.c0 IN ()), (NOT (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xffffffffd802ae6d ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), (vt0.c0 IN ()), (NOT (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffd802ae6d ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), (vt0.c0 IN ()), (NOT (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xffffffffd802ae6d ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), (vt0.c0 IN ()), (NOT (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffd802ae6d ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), (vt0.c0 IN ()), (NOT (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xffffffffd802ae6d ELSE vt0.c0 END))));
SELECT COUNT(*) FROM t0, t82 WHERE ((((NULL IN ()))<((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))<((~ (t0.c0))))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE ((((NULL IN ()))<((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))<((~ (t0.c0))))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE ((((NULL IN ()))<((~ (t0.c0)))));
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT COUNT(*) FROM t0, vt0, t82 WHERE ((+ (NULL)));
SELECT COUNT(*) FROM t0, t82 WHERE ((((((((((+ (t82.c0)))AND(0.9170941611287312)))OR((t0.c1 IN ()))))AND(x'3704')))OR(t82.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t82.c0)))AND(0.9170941611287312)))OR((t0.c1 IN ()))))AND(x'3704')))OR(t82.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE ((((((((((+ (t82.c0)))AND(0.9170941611287312)))OR((t0.c1 IN ()))))AND(x'3704')))OR(t82.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t82.c0)))AND(0.9170941611287312)))OR((t0.c1 IN ()))))AND(x'3704')))OR(t82.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t82);
SELECT COUNT(*) FROM t0, t82 WHERE ((((((((((+ (t82.c0)))AND(0.9170941611287312)))OR((t0.c1 IN ()))))AND(x'3704')))OR(t82.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, t82, vt0 WHERE (CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((t82.c0) BETWEEN (t0.c0) AND (t0.c63)) END) ORDER BY (((t0.c2)||(t0.c63)) IN (CAST(t82.c1 AS REAL), t0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((t82.c0) BETWEEN (t0.c0) AND (t0.c63)) END) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY (((t0.c2)||(t0.c63)) IN (CAST(t82.c1 AS REAL), t0.c1)) DESC);
SELECT ALL COUNT(*) FROM t0, t82, vt0 WHERE (CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((t82.c0) BETWEEN (t0.c0) AND (t0.c63)) END) ORDER BY (((t0.c2)||(t0.c63)) IN (CAST(t82.c1 AS REAL), t0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((t82.c0) BETWEEN (t0.c0) AND (t0.c63)) END) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY (((t0.c2)||(t0.c63)) IN (CAST(t82.c1 AS REAL), t0.c1)) DESC);
SELECT ALL COUNT(*) FROM t0, t82, vt0 WHERE (CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((t82.c0) BETWEEN (t0.c0) AND (t0.c63)) END) ORDER BY (((t0.c2)||(t0.c63)) IN (CAST(t82.c1 AS REAL), t0.c1)) DESC;
SELECT ALL COUNT(*) FROM t82 WHERE (t82.c2);
SELECT SUM(count) FROM (SELECT ALL ((t82.c2) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE (t82.c2);
SELECT SUM(count) FROM (SELECT ALL ((t82.c2) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE (t82.c2);
SELECT ALL * FROM vt0, t0, t82 WHERE (NULL) ORDER BY (((t82.c0)) BETWEEN ((x'')) AND ((CAST(t82.c0 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY (((t82.c0)) BETWEEN ((x'')) AND ((CAST(t82.c0 AS INTEGER)))) DESC);
SELECT ALL * FROM vt0, t0, t82 WHERE (NULL) ORDER BY (((t82.c0)) BETWEEN ((x'')) AND ((CAST(t82.c0 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, t82 ORDER BY (((t82.c0)) BETWEEN ((x'')) AND ((CAST(t82.c0 AS INTEGER)))) DESC);
SELECT ALL * FROM vt0, t0, t82 WHERE (NULL) ORDER BY (((t82.c0)) BETWEEN ((x'')) AND ((CAST(t82.c0 AS INTEGER)))) DESC;
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c63) IS FALSE)) NOTNULL)) ORDER BY ((vt0.c0)>(((t0.c2) IS FALSE))), (((((t0.c63)>(t0.c1))))>((((t0.c1)>(t0.c0))))) DESC  NULLS LAST, LTRIM(HEX(DISTINCT t0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((vt0.c0)>(((t0.c2) IS FALSE))), (((((t0.c63)>(t0.c1))))>((((t0.c1)>(t0.c0))))) DESC  NULLS LAST, LTRIM(HEX(DISTINCT t0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c63) IS FALSE)) NOTNULL)) ORDER BY ((vt0.c0)>(((t0.c2) IS FALSE))), (((((t0.c63)>(t0.c1))))>((((t0.c1)>(t0.c0))))) DESC  NULLS LAST, LTRIM(HEX(DISTINCT t0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((vt0.c0)>(((t0.c2) IS FALSE))), (((((t0.c63)>(t0.c1))))>((((t0.c1)>(t0.c0))))) DESC  NULLS LAST, LTRIM(HEX(DISTINCT t0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c63) IS FALSE)) NOTNULL)) ORDER BY ((vt0.c0)>(((t0.c2) IS FALSE))), (((((t0.c63)>(t0.c1))))>((((t0.c1)>(t0.c0))))) DESC  NULLS LAST, LTRIM(HEX(DISTINCT t0.c2)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST((t0.c63 IN ()) AS NUMERIC)) ORDER BY (((t0.c63, t0.c0, t0.c2, t0.c0, t0.c63)) BETWEEN (((+ (t0.c1)), ((t0.c2)IS NOT(t0.c1)), (t0.c63 IN ()), ((t0.c63) BETWEEN (t0.c2) AND (1828441601)), ((t0.c1) NOTNULL))) AND ((((t0.c2) IS FALSE), (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c0))), t0.c1, ((t0.c1)OR(t0.c1)), ((((((((t0.c1)AND(t0.c0)))AND(t0.c63)))OR(t0.c1)))AND(x'21a7')))));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c63 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63, t0.c0, t0.c2, t0.c0, t0.c63)) BETWEEN (((+ (t0.c1)), ((t0.c2)IS NOT(t0.c1)), (t0.c63 IN ()), ((t0.c63) BETWEEN (t0.c2) AND (1828441601)), ((t0.c1) NOTNULL))) AND ((((t0.c2) IS FALSE), (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c0))), t0.c1, ((t0.c1)OR(t0.c1)), ((((((((t0.c1)AND(t0.c0)))AND(t0.c63)))OR(t0.c1)))AND(x'21a7'))))));
SELECT ALL * FROM t0 WHERE (CAST((t0.c63 IN ()) AS NUMERIC)) ORDER BY (((t0.c63, t0.c0, t0.c2, t0.c0, t0.c63)) BETWEEN (((+ (t0.c1)), ((t0.c2)IS NOT(t0.c1)), (t0.c63 IN ()), ((t0.c63) BETWEEN (t0.c2) AND (1828441601)), ((t0.c1) NOTNULL))) AND ((((t0.c2) IS FALSE), (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c0))), t0.c1, ((t0.c1)OR(t0.c1)), ((((((((t0.c1)AND(t0.c0)))AND(t0.c63)))OR(t0.c1)))AND(x'21a7')))));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c63 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63, t0.c0, t0.c2, t0.c0, t0.c63)) BETWEEN (((+ (t0.c1)), ((t0.c2)IS NOT(t0.c1)), (t0.c63 IN ()), ((t0.c63) BETWEEN (t0.c2) AND (1828441601)), ((t0.c1) NOTNULL))) AND ((((t0.c2) IS FALSE), (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c0))), t0.c1, ((t0.c1)OR(t0.c1)), ((((((((t0.c1)AND(t0.c0)))AND(t0.c63)))OR(t0.c1)))AND(x'21a7'))))));
SELECT ALL * FROM t0 WHERE (CAST((t0.c63 IN ()) AS NUMERIC)) ORDER BY (((t0.c63, t0.c0, t0.c2, t0.c0, t0.c63)) BETWEEN (((+ (t0.c1)), ((t0.c2)IS NOT(t0.c1)), (t0.c63 IN ()), ((t0.c63) BETWEEN (t0.c2) AND (1828441601)), ((t0.c1) NOTNULL))) AND ((((t0.c2) IS FALSE), (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c0))), t0.c1, ((t0.c1)OR(t0.c1)), ((((((((t0.c1)AND(t0.c0)))AND(t0.c63)))OR(t0.c1)))AND(x'21a7')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<((((vt0.c0, vt0.c0, 's8g_m|', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC, CAST(((vt0.c0) NOT NULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<<((((vt0.c0, vt0.c0, 's8g_m|', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC, CAST(((vt0.c0) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<((((vt0.c0, vt0.c0, 's8g_m|', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC, CAST(((vt0.c0) NOT NULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<<((((vt0.c0, vt0.c0, 's8g_m|', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC, CAST(((vt0.c0) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<((((vt0.c0, vt0.c0, 's8g_m|', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC, CAST(((vt0.c0) NOT NULL) AS TEXT);
SELECT * FROM t82, t0 WHERE (CASE WHEN CAST(t0.c63 AS TEXT) THEN (+ (t0.c63)) ELSE -1.16698942E9 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c63 AS TEXT) THEN (+ (t0.c63)) ELSE -1.16698942E9 END) IS TRUE)  as count FROM t82, t0);
SELECT * FROM t82, t0 WHERE (CASE WHEN CAST(t0.c63 AS TEXT) THEN (+ (t0.c63)) ELSE -1.16698942E9 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c63 AS TEXT) THEN (+ (t0.c63)) ELSE -1.16698942E9 END) IS TRUE)  as count FROM t82, t0);
SELECT * FROM t82, t0 WHERE (CASE WHEN CAST(t0.c63 AS TEXT) THEN (+ (t0.c63)) ELSE -1.16698942E9 END);
SELECT * FROM t0 WHERE (((((- (t0.c1)), IFNULL(t0.c63, t0.c1), ((t0.c2)GLOB(t0.c0))))=((((((((((t0.c1)AND('726370667')))AND(t0.c2)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c1)))))) ORDER BY ((load_extension(t0.c2, t0.c63))>=(((NULL) BETWEEN (t0.c2) AND (0.6513023060039814))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (t0.c1)), IFNULL(t0.c63, t0.c1), ((t0.c2)GLOB(t0.c0))))==((((((((((t0.c1)AND('726370667')))AND(t0.c2)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((load_extension(t0.c2, t0.c63))>=(((NULL) BETWEEN (t0.c2) AND (0.6513023060039814))))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((- (t0.c1)), IFNULL(t0.c63, t0.c1), ((t0.c2)GLOB(t0.c0))))=((((((((((t0.c1)AND('726370667')))AND(t0.c2)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c1)))))) ORDER BY ((load_extension(t0.c2, t0.c63))>=(((NULL) BETWEEN (t0.c2) AND (0.6513023060039814))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (t0.c1)), IFNULL(t0.c63, t0.c1), ((t0.c2)GLOB(t0.c0))))==((((((((((t0.c1)AND('726370667')))AND(t0.c2)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((load_extension(t0.c2, t0.c63))>=(((NULL) BETWEEN (t0.c2) AND (0.6513023060039814))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))-((vt0.c0 IN ())))) ORDER BY (((vt0.c0))<>((((vt0.c0)GLOB(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))!=((((vt0.c0)GLOB(vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))-((vt0.c0 IN ())))) ORDER BY (((vt0.c0))<>((((vt0.c0)GLOB(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))!=((((vt0.c0)GLOB(vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))-((vt0.c0 IN ())))) ORDER BY (((vt0.c0))<>((((vt0.c0)GLOB(vt0.c0))))) DESC;
SELECT * FROM vt0, t82, t0 WHERE ((('5	ꂃ >a')*((((vt0.c0))<=((t82.c1)))))) ORDER BY ((((vt0.c0)LIKE(t82.c1))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('5	ꂃ >a')*((((vt0.c0))<=((t82.c1)))))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY ((((vt0.c0)LIKE(t82.c1))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM vt0, t82, t0 WHERE ((('5	ꂃ >a')*((((vt0.c0))<=((t82.c1)))))) ORDER BY ((((vt0.c0)LIKE(t82.c1))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('5	ꂃ >a')*((((vt0.c0))<=((t82.c1)))))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY ((((vt0.c0)LIKE(t82.c1))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM vt0, t82, t0 WHERE ((('5	ꂃ >a')*((((vt0.c0))<=((t82.c1)))))) ORDER BY ((((vt0.c0)LIKE(t82.c1))) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (0.48874194019537154) ORDER BY 0X3f07e261 DESC  NULLS LAST, (~ (((t82.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.48874194019537154) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY 0x3f07e261 DESC  NULLS LAST, (~ (((t82.c2) NOT NULL))));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (0.48874194019537154) ORDER BY 0X3f07e261 DESC  NULLS LAST, (~ (((t82.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.48874194019537154) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY 0x3f07e261 DESC  NULLS LAST, (~ (((t82.c2) NOT NULL))));
SELECT ALL * FROM t82, vt0, t0 WHERE ((('1997400620')>>(((t0.c2) NOT NULL)))) ORDER BY t82.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('1997400620')>>(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY t82.c1  NULLS FIRST);
SELECT ALL * FROM t82, vt0, t0 WHERE ((('1997400620')>>(((t0.c2) NOT NULL)))) ORDER BY t82.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('1997400620')>>(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY t82.c1  NULLS FIRST);
SELECT ALL * FROM t82, vt0, t0 WHERE ((('1997400620')>>(((t0.c2) NOT NULL)))) ORDER BY t82.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t82 ON ((NULL) BETWEEN ((NOT (t0.c1))) AND (t0.c1)) WHERE (t0.c1) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN t82 ON ((NULL) BETWEEN ((NOT (t0.c1))) AND (t0.c1)) ORDER BY '');
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t82 ON ((NULL) BETWEEN ((NOT (t0.c1))) AND (t0.c1)) WHERE (t0.c1) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN t82 ON ((NULL) BETWEEN ((NOT (t0.c1))) AND (t0.c1)) ORDER BY '');
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t82 ON ((NULL) BETWEEN ((NOT (t0.c1))) AND (t0.c1)) WHERE (t0.c1) ORDER BY '';
SELECT COUNT(*) FROM t0 WHERE (QUOTE((+ (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((+ (t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE((+ (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((+ (t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE((+ (t0.c1))));
SELECT * FROM t0 WHERE (t0.c2) ORDER BY ((+ (t0.c63)) IN (((((((((t0.c1)AND(t0.c1)))OR(t0.c2)))OR(t0.c63)))OR(t0.c1))))  NULLS FIRST, CAST(t0.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((+ (t0.c63)) IN (((((((((t0.c1)AND(t0.c1)))OR(t0.c2)))OR(t0.c63)))OR(t0.c1))))  NULLS FIRST, CAST(t0.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c2) ORDER BY ((+ (t0.c63)) IN (((((((((t0.c1)AND(t0.c1)))OR(t0.c2)))OR(t0.c63)))OR(t0.c1))))  NULLS FIRST, CAST(t0.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((+ (t0.c63)) IN (((((((((t0.c1)AND(t0.c1)))OR(t0.c2)))OR(t0.c63)))OR(t0.c1))))  NULLS FIRST, CAST(t0.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c2) ORDER BY ((+ (t0.c63)) IN (((((((((t0.c1)AND(t0.c1)))OR(t0.c2)))OR(t0.c63)))OR(t0.c1))))  NULLS FIRST, CAST(t0.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM t82, vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t82, vt0);
SELECT ALL * FROM t82, vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t82, vt0);
SELECT ALL * FROM t82, vt0 WHERE (((vt0.c0) NOT NULL));
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CASE CASE NULL  WHEN t82.c2 THEN t0.c1 ELSE NULL END  WHEN (((t82.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)%(t82.c0)) WHEN CASE WHEN t82.c0 THEN t82.c2 END THEN ((t0.c0) IS FALSE) WHEN (vt0.c0 IN ()) THEN (((t82.c1))<((t0.c0))) WHEN 1619576003 THEN t0.c0 WHEN json_remove(t82.c2, t0.c0, t82.c0, t82.c2) THEN t0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE CASE NULL  WHEN t82.c2 THEN t0.c1 ELSE NULL END  WHEN (((t82.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)%(t82.c0)) WHEN CASE WHEN t82.c0 THEN t82.c2 END THEN ((t0.c0) IS FALSE) WHEN (vt0.c0 IN ()) THEN (((t82.c1))<((t0.c0))) WHEN 1619576003 THEN t0.c0 WHEN json_remove(t82.c2, t0.c0, t82.c0, t82.c2) THEN t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CASE CASE NULL  WHEN t82.c2 THEN t0.c1 ELSE NULL END  WHEN (((t82.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)%(t82.c0)) WHEN CASE WHEN t82.c0 THEN t82.c2 END THEN ((t0.c0) IS FALSE) WHEN (vt0.c0 IN ()) THEN (((t82.c1))<((t0.c0))) WHEN 1619576003 THEN t0.c0 WHEN json_remove(t82.c2, t0.c0, t82.c0, t82.c2) THEN t0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE CASE NULL  WHEN t82.c2 THEN t0.c1 ELSE NULL END  WHEN (((t82.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)%(t82.c0)) WHEN CASE WHEN t82.c0 THEN t82.c2 END THEN ((t0.c0) IS FALSE) WHEN (vt0.c0 IN ()) THEN (((t82.c1))<((t0.c0))) WHEN 1619576003 THEN t0.c0 WHEN json_remove(t82.c2, t0.c0, t82.c0, t82.c2) THEN t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CASE CASE NULL  WHEN t82.c2 THEN t0.c1 ELSE NULL END  WHEN (((t82.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)%(t82.c0)) WHEN CASE WHEN t82.c0 THEN t82.c2 END THEN ((t0.c0) IS FALSE) WHEN (vt0.c0 IN ()) THEN (((t82.c1))<((t0.c0))) WHEN 1619576003 THEN t0.c0 WHEN json_remove(t82.c2, t0.c0, t82.c0, t82.c2) THEN t0.c0 COLLATE RTRIM END);
SELECT * FROM t0, t82, vt0 WHERE (json_array_length(((t82.c0)*(t82.c0)), ((t0.c63)LIKE(0.09347033491681245)))) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ((json_array_length(((t82.c0)*(t82.c0)), ((t0.c63)LIKE(0.09347033491681245)))) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY CAST(vt0.c0 AS TEXT));
SELECT * FROM t0, t82, vt0 WHERE (json_array_length(((t82.c0)*(t82.c0)), ((t0.c63)LIKE(0.09347033491681245)))) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ((json_array_length(((t82.c0)*(t82.c0)), ((t0.c63)LIKE(0.09347033491681245)))) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY CAST(vt0.c0 AS TEXT));
SELECT * FROM t0, t82, vt0 WHERE (json_array_length(((t82.c0)*(t82.c0)), ((t0.c63)LIKE(0.09347033491681245)))) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT * FROM vt0 WHERE ((((((((vt0.c0, x'', x''))>=((vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0)))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, x'', x''))>=((vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0)))OR(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c0, x'', x''))>=((vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0)))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, x'', x''))>=((vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0)))OR(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c0, x'', x''))>=((vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0)))OR(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (x'51a9');
SELECT SUM(count) FROM (SELECT ALL ((x'51a9') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'51a9');
SELECT SUM(count) FROM (SELECT ALL ((x'51a9') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'51a9');
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c0)))OR(t0.c1 COLLATE BINARY)))OR(((t0.c63)-(t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c0)))OR(t0.c1 COLLATE BINARY)))OR(((t0.c63)-(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c0)))OR(t0.c1 COLLATE BINARY)))OR(((t0.c63)-(t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c0)))OR(t0.c1 COLLATE BINARY)))OR(((t0.c63)-(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c0)))OR(t0.c1 COLLATE BINARY)))OR(((t0.c63)-(t0.c63)))));
SELECT COUNT(*) FROM t82, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t82, t0);
SELECT COUNT(*) FROM t82, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t82, t0);
SELECT COUNT(*) FROM t82, t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (CAST(((((t82.c2)OR(t82.c2)))OR(t82.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t82.c2)OR(t82.c2)))OR(t82.c0)) AS BLOB)) IS TRUE)  as count FROM t82, vt0);
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (CAST(((((t82.c2)OR(t82.c2)))OR(t82.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t82.c2)OR(t82.c2)))OR(t82.c0)) AS BLOB)) IS TRUE)  as count FROM t82, vt0);
SELECT ALL COUNT(*) FROM t82, vt0 WHERE (CAST(((((t82.c2)OR(t82.c2)))OR(t82.c0)) AS BLOB));
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c63)))/(CAST(t0.c0 AS REAL)))) ORDER BY ((x'')>(((t0.c63) BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c63)))/(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY ((x'')>(((t0.c63) BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c63)))/(CAST(t0.c0 AS REAL)))) ORDER BY ((x'')>(((t0.c63) BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c63)))/(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY ((x'')>(((t0.c63) BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c63)))/(CAST(t0.c0 AS REAL)))) ORDER BY ((x'')>(((t0.c63) BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t82.c0) BETWEEN (t82.c1) AND (t82.c2))) BETWEEN ((t82.c1 IN ())) AND (((t82.c2) IS FALSE))) CROSS JOIN t82 ON '-2145523031' WHERE (((t0.c63 COLLATE RTRIM)/((((t0.c63, t82.c2, t0.c2)) NOT BETWEEN ((t82.c1, t82.c0, t82.c0)) AND ((x'', t82.c0, t0.c1)))))) ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST, ((((t0.c0)==(t0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c63 COLLATE RTRIM)/((((t0.c63, t82.c2, t0.c2)) NOT BETWEEN ((t82.c1, t82.c0, t82.c0)) AND ((x'', t82.c0, t0.c1)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t82.c0) BETWEEN (t82.c1) AND (t82.c2))) BETWEEN ((t82.c1 IN ())) AND (((t82.c2) IS FALSE))) CROSS JOIN t82 ON '-2145523031' ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST, ((((t0.c0)==(t0.c2))) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t82.c0) BETWEEN (t82.c1) AND (t82.c2))) BETWEEN ((t82.c1 IN ())) AND (((t82.c2) IS FALSE))) CROSS JOIN t82 ON '-2145523031' WHERE (((t0.c63 COLLATE RTRIM)/((((t0.c63, t82.c2, t0.c2)) NOT BETWEEN ((t82.c1, t82.c0, t82.c0)) AND ((x'', t82.c0, t0.c1)))))) ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST, ((((t0.c0)==(t0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c63 COLLATE RTRIM)/((((t0.c63, t82.c2, t0.c2)) NOT BETWEEN ((t82.c1, t82.c0, t82.c0)) AND ((x'', t82.c0, t0.c1)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t82.c0) BETWEEN (t82.c1) AND (t82.c2))) BETWEEN ((t82.c1 IN ())) AND (((t82.c2) IS FALSE))) CROSS JOIN t82 ON '-2145523031' ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST, ((((t0.c0)==(t0.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, t82 WHERE (((((((NULL) ISNULL))OR(((NULL) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((((('1680968858')AND(t82.c1)))OR(t82.c2))))) ORDER BY ((CAST(t0.c63 AS INTEGER)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((NULL) ISNULL))OR(((NULL) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((((('1680968858')AND(t82.c1)))OR(t82.c2))))) IS TRUE)  as count FROM t0, t82 ORDER BY ((CAST(t0.c63 AS INTEGER)) IS FALSE));
SELECT COUNT(*) FROM t0, t82 WHERE (((((((NULL) ISNULL))OR(((NULL) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((((('1680968858')AND(t82.c1)))OR(t82.c2))))) ORDER BY ((CAST(t0.c63 AS INTEGER)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((NULL) ISNULL))OR(((NULL) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((((('1680968858')AND(t82.c1)))OR(t82.c2))))) IS TRUE)  as count FROM t0, t82 ORDER BY ((CAST(t0.c63 AS INTEGER)) IS FALSE));
SELECT COUNT(*) FROM t0, t82 WHERE (((((((NULL) ISNULL))OR(((NULL) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((((('1680968858')AND(t82.c1)))OR(t82.c2))))) ORDER BY ((CAST(t0.c63 AS INTEGER)) IS FALSE);
SELECT ALL COUNT(*) FROM t82 WHERE ((+ (((t82.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t82.c0) IS FALSE)))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE ((+ (((t82.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t82.c0) IS FALSE)))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE ((+ (((t82.c0) IS FALSE))));
SELECT * FROM t82, vt0, t0 WHERE (((((((t0.c0)>(-3.31131346E8)))AND(((((t0.c2)OR(t0.c1)))AND(t0.c2)))))OR(((t82.c2) NOT NULL)))) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)>(-3.31131346E8)))AND(((((t0.c2)OR(t0.c1)))AND(t0.c2)))))OR(((t82.c2) NOT NULL)))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST);
SELECT * FROM t82, vt0, t0 WHERE (((((((t0.c0)>(-3.31131346E8)))AND(((((t0.c2)OR(t0.c1)))AND(t0.c2)))))OR(((t82.c2) NOT NULL)))) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)>(-3.31131346E8)))AND(((((t0.c2)OR(t0.c1)))AND(t0.c2)))))OR(((t82.c2) NOT NULL)))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST);
SELECT * FROM t82, vt0, t0 WHERE (((((((t0.c0)>(-3.31131346E8)))AND(((((t0.c2)OR(t0.c1)))AND(t0.c2)))))OR(((t82.c2) NOT NULL)))) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT ALL * FROM t0, vt0 INDEXED BY i48 WHERE ((~ ((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t0.c1))))) IS TRUE)  as count FROM t0, vt0 INDEXED BY i48);
SELECT ALL * FROM t0, vt0 INDEXED BY i48 WHERE ((~ ((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t0.c1))))) IS TRUE)  as count FROM t0, vt0 INDEXED BY i48);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t82 ON CASE (~ (vt0.c0))  WHEN load_extension(t82.c1) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) WHEN ROUND(-157972241, 0xffffffffbbaaf218) THEN vt0.c0 COLLATE RTRIM WHEN CAST(t82.c1 AS TEXT) THEN ((t0.c63) NOT BETWEEN ('#iUq襫.di') AND (t0.c0)) ELSE 0Xffffffffc8d7271e END FULL OUTER JOIN t0 ON t0.c63 WHERE (((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY t82.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t82 ON CASE (~ (vt0.c0))  WHEN load_extension(t82.c1) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) WHEN ROUND(-157972241, 0xffffffffbbaaf218) THEN vt0.c0 COLLATE RTRIM WHEN CAST(t82.c1 AS TEXT) THEN ((t0.c63) NOT BETWEEN ('#iUq襫.di') AND (t0.c0)) ELSE 0Xffffffffc8d7271e END FULL OUTER JOIN t0 ON t0.c63 ORDER BY t82.c2 ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t82 ON CASE (~ (vt0.c0))  WHEN load_extension(t82.c1) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) WHEN ROUND(-157972241, 0xffffffffbbaaf218) THEN vt0.c0 COLLATE RTRIM WHEN CAST(t82.c1 AS TEXT) THEN ((t0.c63) NOT BETWEEN ('#iUq襫.di') AND (t0.c0)) ELSE 0Xffffffffc8d7271e END FULL OUTER JOIN t0 ON t0.c63 WHERE (((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY t82.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t82 ON CASE (~ (vt0.c0))  WHEN load_extension(t82.c1) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) WHEN ROUND(-157972241, 0xffffffffbbaaf218) THEN vt0.c0 COLLATE RTRIM WHEN CAST(t82.c1 AS TEXT) THEN ((t0.c63) NOT BETWEEN ('#iUq襫.di') AND (t0.c0)) ELSE 0Xffffffffc8d7271e END FULL OUTER JOIN t0 ON t0.c63 ORDER BY t82.c2 ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((((~ (t0.c1)))OR((~ (t0.c63)))))AND(((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY ((((((t0.c2)OR(vt0.c0)))AND(t0.c1))) NOT BETWEEN ((t0.c0 IN ())) AND ((- (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c1)))OR((~ (t0.c63)))))AND(((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c2)OR(vt0.c0)))AND(t0.c1))) NOT BETWEEN ((t0.c0 IN ())) AND ((- (t0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((~ (t0.c1)))OR((~ (t0.c63)))))AND(((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY ((((((t0.c2)OR(vt0.c0)))AND(t0.c1))) NOT BETWEEN ((t0.c0 IN ())) AND ((- (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c1)))OR((~ (t0.c63)))))AND(((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c2)OR(vt0.c0)))AND(t0.c1))) NOT BETWEEN ((t0.c0 IN ())) AND ((- (t0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((~ (t0.c1)))OR((~ (t0.c63)))))AND(((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY ((((((t0.c2)OR(vt0.c0)))AND(t0.c1))) NOT BETWEEN ((t0.c0 IN ())) AND ((- (t0.c1))))  NULLS FIRST;
SELECT ALL * FROM t0, t82 WHERE ((((t0.c0, t82.c2, t82.c2)) NOT BETWEEN ((CAST(t0.c1 AS REAL), (t82.c1 IN ()), ((t82.c2) NOT BETWEEN (t82.c2) AND (t0.c63)))) AND ((CAST(0.6138276089647303 AS BLOB), CAST(t0.c1 AS REAL), ((t0.c1) NOTNULL))))) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t82.c2, t82.c2)) NOT BETWEEN ((CAST(t0.c1 AS REAL), (t82.c1 IN ()), ((t82.c2) NOT BETWEEN (t82.c2) AND (t0.c63)))) AND ((CAST(0.6138276089647303 AS BLOB), CAST(t0.c1 AS REAL), ((t0.c1) NOTNULL))))) IS TRUE)  as count FROM t0, t82 ORDER BY t0.c0  NULLS FIRST);
SELECT ALL * FROM t0, t82 WHERE ((((t0.c0, t82.c2, t82.c2)) NOT BETWEEN ((CAST(t0.c1 AS REAL), (t82.c1 IN ()), ((t82.c2) NOT BETWEEN (t82.c2) AND (t0.c63)))) AND ((CAST(0.6138276089647303 AS BLOB), CAST(t0.c1 AS REAL), ((t0.c1) NOTNULL))))) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t82.c2, t82.c2)) NOT BETWEEN ((CAST(t0.c1 AS REAL), (t82.c1 IN ()), ((t82.c2) NOT BETWEEN (t82.c2) AND (t0.c63)))) AND ((CAST(0.6138276089647303 AS BLOB), CAST(t0.c1 AS REAL), ((t0.c1) NOTNULL))))) IS TRUE)  as count FROM t0, t82 ORDER BY t0.c0  NULLS FIRST);
SELECT ALL * FROM t0, t82 WHERE ((((t0.c0, t82.c2, t82.c2)) NOT BETWEEN ((CAST(t0.c1 AS REAL), (t82.c1 IN ()), ((t82.c2) NOT BETWEEN (t82.c2) AND (t0.c63)))) AND ((CAST(0.6138276089647303 AS BLOB), CAST(t0.c1 AS REAL), ((t0.c1) NOTNULL))))) ORDER BY t0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t82, t0, vt0 WHERE (((COALESCE(t82.c1, t82.c0))&(CAST(t0.c1 AS TEXT)))) ORDER BY -141634790 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t82.c1, t82.c0))&(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY -141634790 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t82, t0, vt0 WHERE (((COALESCE(t82.c1, t82.c0))&(CAST(t0.c1 AS TEXT)))) ORDER BY -141634790 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t82.c1, t82.c0))&(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY -141634790 DESC  NULLS FIRST);
SELECT * FROM t82 FULL OUTER JOIN t0 ON (((t0.c63)/(t0.c2)) IN ()) WHERE (0.5979585795997794) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((0.5979585795997794) IS TRUE)  as count FROM t82 FULL OUTER JOIN t0 ON (((t0.c63)/(t0.c2)) IN ()) ORDER BY t0.c2);
SELECT * FROM t82 FULL OUTER JOIN t0 ON (((t0.c63)/(t0.c2)) IN ()) WHERE (0.5979585795997794) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((0.5979585795997794) IS TRUE)  as count FROM t82 FULL OUTER JOIN t0 ON (((t0.c63)/(t0.c2)) IN ()) ORDER BY t0.c2);
SELECT * FROM t82 FULL OUTER JOIN t0 ON (((t0.c63)/(t0.c2)) IN ()) WHERE (0.5979585795997794) ORDER BY t0.c2;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY json(((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c63))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY json(((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c63))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY json(((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c63))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY json(((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c63))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY json(((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c63))) ASC;
SELECT COUNT(*) FROM t82 WHERE ((~ (t82.c1)) COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT ((t82.c2) IS FALSE), 0.17102778727200663) DESC  NULLS FIRST, CASE t82.c2  WHEN t82.c1 COLLATE NOCASE THEN t82.c2 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (t82.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t82 ORDER BY LIKELIHOOD(DISTINCT ((t82.c2) IS FALSE), 0.17102778727200663) DESC  NULLS FIRST, CASE t82.c2  WHEN t82.c1 COLLATE NOCASE THEN t82.c2 COLLATE NOCASE END DESC);
SELECT COUNT(*) FROM t82 WHERE ((~ (t82.c1)) COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT ((t82.c2) IS FALSE), 0.17102778727200663) DESC  NULLS FIRST, CASE t82.c2  WHEN t82.c1 COLLATE NOCASE THEN t82.c2 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (t82.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t82 ORDER BY LIKELIHOOD(DISTINCT ((t82.c2) IS FALSE), 0.17102778727200663) DESC  NULLS FIRST, CASE t82.c2  WHEN t82.c1 COLLATE NOCASE THEN t82.c2 COLLATE NOCASE END DESC);
SELECT COUNT(*) FROM t82 WHERE ((~ (t82.c1)) COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT ((t82.c2) IS FALSE), 0.17102778727200663) DESC  NULLS FIRST, CASE t82.c2  WHEN t82.c1 COLLATE NOCASE THEN t82.c2 COLLATE NOCASE END DESC;
SELECT * FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY FULL OUTER JOIN t0 ON ((((t0.c1) NOT BETWEEN (t82.c1) AND (t0.c63)))<<(((((((((t82.c2)AND(t0.c1)))OR(t82.c1)))AND(vt0.c0)))OR(t82.c2)))) WHERE (((((((t0.c63) NOT BETWEEN (t82.c2) AND (t0.c63)))OR(((t82.c1) IS TRUE))))AND((vt0.c0 IN ())))) ORDER BY ((x'2755') NOT BETWEEN (json_type(t0.c0)) AND ('-1415191751')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63) NOT BETWEEN (t82.c2) AND (t0.c63)))OR(((t82.c1) IS TRUE))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY FULL OUTER JOIN t0 ON ((((t0.c1) NOT BETWEEN (t82.c1) AND (t0.c63)))<<(((((((((t82.c2)AND(t0.c1)))OR(t82.c1)))AND(vt0.c0)))OR(t82.c2)))) ORDER BY ((x'2755') NOT BETWEEN (json_type(t0.c0)) AND ('-1415191751')) DESC);
SELECT * FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY FULL OUTER JOIN t0 ON ((((t0.c1) NOT BETWEEN (t82.c1) AND (t0.c63)))<<(((((((((t82.c2)AND(t0.c1)))OR(t82.c1)))AND(vt0.c0)))OR(t82.c2)))) WHERE (((((((t0.c63) NOT BETWEEN (t82.c2) AND (t0.c63)))OR(((t82.c1) IS TRUE))))AND((vt0.c0 IN ())))) ORDER BY ((x'2755') NOT BETWEEN (json_type(t0.c0)) AND ('-1415191751')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63) NOT BETWEEN (t82.c2) AND (t0.c63)))OR(((t82.c1) IS TRUE))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM t82 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY FULL OUTER JOIN t0 ON ((((t0.c1) NOT BETWEEN (t82.c1) AND (t0.c63)))<<(((((((((t82.c2)AND(t0.c1)))OR(t82.c1)))AND(vt0.c0)))OR(t82.c2)))) ORDER BY ((x'2755') NOT BETWEEN (json_type(t0.c0)) AND ('-1415191751')) DESC);
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CAST(((t82.c0)IS NOT(t82.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t82.c0)IS NOT(t82.c1)) AS TEXT)) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CAST(((t82.c0)IS NOT(t82.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t82.c0)IS NOT(t82.c1)) AS TEXT)) IS TRUE)  as count FROM t82, t0, vt0);
SELECT ALL COUNT(*) FROM t82, t0, vt0 WHERE (CAST(((t82.c0)IS NOT(t82.c1)) AS TEXT));
SELECT * FROM vt0, t82 NATURAL JOIN t0 WHERE (((LOWER(vt0.c0)) BETWEEN (((t82.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))) AND (CASE t0.c0  WHEN t82.c1 THEN t0.c1 END))) ORDER BY CASE ((t0.c1) NOTNULL)  WHEN CAST(t82.c1 AS REAL) THEN t0.c63 ELSE (~ (t0.c0)) END  NULLS LAST, (((vt0.c0)-(t0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c0)) BETWEEN (((t82.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))) AND (CASE t0.c0  WHEN t82.c1 THEN t0.c1 END))) IS TRUE)  as count FROM vt0, t82 NATURAL JOIN t0 ORDER BY CASE ((t0.c1) NOTNULL)  WHEN CAST(t82.c1 AS REAL) THEN t0.c63 ELSE (~ (t0.c0)) END  NULLS LAST, (((vt0.c0)-(t0.c1)) IN ())  NULLS LAST);
SELECT * FROM vt0, t82 NATURAL JOIN t0 WHERE (((LOWER(vt0.c0)) BETWEEN (((t82.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))) AND (CASE t0.c0  WHEN t82.c1 THEN t0.c1 END))) ORDER BY CASE ((t0.c1) NOTNULL)  WHEN CAST(t82.c1 AS REAL) THEN t0.c63 ELSE (~ (t0.c0)) END  NULLS LAST, (((vt0.c0)-(t0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c0)) BETWEEN (((t82.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))) AND (CASE t0.c0  WHEN t82.c1 THEN t0.c1 END))) IS TRUE)  as count FROM vt0, t82 NATURAL JOIN t0 ORDER BY CASE ((t0.c1) NOTNULL)  WHEN CAST(t82.c1 AS REAL) THEN t0.c63 ELSE (~ (t0.c0)) END  NULLS LAST, (((vt0.c0)-(t0.c1)) IN ())  NULLS LAST);
SELECT * FROM vt0, t82 NATURAL JOIN t0 WHERE (((LOWER(vt0.c0)) BETWEEN (((t82.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))) AND (CASE t0.c0  WHEN t82.c1 THEN t0.c1 END))) ORDER BY CASE ((t0.c1) NOTNULL)  WHEN CAST(t82.c1 AS REAL) THEN t0.c63 ELSE (~ (t0.c0)) END  NULLS LAST, (((vt0.c0)-(t0.c1)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))*((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))*((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))*((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))*((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))*((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT * FROM t0 WHERE (((((t0.c2))>((NULL))) IN (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2))>((NULL))) IN (t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2))>((NULL))) IN (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2))>((NULL))) IN (t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2))>((NULL))) IN (t0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), x'';
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), x'');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), x'';
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), x'');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), x'';
SELECT ALL COUNT(*) FROM t82 INNER JOIN vt0 ON x'' CROSS JOIN t0 ON t0.c0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((t0.c63)))) ORDER BY (((t82.c0) ISNULL) IN (t82.c1)) ASC  NULLS LAST, ((((((((((1e500)AND(t0.c63)))OR(0.6122707331343493)))AND(t82.c1)))AND(t82.c1))) BETWEEN (((t82.c0)||(t0.c1))) AND (((t0.c2)IS(t82.c1))))  NULLS FIRST, ('' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((t0.c63)))) IS TRUE)  as count FROM t82 INNER JOIN vt0 ON x'' CROSS JOIN t0 ON t0.c0 ORDER BY (((t82.c0) ISNULL) IN (t82.c1)) ASC  NULLS LAST, ((((((((((1e500)AND(t0.c63)))OR(0.6122707331343493)))AND(t82.c1)))AND(t82.c1))) BETWEEN (((t82.c0)||(t0.c1))) AND (((t0.c2)IS(t82.c1))))  NULLS FIRST, ('' IN ()));
SELECT ALL COUNT(*) FROM t82 INNER JOIN vt0 ON x'' CROSS JOIN t0 ON t0.c0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((t0.c63)))) ORDER BY (((t82.c0) ISNULL) IN (t82.c1)) ASC  NULLS LAST, ((((((((((1e500)AND(t0.c63)))OR(0.6122707331343493)))AND(t82.c1)))AND(t82.c1))) BETWEEN (((t82.c0)||(t0.c1))) AND (((t0.c2)IS(t82.c1))))  NULLS FIRST, ('' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((t0.c63)))) IS TRUE)  as count FROM t82 INNER JOIN vt0 ON x'' CROSS JOIN t0 ON t0.c0 ORDER BY (((t82.c0) ISNULL) IN (t82.c1)) ASC  NULLS LAST, ((((((((((1e500)AND(t0.c63)))OR(0.6122707331343493)))AND(t82.c1)))AND(t82.c1))) BETWEEN (((t82.c0)||(t0.c1))) AND (((t0.c2)IS(t82.c1))))  NULLS FIRST, ('' IN ()));
SELECT ALL COUNT(*) FROM t82 INNER JOIN vt0 ON x'' CROSS JOIN t0 ON t0.c0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((t0.c63)))) ORDER BY (((t82.c0) ISNULL) IN (t82.c1)) ASC  NULLS LAST, ((((((((((1e500)AND(t0.c63)))OR(0.6122707331343493)))AND(t82.c1)))AND(t82.c1))) BETWEEN (((t82.c0)||(t0.c1))) AND (((t0.c2)IS(t82.c1))))  NULLS FIRST, ('' IN ());
SELECT * FROM vt0, t82 WHERE (CAST((~ (t82.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t82.c2)) AS REAL)) IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE (CAST((~ (t82.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t82.c2)) AS REAL)) IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE (CAST((~ (t82.c2)) AS REAL));
SELECT ALL * FROM t82 WHERE (((CASE t82.c2  WHEN t82.c0 THEN t82.c2 WHEN x'' THEN t82.c1 WHEN t82.c1 THEN t82.c1 WHEN t82.c2 THEN t82.c1 WHEN t82.c0 THEN t82.c0 ELSE '' END)*(((t82.c0) NOT NULL)))) ORDER BY ((((t82.c0) NOTNULL))=(((t82.c0) BETWEEN (t82.c1) AND (t82.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t82.c2  WHEN t82.c0 THEN t82.c2 WHEN x'' THEN t82.c1 WHEN t82.c1 THEN t82.c1 WHEN t82.c2 THEN t82.c1 WHEN t82.c0 THEN t82.c0 ELSE '' END)*(((t82.c0) NOT NULL)))) IS TRUE)  as count FROM t82 ORDER BY ((((t82.c0) NOTNULL))==(((t82.c0) BETWEEN (t82.c1) AND (t82.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM t82 WHERE (((CASE t82.c2  WHEN t82.c0 THEN t82.c2 WHEN x'' THEN t82.c1 WHEN t82.c1 THEN t82.c1 WHEN t82.c2 THEN t82.c1 WHEN t82.c0 THEN t82.c0 ELSE '' END)*(((t82.c0) NOT NULL)))) ORDER BY ((((t82.c0) NOTNULL))=(((t82.c0) BETWEEN (t82.c1) AND (t82.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t82.c2  WHEN t82.c0 THEN t82.c2 WHEN x'' THEN t82.c1 WHEN t82.c1 THEN t82.c1 WHEN t82.c2 THEN t82.c1 WHEN t82.c0 THEN t82.c0 ELSE '' END)*(((t82.c0) NOT NULL)))) IS TRUE)  as count FROM t82 ORDER BY ((((t82.c0) NOTNULL))==(((t82.c0) BETWEEN (t82.c1) AND (t82.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM t82 WHERE (((CASE t82.c2  WHEN t82.c0 THEN t82.c2 WHEN x'' THEN t82.c1 WHEN t82.c1 THEN t82.c1 WHEN t82.c2 THEN t82.c1 WHEN t82.c0 THEN t82.c0 ELSE '' END)*(((t82.c0) NOT NULL)))) ORDER BY ((((t82.c0) NOTNULL))=(((t82.c0) BETWEEN (t82.c1) AND (t82.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c63)+(t0.c1))))<=(((((vt0.c0))<=((t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c63)+(t0.c1))))<=(((((vt0.c0))<=((t0.c0))))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c63)+(t0.c1))))<=(((((vt0.c0))<=((t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c63)+(t0.c1))))<=(((((vt0.c0))<=((t0.c0))))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c63)+(t0.c1))))<=(((((vt0.c0))<=((t0.c0)))))));
SELECT * FROM vt0, t82 WHERE (((t82.c2) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t82.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE (((t82.c2) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t82.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE (((t82.c2) NOTNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t82 ON (- (CHAR(t0.c0))) WHERE (((x'') IS FALSE)) ORDER BY (((t0.c1, t0.c63, t0.c1))<((t0.c2, vt0.c0, t0.c63))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t82 ON (- (CHAR(t0.c0))) ORDER BY (((t0.c1, t0.c63, t0.c1))<((t0.c2, vt0.c0, t0.c63))) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t82 ON (- (CHAR(t0.c0))) WHERE (((x'') IS FALSE)) ORDER BY (((t0.c1, t0.c63, t0.c1))<((t0.c2, vt0.c0, t0.c63))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t82 ON (- (CHAR(t0.c0))) ORDER BY (((t0.c1, t0.c63, t0.c1))<((t0.c2, vt0.c0, t0.c63))) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t82 ON (- (CHAR(t0.c0))) WHERE (((x'') IS FALSE)) ORDER BY (((t0.c1, t0.c63, t0.c1))<((t0.c2, vt0.c0, t0.c63))) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1))) IS FALSE)) ORDER BY CASE WHEN CASE WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 WHEN t0.c1 THEN t0.c0 END THEN vt0.c0 WHEN t0.c63 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63)) END  NULLS LAST, ((-1.7023664E7)IS NOT(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 WHEN t0.c1 THEN t0.c0 END THEN vt0.c0 WHEN t0.c63 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63)) END  NULLS LAST, ((-1.7023664E7)IS NOT(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1))) IS FALSE)) ORDER BY CASE WHEN CASE WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 WHEN t0.c1 THEN t0.c0 END THEN vt0.c0 WHEN t0.c63 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63)) END  NULLS LAST, ((-1.7023664E7)IS NOT(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 WHEN t0.c1 THEN t0.c0 END THEN vt0.c0 WHEN t0.c63 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63)) END  NULLS LAST, ((-1.7023664E7)IS NOT(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1))) IS FALSE)) ORDER BY CASE WHEN CASE WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 WHEN t0.c1 THEN t0.c0 END THEN vt0.c0 WHEN t0.c63 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63)) END  NULLS LAST, ((-1.7023664E7)IS NOT(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM t82, t0, vt0 WHERE ((NOT ((t82.c1 IN (t82.c2))))) ORDER BY ((t0.c2)<(SQLITE_SOURCE_ID())) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t82.c1 IN (t82.c2))))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY ((t0.c2)<(SQLITE_SOURCE_ID())) DESC);
SELECT * FROM t82, t0, vt0 WHERE ((NOT ((t82.c1 IN (t82.c2))))) ORDER BY ((t0.c2)<(SQLITE_SOURCE_ID())) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t82.c1 IN (t82.c2))))) IS TRUE)  as count FROM t82, t0, vt0 ORDER BY ((t0.c2)<(SQLITE_SOURCE_ID())) DESC);
SELECT * FROM t82, t0, vt0 WHERE ((NOT ((t82.c1 IN (t82.c2))))) ORDER BY ((t0.c2)<(SQLITE_SOURCE_ID())) DESC;
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63 COLLATE NOCASE)||('-331131346')));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63 COLLATE NOCASE)||('-331131346'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63 COLLATE NOCASE)||('-331131346')));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63 COLLATE NOCASE)||('-331131346'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63 COLLATE NOCASE)||('-331131346')));
SELECT COUNT(*) FROM t82 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)))/(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)) WHERE ((((((t82.c1)GLOB(vt0.c0))))<((CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c2 END))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1)GLOB(vt0.c0))))<((CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c2 END)))) IS TRUE)  as count FROM t82 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)))/(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)));
SELECT COUNT(*) FROM t82 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)))/(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)) WHERE ((((((t82.c1)GLOB(vt0.c0))))<((CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c2 END))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1)GLOB(vt0.c0))))<((CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c2 END)))) IS TRUE)  as count FROM t82 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)))/(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)));
SELECT COUNT(*) FROM t82 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (t82.c1)))/(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 END)) WHERE ((((((t82.c1)GLOB(vt0.c0))))<((CASE t82.c2  WHEN t82.c1 THEN t82.c2 ELSE t82.c2 END))));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c0) BETWEEN (t82.c0) AND (t82.c1))) BETWEEN (NULL) AND (MAX(x'bda4', x'4102')))) ORDER BY SQLITE_COMPILEOPTION_USED(t82.c1)  NULLS FIRST, (CASE WHEN t82.c0 THEN vt0.c0 END IN (CAST(t0.c1 AS TEXT)))  NULLS LAST, CAST(CAST(vt0.c0 AS TEXT) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t82.c0) AND (t82.c1))) BETWEEN (NULL) AND (MAX(x'bda4', x'4102')))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY SQLITE_COMPILEOPTION_USED(t82.c1)  NULLS FIRST, (CASE WHEN t82.c0 THEN vt0.c0 END IN (CAST(t0.c1 AS TEXT)))  NULLS LAST, CAST(CAST(vt0.c0 AS TEXT) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c0) BETWEEN (t82.c0) AND (t82.c1))) BETWEEN (NULL) AND (MAX(x'bda4', x'4102')))) ORDER BY SQLITE_COMPILEOPTION_USED(t82.c1)  NULLS FIRST, (CASE WHEN t82.c0 THEN vt0.c0 END IN (CAST(t0.c1 AS TEXT)))  NULLS LAST, CAST(CAST(vt0.c0 AS TEXT) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t82.c0) AND (t82.c1))) BETWEEN (NULL) AND (MAX(x'bda4', x'4102')))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY SQLITE_COMPILEOPTION_USED(t82.c1)  NULLS FIRST, (CASE WHEN t82.c0 THEN vt0.c0 END IN (CAST(t0.c1 AS TEXT)))  NULLS LAST, CAST(CAST(vt0.c0 AS TEXT) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((((t0.c0) BETWEEN (t82.c0) AND (t82.c1))) BETWEEN (NULL) AND (MAX(x'bda4', x'4102')))) ORDER BY SQLITE_COMPILEOPTION_USED(t82.c1)  NULLS FIRST, (CASE WHEN t82.c0 THEN vt0.c0 END IN (CAST(t0.c1 AS TEXT)))  NULLS LAST, CAST(CAST(vt0.c0 AS TEXT) AS TEXT)  NULLS LAST;
SELECT * FROM t82, vt0, t0 WHERE (CASE WHEN ((vt0.c0)%(t0.c2)) THEN (t0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)%(t0.c2)) THEN (t0.c1 IN ()) END) IS TRUE)  as count FROM t82, vt0, t0);
SELECT * FROM t82, vt0, t0 WHERE (CASE WHEN ((vt0.c0)%(t0.c2)) THEN (t0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)%(t0.c2)) THEN (t0.c1 IN ()) END) IS TRUE)  as count FROM t82, vt0, t0);
SELECT * FROM t82, vt0, t0 WHERE (CASE WHEN ((vt0.c0)%(t0.c2)) THEN (t0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM t82, t0 WHERE ((((((((((((t0.c1)OR('-1786653710')))AND(t82.c0)))OR(t0.c2)))AND(t82.c2))))=((TRIM(DISTINCT t82.c2))))) ORDER BY ((t82.c1)%(t0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c1)OR('-1786653710')))AND(t82.c0)))OR(t0.c2)))AND(t82.c2))))==((TRIM(DISTINCT t82.c2))))) IS TRUE)  as count FROM t82, t0 ORDER BY ((t82.c1)%(t0.c2)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t82, t0 WHERE ((((((((((((t0.c1)OR('-1786653710')))AND(t82.c0)))OR(t0.c2)))AND(t82.c2))))=((TRIM(DISTINCT t82.c2))))) ORDER BY ((t82.c1)%(t0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c1)OR('-1786653710')))AND(t82.c0)))OR(t0.c2)))AND(t82.c2))))==((TRIM(DISTINCT t82.c2))))) IS TRUE)  as count FROM t82, t0 ORDER BY ((t82.c1)%(t0.c2)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t82, t0 WHERE ((((((((((((t0.c1)OR('-1786653710')))AND(t82.c0)))OR(t0.c2)))AND(t82.c2))))=((TRIM(DISTINCT t82.c2))))) ORDER BY ((t82.c1)%(t0.c2)) COLLATE BINARY ASC;
SELECT ALL * FROM vt0, t82 WHERE (((CAST(vt0.c0 AS TEXT))<((- (t82.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<((- (t82.c1))))) IS TRUE)  as count FROM vt0, t82);
SELECT ALL * FROM vt0, t82 WHERE (((CAST(vt0.c0 AS TEXT))<((- (t82.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<((- (t82.c1))))) IS TRUE)  as count FROM vt0, t82);
SELECT ALL * FROM vt0, t82 WHERE (((CAST(vt0.c0 AS TEXT))<((- (t82.c1)))));
SELECT * FROM vt0, t82 WHERE (CASE (~ (t82.c2))  WHEN ((vt0.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN (((vt0.c0)) BETWEEN ((t82.c2)) AND ((t82.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (t82.c2))  WHEN ((vt0.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN (((vt0.c0)) BETWEEN ((t82.c2)) AND ((t82.c2))) END) IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE (CASE (~ (t82.c2))  WHEN ((vt0.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN (((vt0.c0)) BETWEEN ((t82.c2)) AND ((t82.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (t82.c2))  WHEN ((vt0.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN (((vt0.c0)) BETWEEN ((t82.c2)) AND ((t82.c2))) END) IS TRUE)  as count FROM vt0, t82);
SELECT * FROM vt0, t82 WHERE (CASE (~ (t82.c2))  WHEN ((vt0.c0) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN (((vt0.c0)) BETWEEN ((t82.c2)) AND ((t82.c2))) END);
SELECT ALL * FROM t82 CROSS JOIN t0 ON ((((t82.c2) NOT BETWEEN (t82.c0) AND (t0.c2))) IS TRUE) WHERE (LIKELY((- (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((- (t0.c1)))) IS TRUE)  as count FROM t82 CROSS JOIN t0 ON ((((t82.c2) NOT BETWEEN (t82.c0) AND (t0.c2))) IS TRUE));
SELECT ALL * FROM t82 CROSS JOIN t0 ON ((((t82.c2) NOT BETWEEN (t82.c0) AND (t0.c2))) IS TRUE) WHERE (LIKELY((- (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((- (t0.c1)))) IS TRUE)  as count FROM t82 CROSS JOIN t0 ON ((((t82.c2) NOT BETWEEN (t82.c0) AND (t0.c2))) IS TRUE));
SELECT ALL * FROM t82 CROSS JOIN t0 ON ((((t82.c2) NOT BETWEEN (t82.c0) AND (t0.c2))) IS TRUE) WHERE (LIKELY((- (t0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (0X7d63c08a)) COLLATE NOCASE, (((+ (t0.c2))) NOT BETWEEN ((t0.c0 IN (t0.c63))) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN 4.43961857E8 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE '' END));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (0x7d63c08a)) COLLATE NOCASE, (((+ (t0.c2))) NOT BETWEEN ((t0.c0 IN (t0.c63))) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN 4.43961857E8 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE '' END)));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (0X7d63c08a)) COLLATE NOCASE, (((+ (t0.c2))) NOT BETWEEN ((t0.c0 IN (t0.c63))) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN 4.43961857E8 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE '' END));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (0x7d63c08a)) COLLATE NOCASE, (((+ (t0.c2))) NOT BETWEEN ((t0.c0 IN (t0.c63))) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN 4.43961857E8 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE '' END)));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (0X7d63c08a)) COLLATE NOCASE, (((+ (t0.c2))) NOT BETWEEN ((t0.c0 IN (t0.c63))) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN 4.43961857E8 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE '' END));
SELECT ALL COUNT(*) FROM t82, t0 CROSS JOIN vt0 ON ((((((((CASE WHEN t0.c63 THEN 0.7823720839947742 END)AND(0.9635484265337105 COLLATE BINARY)))AND(((t0.c63)||(t0.c1)))))OR(((vt0.c0) IS TRUE))))OR(((t82.c2) BETWEEN (t0.c0) AND (t0.c63)))) WHERE (((0x28ca321d COLLATE RTRIM)|((((t82.c1))<((t82.c2)))))) ORDER BY ((CASE 0.23941161437172165  WHEN 0.682651744027186 THEN t82.c2 ELSE t0.c0 END) IS FALSE) DESC  NULLS LAST, ((((0.012135320984220543)OR('~6㧐l\')))AND(((((((((t0.c1)OR(t0.c63)))OR(x'')))OR(t0.c63)))AND(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0x28ca321d COLLATE RTRIM)|((((t82.c1))<((t82.c2)))))) IS TRUE)  as count FROM t82, t0 CROSS JOIN vt0 ON ((((((((CASE WHEN t0.c63 THEN 0.7823720839947742 END)AND(0.9635484265337105 COLLATE BINARY)))AND(((t0.c63)||(t0.c1)))))OR(((vt0.c0) IS TRUE))))OR(((t82.c2) BETWEEN (t0.c0) AND (t0.c63)))) ORDER BY ((CASE 0.23941161437172165  WHEN 0.682651744027186 THEN t82.c2 ELSE t0.c0 END) IS FALSE) DESC  NULLS LAST, ((((0.012135320984220543)OR('~6㧐l\')))AND(((((((((t0.c1)OR(t0.c63)))OR(x'')))OR(t0.c63)))AND(t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t82, t0 CROSS JOIN vt0 ON ((((((((CASE WHEN t0.c63 THEN 0.7823720839947742 END)AND(0.9635484265337105 COLLATE BINARY)))AND(((t0.c63)||(t0.c1)))))OR(((vt0.c0) IS TRUE))))OR(((t82.c2) BETWEEN (t0.c0) AND (t0.c63)))) WHERE (((0x28ca321d COLLATE RTRIM)|((((t82.c1))<((t82.c2)))))) ORDER BY ((CASE 0.23941161437172165  WHEN 0.682651744027186 THEN t82.c2 ELSE t0.c0 END) IS FALSE) DESC  NULLS LAST, ((((0.012135320984220543)OR('~6㧐l\')))AND(((((((((t0.c1)OR(t0.c63)))OR(x'')))OR(t0.c63)))AND(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0x28ca321d COLLATE RTRIM)|((((t82.c1))<((t82.c2)))))) IS TRUE)  as count FROM t82, t0 CROSS JOIN vt0 ON ((((((((CASE WHEN t0.c63 THEN 0.7823720839947742 END)AND(0.9635484265337105 COLLATE BINARY)))AND(((t0.c63)||(t0.c1)))))OR(((vt0.c0) IS TRUE))))OR(((t82.c2) BETWEEN (t0.c0) AND (t0.c63)))) ORDER BY ((CASE 0.23941161437172165  WHEN 0.682651744027186 THEN t82.c2 ELSE t0.c0 END) IS FALSE) DESC  NULLS LAST, ((((0.012135320984220543)OR('~6㧐l\')))AND(((((((((t0.c1)OR(t0.c63)))OR(x'')))OR(t0.c63)))AND(t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t82, t0 CROSS JOIN vt0 ON ((((((((CASE WHEN t0.c63 THEN 0.7823720839947742 END)AND(0.9635484265337105 COLLATE BINARY)))AND(((t0.c63)||(t0.c1)))))OR(((vt0.c0) IS TRUE))))OR(((t82.c2) BETWEEN (t0.c0) AND (t0.c63)))) WHERE (((0x28ca321d COLLATE RTRIM)|((((t82.c1))<((t82.c2)))))) ORDER BY ((CASE 0.23941161437172165  WHEN 0.682651744027186 THEN t82.c2 ELSE t0.c0 END) IS FALSE) DESC  NULLS LAST, ((((0.012135320984220543)OR('~6㧐l\')))AND(((((((((t0.c1)OR(t0.c63)))OR(x'')))OR(t0.c63)))AND(t0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY json_type((vt0.c0 IN (vt0.c0, 0.7848019337213984))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY json_type((vt0.c0 IN (vt0.c0, 0.7848019337213984))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY json_type((vt0.c0 IN (vt0.c0, 0.7848019337213984))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY json_type((vt0.c0 IN (vt0.c0, 0.7848019337213984))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY json_type((vt0.c0 IN (vt0.c0, 0.7848019337213984))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0))>=((t0.c63))), (('') NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) IS FALSE)))<=((((t0.c0)LIKE(t0.c2)), x'' COLLATE RTRIM, ((t0.c1) NOTNULL))))) ORDER BY (~ (((t0.c2)<=(t0.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0))>=((t0.c63))), (('') NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) IS FALSE)))<=((((t0.c0)LIKE(t0.c2)), x'' COLLATE RTRIM, ((t0.c1) NOTNULL))))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c2)<=(t0.c63))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0))>=((t0.c63))), (('') NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) IS FALSE)))<=((((t0.c0)LIKE(t0.c2)), x'' COLLATE RTRIM, ((t0.c1) NOTNULL))))) ORDER BY (~ (((t0.c2)<=(t0.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0))>=((t0.c63))), (('') NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) IS FALSE)))<=((((t0.c0)LIKE(t0.c2)), x'' COLLATE RTRIM, ((t0.c1) NOTNULL))))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c2)<=(t0.c63))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0))>=((t0.c63))), (('') NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) IS FALSE)))<=((((t0.c0)LIKE(t0.c2)), x'' COLLATE RTRIM, ((t0.c1) NOTNULL))))) ORDER BY (~ (((t0.c2)<=(t0.c63))))  NULLS LAST;
SELECT * FROM t82, t0 WHERE (((((t0.c63) IS FALSE))>((((t0.c1)) NOT BETWEEN ((t82.c1)) AND ((t82.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63) IS FALSE))>((((t0.c1)) NOT BETWEEN ((t82.c1)) AND ((t82.c0)))))) IS TRUE)  as count FROM t82, t0);
SELECT * FROM t82, t0 WHERE (((((t0.c63) IS FALSE))>((((t0.c1)) NOT BETWEEN ((t82.c1)) AND ((t82.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63) IS FALSE))>((((t0.c1)) NOT BETWEEN ((t82.c1)) AND ((t82.c0)))))) IS TRUE)  as count FROM t82, t0);
SELECT * FROM t82, t0 WHERE (((((t0.c63) IS FALSE))>((((t0.c1)) NOT BETWEEN ((t82.c1)) AND ((t82.c0))))));
SELECT ALL COUNT(*) FROM t82, t0 INNER JOIN vt0 ON ((((NOT (vt0.c0))))<((((t82.c1)+(t0.c1))))) WHERE (CASE (((t82.c1, t0.c2, t82.c0))=((t0.c2, t0.c1, t82.c0)))  WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN t0.c63 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (((t82.c1, t0.c2, t82.c0))==((t0.c2, t0.c1, t82.c0)))  WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN t0.c63 COLLATE NOCASE END) IS TRUE)  as count FROM t82, t0 INNER JOIN vt0 ON ((((NOT (vt0.c0))))<((((t82.c1)+(t0.c1))))));
SELECT ALL COUNT(*) FROM t82, t0 INNER JOIN vt0 ON ((((NOT (vt0.c0))))<((((t82.c1)+(t0.c1))))) WHERE (CASE (((t82.c1, t0.c2, t82.c0))=((t0.c2, t0.c1, t82.c0)))  WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN t0.c63 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (((t82.c1, t0.c2, t82.c0))==((t0.c2, t0.c1, t82.c0)))  WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN t0.c63 COLLATE NOCASE END) IS TRUE)  as count FROM t82, t0 INNER JOIN vt0 ON ((((NOT (vt0.c0))))<((((t82.c1)+(t0.c1))))));
SELECT ALL COUNT(*) FROM t82, t0 INNER JOIN vt0 ON ((((NOT (vt0.c0))))<((((t82.c1)+(t0.c1))))) WHERE (CASE (((t82.c1, t0.c2, t82.c0))=((t0.c2, t0.c1, t82.c0)))  WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN t0.c63 COLLATE NOCASE END);
SELECT * FROM t0, t82 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE (t0.c0);
SELECT * FROM t0, t82 WHERE ((((t82.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t82.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE ((((t82.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t82.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0, t82);
SELECT * FROM t0, t82 WHERE ((((t82.c0) IS FALSE) IN ()));
SELECT * FROM vt0, t82 WHERE ((((t82.c0)) BETWEEN ((json_patch(t82.c2, vt0.c0))) AND (((((x''))<((t82.c2))))))) ORDER BY ((CAST('\ec-Nq' AS NUMERIC))>((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t82.c0)) BETWEEN ((json_patch(t82.c2, vt0.c0))) AND (((((x''))<((t82.c2))))))) IS TRUE)  as count FROM vt0, t82 ORDER BY ((CAST('\ec-Nq' AS NUMERIC))>((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0, t82 WHERE ((((t82.c0)) BETWEEN ((json_patch(t82.c2, vt0.c0))) AND (((((x''))<((t82.c2))))))) ORDER BY ((CAST('\ec-Nq' AS NUMERIC))>((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t82.c0)) BETWEEN ((json_patch(t82.c2, vt0.c0))) AND (((((x''))<((t82.c2))))))) IS TRUE)  as count FROM vt0, t82 ORDER BY ((CAST('\ec-Nq' AS NUMERIC))>((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0, t82 WHERE ((((t82.c0)) BETWEEN ((json_patch(t82.c2, vt0.c0))) AND (((((x''))<((t82.c2))))))) ORDER BY ((CAST('\ec-Nq' AS NUMERIC))>((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, t82 WHERE (((((((((CAST(t0.c0 AS NUMERIC))AND(NULL)))AND(((t0.c2)<<(t0.c1)))))AND((((t0.c63))<((vt0.c0))))))AND(((t82.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c0 AS NUMERIC))AND(NULL)))AND(((t0.c2)<<(t0.c1)))))AND((((t0.c63))<((vt0.c0))))))AND(((t82.c2) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0, vt0, t82 WHERE (((((((((CAST(t0.c0 AS NUMERIC))AND(NULL)))AND(((t0.c2)<<(t0.c1)))))AND((((t0.c63))<((vt0.c0))))))AND(((t82.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c0 AS NUMERIC))AND(NULL)))AND(((t0.c2)<<(t0.c1)))))AND((((t0.c63))<((vt0.c0))))))AND(((t82.c2) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT ALL * FROM t0, vt0, t82 WHERE (((((((((CAST(t0.c0 AS NUMERIC))AND(NULL)))AND(((t0.c2)<<(t0.c1)))))AND((((t0.c63))<((vt0.c0))))))AND(((t82.c2) IS FALSE))));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (CAST(((t82.c1)*(t0.c63)) AS INTEGER)) ORDER BY (- (((t82.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CAST(((t82.c1)*(t0.c63)) AS INTEGER)) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (- (((t82.c2) IS FALSE))));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (CAST(((t82.c1)*(t0.c63)) AS INTEGER)) ORDER BY (- (((t82.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CAST(((t82.c1)*(t0.c63)) AS INTEGER)) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (- (((t82.c2) IS FALSE))));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (CAST(((t82.c1)*(t0.c63)) AS INTEGER)) ORDER BY (- (((t82.c2) IS FALSE)));
SELECT COUNT(*) FROM t0, t82 WHERE (((CASE WHEN t0.c63 THEN t0.c1 WHEN t0.c1 THEN t82.c2 WHEN t0.c2 THEN t82.c1 WHEN t82.c1 THEN t0.c0 WHEN t82.c2 THEN t82.c0 END) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t82.c1)))) AND ((+ (t82.c2))))) ORDER BY ((('0.36784019474856733', t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, t0.c63, t0.c0)) AND ((t0.c63, t0.c1, 0.7962838671634486))) COLLATE BINARY DESC, (CASE WHEN t82.c0 THEN t0.c1 ELSE t82.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c63 THEN t0.c1 WHEN t0.c1 THEN t82.c2 WHEN t0.c2 THEN t82.c1 WHEN t82.c1 THEN t0.c0 WHEN t82.c2 THEN t82.c0 END) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t82.c1)))) AND ((+ (t82.c2))))) IS TRUE)  as count FROM t0, t82 ORDER BY ((('0.36784019474856733', t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, t0.c63, t0.c0)) AND ((t0.c63, t0.c1, 0.7962838671634486))) COLLATE BINARY DESC, (CASE WHEN t82.c0 THEN t0.c1 ELSE t82.c0 END IN ()) DESC);
SELECT COUNT(*) FROM t0, t82 WHERE (((CASE WHEN t0.c63 THEN t0.c1 WHEN t0.c1 THEN t82.c2 WHEN t0.c2 THEN t82.c1 WHEN t82.c1 THEN t0.c0 WHEN t82.c2 THEN t82.c0 END) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t82.c1)))) AND ((+ (t82.c2))))) ORDER BY ((('0.36784019474856733', t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, t0.c63, t0.c0)) AND ((t0.c63, t0.c1, 0.7962838671634486))) COLLATE BINARY DESC, (CASE WHEN t82.c0 THEN t0.c1 ELSE t82.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c63 THEN t0.c1 WHEN t0.c1 THEN t82.c2 WHEN t0.c2 THEN t82.c1 WHEN t82.c1 THEN t0.c0 WHEN t82.c2 THEN t82.c0 END) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t82.c1)))) AND ((+ (t82.c2))))) IS TRUE)  as count FROM t0, t82 ORDER BY ((('0.36784019474856733', t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, t0.c63, t0.c0)) AND ((t0.c63, t0.c1, 0.7962838671634486))) COLLATE BINARY DESC, (CASE WHEN t82.c0 THEN t0.c1 ELSE t82.c0 END IN ()) DESC);
SELECT COUNT(*) FROM t0, t82 WHERE (((CASE WHEN t0.c63 THEN t0.c1 WHEN t0.c1 THEN t82.c2 WHEN t0.c2 THEN t82.c1 WHEN t82.c1 THEN t0.c0 WHEN t82.c2 THEN t82.c0 END) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t82.c1)))) AND ((+ (t82.c2))))) ORDER BY ((('0.36784019474856733', t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, t0.c63, t0.c0)) AND ((t0.c63, t0.c1, 0.7962838671634486))) COLLATE BINARY DESC, (CASE WHEN t82.c0 THEN t0.c1 ELSE t82.c0 END IN ()) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1))>=((t0.c0))))*(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))) ORDER BY 'iꂃ{K' ASC, (t0.c63 IN (((((t0.c0)AND(t0.c63)))AND(NULL)), (NOT (t0.c2)), 0.09588813224369463)) ASC  NULLS FIRST, ((((599231939)OR(((t0.c0)==(0.8579942948027709)))))OR(((t0.c0)%(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1))>=((t0.c0))))*(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY 'iꂃ{K' ASC, (t0.c63 IN (((((t0.c0)AND(t0.c63)))AND(NULL)), (NOT (t0.c2)), 0.09588813224369463)) ASC  NULLS FIRST, ((((599231939)OR(((t0.c0)==(0.8579942948027709)))))OR(((t0.c0)%(t0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1))>=((t0.c0))))*(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))) ORDER BY 'iꂃ{K' ASC, (t0.c63 IN (((((t0.c0)AND(t0.c63)))AND(NULL)), (NOT (t0.c2)), 0.09588813224369463)) ASC  NULLS FIRST, ((((599231939)OR(((t0.c0)==(0.8579942948027709)))))OR(((t0.c0)%(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1))>=((t0.c0))))*(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY 'iꂃ{K' ASC, (t0.c63 IN (((((t0.c0)AND(t0.c63)))AND(NULL)), (NOT (t0.c2)), 0.09588813224369463)) ASC  NULLS FIRST, ((((599231939)OR(((t0.c0)==(0.8579942948027709)))))OR(((t0.c0)%(t0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1))>=((t0.c0))))*(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))) ORDER BY 'iꂃ{K' ASC, (t0.c63 IN (((((t0.c0)AND(t0.c63)))AND(NULL)), (NOT (t0.c2)), 0.09588813224369463)) ASC  NULLS FIRST, ((((599231939)OR(((t0.c0)==(0.8579942948027709)))))OR(((t0.c0)%(t0.c2)))) ASC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (highlight(t0.c0, t0.c2, t0.c1, t0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((highlight(t0.c0, t0.c2, t0.c1, t0.c1) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (highlight(t0.c0, t0.c2, t0.c1, t0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((highlight(t0.c0, t0.c2, t0.c1, t0.c1) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (highlight(t0.c0, t0.c2, t0.c1, t0.c1) COLLATE BINARY);
SELECT ALL * FROM t82 WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE (t82.c1);
SELECT SUM(count) FROM (SELECT ALL ((t82.c1) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE (t82.c1);
SELECT * FROM vt0 WHERE ('z|''\*B');
SELECT SUM(count) FROM (SELECT ALL (('z|''\*B') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('z|''\*B');
SELECT SUM(count) FROM (SELECT ALL (('z|''\*B') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('z|''\*B');
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c0)OR(t0.c0)))OR(t0.c63)))AND(t0.c1)))OR(t0.c0))) BETWEEN (((t0.c1)<<(t0.c63))) AND (((t0.c2)+(x'5863'))))) ORDER BY ((((t0.c0) ISNULL))<(TIME(t0.c2, vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((t0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c63)))AND(t0.c1)))OR(t0.c0))) BETWEEN (((t0.c1)<<(t0.c63))) AND (((t0.c2)+(x'5863'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0) ISNULL))<(TIME(t0.c2, vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((t0.c0) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c0)OR(t0.c0)))OR(t0.c63)))AND(t0.c1)))OR(t0.c0))) BETWEEN (((t0.c1)<<(t0.c63))) AND (((t0.c2)+(x'5863'))))) ORDER BY ((((t0.c0) ISNULL))<(TIME(t0.c2, vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((t0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c63)))AND(t0.c1)))OR(t0.c0))) BETWEEN (((t0.c1)<<(t0.c63))) AND (((t0.c2)+(x'5863'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0) ISNULL))<(TIME(t0.c2, vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((t0.c0) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c0)OR(t0.c0)))OR(t0.c63)))AND(t0.c1)))OR(t0.c0))) BETWEEN (((t0.c1)<<(t0.c63))) AND (((t0.c2)+(x'5863'))))) ORDER BY ((((t0.c0) ISNULL))<(TIME(t0.c2, vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((t0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON t82.c2 CROSS JOIN t82 ON ((((t0.c1) IS TRUE))==((~ (t0.c0)))) WHERE (CASE ((((t0.c0)OR(419583605)))OR(t0.c0))  WHEN ('Wp' IN ()) THEN ABS(DISTINCT NULL) WHEN ((t82.c2)*(vt0.c0)) THEN ((t82.c1)+(x'')) WHEN '	''r\r鉔,!' THEN NULL COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)OR(419583605)))OR(t0.c0))  WHEN ('Wp' IN ()) THEN ABS(DISTINCT NULL) WHEN ((t82.c2)*(vt0.c0)) THEN ((t82.c1)+(x'')) WHEN '	''r\r鉔,!' THEN NULL COLLATE RTRIM END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t82.c2 CROSS JOIN t82 ON ((((t0.c1) IS TRUE))=((~ (t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON t82.c2 CROSS JOIN t82 ON ((((t0.c1) IS TRUE))==((~ (t0.c0)))) WHERE (CASE ((((t0.c0)OR(419583605)))OR(t0.c0))  WHEN ('Wp' IN ()) THEN ABS(DISTINCT NULL) WHEN ((t82.c2)*(vt0.c0)) THEN ((t82.c1)+(x'')) WHEN '	''r\r鉔,!' THEN NULL COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)OR(419583605)))OR(t0.c0))  WHEN ('Wp' IN ()) THEN ABS(DISTINCT NULL) WHEN ((t82.c2)*(vt0.c0)) THEN ((t82.c1)+(x'')) WHEN '	''r\r鉔,!' THEN NULL COLLATE RTRIM END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t82.c2 CROSS JOIN t82 ON ((((t0.c1) IS TRUE))=((~ (t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON t82.c2 CROSS JOIN t82 ON ((((t0.c1) IS TRUE))==((~ (t0.c0)))) WHERE (CASE ((((t0.c0)OR(419583605)))OR(t0.c0))  WHEN ('Wp' IN ()) THEN ABS(DISTINCT NULL) WHEN ((t82.c2)*(vt0.c0)) THEN ((t82.c1)+(x'')) WHEN '	''r\r鉔,!' THEN NULL COLLATE RTRIM END);
SELECT * FROM vt0 LEFT OUTER JOIN t82 ON LIKE(((t82.c2)<<(t82.c0)), vt0.c0, '6') WHERE (((((((((CAST(t82.c0 AS TEXT))OR(CAST(t82.c1 AS BLOB))))OR(((((t82.c1)OR('-1146424808')))AND(NULL)))))OR(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 WHEN t82.c0 THEN vt0.c0 WHEN t82.c1 THEN t82.c0 END)))OR(t82.c1))) ORDER BY (('') IS TRUE) DESC  NULLS FIRST, (((t82.c2, t82.c2, t82.c1)) BETWEEN ((NULL, t82.c0 COLLATE NOCASE, ((t82.c2)|(t82.c1)))) AND ((CASE WHEN vt0.c0 THEN t82.c2 END, ((((((((t82.c0)OR(t82.c0)))AND(t82.c1)))OR(vt0.c0)))OR(t82.c1)), 'Of'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t82.c0 AS TEXT))OR(CAST(t82.c1 AS BLOB))))OR(((((t82.c1)OR('-1146424808')))AND(NULL)))))OR(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 WHEN t82.c0 THEN vt0.c0 WHEN t82.c1 THEN t82.c0 END)))OR(t82.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t82 ON LIKE(((t82.c2)<<(t82.c0)), vt0.c0, '6') ORDER BY (('') IS TRUE) DESC  NULLS FIRST, (((t82.c2, t82.c2, t82.c1)) BETWEEN ((NULL, t82.c0 COLLATE NOCASE, ((t82.c2)|(t82.c1)))) AND ((CASE WHEN vt0.c0 THEN t82.c2 END, ((((((((t82.c0)OR(t82.c0)))AND(t82.c1)))OR(vt0.c0)))OR(t82.c1)), 'Of'))) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN t82 ON LIKE(((t82.c2)<<(t82.c0)), vt0.c0, '6') WHERE (((((((((CAST(t82.c0 AS TEXT))OR(CAST(t82.c1 AS BLOB))))OR(((((t82.c1)OR('-1146424808')))AND(NULL)))))OR(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 WHEN t82.c0 THEN vt0.c0 WHEN t82.c1 THEN t82.c0 END)))OR(t82.c1))) ORDER BY (('') IS TRUE) DESC  NULLS FIRST, (((t82.c2, t82.c2, t82.c1)) BETWEEN ((NULL, t82.c0 COLLATE NOCASE, ((t82.c2)|(t82.c1)))) AND ((CASE WHEN vt0.c0 THEN t82.c2 END, ((((((((t82.c0)OR(t82.c0)))AND(t82.c1)))OR(vt0.c0)))OR(t82.c1)), 'Of'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t82.c0 AS TEXT))OR(CAST(t82.c1 AS BLOB))))OR(((((t82.c1)OR('-1146424808')))AND(NULL)))))OR(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 WHEN t82.c0 THEN vt0.c0 WHEN t82.c1 THEN t82.c0 END)))OR(t82.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t82 ON LIKE(((t82.c2)<<(t82.c0)), vt0.c0, '6') ORDER BY (('') IS TRUE) DESC  NULLS FIRST, (((t82.c2, t82.c2, t82.c1)) BETWEEN ((NULL, t82.c0 COLLATE NOCASE, ((t82.c2)|(t82.c1)))) AND ((CASE WHEN vt0.c0 THEN t82.c2 END, ((((((((t82.c0)OR(t82.c0)))AND(t82.c1)))OR(vt0.c0)))OR(t82.c1)), 'Of'))) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN t82 ON LIKE(((t82.c2)<<(t82.c0)), vt0.c0, '6') WHERE (((((((((CAST(t82.c0 AS TEXT))OR(CAST(t82.c1 AS BLOB))))OR(((((t82.c1)OR('-1146424808')))AND(NULL)))))OR(CASE t82.c0  WHEN t82.c2 THEN vt0.c0 WHEN t82.c0 THEN vt0.c0 WHEN t82.c1 THEN t82.c0 END)))OR(t82.c1))) ORDER BY (('') IS TRUE) DESC  NULLS FIRST, (((t82.c2, t82.c2, t82.c1)) BETWEEN ((NULL, t82.c0 COLLATE NOCASE, ((t82.c2)|(t82.c1)))) AND ((CASE WHEN vt0.c0 THEN t82.c2 END, ((((((((t82.c0)OR(t82.c0)))AND(t82.c1)))OR(vt0.c0)))OR(t82.c1)), 'Of'))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ROUND((((vt0.c0, NULL, t0.c1))<=((t0.c63, t0.c2, t0.c0))), ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c63)))  NULLS FIRST, ((((x'cf29') NOTNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ROUND((((vt0.c0, NULL, t0.c1))<=((t0.c63, t0.c2, t0.c0))), ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c63)))  NULLS FIRST, ((((x'cf29') NOTNULL)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ROUND((((vt0.c0, NULL, t0.c1))<=((t0.c63, t0.c2, t0.c0))), ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c63)))  NULLS FIRST, ((((x'cf29') NOTNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ROUND((((vt0.c0, NULL, t0.c1))<=((t0.c63, t0.c2, t0.c0))), ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c63)))  NULLS FIRST, ((((x'cf29') NOTNULL)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ROUND((((vt0.c0, NULL, t0.c1))<=((t0.c63, t0.c2, t0.c0))), ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c63)))  NULLS FIRST, ((((x'cf29') NOTNULL)) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((((vt0.c0))=((t0.c0))))AND(((((vt0.c0)OR(t0.c63)))AND(t0.c63)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c63 END));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((vt0.c0))=((t0.c0))))AND(((((vt0.c0)OR(t0.c63)))AND(t0.c63)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c63 END)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((((vt0.c0))=((t0.c0))))AND(((((vt0.c0)OR(t0.c63)))AND(t0.c63)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c63 END));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((vt0.c0))=((t0.c0))))AND(((((vt0.c0)OR(t0.c63)))AND(t0.c63)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c63 END)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((((vt0.c0))=((t0.c0))))AND(((((vt0.c0)OR(t0.c63)))AND(t0.c63)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c63 END));
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t82.c0)))|(((((NULL)OR(t0.c2)))OR(x''))))) ORDER BY (((((t0.c63)) BETWEEN ((t82.c0)) AND ((vt0.c0)))) BETWEEN ((t82.c1 IN (t82.c1))) AND ((((t0.c1, t0.c0, t82.c0))>=((t0.c1, t82.c2, t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c0) AND (t82.c0)))|(((((NULL)OR(t0.c2)))OR(x''))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY (((((t0.c63)) BETWEEN ((t82.c0)) AND ((vt0.c0)))) BETWEEN ((t82.c1 IN (t82.c1))) AND ((((t0.c1, t0.c0, t82.c0))>=((t0.c1, t82.c2, t0.c1))))));
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t82.c0)))|(((((NULL)OR(t0.c2)))OR(x''))))) ORDER BY (((((t0.c63)) BETWEEN ((t82.c0)) AND ((vt0.c0)))) BETWEEN ((t82.c1 IN (t82.c1))) AND ((((t0.c1, t0.c0, t82.c0))>=((t0.c1, t82.c2, t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c0) AND (t82.c0)))|(((((NULL)OR(t0.c2)))OR(x''))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY (((((t0.c63)) BETWEEN ((t82.c0)) AND ((vt0.c0)))) BETWEEN ((t82.c1 IN (t82.c1))) AND ((((t0.c1, t0.c0, t82.c0))>=((t0.c1, t82.c2, t0.c1))))));
SELECT ALL * FROM t0, vt0, t82 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t82.c0)))|(((((NULL)OR(t0.c2)))OR(x''))))) ORDER BY (((((t0.c63)) BETWEEN ((t82.c0)) AND ((vt0.c0)))) BETWEEN ((t82.c1 IN (t82.c1))) AND ((((t0.c1, t0.c0, t82.c0))>=((t0.c1, t82.c2, t0.c1)))));
SELECT COUNT(*) FROM t82, vt0 INNER JOIN t0 ON CAST(CASE WHEN 0.9081830673827438 THEN t82.c2 WHEN t0.c63 THEN vt0.c0 WHEN -1823197555 THEN 'q-' END AS INTEGER) WHERE ((((t0.c2, t0.c63, t82.c1))==((t82.c2, x'4db9', t82.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c63, t82.c1))==((t82.c2, x'4db9', t82.c0))) COLLATE BINARY) IS TRUE)  as count FROM t82, vt0 INNER JOIN t0 ON CAST(CASE WHEN 0.9081830673827438 THEN t82.c2 WHEN t0.c63 THEN vt0.c0 WHEN -1823197555 THEN 'q-' END AS INTEGER));
SELECT COUNT(*) FROM t82, vt0 INNER JOIN t0 ON CAST(CASE WHEN 0.9081830673827438 THEN t82.c2 WHEN t0.c63 THEN vt0.c0 WHEN -1823197555 THEN 'q-' END AS INTEGER) WHERE ((((t0.c2, t0.c63, t82.c1))==((t82.c2, x'4db9', t82.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c63, t82.c1))==((t82.c2, x'4db9', t82.c0))) COLLATE BINARY) IS TRUE)  as count FROM t82, vt0 INNER JOIN t0 ON CAST(CASE WHEN 0.9081830673827438 THEN t82.c2 WHEN t0.c63 THEN vt0.c0 WHEN -1823197555 THEN 'q-' END AS INTEGER));
SELECT COUNT(*) FROM t82, vt0 INNER JOIN t0 ON CAST(CASE WHEN 0.9081830673827438 THEN t82.c2 WHEN t0.c63 THEN vt0.c0 WHEN -1823197555 THEN 'q-' END AS INTEGER) WHERE ((((t0.c2, t0.c63, t82.c1))==((t82.c2, x'4db9', t82.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT NULL)) IS TRUE));
SELECT COUNT(*) FROM t82 WHERE (((((((t82.c0)IS NOT(t82.c2)))OR(t82.c2)))AND(((t82.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t82.c0)IS NOT(t82.c2)))OR(t82.c2)))AND(((t82.c0) NOTNULL)))) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (((((((t82.c0)IS NOT(t82.c2)))OR(t82.c2)))AND(((t82.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t82.c0)IS NOT(t82.c2)))OR(t82.c2)))AND(((t82.c0) NOTNULL)))) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (((((((t82.c0)IS NOT(t82.c2)))OR(t82.c2)))AND(((t82.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN ()))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, '㼹5', -1.836502326E9))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, '㼹5', -1.836502326E9))) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN ()))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, '㼹5', -1.836502326E9))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, '㼹5', -1.836502326E9))) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN ()))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, '㼹5', -1.836502326E9))) AS REAL)  NULLS LAST;
SELECT * FROM t82, vt0 WHERE (((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(NULLIF(0.23864847041881776, t82.c1))))AND(CAST(t82.c2 AS REAL)))) ORDER BY CAST((((vt0.c0)) BETWEEN ((t82.c1)) AND ((t82.c2))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(NULLIF(0.23864847041881776, t82.c1))))AND(CAST(t82.c2 AS REAL)))) IS TRUE)  as count FROM t82, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((t82.c1)) AND ((t82.c2))) AS INTEGER));
SELECT * FROM t82, vt0 WHERE (((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(NULLIF(0.23864847041881776, t82.c1))))AND(CAST(t82.c2 AS REAL)))) ORDER BY CAST((((vt0.c0)) BETWEEN ((t82.c1)) AND ((t82.c2))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(NULLIF(0.23864847041881776, t82.c1))))AND(CAST(t82.c2 AS REAL)))) IS TRUE)  as count FROM t82, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((t82.c1)) AND ((t82.c2))) AS INTEGER));
SELECT * FROM t82, vt0 WHERE (((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(NULLIF(0.23864847041881776, t82.c1))))AND(CAST(t82.c2 AS REAL)))) ORDER BY CAST((((vt0.c0)) BETWEEN ((t82.c1)) AND ((t82.c2))) AS INTEGER);
SELECT COUNT(*) FROM t0, t82, vt0 WHERE (0x4979d29) ORDER BY t0.c0  NULLS LAST, (~ (t82.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((0X4979d29) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY t0.c0  NULLS LAST, (~ (t82.c1)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0, t82, vt0 WHERE (0x4979d29) ORDER BY t0.c0  NULLS LAST, (~ (t82.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((0X4979d29) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY t0.c0  NULLS LAST, (~ (t82.c1)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0, t82, vt0 WHERE (0x4979d29) ORDER BY t0.c0  NULLS LAST, (~ (t82.c1)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM t0 WHERE ('-873443163');
SELECT SUM(count) FROM (SELECT (('-873443163') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('-873443163');
SELECT SUM(count) FROM (SELECT (('-873443163') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('-873443163');
SELECT * FROM t82, t0, vt0 WHERE (((((CAST(t82.c0 AS NUMERIC))OR((t82.c1 IN ()))))OR(((((((((t82.c2)OR(t82.c2)))OR(0.4098611242755714)))AND(vt0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t82.c0 AS NUMERIC))OR((t82.c1 IN ()))))OR(((((((((t82.c2)OR(t82.c2)))OR(0.4098611242755714)))AND(vt0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t82, t0, vt0);
SELECT * FROM t82, t0, vt0 WHERE (((((CAST(t82.c0 AS NUMERIC))OR((t82.c1 IN ()))))OR(((((((((t82.c2)OR(t82.c2)))OR(0.4098611242755714)))AND(vt0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t82.c0 AS NUMERIC))OR((t82.c1 IN ()))))OR(((((((((t82.c2)OR(t82.c2)))OR(0.4098611242755714)))AND(vt0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t82, t0, vt0);
SELECT * FROM t82, t0, vt0 WHERE (((((CAST(t82.c0 AS NUMERIC))OR((t82.c1 IN ()))))OR(((((((((t82.c2)OR(t82.c2)))OR(0.4098611242755714)))AND(vt0.c0)))AND(t0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.7529379102349077))>=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.5542515267326502))))) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) ELSE ((vt0.c0)>=(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TRIM(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.7529379102349077))>=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.5542515267326502))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) ELSE ((vt0.c0)>=(vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.7529379102349077))>=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.5542515267326502))))) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) ELSE ((vt0.c0)>=(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TRIM(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.7529379102349077))>=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.5542515267326502))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) ELSE ((vt0.c0)>=(vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.7529379102349077))>=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.5542515267326502))))) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) ELSE ((vt0.c0)>=(vt0.c0)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((((~ (vt0.c0)))AND(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))AND(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((((~ (vt0.c0)))AND(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))AND(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t82, t0);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE ((((~ (vt0.c0)))AND(t0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c63)))!=((t0.c0 IN (t0.c2)))) WHERE (((t0.c2 COLLATE BINARY)&(vt0.c0))) ORDER BY ((((t0.c2)+(t0.c0)))<=(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)))) ASC  NULLS LAST, ((UNLIKELY(vt0.c0))!=(((t0.c2) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY)&(vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c63)))<>((t0.c0 IN (t0.c2)))) ORDER BY ((((t0.c2)+(t0.c0)))<=(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)))) ASC  NULLS LAST, ((UNLIKELY(vt0.c0))!=(((t0.c2) ISNULL))) DESC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c63)))!=((t0.c0 IN (t0.c2)))) WHERE (((t0.c2 COLLATE BINARY)&(vt0.c0))) ORDER BY ((((t0.c2)+(t0.c0)))<=(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)))) ASC  NULLS LAST, ((UNLIKELY(vt0.c0))!=(((t0.c2) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY)&(vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c63)))<>((t0.c0 IN (t0.c2)))) ORDER BY ((((t0.c2)+(t0.c0)))<=(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)))) ASC  NULLS LAST, ((UNLIKELY(vt0.c0))!=(((t0.c2) ISNULL))) DESC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c63)))!=((t0.c0 IN (t0.c2)))) WHERE (((t0.c2 COLLATE BINARY)&(vt0.c0))) ORDER BY ((((t0.c2)+(t0.c0)))<=(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)))) ASC  NULLS LAST, ((UNLIKELY(vt0.c0))!=(((t0.c2) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM t82, t0 WHERE (CASE ((t0.c2)>(t82.c0))  WHEN 0.015914431252698646 THEN t0.c2 END) ORDER BY COALESCE(DISTINCT (NOT (t0.c63)), (t82.c1 IN (t0.c2)), (t0.c2 IN ()), CAST(t82.c1 AS BLOB)) DESC  NULLS FIRST, CAST(((t0.c1) IS FALSE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2)>(t82.c0))  WHEN 0.015914431252698646 THEN t0.c2 END) IS TRUE)  as count FROM t82, t0 ORDER BY COALESCE(DISTINCT (NOT (t0.c63)), (t82.c1 IN (t0.c2)), (t0.c2 IN ()), CAST(t82.c1 AS BLOB)) DESC  NULLS FIRST, CAST(((t0.c1) IS FALSE) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t82, t0 WHERE (CASE ((t0.c2)>(t82.c0))  WHEN 0.015914431252698646 THEN t0.c2 END) ORDER BY COALESCE(DISTINCT (NOT (t0.c63)), (t82.c1 IN (t0.c2)), (t0.c2 IN ()), CAST(t82.c1 AS BLOB)) DESC  NULLS FIRST, CAST(((t0.c1) IS FALSE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2)>(t82.c0))  WHEN 0.015914431252698646 THEN t0.c2 END) IS TRUE)  as count FROM t82, t0 ORDER BY COALESCE(DISTINCT (NOT (t0.c63)), (t82.c1 IN (t0.c2)), (t0.c2 IN ()), CAST(t82.c1 AS BLOB)) DESC  NULLS FIRST, CAST(((t0.c1) IS FALSE) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t82, t0 WHERE (CASE ((t0.c2)>(t82.c0))  WHEN 0.015914431252698646 THEN t0.c2 END) ORDER BY COALESCE(DISTINCT (NOT (t0.c63)), (t82.c1 IN (t0.c2)), (t0.c2 IN ()), CAST(t82.c1 AS BLOB)) DESC  NULLS FIRST, CAST(((t0.c1) IS FALSE) AS REAL)  NULLS LAST;
SELECT * FROM t0, vt0 NOT INDEXED WHERE (CASE t0.c1 COLLATE BINARY  WHEN NULL THEN CAST(t0.c1 AS NUMERIC) ELSE t0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c1 COLLATE BINARY  WHEN NULL THEN CAST(t0.c1 AS NUMERIC) ELSE t0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 NOT INDEXED WHERE (CASE t0.c1 COLLATE BINARY  WHEN NULL THEN CAST(t0.c1 AS NUMERIC) ELSE t0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c1 COLLATE BINARY  WHEN NULL THEN CAST(t0.c1 AS NUMERIC) ELSE t0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 NOT INDEXED WHERE (CASE t0.c1 COLLATE BINARY  WHEN NULL THEN CAST(t0.c1 AS NUMERIC) ELSE t0.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM t82 INDEXED BY i48, t0 WHERE ((((t0.c1 IN ()))|(CASE '-1026182192'  WHEN t0.c0 THEN t82.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ()))|(CASE '-1026182192'  WHEN t0.c0 THEN t82.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t82 INDEXED BY i48, t0);
SELECT COUNT(*) FROM t82 INDEXED BY i48, t0 WHERE ((((t0.c1 IN ()))|(CASE '-1026182192'  WHEN t0.c0 THEN t82.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ()))|(CASE '-1026182192'  WHEN t0.c0 THEN t82.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t82 INDEXED BY i48, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c2) ORDER BY ((((t0.c63)-(vt0.c0))) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST, (((t0.c1 IN ()))-(0.3717701770459608))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63)-(vt0.c0))) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST, (((t0.c1 IN ()))-(0.3717701770459608))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (t0.c2) ORDER BY ((((t0.c63)-(vt0.c0))) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST, (((t0.c1 IN ()))-(0.3717701770459608))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63)-(vt0.c0))) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST, (((t0.c1 IN ()))-(0.3717701770459608))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (t0.c2) ORDER BY ((((t0.c63)-(vt0.c0))) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST, (((t0.c1 IN ()))-(0.3717701770459608))  NULLS LAST;
SELECT ALL * FROM t82, vt0 WHERE ((((((t82.c1))!=((t82.c2))))&((t82.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1))<>((t82.c2))))&((t82.c1 IN ())))) IS TRUE)  as count FROM t82, vt0);
SELECT ALL * FROM t82, vt0 WHERE ((((((t82.c1))!=((t82.c2))))&((t82.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t82.c1))<>((t82.c2))))&((t82.c1 IN ())))) IS TRUE)  as count FROM t82, vt0);
SELECT ALL * FROM t82, vt0 WHERE ((((((t82.c1))!=((t82.c2))))&((t82.c1 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM t82, t0, vt0 WHERE (((((t82.c1 COLLATE NOCASE)AND((t82.c2 IN (t0.c63)))))AND(CAST(t82.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t82.c1 COLLATE NOCASE)AND((t82.c2 IN (t0.c63)))))AND(CAST(t82.c2 AS NUMERIC)))) IS TRUE)  as count FROM t82, t0, vt0);
SELECT COUNT(*) FROM t82, t0, vt0 WHERE (((((t82.c1 COLLATE NOCASE)AND((t82.c2 IN (t0.c63)))))AND(CAST(t82.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t82.c1 COLLATE NOCASE)AND((t82.c2 IN (t0.c63)))))AND(CAST(t82.c2 AS NUMERIC)))) IS TRUE)  as count FROM t82, t0, vt0);
SELECT COUNT(*) FROM t82, t0, vt0 WHERE (((((t82.c1 COLLATE NOCASE)AND((t82.c2 IN (t0.c63)))))AND(CAST(t82.c2 AS NUMERIC))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((CASE t82.c2  WHEN t0.c63 THEN t0.c1 ELSE t82.c0 END)<<(((t82.c0)<(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t82.c2  WHEN t0.c63 THEN t0.c1 ELSE t82.c0 END)<<(((t82.c0)<(t82.c0))))) IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((CASE t82.c2  WHEN t0.c63 THEN t0.c1 ELSE t82.c0 END)<<(((t82.c0)<(t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t82.c2  WHEN t0.c63 THEN t0.c1 ELSE t82.c0 END)<<(((t82.c0)<(t82.c0))))) IS TRUE)  as count FROM t0, t82);
SELECT ALL COUNT(*) FROM t0, t82 WHERE (((CASE t82.c2  WHEN t0.c63 THEN t0.c1 ELSE t82.c0 END)<<(((t82.c0)<(t82.c0)))));
SELECT * FROM t0, vt0 WHERE (CASE CAST(t0.c63 AS BLOB)  WHEN ((t0.c63) NOT NULL) THEN ((t0.c2)<=(t0.c0)) WHEN (t0.c63 IN ()) THEN CASE t0.c63  WHEN t0.c2 THEN 309080808 ELSE vt0.c0 END WHEN (vt0.c0 IN (vt0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c63) AND (NULL)) END) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c63 AS BLOB)  WHEN ((t0.c63) NOT NULL) THEN ((t0.c2)<=(t0.c0)) WHEN (t0.c63 IN ()) THEN CASE t0.c63  WHEN t0.c2 THEN 309080808 ELSE vt0.c0 END WHEN (vt0.c0 IN (vt0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c63) AND (NULL)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY '' ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CASE CAST(t0.c63 AS BLOB)  WHEN ((t0.c63) NOT NULL) THEN ((t0.c2)<=(t0.c0)) WHEN (t0.c63 IN ()) THEN CASE t0.c63  WHEN t0.c2 THEN 309080808 ELSE vt0.c0 END WHEN (vt0.c0 IN (vt0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c63) AND (NULL)) END) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c63 AS BLOB)  WHEN ((t0.c63) NOT NULL) THEN ((t0.c2)<=(t0.c0)) WHEN (t0.c63 IN ()) THEN CASE t0.c63  WHEN t0.c2 THEN 309080808 ELSE vt0.c0 END WHEN (vt0.c0 IN (vt0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c63) AND (NULL)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY '' ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CASE CAST(t0.c63 AS BLOB)  WHEN ((t0.c63) NOT NULL) THEN ((t0.c2)<=(t0.c0)) WHEN (t0.c63 IN ()) THEN CASE t0.c63  WHEN t0.c2 THEN 309080808 ELSE vt0.c0 END WHEN (vt0.c0 IN (vt0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c63) AND (NULL)) END) ORDER BY '' ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t82 WHERE (((t82.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t82.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t82);
SELECT COUNT(*) FROM vt0, t82 WHERE (((t82.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t82.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t82);
SELECT COUNT(*) FROM vt0, t82 WHERE (((t82.c0 COLLATE NOCASE) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN (t0.c63 IN ()) THEN (((t0.c2))<((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c63 IN ()) THEN (((t0.c2))<((t0.c0))) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN (t0.c63 IN ()) THEN (((t0.c2))<((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c63 IN ()) THEN (((t0.c2))<((t0.c0))) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN (t0.c63 IN ()) THEN (((t0.c2))<((t0.c0))) END);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF((((t0.c0)) NOT BETWEEN ((0.7674100184856015)) AND ((t0.c1))))) ORDER BY (((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))AND(t0.c2)))AND(t0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((t0.c0)) NOT BETWEEN ((0.7674100184856015)) AND ((t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))AND(t0.c2)))AND(t0.c2)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF((((t0.c0)) NOT BETWEEN ((0.7674100184856015)) AND ((t0.c1))))) ORDER BY (((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))AND(t0.c2)))AND(t0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((t0.c0)) NOT BETWEEN ((0.7674100184856015)) AND ((t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))AND(t0.c2)))AND(t0.c2)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF((((t0.c0)) NOT BETWEEN ((0.7674100184856015)) AND ((t0.c1))))) ORDER BY (((((((((t0.c2)OR(t0.c63)))OR(t0.c63)))AND(t0.c2)))AND(t0.c2)) IN ()) DESC  NULLS FIRST;
SELECT * FROM t0 INDEXED BY i48 WHERE ((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, '0.29739721736096847', t0.c0)) AND ((t0.c1, t0.c1, t0.c1)))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c63)))) AND ((((t0.c1))>=((t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, '0.29739721736096847', t0.c0)) AND ((t0.c1, t0.c1, t0.c1)))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c63)))) AND ((((t0.c1))>=((t0.c63)))))) IS TRUE)  as count FROM t0 INDEXED BY i48);
SELECT * FROM t0 INDEXED BY i48 WHERE ((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, '0.29739721736096847', t0.c0)) AND ((t0.c1, t0.c1, t0.c1)))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c63)))) AND ((((t0.c1))>=((t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, '0.29739721736096847', t0.c0)) AND ((t0.c1, t0.c1, t0.c1)))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c63)))) AND ((((t0.c1))>=((t0.c63)))))) IS TRUE)  as count FROM t0 INDEXED BY i48);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c1) IS TRUE))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))))OR(TRIM(t0.c0, t0.c0))))OR(t0.c2))) ORDER BY ((((t0.c2)GLOB(t0.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c1)*(-1.631901508E9)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1) IS TRUE))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))))OR(TRIM(t0.c0, t0.c0))))OR(t0.c2))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)GLOB(t0.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c1)*(-1.631901508E9)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c1) IS TRUE))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))))OR(TRIM(t0.c0, t0.c0))))OR(t0.c2))) ORDER BY ((((t0.c2)GLOB(t0.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c1)*(-1.631901508E9)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1) IS TRUE))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))))OR(TRIM(t0.c0, t0.c0))))OR(t0.c2))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)GLOB(t0.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c1)*(-1.631901508E9)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c1) IS TRUE))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c63))))))OR(TRIM(t0.c0, t0.c0))))OR(t0.c2))) ORDER BY ((((t0.c2)GLOB(t0.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c1)*(-1.631901508E9)))) DESC;
SELECT COUNT(*) FROM vt0, t82 WHERE (((((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))AND(vt0.c0)))<<(((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))AND(vt0.c0)))<<(((x'') ISNULL)))) IS TRUE)  as count FROM vt0, t82);
SELECT COUNT(*) FROM vt0, t82 WHERE (((((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))AND(vt0.c0)))<<(((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))AND(vt0.c0)))<<(((x'') ISNULL)))) IS TRUE)  as count FROM vt0, t82);
SELECT COUNT(*) FROM vt0, t82 WHERE (((((((((((vt0.c0)OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))AND(vt0.c0)))<<(((x'') ISNULL))));
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c0)AND(t82.c0)))OR(t82.c2)) IN (0x72408c6c COLLATE RTRIM))) ORDER BY t82.c2 DESC, ((t82.c0 COLLATE RTRIM) NOT BETWEEN ((((t82.c1, t82.c1, t82.c0))>=(('437478327', t82.c0, t82.c2)))) AND ((t82.c0 IN (t82.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t82.c0)AND(t82.c0)))OR(t82.c2)) IN (0X72408c6c COLLATE RTRIM))) IS TRUE)  as count FROM t82 ORDER BY t82.c2 DESC, ((t82.c0 COLLATE RTRIM) NOT BETWEEN ((((t82.c1, t82.c1, t82.c0))>=(('437478327', t82.c0, t82.c2)))) AND ((t82.c0 IN (t82.c0)))) DESC);
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c0)AND(t82.c0)))OR(t82.c2)) IN (0x72408c6c COLLATE RTRIM))) ORDER BY t82.c2 DESC, ((t82.c0 COLLATE RTRIM) NOT BETWEEN ((((t82.c1, t82.c1, t82.c0))>=(('437478327', t82.c0, t82.c2)))) AND ((t82.c0 IN (t82.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t82.c0)AND(t82.c0)))OR(t82.c2)) IN (0X72408c6c COLLATE RTRIM))) IS TRUE)  as count FROM t82 ORDER BY t82.c2 DESC, ((t82.c0 COLLATE RTRIM) NOT BETWEEN ((((t82.c1, t82.c1, t82.c0))>=(('437478327', t82.c0, t82.c2)))) AND ((t82.c0 IN (t82.c0)))) DESC);
SELECT ALL COUNT(*) FROM t82 WHERE ((((((t82.c0)AND(t82.c0)))OR(t82.c2)) IN (0x72408c6c COLLATE RTRIM))) ORDER BY t82.c2 DESC, ((t82.c0 COLLATE RTRIM) NOT BETWEEN ((((t82.c1, t82.c1, t82.c0))>=(('437478327', t82.c0, t82.c2)))) AND ((t82.c0 IN (t82.c0)))) DESC;
SELECT COUNT(*) FROM t82 WHERE ((((- (t82.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((- (t82.c1))) NOT NULL)) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE ((((- (t82.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((- (t82.c1))) NOT NULL)) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE ((((- (t82.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0))==(((vt0.c0 IN (vt0.c0)), ((vt0.c0) ISNULL), NULL)))) ORDER BY LENGTH(('''g⠯n' IN (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0))=(((vt0.c0 IN (vt0.c0)), ((vt0.c0) ISNULL), NULL)))) IS TRUE)  as count FROM vt0 ORDER BY LENGTH(('''g⠯n' IN (vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0))==(((vt0.c0 IN (vt0.c0)), ((vt0.c0) ISNULL), NULL)))) ORDER BY LENGTH(('''g⠯n' IN (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0))=(((vt0.c0 IN (vt0.c0)), ((vt0.c0) ISNULL), NULL)))) IS TRUE)  as count FROM vt0 ORDER BY LENGTH(('''g⠯n' IN (vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0))==(((vt0.c0 IN (vt0.c0)), ((vt0.c0) ISNULL), NULL)))) ORDER BY LENGTH(('''g⠯n' IN (vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (TRIM(DISTINCT t82.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t82.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, t82);
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (TRIM(DISTINCT t82.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t82.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, t82);
SELECT ALL COUNT(*) FROM vt0, t82 WHERE (TRIM(DISTINCT t82.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM t0 WHERE (((((((0X114d0031)OR('-1890296240')))AND(t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((0x114d0031)OR('-1890296240')))AND(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((0X114d0031)OR('-1890296240')))AND(t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((0x114d0031)OR('-1890296240')))AND(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((0X114d0031)OR('-1890296240')))AND(t0.c1))) IS FALSE));
SELECT COUNT(*) FROM t82 WHERE (CASE 'h'  WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN 'e*j_\nE[7' WHEN (NOT (t82.c0)) THEN ((t82.c2)>=(t82.c0)) WHEN ((t82.c1) IS TRUE) THEN ((((x'')AND(t82.c2)))OR('')) END);
SELECT SUM(count) FROM (SELECT ((CASE 'h'  WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN 'e*j_\nE[7' WHEN (NOT (t82.c0)) THEN ((t82.c2)>=(t82.c0)) WHEN ((t82.c1) IS TRUE) THEN ((((x'')AND(t82.c2)))OR('')) END) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (CASE 'h'  WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN 'e*j_\nE[7' WHEN (NOT (t82.c0)) THEN ((t82.c2)>=(t82.c0)) WHEN ((t82.c1) IS TRUE) THEN ((((x'')AND(t82.c2)))OR('')) END);
SELECT SUM(count) FROM (SELECT ((CASE 'h'  WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN 'e*j_\nE[7' WHEN (NOT (t82.c0)) THEN ((t82.c2)>=(t82.c0)) WHEN ((t82.c1) IS TRUE) THEN ((((x'')AND(t82.c2)))OR('')) END) IS TRUE)  as count FROM t82);
SELECT COUNT(*) FROM t82 WHERE (CASE 'h'  WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c1)) THEN 'e*j_\nE[7' WHEN (NOT (t82.c0)) THEN ((t82.c2)>=(t82.c0)) WHEN ((t82.c1) IS TRUE) THEN ((((x'')AND(t82.c2)))OR('')) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (QUOTE(CASE t0.c0  WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 END)) ORDER BY ((((((t0.c2)OR(t0.c63)))AND(t0.c63))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((QUOTE(CASE t0.c0  WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c2)OR(t0.c63)))AND(t0.c63))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (QUOTE(CASE t0.c0  WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 END)) ORDER BY ((((((t0.c2)OR(t0.c63)))AND(t0.c63))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((QUOTE(CASE t0.c0  WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c2)OR(t0.c63)))AND(t0.c63))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (QUOTE(CASE t0.c0  WHEN t0.c0 THEN t0.c63 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 END)) ORDER BY ((((((t0.c2)OR(t0.c63)))AND(t0.c63))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (LOWER(DISTINCT t0.c1) COLLATE NOCASE) ORDER BY CAST(((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) AS REAL), ((((NULL) BETWEEN (t0.c2) AND (t0.c63))) IS TRUE)  NULLS LAST, ((t0.c0 COLLATE RTRIM)!=(((t0.c63)||(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) AS REAL), ((((NULL) BETWEEN (t0.c2) AND (t0.c63))) IS TRUE)  NULLS LAST, ((t0.c0 COLLATE RTRIM)!=(((t0.c63)||(t0.c2)))) DESC);
SELECT ALL * FROM t0 WHERE (LOWER(DISTINCT t0.c1) COLLATE NOCASE) ORDER BY CAST(((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) AS REAL), ((((NULL) BETWEEN (t0.c2) AND (t0.c63))) IS TRUE)  NULLS LAST, ((t0.c0 COLLATE RTRIM)!=(((t0.c63)||(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) AS REAL), ((((NULL) BETWEEN (t0.c2) AND (t0.c63))) IS TRUE)  NULLS LAST, ((t0.c0 COLLATE RTRIM)!=(((t0.c63)||(t0.c2)))) DESC);
SELECT ALL * FROM t0 WHERE (LOWER(DISTINCT t0.c1) COLLATE NOCASE) ORDER BY CAST(((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) AS REAL), ((((NULL) BETWEEN (t0.c2) AND (t0.c63))) IS TRUE)  NULLS LAST, ((t0.c0 COLLATE RTRIM)!=(((t0.c63)||(t0.c2)))) DESC;
SELECT ALL * FROM t0, t82 WHERE ((CASE WHEN t0.c63 THEN t82.c0 END IN ((((''))!=((t0.c2))), ((t82.c1)-(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c63 THEN t82.c0 END IN ((((''))!=((t0.c2))), ((t82.c1)-(t0.c1))))) IS TRUE)  as count FROM t0, t82);
SELECT ALL * FROM t0, t82 WHERE ((CASE WHEN t0.c63 THEN t82.c0 END IN ((((''))!=((t0.c2))), ((t82.c1)-(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c63 THEN t82.c0 END IN ((((''))!=((t0.c2))), ((t82.c1)-(t0.c1))))) IS TRUE)  as count FROM t0, t82);
SELECT ALL * FROM t0, t82 WHERE ((CASE WHEN t0.c63 THEN t82.c0 END IN ((((''))!=((t0.c2))), ((t82.c1)-(t0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0) AND (ROUND(0.49653260421581225, vt0.c0)))) ORDER BY ((('-1741334366'))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0) AND (ROUND(0.49653260421581225, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((('-1741334366'))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0) AND (ROUND(0.49653260421581225, vt0.c0)))) ORDER BY ((('-1741334366'))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0) AND (ROUND(0.49653260421581225, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((('-1741334366'))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0) AND (ROUND(0.49653260421581225, vt0.c0)))) ORDER BY ((('-1741334366'))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t82, t0 WHERE (IFNULL(CASE WHEN t0.c0 THEN t0.c63 END, 0.24815647545063446)) ORDER BY (((~ (t0.c0)))IS NOT(((t82.c2)*('1900823478')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE WHEN t0.c0 THEN t0.c63 END, 0.24815647545063446)) IS TRUE)  as count FROM t82, t0 ORDER BY (((~ (t0.c0)))IS NOT(((t82.c2)*('1900823478')))) DESC);
SELECT ALL COUNT(*) FROM t82, t0 WHERE (IFNULL(CASE WHEN t0.c0 THEN t0.c63 END, 0.24815647545063446)) ORDER BY (((~ (t0.c0)))IS NOT(((t82.c2)*('1900823478')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE WHEN t0.c0 THEN t0.c63 END, 0.24815647545063446)) IS TRUE)  as count FROM t82, t0 ORDER BY (((~ (t0.c0)))IS NOT(((t82.c2)*('1900823478')))) DESC);
SELECT ALL COUNT(*) FROM t82, t0 WHERE (IFNULL(CASE WHEN t0.c0 THEN t0.c63 END, 0.24815647545063446)) ORDER BY (((~ (t0.c0)))IS NOT(((t82.c2)*('1900823478')))) DESC;
SELECT COUNT(*) FROM t0, t82, vt0 WHERE (t0.c2) ORDER BY ((((t82.c1)=(t0.c63)))LIKE(((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY ((((t82.c1)==(t0.c63)))LIKE(((t0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM t0, t82, vt0 WHERE (t0.c2) ORDER BY ((((t82.c1)=(t0.c63)))LIKE(((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY ((((t82.c1)==(t0.c63)))LIKE(((t0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM t0, t82, vt0 WHERE (t0.c2) ORDER BY ((((t82.c1)=(t0.c63)))LIKE(((t0.c0) IS TRUE))) DESC;
SELECT ALL * FROM t0 WHERE ((((((t0.c1))>=((t0.c2))))/(((-2.054460691E9) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))>=((t0.c2))))/(((-2.054460691E9) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c1))>=((t0.c2))))/(((-2.054460691E9) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))>=((t0.c2))))/(((-2.054460691E9) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c1))>=((t0.c2))))/(((-2.054460691E9) ISNULL))));
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((CASE WHEN t0.c63 THEN t82.c2 END)+(t82.c0))) ORDER BY (((t0.c0)) NOT BETWEEN (((((t0.c0, t82.c2, NULL, t82.c0, vt0.c0)) BETWEEN ((t0.c1, t82.c0, t82.c0, 0x21d405da, t0.c63)) AND ((t0.c63, vt0.c0, t0.c2, t82.c2, x''))))) AND ((((t82.c0)|(t0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c63 THEN t82.c2 END)+(t82.c0))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (((t0.c0)) NOT BETWEEN (((((t0.c0, t82.c2, NULL, t82.c0, vt0.c0)) BETWEEN ((t0.c1, t82.c0, t82.c0, 0x21d405da, t0.c63)) AND ((t0.c63, vt0.c0, t0.c2, t82.c2, x''))))) AND ((((t82.c0)|(t0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((CASE WHEN t0.c63 THEN t82.c2 END)+(t82.c0))) ORDER BY (((t0.c0)) NOT BETWEEN (((((t0.c0, t82.c2, NULL, t82.c0, vt0.c0)) BETWEEN ((t0.c1, t82.c0, t82.c0, 0x21d405da, t0.c63)) AND ((t0.c63, vt0.c0, t0.c2, t82.c2, x''))))) AND ((((t82.c0)|(t0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c63 THEN t82.c2 END)+(t82.c0))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY (((t0.c0)) NOT BETWEEN (((((t0.c0, t82.c2, NULL, t82.c0, vt0.c0)) BETWEEN ((t0.c1, t82.c0, t82.c0, 0x21d405da, t0.c63)) AND ((t0.c63, vt0.c0, t0.c2, t82.c2, x''))))) AND ((((t82.c0)|(t0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t82, t0 WHERE (((CASE WHEN t0.c63 THEN t82.c2 END)+(t82.c0))) ORDER BY (((t0.c0)) NOT BETWEEN (((((t0.c0, t82.c2, NULL, t82.c0, vt0.c0)) BETWEEN ((t0.c1, t82.c0, t82.c0, 0x21d405da, t0.c63)) AND ((t0.c63, vt0.c0, t0.c2, t82.c2, x''))))) AND ((((t82.c0)|(t0.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t82, vt0, t0 WHERE ((((((((t82.c2)AND(t82.c2)))OR(t0.c0)), ((t0.c2) ISNULL), t0.c63))>((t0.c1, ((t0.c2)<(0.30832072581249825)), ((((((((t0.c1)OR(t0.c63)))OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))))) ORDER BY ((((t82.c2)|(t82.c1))) IS TRUE) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))&((vt0.c0 IN ()))) DESC, TYPEOF(DISTINCT ((((((((t0.c63)AND(t82.c0)))AND(t0.c2)))AND(t82.c1)))OR(t82.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t82.c2)AND(t82.c2)))OR(t0.c0)), ((t0.c2) ISNULL), t0.c63))>((t0.c1, ((t0.c2)<(0.30832072581249825)), ((((((((t0.c1)OR(t0.c63)))OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY ((((t82.c2)|(t82.c1))) IS TRUE) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))&((vt0.c0 IN ()))) DESC, TYPEOF(DISTINCT ((((((((t0.c63)AND(t82.c0)))AND(t0.c2)))AND(t82.c1)))OR(t82.c1)))  NULLS LAST);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE ((((((((t82.c2)AND(t82.c2)))OR(t0.c0)), ((t0.c2) ISNULL), t0.c63))>((t0.c1, ((t0.c2)<(0.30832072581249825)), ((((((((t0.c1)OR(t0.c63)))OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))))) ORDER BY ((((t82.c2)|(t82.c1))) IS TRUE) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))&((vt0.c0 IN ()))) DESC, TYPEOF(DISTINCT ((((((((t0.c63)AND(t82.c0)))AND(t0.c2)))AND(t82.c1)))OR(t82.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t82.c2)AND(t82.c2)))OR(t0.c0)), ((t0.c2) ISNULL), t0.c63))>((t0.c1, ((t0.c2)<(0.30832072581249825)), ((((((((t0.c1)OR(t0.c63)))OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY ((((t82.c2)|(t82.c1))) IS TRUE) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))&((vt0.c0 IN ()))) DESC, TYPEOF(DISTINCT ((((((((t0.c63)AND(t82.c0)))AND(t0.c2)))AND(t82.c1)))OR(t82.c1)))  NULLS LAST);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE ((((((((t82.c2)AND(t82.c2)))OR(t0.c0)), ((t0.c2) ISNULL), t0.c63))>((t0.c1, ((t0.c2)<(0.30832072581249825)), ((((((((t0.c1)OR(t0.c63)))OR(t82.c2)))OR(t82.c1)))OR(t82.c1)))))) ORDER BY ((((t82.c2)|(t82.c1))) IS TRUE) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))&((vt0.c0 IN ()))) DESC, TYPEOF(DISTINCT ((((((((t0.c63)AND(t82.c0)))AND(t0.c2)))AND(t82.c1)))OR(t82.c1)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT * FROM t82 WHERE (((((((((((((t82.c0)AND(t82.c1)))OR(t82.c0)))AND(((t82.c2) BETWEEN (t82.c1) AND (t82.c0)))))AND(DATETIME(t82.c0, t82.c2, '0z', NULL, t82.c1))))OR(HEX(t82.c1))))AND(CAST(t82.c0 AS NUMERIC)))) ORDER BY (+ (((t82.c0)AND(t82.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t82.c0)AND(t82.c1)))OR(t82.c0)))AND(((t82.c2) BETWEEN (t82.c1) AND (t82.c0)))))AND(DATETIME(t82.c0, t82.c2, '0z', NULL, t82.c1))))OR(HEX(t82.c1))))AND(CAST(t82.c0 AS NUMERIC)))) IS TRUE)  as count FROM t82 ORDER BY (+ (((t82.c0)AND(t82.c0)))) ASC  NULLS LAST);
SELECT * FROM t82 WHERE (((((((((((((t82.c0)AND(t82.c1)))OR(t82.c0)))AND(((t82.c2) BETWEEN (t82.c1) AND (t82.c0)))))AND(DATETIME(t82.c0, t82.c2, '0z', NULL, t82.c1))))OR(HEX(t82.c1))))AND(CAST(t82.c0 AS NUMERIC)))) ORDER BY (+ (((t82.c0)AND(t82.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t82.c0)AND(t82.c1)))OR(t82.c0)))AND(((t82.c2) BETWEEN (t82.c1) AND (t82.c0)))))AND(DATETIME(t82.c0, t82.c2, '0z', NULL, t82.c1))))OR(HEX(t82.c1))))AND(CAST(t82.c0 AS NUMERIC)))) IS TRUE)  as count FROM t82 ORDER BY (+ (((t82.c0)AND(t82.c0)))) ASC  NULLS LAST);
SELECT * FROM t82 WHERE (((((((((((((t82.c0)AND(t82.c1)))OR(t82.c0)))AND(((t82.c2) BETWEEN (t82.c1) AND (t82.c0)))))AND(DATETIME(t82.c0, t82.c2, '0z', NULL, t82.c1))))OR(HEX(t82.c1))))AND(CAST(t82.c0 AS NUMERIC)))) ORDER BY (+ (((t82.c0)AND(t82.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t82, vt0 INNER JOIN t0 ON CASE WHEN NULL THEN json_array(0.8068550795338615, t82.c2) ELSE (((t82.c2, t0.c0, NULL))<>((t82.c1, vt0.c0, t0.c0))) END WHERE (((((t82.c0)AND(t82.c1))) NOTNULL)) ORDER BY (((vt0.c0 IN ()))!=((('') BETWEEN (t82.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t82.c0)AND(t82.c1))) NOTNULL)) IS TRUE)  as count FROM t82, vt0 INNER JOIN t0 ON CASE WHEN NULL THEN json_array(0.8068550795338615, t82.c2) ELSE (((t82.c2, t0.c0, NULL))<>((t82.c1, vt0.c0, t0.c0))) END ORDER BY (((vt0.c0 IN ()))<>((('') BETWEEN (t82.c2) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM t82, vt0 INNER JOIN t0 ON CASE WHEN NULL THEN json_array(0.8068550795338615, t82.c2) ELSE (((t82.c2, t0.c0, NULL))<>((t82.c1, vt0.c0, t0.c0))) END WHERE (((((t82.c0)AND(t82.c1))) NOTNULL)) ORDER BY (((vt0.c0 IN ()))!=((('') BETWEEN (t82.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t82.c0)AND(t82.c1))) NOTNULL)) IS TRUE)  as count FROM t82, vt0 INNER JOIN t0 ON CASE WHEN NULL THEN json_array(0.8068550795338615, t82.c2) ELSE (((t82.c2, t0.c0, NULL))<>((t82.c1, vt0.c0, t0.c0))) END ORDER BY (((vt0.c0 IN ()))<>((('') BETWEEN (t82.c2) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM t82, vt0 INNER JOIN t0 ON CASE WHEN NULL THEN json_array(0.8068550795338615, t82.c2) ELSE (((t82.c2, t0.c0, NULL))<>((t82.c1, vt0.c0, t0.c0))) END WHERE (((((t82.c0)AND(t82.c1))) NOTNULL)) ORDER BY (((vt0.c0 IN ()))!=((('') BETWEEN (t82.c2) AND (vt0.c0))));
SELECT * FROM t0, vt0, t82 WHERE ((+ (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 ELSE '-1261899403' END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 ELSE '-1261899403' END))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT * FROM t0, vt0, t82 WHERE ((+ (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 ELSE '-1261899403' END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 ELSE '-1261899403' END))) IS TRUE)  as count FROM t0, vt0, t82);
SELECT * FROM t0, vt0, t82 WHERE ((+ (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 ELSE '-1261899403' END)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c63)) AS INTEGER) RIGHT OUTER JOIN t82 ON CAST(NULL COLLATE NOCASE AS BLOB) WHERE ((((+ (t0.c2)))AND(((t0.c2) ISNULL)))) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t82.c1 WHEN vt0.c0 THEN t0.c63 WHEN t82.c1 THEN t82.c0 ELSE t0.c0 END THEN t82.c2 COLLATE NOCASE WHEN ((t82.c1)LIKE(vt0.c0)) THEN 0.3324215000873647 WHEN LIKELY(t0.c63) THEN ((t0.c63) ISNULL) END DESC, json_array(((t82.c2)!=(t82.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2)))AND(((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c63)) AS INTEGER) RIGHT OUTER JOIN t82 ON CAST(NULL COLLATE NOCASE AS BLOB) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t82.c1 WHEN vt0.c0 THEN t0.c63 WHEN t82.c1 THEN t82.c0 ELSE t0.c0 END THEN t82.c2 COLLATE NOCASE WHEN ((t82.c1)LIKE(vt0.c0)) THEN 0.3324215000873647 WHEN LIKELY(t0.c63) THEN ((t0.c63) ISNULL) END DESC, json_array(((t82.c2)!=(t82.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c1 END));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c63)) AS INTEGER) RIGHT OUTER JOIN t82 ON CAST(NULL COLLATE NOCASE AS BLOB) WHERE ((((+ (t0.c2)))AND(((t0.c2) ISNULL)))) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t82.c1 WHEN vt0.c0 THEN t0.c63 WHEN t82.c1 THEN t82.c0 ELSE t0.c0 END THEN t82.c2 COLLATE NOCASE WHEN ((t82.c1)LIKE(vt0.c0)) THEN 0.3324215000873647 WHEN LIKELY(t0.c63) THEN ((t0.c63) ISNULL) END DESC, json_array(((t82.c2)!=(t82.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2)))AND(((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c63)) AS INTEGER) RIGHT OUTER JOIN t82 ON CAST(NULL COLLATE NOCASE AS BLOB) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t82.c1 WHEN vt0.c0 THEN t0.c63 WHEN t82.c1 THEN t82.c0 ELSE t0.c0 END THEN t82.c2 COLLATE NOCASE WHEN ((t82.c1)LIKE(vt0.c0)) THEN 0.3324215000873647 WHEN LIKELY(t0.c63) THEN ((t0.c63) ISNULL) END DESC, json_array(((t82.c2)!=(t82.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c1 END));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c63)) AS INTEGER) RIGHT OUTER JOIN t82 ON CAST(NULL COLLATE NOCASE AS BLOB) WHERE ((((+ (t0.c2)))AND(((t0.c2) ISNULL)))) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t82.c1 WHEN vt0.c0 THEN t0.c63 WHEN t82.c1 THEN t82.c0 ELSE t0.c0 END THEN t82.c2 COLLATE NOCASE WHEN ((t82.c1)LIKE(vt0.c0)) THEN 0.3324215000873647 WHEN LIKELY(t0.c63) THEN ((t0.c63) ISNULL) END DESC, json_array(((t82.c2)!=(t82.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c1 END);
SELECT COUNT(*) FROM t82, vt0 WHERE (((((t82.c2)>(t82.c1)))AND((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c2)>(t82.c1)))AND((~ (vt0.c0))))) IS TRUE)  as count FROM t82, vt0);
SELECT COUNT(*) FROM t82, vt0 WHERE (((((t82.c2)>(t82.c1)))AND((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c2)>(t82.c1)))AND((~ (vt0.c0))))) IS TRUE)  as count FROM t82, vt0);
SELECT COUNT(*) FROM t82, vt0 WHERE (((((t82.c2)>(t82.c1)))AND((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c63)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c63)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c63)) AS TEXT));
SELECT ALL * FROM t82 WHERE ((- ((((t82.c2, t82.c1, t82.c0)) BETWEEN ((t82.c2, t82.c2, t82.c0)) AND ((t82.c0, -1.558758597E9, t82.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((t82.c2, t82.c1, t82.c0)) BETWEEN ((t82.c2, t82.c2, t82.c0)) AND ((t82.c0, -1.558758597E9, t82.c0)))))) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE ((- ((((t82.c2, t82.c1, t82.c0)) BETWEEN ((t82.c2, t82.c2, t82.c0)) AND ((t82.c0, -1.558758597E9, t82.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((t82.c2, t82.c1, t82.c0)) BETWEEN ((t82.c2, t82.c2, t82.c0)) AND ((t82.c0, -1.558758597E9, t82.c0)))))) IS TRUE)  as count FROM t82);
SELECT ALL * FROM t82 WHERE ((- ((((t82.c2, t82.c1, t82.c0)) BETWEEN ((t82.c2, t82.c2, t82.c0)) AND ((t82.c0, -1.558758597E9, t82.c0))))));
SELECT * FROM t0, vt0, t82 WHERE ((((((t0.c2) IS TRUE), (((-1925029108, t82.c1, t0.c1)) BETWEEN ((t0.c0, -1836411305, t82.c2)) AND ((vt0.c0, '-515574505', t82.c2))), CAST(t0.c2 AS INTEGER)))>=((((t82.c1) ISNULL), t0.c63 COLLATE BINARY, (((vt0.c0, t82.c0, t0.c0)) NOT BETWEEN ((t0.c2, t82.c2, t0.c0)) AND (('-1929524331', t0.c63, t0.c1))))))) ORDER BY (((('-685446138')AND(x'')))AND(CASE WHEN t82.c0 THEN t82.c1 ELSE 0.26730752192815366 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2) IS TRUE), (((-1925029108, t82.c1, t0.c1)) BETWEEN ((t0.c0, -1836411305, t82.c2)) AND ((vt0.c0, '-515574505', t82.c2))), CAST(t0.c2 AS INTEGER)))>=((((t82.c1) ISNULL), t0.c63 COLLATE BINARY, (((vt0.c0, t82.c0, t0.c0)) NOT BETWEEN ((t0.c2, t82.c2, t0.c0)) AND (('-1929524331', t0.c63, t0.c1))))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY (((('-685446138')AND(x'')))AND(CASE WHEN t82.c0 THEN t82.c1 ELSE 0.26730752192815366 END)) DESC  NULLS FIRST);
SELECT * FROM t0, vt0, t82 WHERE ((((((t0.c2) IS TRUE), (((-1925029108, t82.c1, t0.c1)) BETWEEN ((t0.c0, -1836411305, t82.c2)) AND ((vt0.c0, '-515574505', t82.c2))), CAST(t0.c2 AS INTEGER)))>=((((t82.c1) ISNULL), t0.c63 COLLATE BINARY, (((vt0.c0, t82.c0, t0.c0)) NOT BETWEEN ((t0.c2, t82.c2, t0.c0)) AND (('-1929524331', t0.c63, t0.c1))))))) ORDER BY (((('-685446138')AND(x'')))AND(CASE WHEN t82.c0 THEN t82.c1 ELSE 0.26730752192815366 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2) IS TRUE), (((-1925029108, t82.c1, t0.c1)) BETWEEN ((t0.c0, -1836411305, t82.c2)) AND ((vt0.c0, '-515574505', t82.c2))), CAST(t0.c2 AS INTEGER)))>=((((t82.c1) ISNULL), t0.c63 COLLATE BINARY, (((vt0.c0, t82.c0, t0.c0)) NOT BETWEEN ((t0.c2, t82.c2, t0.c0)) AND (('-1929524331', t0.c63, t0.c1))))))) IS TRUE)  as count FROM t0, vt0, t82 ORDER BY (((('-685446138')AND(x'')))AND(CASE WHEN t82.c0 THEN t82.c1 ELSE 0.26730752192815366 END)) DESC  NULLS FIRST);
SELECT * FROM t0, vt0, t82 WHERE ((((((t0.c2) IS TRUE), (((-1925029108, t82.c1, t0.c1)) BETWEEN ((t0.c0, -1836411305, t82.c2)) AND ((vt0.c0, '-515574505', t82.c2))), CAST(t0.c2 AS INTEGER)))>=((((t82.c1) ISNULL), t0.c63 COLLATE BINARY, (((vt0.c0, t82.c0, t0.c0)) NOT BETWEEN ((t0.c2, t82.c2, t0.c0)) AND (('-1929524331', t0.c63, t0.c1))))))) ORDER BY (((('-685446138')AND(x'')))AND(CASE WHEN t82.c0 THEN t82.c1 ELSE 0.26730752192815366 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t82, vt0 WHERE (RTRIM(((('2.s>}t]'))>=((t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((('2.s>}t]'))>=((t82.c0))))) IS TRUE)  as count FROM t82, vt0);
SELECT COUNT(*) FROM t82, vt0 WHERE (RTRIM(((('2.s>}t]'))>=((t82.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((('2.s>}t]'))>=((t82.c0))))) IS TRUE)  as count FROM t82, vt0);
SELECT COUNT(*) FROM t82, vt0 WHERE (RTRIM(((('2.s>}t]'))>=((t82.c0)))));
SELECT ALL * FROM t0, t82 NOT INDEXED, vt0 WHERE (CAST(((((t0.c63)AND(t0.c63)))AND(t0.c2)) AS NUMERIC)) ORDER BY (((t0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0 COLLATE BINARY, ((t82.c2)<(t82.c1)), GLOB(t0.c63, t0.c0))) AND ((((t82.c1) BETWEEN (t82.c0) AND (t82.c0)), TRIM(t82.c1), (-1741334366 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c63)AND(t0.c63)))AND(t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY (((t0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0 COLLATE BINARY, ((t82.c2)<(t82.c1)), GLOB(t0.c63, t0.c0))) AND ((((t82.c1) BETWEEN (t82.c0) AND (t82.c0)), TRIM(t82.c1), (-1741334366 IN ())))) ASC);
SELECT ALL * FROM t0, t82 NOT INDEXED, vt0 WHERE (CAST(((((t0.c63)AND(t0.c63)))AND(t0.c2)) AS NUMERIC)) ORDER BY (((t0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0 COLLATE BINARY, ((t82.c2)<(t82.c1)), GLOB(t0.c63, t0.c0))) AND ((((t82.c1) BETWEEN (t82.c0) AND (t82.c0)), TRIM(t82.c1), (-1741334366 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c63)AND(t0.c63)))AND(t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, t82, vt0 ORDER BY (((t0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0 COLLATE BINARY, ((t82.c2)<(t82.c1)), GLOB(t0.c63, t0.c0))) AND ((((t82.c1) BETWEEN (t82.c0) AND (t82.c0)), TRIM(t82.c1), (-1741334366 IN ())))) ASC);
SELECT ALL * FROM t0, t82 NOT INDEXED, vt0 WHERE (CAST(((((t0.c63)AND(t0.c63)))AND(t0.c2)) AS NUMERIC)) ORDER BY (((t0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0 COLLATE BINARY, ((t82.c2)<(t82.c1)), GLOB(t0.c63, t0.c0))) AND ((((t82.c1) BETWEEN (t82.c0) AND (t82.c0)), TRIM(t82.c1), (-1741334366 IN ())))) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t82 ON (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t82.c0) AND (t82.c0)), t82.c2 COLLATE NOCASE, CAST(t0.c63 AS TEXT))) AND (((((vt0.c0))<=((t0.c1))), '誶{', ('' IN ())))) WHERE (1.682657689E9) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((1.682657689E9) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN t82 ON (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t82.c0) AND (t82.c0)), t82.c2 COLLATE NOCASE, CAST(t0.c63 AS TEXT))) AND (((((vt0.c0))<=((t0.c1))), '誶{', ('' IN ())))) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t82 ON (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t82.c0) AND (t82.c0)), t82.c2 COLLATE NOCASE, CAST(t0.c63 AS TEXT))) AND (((((vt0.c0))<=((t0.c1))), '誶{', ('' IN ())))) WHERE (1.682657689E9) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((1.682657689E9) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN t82 ON (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t82.c0) AND (t82.c0)), t82.c2 COLLATE NOCASE, CAST(t0.c63 AS TEXT))) AND (((((vt0.c0))<=((t0.c1))), '誶{', ('' IN ())))) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN t82 ON (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t82.c0) AND (t82.c0)), t82.c2 COLLATE NOCASE, CAST(t0.c63 AS TEXT))) AND (((((vt0.c0))<=((t0.c1))), '誶{', ('' IN ())))) WHERE (1.682657689E9) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE (((t82.c1)>(((t0.c2) IS TRUE)))) ORDER BY CASE WHEN CAST(t0.c63 AS TEXT) THEN CAST(t82.c0 AS BLOB) ELSE (t82.c1 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t82.c1)>(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY CASE WHEN CAST(t0.c63 AS TEXT) THEN CAST(t82.c0 AS BLOB) ELSE (t82.c1 IN ()) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE (((t82.c1)>(((t0.c2) IS TRUE)))) ORDER BY CASE WHEN CAST(t0.c63 AS TEXT) THEN CAST(t82.c0 AS BLOB) ELSE (t82.c1 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t82.c1)>(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t82, t0 ORDER BY CASE WHEN CAST(t0.c63 AS TEXT) THEN CAST(t82.c0 AS BLOB) ELSE (t82.c1 IN ()) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t82, t0 WHERE (((t82.c1)>(((t0.c2) IS TRUE)))) ORDER BY CASE WHEN CAST(t0.c63 AS TEXT) THEN CAST(t82.c0 AS BLOB) ELSE (t82.c1 IN ()) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE ((0.8071204827741691 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.8071204827741691 IN ())) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE ((0.8071204827741691 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.8071204827741691 IN ())) IS TRUE)  as count FROM vt0, t0, t82);
SELECT ALL COUNT(*) FROM vt0, t0, t82 WHERE ((0.8071204827741691 IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c63))) IS TRUE)) ORDER BY t0.c2 ASC  NULLS LAST, UPPER(DISTINCT ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c1)))OR(t0.c63))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS LAST, UPPER(DISTINCT ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c63))) IS TRUE)) ORDER BY t0.c2 ASC  NULLS LAST, UPPER(DISTINCT ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c1)))OR(t0.c63))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS LAST, UPPER(DISTINCT ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c63))) IS TRUE)) ORDER BY t0.c2 ASC  NULLS LAST, UPPER(DISTINCT ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c63)));
SELECT ALL * FROM t82 INDEXED BY i48 CROSS JOIN vt0 ON (((('-829481399') IS TRUE))>=(CAST(t82.c0 AS INTEGER))) INNER JOIN t0 ON '163147718' WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT ((t0.c1) IS TRUE), 0.05499545524963523) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t82 INDEXED BY i48 CROSS JOIN vt0 ON (((('-829481399') IS TRUE))>=(CAST(t82.c0 AS INTEGER))) INNER JOIN t0 ON '163147718' ORDER BY LIKELIHOOD(DISTINCT ((t0.c1) IS TRUE), 0.05499545524963523) ASC  NULLS FIRST);
SELECT ALL * FROM t82 INDEXED BY i48 CROSS JOIN vt0 ON (((('-829481399') IS TRUE))>=(CAST(t82.c0 AS INTEGER))) INNER JOIN t0 ON '163147718' WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT ((t0.c1) IS TRUE), 0.05499545524963523) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t82 INDEXED BY i48 CROSS JOIN vt0 ON (((('-829481399') IS TRUE))>=(CAST(t82.c0 AS INTEGER))) INNER JOIN t0 ON '163147718' ORDER BY LIKELIHOOD(DISTINCT ((t0.c1) IS TRUE), 0.05499545524963523) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t82 WHERE (((((t82.c1)OR(t82.c2))) NOT BETWEEN (((t82.c1)/(t82.c0))) AND (((t82.c2)+(t82.c1))))) ORDER BY CASE ((t82.c0)<>(t82.c1))  WHEN ((t82.c1) IS TRUE) THEN ((t82.c0)==(t82.c1)) WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c2)) THEN CASE t82.c1  WHEN t82.c0 THEN t82.c0 END WHEN (- (t82.c0)) THEN CAST(t82.c0 AS NUMERIC) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c1)OR(t82.c2))) NOT BETWEEN (((t82.c1)/(t82.c0))) AND (((t82.c2)+(t82.c1))))) IS TRUE)  as count FROM t82 ORDER BY CASE ((t82.c0)<>(t82.c1))  WHEN ((t82.c1) IS TRUE) THEN ((t82.c0)==(t82.c1)) WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c2)) THEN CASE t82.c1  WHEN t82.c0 THEN t82.c0 END WHEN (- (t82.c0)) THEN CAST(t82.c0 AS NUMERIC) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t82 WHERE (((((t82.c1)OR(t82.c2))) NOT BETWEEN (((t82.c1)/(t82.c0))) AND (((t82.c2)+(t82.c1))))) ORDER BY CASE ((t82.c0)<>(t82.c1))  WHEN ((t82.c1) IS TRUE) THEN ((t82.c0)==(t82.c1)) WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c2)) THEN CASE t82.c1  WHEN t82.c0 THEN t82.c0 END WHEN (- (t82.c0)) THEN CAST(t82.c0 AS NUMERIC) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t82.c1)OR(t82.c2))) NOT BETWEEN (((t82.c1)/(t82.c0))) AND (((t82.c2)+(t82.c1))))) IS TRUE)  as count FROM t82 ORDER BY CASE ((t82.c0)<>(t82.c1))  WHEN ((t82.c1) IS TRUE) THEN ((t82.c0)==(t82.c1)) WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c2)) THEN CASE t82.c1  WHEN t82.c0 THEN t82.c0 END WHEN (- (t82.c0)) THEN CAST(t82.c0 AS NUMERIC) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t82 WHERE (((((t82.c1)OR(t82.c2))) NOT BETWEEN (((t82.c1)/(t82.c0))) AND (((t82.c2)+(t82.c1))))) ORDER BY CASE ((t82.c0)<>(t82.c1))  WHEN ((t82.c1) IS TRUE) THEN ((t82.c0)==(t82.c1)) WHEN ((t82.c1) NOT BETWEEN (t82.c0) AND (t82.c2)) THEN CASE t82.c1  WHEN t82.c0 THEN t82.c0 END WHEN (- (t82.c0)) THEN CAST(t82.c0 AS NUMERIC) END DESC  NULLS FIRST;
SELECT * FROM t82 CROSS JOIN t0 ON ((((((((t82.c0 COLLATE NOCASE)AND(t0.c2)))OR(CASE t82.c1  WHEN t82.c2 THEN t82.c0 ELSE t0.c0 END)))OR(((t0.c0) IS TRUE))))AND(CAST(t0.c1 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(t0.c63))) BETWEEN ((t0.c63 IN ())) AND ((NOT (t0.c1)))) WHERE (((((t0.c0)IS NOT(t82.c2))) BETWEEN (NULL) AND (t82.c1))) ORDER BY ((((t82.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c2, vt0.c0, x''))<>((t82.c0, t82.c0, t0.c1)))) AND ((NOT (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(t82.c2))) BETWEEN (NULL) AND (t82.c1))) IS TRUE)  as count FROM t82 CROSS JOIN t0 ON ((((((((t82.c0 COLLATE NOCASE)AND(t0.c2)))OR(CASE t82.c1  WHEN t82.c2 THEN t82.c0 ELSE t0.c0 END)))OR(((t0.c0) IS TRUE))))AND(CAST(t0.c1 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(t0.c63))) BETWEEN ((t0.c63 IN ())) AND ((NOT (t0.c1)))) ORDER BY ((((t82.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c2, vt0.c0, x''))<>((t82.c0, t82.c0, t0.c1)))) AND ((NOT (NULL)))) DESC);
SELECT * FROM t82 CROSS JOIN t0 ON ((((((((t82.c0 COLLATE NOCASE)AND(t0.c2)))OR(CASE t82.c1  WHEN t82.c2 THEN t82.c0 ELSE t0.c0 END)))OR(((t0.c0) IS TRUE))))AND(CAST(t0.c1 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(t0.c63))) BETWEEN ((t0.c63 IN ())) AND ((NOT (t0.c1)))) WHERE (((((t0.c0)IS NOT(t82.c2))) BETWEEN (NULL) AND (t82.c1))) ORDER BY ((((t82.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c2, vt0.c0, x''))<>((t82.c0, t82.c0, t0.c1)))) AND ((NOT (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(t82.c2))) BETWEEN (NULL) AND (t82.c1))) IS TRUE)  as count FROM t82 CROSS JOIN t0 ON ((((((((t82.c0 COLLATE NOCASE)AND(t0.c2)))OR(CASE t82.c1  WHEN t82.c2 THEN t82.c0 ELSE t0.c0 END)))OR(((t0.c0) IS TRUE))))AND(CAST(t0.c1 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(t0.c63))) BETWEEN ((t0.c63 IN ())) AND ((NOT (t0.c1)))) ORDER BY ((((t82.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c2, vt0.c0, x''))<>((t82.c0, t82.c0, t0.c1)))) AND ((NOT (NULL)))) DESC);
SELECT * FROM t82 CROSS JOIN t0 ON ((((((((t82.c0 COLLATE NOCASE)AND(t0.c2)))OR(CASE t82.c1  WHEN t82.c2 THEN t82.c0 ELSE t0.c0 END)))OR(((t0.c0) IS TRUE))))AND(CAST(t0.c1 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(t0.c63))) BETWEEN ((t0.c63 IN ())) AND ((NOT (t0.c1)))) WHERE (((((t0.c0)IS NOT(t82.c2))) BETWEEN (NULL) AND (t82.c1))) ORDER BY ((((t82.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c2, vt0.c0, x''))<>((t82.c0, t82.c0, t0.c1)))) AND ((NOT (NULL)))) DESC;
SELECT * FROM t82, vt0 WHERE (CASE WHEN ((t82.c2) BETWEEN (t82.c2) AND (t82.c0)) THEN ((t82.c1)|(t82.c2)) END) ORDER BY t82.c2 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t82.c2) BETWEEN (t82.c2) AND (t82.c0)) THEN ((t82.c1)|(t82.c2)) END) IS TRUE)  as count FROM t82, vt0 ORDER BY t82.c2 COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t82, vt0 WHERE (CASE WHEN ((t82.c2) BETWEEN (t82.c2) AND (t82.c0)) THEN ((t82.c1)|(t82.c2)) END) ORDER BY t82.c2 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t82.c2) BETWEEN (t82.c2) AND (t82.c0)) THEN ((t82.c1)|(t82.c2)) END) IS TRUE)  as count FROM t82, vt0 ORDER BY t82.c2 COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t82, vt0 WHERE (CASE WHEN ((t82.c2) BETWEEN (t82.c2) AND (t82.c0)) THEN ((t82.c1)|(t82.c2)) END) ORDER BY t82.c2 COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (- ((t0.c63 IN (t82.c0, t0.c1)))) INNER JOIN t82 ON NULLIF(((t82.c0) IS TRUE), ((t82.c0)<(t0.c1))) WHERE (CAST((t82.c0 IN (0.6274481773922105, t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((t82.c0 IN (0.6274481773922105, t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- ((t0.c63 IN (t82.c0, t0.c1)))) INNER JOIN t82 ON NULLIF(((t82.c0) IS TRUE), ((t82.c0)<(t0.c1))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (- ((t0.c63 IN (t82.c0, t0.c1)))) INNER JOIN t82 ON NULLIF(((t82.c0) IS TRUE), ((t82.c0)<(t0.c1))) WHERE (CAST((t82.c0 IN (0.6274481773922105, t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((t82.c0 IN (0.6274481773922105, t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- ((t0.c63 IN (t82.c0, t0.c1)))) INNER JOIN t82 ON NULLIF(((t82.c0) IS TRUE), ((t82.c0)<(t0.c1))));
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (NULLIF(t82.c1, t0.c0)) AND ((- (t0.c2))))) ORDER BY (~ ('y{f')), ((((((((t82.c2)AND(t82.c0)))OR(t0.c1)))AND(((t82.c2)|('')))))OR(t82.c0)) ASC  NULLS FIRST, ((((('-1747838205')) NOT BETWEEN ((t82.c1)) AND ((t0.c63)))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) NOT BETWEEN (NULLIF(t82.c1, t0.c0)) AND ((- (t0.c2))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (~ ('y{f')), ((((((((t82.c2)AND(t82.c0)))OR(t0.c1)))AND(((t82.c2)|('')))))OR(t82.c0)) ASC  NULLS FIRST, ((((('-1747838205')) NOT BETWEEN ((t82.c1)) AND ((t0.c63)))) NOT NULL) ASC);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (NULLIF(t82.c1, t0.c0)) AND ((- (t0.c2))))) ORDER BY (~ ('y{f')), ((((((((t82.c2)AND(t82.c0)))OR(t0.c1)))AND(((t82.c2)|('')))))OR(t82.c0)) ASC  NULLS FIRST, ((((('-1747838205')) NOT BETWEEN ((t82.c1)) AND ((t0.c63)))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) NOT BETWEEN (NULLIF(t82.c1, t0.c0)) AND ((- (t0.c2))))) IS TRUE)  as count FROM t82, vt0, t0 ORDER BY (~ ('y{f')), ((((((((t82.c2)AND(t82.c0)))OR(t0.c1)))AND(((t82.c2)|('')))))OR(t82.c0)) ASC  NULLS FIRST, ((((('-1747838205')) NOT BETWEEN ((t82.c1)) AND ((t0.c63)))) NOT NULL) ASC);
SELECT COUNT(*) FROM t82, vt0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (NULLIF(t82.c1, t0.c0)) AND ((- (t0.c2))))) ORDER BY (~ ('y{f')), ((((((((t82.c2)AND(t82.c0)))OR(t0.c1)))AND(((t82.c2)|('')))))OR(t82.c0)) ASC  NULLS FIRST, ((((('-1747838205')) NOT BETWEEN ((t82.c1)) AND ((t0.c63)))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM t82 WHERE ((((0Xffffffffd92d447b))<((t82.c1))));
SELECT SUM(count) FROM (SELECT (((((0xffffffffd92d447b))<((t82.c1)))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE ((((0Xffffffffd92d447b))<((t82.c1))));
SELECT SUM(count) FROM (SELECT (((((0xffffffffd92d447b))<((t82.c1)))) IS TRUE)  as count FROM t82);
SELECT ALL COUNT(*) FROM t82 WHERE ((((0Xffffffffd92d447b))<((t82.c1))));
