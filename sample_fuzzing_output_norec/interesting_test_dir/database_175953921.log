-- Time: 2024/06/11 15:08:47
-- Database: database21
-- Database version: 3.40.0
-- seed value: 175953921
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET c1=x'', c0=-54085760 WHERE CASE WHEN CAST(vt0.c1 AS TEXT) THEN ((0.4948682011772596)GLOB('')) END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES (0.41804442491715443, x''); -- 0ms;
INSERT OR FAIL INTO vt0(c0, c2) VALUES (NULL, x'ce144cc9d879'); -- 0ms;
UPDATE OR ABORT vt0 SET (c1, c2, c1)=(0Xffffffffe887bd41, x'', '뵁~NJj85'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(6.141128275614083E-4); -- 1ms;
INSERT OR IGNORE INTO vt0(c2) VALUES ('란wF1v7uq'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c2, c1)=(NULL, 0xfffffffffd2e4a59) WHERE (+ (vt0.c1)); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c2='8䩙횋\r<H晔sP'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT ((((SQLITE_VERSION())OR(((vt0.c2) ISNULL))))AND(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END)), AVG((+ (vt0.c2))) OVER ( ORDER BY ((((vt0.c2)IS NOT(vt0.c0))) IS FALSE) ASC), CAST(MIN(vt0.c1) AS BLOB) FROM vt0 WHERE ((((((('-825836186')AND(x'')))AND(0x66fd10cd)))==(((-705025072) NOT BETWEEN ('') AND (0Xfffffffffd2e4a59))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0xfffffffffcc6b780)=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-825836186 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')IS NOT('-1706038039')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT NULL) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-482693511'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-47297959'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((rtreenode(0.12947454328372765, 'PZ}/nxud8'))AND(NULL)))OR((0.17941314874476055 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1706038039 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.06107024089196966, x'', 0.05635422840363469)) NOT BETWEEN (('-825836186', 0.4613049105624937, '-1330958374')) AND ((NULL, '-393757375', ''))) THEN CASE WHEN x'44b4' THEN 0.9657558091527986 ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((NULL) IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '-1126230416 sz=16341338 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=771075518 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('')<<(0Xf9595a))  WHEN (((0.4613049105624937)) NOT BETWEEN ((x'')) AND ((0.732855207683075))) THEN (NOT (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-47297959'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (-54085760)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1010760137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1701652853 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1102742225 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1149381292 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-482693511 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '1805879474 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.17941314874476055)OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert('0.9657558091527986' COLLATE NOCASE, (- (NULL)), CASE ''  WHEN NULL THEN '-2000356009' ELSE NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1472554171 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2006918623 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1330958374 sz=-1491703171 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((('') NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('5t뵁?mrDQ9')IS(0.9135671788686164)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '2 4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Ea59Q6\r}') NOT BETWEEN ('-418256122') AND (1149381292)))<=(((NULL)/(0X406ba0ce)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1805879474 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('-2000356009' IN (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-1965060347 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1907909041 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=532638968'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_object((NOT (x'')), CAST(x'' AS TEXT), ((x'') BETWEEN ('') AND (x'')), NULL COLLATE BINARY, CAST(-1126230416 AS INTEGER), ((0.8787366739639164) NOT BETWEEN ('-1701652853') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((LIKE(x'277a', '1961888264', '0'))OR(0xffffffffca2a725c COLLATE BINARY)))OR(CAST('-250449402' AS INTEGER))))AND(x'')))OR((('532638968') NOTNULL))))AND(0Xffffffffac11b7c9)))OR((x'2e20' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.7575344702713275)))>=(((NULL) IS FALSE))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(0.9322457149254231)))OR(NULL)))AND('1e500')))OR(1010760137)))OR(((NULL) BETWEEN (0.22449020267560915) AND (x'b005')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1616395454 0 sz=1080795342 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '258674005 1102742225 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1491703171 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1961888264 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-2006918623' COLLATE BINARY)IS NOT(((x'cb55') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1706038039 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0x1fbf6cf8)OR(NULL)))AND(1.149381292E9)))AND(1598891248)))OR(-1472554171)))*(UNLIKELY('8ALfdjj'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL END)IS((0.424261471113087 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '334981120 sz=974811215 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6438601899515949) NOT BETWEEN (-1330958374) AND (0.9778432158040333))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1706038039 sz=178386050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-705025072 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1445506456 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-5.408576E7 COLLATE NOCASE) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 2 sz=-1126230416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (+ (0.641445376290271)), ((NULL)>>(-472664188))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4773559226752109, 0X2f5db7d1, x'')) BETWEEN ((((NULL)|(x'')), (x'' IN ()), ((0.028259949057548805)+(0Xffffffffd5fa2bd0)))) AND (((('r~') BETWEEN (0.29383976450938365) AND (0.7232914977744356)), (((NULL)) BETWEEN ((x'1026')) AND ((0X75411c40))), 2.58674005E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2')!=(x''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '-1156553132 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.12365728137200538) NOTNULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1830790214'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1408334561 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ((('1054400362')<>(1598891248))) AND (CASE x''  WHEN 0.6246649890264683 THEN 0.06107024089196966 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1038578335 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1967201344 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)GLOB(NULL))  WHEN CASE x'3be8'  WHEN 0xffffffffbcdf1670 THEN 0.1638230592165134 WHEN NULL THEN '287142990' WHEN x'' THEN ')A*ISC|f' END THEN (- (x'402f5b11')) ELSE ((('1408334561', NULL, 0.07101354908326307))=((0.9322457149254231, '', 0.8264555868809808))) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1156553132 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT))AND(((0.6503099026920995)||(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-2080182644 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((((x'')AND('')))OR(-136231213))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 0.9479378946016018, 0.9135671788686164)) BETWEEN ((NULL, -1156553132, 0.07679373690617253)) AND ((NULL, -2070998527, 0.032476872461452366))))||(('2105541341' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-846162249' COLLATE BINARY)/(((('5T뵁?MRDQ9'))==((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1445506456'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.15772878314761585) AND (NULL)))OR(CAST('1356090416' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN (CASE WHEN NULL THEN x'13c1' END, ((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')AND('뵁~NJj85')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_type('1304249874'))>>(((x'')>('442483246')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '1117861204 sz=-946423164 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0X111d744e)OR(NULL)))AND(1162696141)))AND('-250449402')))AND(NULL))) NOT BETWEEN (0.7341346249478985) AND ((('t''NP}b{^') BETWEEN ('}') AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (load_extension(0x1139906f, NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1616395454 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=258674005'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0X66fd10cd))) NOT BETWEEN ((((0.5837880447846042)) NOT BETWEEN ((-558494938)) AND ((0Xffffffffe4592a8a)))) AND (CAST('' AS NUMERIC))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2070998527 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-765186817'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=475479377 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1580461671, 0.4447632372936621, 0.9348157318259899))==(('a7', '', '-2008794235'))))%(CAST(0X47ef37a4 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2006918623'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-908736700 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1356090416')) BETWEEN (((NULL IN ()))) AND ((((((x'')OR(0.7232914977744356)))OR(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') NOTNULL))AND(0.23469894739632213 COLLATE NOCASE)))AND(((-4.63918454E8) NOT BETWEEN ('1727860941') AND (NULL)))))OR(x'e2440718')))OR(0xffffffffd2642cff)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '178386050 sz=1244531515 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1747494405 sz=534058368 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0.15508745425179782 THEN x'' END  WHEN CAST(NULL AS TEXT) THEN UNLIKELY(NULL) WHEN (((0xffffffffcb9013c7, 0.07101354908326307, NULL)) NOT BETWEEN ((-1.36231213E8, x'', 'PdCtR1}[U')) AND ((-1704668361, x'7565', -1.156553132E9))) THEN CASE ',灏'  WHEN NULL THEN '-1704668361' ELSE '-2000356009' END WHEN (~ (0.3354332448020838)) THEN (x'' IN ()) WHEN (-1835065562 IN (NULL, 'h}')) THEN ((0.8325478926626021)&(0.29383976450938365)) WHEN (('288985199') NOT NULL) THEN x'1415' COLLATE RTRIM ELSE '~Z' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-1105567729 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1004814166 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1620197577'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1706038039 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(x'')) BETWEEN (((NULL) IS FALSE)) AND (CASE WHEN 0.9912782678322658 THEN NULL WHEN '' THEN '' WHEN '' THEN x'' ELSE 0.9042888550943597 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-908736700'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2114491721 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1330958374'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1356090416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=115763237'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.8685516241078023)) NOT BETWEEN ((CASE '\31NP*V'  WHEN 0.3510977426081836 THEN 0.7232914977744356 WHEN NULL THEN x'' WHEN 0.9657558091527986 THEN x'4daf' WHEN 0.8494634934253095 THEN x'' WHEN '-1445506456' THEN 0X1139906f ELSE 0.8787366739639164 END)) AND ((CASE x'407e'  WHEN '-1307303034' THEN -2080182644 ELSE NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2000356009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0X575f28ba IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1891748064 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (((0.5540565690075264, NULL, '-1445506456', '-1706038039', x'')) NOT BETWEEN ((NULL, 0.9235010441562259, x'488d', 0X1eedb1c7, NULL)) AND ((NULL, 0.5669048283258985, '', x'', 6.141128275614083E-4))), ((x'')||('941869674'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 12ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)|(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))%((' t!now5鯯' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=1249438847 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) BETWEEN (((NULL)/('-946423164'))) AND (GLOB('', 0.8022901508903283))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-463918454 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1244531515 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1948571534')==(x'4ba5')))<<((NULL IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0xffffffffe887bd41)))>>((((x'5aa2')) NOT BETWEEN (('272815855')) AND ((0X4469dc15))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('c>N', NULL, 0x741f42f6)) BETWEEN ((0.41297695901780995, 7.94671057E8, 'e')) AND (('-1932407527', x'61a2', x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE ((x'cedc') BETWEEN (0xfffffffffd2e4a59) AND ('-1762978665')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=-450882019 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=363098621 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2009577467'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('-2034227897')AND(NULL)))AND('534058368')) THEN (('')OR(0X627fa908)) WHEN (0.1710130032281979 IN ()) THEN (- (NULL)) WHEN ('' IN (x'd3d1')) THEN ((NULL)OR('Mㄢ')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=109794317 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-54085760'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '73736681 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1701652853 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1911714015'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE NOCASE  WHEN NULL THEN ((((((((x'')AND(0.6400681225817462)))AND(0x336505e4)))AND(NULL)))AND(0.8875536903470044)) ELSE (((NULL, NULL, x'8f6e'))>((x'a4f87d6f', 0.33610796341011695, NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1333170432 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') BETWEEN (x'4a45') AND (0.23469894739632213)))OR('' COLLATE RTRIM)))AND((('QJ㇑aMxX^')>>(0x741f42f6)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)<>(134080115)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1131659055 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-450882019 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-915199499'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.844107574450139) NOT BETWEEN (NULL) AND (0.27138106819581065)))IS NOT(UPPER(x'a8f3'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-899795665 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)GLOB((((0xffffffffc9f9bf47)) BETWEEN (('-418256122')) AND ((0.07101354908326307))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1903703866'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1531186364 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-463918454 sz=-946423164 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1259335695'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5871426462877303)IS(')⨩8凸EXQI}'))) NOT BETWEEN (((((NULL)OR('V⯺')))AND(NULL))) AND (UNLIKELY(DISTINCT x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('16341338')AND('!怏\ dy')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1347731643'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=415733069'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1806706563 IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-510519062 sz=735639193'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1979067766'))>(('534058368')))) BETWEEN (CAST('1263150351' AS INTEGER)) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffa63a6818; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=258674005 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=684138172 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 -1754366121 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=1799639335 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))LIKE((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 445824459 sz=-1075205518 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=386683228 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM('{Z\q/}', 0X68b540d)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-2070998527')AND(NULL)))AND('')))OR(((((1408334561)OR(1.805879474E9)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1244531515'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-393757375 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1408334561 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1244335314 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-769106411 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-473600126 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')||(CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=532638968 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(NULL)))>=(CAST(0.6503099026920995 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1554117203 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1713079089')) NOT BETWEEN (((('0.8022901508903283') NOT BETWEEN (0.08892735145938535) AND ('0.7575344702713275')))) AND (((('2142717930')OR('F!'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-301328530 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 455121806'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '1836471763 -1386185016 sz=-2142049883 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '1689283215 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('ScJy') NOT NULL)))<>((((('')) BETWEEN (('aX9)鉸# H|')) AND (('941869674')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1081220729'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('L')&('1'))) NOT BETWEEN ((('') BETWEEN ('-1616395454') AND (x''))) AND ((('') NOT BETWEEN (-4.63918454E8) AND (x'2fff')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE NOCASE THEN (((NULL)) NOT BETWEEN ((NULL)) AND (('-258330812'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-705087312 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'559b' COLLATE BINARY)OR(TYPEOF(NULL))))OR(json_array('1156622163', x'a26e'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1136219793 sz=41759848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN NULL THEN '0.8787366739639164' END))<((CASE NULL  WHEN '-2145164139' THEN 0.5852522013716875 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=13955328 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2062272060'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')IS NOT(x'')) THEN ((NULL)==(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=449487890 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=115763237'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('>NdVsऎ~9')GLOB(x'ebef1e03')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (1853375612))) NOT BETWEEN (((((((((' t!now5鯯')OR(0.41584018749327234)))AND('-2070998527')))AND(0.34681451714489575)))AND(''))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffd745d641, NULL, '-1965060347')) BETWEEN (((+ (NULL)), (+ (0.732855207683075)), CAST('*6' AS INTEGER))) AND (((('')IS(NULL)), 0xffffffff8402ee8c COLLATE RTRIM, ((x'5b6c')/(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1149381292'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.47579938973857516; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (-793459757)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-136231213 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' IN ('1652533512'))))=(((x'd58b' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-879750201 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1592193917 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=1953547511 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.9235010441562259' COLLATE BINARY))>=(((((((((('1144262885')OR(0.1421110524581336)))OR(x'')))OR(x'57e1')))OR(0.761874808008944))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(0.48264454092440656 COLLATE BINARY, (('')GLOB(x'9ca7')), (0x77dac6c3 IN (x'60ba', 0.2917379427348914)), NULL, CAST(0x45bcb109 AS NUMERIC)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.3510977426081836')!=('C>N')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1722549113 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0Xffffffffb0ab2fda) ISNULL))OR(((NULL)%(x'')))))OR(CAST(0Xaa1f482 AS BLOB))))AND(CASE WHEN NULL THEN 0.9757287222962534 WHEN 1805879474 THEN '1356090416' WHEN 0.5902337610268034 THEN 0Xffffffffb7eb87fe ELSE '1805879474' END)))OR(CASE '0.3510977426081836'  WHEN NULL THEN x'' WHEN x'0299' THEN NULL WHEN x'' THEN '-482693511' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1200779328 0 sz=1408334561 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('1805879474')) NOT BETWEEN ((x'b4f7')) AND ((NULL)))  WHEN ((((0.07192398153334523)OR(x'')))OR(NULL)) THEN ABS(DISTINCT 'Ko㵑[') ELSE (+ (x'ebe3')) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '513617259 2109900656 0 sz=1249438847'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('rG<' AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN -7.05025072E8 THEN x'' END  WHEN ((0x1eedb1c7) BETWEEN (x'475d') AND (x'')) THEN CAST(x'' AS TEXT) ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1746367501 sz=-995193114'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=633358065 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>(0.13554853915655174)))||('-1392613298' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'99db' THEN NULL END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-43240152 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1259048745 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1656059150 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-136001342 sz=-1491703171 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1377533741 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=678783457'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-291330259 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-363822357'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN 1.408334561E9 THEN x'' WHEN x'37dc' THEN '-1557497397' WHEN '-666328833' THEN 'iYꁛ썑q.~Y⿄' ELSE NULL END COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT)) BETWEEN (NULL) AND (((('!怏\ dy')) BETWEEN (('\|')) AND ((0X336505e4))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'5f3a' COLLATE NOCASE  WHEN 0.6990780941859411 COLLATE BINARY THEN (x'' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4911864728772407)||(0Xffffffffeac7bb1c))) BETWEEN ((('')&('1465854138'))) AND (((('-1514751527'))<>((0.3023356800250454))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-881938547 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '4 -658200770 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1307303034 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-47297959') NOT BETWEEN (0.1882100963923291) AND ('8\r'))) BETWEEN (LIKE(0X2bc2918a, x'')) AND (((0.41584018749327234)>=(0.8272392550008881)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1346591037 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT CASE WHEN 0.6153186569146342 THEN NULL ELSE 9.74811215E8 END, RTRIM('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY(NULL, 0xffffffffb704765d, 0.6980736120121406))>(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1702060227 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('WzmS-ᙰkC') IS FALSE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '1862364034 sz=-1245167157 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-47297959 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-1347197084 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1054400362 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=152021845 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=333266647 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1074798603 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ('') AND ('-1782735826')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1162696141') ISNULL))>((('t''NP}b{^')>=('-1591702542')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X2f5db7d1)IS('lxn33')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xf6b0d55)) NOT BETWEEN ((0.9831174662184582)) AND ((''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)IS('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X2df87e9f; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1701652853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=-1361362300 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'bd9db38a')AND(115763237))))>(((('2072525749')<>(0.6218500755246404))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-723172744 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((0X1cf5abe3) IS TRUE), (NULL IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1492448398 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1018134319'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2913230'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1708268673 sz=-2108548645 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1408124983')>=(NULL)))AND((('1984867464')+(0.5706375167797678)))))AND(((0.37409557940486193)+('0.6218500755246404')))))AND('')))AND(0.10899086182117756 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1876783712 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1835065562 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1908367407'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(((x'')<=(NULL)), ((0.3921940090342041)%('ᐑ~奵Gᾛ/^.'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-689290253 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1583533528 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1356090416'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((((((('-593035001')OR('109794317')))OR('2')))AND(NULL)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(x'' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-825836186 0 sz=1004814166 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-272113602 sz=-235198168 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2107147302 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-846002943'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=193953103 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1102742225 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=272815855 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '6 sz=1080795342'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1445506456 1132384687'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6024053023957158)) NOT BETWEEN ((((((((((NULL)OR(NULL)))AND(0X1fbf6cf8)))OR(x'')))OR(',Lb')))) AND ((((0Xffffffffc2188d61) ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL IN ()))OR((~ (0.5309573796001228)))))AND(LIKELY(0.804296825178396))))AND((('442483246')IS('1486985196')))))OR((((('0.9348157318259899')OR(x'')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-407359268'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1900148567 0 sz=1298669191 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-890469745'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (TRIM(0x2a19df31))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC))+((((0.7938241788391655))>=((-1081203664))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9f7c') NOT BETWEEN (0.4477108928957174) AND (-765186817))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1.004814166E9)LIKE(0.2754144179935929)))AND(('' IN ()))))AND('h6' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1465854138) NOT BETWEEN (CAST(0xffffffffeff1b599 AS NUMERIC)) AND ((((('X')OR(0.9135671788686164)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1988152845'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('2114491721')))%(((((NULL)OR(-1.105567729E9)))OR(0x61926979)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-534522067 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '1 1304249874 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-515889664 -62489397 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1338108923'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Ko㵑['; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((''))!=((0xffffffff822545c7))) THEN (('A^2b[Qs')<(0.6965887694725196)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'b2dc' IN ())) BETWEEN (((NULL)/(x''))) AND (CAST(-2.070998527E9 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0.9348157318259899 THEN 'KY s1w\n' ELSE '-656242338' END  WHEN ((x'') BETWEEN ('-1445506456') AND ('4￿')) THEN ((('V⯺'))<=((x'e2b7'))) ELSE ((('1204369164')) BETWEEN ((x'')) AND (('whU.'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0.08554582370161035, '-157861159'))OR(INSTR(x'', x''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))>=(NULLIF(DISTINCT 833859947, '-582920753'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1169881470 0 sz=-1852952761 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=941869674'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X1eedb1c7 AS NUMERIC))IS NOT(SQLITE_COMPILEOPTION_USED(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('', '', NULL))!=((5.32638968E8, x'', ''))))OR((('*6')<(-1631886588)))))OR(((0X13f76800) ISNULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.028259949057548805' AS REAL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1965060347 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('h ') NOT NULL)) NOT BETWEEN (((0.014134718916561262) NOTNULL)) AND ((((((((('641802203')OR(x'')))AND(0.4447632372936621)))OR(NULL)))OR(0.05161650031826703)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 974811215 sz=-1810155592'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))LIKE((~ ('SOh')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, 'd>) eP')) BETWEEN ((CASE WHEN 'Zp' THEN 0Xfffffffffc315fcf ELSE 0x3721ee65 END, ((((NULL)AND('嬘u+')))OR(1766704036)), (((x'e55d'))>((0Xffffffff8402ee8c))))) AND ((CAST(x'' AS NUMERIC), HEX(''), ((('()')) NOT BETWEEN (('(OIo&KnD(')) AND ((x'6f073b87')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.15216877949109475  WHEN NULL THEN x'' WHEN '505352820' THEN '' WHEN x'' THEN NULL ELSE x'' END) BETWEEN ((('0.844107574450139') IS TRUE)) AND ((('-463918454') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1391437059'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((''))<(((NOT (0X77b967b1))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-834045038 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-884162552 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'0e7b' COLLATE NOCASE) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 0 sz=-89572157 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1639127813 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.5505791248171303 COLLATE NOCASE) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (0.3389791612380544)))||(((NULL) BETWEEN ('518894023') AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.5172141523742088 AS BLOB)))>=((x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.3251302706192277)))IS(((NULL) BETWEEN ('-825044559') AND (0.8618967141194888)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-1321371481 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-54085760 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS NUMERIC)  WHEN CASE x''  WHEN '315704351' THEN x'' ELSE NULL END THEN (NULL IN ()) WHEN (NOT (657730596)) THEN (((('16341338')OR(1.465854138E9)))AND('RG<')) WHEN ((NULL)GLOB(x'')) THEN CASE WHEN '733299585' THEN x'' END ELSE (('-2133511432') NOT BETWEEN (0.9985677020665993) AND ('O4')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('')))AND(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(-151777065)))AND(x'')))AND(NULL)))AND(648235527))) BETWEEN (NULLIF(NULL, 'pdctr1}[u')) AND (((x'')==(x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE -2.008794235E9 COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=1010760137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(CASE x''  WHEN 0.3973493977295707 THEN x'86f6' ELSE NULL END, (((x'')) BETWEEN (('Q')) AND ((-1103449820))), ((((0.7016849837085581)AND('1356090416')))AND(0.5584957453635494))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '363098621 -1965060347 sz=-1591616350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1325437789'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'')) NOT BETWEEN (('/D')) AND ((859313855))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '1228722024 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-531919340'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1249549542 -1762978665 0 sz=260481095 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1734839678'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CASE 0xffffffffaa03ae06  WHEN '' THEN 0.4212046200963929 END)) AND ((((NULL) NOT BETWEEN ('40-') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1325046489'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-149093180'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2078213102 sz=1162696141'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1917276837 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '589812840 -1830790214'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1189892576; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=454952079 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '518894023 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((x'')AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1597845716'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1701652853 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) BETWEEN (NULL) AND (0.1974406025227743))  WHEN (- ('0.12947454328372765')) THEN (- (0X406ba0ce)) ELSE '1636966462' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1792378804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(0.475944111330582, 0.23071862495431716) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=987172161 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-1384408655 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1402786908 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1688234159 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-1080358978 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1616395454 58223966 sz=771075518'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1830790214'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '442483246 0 sz=-879750201 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '773000892 sz=-1808384809 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.24839285582528048)LIKE('V뾪I䔋?')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '2 sz=-2008794235 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'58d5')&(x'e57f')))>>((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1117861204')|(NULL)))OR(((NULL)OR(-1.891748064E9)))))AND((((NULL))!=(('jb-,y\uj '))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-482693511 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('1348181024', '', NULL)) BETWEEN ((-1430285606, 'c~', NULL)) AND (('-765186817', '-1279925848', -1.330958374E9))))AND((('QJ㇑aMxX^')|(x'')))))AND((('-1891095408')GLOB(0.5669048283258985)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1126230416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1010760137 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.15216877949109475  WHEN '䥩1' THEN 0Xffffffffe25fd301 ELSE -1.156553132E9 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '115763237 sz=360361261 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5029951346592771, 0.42505935388693683, '')) NOT BETWEEN (((((NULL)) BETWEEN ((x'')) AND ((0.5725321498996803))), ((NULL)GLOB('1304249874')), '8\r')) AND ((TRIM(DISTINCT '[t%腝k'), NULL COLLATE RTRIM, (- (']C0qe'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-460785032'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1661860475 sz=1149381292 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1290191125'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=1580461671'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL, 0.8682824063017476, 'BL'))<=((NULL, NULL, 0X74f00a08))))OR((((0.3023356800250454)) NOT BETWEEN ((-99615953)) AND ((-771446920))))))OR(TRIM(DISTINCT '513047886'))))AND('-1156553132')))OR(0.8711560821860582)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(NULL)) NOT BETWEEN ((((NULL))<=((0.1710130032281979)))) AND ((('') BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('T''NP}B{^' IN ('쩪ꛆv'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6218500755246404) BETWEEN (NULL) AND (NULL)))*(CASE x''  WHEN 0.24763015886717044 THEN 0.15216877949109475 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1775545385'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '475479377 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=2105541341 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-1202720538 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1304249874 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract((- ('')), (((NULL))==((x'a8cbaae8'))), (((x''))==((NULL))), CASE WHEN NULL THEN 0xffffffffe3d3b784 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'7f6e', 0.9122876605201603, '0.5309573796001228')) NOT BETWEEN (((((((((((((('1117861204')OR(x'')))OR(NULL)))AND(0Xf9595a)))OR(x'')))OR(x'')))AND(NULL)), ((('#[kf泸Q', '#[kf泸Q', '1689620948', x'', x'485d')) BETWEEN (('M+GpR<', 0.5300712369217554, x'', NULL, x'')) AND (('-373091348', 0.581840239165754, x'', x'', 0.9912782678322658))), '-1948571534')) AND ((CAST('' AS INTEGER), ((0.641445376290271) BETWEEN (x'') AND ('OU~0r')), ((0.12365728137200538)<=('D'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD('-17975236', 0.9574685924902768) THEN (((0.9322457149254231, 0.0852645438315478, '4￿')) BETWEEN ((x'5c06', '', '1249438847')) AND (('', x'', 1591818019))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=949261250'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('0.5871426462877303')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('\n6' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Zd0E|') BETWEEN ('') AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN NULL WHEN 0.8691520150140951 THEN NULL WHEN '-1835065562' THEN 0.29383976450938365 ELSE '-1958203812' END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1408124983'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (NOT (1117861204)), CAST('109794317' AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1854378528 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'6ce7'))==((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))AND(CAST('' AS BLOB))))OR(CAST(0.683399798290951 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '1257139414 sz=-2006918623 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-418256122'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-552575285'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '2 862258660 sz=866741774 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-250449402 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-770942369 1792659405 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1147788309 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.028574125260099947  WHEN x'' THEN x'' WHEN 0xffffffff88c4fd57 THEN x'' WHEN 0.5459138674966926 THEN x'48a8' ELSE NULL END)/((('-250449402') NOT BETWEEN (NULL) AND ('1991025897')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=813560075 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (x'')))AND((((('-418256122')AND(-670846052)))OR('-1706038039')))))OR(((x'b429') BETWEEN (1.149381292E9) AND ('-602787882')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '-827851572 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0x1)))AND(x'99d1cc9a'))) BETWEEN (((NULL) NOT NULL)) AND ((+ (0xffffffff859476c5)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1134505284))=((0Xfffffffff7e146d3))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '''썺'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-500392977 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN (NULL) AND (-1242166050)) THEN ((x'')OR(x'20c7')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffca2a725c)*('73736681')))||(UPPER(DISTINCT x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1556010636'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT x'') COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-1031636688 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2123141641 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '1727860941 -41751203'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '862258660' THEN '-290447436' ELSE 0.6965887694725196 END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 394530562 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT 0.006302718240244198)) BETWEEN (((0.20871267285421102) NOTNULL)) AND ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1160774743'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '-2098971264 sz=-47297959 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2091931802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-22078056 sz=-1892561846 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 89216790 sz=-500392977 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-4.63918454E8))<=((NULL)))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1313843182')) NOT BETWEEN ((0.8251262703041653)) AND ((''))))OR(x'')))OR(CASE WHEN -1.830790214E9 THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1768643575 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1394138108 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1702105715'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1137125583 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '47031728 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1211449519'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-724611646'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-591635852 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1461546164 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffff828aae00; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=721280927 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2000356009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-846162249') NOTNULL)) NOT BETWEEN (((('-1092918316')) BETWEEN ((x'')) AND ((x'')))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=16341338'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '2 532638968 sz=334981120'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN (0.3350265195207297, NULL)) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-2009577467 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((+ ('-47297959')), CAST(x'' AS BLOB), (-7.65186817E8 IN ()), CAST(NULL AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9154238086527783) BETWEEN (-136231213) AND ('1149381292')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2895403759878582)!=(']HL7깹B')))>((('')IS(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=133836349'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1006426726 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '-585659082 sz=1153835811'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1656280992'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8175520923030521) NOT BETWEEN (NULL) AND (NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'79cd' THEN '2078358052' ELSE '109794317' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-654188329'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3278988474454707 IN ()))||(((((((((0.4468594425912663)OR(x'')))AND('x^')))AND(0.22449020267560915)))OR('-1701652853')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-142131352 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('1435511804'))) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1147788309 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 1206859684 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') BETWEEN (NULL) AND (NULL)))OR((- ('-825836186')))))OR(0X1fd51580 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)AND(CASE -54085760  WHEN NULL THEN NULL ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '1731301723'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=1427086246 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 -1126230416 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN ()), (0X19539822 IN ()), ((0.31794773566852774) IS TRUE)))!=(((x'' IN (x'566c', NULL)), (((-418256122)) NOT BETWEEN ((x'')) AND (('73736681'))), (0x13f76800 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1249438847 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1419222488 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0xffffffff88384805, 0.7194094284367415, x'')) BETWEEN ((-1921154595, NULL, x'')) AND ((0xaa1f482, '-1491703171', NULL))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-896180540'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 sz=28632043 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=126843007 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-188081474)) NOT BETWEEN ((((((0.6943567592608796)OR(NULL)))AND(NULL)))) AND ((x'0553' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1378443949 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-1156553132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) IS TRUE))AND(((0Xffffffffcec6bd66) NOT BETWEEN ('sx') AND ('1465854138')))))AND('1e500000')))AND(TYPEOF(x'5d3e'))))OR(CAST(0.3703555477257675 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(1356953820)))AND(0.5882951627504224)))AND(((x'') NOT BETWEEN (x'') AND ('f7bTwN')))))OR(CASE WHEN 0.7860879279620708 THEN x'' ELSE '-493124241' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-818523527')IS(0.21029930288329168)))AND((NOT (x'2bf0')))))OR(((109794317) NOT BETWEEN ('1948205814') AND (0.9755856783411824)))))OR((((NULL)) BETWEEN ((x'c12e')) AND ((0.5766803758130071))))))AND(((x'') NOT BETWEEN ('') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -765186817 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0X173fa2c9) AND ('1580461671')))|((('9AHVT3g	')IS NOT('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '2116672177 -2050926160 sz=-342131182'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((974811215))>(('410401932'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((338163912))>((''))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x6fa997f1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X39b7324b IN ()))>=('1' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1004814166' IN ()))AND((('0.12947454328372765')|(0X4b6d057d)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '411451715 sz=1322999139'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOT BETWEEN (((0.11432331829048337) BETWEEN (x'ac37') AND ('c){6'))) AND (CASE x''  WHEN NULL THEN 'DW}1lhr)' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1445506456 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-879750201 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1491703171 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((''))=((NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.2134672252394848 THEN NULL WHEN 0x2df5adbe THEN x'' WHEN 1.054400362E9 THEN -1497641287 ELSE x'' END) NOT BETWEEN (((NULL)GLOB(NULL))) AND (((x'')|(0X859a218)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '70338174 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=288985199 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1821614574 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '2 sz=410141056 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-1697851780 0 sz=-1156553132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.641445376290271'))=((NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-776561447 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=754193388 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=239298829'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('箽GFD঒'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1, c0) VALUES (-1.620197577E9, '115763237', '-1595383159'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62880'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout = 4603796924666490449; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 735363773);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 3ms;
INSERT OR IGNORE INTO vt1 VALUES ('-944575068'); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL), (NULL), (x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-164759780,4');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22886'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1907909041,12');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 260441137); -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=8'); -- 13ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES ('-903187876'); -- 1ms;
PRAGMA cache_spill = 8107448807873451065; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (''), (''), ('-946423164'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES (NULL, x''); -- 1ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET c1=1.09794317E8 WHERE ((((1.465854138E9) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN NULL THEN vt0.c1 END) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND ('*X')))); -- 1ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c1)=(x'2ca3', x'', 'V!\r8SZ') WHERE x''; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1359965211); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0, c1) VALUES ('653024851', '-2124873138', 0.12644680209137882); -- 0ms;
UPDATE vt0 SET c2=x'e7dc5d85' WHERE (((vt0.c2 IN (vt0.c2))) ISNULL); -- 0ms;
PRAGMA main.mmap_size = 6578641513697522435; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES (NULL, '0LAHZ#9r-'); -- 2ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 1ms;
PRAGMA main.journal_size_limit; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c2='0.37409557940486193'; -- 0ms;
UPDATE vt1 SET c0='93976403', c0='-908736700', c0=0.0878984647375135, c0=0.19292484015693379; -- 0ms;
ALTER TABLE t0 ADD COLUMN c57 INTEGER; -- 5ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('', 'iYꁛ썑q.~Y⿄'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 194261736);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1651800857); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1368471794,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1952489988); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX RTRIM; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO t0(c57) VALUES ('-179650033'); -- 1ms;
ANALYZE v0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '38847'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>('3r\rd'))) NOT BETWEEN (NULLIF(DISTINCT 0x454d55cd, NULL)) AND ((~ (NULL)))); -- 0ms;
INSERT OR ROLLBACK INTO t0(c57, c0) VALUES ('8v鯯D?r', -420506138); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1011313909', 0.13489045866066895); -- 0ms;
INSERT OR IGNORE INTO t0(c57) VALUES ('E'), (-250449402), (x''); -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0X7845a0f7), (0X2f3a2499), (0.9251092910636199); -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.9466310579354552), (NULL), (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA cache_spill; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i10 ON t0(((c0 COLLATE BINARY) ISNULL) COLLATE RTRIM ASC,((0.46605520308595094)||(CASE c57  WHEN c0 THEN c57 END)) COLLATE BINARY DESC); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '52437'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 4ms;
UPDATE OR IGNORE vt0 SET (c0, c2, c0)=('-1113571359', -9.087367E8, 0.3980086535634326); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
INSERT OR IGNORE INTO t0(c57, c0) VALUES ('285025799', '33229534'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.6784855745674722); -- 1ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-418256122'), (NULL), (x''); -- 0ms;
REINDEX i10; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('0.9479378946016018', ''); -- 1ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
ANALYZE main; -- 1ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(x'', ''); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('1357379235'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0.5898171177884547), (x''), (-1.330958374E9); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('1244531515'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c40 TEXT; -- 1ms;
REINDEX; -- 0ms;
REINDEX i10; -- 0ms;
UPDATE t0 SET (c40)=('Vaˎ.'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('8ej^#') WHERE json_valid(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))); -- 1ms;
REINDEX; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1, v0 WHERE (((CAST(NULL AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((((vt1.c0)AND(v0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((CAST(NULL AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((((vt1.c0)AND(v0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((CAST(NULL AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((NOT (vt0.c1)))AND(((vt0.c1)==('-1471925982')))))OR((NOT (vt0.c1)))))AND(((0.05635422840363469) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(vt0.c2)) DESC, (((vt0.c0 IN ()))*(TYPEOF(DISTINCT '-124322853'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((NOT (vt0.c1)))AND(((vt0.c1)==('-1471925982')))))OR((NOT (vt0.c1)))))AND(((0.05635422840363469) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(vt0.c2)) DESC, (((vt0.c0 IN ()))*(TYPEOF(DISTINCT '-124322853'))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((NOT (vt0.c1)))AND(((vt0.c1)==('-1471925982')))))OR((NOT (vt0.c1)))))AND(((0.05635422840363469) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(vt0.c2)) DESC, (((vt0.c0 IN ()))*(TYPEOF(DISTINCT '-124322853'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((NOT (vt0.c1)))AND(((vt0.c1)==('-1471925982')))))OR((NOT (vt0.c1)))))AND(((0.05635422840363469) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(vt0.c2)) DESC, (((vt0.c0 IN ()))*(TYPEOF(DISTINCT '-124322853'))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((NOT (vt0.c1)))AND(((vt0.c1)==('-1471925982')))))OR((NOT (vt0.c1)))))AND(((0.05635422840363469) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(vt0.c2)) DESC, (((vt0.c0 IN ()))*(TYPEOF(DISTINCT '-124322853'))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULLIF(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c2)), (t0.c40 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c2)), (t0.c40 IN ()))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULLIF(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c2)), (t0.c40 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c2)), (t0.c40 IN ()))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULLIF(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c2)), (t0.c40 IN ())));
SELECT * FROM t0 WHERE ((- (((t0.c57) NOTNULL)))) ORDER BY t0.c57, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c57) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c57, NULL  NULLS FIRST);
SELECT * FROM t0 WHERE ((- (((t0.c57) NOTNULL)))) ORDER BY t0.c57, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c57) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c57, NULL  NULLS FIRST);
SELECT * FROM t0 WHERE ((- (((t0.c57) NOTNULL)))) ORDER BY t0.c57, NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN (((vt0.c0)*(t0.c57)))) WHERE (((('r_' IN (t0.c57, t0.c40)))=(((vt0.c0) NOT BETWEEN (t0.c40) AND (0.9657045789672939))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((ROUND(t0.c57, vt0.c1))) AND ((((vt0.c1)-(t0.c57))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('r_' IN (t0.c57, t0.c40)))==(((vt0.c0) NOT BETWEEN (t0.c40) AND (0.9657045789672939))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN (((vt0.c0)*(t0.c57)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((ROUND(t0.c57, vt0.c1))) AND ((((vt0.c1)-(t0.c57))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN (((vt0.c0)*(t0.c57)))) WHERE (((('r_' IN (t0.c57, t0.c40)))=(((vt0.c0) NOT BETWEEN (t0.c40) AND (0.9657045789672939))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((ROUND(t0.c57, vt0.c1))) AND ((((vt0.c1)-(t0.c57))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('r_' IN (t0.c57, t0.c40)))==(((vt0.c0) NOT BETWEEN (t0.c40) AND (0.9657045789672939))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN (((vt0.c0)*(t0.c57)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((ROUND(t0.c57, vt0.c1))) AND ((((vt0.c1)-(t0.c57))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN (((vt0.c0)*(t0.c57)))) WHERE (((('r_' IN (t0.c57, t0.c40)))=(((vt0.c0) NOT BETWEEN (t0.c40) AND (0.9657045789672939))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((ROUND(t0.c57, vt0.c1))) AND ((((vt0.c1)-(t0.c57))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c40)>=(t0.c57)) IN ())) ORDER BY CAST((t0.c57 IN ()) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c40)>=(t0.c57)) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c57 IN ()) AS REAL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c40)>=(t0.c57)) IN ())) ORDER BY CAST((t0.c57 IN ()) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c40)>=(t0.c57)) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c57 IN ()) AS REAL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c40)>=(t0.c57)) IN ())) ORDER BY CAST((t0.c57 IN ()) AS REAL)  NULLS LAST;
SELECT * FROM t0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (v0.c1);
SELECT * FROM t0 CROSS JOIN v0 ON (SQLITE_COMPILEOPTION_USED(t0.c0) IN (((v0.c2)>(v0.c1)), ((v0.c2)&(v0.c0)))) WHERE (((((v0.c1 COLLATE NOCASE)AND(((((t0.c40)AND(v0.c1)))OR('')))))AND(t0.c40)));
SELECT SUM(count) FROM (SELECT ((((((v0.c1 COLLATE NOCASE)AND(((((t0.c40)AND(v0.c1)))OR('')))))AND(t0.c40))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (SQLITE_COMPILEOPTION_USED(t0.c0) IN (((v0.c2)>(v0.c1)), ((v0.c2)&(v0.c0)))));
SELECT * FROM t0 CROSS JOIN v0 ON (SQLITE_COMPILEOPTION_USED(t0.c0) IN (((v0.c2)>(v0.c1)), ((v0.c2)&(v0.c0)))) WHERE (((((v0.c1 COLLATE NOCASE)AND(((((t0.c40)AND(v0.c1)))OR('')))))AND(t0.c40)));
SELECT SUM(count) FROM (SELECT ((((((v0.c1 COLLATE NOCASE)AND(((((t0.c40)AND(v0.c1)))OR('')))))AND(t0.c40))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (SQLITE_COMPILEOPTION_USED(t0.c0) IN (((v0.c2)>(v0.c1)), ((v0.c2)&(v0.c0)))));
SELECT * FROM t0 CROSS JOIN v0 ON (SQLITE_COMPILEOPTION_USED(t0.c0) IN (((v0.c2)>(v0.c1)), ((v0.c2)&(v0.c0)))) WHERE (((((v0.c1 COLLATE NOCASE)AND(((((t0.c40)AND(v0.c1)))OR('')))))AND(t0.c40)));
SELECT COUNT(*) FROM vt1 WHERE ('287142990');
SELECT SUM(count) FROM (SELECT ALL (('287142990') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('287142990');
SELECT SUM(count) FROM (SELECT ALL (('287142990') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('287142990');
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON t0.c40 INNER JOIN t0 ON (((t0.c40) BETWEEN (v0.c0) AND (v0.c2)) IN ()) WHERE (v0.c0) ORDER BY (- (((((((((vt1.c0)AND(t0.c40)))OR(t0.c40)))AND(t0.c40)))AND(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON t0.c40 INNER JOIN t0 ON (((t0.c40) BETWEEN (v0.c0) AND (v0.c2)) IN ()) ORDER BY (- (((((((((vt1.c0)AND(t0.c40)))OR(t0.c40)))AND(t0.c40)))AND(v0.c1))))  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON t0.c40 INNER JOIN t0 ON (((t0.c40) BETWEEN (v0.c0) AND (v0.c2)) IN ()) WHERE (v0.c0) ORDER BY (- (((((((((vt1.c0)AND(t0.c40)))OR(t0.c40)))AND(t0.c40)))AND(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON t0.c40 INNER JOIN t0 ON (((t0.c40) BETWEEN (v0.c0) AND (v0.c2)) IN ()) ORDER BY (- (((((((((vt1.c0)AND(t0.c40)))OR(t0.c40)))AND(t0.c40)))AND(v0.c1))))  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON t0.c40 INNER JOIN t0 ON (((t0.c40) BETWEEN (v0.c0) AND (v0.c2)) IN ()) WHERE (v0.c0) ORDER BY (- (((((((((vt1.c0)AND(t0.c40)))OR(t0.c40)))AND(t0.c40)))AND(v0.c1))))  NULLS LAST;
SELECT * FROM v0, t0, vt1, vt0 WHERE ('-500392977') ORDER BY 0.9856562773625499  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-500392977') IS TRUE)  as count FROM v0, t0, vt1, vt0 ORDER BY 0.9856562773625499  NULLS FIRST);
SELECT * FROM v0, t0, vt1, vt0 WHERE ('-500392977') ORDER BY 0.9856562773625499  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-500392977') IS TRUE)  as count FROM v0, t0, vt1, vt0 ORDER BY 0.9856562773625499  NULLS FIRST);
SELECT * FROM v0, t0, vt1, vt0 WHERE ('-500392977') ORDER BY 0.9856562773625499  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))>(((v0.c1)*(v0.c1))))) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))>(((v0.c1)*(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))>(((v0.c1)*(v0.c1))))) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))>(((v0.c1)*(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))>(((v0.c1)*(v0.c1))))) ORDER BY v0.c1;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) IS FALSE));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((NULL) NOTNULL) RIGHT OUTER JOIN v0 ON (((vt0.c2)) BETWEEN ((((t0.c0)==(t0.c57)))) AND ((NULL))) INNER JOIN t0 ON ((((vt0.c1) IS TRUE)) ISNULL) WHERE (((((t0.c40) NOT NULL))<=(vt0.c1))) ORDER BY CASE WHEN NULL THEN ((v0.c0)AND(t0.c40)) ELSE (((t0.c0, t0.c40, vt0.c2))<((vt0.c2, t0.c0, t0.c57))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c40) NOT NULL))<=(vt0.c1))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((NULL) NOTNULL) RIGHT OUTER JOIN v0 ON (((vt0.c2)) BETWEEN ((((t0.c0)==(t0.c57)))) AND ((NULL))) INNER JOIN t0 ON ((((vt0.c1) IS TRUE)) ISNULL) ORDER BY CASE WHEN NULL THEN ((v0.c0)AND(t0.c40)) ELSE (((t0.c0, t0.c40, vt0.c2))<((vt0.c2, t0.c0, t0.c57))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((NULL) NOTNULL) RIGHT OUTER JOIN v0 ON (((vt0.c2)) BETWEEN ((((t0.c0)==(t0.c57)))) AND ((NULL))) INNER JOIN t0 ON ((((vt0.c1) IS TRUE)) ISNULL) WHERE (((((t0.c40) NOT NULL))<=(vt0.c1))) ORDER BY CASE WHEN NULL THEN ((v0.c0)AND(t0.c40)) ELSE (((t0.c0, t0.c40, vt0.c2))<((vt0.c2, t0.c0, t0.c57))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c40) NOT NULL))<=(vt0.c1))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((NULL) NOTNULL) RIGHT OUTER JOIN v0 ON (((vt0.c2)) BETWEEN ((((t0.c0)==(t0.c57)))) AND ((NULL))) INNER JOIN t0 ON ((((vt0.c1) IS TRUE)) ISNULL) ORDER BY CASE WHEN NULL THEN ((v0.c0)AND(t0.c40)) ELSE (((t0.c0, t0.c40, vt0.c2))<((vt0.c2, t0.c0, t0.c57))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ('kTVC') ORDER BY (((('1992558254')AND((- (t0.c0)))))AND(('-1091814816' IN ())));
SELECT SUM(count) FROM (SELECT (('kTVC') IS TRUE)  as count FROM t0 ORDER BY (((('1992558254')AND((- (t0.c0)))))AND(('-1091814816' IN ()))));
SELECT COUNT(*) FROM t0 WHERE ('kTVC') ORDER BY (((('1992558254')AND((- (t0.c0)))))AND(('-1091814816' IN ())));
SELECT SUM(count) FROM (SELECT (('kTVC') IS TRUE)  as count FROM t0 ORDER BY (((('1992558254')AND((- (t0.c0)))))AND(('-1091814816' IN ()))));
SELECT * FROM t0 WHERE (((((((((x'')OR(CASE WHEN t0.c57 THEN t0.c0 WHEN 'u>㶵F輅' THEN t0.c40 WHEN t0.c0 THEN t0.c40 END)))AND(((((t0.c40)AND(t0.c0)))OR(t0.c40)))))AND((NOT (t0.c40)))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(CASE WHEN t0.c57 THEN t0.c0 WHEN 'u>㶵F輅' THEN t0.c40 WHEN t0.c0 THEN t0.c40 END)))AND(((((t0.c40)AND(t0.c0)))OR(t0.c40)))))AND((NOT (t0.c40)))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((x'')OR(CASE WHEN t0.c57 THEN t0.c0 WHEN 'u>㶵F輅' THEN t0.c40 WHEN t0.c0 THEN t0.c40 END)))AND(((((t0.c40)AND(t0.c0)))OR(t0.c40)))))AND((NOT (t0.c40)))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(CASE WHEN t0.c57 THEN t0.c0 WHEN 'u>㶵F輅' THEN t0.c40 WHEN t0.c0 THEN t0.c40 END)))AND(((((t0.c40)AND(t0.c0)))OR(t0.c40)))))AND((NOT (t0.c40)))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((x'')OR(CASE WHEN t0.c57 THEN t0.c0 WHEN 'u>㶵F輅' THEN t0.c40 WHEN t0.c0 THEN t0.c40 END)))AND(((((t0.c40)AND(t0.c0)))OR(t0.c40)))))AND((NOT (t0.c40)))))OR((NOT (t0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0, ((v0.c2)||(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0, ((v0.c2)||(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0, ((v0.c2)||(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0, ((v0.c2)||(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0, ((v0.c2)||(v0.c2)))));
SELECT ALL * FROM t0, v0 FULL OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))LIKE(((t0.c57)AND(vt0.c1)))) INNER JOIN vt1 ON CASE WHEN ((((v0.c2)AND('0~')))OR(v0.c0)) THEN v0.c1 COLLATE BINARY END WHERE (0.1034258848475832) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c40) AND (v0.c1)) AS TEXT) DESC, (~ (('1163730680' IN ())))  NULLS LAST, (((t0.c0)) NOT BETWEEN (((((v0.c0))>((t0.c57))))) AND ((v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((0.1034258848475832) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))LIKE(((t0.c57)AND(vt0.c1)))) INNER JOIN vt1 ON CASE WHEN ((((v0.c2)AND('0~')))OR(v0.c0)) THEN v0.c1 COLLATE BINARY END ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c40) AND (v0.c1)) AS TEXT) DESC, (~ (('1163730680' IN ())))  NULLS LAST, (((t0.c0)) NOT BETWEEN (((((v0.c0))>((t0.c57))))) AND ((v0.c1))));
SELECT ALL * FROM t0, v0 FULL OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))LIKE(((t0.c57)AND(vt0.c1)))) INNER JOIN vt1 ON CASE WHEN ((((v0.c2)AND('0~')))OR(v0.c0)) THEN v0.c1 COLLATE BINARY END WHERE (0.1034258848475832) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c40) AND (v0.c1)) AS TEXT) DESC, (~ (('1163730680' IN ())))  NULLS LAST, (((t0.c0)) NOT BETWEEN (((((v0.c0))>((t0.c57))))) AND ((v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((0.1034258848475832) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))LIKE(((t0.c57)AND(vt0.c1)))) INNER JOIN vt1 ON CASE WHEN ((((v0.c2)AND('0~')))OR(v0.c0)) THEN v0.c1 COLLATE BINARY END ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c40) AND (v0.c1)) AS TEXT) DESC, (~ (('1163730680' IN ())))  NULLS LAST, (((t0.c0)) NOT BETWEEN (((((v0.c0))>((t0.c57))))) AND ((v0.c1))));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (((DATE(v0.c2, t0.c57, vt0.c2)))<((((v0.c0)|(t0.c0))))) FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c2 AS BLOB) AS NUMERIC) WHERE (TYPEOF(NULL));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((DATE(v0.c2, t0.c57, vt0.c2)))<((((v0.c0)|(t0.c0))))) FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c2 AS BLOB) AS NUMERIC));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (((DATE(v0.c2, t0.c57, vt0.c2)))<((((v0.c0)|(t0.c0))))) FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c2 AS BLOB) AS NUMERIC) WHERE (TYPEOF(NULL));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((DATE(v0.c2, t0.c57, vt0.c2)))<((((v0.c0)|(t0.c0))))) FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c2 AS BLOB) AS NUMERIC));
SELECT * FROM t0 CROSS JOIN vt0 ON (((((vt0.c2, vt0.c1, t0.c40)) BETWEEN ((t0.c0, vt0.c2, t0.c40)) AND ((vt0.c0, t0.c57, t0.c40))))GLOB(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) WHERE ((((t0.c40) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((((((vt0.c2)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c40))))) ORDER BY 0X7e21fc5b ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c40) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((((((vt0.c2)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c40))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((vt0.c2, vt0.c1, t0.c40)) BETWEEN ((t0.c0, vt0.c2, t0.c40)) AND ((vt0.c0, t0.c57, t0.c40))))GLOB(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) ORDER BY 0x7e21fc5b ASC);
SELECT * FROM t0 CROSS JOIN vt0 ON (((((vt0.c2, vt0.c1, t0.c40)) BETWEEN ((t0.c0, vt0.c2, t0.c40)) AND ((vt0.c0, t0.c57, t0.c40))))GLOB(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) WHERE ((((t0.c40) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((((((vt0.c2)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c40))))) ORDER BY 0X7e21fc5b ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c40) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((((((vt0.c2)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c40))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((vt0.c2, vt0.c1, t0.c40)) BETWEEN ((t0.c0, vt0.c2, t0.c40)) AND ((vt0.c0, t0.c57, t0.c40))))GLOB(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) ORDER BY 0x7e21fc5b ASC);
SELECT * FROM t0, vt0, v0, vt1 NOT INDEXED WHERE (-1.7976931348623157E308) ORDER BY ((CAST(vt0.c0 AS TEXT))&(t0.c40 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((-1.7976931348623157E308) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0, vt1 ORDER BY ((CAST(vt0.c0 AS TEXT))&(t0.c40 COLLATE BINARY)));
SELECT * FROM t0, vt0, v0, vt1 NOT INDEXED WHERE (-1.7976931348623157E308) ORDER BY ((CAST(vt0.c0 AS TEXT))&(t0.c40 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((-1.7976931348623157E308) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0, vt1 ORDER BY ((CAST(vt0.c0 AS TEXT))&(t0.c40 COLLATE BINARY)));
SELECT * FROM t0, vt0, v0, vt1 NOT INDEXED WHERE (-1.7976931348623157E308) ORDER BY ((CAST(vt0.c0 AS TEXT))&(t0.c40 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((t0.c40)<('\rR')) AS REAL)) ORDER BY CAST((((t0.c57))<((1273727249))) AS NUMERIC), CAST((0X706714b6 IN ()) AS NUMERIC), ((((NULL)>(NULL))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c40)<('\rR')) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST((((t0.c57))<((1273727249))) AS NUMERIC), CAST((0X706714b6 IN ()) AS NUMERIC), ((((NULL)>(NULL))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((t0.c40)<('\rR')) AS REAL)) ORDER BY CAST((((t0.c57))<((1273727249))) AS NUMERIC), CAST((0X706714b6 IN ()) AS NUMERIC), ((((NULL)>(NULL))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c40)<('\rR')) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST((((t0.c57))<((1273727249))) AS NUMERIC), CAST((0X706714b6 IN ()) AS NUMERIC), ((((NULL)>(NULL))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((t0.c40)<('\rR')) AS REAL)) ORDER BY CAST((((t0.c57))<((1273727249))) AS NUMERIC), CAST((0X706714b6 IN ()) AS NUMERIC), ((((NULL)>(NULL))) IS TRUE) DESC;
SELECT * FROM t0, v0, vt0, vt1 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, v0, vt0, vt1);
SELECT * FROM t0, v0, vt0, vt1 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, v0, vt0, vt1);
SELECT * FROM t0, v0, vt0, vt1 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN t0 ON ((vt1.c0)AND(((vt1.c0)<=('442483246')))) WHERE ((- (CAST(v0.c2 AS TEXT)))) ORDER BY HEX(DISTINCT (((t0.c40, '', v0.c1)) NOT BETWEEN ((t0.c0, v0.c2, v0.c2)) AND ((t0.c57, t0.c57, NULL)))) DESC, ((((1.598891248E9) BETWEEN (v0.c2) AND (v0.c0)))OR(('0.27138106819581065' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, vt1 INNER JOIN t0 ON ((vt1.c0)AND(((vt1.c0)<=('442483246')))) ORDER BY HEX(DISTINCT (((t0.c40, '', v0.c1)) NOT BETWEEN ((t0.c0, v0.c2, v0.c2)) AND ((t0.c57, t0.c57, NULL)))) DESC, ((((1.598891248E9) BETWEEN (v0.c2) AND (v0.c0)))OR(('0.27138106819581065' IN ()))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN t0 ON ((vt1.c0)AND(((vt1.c0)<=('442483246')))) WHERE ((- (CAST(v0.c2 AS TEXT)))) ORDER BY HEX(DISTINCT (((t0.c40, '', v0.c1)) NOT BETWEEN ((t0.c0, v0.c2, v0.c2)) AND ((t0.c57, t0.c57, NULL)))) DESC, ((((1.598891248E9) BETWEEN (v0.c2) AND (v0.c0)))OR(('0.27138106819581065' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, vt1 INNER JOIN t0 ON ((vt1.c0)AND(((vt1.c0)<=('442483246')))) ORDER BY HEX(DISTINCT (((t0.c40, '', v0.c1)) NOT BETWEEN ((t0.c0, v0.c2, v0.c2)) AND ((t0.c57, t0.c57, NULL)))) DESC, ((((1.598891248E9) BETWEEN (v0.c2) AND (v0.c0)))OR(('0.27138106819581065' IN ()))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN t0 ON ((vt1.c0)AND(((vt1.c0)<=('442483246')))) WHERE ((- (CAST(v0.c2 AS TEXT)))) ORDER BY HEX(DISTINCT (((t0.c40, '', v0.c1)) NOT BETWEEN ((t0.c0, v0.c2, v0.c2)) AND ((t0.c57, t0.c57, NULL)))) DESC, ((((1.598891248E9) BETWEEN (v0.c2) AND (v0.c0)))OR(('0.27138106819581065' IN ()))) ASC;
SELECT * FROM vt1, t0 WHERE (t0.c40) ORDER BY ((((CAST(t0.c57 AS BLOB))AND(t0.c0)))AND((vt1.c0 IN (1.948205814E9)))) DESC  NULLS LAST, t0.c57 ASC  NULLS FIRST, (((((((((t0.c40)AND(t0.c40)))OR(t0.c40)))AND(t0.c57)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((CAST(t0.c57 AS BLOB))AND(t0.c0)))AND((vt1.c0 IN (1.948205814E9)))) DESC  NULLS LAST, t0.c57 ASC  NULLS FIRST, (((((((((t0.c40)AND(t0.c40)))OR(t0.c40)))AND(t0.c57)))AND(vt1.c0)) IN ())  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (t0.c40) ORDER BY ((((CAST(t0.c57 AS BLOB))AND(t0.c0)))AND((vt1.c0 IN (1.948205814E9)))) DESC  NULLS LAST, t0.c57 ASC  NULLS FIRST, (((((((((t0.c40)AND(t0.c40)))OR(t0.c40)))AND(t0.c57)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((CAST(t0.c57 AS BLOB))AND(t0.c0)))AND((vt1.c0 IN (1.948205814E9)))) DESC  NULLS LAST, t0.c57 ASC  NULLS FIRST, (((((((((t0.c40)AND(t0.c40)))OR(t0.c40)))AND(t0.c57)))AND(vt1.c0)) IN ())  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (t0.c40) ORDER BY ((((CAST(t0.c57 AS BLOB))AND(t0.c0)))AND((vt1.c0 IN (1.948205814E9)))) DESC  NULLS LAST, t0.c57 ASC  NULLS FIRST, (((((((((t0.c40)AND(t0.c40)))OR(t0.c40)))AND(t0.c57)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_insert(((t0.c57)-(vt0.c0)), t0.c57, CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((t0.c57)-(vt0.c0)), t0.c57, CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_insert(((t0.c57)-(vt0.c0)), t0.c57, CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((t0.c57)-(vt0.c0)), t0.c57, CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT '') COLLATE NOCASE) ORDER BY CASE TRIM(v0.c1)  WHEN v0.c2 THEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c2 IN (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT '') COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CASE TRIM(v0.c1)  WHEN v0.c2 THEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c2 IN (v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT '') COLLATE NOCASE) ORDER BY CASE TRIM(v0.c1)  WHEN v0.c2 THEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c2 IN (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT '') COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CASE TRIM(v0.c1)  WHEN v0.c2 THEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c2 IN (v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT '') COLLATE NOCASE) ORDER BY CASE TRIM(v0.c1)  WHEN v0.c2 THEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c2 IN (v0.c0)) END  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE (+ (t0.c57))  WHEN (((t0.c57, vt0.c2, vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c2, t0.c57))) THEN ((vt0.c1)>(t0.c0)) ELSE (vt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (t0.c57))  WHEN (((t0.c57, vt0.c2, vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c2, t0.c57))) THEN ((vt0.c1)>(t0.c0)) ELSE (vt0.c2 IN ()) END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE (+ (t0.c57))  WHEN (((t0.c57, vt0.c2, vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c2, t0.c57))) THEN ((vt0.c1)>(t0.c0)) ELSE (vt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (t0.c57))  WHEN (((t0.c57, vt0.c2, vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c2, t0.c57))) THEN ((vt0.c1)>(t0.c0)) ELSE (vt0.c2 IN ()) END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE (+ (t0.c57))  WHEN (((t0.c57, vt0.c2, vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c2, t0.c57))) THEN ((vt0.c1)>(t0.c0)) ELSE (vt0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON t0.c57 INNER JOIN t0 ON ((((CAST(v0.c2 AS TEXT))AND(CAST(v0.c2 AS REAL))))OR((((x''))<((t0.c0))))) WHERE (((vt1.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON t0.c57 INNER JOIN t0 ON ((((CAST(v0.c2 AS TEXT))AND(CAST(v0.c2 AS REAL))))OR((((x''))<((t0.c0))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON t0.c57 INNER JOIN t0 ON ((((CAST(v0.c2 AS TEXT))AND(CAST(v0.c2 AS REAL))))OR((((x''))<((t0.c0))))) WHERE (((vt1.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON t0.c57 INNER JOIN t0 ON ((((CAST(v0.c2 AS TEXT))AND(CAST(v0.c2 AS REAL))))OR((((x''))<((t0.c0))))));
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c40)GLOB(t0.c0))) AND (LIKELIHOOD(t0.c40, 0.7578982686246439))), CASE WHEN (~ (t0.c57)) THEN ((x'')GLOB(t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c40)GLOB(t0.c0))) AND (LIKELIHOOD(t0.c40, 0.7578982686246439))), CASE WHEN (~ (t0.c57)) THEN ((x'')GLOB(t0.c0)) END ASC);
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c40)GLOB(t0.c0))) AND (LIKELIHOOD(t0.c40, 0.7578982686246439))), CASE WHEN (~ (t0.c57)) THEN ((x'')GLOB(t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c40)GLOB(t0.c0))) AND (LIKELIHOOD(t0.c40, 0.7578982686246439))), CASE WHEN (~ (t0.c57)) THEN ((x'')GLOB(t0.c0)) END ASC);
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c40)GLOB(t0.c0))) AND (LIKELIHOOD(t0.c40, 0.7578982686246439))), CASE WHEN (~ (t0.c57)) THEN ((x'')GLOB(t0.c0)) END ASC;
SELECT * FROM t0, v0, vt1, vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (t0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (t0.c0)) DESC  NULLS FIRST);
SELECT * FROM t0, v0, vt1, vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (t0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (t0.c0)) DESC  NULLS FIRST);
SELECT * FROM t0, v0, vt1, vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (t0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt1 WHERE ((('0.9757287222962534') BETWEEN ((vt1.c0 IN (v0.c0))) AND (((NULL) IS FALSE)))) ORDER BY UNLIKELY(DISTINCT TYPEOF(DISTINCT vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('0.9757287222962534') BETWEEN ((vt1.c0 IN (v0.c0))) AND (((NULL) IS FALSE)))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY UNLIKELY(DISTINCT TYPEOF(DISTINCT vt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt1 WHERE ((('0.9757287222962534') BETWEEN ((vt1.c0 IN (v0.c0))) AND (((NULL) IS FALSE)))) ORDER BY UNLIKELY(DISTINCT TYPEOF(DISTINCT vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('0.9757287222962534') BETWEEN ((vt1.c0 IN (v0.c0))) AND (((NULL) IS FALSE)))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY UNLIKELY(DISTINCT TYPEOF(DISTINCT vt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt1 WHERE ((('0.9757287222962534') BETWEEN ((vt1.c0 IN (v0.c0))) AND (((NULL) IS FALSE)))) ORDER BY UNLIKELY(DISTINCT TYPEOF(DISTINCT vt1.c0)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (x'')));
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE (((((((((t0.c40 COLLATE BINARY)AND((+ (x'')))))AND((vt0.c1 IN ()))))OR(vt0.c2 COLLATE NOCASE)))AND(((t0.c40) BETWEEN (v0.c2) AND (t0.c57))))) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c2) THEN ((t0.c57) BETWEEN (vt1.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c40 COLLATE BINARY)AND((+ (x'')))))AND((vt0.c1 IN ()))))OR(vt0.c2 COLLATE NOCASE)))AND(((t0.c40) BETWEEN (v0.c2) AND (t0.c57))))) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c2) THEN ((t0.c57) BETWEEN (vt1.c0) AND (v0.c0)) END);
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE (((((((((t0.c40 COLLATE BINARY)AND((+ (x'')))))AND((vt0.c1 IN ()))))OR(vt0.c2 COLLATE NOCASE)))AND(((t0.c40) BETWEEN (v0.c2) AND (t0.c57))))) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c2) THEN ((t0.c57) BETWEEN (vt1.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c40 COLLATE BINARY)AND((+ (x'')))))AND((vt0.c1 IN ()))))OR(vt0.c2 COLLATE NOCASE)))AND(((t0.c40) BETWEEN (v0.c2) AND (t0.c57))))) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c2) THEN ((t0.c57) BETWEEN (vt1.c0) AND (v0.c0)) END);
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE (((((((((t0.c40 COLLATE BINARY)AND((+ (x'')))))AND((vt0.c1 IN ()))))OR(vt0.c2 COLLATE NOCASE)))AND(((t0.c40) BETWEEN (v0.c2) AND (t0.c57))))) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c2) THEN ((t0.c57) BETWEEN (vt1.c0) AND (v0.c0)) END;
SELECT ALL COUNT(*) FROM t0 WHERE (0.08681122773997707);
SELECT SUM(count) FROM (SELECT ALL ((0.08681122773997707) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.08681122773997707);
SELECT SUM(count) FROM (SELECT ALL ((0.08681122773997707) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.08681122773997707);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (NULL);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((v0.c2)OR(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((v0.c2)OR(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((v0.c2)OR(vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((CAST(vt0.c1 AS TEXT))AND((((vt0.c0))>=((t0.c40))))))OR(CASE WHEN t0.c0 THEN vt0.c1 END)))OR(((t0.c0)>(v0.c2)))))AND(v0.c0)) RIGHT OUTER JOIN t0 ON ((0.3921940090342041)>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt1 ON ((vt0.c2)&(t0.c57)) COLLATE BINARY WHERE (t0.c40);
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((CAST(vt0.c1 AS TEXT))AND((((vt0.c0))>=((t0.c40))))))OR(CASE WHEN t0.c0 THEN vt0.c1 END)))OR(((t0.c0)>(v0.c2)))))AND(v0.c0)) RIGHT OUTER JOIN t0 ON ((0.3921940090342041)>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt1 ON ((vt0.c2)&(t0.c57)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((CAST(vt0.c1 AS TEXT))AND((((vt0.c0))>=((t0.c40))))))OR(CASE WHEN t0.c0 THEN vt0.c1 END)))OR(((t0.c0)>(v0.c2)))))AND(v0.c0)) RIGHT OUTER JOIN t0 ON ((0.3921940090342041)>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt1 ON ((vt0.c2)&(t0.c57)) COLLATE BINARY WHERE (t0.c40);
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((CAST(vt0.c1 AS TEXT))AND((((vt0.c0))>=((t0.c40))))))OR(CASE WHEN t0.c0 THEN vt0.c1 END)))OR(((t0.c0)>(v0.c2)))))AND(v0.c0)) RIGHT OUTER JOIN t0 ON ((0.3921940090342041)>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt1 ON ((vt0.c2)&(t0.c57)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0, vt1 INNER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0, vt1 INNER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY WHERE (v0.c1);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((x'') NOT NULL)) ORDER BY CAST(((t0.c40) NOTNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(((t0.c40) NOTNULL) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((x'') NOT NULL)) ORDER BY CAST(((t0.c40) NOTNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(((t0.c40) NOTNULL) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((x'') NOT NULL)) ORDER BY CAST(((t0.c40) NOTNULL) AS TEXT) ASC;
SELECT * FROM v0, t0, vt0, vt1 WHERE (((CAST(t0.c57 AS INTEGER)) BETWEEN (((v0.c2)/(0.36695756167179927))) AND (vt1.c0 COLLATE BINARY))) ORDER BY MIN(((v0.c2)>>(0.44603202027505584)), ((vt0.c0)+(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c57 AS INTEGER)) BETWEEN (((v0.c2)/(0.36695756167179927))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0, vt0, vt1 ORDER BY MIN(((v0.c2)>>(0.44603202027505584)), ((vt0.c0)+(vt0.c1))));
SELECT * FROM v0, t0, vt0, vt1 WHERE (((CAST(t0.c57 AS INTEGER)) BETWEEN (((v0.c2)/(0.36695756167179927))) AND (vt1.c0 COLLATE BINARY))) ORDER BY MIN(((v0.c2)>>(0.44603202027505584)), ((vt0.c0)+(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c57 AS INTEGER)) BETWEEN (((v0.c2)/(0.36695756167179927))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0, vt0, vt1 ORDER BY MIN(((v0.c2)>>(0.44603202027505584)), ((vt0.c0)+(vt0.c1))));
SELECT * FROM v0, t0, vt0, vt1 WHERE (((CAST(t0.c57 AS INTEGER)) BETWEEN (((v0.c2)/(0.36695756167179927))) AND (vt1.c0 COLLATE BINARY))) ORDER BY MIN(((v0.c2)>>(0.44603202027505584)), ((vt0.c0)+(vt0.c1)));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 NATURAL JOIN t0 WHERE (((((t0.c57)%(v0.c2)))IS((vt0.c1 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57)%(v0.c2)))IS((vt0.c1 IN (v0.c2))))) IS TRUE)  as count FROM vt1, v0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 NATURAL JOIN t0 WHERE (((((t0.c57)%(v0.c2)))IS((vt0.c1 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57)%(v0.c2)))IS((vt0.c1 IN (v0.c2))))) IS TRUE)  as count FROM vt1, v0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 NATURAL JOIN t0 WHERE (((((t0.c57)%(v0.c2)))IS((vt0.c1 IN (v0.c2)))));
SELECT * FROM vt0 WHERE (CAST((('r/W	')>(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('r/W	')>(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((('r/W	')>(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('r/W	')>(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((('r/W	')>(vt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (+ (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (- ((v0.c0 IN ()))) WHERE ((((vt0.c2)) BETWEEN ((((t0.c0) IS TRUE))) AND (((~ (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((((t0.c0) IS TRUE))) AND (((~ (v0.c1)))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (+ (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (- ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (+ (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (- ((v0.c0 IN ()))) WHERE ((((vt0.c2)) BETWEEN ((((t0.c0) IS TRUE))) AND (((~ (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((((t0.c0) IS TRUE))) AND (((~ (v0.c1)))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (+ (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (- ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (+ (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (- ((v0.c0 IN ()))) WHERE ((((vt0.c2)) BETWEEN ((((t0.c0) IS TRUE))) AND (((~ (v0.c1))))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1)|(vt0.c2)) THEN CAST(vt0.c0 AS NUMERIC) ELSE CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)|(vt0.c2)) THEN CAST(vt0.c0 AS NUMERIC) ELSE CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1)|(vt0.c2)) THEN CAST(vt0.c0 AS NUMERIC) ELSE CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)|(vt0.c2)) THEN CAST(vt0.c0 AS NUMERIC) ELSE CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1)|(vt0.c2)) THEN CAST(vt0.c0 AS NUMERIC) ELSE CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END END);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON TRIM(DISTINCT t0.c57 COLLATE BINARY) WHERE (((((t0.c40)AND(vt0.c1)))AND(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c40)AND(vt0.c1)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON TRIM(DISTINCT t0.c57 COLLATE BINARY));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON TRIM(DISTINCT t0.c57 COLLATE BINARY) WHERE (((((t0.c40)AND(vt0.c1)))AND(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c40)AND(vt0.c1)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON TRIM(DISTINCT t0.c57 COLLATE BINARY));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON TRIM(DISTINCT t0.c57 COLLATE BINARY) WHERE (((((t0.c40)AND(vt0.c1)))AND(t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c40, t0.c57, t0.c0)) BETWEEN (((((t0.c0))<>((0.22777916945610854))), (NOT (t0.c40)), ((t0.c57)<=(t0.c0)))) AND ((CAST(t0.c40 AS REAL), ((t0.c57) BETWEEN (t0.c40) AND (t0.c0)), t0.c40)))) ORDER BY CAST((((t0.c40))<=((t0.c57))) AS TEXT), ((((CASE WHEN t0.c0 THEN '' END)AND(NULL)))OR(((((t0.c40)OR(t0.c57)))OR(t0.c57)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40, t0.c57, t0.c0)) BETWEEN (((((t0.c0))!=((0.22777916945610854))), (NOT (t0.c40)), ((t0.c57)<=(t0.c0)))) AND ((CAST(t0.c40 AS REAL), ((t0.c57) BETWEEN (t0.c40) AND (t0.c0)), t0.c40)))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c40))<=((t0.c57))) AS TEXT), ((((CASE WHEN t0.c0 THEN '' END)AND(NULL)))OR(((((t0.c40)OR(t0.c57)))OR(t0.c57)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c40, t0.c57, t0.c0)) BETWEEN (((((t0.c0))<>((0.22777916945610854))), (NOT (t0.c40)), ((t0.c57)<=(t0.c0)))) AND ((CAST(t0.c40 AS REAL), ((t0.c57) BETWEEN (t0.c40) AND (t0.c0)), t0.c40)))) ORDER BY CAST((((t0.c40))<=((t0.c57))) AS TEXT), ((((CASE WHEN t0.c0 THEN '' END)AND(NULL)))OR(((((t0.c40)OR(t0.c57)))OR(t0.c57)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40, t0.c57, t0.c0)) BETWEEN (((((t0.c0))!=((0.22777916945610854))), (NOT (t0.c40)), ((t0.c57)<=(t0.c0)))) AND ((CAST(t0.c40 AS REAL), ((t0.c57) BETWEEN (t0.c40) AND (t0.c0)), t0.c40)))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c40))<=((t0.c57))) AS TEXT), ((((CASE WHEN t0.c0 THEN '' END)AND(NULL)))OR(((((t0.c40)OR(t0.c57)))OR(t0.c57)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c40, t0.c57, t0.c0)) BETWEEN (((((t0.c0))<>((0.22777916945610854))), (NOT (t0.c40)), ((t0.c57)<=(t0.c0)))) AND ((CAST(t0.c40 AS REAL), ((t0.c57) BETWEEN (t0.c40) AND (t0.c0)), t0.c40)))) ORDER BY CAST((((t0.c40))<=((t0.c57))) AS TEXT), ((((CASE WHEN t0.c0 THEN '' END)AND(NULL)))OR(((((t0.c40)OR(t0.c57)))OR(t0.c57)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((~ (CASE t0.c40  WHEN t0.c40 THEN t0.c0 ELSE t0.c40 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE t0.c40  WHEN t0.c40 THEN t0.c0 ELSE t0.c40 END))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((~ (CASE t0.c40  WHEN t0.c40 THEN t0.c0 ELSE t0.c40 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE t0.c40  WHEN t0.c40 THEN t0.c0 ELSE t0.c40 END))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((~ (CASE t0.c40  WHEN t0.c40 THEN t0.c0 ELSE t0.c40 END)));
SELECT ALL * FROM vt1, v0 WHERE (((v0.c2)<<(v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c2)<<(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((v0.c2)<<(v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c2)<<(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((v0.c2)<<(v0.c1)) COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE (((((NULL)AND(((vt0.c1)||(vt1.c0)))))AND(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((vt0.c1)||(vt1.c0)))))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((NULL)AND(((vt0.c1)||(vt1.c0)))))AND(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((vt0.c1)||(vt1.c0)))))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((NULL)AND(((vt0.c1)||(vt1.c0)))))AND(((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (3.3498112E8) ORDER BY ((vt0.c1)/((((vt0.c0))>=((vt0.c2))))) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((3.3498112E8) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)/((((vt0.c0))>=((vt0.c2))))) ASC, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (3.3498112E8) ORDER BY ((vt0.c1)/((((vt0.c0))>=((vt0.c2))))) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((3.3498112E8) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)/((((vt0.c0))>=((vt0.c2))))) ASC, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (3.3498112E8) ORDER BY ((vt0.c1)/((((vt0.c0))>=((vt0.c2))))) ASC, NULL  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.3382268574067496 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.3382268574067496 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.3382268574067496 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.3382268574067496 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.3382268574067496 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c0)-(t0.c40)))OR((vt0.c2 IN ()))))OR(((t0.c40)<>('-154157532')))))AND(vt0.c1)))AND(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)-(t0.c40)))OR((vt0.c2 IN ()))))OR(((t0.c40)!=('-154157532')))))AND(vt0.c1)))AND(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c0)-(t0.c40)))OR((vt0.c2 IN ()))))OR(((t0.c40)<>('-154157532')))))AND(vt0.c1)))AND(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)-(t0.c40)))OR((vt0.c2 IN ()))))OR(((t0.c40)!=('-154157532')))))AND(vt0.c1)))AND(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c0)-(t0.c40)))OR((vt0.c2 IN ()))))OR(((t0.c40)<>('-154157532')))))AND(vt0.c1)))AND(t0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1, t0, v0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c57) AND (t0.c40))))=((CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) NOT BETWEEN (t0.c57) AND (t0.c40))))==((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM vt0, vt1, t0, v0);
SELECT COUNT(*) FROM vt0, vt1, t0, v0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c57) AND (t0.c40))))=((CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) NOT BETWEEN (t0.c57) AND (t0.c40))))==((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM vt0, vt1, t0, v0);
SELECT COUNT(*) FROM vt0, vt1, t0, v0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c57) AND (t0.c40))))=((CAST(t0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0, v0 WHERE ((((vt0.c0 IN ()))==(((vt1.c0)>>(v0.c2))))) ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((x''))) DESC, (((- (v0.c1)))GLOB(t0.c40)) ASC  NULLS FIRST, CAST(((x'') NOT BETWEEN (v0.c1) AND (t0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))==(((vt1.c0)>>(v0.c2))))) IS TRUE)  as count FROM vt0, vt1, t0, v0 ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((x''))) DESC, (((- (v0.c1)))GLOB(t0.c40)) ASC  NULLS FIRST, CAST(((x'') NOT BETWEEN (v0.c1) AND (t0.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, v0 WHERE ((((vt0.c0 IN ()))==(((vt1.c0)>>(v0.c2))))) ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((x''))) DESC, (((- (v0.c1)))GLOB(t0.c40)) ASC  NULLS FIRST, CAST(((x'') NOT BETWEEN (v0.c1) AND (t0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))==(((vt1.c0)>>(v0.c2))))) IS TRUE)  as count FROM vt0, vt1, t0, v0 ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((x''))) DESC, (((- (v0.c1)))GLOB(t0.c40)) ASC  NULLS FIRST, CAST(((x'') NOT BETWEEN (v0.c1) AND (t0.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, v0 WHERE ((((vt0.c0 IN ()))==(((vt1.c0)>>(v0.c2))))) ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((x''))) DESC, (((- (v0.c1)))GLOB(t0.c40)) ASC  NULLS FIRST, CAST(((x'') NOT BETWEEN (v0.c1) AND (t0.c0)) AS TEXT) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c57) IS TRUE))IS NOT((NOT (t0.c0))))) ORDER BY ((((-3.93757375E8)+(t0.c40))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57) IS TRUE))IS NOT((NOT (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((-3.93757375E8)+(t0.c40))) NOTNULL) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c57) IS TRUE))IS NOT((NOT (t0.c0))))) ORDER BY ((((-3.93757375E8)+(t0.c40))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57) IS TRUE))IS NOT((NOT (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((-3.93757375E8)+(t0.c40))) NOTNULL) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c57) IS TRUE))IS NOT((NOT (t0.c0))))) ORDER BY ((((-3.93757375E8)+(t0.c40))) NOTNULL) ASC;
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE ((((v0.c1)) NOT BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) ORDER BY ((JULIANDAY(v0.c0, t0.c0, t0.c40)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY ((JULIANDAY(v0.c0, t0.c0, t0.c40)) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE ((((v0.c1)) NOT BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) ORDER BY ((JULIANDAY(v0.c0, t0.c0, t0.c40)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY ((JULIANDAY(v0.c0, t0.c0, t0.c40)) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE ((((v0.c1)) NOT BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) ORDER BY ((JULIANDAY(v0.c0, t0.c0, t0.c40)) ISNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((CAST(t0.c57 AS INTEGER))AND((((t0.c57)) BETWEEN ((t0.c57)) AND ((vt1.c0))))))OR(((vt0.c0)*(vt0.c2))))) ORDER BY (CASE WHEN '-J' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c40 THEN '27' END IN ()), LENGTH((+ (vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c57 AS INTEGER))AND((((t0.c57)) BETWEEN ((t0.c57)) AND ((vt1.c0))))))OR(((vt0.c0)*(vt0.c2))))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, vt1 ORDER BY (CASE WHEN '-J' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c40 THEN '27' END IN ()), LENGTH((+ (vt0.c2))) ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((CAST(t0.c57 AS INTEGER))AND((((t0.c57)) BETWEEN ((t0.c57)) AND ((vt1.c0))))))OR(((vt0.c0)*(vt0.c2))))) ORDER BY (CASE WHEN '-J' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c40 THEN '27' END IN ()), LENGTH((+ (vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c57 AS INTEGER))AND((((t0.c57)) BETWEEN ((t0.c57)) AND ((vt1.c0))))))OR(((vt0.c0)*(vt0.c2))))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, vt1 ORDER BY (CASE WHEN '-J' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c40 THEN '27' END IN ()), LENGTH((+ (vt0.c2))) ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((CAST(t0.c57 AS INTEGER))AND((((t0.c57)) BETWEEN ((t0.c57)) AND ((vt1.c0))))))OR(((vt0.c0)*(vt0.c2))))) ORDER BY (CASE WHEN '-J' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c40 THEN '27' END IN ()), LENGTH((+ (vt0.c2))) ASC;
SELECT COUNT(*) FROM vt0, t0, v0, vt1 WHERE (((((v0.c1)IS NOT(t0.c40)))AND(((NULL) NOT NULL)))) ORDER BY t0.c40 ASC, CASE WHEN v0.c2 THEN ((vt0.c0)=(v0.c0)) ELSE (NOT (v0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)IS NOT(t0.c40)))AND(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt0, t0, v0, vt1 ORDER BY t0.c40 ASC, CASE WHEN v0.c2 THEN ((vt0.c0)==(v0.c0)) ELSE (NOT (v0.c1)) END ASC);
SELECT COUNT(*) FROM vt0, t0, v0, vt1 WHERE (((((v0.c1)IS NOT(t0.c40)))AND(((NULL) NOT NULL)))) ORDER BY t0.c40 ASC, CASE WHEN v0.c2 THEN ((vt0.c0)=(v0.c0)) ELSE (NOT (v0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)IS NOT(t0.c40)))AND(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt0, t0, v0, vt1 ORDER BY t0.c40 ASC, CASE WHEN v0.c2 THEN ((vt0.c0)==(v0.c0)) ELSE (NOT (v0.c1)) END ASC);
SELECT COUNT(*) FROM vt0, t0, v0, vt1 WHERE (((((v0.c1)IS NOT(t0.c40)))AND(((NULL) NOT NULL)))) ORDER BY t0.c40 ASC, CASE WHEN v0.c2 THEN ((vt0.c0)=(v0.c0)) ELSE (NOT (v0.c1)) END ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)+(vt1.c0)))LIKE((- (vt1.c0))))) ORDER BY (vt1.c0 IN ()), CASE ((vt1.c0) ISNULL)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)+(vt1.c0)))LIKE((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()), CASE ((vt1.c0) ISNULL)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)+(vt1.c0)))LIKE((- (vt1.c0))))) ORDER BY (vt1.c0 IN ()), CASE ((vt1.c0) ISNULL)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)+(vt1.c0)))LIKE((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()), CASE ((vt1.c0) ISNULL)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)+(vt1.c0)))LIKE((- (vt1.c0))))) ORDER BY (vt1.c0 IN ()), CASE ((vt1.c0) ISNULL)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1, t0, vt0 WHERE ((((vt0.c1)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c57) NOT BETWEEN (v0.c0) AND (t0.c57)))))) ORDER BY (((NOT (t0.c0)))LIKE((v0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c57) NOT BETWEEN (v0.c0) AND (t0.c57)))))) IS TRUE)  as count FROM v0, vt1, t0, vt0 ORDER BY (((NOT (t0.c0)))LIKE((v0.c2 IN ()))) ASC);
SELECT COUNT(*) FROM v0, vt1, t0, vt0 WHERE ((((vt0.c1)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c57) NOT BETWEEN (v0.c0) AND (t0.c57)))))) ORDER BY (((NOT (t0.c0)))LIKE((v0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c57) NOT BETWEEN (v0.c0) AND (t0.c57)))))) IS TRUE)  as count FROM v0, vt1, t0, vt0 ORDER BY (((NOT (t0.c0)))LIKE((v0.c2 IN ()))) ASC);
SELECT COUNT(*) FROM v0, vt1, t0, vt0 WHERE ((((vt0.c1)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c57) NOT BETWEEN (v0.c0) AND (t0.c57)))))) ORDER BY (((NOT (t0.c0)))LIKE((v0.c2 IN ()))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (x'8e23');
SELECT SUM(count) FROM (SELECT ((x'8e23') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'8e23');
SELECT SUM(count) FROM (SELECT ((x'8e23') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'8e23');
SELECT * FROM v0 WHERE (((v0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c1) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c1) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1) ISNULL));
SELECT ALL COUNT(*) FROM v0, t0, vt1 LEFT OUTER JOIN vt0 ON CAST(t0.c57 AS NUMERIC) WHERE (json_array('-338215327', ((v0.c1) BETWEEN (vt0.c0) AND (t0.c57)))) ORDER BY '169115403';
SELECT SUM(count) FROM (SELECT ((json_array('-338215327', ((v0.c1) BETWEEN (vt0.c0) AND (t0.c57)))) IS TRUE)  as count FROM v0, t0, vt1 LEFT OUTER JOIN vt0 ON CAST(t0.c57 AS NUMERIC) ORDER BY '169115403');
SELECT ALL COUNT(*) FROM v0, t0, vt1 LEFT OUTER JOIN vt0 ON CAST(t0.c57 AS NUMERIC) WHERE (json_array('-338215327', ((v0.c1) BETWEEN (vt0.c0) AND (t0.c57)))) ORDER BY '169115403';
SELECT SUM(count) FROM (SELECT ((json_array('-338215327', ((v0.c1) BETWEEN (vt0.c0) AND (t0.c57)))) IS TRUE)  as count FROM v0, t0, vt1 LEFT OUTER JOIN vt0 ON CAST(t0.c57 AS NUMERIC) ORDER BY '169115403');
SELECT ALL COUNT(*) FROM v0, t0, vt1 LEFT OUTER JOIN vt0 ON CAST(t0.c57 AS NUMERIC) WHERE (json_array('-338215327', ((v0.c1) BETWEEN (vt0.c0) AND (t0.c57)))) ORDER BY '169115403';
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)>=(0.9405040298650806)) THEN (((t0.c0))<>((t0.c0))) ELSE (((t0.c57))!=((t0.c0))) END) ORDER BY x'28aa' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)>=(0.9405040298650806)) THEN (((t0.c0))!=((t0.c0))) ELSE (((t0.c57))!=((t0.c0))) END) IS TRUE)  as count FROM t0 ORDER BY x'28aa' ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)>=(0.9405040298650806)) THEN (((t0.c0))<>((t0.c0))) ELSE (((t0.c57))!=((t0.c0))) END) ORDER BY x'28aa' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)>=(0.9405040298650806)) THEN (((t0.c0))!=((t0.c0))) ELSE (((t0.c57))!=((t0.c0))) END) IS TRUE)  as count FROM t0 ORDER BY x'28aa' ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)>=(0.9405040298650806)) THEN (((t0.c0))<>((t0.c0))) ELSE (((t0.c57))!=((t0.c0))) END) ORDER BY x'28aa' ASC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=(CAST(vt1.c0 AS REAL))) WHERE (CASE WHEN CAST(vt0.c2 AS TEXT) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) END) ORDER BY (((((vt0.c1)<(vt0.c1))))>=((SUBSTR(vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c2 AS TEXT) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=(CAST(vt1.c0 AS REAL))) ORDER BY (((((vt0.c1)<(vt0.c1))))>=((SUBSTR(vt0.c0, vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=(CAST(vt1.c0 AS REAL))) WHERE (CASE WHEN CAST(vt0.c2 AS TEXT) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) END) ORDER BY (((((vt0.c1)<(vt0.c1))))>=((SUBSTR(vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c2 AS TEXT) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=(CAST(vt1.c0 AS REAL))) ORDER BY (((((vt0.c1)<(vt0.c1))))>=((SUBSTR(vt0.c0, vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=(CAST(vt1.c0 AS REAL))) WHERE (CASE WHEN CAST(vt0.c2 AS TEXT) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) END) ORDER BY (((((vt0.c1)<(vt0.c1))))>=((SUBSTR(vt0.c0, vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (x'7d01') AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (0X2d2f21a1) AND (NULL))))) ASC, TRIM(((vt0.c0)<=(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (x'7d01') AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (0X2d2f21a1) AND (NULL))))) ASC, TRIM(((vt0.c0)<=(vt0.c1))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (x'7d01') AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (0X2d2f21a1) AND (NULL))))) ASC, TRIM(((vt0.c0)<=(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (x'7d01') AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (0X2d2f21a1) AND (NULL))))) ASC, TRIM(((vt0.c0)<=(vt0.c1))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (x'7d01') AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (0X2d2f21a1) AND (NULL))))) ASC, TRIM(((vt0.c0)<=(vt0.c1))) DESC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((((v0.c2)<<(v0.c0)))AND(((vt1.c0) IS FALSE))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)<<(v0.c0)))AND(((vt1.c0) IS FALSE))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((((v0.c2)<<(v0.c0)))AND(((vt1.c0) IS FALSE))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)<<(v0.c0)))AND(((vt1.c0) IS FALSE))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((((v0.c2)<<(v0.c0)))AND(((vt1.c0) IS FALSE))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((('-1038578335'))<=(((t0.c0 IN ())))) WHERE (json_type(UNLIKELY(t0.c40)));
SELECT SUM(count) FROM (SELECT ((json_type(UNLIKELY(t0.c40))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((('-1038578335'))<=(((t0.c0 IN ())))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((('-1038578335'))<=(((t0.c0 IN ())))) WHERE (json_type(UNLIKELY(t0.c40)));
SELECT SUM(count) FROM (SELECT ((json_type(UNLIKELY(t0.c40))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((('-1038578335'))<=(((t0.c0 IN ())))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((('-1038578335'))<=(((t0.c0 IN ())))) WHERE (json_type(UNLIKELY(t0.c40)));
SELECT COUNT(*) FROM vt0, t0, v0, vt1 WHERE ('|[');
SELECT SUM(count) FROM (SELECT (('|[') IS TRUE)  as count FROM vt0, t0, v0, vt1);
SELECT COUNT(*) FROM vt0, t0, v0, vt1 WHERE ('|[');
SELECT SUM(count) FROM (SELECT (('|[') IS TRUE)  as count FROM vt0, t0, v0, vt1);
SELECT COUNT(*) FROM vt0, t0, v0, vt1 WHERE ('|[');
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0)<(v0.c1)) AS INTEGER) WHERE (((CASE WHEN v0.c2 THEN vt1.c0 END)<<(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c2 THEN vt1.c0 END)<<(v0.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0)<(v0.c1)) AS INTEGER));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0)<(v0.c1)) AS INTEGER) WHERE (((CASE WHEN v0.c2 THEN vt1.c0 END)<<(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c2 THEN vt1.c0 END)<<(v0.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0)<(v0.c1)) AS INTEGER));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0)<(v0.c1)) AS INTEGER) WHERE (((CASE WHEN v0.c2 THEN vt1.c0 END)<<(v0.c0)));
SELECT ALL * FROM vt1, v0 WHERE ((((1832775220)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((1832775220)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((1832775220)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((1832775220)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((1832775220)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(vt0.c1, 0.7895500834529338) COLLATE RTRIM) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c1, 0.7895500834529338) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(vt0.c1, 0.7895500834529338) COLLATE RTRIM) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c1, 0.7895500834529338) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(vt0.c1, 0.7895500834529338) COLLATE RTRIM) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((('0.8685516241078023' IN ()))<<(CASE vt0.c2  WHEN vt0.c1 THEN t0.c40 END))) ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 WHEN t0.c0 THEN t0.c57 ELSE vt0.c2 END COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('0.8685516241078023' IN ()))<<(CASE vt0.c2  WHEN vt0.c1 THEN t0.c40 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 WHEN t0.c0 THEN t0.c57 ELSE vt0.c2 END COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((('0.8685516241078023' IN ()))<<(CASE vt0.c2  WHEN vt0.c1 THEN t0.c40 END))) ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 WHEN t0.c0 THEN t0.c57 ELSE vt0.c2 END COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('0.8685516241078023' IN ()))<<(CASE vt0.c2  WHEN vt0.c1 THEN t0.c40 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 WHEN t0.c0 THEN t0.c57 ELSE vt0.c2 END COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((('0.8685516241078023' IN ()))<<(CASE vt0.c2  WHEN vt0.c1 THEN t0.c40 END))) ORDER BY CASE WHEN vt0.c2 THEN vt0.c0 WHEN t0.c0 THEN vt0.c2 WHEN t0.c0 THEN t0.c57 ELSE vt0.c2 END COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END);
SELECT ALL * FROM t0 CROSS JOIN v0 ON CASE WHEN (('')=(t0.c57)) THEN v0.c2 WHEN v0.c2 COLLATE NOCASE THEN CASE t0.c57  WHEN t0.c57 THEN t0.c0 ELSE v0.c1 END WHEN (+ (NULL)) THEN t0.c40 ELSE ((v0.c2) NOT NULL) END WHERE ((+ (((t0.c57)*(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c57)*(v0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE WHEN (('')==(t0.c57)) THEN v0.c2 WHEN v0.c2 COLLATE NOCASE THEN CASE t0.c57  WHEN t0.c57 THEN t0.c0 ELSE v0.c1 END WHEN (+ (NULL)) THEN t0.c40 ELSE ((v0.c2) NOT NULL) END);
SELECT ALL * FROM t0 CROSS JOIN v0 ON CASE WHEN (('')=(t0.c57)) THEN v0.c2 WHEN v0.c2 COLLATE NOCASE THEN CASE t0.c57  WHEN t0.c57 THEN t0.c0 ELSE v0.c1 END WHEN (+ (NULL)) THEN t0.c40 ELSE ((v0.c2) NOT NULL) END WHERE ((+ (((t0.c57)*(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c57)*(v0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE WHEN (('')==(t0.c57)) THEN v0.c2 WHEN v0.c2 COLLATE NOCASE THEN CASE t0.c57  WHEN t0.c57 THEN t0.c0 ELSE v0.c1 END WHEN (+ (NULL)) THEN t0.c40 ELSE ((v0.c2) NOT NULL) END);
SELECT ALL * FROM t0 CROSS JOIN v0 ON CASE WHEN (('')=(t0.c57)) THEN v0.c2 WHEN v0.c2 COLLATE NOCASE THEN CASE t0.c57  WHEN t0.c57 THEN t0.c0 ELSE v0.c1 END WHEN (+ (NULL)) THEN t0.c40 ELSE ((v0.c2) NOT NULL) END WHERE ((+ (((t0.c57)*(v0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (((x'e763'))<=((vt1.c0))) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (((x'e763'))<=((vt1.c0))) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (((x'e763'))<=((vt1.c0))) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (((x'e763'))<=((vt1.c0))) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (((x'e763'))<=((vt1.c0))) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) END);
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE (((CAST(vt0.c2 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, vt1, v0, vt0);
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE (((CAST(vt0.c2 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, vt1, v0, vt0);
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE (((CAST(vt0.c2 AS REAL)) ISNULL));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c2) BETWEEN (vt1.c0) AND (vt0.c2)))) RIGHT OUTER JOIN t0 ON (((v0.c1 IN (v0.c0))) BETWEEN (((((t0.c57)OR(v0.c0)))OR(v0.c1))) AND (((t0.c57)>=(x'2b29')))) WHERE (x'') ORDER BY (((((('1652533512') ISNULL))OR(((t0.c40)*(vt1.c0)))))OR(((vt0.c2) BETWEEN (NULL) AND (vt1.c0))))  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))||((- (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c2) BETWEEN (vt1.c0) AND (vt0.c2)))) RIGHT OUTER JOIN t0 ON (((v0.c1 IN (v0.c0))) BETWEEN (((((t0.c57)OR(v0.c0)))OR(v0.c1))) AND (((t0.c57)>=(x'2b29')))) ORDER BY (((((('1652533512') ISNULL))OR(((t0.c40)*(vt1.c0)))))OR(((vt0.c2) BETWEEN (NULL) AND (vt1.c0))))  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))||((- (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c2) BETWEEN (vt1.c0) AND (vt0.c2)))) RIGHT OUTER JOIN t0 ON (((v0.c1 IN (v0.c0))) BETWEEN (((((t0.c57)OR(v0.c0)))OR(v0.c1))) AND (((t0.c57)>=(x'2b29')))) WHERE (x'') ORDER BY (((((('1652533512') ISNULL))OR(((t0.c40)*(vt1.c0)))))OR(((vt0.c2) BETWEEN (NULL) AND (vt1.c0))))  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))||((- (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c2) BETWEEN (vt1.c0) AND (vt0.c2)))) RIGHT OUTER JOIN t0 ON (((v0.c1 IN (v0.c0))) BETWEEN (((((t0.c57)OR(v0.c0)))OR(v0.c1))) AND (((t0.c57)>=(x'2b29')))) ORDER BY (((((('1652533512') ISNULL))OR(((t0.c40)*(vt1.c0)))))OR(((vt0.c2) BETWEEN (NULL) AND (vt1.c0))))  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))||((- (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c2) BETWEEN (vt1.c0) AND (vt0.c2)))) RIGHT OUTER JOIN t0 ON (((v0.c1 IN (v0.c0))) BETWEEN (((((t0.c57)OR(v0.c0)))OR(v0.c1))) AND (((t0.c57)>=(x'2b29')))) WHERE (x'') ORDER BY (((((('1652533512') ISNULL))OR(((t0.c40)*(vt1.c0)))))OR(((vt0.c2) BETWEEN (NULL) AND (vt1.c0))))  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))||((- (vt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE (((vt0.c0)<=(((vt0.c0)*(t0.c40))))) ORDER BY (vt1.c0 IN (vt0.c1 COLLATE RTRIM, (((t0.c40))>((t0.c57))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(((vt0.c0)*(t0.c40))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (vt1.c0 IN (vt0.c1 COLLATE RTRIM, (((t0.c40))>((t0.c57))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE (((vt0.c0)<=(((vt0.c0)*(t0.c40))))) ORDER BY (vt1.c0 IN (vt0.c1 COLLATE RTRIM, (((t0.c40))>((t0.c57))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(((vt0.c0)*(t0.c40))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (vt1.c0 IN (vt0.c1 COLLATE RTRIM, (((t0.c40))>((t0.c57))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE (((vt0.c0)<=(((vt0.c0)*(t0.c40))))) ORDER BY (vt1.c0 IN (vt0.c1 COLLATE RTRIM, (((t0.c40))>((t0.c57))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0, vt0, vt1);
SELECT COUNT(*) FROM t0, v0, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0, vt0, vt1);
SELECT COUNT(*) FROM t0, v0, vt0, vt1 WHERE (NULL);
SELECT * FROM t0, v0 WHERE (TRIM(DISTINCT UNICODE(x''), ((v0.c1) BETWEEN (t0.c57) AND (v0.c0)))) ORDER BY ((((t0.c40)) BETWEEN ((v0.c2)) AND ((t0.c40))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT UNICODE(x''), ((v0.c1) BETWEEN (t0.c57) AND (v0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c40)) BETWEEN ((v0.c2)) AND ((t0.c40))) IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (TRIM(DISTINCT UNICODE(x''), ((v0.c1) BETWEEN (t0.c57) AND (v0.c0)))) ORDER BY ((((t0.c40)) BETWEEN ((v0.c2)) AND ((t0.c40))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT UNICODE(x''), ((v0.c1) BETWEEN (t0.c57) AND (v0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c40)) BETWEEN ((v0.c2)) AND ((t0.c40))) IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (TRIM(DISTINCT UNICODE(x''), ((v0.c1) BETWEEN (t0.c57) AND (v0.c0)))) ORDER BY ((((t0.c40)) BETWEEN ((v0.c2)) AND ((t0.c40))) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1, v0 ORDER BY (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1, v0 ORDER BY (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt1, vt0, v0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) AND (CASE v0.c0  WHEN x'' THEN '-1445506456' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) AND (CASE v0.c0  WHEN x'' THEN '-1445506456' END))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) AND (CASE v0.c0  WHEN x'' THEN '-1445506456' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) AND (CASE v0.c0  WHEN x'' THEN '-1445506456' END))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) AND (CASE v0.c0  WHEN x'' THEN '-1445506456' END)));
SELECT ALL * FROM vt0, vt1, v0 WHERE (CAST((~ (vt0.c1)) AS NUMERIC)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN '-1126230416' THEN NULL WHEN vt0.c2 THEN vt0.c2 END) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN '-1126230416' THEN NULL WHEN vt0.c2 THEN vt0.c2 END) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0 WHERE (CAST((~ (vt0.c1)) AS NUMERIC)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN '-1126230416' THEN NULL WHEN vt0.c2 THEN vt0.c2 END) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN '-1126230416' THEN NULL WHEN vt0.c2 THEN vt0.c2 END) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0 WHERE (CAST((~ (vt0.c1)) AS NUMERIC)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN '-1126230416' THEN NULL WHEN vt0.c2 THEN vt0.c2 END) IS TRUE) ASC  NULLS LAST;
SELECT * FROM vt1 INNER JOIN t0 ON ((((((NULL))<=((t0.c57)))))==((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c40))))) WHERE ((NOT (0Xfffffffffcb31a79)));
SELECT SUM(count) FROM (SELECT (((NOT (0Xfffffffffcb31a79))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((NULL))<=((t0.c57)))))==((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c40))))));
SELECT * FROM vt1 INNER JOIN t0 ON ((((((NULL))<=((t0.c57)))))==((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c40))))) WHERE ((NOT (0Xfffffffffcb31a79)));
SELECT SUM(count) FROM (SELECT (((NOT (0Xfffffffffcb31a79))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((NULL))<=((t0.c57)))))==((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c40))))));
SELECT * FROM vt1 INNER JOIN t0 ON ((((((NULL))<=((t0.c57)))))==((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c40))))) WHERE ((NOT (0Xfffffffffcb31a79)));
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON x'b836bbb1' WHERE (((CAST(x'' AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON x'b836bbb1');
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON x'b836bbb1' WHERE (((CAST(x'' AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON x'b836bbb1');
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON x'b836bbb1' WHERE (((CAST(x'' AS INTEGER)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM t0 WHERE (CAST('-255080333' AS TEXT)) ORDER BY CAST(0xffffffffb984f983 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-255080333' AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CAST(0Xffffffffb984f983 AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST('-255080333' AS TEXT)) ORDER BY CAST(0xffffffffb984f983 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-255080333' AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CAST(0Xffffffffb984f983 AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST('-255080333' AS TEXT)) ORDER BY CAST(0xffffffffb984f983 AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (((- (t0.c0)) IN ())) ORDER BY (((t0.c0))<((v0.c2))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY (((t0.c0))<((v0.c2))) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (((- (t0.c0)) IN ())) ORDER BY (((t0.c0))<((v0.c2))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY (((t0.c0))<((v0.c2))) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (((- (t0.c0)) IN ())) ORDER BY (((t0.c0))<((v0.c2))) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt1.c0 COLLATE RTRIM WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt1.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt1.c0 COLLATE RTRIM WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt1.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt1.c0 COLLATE RTRIM WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) IS FALSE) COLLATE RTRIM) ORDER BY (((0x3fbf659b))<(((('2105541341')||(NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((0X3fbf659b))<(((('2105541341')||(NULL))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) IS FALSE) COLLATE RTRIM) ORDER BY (((0x3fbf659b))<(((('2105541341')||(NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((0X3fbf659b))<(((('2105541341')||(NULL))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) IS FALSE) COLLATE RTRIM) ORDER BY (((0x3fbf659b))<(((('2105541341')||(NULL))))) ASC  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE ('2114491721') ORDER BY (((vt1.c0))<=((v0.c1))) COLLATE NOCASE, ((((((v0.c0) IS FALSE))OR(((((v0.c1)OR(v0.c0)))OR(v0.c1)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (('2114491721') IS TRUE)  as count FROM vt1, v0 ORDER BY (((vt1.c0))<=((v0.c1))) COLLATE NOCASE, ((((((v0.c0) IS FALSE))OR(((((v0.c1)OR(v0.c0)))OR(v0.c1)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT * FROM vt1, v0 WHERE ('2114491721') ORDER BY (((vt1.c0))<=((v0.c1))) COLLATE NOCASE, ((((((v0.c0) IS FALSE))OR(((((v0.c1)OR(v0.c0)))OR(v0.c1)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (('2114491721') IS TRUE)  as count FROM vt1, v0 ORDER BY (((vt1.c0))<=((v0.c1))) COLLATE NOCASE, ((((((v0.c0) IS FALSE))OR(((((v0.c1)OR(v0.c0)))OR(v0.c1)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT * FROM vt1, v0 WHERE ('2114491721') ORDER BY (((vt1.c0))<=((v0.c1))) COLLATE NOCASE, ((((((v0.c0) IS FALSE))OR(((((v0.c1)OR(v0.c0)))OR(v0.c1)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT ALL * FROM v0, vt1, t0 WHERE (((((~ (t0.c40))))<=((0.7178686250015685)))) ORDER BY ((CASE t0.c57  WHEN v0.c1 THEN '-393757375' WHEN t0.c0 THEN t0.c57 WHEN 0.49794143900100807 THEN t0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t0.c40))))<=((0.7178686250015685)))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((CASE t0.c57  WHEN v0.c1 THEN '-393757375' WHEN t0.c0 THEN t0.c57 WHEN 0.49794143900100807 THEN t0.c0 END) NOTNULL) DESC);
SELECT ALL * FROM v0, vt1, t0 WHERE (((((~ (t0.c40))))<=((0.7178686250015685)))) ORDER BY ((CASE t0.c57  WHEN v0.c1 THEN '-393757375' WHEN t0.c0 THEN t0.c57 WHEN 0.49794143900100807 THEN t0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t0.c40))))<=((0.7178686250015685)))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((CASE t0.c57  WHEN v0.c1 THEN '-393757375' WHEN t0.c0 THEN t0.c57 WHEN 0.49794143900100807 THEN t0.c0 END) NOTNULL) DESC);
SELECT ALL * FROM v0, vt1, t0 WHERE (((((~ (t0.c40))))<=((0.7178686250015685)))) ORDER BY ((CASE t0.c57  WHEN v0.c1 THEN '-393757375' WHEN t0.c0 THEN t0.c57 WHEN 0.49794143900100807 THEN t0.c0 END) NOTNULL) DESC;
SELECT ALL * FROM vt1, v0 INNER JOIN vt0 ON v0.c0 FULL OUTER JOIN t0 ON ((vt1.c0 COLLATE BINARY) IS TRUE) WHERE ((((~ (v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c2))) IS FALSE)) IS TRUE)  as count FROM vt1, v0 INNER JOIN vt0 ON v0.c0 FULL OUTER JOIN t0 ON ((vt1.c0 COLLATE BINARY) IS TRUE));
SELECT ALL * FROM vt1, v0 INNER JOIN vt0 ON v0.c0 FULL OUTER JOIN t0 ON ((vt1.c0 COLLATE BINARY) IS TRUE) WHERE ((((~ (v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c2))) IS FALSE)) IS TRUE)  as count FROM vt1, v0 INNER JOIN vt0 ON v0.c0 FULL OUTER JOIN t0 ON ((vt1.c0 COLLATE BINARY) IS TRUE));
SELECT ALL * FROM vt1, v0 INNER JOIN vt0 ON v0.c0 FULL OUTER JOIN t0 ON ((vt1.c0 COLLATE BINARY) IS TRUE) WHERE ((((~ (v0.c2))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) BETWEEN (-1219417521) AND (1.102742225E9)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) BETWEEN (-1219417521) AND (1.102742225E9)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) BETWEEN (-1219417521) AND (1.102742225E9)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) BETWEEN (-1219417521) AND (1.102742225E9)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) BETWEEN (-1219417521) AND (1.102742225E9)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.5744541050559309) BETWEEN (v0.c1) AND (v0.c1)))||(((((((((v0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c1))))) ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(HEX(DISTINCT v0.c1))))OR((((v0.c1)) NOT BETWEEN ((x'cb24')) AND ((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5744541050559309) BETWEEN (v0.c1) AND (v0.c1)))||(((((((((v0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(HEX(DISTINCT v0.c1))))OR((((v0.c1)) NOT BETWEEN ((x'cb24')) AND ((v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.5744541050559309) BETWEEN (v0.c1) AND (v0.c1)))||(((((((((v0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c1))))) ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(HEX(DISTINCT v0.c1))))OR((((v0.c1)) NOT BETWEEN ((x'cb24')) AND ((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5744541050559309) BETWEEN (v0.c1) AND (v0.c1)))||(((((((((v0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(HEX(DISTINCT v0.c1))))OR((((v0.c1)) NOT BETWEEN ((x'cb24')) AND ((v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.5744541050559309) BETWEEN (v0.c1) AND (v0.c1)))||(((((((((v0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(v0.c1))))) ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(HEX(DISTINCT v0.c1))))OR((((v0.c1)) NOT BETWEEN ((x'cb24')) AND ((v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN v0 ON COALESCE(CASE WHEN '-87358475' THEN t0.c40 END, (0.1910061838096364 IN ()), CASE WHEN v0.c1 THEN vt0.c0 END, 'kTVC') FULL OUTER JOIN t0 ON (v0.c2 IN ()) WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c40))))>=(t0.c40 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c40))))>=(t0.c40 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON COALESCE(CASE WHEN '-87358475' THEN t0.c40 END, (0.1910061838096364 IN ()), CASE WHEN v0.c1 THEN vt0.c0 END, 'kTVC') FULL OUTER JOIN t0 ON (v0.c2 IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN v0 ON COALESCE(CASE WHEN '-87358475' THEN t0.c40 END, (0.1910061838096364 IN ()), CASE WHEN v0.c1 THEN vt0.c0 END, 'kTVC') FULL OUTER JOIN t0 ON (v0.c2 IN ()) WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c40))))>=(t0.c40 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c40))))>=(t0.c40 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON COALESCE(CASE WHEN '-87358475' THEN t0.c40 END, (0.1910061838096364 IN ()), CASE WHEN v0.c1 THEN vt0.c0 END, 'kTVC') FULL OUTER JOIN t0 ON (v0.c2 IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c40) IS TRUE))OR(((((((((((((v0.c2)OR(v0.c1)))OR(t0.c40)))AND('-1330958374')))AND(vt0.c1)))OR('-26215372')))OR(v0.c2)))))OR(((((vt0.c1)AND(vt0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c40) IS TRUE))OR(((((((((((((v0.c2)OR(v0.c1)))OR(t0.c40)))AND('-1330958374')))AND(vt0.c1)))OR('-26215372')))OR(v0.c2)))))OR(((((vt0.c1)AND(vt0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c40) IS TRUE))OR(((((((((((((v0.c2)OR(v0.c1)))OR(t0.c40)))AND('-1330958374')))AND(vt0.c1)))OR('-26215372')))OR(v0.c2)))))OR(((((vt0.c1)AND(vt0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c40) IS TRUE))OR(((((((((((((v0.c2)OR(v0.c1)))OR(t0.c40)))AND('-1330958374')))AND(vt0.c1)))OR('-26215372')))OR(v0.c2)))))OR(((((vt0.c1)AND(vt0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c40) IS TRUE))OR(((((((((((((v0.c2)OR(v0.c1)))OR(t0.c40)))AND('-1330958374')))AND(vt0.c1)))OR('-26215372')))OR(v0.c2)))))OR(((((vt0.c1)AND(vt0.c2)))OR(v0.c0)))));
SELECT COUNT(*) FROM vt0 INDEXED BY i10 WHERE (((CAST(vt0.c2 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0 INDEXED BY i10);
SELECT COUNT(*) FROM vt0 INDEXED BY i10 WHERE (((CAST(vt0.c2 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0 INDEXED BY i10);
SELECT ALL * FROM vt1, v0 WHERE (((((((((vt1.c0)OR(v0.c1)))OR(v0.c2)))OR(vt1.c0)))OR(v0.c0)) COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0)))) AND (((((v0.c0, v0.c1, v0.c2))!=((v0.c1, vt1.c0, vt1.c0)))))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM DESC, json_array_length('288985199') DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(v0.c1)))OR(v0.c2)))OR(vt1.c0)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0 ORDER BY (((vt1.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0)))) AND (((((v0.c0, v0.c1, v0.c2))<>((v0.c1, vt1.c0, vt1.c0)))))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM DESC, json_array_length('288985199') DESC);
SELECT ALL * FROM vt1, v0 WHERE (((((((((vt1.c0)OR(v0.c1)))OR(v0.c2)))OR(vt1.c0)))OR(v0.c0)) COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0)))) AND (((((v0.c0, v0.c1, v0.c2))!=((v0.c1, vt1.c0, vt1.c0)))))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM DESC, json_array_length('288985199') DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(v0.c1)))OR(v0.c2)))OR(vt1.c0)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0 ORDER BY (((vt1.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0)))) AND (((((v0.c0, v0.c1, v0.c2))<>((v0.c1, vt1.c0, vt1.c0)))))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM DESC, json_array_length('288985199') DESC);
SELECT ALL * FROM vt1, v0 WHERE (((((((((vt1.c0)OR(v0.c1)))OR(v0.c2)))OR(vt1.c0)))OR(v0.c0)) COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0)))) AND (((((v0.c0, v0.c1, v0.c2))!=((v0.c1, vt1.c0, vt1.c0)))))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM DESC, json_array_length('288985199') DESC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(HEX(DISTINCT NULL))))OR(IFNULL(t0.c0, v0.c1))) WHERE (((t0.c0 COLLATE BINARY)==((~ (t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)==((~ (t0.c40))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(HEX(DISTINCT NULL))))OR(IFNULL(t0.c0, v0.c1))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(HEX(DISTINCT NULL))))OR(IFNULL(t0.c0, v0.c1))) WHERE (((t0.c0 COLLATE BINARY)==((~ (t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)==((~ (t0.c40))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(HEX(DISTINCT NULL))))OR(IFNULL(t0.c0, v0.c1))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(HEX(DISTINCT NULL))))OR(IFNULL(t0.c0, v0.c1))) WHERE (((t0.c0 COLLATE BINARY)==((~ (t0.c40)))));
SELECT ALL * FROM v0 WHERE (((((IFNULL(v0.c2, v0.c2))OR((((v0.c2, v0.c2, v0.c1))>=((v0.c1, v0.c0, v0.c1))))))AND(((x'741d') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(v0.c2, v0.c2))OR((((v0.c2, v0.c2, v0.c1))>=((v0.c1, v0.c0, v0.c1))))))AND(((x'741d') NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((IFNULL(v0.c2, v0.c2))OR((((v0.c2, v0.c2, v0.c1))>=((v0.c1, v0.c0, v0.c1))))))AND(((x'741d') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(v0.c2, v0.c2))OR((((v0.c2, v0.c2, v0.c1))>=((v0.c1, v0.c0, v0.c1))))))AND(((x'741d') NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((IFNULL(v0.c2, v0.c2))OR((((v0.c2, v0.c2, v0.c1))>=((v0.c1, v0.c0, v0.c1))))))AND(((x'741d') NOTNULL))));
SELECT ALL * FROM vt1, v0 CROSS JOIN t0 ON CAST((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) AS BLOB) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 NOT INDEXED, v0 CROSS JOIN t0 ON CAST((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) AS BLOB));
SELECT ALL * FROM vt1, v0 CROSS JOIN t0 ON CAST((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) AS BLOB) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 NOT INDEXED, v0 CROSS JOIN t0 ON CAST((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) AS BLOB));
SELECT ALL * FROM vt1, v0 CROSS JOIN t0 ON CAST((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) AS BLOB) WHERE (x'');
SELECT ALL * FROM v0, vt1, vt0 WHERE ((- (((((((((((((v0.c0)OR(vt0.c2)))AND('-1064531285')))OR('?⠍')))OR(v0.c0)))AND(v0.c1)))AND(vt0.c1))))) ORDER BY (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((v0.c1))))<<(CAST(vt0.c2 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((((((v0.c0)OR(vt0.c2)))AND('-1064531285')))OR('?⠍')))OR(v0.c0)))AND(v0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((v0.c1))))<<(CAST(vt0.c2 AS TEXT))) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((- (((((((((((((v0.c0)OR(vt0.c2)))AND('-1064531285')))OR('?⠍')))OR(v0.c0)))AND(v0.c1)))AND(vt0.c1))))) ORDER BY (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((v0.c1))))<<(CAST(vt0.c2 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((((((v0.c0)OR(vt0.c2)))AND('-1064531285')))OR('?⠍')))OR(v0.c0)))AND(v0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((v0.c1))))<<(CAST(vt0.c2 AS TEXT))) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((- (((((((((((((v0.c0)OR(vt0.c2)))AND('-1064531285')))OR('?⠍')))OR(v0.c0)))AND(v0.c1)))AND(vt0.c1))))) ORDER BY (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((v0.c1))))<<(CAST(vt0.c2 AS TEXT))) ASC;
SELECT * FROM vt0, v0, vt1 WHERE (((((vt0.c0)>>(vt0.c0)))IS NOT((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))IS NOT((v0.c2 IN ())))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (((((vt0.c0)>>(vt0.c0)))IS NOT((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))IS NOT((v0.c2 IN ())))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (((((vt0.c0)>>(vt0.c0)))IS NOT((v0.c2 IN ()))));
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON CAST(t0.c57 AS REAL) WHERE ((((((t0.c0))>((t0.c40))))IS(CASE v0.c2  WHEN v0.c1 THEN t0.c57 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>((t0.c40))))IS(CASE v0.c2  WHEN v0.c1 THEN t0.c57 ELSE v0.c1 END))) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt1 ON CAST(t0.c57 AS REAL));
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON CAST(t0.c57 AS REAL) WHERE ((((((t0.c0))>((t0.c40))))IS(CASE v0.c2  WHEN v0.c1 THEN t0.c57 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>((t0.c40))))IS(CASE v0.c2  WHEN v0.c1 THEN t0.c57 ELSE v0.c1 END))) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt1 ON CAST(t0.c57 AS REAL));
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON CAST(t0.c57 AS REAL) WHERE ((((((t0.c0))>((t0.c40))))IS(CASE v0.c2  WHEN v0.c1 THEN t0.c57 ELSE v0.c1 END)));
SELECT ALL COUNT(*) FROM v0, vt1, t0 NATURAL JOIN vt0 WHERE (((((vt0.c2)&(t0.c40)))LIKE((((v0.c2, v0.c2, t0.c0))<=((vt0.c2, 0.9695766934658288, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)&(t0.c40)))LIKE((((v0.c2, v0.c2, t0.c0))<=((vt0.c2, 0.9695766934658288, vt0.c1)))))) IS TRUE)  as count FROM v0, vt1, t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 NATURAL JOIN vt0 WHERE (((((vt0.c2)&(t0.c40)))LIKE((((v0.c2, v0.c2, t0.c0))<=((vt0.c2, 0.9695766934658288, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)&(t0.c40)))LIKE((((v0.c2, v0.c2, t0.c0))<=((vt0.c2, 0.9695766934658288, vt0.c1)))))) IS TRUE)  as count FROM v0, vt1, t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 NATURAL JOIN vt0 WHERE (((((vt0.c2)&(t0.c40)))LIKE((((v0.c2, v0.c2, t0.c0))<=((vt0.c2, 0.9695766934658288, vt0.c1))))));
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c40) NOT BETWEEN (v0.c0) AND (t0.c40)))||(((((((((vt1.c0)AND(t0.c57)))AND(v0.c2)))OR(v0.c2)))AND(t0.c40)))) WHERE (CASE ((((t0.c57)OR(NULL)))AND(v0.c1))  WHEN ((t0.c0)+(v0.c1)) THEN (+ (t0.c57)) END) ORDER BY ((v0.c2 COLLATE RTRIM) IS TRUE), ((((t0.c40)OR(CAST(v0.c1 AS NUMERIC))))AND((+ (v0.c0)))) DESC  NULLS FIRST, CASE WHEN ((t0.c40) NOTNULL) THEN (((v0.c0)) NOT BETWEEN ((t0.c40)) AND ((vt1.c0))) WHEN ((((((((((((v0.c2)AND(t0.c0)))AND(t0.c0)))AND(v0.c2)))AND(t0.c57)))AND(t0.c40)))AND(vt1.c0)) THEN (((t0.c0))>((-1196632454))) WHEN CAST(t0.c57 AS REAL) THEN vt1.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c57)OR(NULL)))AND(v0.c1))  WHEN ((t0.c0)+(v0.c1)) THEN (+ (t0.c57)) END) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c40) NOT BETWEEN (v0.c0) AND (t0.c40)))||(((((((((vt1.c0)AND(t0.c57)))AND(v0.c2)))OR(v0.c2)))AND(t0.c40)))) ORDER BY ((v0.c2 COLLATE RTRIM) IS TRUE), ((((t0.c40)OR(CAST(v0.c1 AS NUMERIC))))AND((+ (v0.c0)))) DESC  NULLS FIRST, CASE WHEN ((t0.c40) NOTNULL) THEN (((v0.c0)) NOT BETWEEN ((t0.c40)) AND ((vt1.c0))) WHEN ((((((((((((v0.c2)AND(t0.c0)))AND(t0.c0)))AND(v0.c2)))AND(t0.c57)))AND(t0.c40)))AND(vt1.c0)) THEN (((t0.c0))>((-1196632454))) WHEN CAST(t0.c57 AS REAL) THEN vt1.c0 END);
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c40) NOT BETWEEN (v0.c0) AND (t0.c40)))||(((((((((vt1.c0)AND(t0.c57)))AND(v0.c2)))OR(v0.c2)))AND(t0.c40)))) WHERE (CASE ((((t0.c57)OR(NULL)))AND(v0.c1))  WHEN ((t0.c0)+(v0.c1)) THEN (+ (t0.c57)) END) ORDER BY ((v0.c2 COLLATE RTRIM) IS TRUE), ((((t0.c40)OR(CAST(v0.c1 AS NUMERIC))))AND((+ (v0.c0)))) DESC  NULLS FIRST, CASE WHEN ((t0.c40) NOTNULL) THEN (((v0.c0)) NOT BETWEEN ((t0.c40)) AND ((vt1.c0))) WHEN ((((((((((((v0.c2)AND(t0.c0)))AND(t0.c0)))AND(v0.c2)))AND(t0.c57)))AND(t0.c40)))AND(vt1.c0)) THEN (((t0.c0))>((-1196632454))) WHEN CAST(t0.c57 AS REAL) THEN vt1.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c57)OR(NULL)))AND(v0.c1))  WHEN ((t0.c0)+(v0.c1)) THEN (+ (t0.c57)) END) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c40) NOT BETWEEN (v0.c0) AND (t0.c40)))||(((((((((vt1.c0)AND(t0.c57)))AND(v0.c2)))OR(v0.c2)))AND(t0.c40)))) ORDER BY ((v0.c2 COLLATE RTRIM) IS TRUE), ((((t0.c40)OR(CAST(v0.c1 AS NUMERIC))))AND((+ (v0.c0)))) DESC  NULLS FIRST, CASE WHEN ((t0.c40) NOTNULL) THEN (((v0.c0)) NOT BETWEEN ((t0.c40)) AND ((vt1.c0))) WHEN ((((((((((((v0.c2)AND(t0.c0)))AND(t0.c0)))AND(v0.c2)))AND(t0.c57)))AND(t0.c40)))AND(vt1.c0)) THEN (((t0.c0))>((-1196632454))) WHEN CAST(t0.c57 AS REAL) THEN vt1.c0 END);
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c40) NOT BETWEEN (v0.c0) AND (t0.c40)))||(((((((((vt1.c0)AND(t0.c57)))AND(v0.c2)))OR(v0.c2)))AND(t0.c40)))) WHERE (CASE ((((t0.c57)OR(NULL)))AND(v0.c1))  WHEN ((t0.c0)+(v0.c1)) THEN (+ (t0.c57)) END) ORDER BY ((v0.c2 COLLATE RTRIM) IS TRUE), ((((t0.c40)OR(CAST(v0.c1 AS NUMERIC))))AND((+ (v0.c0)))) DESC  NULLS FIRST, CASE WHEN ((t0.c40) NOTNULL) THEN (((v0.c0)) NOT BETWEEN ((t0.c40)) AND ((vt1.c0))) WHEN ((((((((((((v0.c2)AND(t0.c0)))AND(t0.c0)))AND(v0.c2)))AND(t0.c57)))AND(t0.c40)))AND(vt1.c0)) THEN (((t0.c0))>((-1196632454))) WHEN CAST(t0.c57 AS REAL) THEN vt1.c0 END;
SELECT COUNT(*) FROM vt1, t0, v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c0, t0.c57, t0.c0)) BETWEEN ((((((v0.c0)AND(t0.c57)))OR(t0.c40)), (v0.c1 IN ()), (~ (0.13842451492421715)))) AND (((+ (v0.c0)), CAST(vt0.c1 AS TEXT), v0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt1, t0, v0, vt0 ORDER BY (((v0.c0, t0.c57, t0.c0)) BETWEEN ((((((v0.c0)AND(t0.c57)))OR(t0.c40)), (v0.c1 IN ()), (~ (0.13842451492421715)))) AND (((+ (v0.c0)), CAST(vt0.c1 AS TEXT), v0.c1 COLLATE NOCASE)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c0, t0.c57, t0.c0)) BETWEEN ((((((v0.c0)AND(t0.c57)))OR(t0.c40)), (v0.c1 IN ()), (~ (0.13842451492421715)))) AND (((+ (v0.c0)), CAST(vt0.c1 AS TEXT), v0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt1, t0, v0, vt0 ORDER BY (((v0.c0, t0.c57, t0.c0)) BETWEEN ((((((v0.c0)AND(t0.c57)))OR(t0.c40)), (v0.c1 IN ()), (~ (0.13842451492421715)))) AND (((+ (v0.c0)), CAST(vt0.c1 AS TEXT), v0.c1 COLLATE NOCASE)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c0, t0.c57, t0.c0)) BETWEEN ((((((v0.c0)AND(t0.c57)))OR(t0.c40)), (v0.c1 IN ()), (~ (0.13842451492421715)))) AND (((+ (v0.c0)), CAST(vt0.c1 AS TEXT), v0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT * FROM t0, vt1, v0 WHERE ((NOT ((+ (t0.c40))))) ORDER BY CASE WHEN TRIM(v0.c1) THEN ((t0.c40)AND(t0.c57)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (t0.c40))))) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY CASE WHEN TRIM(v0.c1) THEN ((t0.c40)AND(t0.c57)) END  NULLS FIRST);
SELECT * FROM t0, vt1, v0 WHERE ((NOT ((+ (t0.c40))))) ORDER BY CASE WHEN TRIM(v0.c1) THEN ((t0.c40)AND(t0.c57)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (t0.c40))))) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY CASE WHEN TRIM(v0.c1) THEN ((t0.c40)AND(t0.c57)) END  NULLS FIRST);
SELECT * FROM t0, vt1, v0 WHERE ((NOT ((+ (t0.c40))))) ORDER BY CASE WHEN TRIM(v0.c1) THEN ((t0.c40)AND(t0.c57)) END  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c2)IS NOT(v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS NOT(v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2)IS NOT(v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS NOT(v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2)IS NOT(v0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)||(vt0.c0)) THEN ((v0.c2) NOT NULL) ELSE ((((vt0.c1)OR(v0.c1)))AND(v0.c0)) END) ORDER BY ((+ (vt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)||(vt0.c0)) THEN ((v0.c2) NOT NULL) ELSE ((((vt0.c1)OR(v0.c1)))AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((+ (vt0.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)||(vt0.c0)) THEN ((v0.c2) NOT NULL) ELSE ((((vt0.c1)OR(v0.c1)))AND(v0.c0)) END) ORDER BY ((+ (vt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)||(vt0.c0)) THEN ((v0.c2) NOT NULL) ELSE ((((vt0.c1)OR(v0.c1)))AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((+ (vt0.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)||(vt0.c0)) THEN ((v0.c2) NOT NULL) ELSE ((((vt0.c1)OR(v0.c1)))AND(v0.c0)) END) ORDER BY ((+ (vt0.c2)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN v0 ON LTRIM(((vt0.c1) IS FALSE)) WHERE ((vt0.c0 COLLATE RTRIM IN ('-418256122')));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ('-418256122'))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN v0 ON LTRIM(((vt0.c1) IS FALSE)));
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN v0 ON LTRIM(((vt0.c1) IS FALSE)) WHERE ((vt0.c0 COLLATE RTRIM IN ('-418256122')));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ('-418256122'))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN v0 ON LTRIM(((vt0.c1) IS FALSE)));
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN v0 ON LTRIM(((vt0.c1) IS FALSE)) WHERE ((vt0.c0 COLLATE RTRIM IN ('-418256122')));
SELECT COUNT(*) FROM vt1 WHERE (UPPER(((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt1.c0)<(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UPPER(((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt1.c0)<(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UPPER(((vt1.c0)<(vt1.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((((+ (t0.c40)))AND((t0.c0 IN ()))))AND((('-1596331130')IS('s䬶>,')))) RIGHT OUTER JOIN vt0 ON v0.c2 INNER JOIN v0 ON ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c1)))OR(v0.c2)))OR(t0.c0))) AND ((NULL IN (NULL)))) WHERE (((((t0.c57)|(t0.c0)))<>(((v0.c2) NOT BETWEEN (t0.c40) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57)|(t0.c0)))!=(((v0.c2) NOT BETWEEN (t0.c40) AND (v0.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((((+ (t0.c40)))AND((t0.c0 IN ()))))AND((('-1596331130')IS('s䬶>,')))) RIGHT OUTER JOIN vt0 ON v0.c2 INNER JOIN v0 ON ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c1)))OR(v0.c2)))OR(t0.c0))) AND ((NULL IN (NULL)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((((+ (t0.c40)))AND((t0.c0 IN ()))))AND((('-1596331130')IS('s䬶>,')))) RIGHT OUTER JOIN vt0 ON v0.c2 INNER JOIN v0 ON ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c1)))OR(v0.c2)))OR(t0.c0))) AND ((NULL IN (NULL)))) WHERE (((((t0.c57)|(t0.c0)))<>(((v0.c2) NOT BETWEEN (t0.c40) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57)|(t0.c0)))!=(((v0.c2) NOT BETWEEN (t0.c40) AND (v0.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((((+ (t0.c40)))AND((t0.c0 IN ()))))AND((('-1596331130')IS('s䬶>,')))) RIGHT OUTER JOIN vt0 ON v0.c2 INNER JOIN v0 ON ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c1)))OR(v0.c2)))OR(t0.c0))) AND ((NULL IN (NULL)))));
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (0.4120942678321261) ORDER BY ((x'')||(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.4120942678321261) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY ((x'')||(v0.c0))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (0.4120942678321261) ORDER BY ((x'')||(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.4120942678321261) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY ((x'')||(v0.c0))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (0.4120942678321261) ORDER BY ((x'')||(v0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) ORDER BY 0Xffffffff8860da21 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0Xffffffff8860da21 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) ORDER BY 0Xffffffff8860da21 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0Xffffffff8860da21 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) ORDER BY 0Xffffffff8860da21 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, t0, vt0 WHERE (LIKELY(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM v0, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, t0, vt0 WHERE (LIKELY(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM v0, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, t0, vt0 WHERE (LIKELY(CAST(vt0.c0 AS REAL)));
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)+((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)+((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)+((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)+((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)+((t0.c0 IN ()))));
SELECT ALL * FROM vt1, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (((((TRIM(DISTINCT vt1.c0, '{}'))OR(((vt1.c0)LIKE(vt1.c0)))))AND(COALESCE('1598891248', vt1.c0, '', vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt1.c0, '{}'))OR(((vt1.c0)LIKE(vt1.c0)))))AND(COALESCE('1598891248', vt1.c0, '', vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((TRIM(DISTINCT vt1.c0, '{}'))OR(((vt1.c0)LIKE(vt1.c0)))))AND(COALESCE('1598891248', vt1.c0, '', vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt1.c0, '{}'))OR(((vt1.c0)LIKE(vt1.c0)))))AND(COALESCE('1598891248', vt1.c0, '', vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((TRIM(DISTINCT vt1.c0, '{}'))OR(((vt1.c0)LIKE(vt1.c0)))))AND(COALESCE('1598891248', vt1.c0, '', vt1.c0))));
SELECT COUNT(*) FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((~ (t0.c57)) IN ()) WHERE (json_valid(((vt0.c0)<<(NULL))));
SELECT SUM(count) FROM (SELECT ((json_valid(((vt0.c0)<<(NULL)))) IS TRUE)  as count FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((~ (t0.c57)) IN ()));
SELECT COUNT(*) FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((~ (t0.c57)) IN ()) WHERE (json_valid(((vt0.c0)<<(NULL))));
SELECT SUM(count) FROM (SELECT ((json_valid(((vt0.c0)<<(NULL)))) IS TRUE)  as count FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((~ (t0.c57)) IN ()));
SELECT COUNT(*) FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((~ (t0.c57)) IN ()) WHERE (json_valid(((vt0.c0)<<(NULL))));
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE ((((t0.c40 IN (t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((t0.c40 IN (t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE ((((t0.c40 IN (t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((t0.c40 IN (t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE ((((t0.c40 IN (t0.c0))) NOT NULL));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt0.c1 THEN t0.c57 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c40 THEN vt0.c2 END)OR(((((vt0.c0)OR(t0.c57)))AND(vt0.c1)))))OR(((t0.c0) IS TRUE))) INNER JOIN vt0 ON ((vt0.c0)OR(v0.c2)) COLLATE BINARY WHERE (((((((vt0.c2)OR(v0.c0)))OR(x'3838ec57'))) BETWEEN (t0.c40) AND ((~ (vt0.c0))))) ORDER BY (- (vt0.c2 COLLATE NOCASE)) ASC, LTRIM(vt0.c0, t0.c40);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)OR(v0.c0)))OR(x'3838ec57'))) BETWEEN (t0.c40) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt0.c1 THEN t0.c57 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c40 THEN vt0.c2 END)OR(((((vt0.c0)OR(t0.c57)))AND(vt0.c1)))))OR(((t0.c0) IS TRUE))) INNER JOIN vt0 ON ((vt0.c0)OR(v0.c2)) COLLATE BINARY ORDER BY (- (vt0.c2 COLLATE NOCASE)) ASC, LTRIM(vt0.c0, t0.c40));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt0.c1 THEN t0.c57 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c40 THEN vt0.c2 END)OR(((((vt0.c0)OR(t0.c57)))AND(vt0.c1)))))OR(((t0.c0) IS TRUE))) INNER JOIN vt0 ON ((vt0.c0)OR(v0.c2)) COLLATE BINARY WHERE (((((((vt0.c2)OR(v0.c0)))OR(x'3838ec57'))) BETWEEN (t0.c40) AND ((~ (vt0.c0))))) ORDER BY (- (vt0.c2 COLLATE NOCASE)) ASC, LTRIM(vt0.c0, t0.c40);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)OR(v0.c0)))OR(x'3838ec57'))) BETWEEN (t0.c40) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt0.c1 THEN t0.c57 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c40 THEN vt0.c2 END)OR(((((vt0.c0)OR(t0.c57)))AND(vt0.c1)))))OR(((t0.c0) IS TRUE))) INNER JOIN vt0 ON ((vt0.c0)OR(v0.c2)) COLLATE BINARY ORDER BY (- (vt0.c2 COLLATE NOCASE)) ASC, LTRIM(vt0.c0, t0.c40));
SELECT COUNT(*) FROM vt1, v0, t0, vt0 WHERE (CASE WHEN vt1.c0 THEN v0.c0 END) ORDER BY json_array_length(((v0.c1)IS(vt0.c1))), t0.c40 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN v0.c0 END) IS TRUE)  as count FROM vt1, v0, t0, vt0 ORDER BY json_array_length(((v0.c1)IS(vt0.c1))), t0.c40 COLLATE BINARY);
SELECT COUNT(*) FROM vt1, v0, t0, vt0 WHERE (CASE WHEN vt1.c0 THEN v0.c0 END) ORDER BY json_array_length(((v0.c1)IS(vt0.c1))), t0.c40 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN v0.c0 END) IS TRUE)  as count FROM vt1, v0, t0, vt0 ORDER BY json_array_length(((v0.c1)IS(vt0.c1))), t0.c40 COLLATE BINARY);
SELECT COUNT(*) FROM vt1, v0, t0, vt0 WHERE (CASE WHEN vt1.c0 THEN v0.c0 END) ORDER BY json_array_length(((v0.c1)IS(vt0.c1))), t0.c40 COLLATE BINARY;
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE ((+ (((vt1.c0)=(v0.c0))))) ORDER BY t0.c0, ((t0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)=(v0.c0))))) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY t0.c0, ((t0.c0 COLLATE RTRIM) ISNULL) DESC);
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE ((+ (((vt1.c0)=(v0.c0))))) ORDER BY t0.c0, ((t0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)=(v0.c0))))) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY t0.c0, ((t0.c0 COLLATE RTRIM) ISNULL) DESC);
SELECT ALL * FROM t0, vt1, v0, vt0 WHERE ((+ (((vt1.c0)=(v0.c0))))) ORDER BY t0.c0, ((t0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (LIKELIHOOD(t0.c0, 0.9887202743529054)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t0.c0, 0.9887202743529054)) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (LIKELIHOOD(t0.c0, 0.9887202743529054)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t0.c0, 0.9887202743529054)) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (LIKELIHOOD(t0.c0, 0.9887202743529054)) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt0 ON CASE (v0.c2 IN ())  WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND ('\n]')) THEN t0.c57 END WHERE ((((('Zq') NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('Zq') NOTNULL)) NOTNULL)) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt0 ON CASE (v0.c2 IN ())  WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND ('\n]')) THEN t0.c57 END);
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt0 ON CASE (v0.c2 IN ())  WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND ('\n]')) THEN t0.c57 END WHERE ((((('Zq') NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('Zq') NOTNULL)) NOTNULL)) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt0 ON CASE (v0.c2 IN ())  WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND ('\n]')) THEN t0.c57 END);
SELECT * FROM vt0, vt1, v0 WHERE (IFNULL((v0.c2 IN ()), ((((v0.c2)OR(vt1.c0)))AND(v0.c1)))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL((v0.c2 IN ()), ((((v0.c2)OR(vt1.c0)))AND(v0.c1)))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS LAST);
SELECT * FROM vt0, vt1, v0 WHERE (IFNULL((v0.c2 IN ()), ((((v0.c2)OR(vt1.c0)))AND(v0.c1)))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL((v0.c2 IN ()), ((((v0.c2)OR(vt1.c0)))AND(v0.c1)))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS LAST);
SELECT * FROM vt0, vt1, v0 WHERE (IFNULL((v0.c2 IN ()), ((((v0.c2)OR(vt1.c0)))AND(v0.c1)))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 LEFT OUTER JOIN vt1 ON (((((v0.c0, vt0.c1, '([')) BETWEEN ((vt0.c1, t0.c40, t0.c40)) AND ((v0.c2, 5.34058368E8, vt0.c2))))>>(((((vt0.c0)OR(t0.c40)))OR(t0.c57)))) WHERE (((json_extract(vt0.c0, v0.c0, t0.c57, v0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(vt0.c0, v0.c0, t0.c57, v0.c0)) IS FALSE)) IS TRUE)  as count FROM t0, v0, vt0 LEFT OUTER JOIN vt1 ON (((((v0.c0, vt0.c1, '([')) BETWEEN ((vt0.c1, t0.c40, t0.c40)) AND ((v0.c2, 5.34058368E8, vt0.c2))))>>(((((vt0.c0)OR(t0.c40)))OR(t0.c57)))));
SELECT COUNT(*) FROM t0, v0, vt0 LEFT OUTER JOIN vt1 ON (((((v0.c0, vt0.c1, '([')) BETWEEN ((vt0.c1, t0.c40, t0.c40)) AND ((v0.c2, 5.34058368E8, vt0.c2))))>>(((((vt0.c0)OR(t0.c40)))OR(t0.c57)))) WHERE (((json_extract(vt0.c0, v0.c0, t0.c57, v0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(vt0.c0, v0.c0, t0.c57, v0.c0)) IS FALSE)) IS TRUE)  as count FROM t0, v0, vt0 LEFT OUTER JOIN vt1 ON (((((v0.c0, vt0.c1, '([')) BETWEEN ((vt0.c1, t0.c40, t0.c40)) AND ((v0.c2, 5.34058368E8, vt0.c2))))>>(((((vt0.c0)OR(t0.c40)))OR(t0.c57)))));
SELECT ALL * FROM vt0 WHERE (((((~ (0.8817007795226804))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))))));
SELECT SUM(count) FROM (SELECT ((((((~ (0.8817007795226804))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((~ (0.8817007795226804))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))))));
SELECT SUM(count) FROM (SELECT ((((((~ (0.8817007795226804))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((~ (0.8817007795226804))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))))));
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c2  WHEN v0.c2 THEN v0.c1 END AS TEXT)) ORDER BY (((v0.c1, NULL, v0.c1)) BETWEEN ((((v0.c0)+(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c2) NOT BETWEEN (x'') AND (v0.c2)))) AND ((((0.6059097776268082)+(v0.c1)), ((((0.11631416748621426)AND(v0.c2)))AND(v0.c1)), ((v0.c2)>=(v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c2  WHEN v0.c2 THEN v0.c1 END AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1, NULL, v0.c1)) BETWEEN ((((v0.c0)+(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c2) NOT BETWEEN (x'') AND (v0.c2)))) AND ((((0.6059097776268082)+(v0.c1)), ((((0.11631416748621426)AND(v0.c2)))AND(v0.c1)), ((v0.c2)>=(v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c2  WHEN v0.c2 THEN v0.c1 END AS TEXT)) ORDER BY (((v0.c1, NULL, v0.c1)) BETWEEN ((((v0.c0)+(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c2) NOT BETWEEN (x'') AND (v0.c2)))) AND ((((0.6059097776268082)+(v0.c1)), ((((0.11631416748621426)AND(v0.c2)))AND(v0.c1)), ((v0.c2)>=(v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c2  WHEN v0.c2 THEN v0.c1 END AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1, NULL, v0.c1)) BETWEEN ((((v0.c0)+(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c2) NOT BETWEEN (x'') AND (v0.c2)))) AND ((((0.6059097776268082)+(v0.c1)), ((((0.11631416748621426)AND(v0.c2)))AND(v0.c1)), ((v0.c2)>=(v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c2  WHEN v0.c2 THEN v0.c1 END AS TEXT)) ORDER BY (((v0.c1, NULL, v0.c1)) BETWEEN ((((v0.c0)+(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c2) NOT BETWEEN (x'') AND (v0.c2)))) AND ((((0.6059097776268082)+(v0.c1)), ((((0.11631416748621426)AND(v0.c2)))AND(v0.c1)), ((v0.c2)>=(v0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- ((((v0.c2)) BETWEEN ((v0.c2)) AND ((vt1.c0)))))) ORDER BY (((v0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((v0.c2) NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((((v0.c2)) BETWEEN ((v0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((v0.c2) NOT NULL)))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- ((((v0.c2)) BETWEEN ((v0.c2)) AND ((vt1.c0)))))) ORDER BY (((v0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((v0.c2) NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((((v0.c2)) BETWEEN ((v0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((v0.c2) NOT NULL)))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- ((((v0.c2)) BETWEEN ((v0.c2)) AND ((vt1.c0)))))) ORDER BY (((v0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((v0.c2) NOT NULL)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE MIN(vt1.c0, NULL)  WHEN 1.15763237E8 COLLATE BINARY THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN COALESCE(vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE MIN(vt1.c0, NULL)  WHEN 1.15763237E8 COLLATE BINARY THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN COALESCE(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE MIN(vt1.c0, NULL)  WHEN 1.15763237E8 COLLATE BINARY THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN COALESCE(vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE MIN(vt1.c0, NULL)  WHEN 1.15763237E8 COLLATE BINARY THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN COALESCE(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE MIN(vt1.c0, NULL)  WHEN 1.15763237E8 COLLATE BINARY THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN COALESCE(vt1.c0, vt1.c0) END);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE ((((((v0.c2)|(t0.c40))))<>((0.8519111085745177))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)|(t0.c40))))!=((0.8519111085745177)))) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE ((((((v0.c2)|(t0.c40))))<>((0.8519111085745177))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)|(t0.c40))))!=((0.8519111085745177)))) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE ((((((v0.c2)|(t0.c40))))<>((0.8519111085745177))));
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE WHEN t0.c40 THEN v0.c0 COLLATE NOCASE WHEN ((t0.c57) NOT NULL) THEN v0.c1 COLLATE NOCASE WHEN ((v0.c1)*(0.534731537437958)) THEN vt0.c2 COLLATE RTRIM ELSE '-1495414710' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c40 THEN v0.c0 COLLATE NOCASE WHEN ((t0.c57) NOT NULL) THEN v0.c1 COLLATE NOCASE WHEN ((v0.c1)*(0.534731537437958)) THEN vt0.c2 COLLATE RTRIM ELSE '-1495414710' END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE WHEN t0.c40 THEN v0.c0 COLLATE NOCASE WHEN ((t0.c57) NOT NULL) THEN v0.c1 COLLATE NOCASE WHEN ((v0.c1)*(0.534731537437958)) THEN vt0.c2 COLLATE RTRIM ELSE '-1495414710' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c40 THEN v0.c0 COLLATE NOCASE WHEN ((t0.c57) NOT NULL) THEN v0.c1 COLLATE NOCASE WHEN ((v0.c1)*(0.534731537437958)) THEN vt0.c2 COLLATE RTRIM ELSE '-1495414710' END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE WHEN t0.c40 THEN v0.c0 COLLATE NOCASE WHEN ((t0.c57) NOT NULL) THEN v0.c1 COLLATE NOCASE WHEN ((v0.c1)*(0.534731537437958)) THEN vt0.c2 COLLATE RTRIM ELSE '-1495414710' END);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt0.c2) NOT NULL)) IS FALSE)) ORDER BY MIN(vt0.c2, ((v0.c2) BETWEEN (vt1.c0) AND (vt0.c0))) DESC  NULLS FIRST, '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY MIN(vt0.c2, ((v0.c2) BETWEEN (vt1.c0) AND (vt0.c0))) DESC  NULLS FIRST, '' ASC);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt0.c2) NOT NULL)) IS FALSE)) ORDER BY MIN(vt0.c2, ((v0.c2) BETWEEN (vt1.c0) AND (vt0.c0))) DESC  NULLS FIRST, '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY MIN(vt0.c2, ((v0.c2) BETWEEN (vt1.c0) AND (vt0.c0))) DESC  NULLS FIRST, '' ASC);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (((((vt0.c2) NOT NULL)) IS FALSE)) ORDER BY MIN(vt0.c2, ((v0.c2) BETWEEN (vt1.c0) AND (vt0.c0))) DESC  NULLS FIRST, '' ASC;
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((- (((((((((v0.c0)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((v0.c0)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((- (((((((((v0.c0)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((v0.c0)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((- (((((((((v0.c0)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((((((((((((t0.c57) BETWEEN (vt1.c0) AND (vt0.c2)))AND(((((((((NULL)OR(t0.c40)))OR(vt1.c0)))OR(t0.c40)))OR(vt0.c2)))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t0.c0 AS REAL))))AND((t0.c40 IN (t0.c0, t0.c0)))))AND((((0.923538957314943)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((vt0.c2)>=(t0.c40))))) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c57) BETWEEN (vt1.c0) AND (vt0.c2)))AND(((((((((NULL)OR(t0.c40)))OR(vt1.c0)))OR(t0.c40)))OR(vt0.c2)))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t0.c0 AS REAL))))AND((t0.c40 IN (t0.c0, t0.c0)))))AND((((0.923538957314943)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((vt0.c2)>=(t0.c40))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt0.c2);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((((((((((((t0.c57) BETWEEN (vt1.c0) AND (vt0.c2)))AND(((((((((NULL)OR(t0.c40)))OR(vt1.c0)))OR(t0.c40)))OR(vt0.c2)))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t0.c0 AS REAL))))AND((t0.c40 IN (t0.c0, t0.c0)))))AND((((0.923538957314943)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((vt0.c2)>=(t0.c40))))) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c57) BETWEEN (vt1.c0) AND (vt0.c2)))AND(((((((((NULL)OR(t0.c40)))OR(vt1.c0)))OR(t0.c40)))OR(vt0.c2)))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t0.c0 AS REAL))))AND((t0.c40 IN (t0.c0, t0.c0)))))AND((((0.923538957314943)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((vt0.c2)>=(t0.c40))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt0.c2);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((((((((((((t0.c57) BETWEEN (vt1.c0) AND (vt0.c2)))AND(((((((((NULL)OR(t0.c40)))OR(vt1.c0)))OR(t0.c40)))OR(vt0.c2)))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t0.c0 AS REAL))))AND((t0.c40 IN (t0.c0, t0.c0)))))AND((((0.923538957314943)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((vt0.c2)>=(t0.c40))))) ORDER BY vt0.c2;
SELECT * FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (vt1.c0);
SELECT * FROM v0, vt0, vt1, t0 WHERE ((((t0.c57 IN ()))GLOB(v0.c2 COLLATE BINARY))) ORDER BY (- ((((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c57 IN ()))GLOB(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY (- ((((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, vt1, t0 WHERE ((((t0.c57 IN ()))GLOB(v0.c2 COLLATE BINARY))) ORDER BY (- ((((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c57 IN ()))GLOB(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY (- ((((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, vt1, t0 WHERE ((((t0.c57 IN ()))GLOB(v0.c2 COLLATE BINARY))) ORDER BY (- ((((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ('-2008794235') ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT (('-2008794235') IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0 WHERE ('-2008794235') ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT (('-2008794235') IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0 WHERE ('-2008794235') ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((CASE t0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN t0.c40 THEN t0.c0 WHEN 0.1824781573304941 THEN vt0.c1 END IN ())) ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c40)))) AND ((((vt1.c0)<>(t0.c40))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN t0.c40 THEN t0.c0 WHEN 0.1824781573304941 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c40)))) AND ((((vt1.c0)!=(t0.c40))))) DESC);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((CASE t0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN t0.c40 THEN t0.c0 WHEN 0.1824781573304941 THEN vt0.c1 END IN ())) ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c40)))) AND ((((vt1.c0)<>(t0.c40))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN t0.c40 THEN t0.c0 WHEN 0.1824781573304941 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c40)))) AND ((((vt1.c0)!=(t0.c40))))) DESC);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((CASE t0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN t0.c40 THEN t0.c0 WHEN 0.1824781573304941 THEN vt0.c1 END IN ())) ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c40)))) AND ((((vt1.c0)<>(t0.c40))))) DESC;
SELECT * FROM vt1, vt0, v0, t0 WHERE (((CAST(v0.c2 AS BLOB)) BETWEEN (((v0.c1)|(v0.c2))) AND (v0.c2 COLLATE RTRIM))) ORDER BY 0.11038312774031467 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS BLOB)) BETWEEN (((v0.c1)|(v0.c2))) AND (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, v0, t0 ORDER BY 0.11038312774031467 ASC  NULLS LAST);
SELECT * FROM vt1, vt0, v0, t0 WHERE (((CAST(v0.c2 AS BLOB)) BETWEEN (((v0.c1)|(v0.c2))) AND (v0.c2 COLLATE RTRIM))) ORDER BY 0.11038312774031467 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS BLOB)) BETWEEN (((v0.c1)|(v0.c2))) AND (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, v0, t0 ORDER BY 0.11038312774031467 ASC  NULLS LAST);
SELECT * FROM vt1, vt0, v0, t0 WHERE (((CAST(v0.c2 AS BLOB)) BETWEEN (((v0.c1)|(v0.c2))) AND (v0.c2 COLLATE RTRIM))) ORDER BY 0.11038312774031467 ASC  NULLS LAST;
SELECT * FROM t0, vt0, vt1 WHERE ((NOT (vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((NOT (vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((NOT (vt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0, t0, v0 WHERE (LOWER(0.4242788843552028)) ORDER BY ((CASE WHEN v0.c2 THEN 0Xffffffffdc53f4c2 ELSE vt0.c1 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(0.4242788843552028)) IS TRUE)  as count FROM vt1, vt0, t0, v0 ORDER BY ((CASE WHEN v0.c2 THEN 0Xffffffffdc53f4c2 ELSE vt0.c1 END) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0, v0 WHERE (LOWER(0.4242788843552028)) ORDER BY ((CASE WHEN v0.c2 THEN 0Xffffffffdc53f4c2 ELSE vt0.c1 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(0.4242788843552028)) IS TRUE)  as count FROM vt1, vt0, t0, v0 ORDER BY ((CASE WHEN v0.c2 THEN 0Xffffffffdc53f4c2 ELSE vt0.c1 END) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0, v0 WHERE (LOWER(0.4242788843552028)) ORDER BY ((CASE WHEN v0.c2 THEN 0Xffffffffdc53f4c2 ELSE vt0.c1 END) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt1, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT COUNT(*) FROM v0, t0, vt1, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT COUNT(*) FROM v0, t0, vt1, vt0 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ('518894023') AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))), LIKELIHOOD(((vt1.c0) IS FALSE), 0.5006934226693763), ((((vt1.c0)&(vt1.c0)))&('862258660')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ('518894023') AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))), LIKELIHOOD(((vt1.c0) IS FALSE), 0.5006934226693763), ((((vt1.c0)&(vt1.c0)))&('862258660')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ('518894023') AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))), LIKELIHOOD(((vt1.c0) IS FALSE), 0.5006934226693763), ((((vt1.c0)&(vt1.c0)))&('862258660')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ('518894023') AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))), LIKELIHOOD(((vt1.c0) IS FALSE), 0.5006934226693763), ((((vt1.c0)&(vt1.c0)))&('862258660')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ('518894023') AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))), LIKELIHOOD(((vt1.c0) IS FALSE), 0.5006934226693763), ((((vt1.c0)&(vt1.c0)))&('862258660')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c2) NOTNULL))));
SELECT * FROM v0, vt1, vt0, t0 WHERE (CASE WHEN v0.c0 THEN vt0.c1 ELSE x'4eb1' END COLLATE BINARY) ORDER BY CASE vt0.c2  WHEN ((v0.c2) ISNULL) THEN ((x'd3b3') NOT BETWEEN (0.9050632610171905) AND (t0.c40)) ELSE ((vt1.c0)>=(t0.c40)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN vt0.c1 ELSE x'4eb1' END COLLATE BINARY) IS TRUE)  as count FROM v0, vt1, vt0, t0 ORDER BY CASE vt0.c2  WHEN ((v0.c2) ISNULL) THEN ((x'd3b3') NOT BETWEEN (0.9050632610171905) AND (t0.c40)) ELSE ((vt1.c0)>=(t0.c40)) END  NULLS LAST);
SELECT * FROM v0, vt1, vt0, t0 WHERE (CASE WHEN v0.c0 THEN vt0.c1 ELSE x'4eb1' END COLLATE BINARY) ORDER BY CASE vt0.c2  WHEN ((v0.c2) ISNULL) THEN ((x'd3b3') NOT BETWEEN (0.9050632610171905) AND (t0.c40)) ELSE ((vt1.c0)>=(t0.c40)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN vt0.c1 ELSE x'4eb1' END COLLATE BINARY) IS TRUE)  as count FROM v0, vt1, vt0, t0 ORDER BY CASE vt0.c2  WHEN ((v0.c2) ISNULL) THEN ((x'd3b3') NOT BETWEEN (0.9050632610171905) AND (t0.c40)) ELSE ((vt1.c0)>=(t0.c40)) END  NULLS LAST);
SELECT * FROM v0, vt1, vt0, t0 WHERE (CASE WHEN v0.c0 THEN vt0.c1 ELSE x'4eb1' END COLLATE BINARY) ORDER BY CASE vt0.c2  WHEN ((v0.c2) ISNULL) THEN ((x'd3b3') NOT BETWEEN (0.9050632610171905) AND (t0.c40)) ELSE ((vt1.c0)>=(t0.c40)) END  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE ((((NOT (vt0.c2)))<<(CASE WHEN t0.c40 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c40 THEN vt1.c0 END))) ORDER BY ((t0.c40) IS TRUE)  NULLS FIRST, CAST(((vt0.c2)||(t0.c40)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))<<(CASE WHEN t0.c40 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c40 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((t0.c40) IS TRUE)  NULLS FIRST, CAST(((vt0.c2)||(t0.c40)) AS TEXT)  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE ((((NOT (vt0.c2)))<<(CASE WHEN t0.c40 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c40 THEN vt1.c0 END))) ORDER BY ((t0.c40) IS TRUE)  NULLS FIRST, CAST(((vt0.c2)||(t0.c40)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))<<(CASE WHEN t0.c40 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c40 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((t0.c40) IS TRUE)  NULLS FIRST, CAST(((vt0.c2)||(t0.c40)) AS TEXT)  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE ((((NOT (vt0.c2)))<<(CASE WHEN t0.c40 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c40 THEN vt1.c0 END))) ORDER BY ((t0.c40) IS TRUE)  NULLS FIRST, CAST(((vt0.c2)||(t0.c40)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('8j,X6N') ORDER BY ((('-1920225222'))>((((vt0.c0)<<(vt0.c0))))) ASC  NULLS FIRST, 0.8444941330559507;
SELECT SUM(count) FROM (SELECT ALL (('8j,X6N') IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((('-1920225222'))>((((vt0.c0)<<(vt0.c0))))) ASC  NULLS FIRST, 0.8444941330559507);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('8j,X6N') ORDER BY ((('-1920225222'))>((((vt0.c0)<<(vt0.c0))))) ASC  NULLS FIRST, 0.8444941330559507;
SELECT SUM(count) FROM (SELECT ALL (('8j,X6N') IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((('-1920225222'))>((((vt0.c0)<<(vt0.c0))))) ASC  NULLS FIRST, 0.8444941330559507);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('8j,X6N') ORDER BY ((('-1920225222'))>((((vt0.c0)<<(vt0.c0))))) ASC  NULLS FIRST, 0.8444941330559507;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((v0.c0)GLOB(v0.c1))) NOT BETWEEN ((t0.c40 IN ())) AND (CAST(t0.c57 AS BLOB))) LEFT OUTER JOIN v0 ON ((((t0.c40)OR((v0.c1 IN (v0.c0)))))AND(((v0.c0) BETWEEN (t0.c0) AND (t0.c40)))) WHERE (0.9087818929260887) ORDER BY (- (((((t0.c0)OR(v0.c0)))OR(v0.c2))))  NULLS LAST, CAST(CASE v0.c1  WHEN v0.c0 THEN x'' ELSE t0.c57 END AS BLOB) ASC, (('wr6') BETWEEN ('862258660') AND (v0.c2)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9087818929260887) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((v0.c0)GLOB(v0.c1))) NOT BETWEEN ((t0.c40 IN ())) AND (CAST(t0.c57 AS BLOB))) LEFT OUTER JOIN v0 ON ((((t0.c40)OR((v0.c1 IN (v0.c0)))))AND(((v0.c0) BETWEEN (t0.c0) AND (t0.c40)))) ORDER BY (- (((((t0.c0)OR(v0.c0)))OR(v0.c2))))  NULLS LAST, CAST(CASE v0.c1  WHEN v0.c0 THEN x'' ELSE t0.c57 END AS BLOB) ASC, (('wr6') BETWEEN ('862258660') AND (v0.c2)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((v0.c0)GLOB(v0.c1))) NOT BETWEEN ((t0.c40 IN ())) AND (CAST(t0.c57 AS BLOB))) LEFT OUTER JOIN v0 ON ((((t0.c40)OR((v0.c1 IN (v0.c0)))))AND(((v0.c0) BETWEEN (t0.c0) AND (t0.c40)))) WHERE (0.9087818929260887) ORDER BY (- (((((t0.c0)OR(v0.c0)))OR(v0.c2))))  NULLS LAST, CAST(CASE v0.c1  WHEN v0.c0 THEN x'' ELSE t0.c57 END AS BLOB) ASC, (('wr6') BETWEEN ('862258660') AND (v0.c2)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9087818929260887) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((v0.c0)GLOB(v0.c1))) NOT BETWEEN ((t0.c40 IN ())) AND (CAST(t0.c57 AS BLOB))) LEFT OUTER JOIN v0 ON ((((t0.c40)OR((v0.c1 IN (v0.c0)))))AND(((v0.c0) BETWEEN (t0.c0) AND (t0.c40)))) ORDER BY (- (((((t0.c0)OR(v0.c0)))OR(v0.c2))))  NULLS LAST, CAST(CASE v0.c1  WHEN v0.c0 THEN x'' ELSE t0.c57 END AS BLOB) ASC, (('wr6') BETWEEN ('862258660') AND (v0.c2)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((v0.c0)GLOB(v0.c1))) NOT BETWEEN ((t0.c40 IN ())) AND (CAST(t0.c57 AS BLOB))) LEFT OUTER JOIN v0 ON ((((t0.c40)OR((v0.c1 IN (v0.c0)))))AND(((v0.c0) BETWEEN (t0.c0) AND (t0.c40)))) WHERE (0.9087818929260887) ORDER BY (- (((((t0.c0)OR(v0.c0)))OR(v0.c2))))  NULLS LAST, CAST(CASE v0.c1  WHEN v0.c0 THEN x'' ELSE t0.c57 END AS BLOB) ASC, (('wr6') BETWEEN ('862258660') AND (v0.c2)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, t0 NATURAL JOIN vt0 WHERE (((((t0.c57)<(vt0.c0)))||(((v0.c2)<<(x'5690'))))) ORDER BY 797196044  NULLS FIRST, (- ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c57)<(vt0.c0)))||(((v0.c2)<<(x'5690'))))) IS TRUE)  as count FROM v0, vt1, t0 NATURAL JOIN vt0 ORDER BY 797196044  NULLS FIRST, (- ((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, t0 NATURAL JOIN vt0 WHERE (((((t0.c57)<(vt0.c0)))||(((v0.c2)<<(x'5690'))))) ORDER BY 797196044  NULLS FIRST, (- ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c57)<(vt0.c0)))||(((v0.c2)<<(x'5690'))))) IS TRUE)  as count FROM v0, vt1, t0 NATURAL JOIN vt0 ORDER BY 797196044  NULLS FIRST, (- ((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c57)-(v0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c57)-(v0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c57)-(v0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c57)-(v0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c57)-(v0.c2))) NOT NULL));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) ORDER BY 0.5706375167797678, (((vt0.c2, vt0.c0, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), (vt0.c0 IN (vt0.c2, vt0.c1)), ((vt1.c0) NOTNULL))) AND ((UNLIKELY(vt1.c0), ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)), ((vt1.c0) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.5706375167797678, (((vt0.c2, vt0.c0, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), (vt0.c0 IN (vt0.c2, vt0.c1)), ((vt1.c0) NOTNULL))) AND ((UNLIKELY(vt1.c0), ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)), ((vt1.c0) IS TRUE)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) ORDER BY 0.5706375167797678, (((vt0.c2, vt0.c0, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), (vt0.c0 IN (vt0.c2, vt0.c1)), ((vt1.c0) NOTNULL))) AND ((UNLIKELY(vt1.c0), ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)), ((vt1.c0) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.5706375167797678, (((vt0.c2, vt0.c0, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), (vt0.c0 IN (vt0.c2, vt0.c1)), ((vt1.c0) NOTNULL))) AND ((UNLIKELY(vt1.c0), ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)), ((vt1.c0) IS TRUE)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) ORDER BY 0.5706375167797678, (((vt0.c2, vt0.c0, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), (vt0.c0 IN (vt0.c2, vt0.c1)), ((vt1.c0) NOTNULL))) AND ((UNLIKELY(vt1.c0), ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)), ((vt1.c0) IS TRUE)))) ASC;
SELECT * FROM t0, vt1 WHERE ((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((t0.c57) NOTNULL), t0.c40 COLLATE RTRIM, ((t0.c40) NOT BETWEEN (vt1.c0) AND (t0.c57)))) AND ((t0.c57 COLLATE RTRIM, ((vt1.c0)<>(t0.c57)), ((t0.c0)>>(vt1.c0)))))) ORDER BY ((t0.c0 COLLATE NOCASE)IS NOT(((t0.c0) IS FALSE))) ASC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c40 WHEN '2137135219' THEN vt1.c0 WHEN t0.c40 THEN -1.762978665E9 WHEN t0.c57 THEN t0.c0 WHEN t0.c40 THEN t0.c57 ELSE '0.15508745425179782' END)==((t0.c57 IN (NULL)))), (((((t0.c57 IN ()))OR(((t0.c40) IS FALSE))))OR(CASE WHEN t0.c57 THEN t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((t0.c57) NOTNULL), t0.c40 COLLATE RTRIM, ((t0.c40) NOT BETWEEN (vt1.c0) AND (t0.c57)))) AND ((t0.c57 COLLATE RTRIM, ((vt1.c0)!=(t0.c57)), ((t0.c0)>>(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0 COLLATE NOCASE)IS NOT(((t0.c0) IS FALSE))) ASC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c40 WHEN '2137135219' THEN vt1.c0 WHEN t0.c40 THEN -1.762978665E9 WHEN t0.c57 THEN t0.c0 WHEN t0.c40 THEN t0.c57 ELSE '0.15508745425179782' END)==((t0.c57 IN (NULL)))), (((((t0.c57 IN ()))OR(((t0.c40) IS FALSE))))OR(CASE WHEN t0.c57 THEN t0.c0 END))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((t0.c57) NOTNULL), t0.c40 COLLATE RTRIM, ((t0.c40) NOT BETWEEN (vt1.c0) AND (t0.c57)))) AND ((t0.c57 COLLATE RTRIM, ((vt1.c0)<>(t0.c57)), ((t0.c0)>>(vt1.c0)))))) ORDER BY ((t0.c0 COLLATE NOCASE)IS NOT(((t0.c0) IS FALSE))) ASC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c40 WHEN '2137135219' THEN vt1.c0 WHEN t0.c40 THEN -1.762978665E9 WHEN t0.c57 THEN t0.c0 WHEN t0.c40 THEN t0.c57 ELSE '0.15508745425179782' END)==((t0.c57 IN (NULL)))), (((((t0.c57 IN ()))OR(((t0.c40) IS FALSE))))OR(CASE WHEN t0.c57 THEN t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((t0.c57) NOTNULL), t0.c40 COLLATE RTRIM, ((t0.c40) NOT BETWEEN (vt1.c0) AND (t0.c57)))) AND ((t0.c57 COLLATE RTRIM, ((vt1.c0)!=(t0.c57)), ((t0.c0)>>(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0 COLLATE NOCASE)IS NOT(((t0.c0) IS FALSE))) ASC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c40 WHEN '2137135219' THEN vt1.c0 WHEN t0.c40 THEN -1.762978665E9 WHEN t0.c57 THEN t0.c0 WHEN t0.c40 THEN t0.c57 ELSE '0.15508745425179782' END)==((t0.c57 IN (NULL)))), (((((t0.c57 IN ()))OR(((t0.c40) IS FALSE))))OR(CASE WHEN t0.c57 THEN t0.c0 END))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((t0.c57) NOTNULL), t0.c40 COLLATE RTRIM, ((t0.c40) NOT BETWEEN (vt1.c0) AND (t0.c57)))) AND ((t0.c57 COLLATE RTRIM, ((vt1.c0)<>(t0.c57)), ((t0.c0)>>(vt1.c0)))))) ORDER BY ((t0.c0 COLLATE NOCASE)IS NOT(((t0.c0) IS FALSE))) ASC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c40 WHEN '2137135219' THEN vt1.c0 WHEN t0.c40 THEN -1.762978665E9 WHEN t0.c57 THEN t0.c0 WHEN t0.c40 THEN t0.c57 ELSE '0.15508745425179782' END)==((t0.c57 IN (NULL)))), (((((t0.c57 IN ()))OR(((t0.c40) IS FALSE))))OR(CASE WHEN t0.c57 THEN t0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((x'')>>(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')>>(NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((x'')>>(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')>>(NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((x'')>>(NULL)));
SELECT ALL * FROM vt0 WHERE (0.0650404852346892);
SELECT SUM(count) FROM (SELECT ((0.0650404852346892) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.0650404852346892);
SELECT SUM(count) FROM (SELECT ((0.0650404852346892) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.0650404852346892);
SELECT * FROM v0, t0, vt1, vt0 WHERE (CAST(load_extension(t0.c40, vt1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(load_extension(t0.c40, vt1.c0) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT * FROM v0, t0, vt1, vt0 WHERE (CAST(load_extension(t0.c40, vt1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(load_extension(t0.c40, vt1.c0) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c1) NOTNULL) IN ())) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c40) AND (vt0.c2))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c40) AND (vt0.c2))) ISNULL) DESC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c1) NOTNULL) IN ())) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c40) AND (vt0.c2))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c40) AND (vt0.c2))) ISNULL) DESC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c1) NOTNULL) IN ())) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c40) AND (vt0.c2))) ISNULL) DESC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((((v0.c2))>((vt0.c0))))&(((((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))) CROSS JOIN v0 ON ((((((((CASE WHEN '0.5309573796001228' THEN vt0.c2 END)AND((v0.c2 IN ()))))OR(((((v0.c2)OR(vt0.c2)))AND(vt0.c1)))))AND(vt1.c0 COLLATE RTRIM)))OR(json_object(v0.c0, vt1.c0))) WHERE ((+ (((143911760) NOTNULL)))) ORDER BY ((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c2) BETWEEN (1061339868) AND (v0.c2)))))OR(v0.c0)) DESC, (NOT ((+ (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((143911760) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((v0.c2))>((vt0.c0))))&(((((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))) CROSS JOIN v0 ON ((((((((CASE WHEN '0.5309573796001228' THEN vt0.c2 END)AND((v0.c2 IN ()))))OR(((((v0.c2)OR(vt0.c2)))AND(vt0.c1)))))AND(vt1.c0 COLLATE RTRIM)))OR(json_object(v0.c0, vt1.c0))) ORDER BY ((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c2) BETWEEN (1061339868) AND (v0.c2)))))OR(v0.c0)) DESC, (NOT ((+ (NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((((v0.c2))>((vt0.c0))))&(((((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))) CROSS JOIN v0 ON ((((((((CASE WHEN '0.5309573796001228' THEN vt0.c2 END)AND((v0.c2 IN ()))))OR(((((v0.c2)OR(vt0.c2)))AND(vt0.c1)))))AND(vt1.c0 COLLATE RTRIM)))OR(json_object(v0.c0, vt1.c0))) WHERE ((+ (((143911760) NOTNULL)))) ORDER BY ((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c2) BETWEEN (1061339868) AND (v0.c2)))))OR(v0.c0)) DESC, (NOT ((+ (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((143911760) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((v0.c2))>((vt0.c0))))&(((((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))) CROSS JOIN v0 ON ((((((((CASE WHEN '0.5309573796001228' THEN vt0.c2 END)AND((v0.c2 IN ()))))OR(((((v0.c2)OR(vt0.c2)))AND(vt0.c1)))))AND(vt1.c0 COLLATE RTRIM)))OR(json_object(v0.c0, vt1.c0))) ORDER BY ((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c2) BETWEEN (1061339868) AND (v0.c2)))))OR(v0.c0)) DESC, (NOT ((+ (NULL))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE (CHAR(((v0.c0)>=(vt0.c1)))) ORDER BY ((((CASE WHEN t0.c0 THEN 'BEe!&' ELSE v0.c0 END)AND(((vt0.c0) NOT NULL))))OR(((v0.c0) NOT NULL))) DESC  NULLS FIRST, (((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((v0.c0)>=(vt0.c1)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((CASE WHEN t0.c0 THEN 'BEe!&' ELSE v0.c0 END)AND(((vt0.c0) NOT NULL))))OR(((v0.c0) NOT NULL))) DESC  NULLS FIRST, (((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (CHAR(((v0.c0)>=(vt0.c1)))) ORDER BY ((((CASE WHEN t0.c0 THEN 'BEe!&' ELSE v0.c0 END)AND(((vt0.c0) NOT NULL))))OR(((v0.c0) NOT NULL))) DESC  NULLS FIRST, (((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((v0.c0)>=(vt0.c1)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((CASE WHEN t0.c0 THEN 'BEe!&' ELSE v0.c0 END)AND(((vt0.c0) NOT NULL))))OR(((v0.c0) NOT NULL))) DESC  NULLS FIRST, (((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (CHAR(((v0.c0)>=(vt0.c1)))) ORDER BY ((((CASE WHEN t0.c0 THEN 'BEe!&' ELSE v0.c0 END)AND(((vt0.c0) NOT NULL))))OR(((v0.c0) NOT NULL))) DESC  NULLS FIRST, (((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN ()) ASC  NULLS LAST;
SELECT * FROM vt0, vt1, t0, v0 WHERE ((((~ (t0.c0)))>((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))>((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1, t0, v0);
SELECT * FROM vt0, vt1, t0, v0 WHERE ((((~ (t0.c0)))>((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))>((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1, t0, v0);
SELECT * FROM vt0, vt1, t0, v0 WHERE ((((~ (t0.c0)))>((vt0.c1 IN ()))));
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c57))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c57)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c57))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c57)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c57))))));
SELECT * FROM v0, vt1, t0 WHERE (((((v0.c2)<(0Xffffffffabd70119))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<(0Xffffffffabd70119))) NOTNULL)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT * FROM v0, vt1, t0 WHERE (((((v0.c2)<(0Xffffffffabd70119))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<(0Xffffffffabd70119))) NOTNULL)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT * FROM v0, vt1, t0 WHERE (((((v0.c2)<(0Xffffffffabd70119))) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c40 COLLATE RTRIM))<((CAST(vt0.c0 AS INTEGER))))) ORDER BY (((vt0.c0) IS FALSE) IN (((t0.c40)+(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40 COLLATE RTRIM))<((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0) IS FALSE) IN (((t0.c40)+(vt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c40 COLLATE RTRIM))<((CAST(vt0.c0 AS INTEGER))))) ORDER BY (((vt0.c0) IS FALSE) IN (((t0.c40)+(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40 COLLATE RTRIM))<((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0) IS FALSE) IN (((t0.c40)+(vt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c40 COLLATE RTRIM))<((CAST(vt0.c0 AS INTEGER))))) ORDER BY (((vt0.c0) IS FALSE) IN (((t0.c40)+(vt0.c2))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c2, t0.c57, t0.c40))<((vt0.c1, vt1.c0, x''))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2, t0.c57, t0.c40))<((vt0.c1, vt1.c0, x''))) IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c2, t0.c57, t0.c40))<((vt0.c1, vt1.c0, x''))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2, t0.c57, t0.c40))<((vt0.c1, vt1.c0, x''))) IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c2, t0.c57, t0.c40))<((vt0.c1, vt1.c0, x''))) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE (((v0.c1 COLLATE RTRIM)OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- (((v0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM)OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1 ORDER BY (- (((v0.c2) IS FALSE))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE (((v0.c1 COLLATE RTRIM)OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- (((v0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM)OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1 ORDER BY (- (((v0.c2) IS FALSE))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE (((v0.c1 COLLATE RTRIM)OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- (((v0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((']HL7깹B' IN ()));
SELECT SUM(count) FROM (SELECT (((']HL7깹B' IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((']HL7깹B' IN ()));
SELECT SUM(count) FROM (SELECT (((']HL7깹B' IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((']HL7깹B' IN ()));
SELECT * FROM t0, vt0 WHERE ((+ (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY NULLIF(t0.c57, 'Bs') COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY NULLIF(t0.c57, 'Bs') COLLATE BINARY);
SELECT * FROM t0, vt0 WHERE ((+ (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY NULLIF(t0.c57, 'Bs') COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY NULLIF(t0.c57, 'Bs') COLLATE BINARY);
SELECT * FROM t0, vt0 WHERE ((+ (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY NULLIF(t0.c57, 'Bs') COLLATE BINARY;
SELECT * FROM vt1 WHERE (x'd4a0');
SELECT SUM(count) FROM (SELECT ((x'd4a0') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'd4a0');
SELECT SUM(count) FROM (SELECT ((x'd4a0') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'd4a0');
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1)))IS NOT(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(0xffffffffc7be0f23)))OR(vt0.c0))))) ORDER BY (((+ (vt0.c0)))+(SQLITE_SOURCE_ID())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c1)))IS NOT(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(0Xffffffffc7be0f23)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))+(SQLITE_SOURCE_ID())) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1)))IS NOT(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(0xffffffffc7be0f23)))OR(vt0.c0))))) ORDER BY (((+ (vt0.c0)))+(SQLITE_SOURCE_ID())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c1)))IS NOT(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(0Xffffffffc7be0f23)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))+(SQLITE_SOURCE_ID())) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1)))IS NOT(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(0xffffffffc7be0f23)))OR(vt0.c0))))) ORDER BY (((+ (vt0.c0)))+(SQLITE_SOURCE_ID())) ASC;
SELECT ALL * FROM vt1 WHERE ((NOT ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT ((- (vt1.c0)))));
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 WHEN 0Xffffffffe6481891 THEN v0.c2 ELSE v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 WHEN 0Xffffffffe6481891 THEN v0.c2 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 WHEN 0Xffffffffe6481891 THEN v0.c2 ELSE v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 WHEN 0Xffffffffe6481891 THEN v0.c2 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 WHEN 0Xffffffffe6481891 THEN v0.c2 ELSE v0.c0 END COLLATE RTRIM);
SELECT * FROM v0, vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM v0, vt1 WHERE (UNLIKELY(DISTINCT 0Xffffffff8860da21));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT 0Xffffffff8860da21)) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (UNLIKELY(DISTINCT 0Xffffffff8860da21));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT 0Xffffffff8860da21)) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (UNLIKELY(DISTINCT 0Xffffffff8860da21));
SELECT ALL * FROM t0, vt0, v0 WHERE (((LIKE(vt0.c2, vt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c2, vt0.c1)) IS TRUE)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((LIKE(vt0.c2, vt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c2, vt0.c1)) IS TRUE)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((LIKE(vt0.c2, vt0.c1)) IS TRUE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))GLOB(CASE WHEN NULL THEN vt0.c1 END)) WHERE ((((x'569e')) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((x'569e')) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))GLOB(CASE WHEN NULL THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))GLOB(CASE WHEN NULL THEN vt0.c1 END)) WHERE ((((x'569e')) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((x'569e')) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))GLOB(CASE WHEN NULL THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))GLOB(CASE WHEN NULL THEN vt0.c1 END)) WHERE ((((x'569e')) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))))));
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(x'')) ORDER BY (((~ (t0.c40)))AND(t0.c57))  NULLS FIRST, CASE WHEN ((((x'')OR(t0.c0)))AND(t0.c0)) THEN ((t0.c0)AND(t0.c57)) ELSE t0.c57 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(x'')) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c40)))AND(t0.c57))  NULLS FIRST, CASE WHEN ((((x'')OR(t0.c0)))AND(t0.c0)) THEN ((t0.c0)AND(t0.c57)) ELSE t0.c57 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(x'')) ORDER BY (((~ (t0.c40)))AND(t0.c57))  NULLS FIRST, CASE WHEN ((((x'')OR(t0.c0)))AND(t0.c0)) THEN ((t0.c0)AND(t0.c57)) ELSE t0.c57 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(x'')) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c40)))AND(t0.c57))  NULLS FIRST, CASE WHEN ((((x'')OR(t0.c0)))AND(t0.c0)) THEN ((t0.c0)AND(t0.c57)) ELSE t0.c57 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(x'')) ORDER BY (((~ (t0.c40)))AND(t0.c57))  NULLS FIRST, CASE WHEN ((((x'')OR(t0.c0)))AND(t0.c0)) THEN ((t0.c0)AND(t0.c57)) ELSE t0.c57 END DESC  NULLS LAST;
SELECT * FROM vt1, t0, v0 INNER JOIN vt0 ON (((((vt0.c1) NOT BETWEEN (0.7745203976332664) AND (vt0.c2))))<((vt0.c0 COLLATE NOCASE))) WHERE ((- (CAST(vt1.c0 AS INTEGER)))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, t0, v0 INNER JOIN vt0 ON (((((vt0.c1) NOT BETWEEN (0.7745203976332664) AND (vt0.c2))))<((vt0.c0 COLLATE NOCASE))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt1, t0, v0 INNER JOIN vt0 ON (((((vt0.c1) NOT BETWEEN (0.7745203976332664) AND (vt0.c2))))<((vt0.c0 COLLATE NOCASE))) WHERE ((- (CAST(vt1.c0 AS INTEGER)))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, t0, v0 INNER JOIN vt0 ON (((((vt0.c1) NOT BETWEEN (0.7745203976332664) AND (vt0.c2))))<((vt0.c0 COLLATE NOCASE))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt1, t0, v0 INNER JOIN vt0 ON (((((vt0.c1) NOT BETWEEN (0.7745203976332664) AND (vt0.c2))))<((vt0.c0 COLLATE NOCASE))) WHERE ((- (CAST(vt1.c0 AS INTEGER)))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE;
SELECT * FROM t0, vt1 WHERE ((NOT (((t0.c57) IS FALSE)))) ORDER BY ((('S])\n' IN ()))<((0.6503099026920995 IN ('D lLb㳌')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c57) IS FALSE)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((('S])\n' IN ()))<((0.6503099026920995 IN ('D lLb㳌')))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((NOT (((t0.c57) IS FALSE)))) ORDER BY ((('S])\n' IN ()))<((0.6503099026920995 IN ('D lLb㳌')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c57) IS FALSE)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((('S])\n' IN ()))<((0.6503099026920995 IN ('D lLb㳌')))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((NOT (((t0.c57) IS FALSE)))) ORDER BY ((('S])\n' IN ()))<((0.6503099026920995 IN ('D lLb㳌')))) DESC  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER) WHERE ((('-1932407527') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('-1932407527') NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER) WHERE ((('-1932407527') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('-1932407527') NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER) WHERE ((('-1932407527') NOT NULL));
SELECT COUNT(*) FROM vt1, t0, v0, vt0 WHERE (((((((((((vt1.c0)OR(v0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(vt0.c2)))>=(((t0.c57) BETWEEN (t0.c0) AND ('1234191800'))))) ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((t0.c40)<<(415632040)) WHEN (((v0.c2))<=((v0.c1))) THEN ((t0.c40)LIKE(v0.c1)) WHEN (+ (vt1.c0)) THEN LOWER(vt0.c2) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(v0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(vt0.c2)))>=(((t0.c57) BETWEEN (t0.c0) AND ('1234191800'))))) IS TRUE)  as count FROM vt1, t0, v0, vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((t0.c40)<<(415632040)) WHEN (((v0.c2))<=((v0.c1))) THEN ((t0.c40)LIKE(v0.c1)) WHEN (+ (vt1.c0)) THEN LOWER(vt0.c2) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, v0, vt0 WHERE (((((((((((vt1.c0)OR(v0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(vt0.c2)))>=(((t0.c57) BETWEEN (t0.c0) AND ('1234191800'))))) ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((t0.c40)<<(415632040)) WHEN (((v0.c2))<=((v0.c1))) THEN ((t0.c40)LIKE(v0.c1)) WHEN (+ (vt1.c0)) THEN LOWER(vt0.c2) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(v0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(vt0.c2)))>=(((t0.c57) BETWEEN (t0.c0) AND ('1234191800'))))) IS TRUE)  as count FROM vt1, t0, v0, vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((t0.c40)<<(415632040)) WHEN (((v0.c2))<=((v0.c1))) THEN ((t0.c40)LIKE(v0.c1)) WHEN (+ (vt1.c0)) THEN LOWER(vt0.c2) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, v0, vt0 WHERE (((((((((((vt1.c0)OR(v0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(vt0.c2)))>=(((t0.c57) BETWEEN (t0.c0) AND ('1234191800'))))) ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((t0.c40)<<(415632040)) WHEN (((v0.c2))<=((v0.c1))) THEN ((t0.c40)LIKE(v0.c1)) WHEN (+ (vt1.c0)) THEN LOWER(vt0.c2) END DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END IN ()));
SELECT * FROM v0, t0, vt0 WHERE (CAST(((0.4841879770973967)OR(v0.c2)) AS TEXT)) ORDER BY ((0.5273110243340291) BETWEEN (((t0.c57)=(vt0.c1))) AND (((t0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.4841879770973967)OR(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((0.5273110243340291) BETWEEN (((t0.c57)==(vt0.c1))) AND (((t0.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (CAST(((0.4841879770973967)OR(v0.c2)) AS TEXT)) ORDER BY ((0.5273110243340291) BETWEEN (((t0.c57)=(vt0.c1))) AND (((t0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.4841879770973967)OR(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((0.5273110243340291) BETWEEN (((t0.c57)==(vt0.c1))) AND (((t0.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (CAST(((0.4841879770973967)OR(v0.c2)) AS TEXT)) ORDER BY ((0.5273110243340291) BETWEEN (((t0.c57)=(vt0.c1))) AND (((t0.c0) NOT NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) AS REAL) RIGHT OUTER JOIN v0 ON ((0X1a5fc22e)>>(PRINTF('-441075549', v0.c1, vt0.c2))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) AS REAL) RIGHT OUTER JOIN v0 ON ((0X1a5fc22e)>>(PRINTF('-441075549', v0.c1, vt0.c2))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) AS REAL) RIGHT OUTER JOIN v0 ON ((0X1a5fc22e)>>(PRINTF('-441075549', v0.c1, vt0.c2))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) AS REAL) RIGHT OUTER JOIN v0 ON ((0X1a5fc22e)>>(PRINTF('-441075549', v0.c1, vt0.c2))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((CASE WHEN t0.c57 THEN vt1.c0 END) BETWEEN ((vt1.c0 IN ())) AND ('kk')) WHERE (t0.c57);
SELECT SUM(count) FROM (SELECT ((t0.c57) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((CASE WHEN t0.c57 THEN vt1.c0 END) BETWEEN ((vt1.c0 IN ())) AND ('kk')));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((CASE WHEN t0.c57 THEN vt1.c0 END) BETWEEN ((vt1.c0 IN ())) AND ('kk')) WHERE (t0.c57);
SELECT SUM(count) FROM (SELECT ((t0.c57) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((CASE WHEN t0.c57 THEN vt1.c0 END) BETWEEN ((vt1.c0 IN ())) AND ('kk')));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((CASE WHEN t0.c57 THEN vt1.c0 END) BETWEEN ((vt1.c0 IN ())) AND ('kk')) WHERE (t0.c57);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c40 WHEN vt1.c0 THEN t0.c40 END))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c40 WHEN vt1.c0 THEN t0.c40 END))) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c40 WHEN vt1.c0 THEN t0.c40 END))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c40 WHEN vt1.c0 THEN t0.c40 END))) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c40 WHEN vt1.c0 THEN t0.c40 END))) ORDER BY t0.c0 DESC;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON TRIM(((vt0.c2) IS FALSE)) FULL OUTER JOIN vt1 ON v0.c1 WHERE (CAST(((vt0.c2) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) NOTNULL) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON TRIM(((vt0.c2) IS FALSE)) FULL OUTER JOIN vt1 ON v0.c1);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON TRIM(((vt0.c2) IS FALSE)) FULL OUTER JOIN vt1 ON v0.c1 WHERE (CAST(((vt0.c2) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) NOTNULL) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON TRIM(((vt0.c2) IS FALSE)) FULL OUTER JOIN vt1 ON v0.c1);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON TRIM(((vt0.c2) IS FALSE)) FULL OUTER JOIN vt1 ON v0.c1 WHERE (CAST(((vt0.c2) NOTNULL) AS REAL));
SELECT COUNT(*) FROM vt1, v0 WHERE (((- (vt1.c0)) IN ('pVHb,'))) ORDER BY (((v0.c2 IN (vt1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)GLOB(vt1.c0)))) DESC  NULLS FIRST, TOTAL_CHANGES(), ((CASE WHEN v0.c1 THEN v0.c2 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ('pVHb,'))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c2 IN (vt1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)GLOB(vt1.c0)))) DESC  NULLS FIRST, TOTAL_CHANGES(), ((CASE WHEN v0.c1 THEN v0.c2 END) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((- (vt1.c0)) IN ('pVHb,'))) ORDER BY (((v0.c2 IN (vt1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)GLOB(vt1.c0)))) DESC  NULLS FIRST, TOTAL_CHANGES(), ((CASE WHEN v0.c1 THEN v0.c2 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ('pVHb,'))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c2 IN (vt1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)GLOB(vt1.c0)))) DESC  NULLS FIRST, TOTAL_CHANGES(), ((CASE WHEN v0.c1 THEN v0.c2 END) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((- (vt1.c0)) IN ('pVHb,'))) ORDER BY (((v0.c2 IN (vt1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (((v0.c2)GLOB(vt1.c0)))) DESC  NULLS FIRST, TOTAL_CHANGES(), ((CASE WHEN v0.c1 THEN v0.c2 END) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0, v0 WHERE (v0.c2) ORDER BY CASE WHEN (~ ('')) THEN ((vt0.c2) IS FALSE) END  NULLS FIRST, ((((((((((v0.c1)AND(v0.c1)))AND(vt0.c2)))AND(t0.c40)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, ((CAST(vt0.c2 AS NUMERIC))/((((t0.c0))>((t0.c40))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM t0, vt1, vt0, v0 ORDER BY CASE WHEN (~ ('')) THEN ((vt0.c2) IS FALSE) END  NULLS FIRST, ((((((((((v0.c1)AND(v0.c1)))AND(vt0.c2)))AND(t0.c40)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, ((CAST(vt0.c2 AS NUMERIC))/((((t0.c0))>((t0.c40))))) DESC);
SELECT ALL * FROM t0, vt1, vt0, v0 WHERE (v0.c2) ORDER BY CASE WHEN (~ ('')) THEN ((vt0.c2) IS FALSE) END  NULLS FIRST, ((((((((((v0.c1)AND(v0.c1)))AND(vt0.c2)))AND(t0.c40)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, ((CAST(vt0.c2 AS NUMERIC))/((((t0.c0))>((t0.c40))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM t0, vt1, vt0, v0 ORDER BY CASE WHEN (~ ('')) THEN ((vt0.c2) IS FALSE) END  NULLS FIRST, ((((((((((v0.c1)AND(v0.c1)))AND(vt0.c2)))AND(t0.c40)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, ((CAST(vt0.c2 AS NUMERIC))/((((t0.c0))>((t0.c40))))) DESC);
SELECT ALL * FROM t0, vt1, vt0, v0 WHERE (v0.c2) ORDER BY CASE WHEN (~ ('')) THEN ((vt0.c2) IS FALSE) END  NULLS FIRST, ((((((((((v0.c1)AND(v0.c1)))AND(vt0.c2)))AND(t0.c40)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, ((CAST(vt0.c2 AS NUMERIC))/((((t0.c0))>((t0.c40))))) DESC;
SELECT * FROM vt1 WHERE (json_insert(((1.09794317E8)LIKE('1143757805')), ((vt1.c0)==(vt1.c0)), vt1.c0 COLLATE NOCASE)) ORDER BY (~ (((0.19732089030669875)+(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((1.09794317E8)LIKE('1143757805')), ((vt1.c0)==(vt1.c0)), vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 ORDER BY (~ (((0.19732089030669875)+(vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE (json_insert(((1.09794317E8)LIKE('1143757805')), ((vt1.c0)==(vt1.c0)), vt1.c0 COLLATE NOCASE)) ORDER BY (~ (((0.19732089030669875)+(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((1.09794317E8)LIKE('1143757805')), ((vt1.c0)==(vt1.c0)), vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 ORDER BY (~ (((0.19732089030669875)+(vt1.c0)))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ']^(9' CROSS JOIN vt1 ON CAST(HEX(0.20144848309991625) AS INTEGER) CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) BETWEEN ((t0.c40 IN (vt0.c1))) AND (((((((((v0.c2)AND(t0.c57)))AND('3282059')))OR(v0.c0)))OR(v0.c1)))) WHERE ('%w') ORDER BY (- (((x'')IS NOT(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('%w') IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ']^(9' CROSS JOIN vt1 ON CAST(HEX(0.20144848309991625) AS INTEGER) CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) BETWEEN ((t0.c40 IN (vt0.c1))) AND (((((((((v0.c2)AND(t0.c57)))AND('3282059')))OR(v0.c0)))OR(v0.c1)))) ORDER BY (- (((x'')IS NOT(vt1.c0)))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ']^(9' CROSS JOIN vt1 ON CAST(HEX(0.20144848309991625) AS INTEGER) CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) BETWEEN ((t0.c40 IN (vt0.c1))) AND (((((((((v0.c2)AND(t0.c57)))AND('3282059')))OR(v0.c0)))OR(v0.c1)))) WHERE ('%w') ORDER BY (- (((x'')IS NOT(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('%w') IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ']^(9' CROSS JOIN vt1 ON CAST(HEX(0.20144848309991625) AS INTEGER) CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) BETWEEN ((t0.c40 IN (vt0.c1))) AND (((((((((v0.c2)AND(t0.c57)))AND('3282059')))OR(v0.c0)))OR(v0.c1)))) ORDER BY (- (((x'')IS NOT(vt1.c0)))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ']^(9' CROSS JOIN vt1 ON CAST(HEX(0.20144848309991625) AS INTEGER) CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) BETWEEN ((t0.c40 IN (vt0.c1))) AND (((((((((v0.c2)AND(t0.c57)))AND('3282059')))OR(v0.c0)))OR(v0.c1)))) WHERE ('%w') ORDER BY (- (((x'')IS NOT(vt1.c0)))) DESC;
SELECT * FROM vt0, v0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, t0, vt1);
SELECT * FROM vt0, v0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, t0, vt1);
SELECT * FROM vt0, v0, t0, vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY LAST_INSERT_ROWID() COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((((vt0.c2)<=(vt0.c1)))) AND ((CASE WHEN v0.c1 THEN vt0.c1 END))) WHERE ((+ (((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))) ORDER BY (((CAST(vt0.c1 AS REAL), ((v0.c0)IS(vt0.c2)), (v0.c0 IN ())))<=((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.c0)%(vt0.c2)), (((vt0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((((vt0.c2)<=(vt0.c1)))) AND ((CASE WHEN v0.c1 THEN vt0.c1 END))) ORDER BY (((CAST(vt0.c1 AS REAL), ((v0.c0)IS(vt0.c2)), (v0.c0 IN ())))<=((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.c0)%(vt0.c2)), (((vt0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2)))))) ASC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((((vt0.c2)<=(vt0.c1)))) AND ((CASE WHEN v0.c1 THEN vt0.c1 END))) WHERE ((+ (((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))) ORDER BY (((CAST(vt0.c1 AS REAL), ((v0.c0)IS(vt0.c2)), (v0.c0 IN ())))<=((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.c0)%(vt0.c2)), (((vt0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((((vt0.c2)<=(vt0.c1)))) AND ((CASE WHEN v0.c1 THEN vt0.c1 END))) ORDER BY (((CAST(vt0.c1 AS REAL), ((v0.c0)IS(vt0.c2)), (v0.c0 IN ())))<=((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.c0)%(vt0.c2)), (((vt0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2)))))) ASC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((((vt0.c2)<=(vt0.c1)))) AND ((CASE WHEN v0.c1 THEN vt0.c1 END))) WHERE ((+ (((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))) ORDER BY (((CAST(vt0.c1 AS REAL), ((v0.c0)IS(vt0.c2)), (v0.c0 IN ())))<=((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.c0)%(vt0.c2)), (((vt0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2)))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((v0.c1 IN ()))=((((vt0.c2))<>((vt0.c0)))))) ORDER BY 0.28441174930718527 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ()))==((((vt0.c2))!=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY 0.28441174930718527 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((v0.c1 IN ()))=((((vt0.c2))<>((vt0.c0)))))) ORDER BY 0.28441174930718527 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ()))==((((vt0.c2))!=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY 0.28441174930718527 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((v0.c1 IN ()))=((((vt0.c2))<>((vt0.c0)))))) ORDER BY 0.28441174930718527 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((+ (v0.c0)))AND(0.19387851123103272)))OR(v0.c2 COLLATE NOCASE))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((+ (v0.c0)))AND(0.19387851123103272)))OR(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((+ (v0.c0)))AND(0.19387851123103272)))OR(v0.c2 COLLATE NOCASE))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((+ (v0.c0)))AND(0.19387851123103272)))OR(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((+ (v0.c0)))AND(0.19387851123103272)))OR(v0.c2 COLLATE NOCASE))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT NULL);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((((- (v0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR(CAST(t0.c0 AS REAL))) WHERE ((((t0.c57, v0.c1, t0.c57)) NOT BETWEEN (((t0.c40 IN ()), (+ (t0.c40)), ((v0.c1)>=(t0.c57)))) AND ((((t0.c0)||(t0.c0)), ((t0.c0)AND(t0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))) ORDER BY ((v0.c0)GLOB(v0.c1)) COLLATE NOCASE, t0.c57, ((((((v0.c0)OR(v0.c2)))AND(t0.c57)))<(CAST(t0.c57 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c57, v0.c1, t0.c57)) NOT BETWEEN (((t0.c40 IN ()), (+ (t0.c40)), ((v0.c1)>=(t0.c57)))) AND ((((t0.c0)||(t0.c0)), ((t0.c0)AND(t0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((((- (v0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR(CAST(t0.c0 AS REAL))) ORDER BY ((v0.c0)GLOB(v0.c1)) COLLATE NOCASE, t0.c57, ((((((v0.c0)OR(v0.c2)))AND(t0.c57)))<(CAST(t0.c57 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((((- (v0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR(CAST(t0.c0 AS REAL))) WHERE ((((t0.c57, v0.c1, t0.c57)) NOT BETWEEN (((t0.c40 IN ()), (+ (t0.c40)), ((v0.c1)>=(t0.c57)))) AND ((((t0.c0)||(t0.c0)), ((t0.c0)AND(t0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))) ORDER BY ((v0.c0)GLOB(v0.c1)) COLLATE NOCASE, t0.c57, ((((((v0.c0)OR(v0.c2)))AND(t0.c57)))<(CAST(t0.c57 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c57, v0.c1, t0.c57)) NOT BETWEEN (((t0.c40 IN ()), (+ (t0.c40)), ((v0.c1)>=(t0.c57)))) AND ((((t0.c0)||(t0.c0)), ((t0.c0)AND(t0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((((- (v0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR(CAST(t0.c0 AS REAL))) ORDER BY ((v0.c0)GLOB(v0.c1)) COLLATE NOCASE, t0.c57, ((((((v0.c0)OR(v0.c2)))AND(t0.c57)))<(CAST(t0.c57 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((((- (v0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR(CAST(t0.c0 AS REAL))) WHERE ((((t0.c57, v0.c1, t0.c57)) NOT BETWEEN (((t0.c40 IN ()), (+ (t0.c40)), ((v0.c1)>=(t0.c57)))) AND ((((t0.c0)||(t0.c0)), ((t0.c0)AND(t0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))) ORDER BY ((v0.c0)GLOB(v0.c1)) COLLATE NOCASE, t0.c57, ((((((v0.c0)OR(v0.c2)))AND(t0.c57)))<(CAST(t0.c57 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN '>!Bjar異8<' COLLATE RTRIM THEN (((vt1.c0))<=((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '>!Bjar異8<' COLLATE RTRIM THEN (((vt1.c0))<=((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN '>!Bjar異8<' COLLATE RTRIM THEN (((vt1.c0))<=((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '>!Bjar異8<' COLLATE RTRIM THEN (((vt1.c0))<=((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN '>!Bjar異8<' COLLATE RTRIM THEN (((vt1.c0))<=((vt1.c0))) END);
SELECT * FROM t0, vt1 WHERE ((((t0.c40))>(((vt1.c0 IN (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c40))>(((vt1.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((t0.c40))>(((vt1.c0 IN (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c40))>(((vt1.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((t0.c40))>(((vt1.c0 IN (t0.c0))))));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN v0 ON CASE WHEN ((t0.c40)IS NOT(vt0.c2)) THEN COALESCE(vt0.c2, vt0.c1) END INNER JOIN t0 ON (~ ((((t0.c0)) NOT BETWEEN ((t0.c57)) AND ((t0.c57))))) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS TEXT)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN v0 ON CASE WHEN ((t0.c40)IS NOT(vt0.c2)) THEN COALESCE(vt0.c2, vt0.c1) END INNER JOIN t0 ON (~ ((((t0.c0)) NOT BETWEEN ((t0.c57)) AND ((t0.c57))))) ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN v0 ON CASE WHEN ((t0.c40)IS NOT(vt0.c2)) THEN COALESCE(vt0.c2, vt0.c1) END INNER JOIN t0 ON (~ ((((t0.c0)) NOT BETWEEN ((t0.c57)) AND ((t0.c57))))) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS TEXT)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN v0 ON CASE WHEN ((t0.c40)IS NOT(vt0.c2)) THEN COALESCE(vt0.c2, vt0.c1) END INNER JOIN t0 ON (~ ((((t0.c0)) NOT BETWEEN ((t0.c57)) AND ((t0.c57))))) ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM t0, vt1, vt0, v0 WHERE ((('-1330958374')>>(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('-1330958374')>>(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0, v0);
SELECT * FROM t0, vt1, vt0, v0 WHERE ((('-1330958374')>>(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('-1330958374')>>(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0, v0);
SELECT * FROM t0, vt1, vt0, v0 WHERE ((('-1330958374')>>(v0.c2)) COLLATE RTRIM);
SELECT ALL * FROM v0, vt1, t0 WHERE (CAST(((t0.c57)IS NOT(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c57)IS NOT(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL * FROM v0, vt1, t0 WHERE (CAST(((t0.c57)IS NOT(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c57)IS NOT(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL * FROM v0, vt1, t0 WHERE (CAST(((t0.c57)IS NOT(v0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (LIKELY(((vt0.c1)==(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt0.c1)==(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (LIKELY(((vt0.c1)==(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt0.c1)==(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (LIKELY(((vt0.c1)==(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((-903187876)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((-903187876)))) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((-903187876)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((-903187876)))) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((-903187876)))) IS FALSE));
SELECT ALL * FROM v0, vt0, vt1, t0 WHERE (((+ (NULL)) IN ())) ORDER BY ((CAST(NULL AS BLOB)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (NULL)) IN ())) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY ((CAST(NULL AS BLOB)) IS FALSE) DESC);
SELECT ALL * FROM v0, vt0, vt1, t0 WHERE (((+ (NULL)) IN ())) ORDER BY ((CAST(NULL AS BLOB)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (NULL)) IN ())) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY ((CAST(NULL AS BLOB)) IS FALSE) DESC);
SELECT ALL * FROM v0, vt0, vt1, t0 WHERE (((+ (NULL)) IN ())) ORDER BY ((CAST(NULL AS BLOB)) IS FALSE) DESC;
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0))) NOT NULL));
SELECT ALL * FROM t0, v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0, v0, vt1 WHERE (t0.c57) ORDER BY ((((vt1.c0)%(t0.c0)))-(((t0.c57) NOT BETWEEN (vt0.c1) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ((t0.c57) IS TRUE)  as count FROM vt0, t0, v0, vt1 ORDER BY ((((vt1.c0)%(t0.c0)))-(((t0.c57) NOT BETWEEN (vt0.c1) AND (v0.c1)))));
SELECT ALL * FROM vt0, t0, v0, vt1 WHERE (t0.c57) ORDER BY ((((vt1.c0)%(t0.c0)))-(((t0.c57) NOT BETWEEN (vt0.c1) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ((t0.c57) IS TRUE)  as count FROM vt0, t0, v0, vt1 ORDER BY ((((vt1.c0)%(t0.c0)))-(((t0.c57) NOT BETWEEN (vt0.c1) AND (v0.c1)))));
SELECT ALL * FROM vt0, t0, v0, vt1 WHERE (t0.c57) ORDER BY ((((vt1.c0)%(t0.c0)))-(((t0.c57) NOT BETWEEN (vt0.c1) AND (v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) IS FALSE)) IS FALSE));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c1) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c1) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c1) NOTNULL)));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY vt1.c0 DESC  NULLS FIRST, (~ (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, (~ (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, vt1.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY vt1.c0 DESC  NULLS FIRST, (~ (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, (~ (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, vt1.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY vt1.c0 DESC  NULLS FIRST, (~ (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, vt1.c0 DESC;
SELECT COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN v0 WHERE (CASE WHEN v0.c1 THEN (+ (t0.c57)) ELSE CAST(t0.c40 AS REAL) END) ORDER BY (((((vt0.c2))>=((x'')))) IS TRUE)  NULLS FIRST, ((((((((((((((((CASE v0.c1  WHEN t0.c40 THEN t0.c57 ELSE '' END)OR(x'7fab')))AND((v0.c1 IN ()))))OR((~ (vt0.c2)))))AND(((v0.c1) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))AND(UPPER('-1105567729'))))AND(((vt0.c2) NOT BETWEEN (t0.c57) AND (t0.c57)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 THEN (+ (t0.c57)) ELSE CAST(t0.c40 AS REAL) END) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN v0 ORDER BY (((((vt0.c2))>=((x'')))) IS TRUE)  NULLS FIRST, ((((((((((((((((CASE v0.c1  WHEN t0.c40 THEN t0.c57 ELSE '' END)OR(x'7fab')))AND((v0.c1 IN ()))))OR((~ (vt0.c2)))))AND(((v0.c1) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))AND(UPPER('-1105567729'))))AND(((vt0.c2) NOT BETWEEN (t0.c57) AND (t0.c57)))) ASC);
SELECT COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN v0 WHERE (CASE WHEN v0.c1 THEN (+ (t0.c57)) ELSE CAST(t0.c40 AS REAL) END) ORDER BY (((((vt0.c2))>=((x'')))) IS TRUE)  NULLS FIRST, ((((((((((((((((CASE v0.c1  WHEN t0.c40 THEN t0.c57 ELSE '' END)OR(x'7fab')))AND((v0.c1 IN ()))))OR((~ (vt0.c2)))))AND(((v0.c1) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))AND(UPPER('-1105567729'))))AND(((vt0.c2) NOT BETWEEN (t0.c57) AND (t0.c57)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 THEN (+ (t0.c57)) ELSE CAST(t0.c40 AS REAL) END) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN v0 ORDER BY (((((vt0.c2))>=((x'')))) IS TRUE)  NULLS FIRST, ((((((((((((((((CASE v0.c1  WHEN t0.c40 THEN t0.c57 ELSE '' END)OR(x'7fab')))AND((v0.c1 IN ()))))OR((~ (vt0.c2)))))AND(((v0.c1) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))AND(UPPER('-1105567729'))))AND(((vt0.c2) NOT BETWEEN (t0.c57) AND (t0.c57)))) ASC);
SELECT COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN v0 WHERE (CASE WHEN v0.c1 THEN (+ (t0.c57)) ELSE CAST(t0.c40 AS REAL) END) ORDER BY (((((vt0.c2))>=((x'')))) IS TRUE)  NULLS FIRST, ((((((((((((((((CASE v0.c1  WHEN t0.c40 THEN t0.c57 ELSE '' END)OR(x'7fab')))AND((v0.c1 IN ()))))OR((~ (vt0.c2)))))AND(((v0.c1) IS FALSE))))OR(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))AND(UPPER('-1105567729'))))AND(((vt0.c2) NOT BETWEEN (t0.c57) AND (t0.c57)))) ASC;
SELECT * FROM t0, v0 WHERE ((- (((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((- (((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((- (((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT ALL * FROM v0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY (((((t0.c0))!=((t0.c0)))) NOT BETWEEN (t0.c57 COLLATE RTRIM) AND (((t0.c40) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) ASC, CASE CAST(t0.c57 AS REAL)  WHEN ((vt0.c1) BETWEEN (t0.c57) AND (1676364657)) THEN t0.c57 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c0))<>((t0.c0)))) NOT BETWEEN (t0.c57 COLLATE RTRIM) AND (((t0.c40) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) ASC, CASE CAST(t0.c57 AS REAL)  WHEN ((vt0.c1) BETWEEN (t0.c57) AND (1676364657)) THEN t0.c57 COLLATE NOCASE END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY (((((t0.c0))!=((t0.c0)))) NOT BETWEEN (t0.c57 COLLATE RTRIM) AND (((t0.c40) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) ASC, CASE CAST(t0.c57 AS REAL)  WHEN ((vt0.c1) BETWEEN (t0.c57) AND (1676364657)) THEN t0.c57 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c0))<>((t0.c0)))) NOT BETWEEN (t0.c57 COLLATE RTRIM) AND (((t0.c40) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) ASC, CASE CAST(t0.c57 AS REAL)  WHEN ((vt0.c1) BETWEEN (t0.c57) AND (1676364657)) THEN t0.c57 COLLATE NOCASE END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY (((((t0.c0))!=((t0.c0)))) NOT BETWEEN (t0.c57 COLLATE RTRIM) AND (((t0.c40) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) ASC, CASE CAST(t0.c57 AS REAL)  WHEN ((vt0.c1) BETWEEN (t0.c57) AND (1676364657)) THEN t0.c57 COLLATE NOCASE END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0, v0 NOT INDEXED WHERE (CASE vt1.c0  WHEN CAST(NULL AS NUMERIC) THEN v0.c0 COLLATE BINARY ELSE '' END) ORDER BY LIKELY(TRIM(vt0.c1)), ((vt0.c0)|(CAST(-1620197577 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CAST(NULL AS NUMERIC) THEN v0.c0 COLLATE BINARY ELSE '' END) IS TRUE)  as count FROM vt1, t0, vt0, v0 ORDER BY LIKELY(TRIM(vt0.c1)), ((vt0.c0)|(CAST(-1620197577 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, v0 NOT INDEXED WHERE (CASE vt1.c0  WHEN CAST(NULL AS NUMERIC) THEN v0.c0 COLLATE BINARY ELSE '' END) ORDER BY LIKELY(TRIM(vt0.c1)), ((vt0.c0)|(CAST(-1620197577 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CAST(NULL AS NUMERIC) THEN v0.c0 COLLATE BINARY ELSE '' END) IS TRUE)  as count FROM vt1, t0, vt0, v0 ORDER BY LIKELY(TRIM(vt0.c1)), ((vt0.c0)|(CAST(-1620197577 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, v0 NOT INDEXED WHERE (CASE vt1.c0  WHEN CAST(NULL AS NUMERIC) THEN v0.c0 COLLATE BINARY ELSE '' END) ORDER BY LIKELY(TRIM(vt0.c1)), ((vt0.c0)|(CAST(-1620197577 AS BLOB))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL COLLATE RTRIM IN (x'', ((v0.c2) IS TRUE)))) ORDER BY v0.c0, (((((v0.c2)<<(v0.c1))))<>((((v0.c2) NOT BETWEEN (0.29053619732532077) AND (v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE RTRIM IN (x'', ((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0, (((((v0.c2)<<(v0.c1))))!=((((v0.c2) NOT BETWEEN (0.29053619732532077) AND (v0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL COLLATE RTRIM IN (x'', ((v0.c2) IS TRUE)))) ORDER BY v0.c0, (((((v0.c2)<<(v0.c1))))<>((((v0.c2) NOT BETWEEN (0.29053619732532077) AND (v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE RTRIM IN (x'', ((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0, (((((v0.c2)<<(v0.c1))))!=((((v0.c2) NOT BETWEEN (0.29053619732532077) AND (v0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULL COLLATE RTRIM IN (x'', ((v0.c2) IS TRUE)))) ORDER BY v0.c0, (((((v0.c2)<<(v0.c1))))<>((((v0.c2) NOT BETWEEN (0.29053619732532077) AND (v0.c1))))) DESC;
SELECT COUNT(*) FROM vt1, v0 INNER JOIN t0 ON ((((x'')+(0.23469894739632213)))<((v0.c0 IN (vt1.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0 INNER JOIN t0 ON ((((x'')+(0.23469894739632213)))<((v0.c0 IN (vt1.c0)))));
SELECT COUNT(*) FROM vt1, v0 INNER JOIN t0 ON ((((x'')+(0.23469894739632213)))<((v0.c0 IN (vt1.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0 INNER JOIN t0 ON ((((x'')+(0.23469894739632213)))<((v0.c0 IN (vt1.c0)))));
SELECT COUNT(*) FROM vt1, v0 INNER JOIN t0 ON ((((x'')+(0.23469894739632213)))<((v0.c0 IN (vt1.c0)))) WHERE (vt1.c0);
SELECT * FROM t0, vt1, vt0 LEFT OUTER JOIN v0 ON CAST(UPPER(DISTINCT v0.c0) AS INTEGER) WHERE ((((((vt0.c2)OR(vt0.c2)))AND(v0.c1)) IN ())) ORDER BY (((~ (v0.c2)))|(((((vt0.c1)OR(v0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)OR(vt0.c2)))AND(v0.c1)) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 LEFT OUTER JOIN v0 ON CAST(UPPER(DISTINCT v0.c0) AS INTEGER) ORDER BY (((~ (v0.c2)))|(((((vt0.c1)OR(v0.c0)))OR(vt0.c1)))));
SELECT * FROM t0, vt1, vt0 LEFT OUTER JOIN v0 ON CAST(UPPER(DISTINCT v0.c0) AS INTEGER) WHERE ((((((vt0.c2)OR(vt0.c2)))AND(v0.c1)) IN ())) ORDER BY (((~ (v0.c2)))|(((((vt0.c1)OR(v0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)OR(vt0.c2)))AND(v0.c1)) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 LEFT OUTER JOIN v0 ON CAST(UPPER(DISTINCT v0.c0) AS INTEGER) ORDER BY (((~ (v0.c2)))|(((((vt0.c1)OR(v0.c0)))OR(vt0.c1)))));
SELECT * FROM t0, vt1, vt0 LEFT OUTER JOIN v0 ON CAST(UPPER(DISTINCT v0.c0) AS INTEGER) WHERE ((((((vt0.c2)OR(vt0.c2)))AND(v0.c1)) IN ())) ORDER BY (((~ (v0.c2)))|(((((vt0.c1)OR(v0.c0)))OR(vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))||(((vt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))||(((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))||(((vt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))||(((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))||(((vt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (x'b334') ORDER BY (NOT ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))  NULLS LAST, TYPEOF(DISTINCT t0.c57) ASC  NULLS FIRST, ((t0.c40) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE t0.c0  WHEN t0.c0 THEN v0.c1 WHEN v0.c2 THEN vt1.c0 WHEN t0.c57 THEN t0.c0 WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'b334') IS TRUE)  as count FROM t0, vt1, v0 ORDER BY (NOT ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))  NULLS LAST, TYPEOF(DISTINCT t0.c57) ASC  NULLS FIRST, ((t0.c40) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE t0.c0  WHEN t0.c0 THEN v0.c1 WHEN v0.c2 THEN vt1.c0 WHEN t0.c57 THEN t0.c0 WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (x'b334') ORDER BY (NOT ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))  NULLS LAST, TYPEOF(DISTINCT t0.c57) ASC  NULLS FIRST, ((t0.c40) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE t0.c0  WHEN t0.c0 THEN v0.c1 WHEN v0.c2 THEN vt1.c0 WHEN t0.c57 THEN t0.c0 WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'b334') IS TRUE)  as count FROM t0, vt1, v0 ORDER BY (NOT ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))  NULLS LAST, TYPEOF(DISTINCT t0.c57) ASC  NULLS FIRST, ((t0.c40) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE t0.c0  WHEN t0.c0 THEN v0.c1 WHEN v0.c2 THEN vt1.c0 WHEN t0.c57 THEN t0.c0 WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (x'b334') ORDER BY (NOT ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))  NULLS LAST, TYPEOF(DISTINCT t0.c57) ASC  NULLS FIRST, ((t0.c40) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE t0.c0  WHEN t0.c0 THEN v0.c1 WHEN v0.c2 THEN vt1.c0 WHEN t0.c57 THEN t0.c0 WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((((((((DATETIME(t0.c57, vt0.c1, t0.c0, x'', vt0.c1, t0.c40, vt0.c2))OR(((vt0.c0)=(vt0.c2)))))AND(NULL)))OR((vt0.c1 IN (vt0.c1, vt0.c2)))))AND((t0.c40 IN ())))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((DATETIME(t0.c57, vt0.c1, t0.c0, x'', vt0.c1, t0.c40, vt0.c2))OR(((vt0.c0)=(vt0.c2)))))AND(NULL)))OR((vt0.c1 IN (vt0.c1, vt0.c2)))))AND((t0.c40 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c0))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((((((DATETIME(t0.c57, vt0.c1, t0.c0, x'', vt0.c1, t0.c40, vt0.c2))OR(((vt0.c0)=(vt0.c2)))))AND(NULL)))OR((vt0.c1 IN (vt0.c1, vt0.c2)))))AND((t0.c40 IN ())))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((DATETIME(t0.c57, vt0.c1, t0.c0, x'', vt0.c1, t0.c40, vt0.c2))OR(((vt0.c0)=(vt0.c2)))))AND(NULL)))OR((vt0.c1 IN (vt0.c1, vt0.c2)))))AND((t0.c40 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c0))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((((((DATETIME(t0.c57, vt0.c1, t0.c0, x'', vt0.c1, t0.c40, vt0.c2))OR(((vt0.c0)=(vt0.c2)))))AND(NULL)))OR((vt0.c1 IN (vt0.c1, vt0.c2)))))AND((t0.c40 IN ())))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (NOT (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (NOT (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (NOT (vt1.c0)) ASC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) NOT NULL))) AND (((+ (vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt1.c0))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN v0.c2 THEN v0.c2 END)) WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY (vt0.c2 COLLATE BINARY IN (((v0.c0) BETWEEN (vt0.c1) AND (v0.c2)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN v0.c2 THEN v0.c2 END)) ORDER BY (vt0.c2 COLLATE BINARY IN (((v0.c0) BETWEEN (vt0.c1) AND (v0.c2)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN v0.c2 THEN v0.c2 END)) WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY (vt0.c2 COLLATE BINARY IN (((v0.c0) BETWEEN (vt0.c1) AND (v0.c2)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN v0.c2 THEN v0.c2 END)) ORDER BY (vt0.c2 COLLATE BINARY IN (((v0.c0) BETWEEN (vt0.c1) AND (v0.c2)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN v0.c2 THEN v0.c2 END)) WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY (vt0.c2 COLLATE BINARY IN (((v0.c0) BETWEEN (vt0.c1) AND (v0.c2)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c1 END COLLATE BINARY) ORDER BY 0.5257510800889057 ASC, COALESCE(CASE WHEN v0.c2 THEN v0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c1)<>(v0.c2))), ((((((((ROUND(v0.c2, NULL))AND((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))AND(((v0.c1)IS NOT(v0.c0)))))OR((~ (v0.c0)))))OR(((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY 0.5257510800889057 ASC, COALESCE(CASE WHEN v0.c2 THEN v0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c1)!=(v0.c2))), ((((((((ROUND(v0.c2, NULL))AND((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))AND(((v0.c1)IS NOT(v0.c0)))))OR((~ (v0.c0)))))OR(((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c1 END COLLATE BINARY) ORDER BY 0.5257510800889057 ASC, COALESCE(CASE WHEN v0.c2 THEN v0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c1)<>(v0.c2))), ((((((((ROUND(v0.c2, NULL))AND((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))AND(((v0.c1)IS NOT(v0.c0)))))OR((~ (v0.c0)))))OR(((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY 0.5257510800889057 ASC, COALESCE(CASE WHEN v0.c2 THEN v0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c1)!=(v0.c2))), ((((((((ROUND(v0.c2, NULL))AND((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))AND(((v0.c1)IS NOT(v0.c0)))))OR((~ (v0.c0)))))OR(((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c1 END COLLATE BINARY) ORDER BY 0.5257510800889057 ASC, COALESCE(CASE WHEN v0.c2 THEN v0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c1)<>(v0.c2))), ((((((((ROUND(v0.c2, NULL))AND((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))))AND(((v0.c1)IS NOT(v0.c0)))))OR((~ (v0.c0)))))OR(((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((- (COALESCE(vt1.c0, vt1.c0, vt1.c0, 0X391475c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (COALESCE(vt1.c0, vt1.c0, vt1.c0, 0x391475c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (COALESCE(vt1.c0, vt1.c0, vt1.c0, 0X391475c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (COALESCE(vt1.c0, vt1.c0, vt1.c0, 0x391475c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (COALESCE(vt1.c0, vt1.c0, vt1.c0, 0X391475c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN x'' THEN CAST(t0.c57 AS INTEGER) WHEN ((t0.c57)<=(t0.c40)) THEN ((t0.c40) NOT BETWEEN (0.9379875467389936) AND (t0.c57)) WHEN (((('1989680855')AND(t0.c40)))OR(t0.c57)) THEN (~ (t0.c40)) WHEN ((0.5963329390988105) NOTNULL) THEN CAST(t0.c57 AS REAL) WHEN t0.c40 THEN t0.c40 COLLATE RTRIM END) ORDER BY CAST(t0.c57 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN CAST(t0.c57 AS INTEGER) WHEN ((t0.c57)<=(t0.c40)) THEN ((t0.c40) NOT BETWEEN (0.9379875467389936) AND (t0.c57)) WHEN (((('1989680855')AND(t0.c40)))OR(t0.c57)) THEN (~ (t0.c40)) WHEN ((0.5963329390988105) NOTNULL) THEN CAST(t0.c57 AS REAL) WHEN t0.c40 THEN t0.c40 COLLATE RTRIM END) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c57 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN x'' THEN CAST(t0.c57 AS INTEGER) WHEN ((t0.c57)<=(t0.c40)) THEN ((t0.c40) NOT BETWEEN (0.9379875467389936) AND (t0.c57)) WHEN (((('1989680855')AND(t0.c40)))OR(t0.c57)) THEN (~ (t0.c40)) WHEN ((0.5963329390988105) NOTNULL) THEN CAST(t0.c57 AS REAL) WHEN t0.c40 THEN t0.c40 COLLATE RTRIM END) ORDER BY CAST(t0.c57 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN CAST(t0.c57 AS INTEGER) WHEN ((t0.c57)<=(t0.c40)) THEN ((t0.c40) NOT BETWEEN (0.9379875467389936) AND (t0.c57)) WHEN (((('1989680855')AND(t0.c40)))OR(t0.c57)) THEN (~ (t0.c40)) WHEN ((0.5963329390988105) NOTNULL) THEN CAST(t0.c57 AS REAL) WHEN t0.c40 THEN t0.c40 COLLATE RTRIM END) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c57 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN x'' THEN CAST(t0.c57 AS INTEGER) WHEN ((t0.c57)<=(t0.c40)) THEN ((t0.c40) NOT BETWEEN (0.9379875467389936) AND (t0.c57)) WHEN (((('1989680855')AND(t0.c40)))OR(t0.c57)) THEN (~ (t0.c40)) WHEN ((0.5963329390988105) NOTNULL) THEN CAST(t0.c57 AS REAL) WHEN t0.c40 THEN t0.c40 COLLATE RTRIM END) ORDER BY CAST(t0.c57 COLLATE NOCASE AS BLOB);
SELECT * FROM vt0, v0, t0, vt1 WHERE (rtreenode(((vt0.c1)<>(t0.c57)), ((((((((v0.c2)OR(t0.c40)))AND(v0.c0)))OR(t0.c0)))AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((vt0.c1)<>(t0.c57)), ((((((((v0.c2)OR(t0.c40)))AND(v0.c0)))OR(t0.c0)))AND(v0.c2)))) IS TRUE)  as count FROM vt0, v0, t0, vt1);
SELECT * FROM vt0, v0, t0, vt1 WHERE (rtreenode(((vt0.c1)<>(t0.c57)), ((((((((v0.c2)OR(t0.c40)))AND(v0.c0)))OR(t0.c0)))AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((vt0.c1)<>(t0.c57)), ((((((((v0.c2)OR(t0.c40)))AND(v0.c0)))OR(t0.c0)))AND(v0.c2)))) IS TRUE)  as count FROM vt0, v0, t0, vt1);
SELECT * FROM vt0, v0, t0, vt1 WHERE (rtreenode(((vt0.c1)<>(t0.c57)), ((((((((v0.c2)OR(t0.c40)))AND(v0.c0)))OR(t0.c0)))AND(v0.c2))));
SELECT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c57 THEN t0.c57 WHEN t0.c0 THEN t0.c40 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END)AND(((t0.c40)LIKE(t0.c40)))))OR((('1358771309')/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c0  WHEN t0.c57 THEN t0.c57 WHEN t0.c0 THEN t0.c40 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END)AND(((t0.c40)LIKE(t0.c40)))))OR((('1358771309')/(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c57 THEN t0.c57 WHEN t0.c0 THEN t0.c40 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END)AND(((t0.c40)LIKE(t0.c40)))))OR((('1358771309')/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c0  WHEN t0.c57 THEN t0.c57 WHEN t0.c0 THEN t0.c40 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END)AND(((t0.c40)LIKE(t0.c40)))))OR((('1358771309')/(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c57 THEN t0.c57 WHEN t0.c0 THEN t0.c40 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END)AND(((t0.c40)LIKE(t0.c40)))))OR((('1358771309')/(t0.c0)))));
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((t0.c57)<=(v0.c0)))GLOB(((t0.c57) ISNULL)))) ORDER BY 'Pc9+? #o菍' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57)<=(v0.c0)))GLOB(((t0.c57) ISNULL)))) IS TRUE)  as count FROM t0 NOT INDEXED NATURAL JOIN v0 ORDER BY 'Pc9+? #o菍' ASC);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((t0.c57)<=(v0.c0)))GLOB(((t0.c57) ISNULL)))) ORDER BY 'Pc9+? #o菍' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57)<=(v0.c0)))GLOB(((t0.c57) ISNULL)))) IS TRUE)  as count FROM t0 NOT INDEXED NATURAL JOIN v0 ORDER BY 'Pc9+? #o菍' ASC);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((t0.c57)<=(v0.c0)))GLOB(((t0.c57) ISNULL)))) ORDER BY 'Pc9+? #o菍' ASC;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c1)>=(v0.c2)))AND(((((((((v0.c2)AND(9223372036854775807)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))))OR(UNLIKELY(DISTINCT x''))))AND(((v0.c2) BETWEEN (vt0.c2) AND (v0.c2)))))OR(((vt0.c1)>>(vt0.c1)))) WHERE ((+ (0Xffffffffe520161d))) ORDER BY TRIM(CAST(v0.c1 AS INTEGER), CASE WHEN vt0.c2 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL (((+ (0Xffffffffe520161d))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c1)>=(v0.c2)))AND(((((((((v0.c2)AND(9223372036854775807)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))))OR(UNLIKELY(DISTINCT x''))))AND(((v0.c2) BETWEEN (vt0.c2) AND (v0.c2)))))OR(((vt0.c1)>>(vt0.c1)))) ORDER BY TRIM(CAST(v0.c1 AS INTEGER), CASE WHEN vt0.c2 THEN vt0.c0 END));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c1)>=(v0.c2)))AND(((((((((v0.c2)AND(9223372036854775807)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))))OR(UNLIKELY(DISTINCT x''))))AND(((v0.c2) BETWEEN (vt0.c2) AND (v0.c2)))))OR(((vt0.c1)>>(vt0.c1)))) WHERE ((+ (0Xffffffffe520161d))) ORDER BY TRIM(CAST(v0.c1 AS INTEGER), CASE WHEN vt0.c2 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL (((+ (0Xffffffffe520161d))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c1)>=(v0.c2)))AND(((((((((v0.c2)AND(9223372036854775807)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))))OR(UNLIKELY(DISTINCT x''))))AND(((v0.c2) BETWEEN (vt0.c2) AND (v0.c2)))))OR(((vt0.c1)>>(vt0.c1)))) ORDER BY TRIM(CAST(v0.c1 AS INTEGER), CASE WHEN vt0.c2 THEN vt0.c0 END));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c1)>=(v0.c2)))AND(((((((((v0.c2)AND(9223372036854775807)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0)))))OR(UNLIKELY(DISTINCT x''))))AND(((v0.c2) BETWEEN (vt0.c2) AND (v0.c2)))))OR(((vt0.c1)>>(vt0.c1)))) WHERE ((+ (0Xffffffffe520161d))) ORDER BY TRIM(CAST(v0.c1 AS INTEGER), CASE WHEN vt0.c2 THEN vt0.c0 END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE TRIM(DISTINCT t0.c40)  WHEN ((t0.c57) BETWEEN (t0.c0) AND (NULL)) THEN vt1.c0 ELSE CAST(t0.c40 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT t0.c40)  WHEN ((t0.c57) BETWEEN (t0.c0) AND (NULL)) THEN vt1.c0 ELSE CAST(t0.c40 AS NUMERIC) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE TRIM(DISTINCT t0.c40)  WHEN ((t0.c57) BETWEEN (t0.c0) AND (NULL)) THEN vt1.c0 ELSE CAST(t0.c40 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT t0.c40)  WHEN ((t0.c57) BETWEEN (t0.c0) AND (NULL)) THEN vt1.c0 ELSE CAST(t0.c40 AS NUMERIC) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE TRIM(DISTINCT t0.c40)  WHEN ((t0.c57) BETWEEN (t0.c0) AND (NULL)) THEN vt1.c0 ELSE CAST(t0.c40 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((- (vt0.c1)) IN ()) LEFT OUTER JOIN t0 ON IFNULL((v0.c1 IN ()), v0.c1) LEFT OUTER JOIN v0 ON ((t0.c57) BETWEEN (t0.c40) AND ('MTxz')) COLLATE NOCASE WHERE (CASE ((((((((v0.c2)AND(0.11650590189871923)))AND(t0.c40)))OR(t0.c40)))AND(NULL))  WHEN v0.c2 COLLATE NOCASE THEN ((v0.c0)&(v0.c2)) WHEN v0.c2 COLLATE RTRIM THEN (((vt0.c2)) NOT BETWEEN (('/57ek苑q\n')) AND ((vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN (('0.05161650031826703') NOT BETWEEN (vt0.c0) AND (v0.c1)) END) ORDER BY CAST(((v0.c0)/(v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c2)AND(0.11650590189871923)))AND(t0.c40)))OR(t0.c40)))AND(NULL))  WHEN v0.c2 COLLATE NOCASE THEN ((v0.c0)&(v0.c2)) WHEN v0.c2 COLLATE RTRIM THEN (((vt0.c2)) NOT BETWEEN (('/57ek苑q\n')) AND ((vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN (('0.05161650031826703') NOT BETWEEN (vt0.c0) AND (v0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((- (vt0.c1)) IN ()) LEFT OUTER JOIN t0 ON IFNULL((v0.c1 IN ()), v0.c1) LEFT OUTER JOIN v0 ON ((t0.c57) BETWEEN (t0.c40) AND ('MTxz')) COLLATE NOCASE ORDER BY CAST(((v0.c0)/(v0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((- (vt0.c1)) IN ()) LEFT OUTER JOIN t0 ON IFNULL((v0.c1 IN ()), v0.c1) LEFT OUTER JOIN v0 ON ((t0.c57) BETWEEN (t0.c40) AND ('MTxz')) COLLATE NOCASE WHERE (CASE ((((((((v0.c2)AND(0.11650590189871923)))AND(t0.c40)))OR(t0.c40)))AND(NULL))  WHEN v0.c2 COLLATE NOCASE THEN ((v0.c0)&(v0.c2)) WHEN v0.c2 COLLATE RTRIM THEN (((vt0.c2)) NOT BETWEEN (('/57ek苑q\n')) AND ((vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN (('0.05161650031826703') NOT BETWEEN (vt0.c0) AND (v0.c1)) END) ORDER BY CAST(((v0.c0)/(v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c2)AND(0.11650590189871923)))AND(t0.c40)))OR(t0.c40)))AND(NULL))  WHEN v0.c2 COLLATE NOCASE THEN ((v0.c0)&(v0.c2)) WHEN v0.c2 COLLATE RTRIM THEN (((vt0.c2)) NOT BETWEEN (('/57ek苑q\n')) AND ((vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN (('0.05161650031826703') NOT BETWEEN (vt0.c0) AND (v0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((- (vt0.c1)) IN ()) LEFT OUTER JOIN t0 ON IFNULL((v0.c1 IN ()), v0.c1) LEFT OUTER JOIN v0 ON ((t0.c57) BETWEEN (t0.c40) AND ('MTxz')) COLLATE NOCASE ORDER BY CAST(((v0.c0)/(v0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((- (vt0.c1)) IN ()) LEFT OUTER JOIN t0 ON IFNULL((v0.c1 IN ()), v0.c1) LEFT OUTER JOIN v0 ON ((t0.c57) BETWEEN (t0.c40) AND ('MTxz')) COLLATE NOCASE WHERE (CASE ((((((((v0.c2)AND(0.11650590189871923)))AND(t0.c40)))OR(t0.c40)))AND(NULL))  WHEN v0.c2 COLLATE NOCASE THEN ((v0.c0)&(v0.c2)) WHEN v0.c2 COLLATE RTRIM THEN (((vt0.c2)) NOT BETWEEN (('/57ek苑q\n')) AND ((vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN (('0.05161650031826703') NOT BETWEEN (vt0.c0) AND (v0.c1)) END) ORDER BY CAST(((v0.c0)/(v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LIKELIHOOD(t0.c57, 0.26332497312958136)))) ORDER BY CASE (NOT ('-2070998527'))  WHEN CASE WHEN t0.c40 THEN t0.c57 END THEN CAST(t0.c57 AS INTEGER) ELSE TRIM(t0.c57) END ASC, TRIM(CAST(t0.c0 AS TEXT), CAST(t0.c57 AS TEXT)) ASC  NULLS LAST, (((((t0.c57)>(t0.c0))))>=((((t0.c40)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t0.c57, 0.26332497312958136)))) IS TRUE)  as count FROM t0 ORDER BY CASE (NOT ('-2070998527'))  WHEN CASE WHEN t0.c40 THEN t0.c57 END THEN CAST(t0.c57 AS INTEGER) ELSE TRIM(t0.c57) END ASC, TRIM(CAST(t0.c0 AS TEXT), CAST(t0.c57 AS TEXT)) ASC  NULLS LAST, (((((t0.c57)>(t0.c0))))>=((((t0.c40)LIKE(t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LIKELIHOOD(t0.c57, 0.26332497312958136)))) ORDER BY CASE (NOT ('-2070998527'))  WHEN CASE WHEN t0.c40 THEN t0.c57 END THEN CAST(t0.c57 AS INTEGER) ELSE TRIM(t0.c57) END ASC, TRIM(CAST(t0.c0 AS TEXT), CAST(t0.c57 AS TEXT)) ASC  NULLS LAST, (((((t0.c57)>(t0.c0))))>=((((t0.c40)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t0.c57, 0.26332497312958136)))) IS TRUE)  as count FROM t0 ORDER BY CASE (NOT ('-2070998527'))  WHEN CASE WHEN t0.c40 THEN t0.c57 END THEN CAST(t0.c57 AS INTEGER) ELSE TRIM(t0.c57) END ASC, TRIM(CAST(t0.c0 AS TEXT), CAST(t0.c57 AS TEXT)) ASC  NULLS LAST, (((((t0.c57)>(t0.c0))))>=((((t0.c40)LIKE(t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LIKELIHOOD(t0.c57, 0.26332497312958136)))) ORDER BY CASE (NOT ('-2070998527'))  WHEN CASE WHEN t0.c40 THEN t0.c57 END THEN CAST(t0.c57 AS INTEGER) ELSE TRIM(t0.c57) END ASC, TRIM(CAST(t0.c0 AS TEXT), CAST(t0.c57 AS TEXT)) ASC  NULLS LAST, (((((t0.c57)>(t0.c0))))>=((((t0.c40)LIKE(t0.c0)))));
SELECT * FROM v0, t0 WHERE ((((t0.c0)) BETWEEN ((LIKELIHOOD(t0.c40, 0.3324305021720486))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((LIKELIHOOD(t0.c40, 0.3324305021720486))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((t0.c0)) BETWEEN ((LIKELIHOOD(t0.c40, 0.3324305021720486))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((LIKELIHOOD(t0.c40, 0.3324305021720486))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((t0.c0)) BETWEEN ((LIKELIHOOD(t0.c40, 0.3324305021720486))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0))))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((((t0.c40))!=((vt0.c1))))) RIGHT OUTER JOIN v0 ON LAST_INSERT_ROWID() FULL OUTER JOIN vt0 ON ((((vt1.c0)OR(v0.c2)))!=((t0.c40 IN ()))) WHERE (((NULL)==(((t0.c0) BETWEEN (vt0.c2) AND (t0.c40))))) ORDER BY CASE WHEN ((((t0.c57)OR(v0.c2)))AND(vt0.c0)) THEN ((((v0.c0)OR(t0.c40)))OR(vt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(((t0.c0) BETWEEN (vt0.c2) AND (t0.c40))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((((t0.c40))!=((vt0.c1))))) RIGHT OUTER JOIN v0 ON LAST_INSERT_ROWID() FULL OUTER JOIN vt0 ON ((((vt1.c0)OR(v0.c2)))<>((t0.c40 IN ()))) ORDER BY CASE WHEN ((((t0.c57)OR(v0.c2)))AND(vt0.c0)) THEN ((((v0.c0)OR(t0.c40)))OR(vt0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((((t0.c40))!=((vt0.c1))))) RIGHT OUTER JOIN v0 ON LAST_INSERT_ROWID() FULL OUTER JOIN vt0 ON ((((vt1.c0)OR(v0.c2)))!=((t0.c40 IN ()))) WHERE (((NULL)==(((t0.c0) BETWEEN (vt0.c2) AND (t0.c40))))) ORDER BY CASE WHEN ((((t0.c57)OR(v0.c2)))AND(vt0.c0)) THEN ((((v0.c0)OR(t0.c40)))OR(vt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(((t0.c0) BETWEEN (vt0.c2) AND (t0.c40))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((((t0.c40))!=((vt0.c1))))) RIGHT OUTER JOIN v0 ON LAST_INSERT_ROWID() FULL OUTER JOIN vt0 ON ((((vt1.c0)OR(v0.c2)))<>((t0.c40 IN ()))) ORDER BY CASE WHEN ((((t0.c57)OR(v0.c2)))AND(vt0.c0)) THEN ((((v0.c0)OR(t0.c40)))OR(vt0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt0.c1) BETWEEN ('555058507') AND (vt0.c1)))OR((vt0.c2 IN ()))))OR(((vt1.c0)<=(vt1.c0)))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))OR((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))))) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt0.c1) BETWEEN ('555058507') AND (vt0.c1)))OR((vt0.c2 IN ()))))OR(((vt1.c0)<=(vt1.c0)))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))OR((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt0.c1) BETWEEN ('555058507') AND (vt0.c1)))OR((vt0.c2 IN ()))))OR(((vt1.c0)<=(vt1.c0)))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))OR((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))))) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt0.c1) BETWEEN ('555058507') AND (vt0.c1)))OR((vt0.c2 IN ()))))OR(((vt1.c0)<=(vt1.c0)))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))OR((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt0.c1) BETWEEN ('555058507') AND (vt0.c1)))OR((vt0.c2 IN ()))))OR(((vt1.c0)<=(vt1.c0)))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))OR((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))))) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT * FROM v0, t0, vt1, vt0 WHERE (CASE WHEN CAST(vt0.c2 AS INTEGER) THEN (((v0.c2)) NOT BETWEEN ((t0.c40)) AND ((vt0.c2))) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c2 AS INTEGER) THEN (((v0.c2)) NOT BETWEEN ((t0.c40)) AND ((vt0.c2))) ELSE NULL END) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT * FROM v0, t0, vt1, vt0 WHERE (CASE WHEN CAST(vt0.c2 AS INTEGER) THEN (((v0.c2)) NOT BETWEEN ((t0.c40)) AND ((vt0.c2))) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c2 AS INTEGER) THEN (((v0.c2)) NOT BETWEEN ((t0.c40)) AND ((vt0.c2))) ELSE NULL END) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT * FROM v0, t0, vt1, vt0 WHERE (CASE WHEN CAST(vt0.c2 AS INTEGER) THEN (((v0.c2)) NOT BETWEEN ((t0.c40)) AND ((vt0.c2))) ELSE NULL END);
SELECT ALL * FROM t0, vt1, v0 WHERE (0Xffffffffcd4bfc73);
SELECT SUM(count) FROM (SELECT ((0xffffffffcd4bfc73) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE (0Xffffffffcd4bfc73);
SELECT SUM(count) FROM (SELECT ((0xffffffffcd4bfc73) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE (0Xffffffffcd4bfc73);
SELECT ALL COUNT(*) FROM v0, vt1, t0, vt0 WHERE (((('{*ﯢc!*', v0.c2, NULL)) NOT BETWEEN ((CAST(0.528603956307145 AS TEXT), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (('%S') BETWEEN (vt0.c0) AND (t0.c40)))) AND ((CAST(t0.c0 AS REAL), x'3ab5', ((v0.c2) IS FALSE))))) ORDER BY t0.c57 ASC  NULLS FIRST, IFNULL(CASE t0.c40  WHEN vt0.c1 THEN v0.c1 ELSE 0xffffffffe887bd41 END, (vt0.c2 IN ())), (NOT (v0.c2 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('{*ﯢc!*', v0.c2, NULL)) NOT BETWEEN ((CAST(0.528603956307145 AS TEXT), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (('%S') BETWEEN (vt0.c0) AND (t0.c40)))) AND ((CAST(t0.c0 AS REAL), x'3ab5', ((v0.c2) IS FALSE))))) IS TRUE)  as count FROM v0, vt1, t0, vt0 NOT INDEXED ORDER BY t0.c57 ASC  NULLS FIRST, IFNULL(CASE t0.c40  WHEN vt0.c1 THEN v0.c1 ELSE 0xffffffffe887bd41 END, (vt0.c2 IN ())), (NOT (v0.c2 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, t0, vt0 WHERE (((('{*ﯢc!*', v0.c2, NULL)) NOT BETWEEN ((CAST(0.528603956307145 AS TEXT), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (('%S') BETWEEN (vt0.c0) AND (t0.c40)))) AND ((CAST(t0.c0 AS REAL), x'3ab5', ((v0.c2) IS FALSE))))) ORDER BY t0.c57 ASC  NULLS FIRST, IFNULL(CASE t0.c40  WHEN vt0.c1 THEN v0.c1 ELSE 0xffffffffe887bd41 END, (vt0.c2 IN ())), (NOT (v0.c2 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('{*ﯢc!*', v0.c2, NULL)) NOT BETWEEN ((CAST(0.528603956307145 AS TEXT), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (('%S') BETWEEN (vt0.c0) AND (t0.c40)))) AND ((CAST(t0.c0 AS REAL), x'3ab5', ((v0.c2) IS FALSE))))) IS TRUE)  as count FROM v0, vt1, t0, vt0 NOT INDEXED ORDER BY t0.c57 ASC  NULLS FIRST, IFNULL(CASE t0.c40  WHEN vt0.c1 THEN v0.c1 ELSE 0xffffffffe887bd41 END, (vt0.c2 IN ())), (NOT (v0.c2 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, t0, vt0 WHERE (((('{*ﯢc!*', v0.c2, NULL)) NOT BETWEEN ((CAST(0.528603956307145 AS TEXT), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (('%S') BETWEEN (vt0.c0) AND (t0.c40)))) AND ((CAST(t0.c0 AS REAL), x'3ab5', ((v0.c2) IS FALSE))))) ORDER BY t0.c57 ASC  NULLS FIRST, IFNULL(CASE t0.c40  WHEN vt0.c1 THEN v0.c1 ELSE 0xffffffffe887bd41 END, (vt0.c2 IN ())), (NOT (v0.c2 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((((((vt1.c0)AND(t0.c57)))AND(v0.c0)))%(CASE WHEN vt0.c2 THEN t0.c0 END)) WHERE ((((t0.c0))>=((v0.c0))) COLLATE RTRIM) ORDER BY NULL COLLATE BINARY DESC, (v0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0))>=((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((((((vt1.c0)AND(t0.c57)))AND(v0.c0)))%(CASE WHEN vt0.c2 THEN t0.c0 END)) ORDER BY NULL COLLATE BINARY DESC, (v0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((((((vt1.c0)AND(t0.c57)))AND(v0.c0)))%(CASE WHEN vt0.c2 THEN t0.c0 END)) WHERE ((((t0.c0))>=((v0.c0))) COLLATE RTRIM) ORDER BY NULL COLLATE BINARY DESC, (v0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0))>=((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((((((vt1.c0)AND(t0.c57)))AND(v0.c0)))%(CASE WHEN vt0.c2 THEN t0.c0 END)) ORDER BY NULL COLLATE BINARY DESC, (v0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 FULL OUTER JOIN t0 ON ((((((vt1.c0)AND(t0.c57)))AND(v0.c0)))%(CASE WHEN vt0.c2 THEN t0.c0 END)) WHERE ((((t0.c0))>=((v0.c0))) COLLATE RTRIM) ORDER BY NULL COLLATE BINARY DESC, (v0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) AS REAL));
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c40 COLLATE RTRIM)IS NOT(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON CAST('-172445322' AS NUMERIC) WHERE ((((t0.c40)) BETWEEN ((v0.c2 COLLATE RTRIM)) AND ((vt0.c2)))) ORDER BY ((((v0.c0, vt1.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c2, v0.c1, v0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c40)) BETWEEN ((v0.c2 COLLATE RTRIM)) AND ((vt0.c2)))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c40 COLLATE RTRIM)IS NOT(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON CAST('-172445322' AS NUMERIC) ORDER BY ((((v0.c0, vt1.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c2, v0.c1, v0.c0))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c40 COLLATE RTRIM)IS NOT(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON CAST('-172445322' AS NUMERIC) WHERE ((((t0.c40)) BETWEEN ((v0.c2 COLLATE RTRIM)) AND ((vt0.c2)))) ORDER BY ((((v0.c0, vt1.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c2, v0.c1, v0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c40)) BETWEEN ((v0.c2 COLLATE RTRIM)) AND ((vt0.c2)))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c40 COLLATE RTRIM)IS NOT(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON CAST('-172445322' AS NUMERIC) ORDER BY ((((v0.c0, vt1.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c2, v0.c1, v0.c0))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON ((t0.c40 COLLATE RTRIM)IS NOT(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON CAST('-172445322' AS NUMERIC) WHERE ((((t0.c40)) BETWEEN ((v0.c2 COLLATE RTRIM)) AND ((vt0.c2)))) ORDER BY ((((v0.c0, vt1.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c2, v0.c1, v0.c0))) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))OR(t0.c0)))AND(v0.c1)))<((vt1.c0 IN (t0.c40))))) ORDER BY ((v0.c0) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))OR(t0.c0)))AND(v0.c1)))<((vt1.c0 IN (t0.c40))))) IS TRUE)  as count FROM vt0, v0, vt1, t0 ORDER BY ((v0.c0) IS FALSE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))OR(t0.c0)))AND(v0.c1)))<((vt1.c0 IN (t0.c40))))) ORDER BY ((v0.c0) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))OR(t0.c0)))AND(v0.c1)))<((vt1.c0 IN (t0.c40))))) IS TRUE)  as count FROM vt0, v0, vt1, t0 ORDER BY ((v0.c0) IS FALSE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))OR(t0.c0)))AND(v0.c1)))<((vt1.c0 IN (t0.c40))))) ORDER BY ((v0.c0) IS FALSE) COLLATE RTRIM;
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c2)LIKE(v0.c0)))<=(QUOTE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)LIKE(v0.c0)))<=(QUOTE(vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c2)LIKE(v0.c0)))<=(QUOTE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)LIKE(v0.c0)))<=(QUOTE(vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c2)LIKE(v0.c0)))<=(QUOTE(vt1.c0))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)AND(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1)AND(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)AND(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1)AND(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)AND(v0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((NULLIF(DISTINCT vt0.c0, v0.c2))>((v0.c1 IN ()))) WHERE ((((vt0.c2) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((NULLIF(DISTINCT vt0.c0, v0.c2))>((v0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((NULLIF(DISTINCT vt0.c0, v0.c2))>((v0.c1 IN ()))) WHERE ((((vt0.c2) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((NULLIF(DISTINCT vt0.c0, v0.c2))>((v0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((NULLIF(DISTINCT vt0.c0, v0.c2))>((v0.c1 IN ()))) WHERE ((((vt0.c2) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON json_remove(NULL, vt0.c0) WHERE ((CAST(vt0.c2 AS TEXT) IN (vt0.c1))) ORDER BY v0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY  NULLS LAST, (((- (vt0.c1)))*(((((vt0.c1)OR(v0.c2)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS TEXT) IN (vt0.c1))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON json_remove(NULL, vt0.c0) ORDER BY v0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY  NULLS LAST, (((- (vt0.c1)))*(((((vt0.c1)OR(v0.c2)))AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON json_remove(NULL, vt0.c0) WHERE ((CAST(vt0.c2 AS TEXT) IN (vt0.c1))) ORDER BY v0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY  NULLS LAST, (((- (vt0.c1)))*(((((vt0.c1)OR(v0.c2)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS TEXT) IN (vt0.c1))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON json_remove(NULL, vt0.c0) ORDER BY v0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY  NULLS LAST, (((- (vt0.c1)))*(((((vt0.c1)OR(v0.c2)))AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON json_remove(NULL, vt0.c0) WHERE ((CAST(vt0.c2 AS TEXT) IN (vt0.c1))) ORDER BY v0.c0 COLLATE BINARY COLLATE BINARY COLLATE BINARY  NULLS LAST, (((- (vt0.c1)))*(((((vt0.c1)OR(v0.c2)))AND(vt0.c1))));
SELECT * FROM vt0 WHERE ((((((vt0.c1))<>((vt0.c0))))IS NOT(((vt0.c0)&(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))<>((vt0.c0))))IS NOT(((vt0.c0)&(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))<>((vt0.c0))))IS NOT(((vt0.c0)&(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))<>((vt0.c0))))IS NOT(((vt0.c0)&(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))<>((vt0.c0))))IS NOT(((vt0.c0)&(vt0.c2)))));
SELECT ALL * FROM v0, t0, vt1 WHERE ((- (NULL))) ORDER BY t0.c57 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY t0.c57 DESC);
SELECT ALL * FROM v0, t0, vt1 WHERE ((- (NULL))) ORDER BY t0.c57 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY t0.c57 DESC);
SELECT ALL * FROM v0, t0, vt1 WHERE ((- (NULL))) ORDER BY t0.c57 DESC;
SELECT ALL * FROM v0, t0 CROSS JOIN vt0 ON x'47be7028' INNER JOIN vt1 ON 'Iz' WHERE (0.7042304275307326) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7042304275307326) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON x'47be7028' INNER JOIN vt1 ON 'Iz' ORDER BY NULL ASC);
SELECT ALL * FROM v0, t0 CROSS JOIN vt0 ON x'47be7028' INNER JOIN vt1 ON 'Iz' WHERE (0.7042304275307326) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7042304275307326) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON x'47be7028' INNER JOIN vt1 ON 'Iz' ORDER BY NULL ASC);
SELECT ALL * FROM v0, t0 CROSS JOIN vt0 ON x'47be7028' INNER JOIN vt1 ON 'Iz' WHERE (0.7042304275307326) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM v0, vt0, t0, vt1 WHERE (((vt0.c0)+(v0.c1)) COLLATE NOCASE) ORDER BY ((((v0.c0) ISNULL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0, vt1 ORDER BY ((((v0.c0) ISNULL)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, t0, vt1 WHERE (((vt0.c0)+(v0.c1)) COLLATE NOCASE) ORDER BY ((((v0.c0) ISNULL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0, vt1 ORDER BY ((((v0.c0) ISNULL)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, t0, vt1 WHERE (((vt0.c0)+(v0.c1)) COLLATE NOCASE) ORDER BY ((((v0.c0) ISNULL)) NOT NULL) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c2) ORDER BY (((vt0.c2 IN (vt0.c2)))<(((x'6458') NOT BETWEEN (vt0.c1) AND (vt0.c0)))), x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c2 IN (vt0.c2)))<(((x'6458') NOT BETWEEN (vt0.c1) AND (vt0.c0)))), x''  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c2) ORDER BY (((vt0.c2 IN (vt0.c2)))<(((x'6458') NOT BETWEEN (vt0.c1) AND (vt0.c0)))), x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c2 IN (vt0.c2)))<(((x'6458') NOT BETWEEN (vt0.c1) AND (vt0.c0)))), x''  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c2) ORDER BY (((vt0.c2 IN (vt0.c2)))<(((x'6458') NOT BETWEEN (vt0.c1) AND (vt0.c0)))), x''  NULLS LAST;
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)-(CAST(v0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)-(CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, v0, vt0, vt1);
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)-(CAST(v0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)-(CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, v0, vt0, vt1);
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)-(CAST(v0.c2 AS BLOB))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON '' LEFT OUTER JOIN v0 ON (((- (vt0.c0)))LIKE(((vt0.c1)>=(v0.c0)))) WHERE (ABS(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c2 ELSE vt0.c1 END)) ORDER BY ((((v0.c1) IS FALSE))>>(((((((((((((v0.c0)AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(v0.c1)))OR(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c2 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON '' LEFT OUTER JOIN v0 ON (((- (vt0.c0)))LIKE(((vt0.c1)>=(v0.c0)))) ORDER BY ((((v0.c1) IS FALSE))>>(((((((((((((v0.c0)AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(v0.c1)))OR(v0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON '' LEFT OUTER JOIN v0 ON (((- (vt0.c0)))LIKE(((vt0.c1)>=(v0.c0)))) WHERE (ABS(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c2 ELSE vt0.c1 END)) ORDER BY ((((v0.c1) IS FALSE))>>(((((((((((((v0.c0)AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(v0.c1)))OR(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c2 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON '' LEFT OUTER JOIN v0 ON (((- (vt0.c0)))LIKE(((vt0.c1)>=(v0.c0)))) ORDER BY ((((v0.c1) IS FALSE))>>(((((((((((((v0.c0)AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(v0.c1)))OR(v0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON '' LEFT OUTER JOIN v0 ON (((- (vt0.c0)))LIKE(((vt0.c1)>=(v0.c0)))) WHERE (ABS(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c2 ELSE vt0.c1 END)) ORDER BY ((((v0.c1) IS FALSE))>>(((((((((((((v0.c0)AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(v0.c1)))OR(v0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0, t0 CROSS JOIN vt0 ON ((x'164a')%(((vt0.c0)IS(t0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, t0 CROSS JOIN vt0 ON ((x'164a')%(((vt0.c0)IS(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0, t0 CROSS JOIN vt0 ON ((x'164a')%(((vt0.c0)IS(t0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0, t0 CROSS JOIN vt0 ON ((x'164a')%(((vt0.c0)IS(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0, t0 CROSS JOIN vt0 ON ((x'164a')%(((vt0.c0)IS(t0.c0)))) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ('B+(m');
SELECT SUM(count) FROM (SELECT ALL (('B+(m') IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ('B+(m');
SELECT SUM(count) FROM (SELECT ALL (('B+(m') IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ('B+(m');
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND (('e8j>,a鎧[', vt1.c0, vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND (('e8j>,a鎧[', vt1.c0, vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND (('e8j>,a鎧[', vt1.c0, vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND (('e8j>,a鎧[', vt1.c0, vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND (('e8j>,a鎧[', vt1.c0, vt1.c0)))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c1, t0.c0)) BETWEEN ((vt0.c0, t0.c0 COLLATE BINARY, LIKELIHOOD(v0.c1, 0.2762708900256303))) AND ((t0.c0 COLLATE BINARY, ((v0.c1) NOT NULL), t0.c57 COLLATE RTRIM))) WHERE (((((NULL)OR(((vt0.c0)OR(t0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY (((~ (vt0.c1))) BETWEEN (((((((((vt0.c0)OR(t0.c57)))AND('')))OR(x'')))AND(vt0.c2))) AND (((vt0.c0)<=(v0.c2))))  NULLS LAST, (((t0.c40)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((((v0.c2))>((vt0.c1)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((vt0.c0)OR(t0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c1, t0.c0)) BETWEEN ((vt0.c0, t0.c0 COLLATE BINARY, LIKELIHOOD(v0.c1, 0.2762708900256303))) AND ((t0.c0 COLLATE BINARY, ((v0.c1) NOT NULL), t0.c57 COLLATE RTRIM))) ORDER BY (((~ (vt0.c1))) BETWEEN (((((((((vt0.c0)OR(t0.c57)))AND('')))OR(x'')))AND(vt0.c2))) AND (((vt0.c0)<=(v0.c2))))  NULLS LAST, (((t0.c40)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((((v0.c2))>((vt0.c1)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c1, t0.c0)) BETWEEN ((vt0.c0, t0.c0 COLLATE BINARY, LIKELIHOOD(v0.c1, 0.2762708900256303))) AND ((t0.c0 COLLATE BINARY, ((v0.c1) NOT NULL), t0.c57 COLLATE RTRIM))) WHERE (((((NULL)OR(((vt0.c0)OR(t0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY (((~ (vt0.c1))) BETWEEN (((((((((vt0.c0)OR(t0.c57)))AND('')))OR(x'')))AND(vt0.c2))) AND (((vt0.c0)<=(v0.c2))))  NULLS LAST, (((t0.c40)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((((v0.c2))>((vt0.c1)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((vt0.c0)OR(t0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c1, t0.c0)) BETWEEN ((vt0.c0, t0.c0 COLLATE BINARY, LIKELIHOOD(v0.c1, 0.2762708900256303))) AND ((t0.c0 COLLATE BINARY, ((v0.c1) NOT NULL), t0.c57 COLLATE RTRIM))) ORDER BY (((~ (vt0.c1))) BETWEEN (((((((((vt0.c0)OR(t0.c57)))AND('')))OR(x'')))AND(vt0.c2))) AND (((vt0.c0)<=(v0.c2))))  NULLS LAST, (((t0.c40)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((((v0.c2))>((vt0.c1)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((v0.c2, v0.c1, t0.c0)) BETWEEN ((vt0.c0, t0.c0 COLLATE BINARY, LIKELIHOOD(v0.c1, 0.2762708900256303))) AND ((t0.c0 COLLATE BINARY, ((v0.c1) NOT NULL), t0.c57 COLLATE RTRIM))) WHERE (((((NULL)OR(((vt0.c0)OR(t0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY (((~ (vt0.c1))) BETWEEN (((((((((vt0.c0)OR(t0.c57)))AND('')))OR(x'')))AND(vt0.c2))) AND (((vt0.c0)<=(v0.c2))))  NULLS LAST, (((t0.c40)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((((v0.c2))>((vt0.c1)))))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN (- (v0.c2)) THEN CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (v0.c2)) THEN CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (- (v0.c2)) THEN CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (v0.c2)) THEN CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (- (v0.c2)) THEN CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END END);
SELECT ALL * FROM vt1, v0, t0, vt0 WHERE (((((((((((((((vt0.c1)IS NOT('')))OR((- (t0.c0)))))OR((((t0.c57, v0.c2, vt0.c2)) BETWEEN ((t0.c0, 0.37746285200782803, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))OR((((('-1445506456')AND(vt1.c0)))AND(v0.c2)))))OR(((v0.c1) NOT NULL))))AND(((vt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))))AND(((0x5d0a8415)<=(t0.c57))))) ORDER BY CASE WHEN ((x'd562') IS TRUE) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN t0.c40 THEN t0.c57 WHEN t0.c57 THEN vt0.c1 END ELSE ((v0.c0)/(t0.c57)) END, CASE (vt0.c1 IN ())  WHEN (((vt1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) THEN vt1.c0 COLLATE NOCASE WHEN (((v0.c1))>=((v0.c2))) THEN ((((((((v0.c2)OR(vt0.c0)))OR(t0.c40)))AND(t0.c57)))AND(v0.c0)) WHEN (vt0.c1 IN (0.9343113987082419)) THEN ((t0.c40) BETWEEN (v0.c0) AND (0.5307670634353924)) ELSE CASE vt0.c1  WHEN t0.c57 THEN v0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN 1202071486 THEN vt1.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)IS NOT('')))OR((- (t0.c0)))))OR((((t0.c57, v0.c2, vt0.c2)) BETWEEN ((t0.c0, 0.37746285200782803, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))OR((((('-1445506456')AND(vt1.c0)))AND(v0.c2)))))OR(((v0.c1) NOT NULL))))AND(((vt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))))AND(((0x5d0a8415)<=(t0.c57))))) IS TRUE)  as count FROM vt1, v0, t0, vt0 ORDER BY CASE WHEN ((x'd562') IS TRUE) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN t0.c40 THEN t0.c57 WHEN t0.c57 THEN vt0.c1 END ELSE ((v0.c0)/(t0.c57)) END, CASE (vt0.c1 IN ())  WHEN (((vt1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) THEN vt1.c0 COLLATE NOCASE WHEN (((v0.c1))>=((v0.c2))) THEN ((((((((v0.c2)OR(vt0.c0)))OR(t0.c40)))AND(t0.c57)))AND(v0.c0)) WHEN (vt0.c1 IN (0.9343113987082419)) THEN ((t0.c40) BETWEEN (v0.c0) AND (0.5307670634353924)) ELSE CASE vt0.c1  WHEN t0.c57 THEN v0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN 1202071486 THEN vt1.c0 END END DESC);
SELECT ALL * FROM vt1, v0, t0, vt0 WHERE (((((((((((((((vt0.c1)IS NOT('')))OR((- (t0.c0)))))OR((((t0.c57, v0.c2, vt0.c2)) BETWEEN ((t0.c0, 0.37746285200782803, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))OR((((('-1445506456')AND(vt1.c0)))AND(v0.c2)))))OR(((v0.c1) NOT NULL))))AND(((vt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))))AND(((0x5d0a8415)<=(t0.c57))))) ORDER BY CASE WHEN ((x'd562') IS TRUE) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN t0.c40 THEN t0.c57 WHEN t0.c57 THEN vt0.c1 END ELSE ((v0.c0)/(t0.c57)) END, CASE (vt0.c1 IN ())  WHEN (((vt1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) THEN vt1.c0 COLLATE NOCASE WHEN (((v0.c1))>=((v0.c2))) THEN ((((((((v0.c2)OR(vt0.c0)))OR(t0.c40)))AND(t0.c57)))AND(v0.c0)) WHEN (vt0.c1 IN (0.9343113987082419)) THEN ((t0.c40) BETWEEN (v0.c0) AND (0.5307670634353924)) ELSE CASE vt0.c1  WHEN t0.c57 THEN v0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN 1202071486 THEN vt1.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)IS NOT('')))OR((- (t0.c0)))))OR((((t0.c57, v0.c2, vt0.c2)) BETWEEN ((t0.c0, 0.37746285200782803, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))OR((((('-1445506456')AND(vt1.c0)))AND(v0.c2)))))OR(((v0.c1) NOT NULL))))AND(((vt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))))AND(((0x5d0a8415)<=(t0.c57))))) IS TRUE)  as count FROM vt1, v0, t0, vt0 ORDER BY CASE WHEN ((x'd562') IS TRUE) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN t0.c40 THEN t0.c57 WHEN t0.c57 THEN vt0.c1 END ELSE ((v0.c0)/(t0.c57)) END, CASE (vt0.c1 IN ())  WHEN (((vt1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) THEN vt1.c0 COLLATE NOCASE WHEN (((v0.c1))>=((v0.c2))) THEN ((((((((v0.c2)OR(vt0.c0)))OR(t0.c40)))AND(t0.c57)))AND(v0.c0)) WHEN (vt0.c1 IN (0.9343113987082419)) THEN ((t0.c40) BETWEEN (v0.c0) AND (0.5307670634353924)) ELSE CASE vt0.c1  WHEN t0.c57 THEN v0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN 1202071486 THEN vt1.c0 END END DESC);
SELECT ALL * FROM vt1, v0, t0, vt0 WHERE (((((((((((((((vt0.c1)IS NOT('')))OR((- (t0.c0)))))OR((((t0.c57, v0.c2, vt0.c2)) BETWEEN ((t0.c0, 0.37746285200782803, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))OR((((('-1445506456')AND(vt1.c0)))AND(v0.c2)))))OR(((v0.c1) NOT NULL))))AND(((vt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))))AND(((0x5d0a8415)<=(t0.c57))))) ORDER BY CASE WHEN ((x'd562') IS TRUE) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN t0.c40 THEN t0.c57 WHEN t0.c57 THEN vt0.c1 END ELSE ((v0.c0)/(t0.c57)) END, CASE (vt0.c1 IN ())  WHEN (((vt1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) THEN vt1.c0 COLLATE NOCASE WHEN (((v0.c1))>=((v0.c2))) THEN ((((((((v0.c2)OR(vt0.c0)))OR(t0.c40)))AND(t0.c57)))AND(v0.c0)) WHEN (vt0.c1 IN (0.9343113987082419)) THEN ((t0.c40) BETWEEN (v0.c0) AND (0.5307670634353924)) ELSE CASE vt0.c1  WHEN t0.c57 THEN v0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN 1202071486 THEN vt1.c0 END END DESC;
SELECT ALL COUNT(*) FROM t0, vt1, vt0, v0 WHERE (((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0))) NOTNULL)) ORDER BY '1356090416' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0, v0 ORDER BY '1356090416' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, v0 WHERE (((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0))) NOTNULL)) ORDER BY '1356090416' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0, v0 ORDER BY '1356090416' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, v0 WHERE (((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0))) NOTNULL)) ORDER BY '1356090416' ASC  NULLS FIRST;
SELECT * FROM vt0, v0, vt1 WHERE (CASE (vt0.c2 IN ())  WHEN v0.c0 THEN ((vt0.c1) NOT NULL) ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY CASE (~ (vt0.c1))  WHEN ((v0.c0)!=(vt1.c0)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(v0.c1 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c2 IN ())  WHEN v0.c0 THEN ((vt0.c1) NOT NULL) ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CASE (~ (vt0.c1))  WHEN ((v0.c0)<>(vt1.c0)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(v0.c1 AS BLOB) END ASC);
SELECT * FROM vt0, v0, vt1 WHERE (CASE (vt0.c2 IN ())  WHEN v0.c0 THEN ((vt0.c1) NOT NULL) ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY CASE (~ (vt0.c1))  WHEN ((v0.c0)!=(vt1.c0)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(v0.c1 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c2 IN ())  WHEN v0.c0 THEN ((vt0.c1) NOT NULL) ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CASE (~ (vt0.c1))  WHEN ((v0.c0)<>(vt1.c0)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(v0.c1 AS BLOB) END ASC);
SELECT * FROM vt0, v0, vt1 WHERE (CASE (vt0.c2 IN ())  WHEN v0.c0 THEN ((vt0.c1) NOT NULL) ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY CASE (~ (vt0.c1))  WHEN ((v0.c0)!=(vt1.c0)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(v0.c1 AS BLOB) END ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)==(vt0.c1)) IN ())) ORDER BY ((vt0.c0) IS FALSE) ASC  NULLS LAST, 0.2584225922442597 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)=(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE) ASC  NULLS LAST, 0.2584225922442597 DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)==(vt0.c1)) IN ())) ORDER BY ((vt0.c0) IS FALSE) ASC  NULLS LAST, 0.2584225922442597 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)=(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE) ASC  NULLS LAST, 0.2584225922442597 DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)==(vt0.c1)) IN ())) ORDER BY ((vt0.c0) IS FALSE) ASC  NULLS LAST, 0.2584225922442597 DESC;
SELECT * FROM vt0, v0, vt1 CROSS JOIN t0 ON (((v0.c2)&(vt1.c0)) IN (((((((((((((t0.c40)AND(vt1.c0)))OR(v0.c1)))AND(v0.c2)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))) WHERE (((CAST(t0.c0 AS NUMERIC))*(CAST(t0.c0 AS BLOB)))) ORDER BY ((('](S]쭮CV')GLOB(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC))*(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0, vt1 CROSS JOIN t0 ON (((v0.c2)&(vt1.c0)) IN (((((((((((((t0.c40)AND(vt1.c0)))OR(v0.c1)))AND(v0.c2)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))) ORDER BY ((('](S]쭮CV')GLOB(t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0, v0, vt1 CROSS JOIN t0 ON (((v0.c2)&(vt1.c0)) IN (((((((((((((t0.c40)AND(vt1.c0)))OR(v0.c1)))AND(v0.c2)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))) WHERE (((CAST(t0.c0 AS NUMERIC))*(CAST(t0.c0 AS BLOB)))) ORDER BY ((('](S]쭮CV')GLOB(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC))*(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0, vt1 CROSS JOIN t0 ON (((v0.c2)&(vt1.c0)) IN (((((((((((((t0.c40)AND(vt1.c0)))OR(v0.c1)))AND(v0.c2)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))) ORDER BY ((('](S]쭮CV')GLOB(t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0, v0, vt1 CROSS JOIN t0 ON (((v0.c2)&(vt1.c0)) IN (((((((((((((t0.c40)AND(vt1.c0)))OR(v0.c1)))AND(v0.c2)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))) WHERE (((CAST(t0.c0 AS NUMERIC))*(CAST(t0.c0 AS BLOB)))) ORDER BY ((('](S]쭮CV')GLOB(t0.c0)) IN ())  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c40)LIKE(t0.c0)))=(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c40)LIKE(t0.c0)))==(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c40)LIKE(t0.c0)))=(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c40)LIKE(t0.c0)))==(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c40)LIKE(t0.c0)))=(((t0.c0) NOT NULL))));
SELECT ALL * FROM t0, v0 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))-(t0.c40)));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(t0.c0))-(t0.c40))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))-(t0.c40)));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(t0.c0))-(t0.c40))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))-(t0.c40)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)IS NOT(t0.c57)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)IS NOT(t0.c57))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)IS NOT(t0.c57)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)IS NOT(t0.c57))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)IS NOT(t0.c57)))));
SELECT * FROM t0 WHERE (t0.c57) ORDER BY ('x#DL' IN ());
SELECT SUM(count) FROM (SELECT ((t0.c57) IS TRUE)  as count FROM t0 ORDER BY ('x#DL' IN ()));
SELECT * FROM t0 WHERE (t0.c57) ORDER BY ('x#DL' IN ());
SELECT SUM(count) FROM (SELECT ((t0.c57) IS TRUE)  as count FROM t0 ORDER BY ('x#DL' IN ()));
SELECT * FROM t0 WHERE (t0.c57) ORDER BY ('x#DL' IN ());
SELECT COUNT(*) FROM vt0 WHERE ((((MIN(vt0.c2, vt0.c0, vt0.c2, vt0.c1)))>=((((vt0.c1) NOTNULL))))) ORDER BY CAST(((vt0.c2) NOTNULL) AS NUMERIC)  NULLS LAST, ((((((((((((((((((((-1.126230416E9)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR('1!')))AND(0.9416646612789659)))AND(vt0.c1)))AND(vt0.c2)))OR(CAST('-1616395454' AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((MIN(vt0.c2, vt0.c0, vt0.c2, vt0.c1)))>=((((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2) NOTNULL) AS NUMERIC)  NULLS LAST, ((((((((((((((((((((-1.126230416E9)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR('1!')))AND(0.9416646612789659)))AND(vt0.c1)))AND(vt0.c2)))OR(CAST('-1616395454' AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((((MIN(vt0.c2, vt0.c0, vt0.c2, vt0.c1)))>=((((vt0.c1) NOTNULL))))) ORDER BY CAST(((vt0.c2) NOTNULL) AS NUMERIC)  NULLS LAST, ((((((((((((((((((((-1.126230416E9)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR('1!')))AND(0.9416646612789659)))AND(vt0.c1)))AND(vt0.c2)))OR(CAST('-1616395454' AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((MIN(vt0.c2, vt0.c0, vt0.c2, vt0.c1)))>=((((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2) NOTNULL) AS NUMERIC)  NULLS LAST, ((((((((((((((((((((-1.126230416E9)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR('1!')))AND(0.9416646612789659)))AND(vt0.c1)))AND(vt0.c2)))OR(CAST('-1616395454' AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((((MIN(vt0.c2, vt0.c0, vt0.c2, vt0.c1)))>=((((vt0.c1) NOTNULL))))) ORDER BY CAST(((vt0.c2) NOTNULL) AS NUMERIC)  NULLS LAST, ((((((((((((((((((((-1.126230416E9)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))OR('1!')))AND(0.9416646612789659)))AND(vt0.c1)))AND(vt0.c2)))OR(CAST('-1616395454' AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt1, t0, v0 WHERE (CAST(((((t0.c40)AND(v0.c1)))OR(t0.c40)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c40)AND(v0.c1)))OR(t0.c40)) AS TEXT)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL * FROM vt1, t0, v0 WHERE (CAST(((((t0.c40)AND(v0.c1)))OR(t0.c40)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c40)AND(v0.c1)))OR(t0.c40)) AS TEXT)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL * FROM vt1, t0, v0 WHERE (CAST(((((t0.c40)AND(v0.c1)))OR(t0.c40)) AS TEXT));
SELECT COUNT(*) FROM vt1, v0 WHERE (((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))<=(((v0.c2) NOT BETWEEN (x'') AND (0.130292512607319))))) ORDER BY (((v0.c0))<=(((((vt1.c0))>=((v0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))<=(((v0.c2) NOT BETWEEN (x'') AND (0.130292512607319))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c0))<=(((((vt1.c0))>=((v0.c0)))))) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))<=(((v0.c2) NOT BETWEEN (x'') AND (0.130292512607319))))) ORDER BY (((v0.c0))<=(((((vt1.c0))>=((v0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))<=(((v0.c2) NOT BETWEEN (x'') AND (0.130292512607319))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c0))<=(((((vt1.c0))>=((v0.c0)))))) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))<=(((v0.c2) NOT BETWEEN (x'') AND (0.130292512607319))))) ORDER BY (((v0.c0))<=(((((vt1.c0))>=((v0.c0)))))) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c1 AS REAL)) ORDER BY (((v0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2 COLLATE RTRIM, ABS(DISTINCT ''), (- (v0.c2)))) AND ((((vt0.c2) IS FALSE), ((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c2))))) ASC  NULLS LAST, (- ((v0.c1 IN ()))) ASC  NULLS FIRST, ((((((vt0.c1)AND(vt0.c0)))OR(v0.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2 COLLATE RTRIM, ABS(DISTINCT ''), (- (v0.c2)))) AND ((((vt0.c2) IS FALSE), ((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c2))))) ASC  NULLS LAST, (- ((v0.c1 IN ()))) ASC  NULLS FIRST, ((((((vt0.c1)AND(vt0.c0)))OR(v0.c2))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c1 AS REAL)) ORDER BY (((v0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2 COLLATE RTRIM, ABS(DISTINCT ''), (- (v0.c2)))) AND ((((vt0.c2) IS FALSE), ((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c2))))) ASC  NULLS LAST, (- ((v0.c1 IN ()))) ASC  NULLS FIRST, ((((((vt0.c1)AND(vt0.c0)))OR(v0.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2 COLLATE RTRIM, ABS(DISTINCT ''), (- (v0.c2)))) AND ((((vt0.c2) IS FALSE), ((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c2))))) ASC  NULLS LAST, (- ((v0.c1 IN ()))) ASC  NULLS FIRST, ((((((vt0.c1)AND(vt0.c0)))OR(v0.c2))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c1 AS REAL)) ORDER BY (((v0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2 COLLATE RTRIM, ABS(DISTINCT ''), (- (v0.c2)))) AND ((((vt0.c2) IS FALSE), ((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c2))))) ASC  NULLS LAST, (- ((v0.c1 IN ()))) ASC  NULLS FIRST, ((((((vt0.c1)AND(vt0.c0)))OR(v0.c2))) NOT NULL)  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON UPPER(DISTINCT t0.c57) FULL OUTER JOIN v0 ON (((((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (v0.c0 IN (x'0681', v0.c1)), NULL))==(((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t0.c57)) AND ((0.989401283494434, v0.c2, t0.c57))), vt0.c0 COLLATE BINARY, v0.c2))) WHERE (t0.c0) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ()), ((vt0.c1)%(v0.c1))), (((~ (0.4773559226752109))) NOT BETWEEN (vt0.c1) AND ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON UPPER(DISTINCT t0.c57) FULL OUTER JOIN v0 ON (((((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (v0.c0 IN (x'0681', v0.c1)), NULL))=(((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t0.c57)) AND ((0.989401283494434, v0.c2, t0.c57))), vt0.c0 COLLATE BINARY, v0.c2))) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ()), ((vt0.c1)%(v0.c1))), (((~ (0.4773559226752109))) NOT BETWEEN (vt0.c1) AND ((t0.c0 IN ()))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON UPPER(DISTINCT t0.c57) FULL OUTER JOIN v0 ON (((((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (v0.c0 IN (x'0681', v0.c1)), NULL))==(((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t0.c57)) AND ((0.989401283494434, v0.c2, t0.c57))), vt0.c0 COLLATE BINARY, v0.c2))) WHERE (t0.c0) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ()), ((vt0.c1)%(v0.c1))), (((~ (0.4773559226752109))) NOT BETWEEN (vt0.c1) AND ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON UPPER(DISTINCT t0.c57) FULL OUTER JOIN v0 ON (((((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (v0.c0 IN (x'0681', v0.c1)), NULL))=(((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t0.c57)) AND ((0.989401283494434, v0.c2, t0.c57))), vt0.c0 COLLATE BINARY, v0.c2))) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ()), ((vt0.c1)%(v0.c1))), (((~ (0.4773559226752109))) NOT BETWEEN (vt0.c1) AND ((t0.c0 IN ()))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON UPPER(DISTINCT t0.c57) FULL OUTER JOIN v0 ON (((((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (v0.c0 IN (x'0681', v0.c1)), NULL))==(((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t0.c57)) AND ((0.989401283494434, v0.c2, t0.c57))), vt0.c0 COLLATE BINARY, v0.c2))) WHERE (t0.c0) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ()), ((vt0.c1)%(v0.c1))), (((~ (0.4773559226752109))) NOT BETWEEN (vt0.c1) AND ((t0.c0 IN ())));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT * FROM t0 WHERE (((CAST(t0.c40 AS REAL))AND(COALESCE(DISTINCT t0.c0, t0.c0)))) ORDER BY ((((((t0.c0)AND(t0.c57)))OR(0.4911864728772407))) BETWEEN ((+ (t0.c40))) AND (t0.c40))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c40 AS REAL))AND(COALESCE(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c57)))OR(0.4911864728772407))) BETWEEN ((+ (t0.c40))) AND (t0.c40))  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(t0.c40 AS REAL))AND(COALESCE(DISTINCT t0.c0, t0.c0)))) ORDER BY ((((((t0.c0)AND(t0.c57)))OR(0.4911864728772407))) BETWEEN ((+ (t0.c40))) AND (t0.c40))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c40 AS REAL))AND(COALESCE(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c57)))OR(0.4911864728772407))) BETWEEN ((+ (t0.c40))) AND (t0.c40))  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(t0.c40 AS REAL))AND(COALESCE(DISTINCT t0.c0, t0.c0)))) ORDER BY ((((((t0.c0)AND(t0.c57)))OR(0.4911864728772407))) BETWEEN ((+ (t0.c40))) AND (t0.c40))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((ABS(NULL))AND(((v0.c2) BETWEEN (t0.c40) AND (t0.c40))))) ORDER BY t0.c0, ((CASE WHEN v0.c0 THEN v0.c1 WHEN t0.c57 THEN v0.c0 WHEN t0.c0 THEN v0.c0 END) BETWEEN (t0.c57) AND (((t0.c40)>(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(NULL))AND(((v0.c2) BETWEEN (t0.c40) AND (t0.c40))))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0, ((CASE WHEN v0.c0 THEN v0.c1 WHEN t0.c57 THEN v0.c0 WHEN t0.c0 THEN v0.c0 END) BETWEEN (t0.c57) AND (((t0.c40)>(t0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((ABS(NULL))AND(((v0.c2) BETWEEN (t0.c40) AND (t0.c40))))) ORDER BY t0.c0, ((CASE WHEN v0.c0 THEN v0.c1 WHEN t0.c57 THEN v0.c0 WHEN t0.c0 THEN v0.c0 END) BETWEEN (t0.c57) AND (((t0.c40)>(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(NULL))AND(((v0.c2) BETWEEN (t0.c40) AND (t0.c40))))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0, ((CASE WHEN v0.c0 THEN v0.c1 WHEN t0.c57 THEN v0.c0 WHEN t0.c0 THEN v0.c0 END) BETWEEN (t0.c57) AND (((t0.c40)>(t0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((ABS(NULL))AND(((v0.c2) BETWEEN (t0.c40) AND (t0.c40))))) ORDER BY t0.c0, ((CASE WHEN v0.c0 THEN v0.c1 WHEN t0.c57 THEN v0.c0 WHEN t0.c0 THEN v0.c0 END) BETWEEN (t0.c57) AND (((t0.c40)>(t0.c0))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((((v0.c0)OR((~ (v0.c0)))))OR(TRIM(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR((~ (v0.c0)))))OR(TRIM(v0.c2)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((v0.c0)OR((~ (v0.c0)))))OR(TRIM(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR((~ (v0.c0)))))OR(TRIM(v0.c2)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((v0.c0)OR((~ (v0.c0)))))OR(TRIM(v0.c2))));
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM v0, t0, vt1, vt0 WHERE (((CASE v0.c0  WHEN '' THEN v0.c2 END)AND('')));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN '' THEN v0.c2 END)AND(''))) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt1, vt0 WHERE (((CASE v0.c0  WHEN '' THEN v0.c2 END)AND('')));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN '' THEN v0.c2 END)AND(''))) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt1, vt0 WHERE (((CASE v0.c0  WHEN '' THEN v0.c2 END)AND('')));
SELECT * FROM v0, vt1, vt0, t0 WHERE (CASE (('115763237')GLOB(v0.c2))  WHEN ((vt0.c0)*(v0.c0)) THEN CAST(vt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('115763237')GLOB(v0.c2))  WHEN ((vt0.c0)*(v0.c0)) THEN CAST(vt0.c1 AS TEXT) END) IS TRUE)  as count FROM v0, vt1, vt0, t0);
SELECT * FROM v0, vt1, vt0, t0 WHERE (CASE (('115763237')GLOB(v0.c2))  WHEN ((vt0.c0)*(v0.c0)) THEN CAST(vt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('115763237')GLOB(v0.c2))  WHEN ((vt0.c0)*(v0.c0)) THEN CAST(vt0.c1 AS TEXT) END) IS TRUE)  as count FROM v0, vt1, vt0, t0);
SELECT * FROM v0, vt1, vt0, t0 WHERE (CASE (('115763237')GLOB(v0.c2))  WHEN ((vt0.c0)*(v0.c0)) THEN CAST(vt0.c1 AS TEXT) END);
SELECT * FROM v0, t0, vt0, vt1 WHERE (CAST(((vt0.c1)IS NOT(t0.c40)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)IS NOT(t0.c40)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0, vt1);
SELECT * FROM v0, t0, vt0, vt1 WHERE (CAST(((vt0.c1)IS NOT(t0.c40)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)IS NOT(t0.c40)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0, vt1);
SELECT * FROM v0, t0, vt0, vt1 WHERE (CAST(((vt0.c1)IS NOT(t0.c40)) AS INTEGER));
SELECT ALL * FROM t0 WHERE (((((((t0.c57)OR(t0.c0)))AND(t0.c40)))GLOB((((t0.c57)) BETWEEN ((t0.c57)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c57)OR(t0.c0)))AND(t0.c40)))GLOB((((t0.c57)) BETWEEN ((t0.c57)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c57)OR(t0.c0)))AND(t0.c40)))GLOB((((t0.c57)) BETWEEN ((t0.c57)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c57)OR(t0.c0)))AND(t0.c40)))GLOB((((t0.c57)) BETWEEN ((t0.c57)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c57)OR(t0.c0)))AND(t0.c40)))GLOB((((t0.c57)) BETWEEN ((t0.c57)) AND ((t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN 0.9388494224835864 THEN vt0.c2 ELSE t0.c40 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9388494224835864 THEN vt0.c2 ELSE t0.c40 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN 0.9388494224835864 THEN vt0.c2 ELSE t0.c40 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9388494224835864 THEN vt0.c2 ELSE t0.c40 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN 0.9388494224835864 THEN vt0.c2 ELSE t0.c40 END COLLATE BINARY);
SELECT * FROM t0, v0 WHERE ((+ (CAST(t0.c57 AS BLOB)))) ORDER BY CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c57 AS BLOB)))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST);
SELECT * FROM t0, v0 WHERE ((+ (CAST(t0.c57 AS BLOB)))) ORDER BY CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c57 AS BLOB)))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST);
SELECT * FROM t0, v0 WHERE ((+ (CAST(t0.c57 AS BLOB)))) ORDER BY CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((('ᨥ힬wXGbv锅', 0Xffffffffb2958e36, v0.c2)) NOT BETWEEN (((~ (vt1.c0)), CAST(v0.c0 AS TEXT), x'')) AND ((CASE vt1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END, (v0.c0 IN ()), ((v0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL ((((('ᨥ힬wXGbv锅', 0xffffffffb2958e36, v0.c2)) NOT BETWEEN (((~ (vt1.c0)), CAST(v0.c0 AS TEXT), x'')) AND ((CASE vt1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END, (v0.c0 IN ()), ((v0.c1) IS TRUE))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((('ᨥ힬wXGbv锅', 0Xffffffffb2958e36, v0.c2)) NOT BETWEEN (((~ (vt1.c0)), CAST(v0.c0 AS TEXT), x'')) AND ((CASE vt1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END, (v0.c0 IN ()), ((v0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL ((((('ᨥ힬wXGbv锅', 0xffffffffb2958e36, v0.c2)) NOT BETWEEN (((~ (vt1.c0)), CAST(v0.c0 AS TEXT), x'')) AND ((CASE vt1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END, (v0.c0 IN ()), ((v0.c1) IS TRUE))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((('ᨥ힬wXGbv锅', 0Xffffffffb2958e36, v0.c2)) NOT BETWEEN (((~ (vt1.c0)), CAST(v0.c0 AS TEXT), x'')) AND ((CASE vt1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END, (v0.c0 IN ()), ((v0.c1) IS TRUE)))));
SELECT ALL * FROM t0, vt1 WHERE (CASE WHEN ((((((((t0.c57)AND(t0.c0)))OR(t0.c40)))OR(t0.c57)))AND(t0.c40)) THEN ((t0.c57)AND(t0.c40)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t0.c57)AND(t0.c0)))OR(t0.c40)))OR(t0.c57)))AND(t0.c40)) THEN ((t0.c57)AND(t0.c40)) END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CASE WHEN ((((((((t0.c57)AND(t0.c0)))OR(t0.c40)))OR(t0.c57)))AND(t0.c40)) THEN ((t0.c57)AND(t0.c40)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t0.c57)AND(t0.c0)))OR(t0.c40)))OR(t0.c57)))AND(t0.c40)) THEN ((t0.c57)AND(t0.c40)) END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CASE WHEN ((((((((t0.c57)AND(t0.c0)))OR(t0.c40)))OR(t0.c57)))AND(t0.c40)) THEN ((t0.c57)AND(t0.c40)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, x'', vt0.c2)) NOT BETWEEN ((NULL, vt0.c2, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, x'', vt0.c2)) NOT BETWEEN ((NULL, vt0.c2, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, x'', vt0.c2)) NOT BETWEEN ((NULL, vt0.c2, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, x'', vt0.c2)) NOT BETWEEN ((NULL, vt0.c2, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, x'', vt0.c2)) NOT BETWEEN ((NULL, vt0.c2, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))) COLLATE NOCASE);
SELECT * FROM v0, vt1 WHERE (CAST(((((x'')AND(vt1.c0)))AND(v0.c0)) AS BLOB)) ORDER BY ((((((v0.c0))>=((v0.c2)))))>=((TYPEOF(DISTINCT 'g~_6')))) ASC  NULLS FIRST, (((v0.c0) BETWEEN (vt1.c0) AND (v0.c1)) IN ())  NULLS LAST, (CASE vt1.c0  WHEN v0.c2 THEN '_' END IN (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'')AND(vt1.c0)))AND(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((((v0.c0))>=((v0.c2)))))>=((TYPEOF(DISTINCT 'g~_6')))) ASC  NULLS FIRST, (((v0.c0) BETWEEN (vt1.c0) AND (v0.c1)) IN ())  NULLS LAST, (CASE vt1.c0  WHEN v0.c2 THEN '_' END IN (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (CAST(((((x'')AND(vt1.c0)))AND(v0.c0)) AS BLOB)) ORDER BY ((((((v0.c0))>=((v0.c2)))))>=((TYPEOF(DISTINCT 'g~_6')))) ASC  NULLS FIRST, (((v0.c0) BETWEEN (vt1.c0) AND (v0.c1)) IN ())  NULLS LAST, (CASE vt1.c0  WHEN v0.c2 THEN '_' END IN (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'')AND(vt1.c0)))AND(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((((v0.c0))>=((v0.c2)))))>=((TYPEOF(DISTINCT 'g~_6')))) ASC  NULLS FIRST, (((v0.c0) BETWEEN (vt1.c0) AND (v0.c1)) IN ())  NULLS LAST, (CASE vt1.c0  WHEN v0.c2 THEN '_' END IN (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (CAST(((((x'')AND(vt1.c0)))AND(v0.c0)) AS BLOB)) ORDER BY ((((((v0.c0))>=((v0.c2)))))>=((TYPEOF(DISTINCT 'g~_6')))) ASC  NULLS FIRST, (((v0.c0) BETWEEN (vt1.c0) AND (v0.c1)) IN ())  NULLS LAST, (CASE vt1.c0  WHEN v0.c2 THEN '_' END IN (CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 INDEXED BY i10 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INDEXED BY i10);
SELECT ALL * FROM vt0 INDEXED BY i10 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INDEXED BY i10);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c40)))=(UNLIKELY(DISTINCT t0.c57)))) ORDER BY (- ((t0.c57 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c40)))==(UNLIKELY(DISTINCT t0.c57)))) IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c57 IN (t0.c0)))));
SELECT ALL * FROM t0 WHERE ((((~ (t0.c40)))=(UNLIKELY(DISTINCT t0.c57)))) ORDER BY (- ((t0.c57 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c40)))==(UNLIKELY(DISTINCT t0.c57)))) IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c57 IN (t0.c0)))));
SELECT ALL * FROM t0 WHERE ((((~ (t0.c40)))=(UNLIKELY(DISTINCT t0.c57)))) ORDER BY (- ((t0.c57 IN (t0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('')OR(CAST(vt1.c0 AS INTEGER))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((('')OR(CAST(vt1.c0 AS INTEGER))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('')OR(CAST(vt1.c0 AS INTEGER))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((('')OR(CAST(vt1.c0 AS INTEGER))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('')OR(CAST(vt1.c0 AS INTEGER))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE (((((COALESCE(vt0.c2, vt0.c2))AND(((vt0.c1)/(vt0.c0)))))OR(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((COALESCE(vt0.c2, vt0.c2))AND(((vt0.c1)/(vt0.c0)))))OR(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((COALESCE(vt0.c2, vt0.c2))AND(((vt0.c1)/(vt0.c0)))))OR(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((COALESCE(vt0.c2, vt0.c2))AND(((vt0.c1)/(vt0.c0)))))OR(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((COALESCE(vt0.c2, vt0.c2))AND(((vt0.c1)/(vt0.c0)))))OR(((vt1.c0) NOT NULL))));
SELECT * FROM t0 WHERE (CAST(t0.c57 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c57 AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c57 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c57 AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c57 AS REAL));
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(v0.c0)) AS BLOB)) ORDER BY (((v0.c2, v0.c1, NULL)) NOT BETWEEN ((((0.5910609553429358) BETWEEN (v0.c2) AND (v0.c2)), CASE v0.c2  WHEN 0.8820108265823258 THEN v0.c0 ELSE v0.c2 END, CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c0)/(v0.c1)), ((v0.c2)||(v0.c2)), ((('')) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)OR(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2, v0.c1, NULL)) NOT BETWEEN ((((0.5910609553429358) BETWEEN (v0.c2) AND (v0.c2)), CASE v0.c2  WHEN 0.8820108265823258 THEN v0.c0 ELSE v0.c2 END, CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c0)/(v0.c1)), ((v0.c2)||(v0.c2)), ((('')) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(v0.c0)) AS BLOB)) ORDER BY (((v0.c2, v0.c1, NULL)) NOT BETWEEN ((((0.5910609553429358) BETWEEN (v0.c2) AND (v0.c2)), CASE v0.c2  WHEN 0.8820108265823258 THEN v0.c0 ELSE v0.c2 END, CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c0)/(v0.c1)), ((v0.c2)||(v0.c2)), ((('')) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)OR(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2, v0.c1, NULL)) NOT BETWEEN ((((0.5910609553429358) BETWEEN (v0.c2) AND (v0.c2)), CASE v0.c2  WHEN 0.8820108265823258 THEN v0.c0 ELSE v0.c2 END, CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c0)/(v0.c1)), ((v0.c2)||(v0.c2)), ((('')) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(v0.c0)) AS BLOB)) ORDER BY (((v0.c2, v0.c1, NULL)) NOT BETWEEN ((((0.5910609553429358) BETWEEN (v0.c2) AND (v0.c2)), CASE v0.c2  WHEN 0.8820108265823258 THEN v0.c0 ELSE v0.c2 END, CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c0)/(v0.c1)), ((v0.c2)||(v0.c2)), ((('')) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (CAST(v0.c2 AS NUMERIC)) ORDER BY 0.8599108533663656  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST, (((((((v0.c2)) BETWEEN ((t0.c0)) AND (('AWEwP탉'))))OR(((t0.c40)/(t0.c0)))))AND((+ (v0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY 0.8599108533663656  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST, (((((((v0.c2)) BETWEEN ((t0.c0)) AND (('AWEwP탉'))))OR(((t0.c40)/(t0.c0)))))AND((+ (v0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (CAST(v0.c2 AS NUMERIC)) ORDER BY 0.8599108533663656  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST, (((((((v0.c2)) BETWEEN ((t0.c0)) AND (('AWEwP탉'))))OR(((t0.c40)/(t0.c0)))))AND((+ (v0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY 0.8599108533663656  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST, (((((((v0.c2)) BETWEEN ((t0.c0)) AND (('AWEwP탉'))))OR(((t0.c40)/(t0.c0)))))AND((+ (v0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (CAST(v0.c2 AS NUMERIC)) ORDER BY 0.8599108533663656  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST, (((((((v0.c2)) BETWEEN ((t0.c0)) AND (('AWEwP탉'))))OR(((t0.c40)/(t0.c0)))))AND((+ (v0.c2))));
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (x'' COLLATE RTRIM) ORDER BY HEX(DISTINCT (v0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY HEX(DISTINCT (v0.c1 IN ())));
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (x'' COLLATE RTRIM) ORDER BY HEX(DISTINCT (v0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY HEX(DISTINCT (v0.c1 IN ())));
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (x'' COLLATE RTRIM) ORDER BY HEX(DISTINCT (v0.c1 IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE (((((('''썺')) BETWEEN ((v0.c1)) AND ((v0.c0))))GLOB(v0.c0))) ORDER BY CASE (- (NULL))  WHEN vt1.c0 THEN t0.c57 END ASC, CAST(t0.c40 AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('''썺')) BETWEEN ((v0.c1)) AND ((v0.c0))))GLOB(v0.c0))) IS TRUE)  as count FROM vt0, v0, t0, vt1 ORDER BY CASE (- (NULL))  WHEN vt1.c0 THEN t0.c57 END ASC, CAST(t0.c40 AS INTEGER) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE (((((('''썺')) BETWEEN ((v0.c1)) AND ((v0.c0))))GLOB(v0.c0))) ORDER BY CASE (- (NULL))  WHEN vt1.c0 THEN t0.c57 END ASC, CAST(t0.c40 AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('''썺')) BETWEEN ((v0.c1)) AND ((v0.c0))))GLOB(v0.c0))) IS TRUE)  as count FROM vt0, v0, t0, vt1 ORDER BY CASE (- (NULL))  WHEN vt1.c0 THEN t0.c57 END ASC, CAST(t0.c40 AS INTEGER) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE (((((('''썺')) BETWEEN ((v0.c1)) AND ((v0.c0))))GLOB(v0.c0))) ORDER BY CASE (- (NULL))  WHEN vt1.c0 THEN t0.c57 END ASC, CAST(t0.c40 AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (QUOTE(((t0.c57)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((t0.c57)&(vt1.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (QUOTE(((t0.c57)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((t0.c57)&(vt1.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (QUOTE(((t0.c57)&(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt1, vt0, t0 WHERE (((NULL)||(CASE WHEN '' THEN t0.c57 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((NULL)||(CASE WHEN '' THEN t0.c57 ELSE v0.c1 END))) IS TRUE)  as count FROM v0, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0, t0 WHERE (((NULL)||(CASE WHEN '' THEN t0.c57 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((NULL)||(CASE WHEN '' THEN t0.c57 ELSE v0.c1 END))) IS TRUE)  as count FROM v0, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0, t0 WHERE (((NULL)||(CASE WHEN '' THEN t0.c57 ELSE v0.c1 END)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)GLOB(vt0.c2))) NOT NULL) DESC  NULLS LAST, ((vt0.c2)/(vt0.c0)) DESC, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)GLOB(vt0.c2))) NOT NULL) DESC  NULLS LAST, ((vt0.c2)/(vt0.c0)) DESC, vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)GLOB(vt0.c2))) NOT NULL) DESC  NULLS LAST, ((vt0.c2)/(vt0.c0)) DESC, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)GLOB(vt0.c2))) NOT NULL) DESC  NULLS LAST, ((vt0.c2)/(vt0.c0)) DESC, vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)GLOB(vt0.c2))) NOT NULL) DESC  NULLS LAST, ((vt0.c2)/(vt0.c0)) DESC, vt0.c1  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON COALESCE(CASE WHEN t0.c40 THEN t0.c57 END, UNICODE(vt1.c0)) WHERE (((((t0.c0) NOTNULL))IS NOT(NULLIF(t0.c0, vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))IS NOT(NULLIF(t0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON COALESCE(CASE WHEN t0.c40 THEN t0.c57 END, UNICODE(vt1.c0)) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY END ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON COALESCE(CASE WHEN t0.c40 THEN t0.c57 END, UNICODE(vt1.c0)) WHERE (((((t0.c0) NOTNULL))IS NOT(NULLIF(t0.c0, vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))IS NOT(NULLIF(t0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON COALESCE(CASE WHEN t0.c40 THEN t0.c57 END, UNICODE(vt1.c0)) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY END ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON COALESCE(CASE WHEN t0.c40 THEN t0.c57 END, UNICODE(vt1.c0)) WHERE (((((t0.c0) NOTNULL))IS NOT(NULLIF(t0.c0, vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY END ASC;
SELECT * FROM vt1, vt0, t0, v0 WHERE (((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0, v0);
SELECT * FROM vt1, vt0, t0, v0 WHERE (((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0, v0);
SELECT * FROM vt1, vt0, t0, v0 WHERE (((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((t0.c40) IS TRUE))<=((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c2))))) FULL OUTER JOIN t0 ON ((((vt1.c0)/(v0.c2))) NOTNULL) RIGHT OUTER JOIN vt1 ON (+ (287142990)) COLLATE BINARY WHERE (((t0.c40) BETWEEN ((vt0.c1 IN ())) AND ((((v0.c2, 0.36406053999493015, t0.c40)) NOT BETWEEN ((t0.c57, v0.c1, v0.c1)) AND (('-1620197577', t0.c57, vt0.c0)))))) ORDER BY ((((x'')OR(((vt1.c0) BETWEEN (t0.c40) AND (vt0.c1)))))OR(UPPER(vt0.c1))), t0.c57  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c40) BETWEEN ((vt0.c1 IN ())) AND ((((v0.c2, 0.36406053999493015, t0.c40)) NOT BETWEEN ((t0.c57, v0.c1, v0.c1)) AND (('-1620197577', t0.c57, vt0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((t0.c40) IS TRUE))<=((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c2))))) FULL OUTER JOIN t0 ON ((((vt1.c0)/(v0.c2))) NOTNULL) RIGHT OUTER JOIN vt1 ON (+ (287142990)) COLLATE BINARY ORDER BY ((((x'')OR(((vt1.c0) BETWEEN (t0.c40) AND (vt0.c1)))))OR(UPPER(vt0.c1))), t0.c57  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((t0.c40) IS TRUE))<=((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c2))))) FULL OUTER JOIN t0 ON ((((vt1.c0)/(v0.c2))) NOTNULL) RIGHT OUTER JOIN vt1 ON (+ (287142990)) COLLATE BINARY WHERE (((t0.c40) BETWEEN ((vt0.c1 IN ())) AND ((((v0.c2, 0.36406053999493015, t0.c40)) NOT BETWEEN ((t0.c57, v0.c1, v0.c1)) AND (('-1620197577', t0.c57, vt0.c0)))))) ORDER BY ((((x'')OR(((vt1.c0) BETWEEN (t0.c40) AND (vt0.c1)))))OR(UPPER(vt0.c1))), t0.c57  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c40) BETWEEN ((vt0.c1 IN ())) AND ((((v0.c2, 0.36406053999493015, t0.c40)) NOT BETWEEN ((t0.c57, v0.c1, v0.c1)) AND (('-1620197577', t0.c57, vt0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((t0.c40) IS TRUE))<=((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c2))))) FULL OUTER JOIN t0 ON ((((vt1.c0)/(v0.c2))) NOTNULL) RIGHT OUTER JOIN vt1 ON (+ (287142990)) COLLATE BINARY ORDER BY ((((x'')OR(((vt1.c0) BETWEEN (t0.c40) AND (vt0.c1)))))OR(UPPER(vt0.c1))), t0.c57  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((CASE NULL  WHEN NULL THEN v0.c2 WHEN x'' THEN t0.c57 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c2 THEN t0.c40 WHEN t0.c0 THEN vt1.c0 ELSE t0.c40 END) NOT BETWEEN ('c){6') AND (((((v0.c1)OR(t0.c57)))AND(v0.c1)))) CROSS JOIN vt1 ON (((CASE vt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN t0.c40 THEN vt1.c0 WHEN vt0.c1 THEN t0.c57 ELSE t0.c40 END))>((json_type(v0.c0)))) CROSS JOIN t0 ON (((vt0.c1, vt0.c2, t0.c0)) NOT BETWEEN ((CAST('(]+^{FX' AS REAL), ((v0.c1)<(v0.c0)), json(v0.c0))) AND ((t0.c40 COLLATE NOCASE, (t0.c0 IN ()), ((v0.c2) NOT NULL)))) WHERE (((((t0.c57) IS FALSE))>>(((vt0.c0)OR(vt0.c1))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((((t0.c57)AND(vt0.c1)))AND(v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57) IS FALSE))>>(((vt0.c0)OR(vt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CASE NULL  WHEN NULL THEN v0.c2 WHEN x'' THEN t0.c57 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c2 THEN t0.c40 WHEN t0.c0 THEN vt1.c0 ELSE t0.c40 END) NOT BETWEEN ('c){6') AND (((((v0.c1)OR(t0.c57)))AND(v0.c1)))) CROSS JOIN vt1 ON (((CASE vt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN t0.c40 THEN vt1.c0 WHEN vt0.c1 THEN t0.c57 ELSE t0.c40 END))>((json_type(v0.c0)))) CROSS JOIN t0 ON (((vt0.c1, vt0.c2, t0.c0)) NOT BETWEEN ((CAST('(]+^{FX' AS REAL), ((v0.c1)<(v0.c0)), json(v0.c0))) AND ((t0.c40 COLLATE NOCASE, (t0.c0 IN ()), ((v0.c2) NOT NULL)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((((t0.c57)AND(vt0.c1)))AND(v0.c1))))) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((CASE NULL  WHEN NULL THEN v0.c2 WHEN x'' THEN t0.c57 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c2 THEN t0.c40 WHEN t0.c0 THEN vt1.c0 ELSE t0.c40 END) NOT BETWEEN ('c){6') AND (((((v0.c1)OR(t0.c57)))AND(v0.c1)))) CROSS JOIN vt1 ON (((CASE vt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN t0.c40 THEN vt1.c0 WHEN vt0.c1 THEN t0.c57 ELSE t0.c40 END))>((json_type(v0.c0)))) CROSS JOIN t0 ON (((vt0.c1, vt0.c2, t0.c0)) NOT BETWEEN ((CAST('(]+^{FX' AS REAL), ((v0.c1)<(v0.c0)), json(v0.c0))) AND ((t0.c40 COLLATE NOCASE, (t0.c0 IN ()), ((v0.c2) NOT NULL)))) WHERE (((((t0.c57) IS FALSE))>>(((vt0.c0)OR(vt0.c1))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((((t0.c57)AND(vt0.c1)))AND(v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57) IS FALSE))>>(((vt0.c0)OR(vt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CASE NULL  WHEN NULL THEN v0.c2 WHEN x'' THEN t0.c57 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c2 THEN t0.c40 WHEN t0.c0 THEN vt1.c0 ELSE t0.c40 END) NOT BETWEEN ('c){6') AND (((((v0.c1)OR(t0.c57)))AND(v0.c1)))) CROSS JOIN vt1 ON (((CASE vt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN t0.c40 THEN vt1.c0 WHEN vt0.c1 THEN t0.c57 ELSE t0.c40 END))>((json_type(v0.c0)))) CROSS JOIN t0 ON (((vt0.c1, vt0.c2, t0.c0)) NOT BETWEEN ((CAST('(]+^{FX' AS REAL), ((v0.c1)<(v0.c0)), json(v0.c0))) AND ((t0.c40 COLLATE NOCASE, (t0.c0 IN ()), ((v0.c2) NOT NULL)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c2 AS REAL))) AND ((((((t0.c57)AND(vt0.c1)))AND(v0.c1))))) DESC);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((TRIM(v0.c0, t0.c57))OR('-1443803071')) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((TRIM(v0.c0, t0.c57))OR('-1443803071')));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((TRIM(v0.c0, t0.c57))OR('-1443803071')) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((TRIM(v0.c0, t0.c57))OR('-1443803071')));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((TRIM(v0.c0, t0.c57))OR('-1443803071')) WHERE (x'');
SELECT * FROM t0, v0 WHERE (CAST(((((t0.c57)AND(v0.c2)))OR(v0.c2)) AS INTEGER)) ORDER BY JULIANDAY(((t0.c57)=(v0.c2)), (((('794671057')OR('-1438755618')))AND(v0.c2)), CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c57)AND(v0.c2)))OR(v0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY JULIANDAY(((t0.c57)==(v0.c2)), (((('794671057')OR('-1438755618')))AND(v0.c2)), CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END));
SELECT * FROM t0, v0 WHERE (CAST(((((t0.c57)AND(v0.c2)))OR(v0.c2)) AS INTEGER)) ORDER BY JULIANDAY(((t0.c57)=(v0.c2)), (((('794671057')OR('-1438755618')))AND(v0.c2)), CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c57)AND(v0.c2)))OR(v0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY JULIANDAY(((t0.c57)==(v0.c2)), (((('794671057')OR('-1438755618')))AND(v0.c2)), CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END));
SELECT * FROM t0, v0 WHERE (CAST(((((t0.c57)AND(v0.c2)))OR(v0.c2)) AS INTEGER)) ORDER BY JULIANDAY(((t0.c57)=(v0.c2)), (((('794671057')OR('-1438755618')))AND(v0.c2)), CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END);
SELECT ALL * FROM v0, vt1, t0 INNER JOIN vt0 ON (- (((v0.c1)&(t0.c0)))) WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM v0, vt1, t0 INNER JOIN vt0 ON (- (((v0.c1)&(t0.c0)))));
SELECT ALL * FROM v0, vt1, t0 INNER JOIN vt0 ON (- (((v0.c1)&(t0.c0)))) WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM v0, vt1, t0 INNER JOIN vt0 ON (- (((v0.c1)&(t0.c0)))));
SELECT ALL * FROM v0, vt1, t0 INNER JOIN vt0 ON (- (((v0.c1)&(t0.c0)))) WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT * FROM v0 WHERE (((((((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)OR(v0.c0)))))AND(CAST(v0.c1 AS TEXT))))AND(((((((((v0.c2)OR(x'2c43')))AND(v0.c0)))AND(0.07521133697242977)))OR(v0.c1)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)OR(v0.c0)))))AND(CAST(v0.c1 AS TEXT))))AND(((((((((v0.c2)OR(x'2c43')))AND(v0.c0)))AND(0.07521133697242977)))OR(v0.c1)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)OR(v0.c0)))))AND(CAST(v0.c1 AS TEXT))))AND(((((((((v0.c2)OR(x'2c43')))AND(v0.c0)))AND(0.07521133697242977)))OR(v0.c1)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)OR(v0.c0)))))AND(CAST(v0.c1 AS TEXT))))AND(((((((((v0.c2)OR(x'2c43')))AND(v0.c0)))AND(0.07521133697242977)))OR(v0.c1)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)OR(v0.c0)))))AND(CAST(v0.c1 AS TEXT))))AND(((((((((v0.c2)OR(x'2c43')))AND(v0.c0)))AND(0.07521133697242977)))OR(v0.c1)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE (((0.78868334118209)-(v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((0.78868334118209)-(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE (((0.78868334118209)-(v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((0.78868334118209)-(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, t0, vt1 WHERE (((0.78868334118209)-(v0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c1 DESC, NULLIF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC, NULLIF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c1 DESC, NULLIF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC, NULLIF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c1 DESC, NULLIF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) DESC;
SELECT * FROM t0, v0, vt1, vt0 WHERE ('') ORDER BY NULL, ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN '~D' WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END) NOTNULL), CASE WHEN vt1.c0 THEN v0.c2 COLLATE BINARY WHEN ((((v0.c0)OR('1010760137')))OR('*oF\N!')) THEN (vt0.c0 IN (vt0.c2)) WHEN NULL THEN (vt0.c0 IN (t0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY NULL, ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN '~D' WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END) NOTNULL), CASE WHEN vt1.c0 THEN v0.c2 COLLATE BINARY WHEN ((((v0.c0)OR('1010760137')))OR('*oF\N!')) THEN (vt0.c0 IN (vt0.c2)) WHEN NULL THEN (vt0.c0 IN (t0.c0)) END  NULLS LAST);
SELECT * FROM t0, v0, vt1, vt0 WHERE ('') ORDER BY NULL, ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN '~D' WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END) NOTNULL), CASE WHEN vt1.c0 THEN v0.c2 COLLATE BINARY WHEN ((((v0.c0)OR('1010760137')))OR('*oF\N!')) THEN (vt0.c0 IN (vt0.c2)) WHEN NULL THEN (vt0.c0 IN (t0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY NULL, ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN '~D' WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END) NOTNULL), CASE WHEN vt1.c0 THEN v0.c2 COLLATE BINARY WHEN ((((v0.c0)OR('1010760137')))OR('*oF\N!')) THEN (vt0.c0 IN (vt0.c2)) WHEN NULL THEN (vt0.c0 IN (t0.c0)) END  NULLS LAST);
SELECT * FROM t0, v0, vt1, vt0 WHERE ('') ORDER BY NULL, ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN '~D' WHEN v0.c1 THEN t0.c0 ELSE v0.c2 END) NOTNULL), CASE WHEN vt1.c0 THEN v0.c2 COLLATE BINARY WHEN ((((v0.c0)OR('1010760137')))OR('*oF\N!')) THEN (vt0.c0 IN (vt0.c2)) WHEN NULL THEN (vt0.c0 IN (t0.c0)) END  NULLS LAST;
SELECT * FROM vt0, t0, vt1, v0 WHERE (('-706391234' IN ())) ORDER BY (((((('')AND(v0.c2)))AND(v0.c0)))<>(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((('-706391234' IN ())) IS TRUE)  as count FROM vt0, t0, vt1, v0 ORDER BY (((((('')AND(v0.c2)))AND(v0.c0)))!=(vt0.c0)));
SELECT * FROM vt0, t0, vt1, v0 WHERE (('-706391234' IN ())) ORDER BY (((((('')AND(v0.c2)))AND(v0.c0)))<>(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((('-706391234' IN ())) IS TRUE)  as count FROM vt0, t0, vt1, v0 ORDER BY (((((('')AND(v0.c2)))AND(v0.c0)))!=(vt0.c0)));
SELECT * FROM vt0, t0, vt1, v0 WHERE (('-706391234' IN ())) ORDER BY (((((('')AND(v0.c2)))AND(v0.c0)))<>(vt0.c0));
SELECT ALL * FROM vt1, t0 WHERE (TRIM(vt1.c0)) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t0.c57) AND (t0.c0)) WHEN ((t0.c57) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((((t0.c57)OR(t0.c57)))OR(vt1.c0)) ELSE (~ (t0.c40)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t0.c57) AND (t0.c0)) WHEN ((t0.c57) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((((t0.c57)OR(t0.c57)))OR(vt1.c0)) ELSE (~ (t0.c40)) END  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (TRIM(vt1.c0)) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t0.c57) AND (t0.c0)) WHEN ((t0.c57) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((((t0.c57)OR(t0.c57)))OR(vt1.c0)) ELSE (~ (t0.c40)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t0.c57) AND (t0.c0)) WHEN ((t0.c57) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((((t0.c57)OR(t0.c57)))OR(vt1.c0)) ELSE (~ (t0.c40)) END  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (TRIM(vt1.c0)) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t0.c57) AND (t0.c0)) WHEN ((t0.c57) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((((t0.c57)OR(t0.c57)))OR(vt1.c0)) ELSE (~ (t0.c40)) END  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)-(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY ((((v0.c2)/(v0.c1)))LIKE(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)-(CASE WHEN v0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)/(v0.c1)))LIKE(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)-(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY ((((v0.c2)/(v0.c1)))LIKE(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)-(CASE WHEN v0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)/(v0.c1)))LIKE(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END)-(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY ((((v0.c2)/(v0.c1)))LIKE(NULL))  NULLS FIRST;
SELECT * FROM v0 WHERE ((+ (json(v0.c0)))) ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c2)))))OR('')))OR((- (v0.c1)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (json(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c2)))))OR('')))OR((- (v0.c1)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT * FROM v0 WHERE ((+ (json(v0.c0)))) ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c2)))))OR('')))OR((- (v0.c1)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (json(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c2)))))OR('')))OR((- (v0.c1)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT * FROM v0 WHERE ((+ (json(v0.c0)))) ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c2)))))OR('')))OR((- (v0.c1)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), CAST(vt1.c0 AS REAL))) AND ((((vt1.c0)<('1244531515')), ((vt1.c0)<(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY x'823871b9' COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), CAST(vt1.c0 AS REAL))) AND ((((vt1.c0)<('1244531515')), ((vt1.c0)<(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY x'823871b9' COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), CAST(vt1.c0 AS REAL))) AND ((((vt1.c0)<('1244531515')), ((vt1.c0)<(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY x'823871b9' COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), CAST(vt1.c0 AS REAL))) AND ((((vt1.c0)<('1244531515')), ((vt1.c0)<(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY x'823871b9' COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE), CAST(vt1.c0 AS REAL))) AND ((((vt1.c0)<('1244531515')), ((vt1.c0)<(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY x'823871b9' COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0, t0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, v0, t0, vt0);
SELECT COUNT(*) FROM vt1, v0, t0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, v0, t0, vt0);
SELECT COUNT(*) FROM vt1, v0, t0, vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((v0.c1 IN (((vt0.c0) IS TRUE)))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt0.c2 END AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(v0.c2)) THEN vt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt0.c2 END AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(v0.c2)) THEN vt0.c2 END DESC);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((v0.c1 IN (((vt0.c0) IS TRUE)))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt0.c2 END AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(v0.c2)) THEN vt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt0.c2 END AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(v0.c2)) THEN vt0.c2 END DESC);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((v0.c1 IN (((vt0.c0) IS TRUE)))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt0.c2 END AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(v0.c2)) THEN vt0.c2 END DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (ABS(((v0.c1) NOT NULL))) ORDER BY CASE WHEN v0.c1 THEN v0.c2 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((v0.c1) NOT NULL))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c1 THEN v0.c2 END COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (ABS(((v0.c1) NOT NULL))) ORDER BY CASE WHEN v0.c1 THEN v0.c2 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((v0.c1) NOT NULL))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c1 THEN v0.c2 END COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (ABS(((v0.c1) NOT NULL))) ORDER BY CASE WHEN v0.c1 THEN v0.c2 END COLLATE BINARY DESC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ()));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (- ((v0.c2 IN (v0.c1, v0.c2)))) WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY (+ ((~ (v0.c2))))  NULLS LAST, IFNULL(((1805879474) NOT BETWEEN (x'') AND (vt1.c0)), CASE v0.c2  WHEN v0.c0 THEN vt1.c0 ELSE v0.c1 END) DESC  NULLS LAST, '-1491703171' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (- ((v0.c2 IN (v0.c1, v0.c2)))) ORDER BY (+ ((~ (v0.c2))))  NULLS LAST, IFNULL(((1805879474) NOT BETWEEN (x'') AND (vt1.c0)), CASE v0.c2  WHEN v0.c0 THEN vt1.c0 ELSE v0.c1 END) DESC  NULLS LAST, '-1491703171' DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (- ((v0.c2 IN (v0.c1, v0.c2)))) WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY (+ ((~ (v0.c2))))  NULLS LAST, IFNULL(((1805879474) NOT BETWEEN (x'') AND (vt1.c0)), CASE v0.c2  WHEN v0.c0 THEN vt1.c0 ELSE v0.c1 END) DESC  NULLS LAST, '-1491703171' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (- ((v0.c2 IN (v0.c1, v0.c2)))) ORDER BY (+ ((~ (v0.c2))))  NULLS LAST, IFNULL(((1805879474) NOT BETWEEN (x'') AND (vt1.c0)), CASE v0.c2  WHEN v0.c0 THEN vt1.c0 ELSE v0.c1 END) DESC  NULLS LAST, '-1491703171' DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (- ((v0.c2 IN (v0.c1, v0.c2)))) WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY (+ ((~ (v0.c2))))  NULLS LAST, IFNULL(((1805879474) NOT BETWEEN (x'') AND (vt1.c0)), CASE v0.c2  WHEN v0.c0 THEN vt1.c0 ELSE v0.c1 END) DESC  NULLS LAST, '-1491703171' DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c2) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((v0.c1 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c2) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((v0.c1 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c2) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((v0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, v0, vt1, t0 WHERE (load_extension(((((vt1.c0)OR(t0.c0)))AND(t0.c40)))) ORDER BY vt0.c0 DESC, ((((v0.c1) BETWEEN (vt0.c2) AND (v0.c2))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND (((((vt0.c2)AND(vt0.c2)))OR(1.304249874E9)))) DESC, (t0.c40 COLLATE BINARY IN (((v0.c2)GLOB(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((((vt1.c0)OR(t0.c0)))AND(t0.c40)))) IS TRUE)  as count FROM vt0, v0, vt1, t0 ORDER BY vt0.c0 DESC, ((((v0.c1) BETWEEN (vt0.c2) AND (v0.c2))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND (((((vt0.c2)AND(vt0.c2)))OR(1.304249874E9)))) DESC, (t0.c40 COLLATE BINARY IN (((v0.c2)GLOB(t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, vt1, t0 WHERE (load_extension(((((vt1.c0)OR(t0.c0)))AND(t0.c40)))) ORDER BY vt0.c0 DESC, ((((v0.c1) BETWEEN (vt0.c2) AND (v0.c2))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND (((((vt0.c2)AND(vt0.c2)))OR(1.304249874E9)))) DESC, (t0.c40 COLLATE BINARY IN (((v0.c2)GLOB(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((((vt1.c0)OR(t0.c0)))AND(t0.c40)))) IS TRUE)  as count FROM vt0, v0, vt1, t0 ORDER BY vt0.c0 DESC, ((((v0.c1) BETWEEN (vt0.c2) AND (v0.c2))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND (((((vt0.c2)AND(vt0.c2)))OR(1.304249874E9)))) DESC, (t0.c40 COLLATE BINARY IN (((v0.c2)GLOB(t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((NULL)OR(vt0.c1)))OR(vt0.c0))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)%((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((NULL, vt1.c0, vt0.c2)) AND ((vt0.c2, vt1.c0, vt0.c2))))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) NOT NULL) DESC, ((COALESCE(DISTINCT vt0.c1, vt1.c0)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(vt0.c1)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)%((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((NULL, vt1.c0, vt0.c2)) AND ((vt0.c2, vt1.c0, vt0.c2))))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) NOT NULL) DESC, ((COALESCE(DISTINCT vt0.c1, vt1.c0)) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((NULL)OR(vt0.c1)))OR(vt0.c0))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)%((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((NULL, vt1.c0, vt0.c2)) AND ((vt0.c2, vt1.c0, vt0.c2))))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) NOT NULL) DESC, ((COALESCE(DISTINCT vt0.c1, vt1.c0)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(vt0.c1)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)%((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((NULL, vt1.c0, vt0.c2)) AND ((vt0.c2, vt1.c0, vt0.c2))))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) NOT NULL) DESC, ((COALESCE(DISTINCT vt0.c1, vt1.c0)) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((NULL)OR(vt0.c1)))OR(vt0.c0))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)%((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((NULL, vt1.c0, vt0.c2)) AND ((vt0.c2, vt1.c0, vt0.c2))))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) NOT NULL) DESC, ((COALESCE(DISTINCT vt0.c1, vt1.c0)) NOT NULL) ASC;
SELECT * FROM vt1, vt0, v0 WHERE (((vt1.c0)%(((vt0.c1)>(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)%(((vt0.c1)>(v0.c2))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((vt1.c0)%(((vt0.c1)>(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)%(((vt0.c1)>(v0.c2))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((vt1.c0)%(((vt0.c1)>(v0.c2)))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((((0.07718362992296346)OR(v0.c1)))AND(v0.c2))))>=((TRIM(v0.c0))))) ORDER BY CAST(x'' AS NUMERIC), (((~ (v0.c0))) BETWEEN (((v0.c1) NOTNULL)) AND (v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((((((0.07718362992296346)OR(v0.c1)))AND(v0.c2))))>=((TRIM(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST(x'' AS NUMERIC), (((~ (v0.c0))) BETWEEN (((v0.c1) NOTNULL)) AND (v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((((0.07718362992296346)OR(v0.c1)))AND(v0.c2))))>=((TRIM(v0.c0))))) ORDER BY CAST(x'' AS NUMERIC), (((~ (v0.c0))) BETWEEN (((v0.c1) NOTNULL)) AND (v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((((((0.07718362992296346)OR(v0.c1)))AND(v0.c2))))>=((TRIM(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST(x'' AS NUMERIC), (((~ (v0.c0))) BETWEEN (((v0.c1) NOTNULL)) AND (v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((((0.07718362992296346)OR(v0.c1)))AND(v0.c2))))>=((TRIM(v0.c0))))) ORDER BY CAST(x'' AS NUMERIC), (((~ (v0.c0))) BETWEEN (((v0.c1) NOTNULL)) AND (v0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (0.9279252379063763))) ORDER BY vt1.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((+ (0.9279252379063763))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (0.9279252379063763))) ORDER BY vt1.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((+ (0.9279252379063763))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (0.9279252379063763))) ORDER BY vt1.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((0X5c6a5585))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((0x5c6a5585)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((0X5c6a5585))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((0x5c6a5585)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((0X5c6a5585))));
SELECT * FROM v0, vt1 WHERE (json_patch(v0.c0, ((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_patch(v0.c0, ((vt1.c0)<(vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (json_patch(v0.c0, ((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_patch(v0.c0, ((vt1.c0)<(vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (json_patch(v0.c0, ((vt1.c0)<(vt1.c0))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (NULL IN ()) COLLATE BINARY WHERE ((~ (vt0.c0))) ORDER BY LIKE(((vt1.c0) NOTNULL), CASE WHEN vt0.c1 THEN -389449210 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END, 'q') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (NULL IN ()) COLLATE BINARY ORDER BY LIKE(((vt1.c0) NOTNULL), CASE WHEN vt0.c1 THEN -389449210 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END, 'q') DESC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (NULL IN ()) COLLATE BINARY WHERE ((~ (vt0.c0))) ORDER BY LIKE(((vt1.c0) NOTNULL), CASE WHEN vt0.c1 THEN -389449210 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END, 'q') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (NULL IN ()) COLLATE BINARY ORDER BY LIKE(((vt1.c0) NOTNULL), CASE WHEN vt0.c1 THEN -389449210 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END, 'q') DESC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (NULL IN ()) COLLATE BINARY WHERE ((~ (vt0.c0))) ORDER BY LIKE(((vt1.c0) NOTNULL), CASE WHEN vt0.c1 THEN -389449210 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END, 'q') DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)*(vt0.c1)) IN ()) WHERE ((((((vt0.c0))>(('&袲/')))) NOT NULL)) ORDER BY (((vt0.c1)) BETWEEN (((vt0.c2 IN ()))) AND (((vt0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>(('&袲/')))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)*(vt0.c1)) IN ()) ORDER BY (((vt0.c1)) BETWEEN (((vt0.c2 IN ()))) AND (((vt0.c0 IN ())))) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)*(vt0.c1)) IN ()) WHERE ((((((vt0.c0))>(('&袲/')))) NOT NULL)) ORDER BY (((vt0.c1)) BETWEEN (((vt0.c2 IN ()))) AND (((vt0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>(('&袲/')))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)*(vt0.c1)) IN ()) ORDER BY (((vt0.c1)) BETWEEN (((vt0.c2 IN ()))) AND (((vt0.c0 IN ())))) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)*(vt0.c1)) IN ()) WHERE ((((((vt0.c0))>(('&袲/')))) NOT NULL)) ORDER BY (((vt0.c1)) BETWEEN (((vt0.c2 IN ()))) AND (((vt0.c0 IN ())))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL IN (v0.c0))))==((v0.c1)))) ORDER BY ((((((v0.c1)OR(v0.c2)))AND(v0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((NULL IN (v0.c0))))=((v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)OR(v0.c2)))AND(v0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL IN (v0.c0))))==((v0.c1)))) ORDER BY ((((((v0.c1)OR(v0.c2)))AND(v0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((NULL IN (v0.c0))))=((v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)OR(v0.c2)))AND(v0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL IN (v0.c0))))==((v0.c1)))) ORDER BY ((((((v0.c1)OR(v0.c2)))AND(v0.c2))) ISNULL);
SELECT ALL * FROM v0, vt0, t0 WHERE (((CASE WHEN x'' THEN t0.c57 ELSE vt0.c2 END) BETWEEN (((vt0.c1)>(t0.c0))) AND ((((v0.c1))<=((t0.c40)))))) ORDER BY CASE WHEN (- (v0.c2)) THEN ((((((((vt0.c2)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c40)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN t0.c57 ELSE vt0.c2 END) BETWEEN (((vt0.c1)>(t0.c0))) AND ((((v0.c1))<=((t0.c40)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE WHEN (- (v0.c2)) THEN ((((((((vt0.c2)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c40)) END ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (((CASE WHEN x'' THEN t0.c57 ELSE vt0.c2 END) BETWEEN (((vt0.c1)>(t0.c0))) AND ((((v0.c1))<=((t0.c40)))))) ORDER BY CASE WHEN (- (v0.c2)) THEN ((((((((vt0.c2)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c40)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN t0.c57 ELSE vt0.c2 END) BETWEEN (((vt0.c1)>(t0.c0))) AND ((((v0.c1))<=((t0.c40)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE WHEN (- (v0.c2)) THEN ((((((((vt0.c2)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c40)) END ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (((CASE WHEN x'' THEN t0.c57 ELSE vt0.c2 END) BETWEEN (((vt0.c1)>(t0.c0))) AND ((((v0.c1))<=((t0.c40)))))) ORDER BY CASE WHEN (- (v0.c2)) THEN ((((((((vt0.c2)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c40)) END ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0))<((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0))<((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0))<((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0))<((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0))<((vt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(v0.c1))) NOT BETWEEN ('872055574' COLLATE BINARY) AND (((x'2a3e')&(v0.c1)))) INNER JOIN v0 ON CAST((('.z')*(vt0.c2)) AS INTEGER) CROSS JOIN vt0 ON t0.c57 WHERE ((((((t0.c40) IS TRUE)))<=((((('^+_AJz', -1630258089, vt1.c0))>=((t0.c40, vt1.c0, t0.c57)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c40) IS TRUE)))<=((((('^+_AJz', -1630258089, vt1.c0))>=((t0.c40, vt1.c0, t0.c57))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(v0.c1))) NOT BETWEEN ('872055574' COLLATE BINARY) AND (((x'2a3e')&(v0.c1)))) INNER JOIN v0 ON CAST((('.z')*(vt0.c2)) AS INTEGER) CROSS JOIN vt0 ON t0.c57);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(v0.c1))) NOT BETWEEN ('872055574' COLLATE BINARY) AND (((x'2a3e')&(v0.c1)))) INNER JOIN v0 ON CAST((('.z')*(vt0.c2)) AS INTEGER) CROSS JOIN vt0 ON t0.c57 WHERE ((((((t0.c40) IS TRUE)))<=((((('^+_AJz', -1630258089, vt1.c0))>=((t0.c40, vt1.c0, t0.c57)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c40) IS TRUE)))<=((((('^+_AJz', -1630258089, vt1.c0))>=((t0.c40, vt1.c0, t0.c57))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(v0.c1))) NOT BETWEEN ('872055574' COLLATE BINARY) AND (((x'2a3e')&(v0.c1)))) INNER JOIN v0 ON CAST((('.z')*(vt0.c2)) AS INTEGER) CROSS JOIN vt0 ON t0.c57);
SELECT COUNT(*) FROM t0, vt0 WHERE (RTRIM(((NULL)LIKE(NULL))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((NULL)LIKE(NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (RTRIM(((NULL)LIKE(NULL))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((NULL)LIKE(NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (RTRIM(((NULL)LIKE(NULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)+(vt0.c2)))OR(NULL)))AND(((vt1.c0)%(vt0.c2))))) ORDER BY (('쩪{' COLLATE BINARY) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)+(vt0.c2)))OR(NULL)))AND(((vt1.c0)%(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('쩪{' COLLATE BINARY) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)+(vt0.c2)))OR(NULL)))AND(((vt1.c0)%(vt0.c2))))) ORDER BY (('쩪{' COLLATE BINARY) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)+(vt0.c2)))OR(NULL)))AND(((vt1.c0)%(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('쩪{' COLLATE BINARY) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)+(vt0.c2)))OR(NULL)))AND(((vt1.c0)%(vt0.c2))))) ORDER BY (('쩪{' COLLATE BINARY) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN STRFTIME(v0.c2, v0.c0, v0.c1) THEN (~ (v0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN STRFTIME(v0.c2, v0.c0, v0.c1) THEN (~ (v0.c0)) ELSE x'' END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN STRFTIME(v0.c2, v0.c0, v0.c1) THEN (~ (v0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN STRFTIME(v0.c2, v0.c0, v0.c1) THEN (~ (v0.c0)) ELSE x'' END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN STRFTIME(v0.c2, v0.c0, v0.c1) THEN (~ (v0.c0)) ELSE x'' END);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c40  WHEN v0.c1 THEN '-1105567729' ELSE t0.c0 END)AND(((v0.c0)IS NOT(v0.c1)))) WHERE (CAST((('-463918454')IS NOT(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((('-463918454')IS NOT(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c40  WHEN v0.c1 THEN '-1105567729' ELSE t0.c0 END)AND(((v0.c0)IS NOT(v0.c1)))));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c40  WHEN v0.c1 THEN '-1105567729' ELSE t0.c0 END)AND(((v0.c0)IS NOT(v0.c1)))) WHERE (CAST((('-463918454')IS NOT(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((('-463918454')IS NOT(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c40  WHEN v0.c1 THEN '-1105567729' ELSE t0.c0 END)AND(((v0.c0)IS NOT(v0.c1)))));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c40  WHEN v0.c1 THEN '-1105567729' ELSE t0.c0 END)AND(((v0.c0)IS NOT(v0.c1)))) WHERE (CAST((('-463918454')IS NOT(t0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (JULIANDAY(TRIM(DISTINCT t0.c57, t0.c57), ((t0.c40) BETWEEN ('-250449402') AND (t0.c0)), ((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c40)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(TRIM(DISTINCT t0.c57, t0.c57), ((t0.c40) BETWEEN ('-250449402') AND (t0.c0)), ((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c40)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (JULIANDAY(TRIM(DISTINCT t0.c57, t0.c57), ((t0.c40) BETWEEN ('-250449402') AND (t0.c0)), ((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c40)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(TRIM(DISTINCT t0.c57, t0.c57), ((t0.c40) BETWEEN ('-250449402') AND (t0.c0)), ((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c40)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (JULIANDAY(TRIM(DISTINCT t0.c57, t0.c57), ((t0.c40) BETWEEN ('-250449402') AND (t0.c0)), ((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c40)))OR(vt1.c0))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('')GLOB(vt0.c2))) ORDER BY ((((((vt0.c2)+(vt0.c1)))AND((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))))))AND(((vt0.c2)>>(vt0.c0)))) ASC  NULLS LAST, json_remove(((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN '' END) ASC  NULLS FIRST, ('g䈛kvn' IN (((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')GLOB(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)+(vt0.c1)))AND((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))))))AND(((vt0.c2)>>(vt0.c0)))) ASC  NULLS LAST, json_remove(((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN '' END) ASC  NULLS FIRST, ('g䈛kvn' IN (((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('')GLOB(vt0.c2))) ORDER BY ((((((vt0.c2)+(vt0.c1)))AND((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))))))AND(((vt0.c2)>>(vt0.c0)))) ASC  NULLS LAST, json_remove(((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN '' END) ASC  NULLS FIRST, ('g䈛kvn' IN (((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')GLOB(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)+(vt0.c1)))AND((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))))))AND(((vt0.c2)>>(vt0.c0)))) ASC  NULLS LAST, json_remove(((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN '' END) ASC  NULLS FIRST, ('g䈛kvn' IN (((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((~ (t0.c40)) COLLATE BINARY) ORDER BY (((vt0.c2)*(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c40)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt0.c2)*(vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((~ (t0.c40)) COLLATE BINARY) ORDER BY (((vt0.c2)*(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c40)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt0.c2)*(vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((~ (t0.c40)) COLLATE BINARY) ORDER BY (((vt0.c2)*(vt1.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c1)>=(v0.c2))) NOT NULL)) ORDER BY HEX(DISTINCT CAST(v0.c2 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>=(v0.c2))) NOT NULL)) IS TRUE)  as count FROM v0, vt1 ORDER BY HEX(DISTINCT CAST(v0.c2 AS NUMERIC)) DESC);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c1)>=(v0.c2))) NOT NULL)) ORDER BY HEX(DISTINCT CAST(v0.c2 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>=(v0.c2))) NOT NULL)) IS TRUE)  as count FROM v0, vt1 ORDER BY HEX(DISTINCT CAST(v0.c2 AS NUMERIC)) DESC);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c1)>=(v0.c2))) NOT NULL)) ORDER BY HEX(DISTINCT CAST(v0.c2 AS NUMERIC)) DESC;
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((t0.c57) NOT NULL))) ORDER BY CAST(CASE t0.c57  WHEN t0.c40 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC, LOWER(CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c57) NOT NULL))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c57  WHEN t0.c40 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC, LOWER(CHANGES()));
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((t0.c57) NOT NULL))) ORDER BY CAST(CASE t0.c57  WHEN t0.c40 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC, LOWER(CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c57) NOT NULL))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c57  WHEN t0.c40 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC, LOWER(CHANGES()));
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((t0.c57) NOT NULL))) ORDER BY CAST(CASE t0.c57  WHEN t0.c40 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC, LOWER(CHANGES());
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((((vt0.c1)IS NOT(t0.c57))) BETWEEN ((((NULL, v0.c0, v0.c0))=((v0.c2, vt0.c1, v0.c0)))) AND (((t0.c40)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(t0.c57))) BETWEEN ((((NULL, v0.c0, v0.c0))==((v0.c2, vt0.c1, v0.c0)))) AND (((t0.c40)>>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0, t0);
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((((vt0.c1)IS NOT(t0.c57))) BETWEEN ((((NULL, v0.c0, v0.c0))=((v0.c2, vt0.c1, v0.c0)))) AND (((t0.c40)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(t0.c57))) BETWEEN ((((NULL, v0.c0, v0.c0))==((v0.c2, vt0.c1, v0.c0)))) AND (((t0.c40)>>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0, t0);
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((((vt0.c1)IS NOT(t0.c57))) BETWEEN ((((NULL, v0.c0, v0.c0))=((v0.c2, vt0.c1, v0.c0)))) AND (((t0.c40)>>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c2 AS REAL))|(vt0.c1))) ORDER BY 5.18894023E8;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS REAL))|(vt0.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 5.18894023E8);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c2 AS REAL))|(vt0.c1))) ORDER BY 5.18894023E8;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS REAL))|(vt0.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 5.18894023E8);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c2 AS REAL))|(vt0.c1))) ORDER BY 5.18894023E8;
SELECT * FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c40)) AS NUMERIC) WHERE ('-393757375') ORDER BY (CAST(t0.c57 AS REAL) IN ((t0.c40 IN (t0.c0, vt0.c1)), ((t0.c0)<>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('-393757375') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c40)) AS NUMERIC) ORDER BY (CAST(t0.c57 AS REAL) IN ((t0.c40 IN (t0.c0, vt0.c1)), ((t0.c0)<>(vt0.c0)))) ASC);
SELECT * FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c40)) AS NUMERIC) WHERE ('-393757375') ORDER BY (CAST(t0.c57 AS REAL) IN ((t0.c40 IN (t0.c0, vt0.c1)), ((t0.c0)<>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('-393757375') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c40)) AS NUMERIC) ORDER BY (CAST(t0.c57 AS REAL) IN ((t0.c40 IN (t0.c0, vt0.c1)), ((t0.c0)<>(vt0.c0)))) ASC);
SELECT * FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c40)) AS NUMERIC) WHERE ('-393757375') ORDER BY (CAST(t0.c57 AS REAL) IN ((t0.c40 IN (t0.c0, vt0.c1)), ((t0.c0)<>(vt0.c0)))) ASC;
SELECT ALL * FROM v0, vt0, t0, vt1 WHERE (((CAST(v0.c2 AS REAL)) NOTNULL)) ORDER BY (('-2071368011') BETWEEN ((('1545516013') BETWEEN (v0.c0) AND (t0.c40))) AND (((vt0.c2) IS TRUE))), ((')\rD''')<>(x''))  NULLS FIRST, '-1206487589';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM v0, vt0, t0, vt1 ORDER BY (('-2071368011') BETWEEN ((('1545516013') BETWEEN (v0.c0) AND (t0.c40))) AND (((vt0.c2) IS TRUE))), ((')\rD''')!=(x''))  NULLS FIRST, '-1206487589');
SELECT ALL * FROM v0, vt0, t0, vt1 WHERE (((CAST(v0.c2 AS REAL)) NOTNULL)) ORDER BY (('-2071368011') BETWEEN ((('1545516013') BETWEEN (v0.c0) AND (t0.c40))) AND (((vt0.c2) IS TRUE))), ((')\rD''')<>(x''))  NULLS FIRST, '-1206487589';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM v0, vt0, t0, vt1 ORDER BY (('-2071368011') BETWEEN ((('1545516013') BETWEEN (v0.c0) AND (t0.c40))) AND (((vt0.c2) IS TRUE))), ((')\rD''')!=(x''))  NULLS FIRST, '-1206487589');
SELECT ALL * FROM v0, vt0, t0, vt1 WHERE (((CAST(v0.c2 AS REAL)) NOTNULL)) ORDER BY (('-2071368011') BETWEEN ((('1545516013') BETWEEN (v0.c0) AND (t0.c40))) AND (((vt0.c2) IS TRUE))), ((')\rD''')<>(x''))  NULLS FIRST, '-1206487589';
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, vt1, v0, vt0);
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, vt1, v0, vt0);
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0 WHERE (((((v0.c2) ISNULL))LIKE(0x2aa91749))) ORDER BY t0.c57 DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) ISNULL))LIKE(0X2aa91749))) IS TRUE)  as count FROM vt1, v0, t0, vt0 ORDER BY t0.c57 DESC);
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0 WHERE (((((v0.c2) ISNULL))LIKE(0x2aa91749))) ORDER BY t0.c57 DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) ISNULL))LIKE(0X2aa91749))) IS TRUE)  as count FROM vt1, v0, t0, vt0 ORDER BY t0.c57 DESC);
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0 WHERE (((((v0.c2) ISNULL))LIKE(0x2aa91749))) ORDER BY t0.c57 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE WHEN 0.6650683781260995 THEN (t0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN 0.6650683781260995 THEN (t0.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE WHEN 0.6650683781260995 THEN (t0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN 0.6650683781260995 THEN (t0.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE WHEN 0.6650683781260995 THEN (t0.c0 IN ()) END ASC;
SELECT ALL COUNT(*) FROM v0, vt0, vt1 CROSS JOIN t0 ON CHAR(UPPER(DISTINCT v0.c1)) WHERE (CAST(((vt0.c1)IS NOT(vt0.c2)) AS INTEGER)) ORDER BY (- (v0.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)IS NOT(vt0.c2)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, vt1 CROSS JOIN t0 ON CHAR(UPPER(DISTINCT v0.c1)) ORDER BY (- (v0.c2 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 CROSS JOIN t0 ON CHAR(UPPER(DISTINCT v0.c1)) WHERE (CAST(((vt0.c1)IS NOT(vt0.c2)) AS INTEGER)) ORDER BY (- (v0.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)IS NOT(vt0.c2)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, vt1 CROSS JOIN t0 ON CHAR(UPPER(DISTINCT v0.c1)) ORDER BY (- (v0.c2 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 CROSS JOIN t0 ON CHAR(UPPER(DISTINCT v0.c1)) WHERE (CAST(((vt0.c1)IS NOT(vt0.c2)) AS INTEGER)) ORDER BY (- (v0.c2 COLLATE RTRIM)) DESC;
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON TIME(x'74ca', (((v0.c0))>((vt0.c1))), (~ (v0.c0))) WHERE (((v0.c2)!=(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)!=(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON TIME(x'74ca', (((v0.c0))>((vt0.c1))), (~ (v0.c0))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON TIME(x'74ca', (((v0.c0))>((vt0.c1))), (~ (v0.c0))) WHERE (((v0.c2)!=(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)!=(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON TIME(x'74ca', (((v0.c0))>((vt0.c1))), (~ (v0.c0))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON TIME(x'74ca', (((v0.c0))>((vt0.c1))), (~ (v0.c0))) WHERE (((v0.c2)!=(v0.c2)) COLLATE RTRIM);
SELECT * FROM t0, vt1, vt0, v0 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0, v0);
SELECT * FROM t0, vt1, vt0, v0 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0, v0);
SELECT * FROM t0, vt1, vt0, v0 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON CASE t0.c40  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((CAST(1.162696141E9 AS TEXT)) ISNULL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON CASE t0.c40  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((CAST(1.162696141E9 AS TEXT)) ISNULL));
SELECT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON CASE t0.c40  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((CAST(1.162696141E9 AS TEXT)) ISNULL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON CASE t0.c40  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((CAST(1.162696141E9 AS TEXT)) ISNULL));
SELECT * FROM v0, t0, vt0, vt1 WHERE (((v0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY CASE CAST(t0.c40 AS TEXT)  WHEN 1.054400362E9 THEN TYPEOF(v0.c0) END, CAST(LOWER(0.08620674872783207) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt0, vt1 ORDER BY CASE CAST(t0.c40 AS TEXT)  WHEN 1.054400362E9 THEN TYPEOF(v0.c0) END, CAST(LOWER(0.08620674872783207) AS TEXT));
SELECT * FROM v0, t0, vt0, vt1 WHERE (((v0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY CASE CAST(t0.c40 AS TEXT)  WHEN 1.054400362E9 THEN TYPEOF(v0.c0) END, CAST(LOWER(0.08620674872783207) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt0, vt1 ORDER BY CASE CAST(t0.c40 AS TEXT)  WHEN 1.054400362E9 THEN TYPEOF(v0.c0) END, CAST(LOWER(0.08620674872783207) AS TEXT));
SELECT * FROM v0, t0, vt0, vt1 WHERE (((v0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY CASE CAST(t0.c40 AS TEXT)  WHEN 1.054400362E9 THEN TYPEOF(v0.c0) END, CAST(LOWER(0.08620674872783207) AS TEXT);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c1 THEN '-218835058' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c1 THEN '-218835058' END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c1 THEN '-218835058' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c1 THEN '-218835058' END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c1 THEN '-218835058' END COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON x'3166' FULL OUTER JOIN t0 ON (TRIM(DISTINCT v0.c1) IN (((vt0.c2)!=(vt0.c0)))) WHERE ((~ (((t0.c40)<(vt0.c0))))) ORDER BY (((t0.c40 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c1) AND (vt0.c1))) AND ((- (0.9577626729684048))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c40)<(vt0.c0))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON x'3166' FULL OUTER JOIN t0 ON (TRIM(DISTINCT v0.c1) IN (((vt0.c2)!=(vt0.c0)))) ORDER BY (((t0.c40 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c1) AND (vt0.c1))) AND ((- (0.9577626729684048)))));
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON x'3166' FULL OUTER JOIN t0 ON (TRIM(DISTINCT v0.c1) IN (((vt0.c2)!=(vt0.c0)))) WHERE ((~ (((t0.c40)<(vt0.c0))))) ORDER BY (((t0.c40 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c1) AND (vt0.c1))) AND ((- (0.9577626729684048))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c40)<(vt0.c0))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON x'3166' FULL OUTER JOIN t0 ON (TRIM(DISTINCT v0.c1) IN (((vt0.c2)!=(vt0.c0)))) ORDER BY (((t0.c40 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c1) AND (vt0.c1))) AND ((- (0.9577626729684048)))));
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON x'3166' FULL OUTER JOIN t0 ON (TRIM(DISTINCT v0.c1) IN (((vt0.c2)!=(vt0.c0)))) WHERE ((~ (((t0.c40)<(vt0.c0))))) ORDER BY (((t0.c40 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c1) AND (vt0.c1))) AND ((- (0.9577626729684048))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c2) AND (vt1.c0)))OR((v0.c2 IN ()))))OR(((v0.c0)IS NOT(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1) NOT BETWEEN (v0.c2) AND (vt1.c0)))OR((v0.c2 IN ()))))OR(((v0.c0)IS NOT(x''))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c2) AND (vt1.c0)))OR((v0.c2 IN ()))))OR(((v0.c0)IS NOT(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1) NOT BETWEEN (v0.c2) AND (vt1.c0)))OR((v0.c2 IN ()))))OR(((v0.c0)IS NOT(x''))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c2) AND (vt1.c0)))OR((v0.c2 IN ()))))OR(((v0.c0)IS NOT(x'')))));
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) ORDER BY (((NOT (v0.c1)))==((v0.c0 IN (t0.c40))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((NOT (v0.c1)))==((v0.c0 IN (t0.c40)))));
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) ORDER BY (((NOT (v0.c1)))==((v0.c0 IN (t0.c40))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((NOT (v0.c1)))==((v0.c0 IN (t0.c40)))));
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) ORDER BY (((NOT (v0.c1)))==((v0.c0 IN (t0.c40))));
SELECT ALL * FROM vt0, vt1 WHERE (ABS(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (ABS(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (ABS(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL * FROM t0, vt1, v0, vt0 NOT INDEXED WHERE (t0.c40) ORDER BY TYPEOF(((0Xffffffff9e6dcb22)||(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY TYPEOF(((0Xffffffff9e6dcb22)||(vt1.c0))));
SELECT ALL * FROM t0, vt1, v0, vt0 NOT INDEXED WHERE (t0.c40) ORDER BY TYPEOF(((0Xffffffff9e6dcb22)||(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY TYPEOF(((0Xffffffff9e6dcb22)||(vt1.c0))));
SELECT ALL * FROM t0, vt1, v0, vt0 NOT INDEXED WHERE (t0.c40) ORDER BY TYPEOF(((0Xffffffff9e6dcb22)||(vt1.c0)));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((v0.c1) ISNULL) COLLATE NOCASE INNER JOIN vt1 ON ((NULL COLLATE BINARY) BETWEEN (((v0.c1) BETWEEN (t0.c0) AND (vt1.c0))) AND (((v0.c0)IS NOT(t0.c0)))) WHERE (CASE WHEN ((v0.c2) NOTNULL) THEN ((t0.c57) BETWEEN (v0.c2) AND (vt1.c0)) ELSE (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c2) NOTNULL) THEN ((t0.c57) BETWEEN (v0.c2) AND (vt1.c0)) ELSE (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((v0.c1) ISNULL) COLLATE NOCASE INNER JOIN vt1 ON ((NULL COLLATE BINARY) BETWEEN (((v0.c1) BETWEEN (t0.c0) AND (vt1.c0))) AND (((v0.c0)IS NOT(t0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((v0.c1) ISNULL) COLLATE NOCASE INNER JOIN vt1 ON ((NULL COLLATE BINARY) BETWEEN (((v0.c1) BETWEEN (t0.c0) AND (vt1.c0))) AND (((v0.c0)IS NOT(t0.c0)))) WHERE (CASE WHEN ((v0.c2) NOTNULL) THEN ((t0.c57) BETWEEN (v0.c2) AND (vt1.c0)) ELSE (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c2) NOTNULL) THEN ((t0.c57) BETWEEN (v0.c2) AND (vt1.c0)) ELSE (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((v0.c1) ISNULL) COLLATE NOCASE INNER JOIN vt1 ON ((NULL COLLATE BINARY) BETWEEN (((v0.c1) BETWEEN (t0.c0) AND (vt1.c0))) AND (((v0.c0)IS NOT(t0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((v0.c1) ISNULL) COLLATE NOCASE INNER JOIN vt1 ON ((NULL COLLATE BINARY) BETWEEN (((v0.c1) BETWEEN (t0.c0) AND (vt1.c0))) AND (((v0.c0)IS NOT(t0.c0)))) WHERE (CASE WHEN ((v0.c2) NOTNULL) THEN ((t0.c57) BETWEEN (v0.c2) AND (vt1.c0)) ELSE (t0.c0 IN ()) END);
SELECT COUNT(*) FROM t0, vt1 NOT INDEXED WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 NOT INDEXED WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 NOT INDEXED WHERE ((~ (NULL)));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'3904' WHEN vt0.c2 THEN vt1.c0 END)OR((~ (v0.c1)))) FULL OUTER JOIN t0 ON JULIANDAY((vt1.c0 IN ()), ABS(t0.c40), (- (vt0.c0))) RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt0.c1)) WHERE (((((v0.c2) NOTNULL)) BETWEEN (v0.c0) AND (vt0.c1))) ORDER BY ((((((vt0.c1)IS(t0.c40)))OR(((t0.c0) NOTNULL))))AND(t0.c0)) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END) NOT BETWEEN (((vt0.c2) ISNULL)) AND ((t0.c57 IN (v0.c0)))) ASC, (((('2105541341') BETWEEN (v0.c0) AND (vt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL)) BETWEEN (v0.c0) AND (vt0.c1))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'3904' WHEN vt0.c2 THEN vt1.c0 END)OR((~ (v0.c1)))) FULL OUTER JOIN t0 ON JULIANDAY((vt1.c0 IN ()), ABS(t0.c40), (- (vt0.c0))) RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt0.c1)) ORDER BY ((((((vt0.c1)IS(t0.c40)))OR(((t0.c0) NOTNULL))))AND(t0.c0)) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END) NOT BETWEEN (((vt0.c2) ISNULL)) AND ((t0.c57 IN (v0.c0)))) ASC, (((('2105541341') BETWEEN (v0.c0) AND (vt0.c1))) IS FALSE));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'3904' WHEN vt0.c2 THEN vt1.c0 END)OR((~ (v0.c1)))) FULL OUTER JOIN t0 ON JULIANDAY((vt1.c0 IN ()), ABS(t0.c40), (- (vt0.c0))) RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt0.c1)) WHERE (((((v0.c2) NOTNULL)) BETWEEN (v0.c0) AND (vt0.c1))) ORDER BY ((((((vt0.c1)IS(t0.c40)))OR(((t0.c0) NOTNULL))))AND(t0.c0)) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END) NOT BETWEEN (((vt0.c2) ISNULL)) AND ((t0.c57 IN (v0.c0)))) ASC, (((('2105541341') BETWEEN (v0.c0) AND (vt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL)) BETWEEN (v0.c0) AND (vt0.c1))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'3904' WHEN vt0.c2 THEN vt1.c0 END)OR((~ (v0.c1)))) FULL OUTER JOIN t0 ON JULIANDAY((vt1.c0 IN ()), ABS(t0.c40), (- (vt0.c0))) RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt0.c1)) ORDER BY ((((((vt0.c1)IS(t0.c40)))OR(((t0.c0) NOTNULL))))AND(t0.c0)) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END) NOT BETWEEN (((vt0.c2) ISNULL)) AND ((t0.c57 IN (v0.c0)))) ASC, (((('2105541341') BETWEEN (v0.c0) AND (vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, v0, vt1 FULL OUTER JOIN vt0 ON ((NULL) BETWEEN ((- (vt1.c0))) AND ((+ (vt0.c1)))) WHERE (((((((((((((((((((((t0.c40)OR(t0.c57)))OR(v0.c0)))AND(vt1.c0)))AND(v0.c1)))AND(t0.c57)))AND(t0.c40)))OR(((((((((((((((((t0.c57)AND(t0.c40)))AND(vt0.c1)))AND(v0.c2)))AND(vt1.c0)))AND('-2080182644')))OR(v0.c2)))OR(vt0.c2)))OR('-1403561151')))))AND(CAST(t0.c57 AS INTEGER))))OR(TRIM(DISTINCT vt0.c2))))AND((('1494968818')LIKE(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c40)OR(t0.c57)))OR(v0.c0)))AND(vt1.c0)))AND(v0.c1)))AND(t0.c57)))AND(t0.c40)))OR(((((((((((((((((t0.c57)AND(t0.c40)))AND(vt0.c1)))AND(v0.c2)))AND(vt1.c0)))AND('-2080182644')))OR(v0.c2)))OR(vt0.c2)))OR('-1403561151')))))AND(CAST(t0.c57 AS INTEGER))))OR(TRIM(DISTINCT vt0.c2))))AND((('1494968818')LIKE(vt0.c2))))) IS TRUE)  as count FROM t0, v0, vt1 FULL OUTER JOIN vt0 ON ((NULL) BETWEEN ((- (vt1.c0))) AND ((+ (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, v0, vt1 FULL OUTER JOIN vt0 ON ((NULL) BETWEEN ((- (vt1.c0))) AND ((+ (vt0.c1)))) WHERE (((((((((((((((((((((t0.c40)OR(t0.c57)))OR(v0.c0)))AND(vt1.c0)))AND(v0.c1)))AND(t0.c57)))AND(t0.c40)))OR(((((((((((((((((t0.c57)AND(t0.c40)))AND(vt0.c1)))AND(v0.c2)))AND(vt1.c0)))AND('-2080182644')))OR(v0.c2)))OR(vt0.c2)))OR('-1403561151')))))AND(CAST(t0.c57 AS INTEGER))))OR(TRIM(DISTINCT vt0.c2))))AND((('1494968818')LIKE(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c40)OR(t0.c57)))OR(v0.c0)))AND(vt1.c0)))AND(v0.c1)))AND(t0.c57)))AND(t0.c40)))OR(((((((((((((((((t0.c57)AND(t0.c40)))AND(vt0.c1)))AND(v0.c2)))AND(vt1.c0)))AND('-2080182644')))OR(v0.c2)))OR(vt0.c2)))OR('-1403561151')))))AND(CAST(t0.c57 AS INTEGER))))OR(TRIM(DISTINCT vt0.c2))))AND((('1494968818')LIKE(vt0.c2))))) IS TRUE)  as count FROM t0, v0, vt1 FULL OUTER JOIN vt0 ON ((NULL) BETWEEN ((- (vt1.c0))) AND ((+ (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, v0, vt1 FULL OUTER JOIN vt0 ON ((NULL) BETWEEN ((- (vt1.c0))) AND ((+ (vt0.c1)))) WHERE (((((((((((((((((((((t0.c40)OR(t0.c57)))OR(v0.c0)))AND(vt1.c0)))AND(v0.c1)))AND(t0.c57)))AND(t0.c40)))OR(((((((((((((((((t0.c57)AND(t0.c40)))AND(vt0.c1)))AND(v0.c2)))AND(vt1.c0)))AND('-2080182644')))OR(v0.c2)))OR(vt0.c2)))OR('-1403561151')))))AND(CAST(t0.c57 AS INTEGER))))OR(TRIM(DISTINCT vt0.c2))))AND((('1494968818')LIKE(vt0.c2)))));
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE (CASE WHEN ((vt0.c0)||(vt1.c0)) THEN t0.c0 END) ORDER BY ((vt0.c1)-((- (t0.c57))))  NULLS FIRST, ((x'a4bb15f2')&(((vt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)||(vt1.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY ((vt0.c1)-((- (t0.c57))))  NULLS FIRST, ((x'a4bb15f2')&(((vt0.c0) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE (CASE WHEN ((vt0.c0)||(vt1.c0)) THEN t0.c0 END) ORDER BY ((vt0.c1)-((- (t0.c57))))  NULLS FIRST, ((x'a4bb15f2')&(((vt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)||(vt1.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY ((vt0.c1)-((- (t0.c57))))  NULLS FIRST, ((x'a4bb15f2')&(((vt0.c0) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, v0, vt0 WHERE (CASE WHEN ((vt0.c0)||(vt1.c0)) THEN t0.c0 END) ORDER BY ((vt0.c1)-((- (t0.c57))))  NULLS FIRST, ((x'a4bb15f2')&(((vt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((- (CAST(x'' AS REAL)))) ORDER BY CAST(((t0.c57)*(t0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(x'' AS REAL)))) IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY CAST(((t0.c57)*(t0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((- (CAST(x'' AS REAL)))) ORDER BY CAST(((t0.c57)*(t0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(x'' AS REAL)))) IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY CAST(((t0.c57)*(t0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((- (CAST(x'' AS REAL)))) ORDER BY CAST(((t0.c57)*(t0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, vt0, v0 WHERE ('0.6438601899515949') ORDER BY CASE (NOT (t0.c57))  WHEN (((v0.c2))>((t0.c57))) THEN ((t0.c57)=(v0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))) THEN ((t0.c40) NOT NULL) WHEN CAST(vt0.c2 AS NUMERIC) THEN CASE WHEN t0.c0 THEN x'' ELSE '1805879474' END ELSE ((v0.c1)AND(v0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.6438601899515949') IS TRUE)  as count FROM t0, vt1, vt0, v0 ORDER BY CASE (NOT (t0.c57))  WHEN (((v0.c2))>((t0.c57))) THEN ((t0.c57)=(v0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))) THEN ((t0.c40) NOT NULL) WHEN CAST(vt0.c2 AS NUMERIC) THEN CASE WHEN t0.c0 THEN x'' ELSE '1805879474' END ELSE ((v0.c1)AND(v0.c2)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0, v0 WHERE ('0.6438601899515949') ORDER BY CASE (NOT (t0.c57))  WHEN (((v0.c2))>((t0.c57))) THEN ((t0.c57)=(v0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))) THEN ((t0.c40) NOT NULL) WHEN CAST(vt0.c2 AS NUMERIC) THEN CASE WHEN t0.c0 THEN x'' ELSE '1805879474' END ELSE ((v0.c1)AND(v0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.6438601899515949') IS TRUE)  as count FROM t0, vt1, vt0, v0 ORDER BY CASE (NOT (t0.c57))  WHEN (((v0.c2))>((t0.c57))) THEN ((t0.c57)=(v0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))) THEN ((t0.c40) NOT NULL) WHEN CAST(vt0.c2 AS NUMERIC) THEN CASE WHEN t0.c0 THEN x'' ELSE '1805879474' END ELSE ((v0.c1)AND(v0.c2)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0, v0 WHERE ('0.6438601899515949') ORDER BY CASE (NOT (t0.c57))  WHEN (((v0.c2))>((t0.c57))) THEN ((t0.c57)=(v0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c1))) THEN ((t0.c40) NOT NULL) WHEN CAST(vt0.c2 AS NUMERIC) THEN CASE WHEN t0.c0 THEN x'' ELSE '1805879474' END ELSE ((v0.c1)AND(v0.c2)) END  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c1)))) AND ((((((vt0.c2)OR(v0.c0)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c1)))) AND ((((((vt0.c2)OR(v0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c1)))) AND ((((((vt0.c2)OR(v0.c0)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c1)))) AND ((((((vt0.c2)OR(v0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c1)))) AND ((((((vt0.c2)OR(v0.c0)))OR(vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, x'', ((t0.c0)-(t0.c40))))<=((vt0.c2, (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), 0.2931149735893107))) CROSS JOIN t0 ON ((((((t0.c0) NOTNULL))OR(t0.c57)))OR(CASE WHEN t0.c0 THEN t0.c57 WHEN t0.c57 THEN t0.c40 WHEN vt0.c2 THEN t0.c0 ELSE t0.c57 END)) WHERE (CAST('' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('' AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, x'', ((t0.c0)-(t0.c40))))<=((vt0.c2, (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), 0.2931149735893107))) CROSS JOIN t0 ON ((((((t0.c0) NOTNULL))OR(t0.c57)))OR(CASE WHEN t0.c0 THEN t0.c57 WHEN t0.c57 THEN t0.c40 WHEN vt0.c2 THEN t0.c0 ELSE t0.c57 END)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, x'', ((t0.c0)-(t0.c40))))<=((vt0.c2, (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), 0.2931149735893107))) CROSS JOIN t0 ON ((((((t0.c0) NOTNULL))OR(t0.c57)))OR(CASE WHEN t0.c0 THEN t0.c57 WHEN t0.c57 THEN t0.c40 WHEN vt0.c2 THEN t0.c0 ELSE t0.c57 END)) WHERE (CAST('' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('' AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, x'', ((t0.c0)-(t0.c40))))<=((vt0.c2, (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), 0.2931149735893107))) CROSS JOIN t0 ON ((((((t0.c0) NOTNULL))OR(t0.c57)))OR(CASE WHEN t0.c0 THEN t0.c57 WHEN t0.c57 THEN t0.c40 WHEN vt0.c2 THEN t0.c0 ELSE t0.c57 END)));
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT (((- ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT (((- ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))))));
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE ((- (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c2)))OR(vt1.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c2)))OR(vt1.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, v0, vt0, vt1);
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE ((- (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c2)))OR(vt1.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c2)))OR(vt1.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, v0, vt0, vt1);
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE ((- (((((((((vt0.c2)OR(v0.c1)))OR(vt0.c2)))OR(vt1.c0)))AND(t0.c0)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c40)AND(t0.c40)))AND('#.Q奚ty>8T')))OR(CASE t0.c40  WHEN t0.c57 THEN t0.c57 ELSE vt1.c0 END)) WHERE ((((((t0.c0)OR(t0.c40)))OR(t0.c0)) IN ())) ORDER BY (((0.10207247557912524, t0.c0, '')) NOT BETWEEN (((t0.c57 IN ()), MAX(t0.c40, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) IS FALSE), t0.c40 COLLATE NOCASE, t0.c40 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c40)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c40)AND(t0.c40)))AND('#.Q奚ty>8T')))OR(CASE t0.c40  WHEN t0.c57 THEN t0.c57 ELSE vt1.c0 END)) ORDER BY (((0.10207247557912524, t0.c0, '')) NOT BETWEEN (((t0.c57 IN ()), MAX(t0.c40, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) IS FALSE), t0.c40 COLLATE NOCASE, t0.c40 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c40)AND(t0.c40)))AND('#.Q奚ty>8T')))OR(CASE t0.c40  WHEN t0.c57 THEN t0.c57 ELSE vt1.c0 END)) WHERE ((((((t0.c0)OR(t0.c40)))OR(t0.c0)) IN ())) ORDER BY (((0.10207247557912524, t0.c0, '')) NOT BETWEEN (((t0.c57 IN ()), MAX(t0.c40, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) IS FALSE), t0.c40 COLLATE NOCASE, t0.c40 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c40)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c40)AND(t0.c40)))AND('#.Q奚ty>8T')))OR(CASE t0.c40  WHEN t0.c57 THEN t0.c57 ELSE vt1.c0 END)) ORDER BY (((0.10207247557912524, t0.c0, '')) NOT BETWEEN (((t0.c57 IN ()), MAX(t0.c40, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) IS FALSE), t0.c40 COLLATE NOCASE, t0.c40 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((t0.c40)AND(t0.c40)))AND('#.Q奚ty>8T')))OR(CASE t0.c40  WHEN t0.c57 THEN t0.c57 ELSE vt1.c0 END)) WHERE ((((((t0.c0)OR(t0.c40)))OR(t0.c0)) IN ())) ORDER BY (((0.10207247557912524, t0.c0, '')) NOT BETWEEN (((t0.c57 IN ()), MAX(t0.c40, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) IS FALSE), t0.c40 COLLATE NOCASE, t0.c40 COLLATE NOCASE)))  NULLS LAST;
SELECT * FROM v0, t0 WHERE (v0.c2) ORDER BY CASE WHEN TYPEOF(t0.c0) THEN -4.18256122E8 ELSE ((t0.c40)%(t0.c40)) END ASC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN TYPEOF(t0.c0) THEN -4.18256122E8 ELSE ((t0.c40)%(t0.c40)) END ASC);
SELECT * FROM v0, t0 WHERE (v0.c2) ORDER BY CASE WHEN TYPEOF(t0.c0) THEN -4.18256122E8 ELSE ((t0.c40)%(t0.c40)) END ASC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN TYPEOF(t0.c0) THEN -4.18256122E8 ELSE ((t0.c40)%(t0.c40)) END ASC);
SELECT * FROM v0, t0 WHERE (v0.c2) ORDER BY CASE WHEN TYPEOF(t0.c0) THEN -4.18256122E8 ELSE ((t0.c40)%(t0.c40)) END ASC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND (((v0.c2 IN (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND (((v0.c2 IN (v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND (((v0.c2 IN (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND (((v0.c2 IN (v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND (((v0.c2 IN (v0.c1))))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((TRIM(vt1.c0, vt1.c0))IS(((vt1.c0)AND(t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0, vt1.c0))IS(((vt1.c0)AND(t0.c40))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((TRIM(vt1.c0, vt1.c0))IS(((vt1.c0)AND(t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0, vt1.c0))IS(((vt1.c0)AND(t0.c40))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((TRIM(vt1.c0, vt1.c0))IS(((vt1.c0)AND(t0.c40)))));
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST((- (vt0.c1)) AS INTEGER)) ORDER BY CAST(((((((((v0.c2)AND(t0.c0)))OR(-1965060347)))AND(v0.c0)))OR(v0.c1)) AS INTEGER), (t0.c57 IN (((t0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST(((((((((v0.c2)AND(t0.c0)))OR(-1965060347)))AND(v0.c0)))OR(v0.c1)) AS INTEGER), (t0.c57 IN (((t0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST((- (vt0.c1)) AS INTEGER)) ORDER BY CAST(((((((((v0.c2)AND(t0.c0)))OR(-1965060347)))AND(v0.c0)))OR(v0.c1)) AS INTEGER), (t0.c57 IN (((t0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST(((((((((v0.c2)AND(t0.c0)))OR(-1965060347)))AND(v0.c0)))OR(v0.c1)) AS INTEGER), (t0.c57 IN (((t0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST((- (vt0.c1)) AS INTEGER)) ORDER BY CAST(((((((((v0.c2)AND(t0.c0)))OR(-1965060347)))AND(v0.c0)))OR(v0.c1)) AS INTEGER), (t0.c57 IN (((t0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0, vt1, vt0 WHERE (CAST(((((v0.c0)AND(v0.c2)))AND(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c2)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt1, vt0 WHERE (CAST(((((v0.c0)AND(v0.c2)))AND(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c2)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt1, vt0 WHERE (CAST(((((v0.c0)AND(v0.c2)))AND(t0.c0)) AS INTEGER));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((-2009577467, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c1, v0.c1)) BETWEEN ((-2009577467, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((-2009577467, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c1, v0.c1)) BETWEEN ((-2009577467, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((-2009577467, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY CAST(NULL AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((((vt1.c0)<(vt1.c0))) BETWEEN ((((vt0.c0, t0.c57, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, v0.c2, v0.c1)))) AND (((((((((v0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(t0.c40)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0))) BETWEEN ((((vt0.c0, t0.c57, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, v0.c2, v0.c1)))) AND (((((((((v0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(t0.c40)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, v0, t0);
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((((vt1.c0)<(vt1.c0))) BETWEEN ((((vt0.c0, t0.c57, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, v0.c2, v0.c1)))) AND (((((((((v0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(t0.c40)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0))) BETWEEN ((((vt0.c0, t0.c57, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, v0.c2, v0.c1)))) AND (((((((((v0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(t0.c40)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, v0, t0);
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((((vt1.c0)<(vt1.c0))) BETWEEN ((((vt0.c0, t0.c57, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, v0.c2, v0.c1)))) AND (((((((((v0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(t0.c40)))OR(vt0.c1)))));
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (0.919564749877627) ORDER BY ((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((0.919564749877627) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) COLLATE RTRIM);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (0.919564749877627) ORDER BY ((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((0.919564749877627) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) COLLATE RTRIM);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (0.919564749877627) ORDER BY ((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0, t0, vt1, v0 WHERE ((((+ (vt0.c0))) IS TRUE)) ORDER BY CASE ((vt0.c1)LIKE(t0.c57))  WHEN (v0.c1 IN ()) THEN ((((t0.c40)OR(vt0.c0)))AND(vt0.c2)) ELSE CAST(v0.c1 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt1, v0 ORDER BY CASE ((vt0.c1)LIKE(t0.c57))  WHEN (v0.c1 IN ()) THEN ((((t0.c40)OR(vt0.c0)))AND(vt0.c2)) ELSE CAST(v0.c1 AS INTEGER) END ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, v0 WHERE ((((+ (vt0.c0))) IS TRUE)) ORDER BY CASE ((vt0.c1)LIKE(t0.c57))  WHEN (v0.c1 IN ()) THEN ((((t0.c40)OR(vt0.c0)))AND(vt0.c2)) ELSE CAST(v0.c1 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt1, v0 ORDER BY CASE ((vt0.c1)LIKE(t0.c57))  WHEN (v0.c1 IN ()) THEN ((((t0.c40)OR(vt0.c0)))AND(vt0.c2)) ELSE CAST(v0.c1 AS INTEGER) END ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, v0 WHERE ((((+ (vt0.c0))) IS TRUE)) ORDER BY CASE ((vt0.c1)LIKE(t0.c57))  WHEN (v0.c1 IN ()) THEN ((((t0.c40)OR(vt0.c0)))AND(vt0.c2)) ELSE CAST(v0.c1 AS INTEGER) END ASC;
SELECT COUNT(*) FROM vt1, t0, v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (v0.c2) AND (-9223372036854775808))) WHERE (t0.c57);
SELECT SUM(count) FROM (SELECT ALL ((t0.c57) IS TRUE)  as count FROM vt1, t0, v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (v0.c2) AND (-9223372036854775808))));
SELECT COUNT(*) FROM vt1, t0, v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (v0.c2) AND (-9223372036854775808))) WHERE (t0.c57);
SELECT SUM(count) FROM (SELECT ALL ((t0.c57) IS TRUE)  as count FROM vt1, t0, v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (v0.c2) AND (-9223372036854775808))));
SELECT COUNT(*) FROM vt1, t0, v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (v0.c2) AND (-9223372036854775808))) WHERE (t0.c57);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (((((vt1.c0))>=((vt0.c2)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c1)==(vt0.c2)))) LEFT OUTER JOIN vt1 ON (CASE vt0.c2  WHEN v0.c1 THEN v0.c1 END IN ()) WHERE (CAST((v0.c1 IN (v0.c2, vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN (v0.c2, vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((((vt1.c0))>=((vt0.c2)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c1)==(vt0.c2)))) LEFT OUTER JOIN vt1 ON (CASE vt0.c2  WHEN v0.c1 THEN v0.c1 END IN ()));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (((((vt1.c0))>=((vt0.c2)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c1)==(vt0.c2)))) LEFT OUTER JOIN vt1 ON (CASE vt0.c2  WHEN v0.c1 THEN v0.c1 END IN ()) WHERE (CAST((v0.c1 IN (v0.c2, vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN (v0.c2, vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((((vt1.c0))>=((vt0.c2)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c1)==(vt0.c2)))) LEFT OUTER JOIN vt1 ON (CASE vt0.c2  WHEN v0.c1 THEN v0.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.10899086182117756)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.10899086182117756)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.10899086182117756)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.10899086182117756)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.10899086182117756)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE ((((((- (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((0.3268747102300924) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((0.3268747102300924) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((- (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((0.3268747102300924) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((0.3268747102300924) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((- (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((0.3268747102300924) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON ((((v0.c1)>(v0.c2))) ISNULL) WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((((v0.c1)>(v0.c2))) ISNULL));
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON ((((v0.c1)>(v0.c2))) ISNULL) WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((((v0.c1)>(v0.c2))) ISNULL));
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON ((((v0.c1)>(v0.c2))) ISNULL) WHERE (v0.c2);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c2)-(t0.c40)))<=(vt0.c2 COLLATE RTRIM)) WHERE (((((t0.c57)IS NOT(vt1.c0)))%((('-2009577467') NOT NULL)))) ORDER BY ((((NULL)/(v0.c1))) NOT BETWEEN ((((t0.c40)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2)))) AND ((((vt1.c0, t0.c40, vt0.c2))>((v0.c2, vt0.c2, v0.c1))))), ((((t0.c57, vt0.c2, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, t0.c40)) AND ((v0.c0, 0xffffffffaa500cf1, vt1.c0))) IN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57)IS NOT(vt1.c0)))%((('-2009577467') NOT NULL)))) IS TRUE)  as count FROM vt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c2)-(t0.c40)))<=(vt0.c2 COLLATE RTRIM)) ORDER BY ((((NULL)/(v0.c1))) NOT BETWEEN ((((t0.c40)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2)))) AND ((((vt1.c0, t0.c40, vt0.c2))>((v0.c2, vt0.c2, v0.c1))))), ((((t0.c57, vt0.c2, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, t0.c40)) AND ((v0.c0, 0Xffffffffaa500cf1, vt1.c0))) IN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c2)-(t0.c40)))<=(vt0.c2 COLLATE RTRIM)) WHERE (((((t0.c57)IS NOT(vt1.c0)))%((('-2009577467') NOT NULL)))) ORDER BY ((((NULL)/(v0.c1))) NOT BETWEEN ((((t0.c40)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2)))) AND ((((vt1.c0, t0.c40, vt0.c2))>((v0.c2, vt0.c2, v0.c1))))), ((((t0.c57, vt0.c2, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, t0.c40)) AND ((v0.c0, 0xffffffffaa500cf1, vt1.c0))) IN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c57)IS NOT(vt1.c0)))%((('-2009577467') NOT NULL)))) IS TRUE)  as count FROM vt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c2)-(t0.c40)))<=(vt0.c2 COLLATE RTRIM)) ORDER BY ((((NULL)/(v0.c1))) NOT BETWEEN ((((t0.c40)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2)))) AND ((((vt1.c0, t0.c40, vt0.c2))>((v0.c2, vt0.c2, v0.c1))))), ((((t0.c57, vt0.c2, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, t0.c40)) AND ((v0.c0, 0Xffffffffaa500cf1, vt1.c0))) IN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c2)-(t0.c40)))<=(vt0.c2 COLLATE RTRIM)) WHERE (((((t0.c57)IS NOT(vt1.c0)))%((('-2009577467') NOT NULL)))) ORDER BY ((((NULL)/(v0.c1))) NOT BETWEEN ((((t0.c40)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2)))) AND ((((vt1.c0, t0.c40, vt0.c2))>((v0.c2, vt0.c2, v0.c1))))), ((((t0.c57, vt0.c2, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, t0.c40)) AND ((v0.c0, 0xffffffffaa500cf1, vt1.c0))) IN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((t0.c40 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c40 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0, t0);
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((t0.c40 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c40 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0, t0);
SELECT COUNT(*) FROM vt1, vt0, v0, t0 WHERE (((t0.c40 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM v0, t0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c1 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON NULL WHERE (UNLIKELY(((t0.c57)==(vt0.c1)))) ORDER BY (NOT (UPPER(x''))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c57)=(vt0.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c1 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON NULL ORDER BY (NOT (UPPER(x''))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c1 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON NULL WHERE (UNLIKELY(((t0.c57)==(vt0.c1)))) ORDER BY (NOT (UPPER(x''))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c57)=(vt0.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c1 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON NULL ORDER BY (NOT (UPPER(x''))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c1 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt0 ON NULL WHERE (UNLIKELY(((t0.c57)==(vt0.c1)))) ORDER BY (NOT (UPPER(x''))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c40)) AS TEXT)) ORDER BY ((((t0.c40) IS FALSE))<<(NULLIF(x'56c90cf2', NULL))), v0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c40)) AS TEXT)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((((t0.c40) IS FALSE))<<(NULLIF(x'56c90cf2', NULL))), v0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c40)) AS TEXT)) ORDER BY ((((t0.c40) IS FALSE))<<(NULLIF(x'56c90cf2', NULL))), v0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c40)) AS TEXT)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((((t0.c40) IS FALSE))<<(NULLIF(x'56c90cf2', NULL))), v0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c40)) AS TEXT)) ORDER BY ((((t0.c40) IS FALSE))<<(NULLIF(x'56c90cf2', NULL))), v0.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c57)<>(v0.c2)))) AND ((((vt0.c2)+(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c57)!=(v0.c2)))) AND ((((vt0.c2)+(v0.c1)))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c57)<>(v0.c2)))) AND ((((vt0.c2)+(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c57)!=(v0.c2)))) AND ((((vt0.c2)+(v0.c1)))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c57)<>(v0.c2)))) AND ((((vt0.c2)+(v0.c1))))));
SELECT * FROM vt0 WHERE ((((vt0.c2) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c2) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c2) NOTNULL) IN ()));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((t0.c57))<((((vt0.c2) ISNULL))))) ORDER BY ((rtreenode(v0.c2, vt0.c2))<=(CASE WHEN v0.c1 THEN v0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c57))<((((vt0.c2) ISNULL))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((rtreenode(v0.c2, vt0.c2))<=(CASE WHEN v0.c1 THEN v0.c2 END)) ASC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((t0.c57))<((((vt0.c2) ISNULL))))) ORDER BY ((rtreenode(v0.c2, vt0.c2))<=(CASE WHEN v0.c1 THEN v0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c57))<((((vt0.c2) ISNULL))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((rtreenode(v0.c2, vt0.c2))<=(CASE WHEN v0.c1 THEN v0.c2 END)) ASC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((t0.c57))<((((vt0.c2) ISNULL))))) ORDER BY ((rtreenode(v0.c2, vt0.c2))<=(CASE WHEN v0.c1 THEN v0.c2 END)) ASC;
SELECT ALL * FROM v0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 END) NOT BETWEEN ((v0.c2 IN ())) AND (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2))))) ORDER BY (((v0.c2))>=((NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt0.c1 END) NOT BETWEEN ((v0.c2 IN ())) AND (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((v0.c2))>=((NULL))) ASC);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 END) NOT BETWEEN ((v0.c2 IN ())) AND (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2))))) ORDER BY (((v0.c2))>=((NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt0.c1 END) NOT BETWEEN ((v0.c2 IN ())) AND (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((v0.c2))>=((NULL))) ASC);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 END) NOT BETWEEN ((v0.c2 IN ())) AND (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2))))) ORDER BY (((v0.c2))>=((NULL))) ASC;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1)GLOB(vt0.c2)) IN ())) ORDER BY ((((((vt1.c0)) BETWEEN (('')) AND ((t0.c40)))))>=((((t0.c57)>(t0.c40)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)GLOB(vt0.c2)) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((vt1.c0)) BETWEEN (('')) AND ((t0.c40)))))>=((((t0.c57)>(t0.c40))))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1)GLOB(vt0.c2)) IN ())) ORDER BY ((((((vt1.c0)) BETWEEN (('')) AND ((t0.c40)))))>=((((t0.c57)>(t0.c40)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)GLOB(vt0.c2)) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((vt1.c0)) BETWEEN (('')) AND ((t0.c40)))))>=((((t0.c57)>(t0.c40))))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1)GLOB(vt0.c2)) IN ())) ORDER BY ((((((vt1.c0)) BETWEEN (('')) AND ((t0.c40)))))>=((((t0.c57)>(t0.c40)))));
SELECT COUNT(*) FROM v0, t0, vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)<=(vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)<=(vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0, vt0, vt1);
SELECT COUNT(*) FROM v0, t0, vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)<=(vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)<=(vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0, vt0, vt1);
SELECT COUNT(*) FROM v0, t0, vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)<=(vt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, vt1, v0 NATURAL JOIN t0 WHERE (((t0.c0 IN (v0.c2)) IN ())) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN (v0.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1, v0 NOT INDEXED NATURAL JOIN t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM vt0, vt1, v0 NATURAL JOIN t0 WHERE (((t0.c0 IN (v0.c2)) IN ())) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN (v0.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1, v0 NOT INDEXED NATURAL JOIN t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM vt0, vt1, v0 NATURAL JOIN t0 WHERE (((t0.c0 IN (v0.c2)) IN ())) ORDER BY t0.c0;
SELECT ALL * FROM t0, vt1 WHERE ((((((t0.c0, vt1.c0, t0.c57))>=((t0.c57, t0.c40, t0.c57)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, vt1.c0, t0.c57))>=((t0.c57, t0.c40, t0.c57)))) IS FALSE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((((t0.c0, vt1.c0, t0.c57))>=((t0.c57, t0.c40, t0.c57)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, vt1.c0, t0.c57))>=((t0.c57, t0.c40, t0.c57)))) IS FALSE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((((t0.c0, vt1.c0, t0.c57))>=((t0.c57, t0.c40, t0.c57)))) IS FALSE));
SELECT * FROM t0, vt0, v0, vt1 WHERE (CASE WHEN (NOT (x'')) THEN ((vt0.c1) IS TRUE) ELSE (('f^b9wN')>=(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (x'')) THEN ((vt0.c1) IS TRUE) ELSE (('f^b9wN')>=(vt0.c2)) END) IS TRUE)  as count FROM t0, vt0, v0, vt1);
SELECT * FROM t0, vt0, v0, vt1 WHERE (CASE WHEN (NOT (x'')) THEN ((vt0.c1) IS TRUE) ELSE (('f^b9wN')>=(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (x'')) THEN ((vt0.c1) IS TRUE) ELSE (('f^b9wN')>=(vt0.c2)) END) IS TRUE)  as count FROM t0, vt0, v0, vt1);
SELECT * FROM t0, vt0, v0, vt1 WHERE (CASE WHEN (NOT (x'')) THEN ((vt0.c1) IS TRUE) ELSE (('f^b9wN')>=(vt0.c2)) END);
SELECT * FROM vt0 WHERE ((((((~ (vt0.c1)))OR(vt0.c1 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY (((((vt0.c1)<(0.7074795378294756))))=(((((('FALSE')AND(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c1)))OR(vt0.c1 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)<(0.7074795378294756))))=(((((('FALSE')AND(vt0.c0)))OR(vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((((((~ (vt0.c1)))OR(vt0.c1 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY (((((vt0.c1)<(0.7074795378294756))))=(((((('FALSE')AND(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c1)))OR(vt0.c1 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)<(0.7074795378294756))))=(((((('FALSE')AND(vt0.c0)))OR(vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((((((~ (vt0.c1)))OR(vt0.c1 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY (((((vt0.c1)<(0.7074795378294756))))=(((((('FALSE')AND(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))/(((((((((t0.c40)AND(t0.c0)))AND(t0.c0)))OR(t0.c40)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))/(((((((((t0.c40)AND(t0.c0)))AND(t0.c0)))OR(t0.c40)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))/(((((((((t0.c40)AND(t0.c0)))AND(t0.c0)))OR(t0.c40)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))/(((((((((t0.c40)AND(t0.c0)))AND(t0.c0)))OR(t0.c40)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))/(((((((((t0.c40)AND(t0.c0)))AND(t0.c0)))OR(t0.c40)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0, v0, vt0 WHERE (t0.c40);
SELECT SUM(count) FROM (SELECT ALL ((t0.c40) IS TRUE)  as count FROM vt1, t0, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, v0, vt0 WHERE (t0.c40);
SELECT SUM(count) FROM (SELECT ALL ((t0.c40) IS TRUE)  as count FROM vt1, t0, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, v0, vt0 WHERE (t0.c40);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c2 AS INTEGER))/(v0.c1 COLLATE RTRIM)) WHERE (v0.c1) ORDER BY (vt1.c0 IN (((vt0.c0)!=(v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c2 AS INTEGER))/(v0.c1 COLLATE RTRIM)) ORDER BY (vt1.c0 IN (((vt0.c0)!=(v0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c2 AS INTEGER))/(v0.c1 COLLATE RTRIM)) WHERE (v0.c1) ORDER BY (vt1.c0 IN (((vt0.c0)!=(v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c2 AS INTEGER))/(v0.c1 COLLATE RTRIM)) ORDER BY (vt1.c0 IN (((vt0.c0)!=(v0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c2 AS INTEGER))/(v0.c1 COLLATE RTRIM)) WHERE (v0.c1) ORDER BY (vt1.c0 IN (((vt0.c0)!=(v0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t0, vt1 WHERE (v0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c57)) AND ((0.06899557068453743))))>((t0.c0 IN (t0.c57))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0, t0, vt1 ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c57)) AND ((0.06899557068453743))))>((t0.c0 IN (t0.c57)))));
SELECT ALL * FROM v0, vt0, t0, vt1 WHERE (v0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c57)) AND ((0.06899557068453743))))>((t0.c0 IN (t0.c57))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0, t0, vt1 ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c57)) AND ((0.06899557068453743))))>((t0.c0 IN (t0.c57)))));
SELECT ALL * FROM v0, vt0, t0, vt1 WHERE (v0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c57)) AND ((0.06899557068453743))))>((t0.c0 IN (t0.c57))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((+ (t0.c57)) IN ()) INNER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY WHERE (((((((vt0.c2)OR(t0.c57)))AND(t0.c57))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)OR(t0.c57)))AND(t0.c57))) ISNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((+ (t0.c57)) IN ()) INNER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((+ (t0.c57)) IN ()) INNER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY WHERE (((((((vt0.c2)OR(t0.c57)))AND(t0.c57))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)OR(t0.c57)))AND(t0.c57))) ISNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((+ (t0.c57)) IN ()) INNER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((+ (t0.c57)) IN ()) INNER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY WHERE (((((((vt0.c2)OR(t0.c57)))AND(t0.c57))) ISNULL));
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) WHERE (CAST(vt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY 0X244c1d4c;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) ORDER BY 0x244c1d4c);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) WHERE (CAST(vt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY 0X244c1d4c;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) ORDER BY 0x244c1d4c);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN CAST(NULL AS BLOB) THEN t0.c57 COLLATE RTRIM ELSE (~ (t0.c40)) END) ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN (~ (t0.c40)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(NULL AS BLOB) THEN t0.c57 COLLATE RTRIM ELSE (~ (t0.c40)) END) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN (~ (t0.c40)) END);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN CAST(NULL AS BLOB) THEN t0.c57 COLLATE RTRIM ELSE (~ (t0.c40)) END) ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN (~ (t0.c40)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(NULL AS BLOB) THEN t0.c57 COLLATE RTRIM ELSE (~ (t0.c40)) END) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN (~ (t0.c40)) END);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN CAST(NULL AS BLOB) THEN t0.c57 COLLATE RTRIM ELSE (~ (t0.c40)) END) ORDER BY CASE WHEN CAST(x'' AS TEXT) THEN (~ (t0.c40)) END;
SELECT * FROM vt1 WHERE (((~ (0.9348157318259899)) IN ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (0.9348157318259899)) IN ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((~ (0.9348157318259899)) IN ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (0.9348157318259899)) IN ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((~ (0.9348157318259899)) IN ((- (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((NOT (((-1844525741) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((-1844525741) NOT NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((NOT (((-1844525741) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((-1844525741) NOT NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((NOT (((-1844525741) NOT NULL))));
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)) IN ('1244531515', ((84228565)==(0.5117695146542539))))) ORDER BY ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)) IN ('1244531515', ((84228565)=(0.5117695146542539))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)) IN ('1244531515', ((84228565)==(0.5117695146542539))))) ORDER BY ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)) IN ('1244531515', ((84228565)=(0.5117695146542539))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)) IN ('1244531515', ((84228565)==(0.5117695146542539))))) ORDER BY ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) COLLATE BINARY ASC;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (t0.c40 IN ()) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((CAST(vt0.c2 AS NUMERIC))-('-2080182644')) WHERE ((((x'f909' IN (t0.c40)))-(((vt1.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((x'f909' IN (t0.c40)))-(((vt1.c0)+(vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (t0.c40 IN ()) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((CAST(vt0.c2 AS NUMERIC))-('-2080182644')));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (t0.c40 IN ()) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((CAST(vt0.c2 AS NUMERIC))-('-2080182644')) WHERE ((((x'f909' IN (t0.c40)))-(((vt1.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((x'f909' IN (t0.c40)))-(((vt1.c0)+(vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (t0.c40 IN ()) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((CAST(vt0.c2 AS NUMERIC))-('-2080182644')));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (t0.c40 IN ()) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((CAST(vt0.c2 AS NUMERIC))-('-2080182644')) WHERE ((((x'f909' IN (t0.c40)))-(((vt1.c0)+(vt0.c0)))));
SELECT ALL * FROM t0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((((((- ('v㫌')))OR(CAST(t0.c57 AS TEXT))))OR((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((- ('v㫌')))OR(CAST(t0.c57 AS TEXT))))OR((v0.c2 IN ())))) IS TRUE)  as count FROM t0, v0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((((((- ('v㫌')))OR(CAST(t0.c57 AS TEXT))))OR((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((- ('v㫌')))OR(CAST(t0.c57 AS TEXT))))OR((v0.c2 IN ())))) IS TRUE)  as count FROM t0, v0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((((((- ('v㫌')))OR(CAST(t0.c57 AS TEXT))))OR((v0.c2 IN ()))));
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN ((v0.c2)==(t0.c0)) THEN CAST(v0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2)=(t0.c0)) THEN CAST(v0.c1 AS BLOB) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN ((v0.c2)==(t0.c0)) THEN CAST(v0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2)=(t0.c0)) THEN CAST(v0.c1 AS BLOB) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN ((v0.c2)==(t0.c0)) THEN CAST(v0.c1 AS BLOB) END);
SELECT ALL * FROM t0, vt1 NOT INDEXED CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE)IS(((t0.c57) BETWEEN (v0.c2) AND (t0.c40)))) WHERE (((t0.c40 IN ()) IN (((t0.c57)*(t0.c57)), ((x'2ff4') NOT NULL)))) ORDER BY ((((((v0.c0)IS NOT(t0.c40)))OR(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c40 IN ()) IN (((t0.c57)*(t0.c57)), ((x'2ff4') NOT NULL)))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE)IS(((t0.c57) BETWEEN (v0.c2) AND (t0.c40)))) ORDER BY ((((((v0.c0)IS NOT(t0.c40)))OR(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 NOT INDEXED CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE)IS(((t0.c57) BETWEEN (v0.c2) AND (t0.c40)))) WHERE (((t0.c40 IN ()) IN (((t0.c57)*(t0.c57)), ((x'2ff4') NOT NULL)))) ORDER BY ((((((v0.c0)IS NOT(t0.c40)))OR(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c40 IN ()) IN (((t0.c57)*(t0.c57)), ((x'2ff4') NOT NULL)))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE)IS(((t0.c57) BETWEEN (v0.c2) AND (t0.c40)))) ORDER BY ((((((v0.c0)IS NOT(t0.c40)))OR(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 NOT INDEXED CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE)IS(((t0.c57) BETWEEN (v0.c2) AND (t0.c40)))) WHERE (((t0.c40 IN ()) IN (((t0.c57)*(t0.c57)), ((x'2ff4') NOT NULL)))) ORDER BY ((((((v0.c0)IS NOT(t0.c40)))OR(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1, v0, t0 WHERE ((CASE WHEN t0.c57 THEN v0.c1 ELSE vt1.c0 END IN (((vt1.c0) IS FALSE), ((v0.c2)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c57 THEN v0.c1 ELSE vt1.c0 END IN (((vt1.c0) IS FALSE), ((v0.c2)>(v0.c0))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT * FROM vt1, v0, t0 WHERE ((CASE WHEN t0.c57 THEN v0.c1 ELSE vt1.c0 END IN (((vt1.c0) IS FALSE), ((v0.c2)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c57 THEN v0.c1 ELSE vt1.c0 END IN (((vt1.c0) IS FALSE), ((v0.c2)>(v0.c0))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT * FROM vt1, v0, t0 WHERE ((CASE WHEN t0.c57 THEN v0.c1 ELSE vt1.c0 END IN (((vt1.c0) IS FALSE), ((v0.c2)>(v0.c0)))));
SELECT ALL * FROM t0 WHERE ((((t0.c57)<>(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c57)!=(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c57)<>(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c57)!=(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c57)<>(t0.c0)) IN ()));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER)) ORDER BY v0.c1;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON JULIANDAY(((0.19225643514775492)+(v0.c0)), (~ (v0.c2)), ((vt1.c0)|(vt0.c2))) RIGHT OUTER JOIN v0 ON (((((vt0.c2) ISNULL)))=(((((vt0.c1))<>((vt0.c1)))))) WHERE (((((v0.c2)OR(v0.c2))) NOT BETWEEN ((((v0.c2))<=((v0.c0)))) AND (((vt0.c0)LIKE(v0.c1))))) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0)&(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)OR(v0.c2))) NOT BETWEEN ((((v0.c2))<=((v0.c0)))) AND (((vt0.c0)LIKE(v0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON JULIANDAY(((0.19225643514775492)+(v0.c0)), (~ (v0.c2)), ((vt1.c0)|(vt0.c2))) RIGHT OUTER JOIN v0 ON (((((vt0.c2) ISNULL)))=(((((vt0.c1))<>((vt0.c1)))))) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0)&(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON JULIANDAY(((0.19225643514775492)+(v0.c0)), (~ (v0.c2)), ((vt1.c0)|(vt0.c2))) RIGHT OUTER JOIN v0 ON (((((vt0.c2) ISNULL)))=(((((vt0.c1))<>((vt0.c1)))))) WHERE (((((v0.c2)OR(v0.c2))) NOT BETWEEN ((((v0.c2))<=((v0.c0)))) AND (((vt0.c0)LIKE(v0.c1))))) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0)&(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)OR(v0.c2))) NOT BETWEEN ((((v0.c2))<=((v0.c0)))) AND (((vt0.c0)LIKE(v0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON JULIANDAY(((0.19225643514775492)+(v0.c0)), (~ (v0.c2)), ((vt1.c0)|(vt0.c2))) RIGHT OUTER JOIN v0 ON (((((vt0.c2) ISNULL)))=(((((vt0.c1))<>((vt0.c1)))))) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0)&(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (v0.c2) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (v0.c2) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (v0.c2) ORDER BY v0.c0  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ())) BETWEEN (HEX(vt0.c2)) AND (((((((((0xffffffff867b06cb)OR('-1772178911')))OR(t0.c0)))OR(t0.c40)))AND(vt0.c0)))) CROSS JOIN vt1 ON ((CAST(vt0.c2 AS TEXT)) NOT BETWEEN (((t0.c40) BETWEEN (v0.c1) AND (t0.c0))) AND (vt0.c1 COLLATE NOCASE)) INNER JOIN t0 ON (IFNULL(t0.c40, vt1.c0) IN ()) WHERE (((((CAST(vt0.c1 AS TEXT))OR((((vt0.c0)) BETWEEN (('-1948571534')) AND ((v0.c0))))))AND(((vt0.c2)!=(t0.c57)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS TEXT))OR((((vt0.c0)) BETWEEN (('-1948571534')) AND ((v0.c0))))))AND(((vt0.c2)<>(t0.c57))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ())) BETWEEN (HEX(vt0.c2)) AND (((((((((0xffffffff867b06cb)OR('-1772178911')))OR(t0.c0)))OR(t0.c40)))AND(vt0.c0)))) CROSS JOIN vt1 ON ((CAST(vt0.c2 AS TEXT)) NOT BETWEEN (((t0.c40) BETWEEN (v0.c1) AND (t0.c0))) AND (vt0.c1 COLLATE NOCASE)) INNER JOIN t0 ON (IFNULL(t0.c40, vt1.c0) IN ()));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ())) BETWEEN (HEX(vt0.c2)) AND (((((((((0xffffffff867b06cb)OR('-1772178911')))OR(t0.c0)))OR(t0.c40)))AND(vt0.c0)))) CROSS JOIN vt1 ON ((CAST(vt0.c2 AS TEXT)) NOT BETWEEN (((t0.c40) BETWEEN (v0.c1) AND (t0.c0))) AND (vt0.c1 COLLATE NOCASE)) INNER JOIN t0 ON (IFNULL(t0.c40, vt1.c0) IN ()) WHERE (((((CAST(vt0.c1 AS TEXT))OR((((vt0.c0)) BETWEEN (('-1948571534')) AND ((v0.c0))))))AND(((vt0.c2)!=(t0.c57)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS TEXT))OR((((vt0.c0)) BETWEEN (('-1948571534')) AND ((v0.c0))))))AND(((vt0.c2)<>(t0.c57))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ())) BETWEEN (HEX(vt0.c2)) AND (((((((((0xffffffff867b06cb)OR('-1772178911')))OR(t0.c0)))OR(t0.c40)))AND(vt0.c0)))) CROSS JOIN vt1 ON ((CAST(vt0.c2 AS TEXT)) NOT BETWEEN (((t0.c40) BETWEEN (v0.c1) AND (t0.c0))) AND (vt0.c1 COLLATE NOCASE)) INNER JOIN t0 ON (IFNULL(t0.c40, vt1.c0) IN ()));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ())) BETWEEN (HEX(vt0.c2)) AND (((((((((0xffffffff867b06cb)OR('-1772178911')))OR(t0.c0)))OR(t0.c40)))AND(vt0.c0)))) CROSS JOIN vt1 ON ((CAST(vt0.c2 AS TEXT)) NOT BETWEEN (((t0.c40) BETWEEN (v0.c1) AND (t0.c0))) AND (vt0.c1 COLLATE NOCASE)) INNER JOIN t0 ON (IFNULL(t0.c40, vt1.c0) IN ()) WHERE (((((CAST(vt0.c1 AS TEXT))OR((((vt0.c0)) BETWEEN (('-1948571534')) AND ((v0.c0))))))AND(((vt0.c2)!=(t0.c57)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(0.9183018148972035)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(0.9183018148972035)) END  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(0.9183018148972035)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(0.9183018148972035)) END  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(0.9183018148972035)) END  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC)) NOTNULL)) ORDER BY '' COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY '' COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC)) NOTNULL)) ORDER BY '' COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY '' COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC)) NOTNULL)) ORDER BY '' COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((('6') BETWEEN (t0.c0 COLLATE RTRIM) AND (((vt0.c1)*(v0.c0))))) ORDER BY ((((((((v0.c0)OR((v0.c0 IN ()))))AND(CAST(0.0664652790518413 AS REAL))))AND(LIKELY(v0.c1))))AND(((v0.c1) IS TRUE)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('6') BETWEEN (t0.c0 COLLATE RTRIM) AND (((vt0.c1)*(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY ((((((((v0.c0)OR((v0.c0 IN ()))))AND(CAST(0.0664652790518413 AS REAL))))AND(LIKELY(v0.c1))))AND(((v0.c1) IS TRUE)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((('6') BETWEEN (t0.c0 COLLATE RTRIM) AND (((vt0.c1)*(v0.c0))))) ORDER BY ((((((((v0.c0)OR((v0.c0 IN ()))))AND(CAST(0.0664652790518413 AS REAL))))AND(LIKELY(v0.c1))))AND(((v0.c1) IS TRUE)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('6') BETWEEN (t0.c0 COLLATE RTRIM) AND (((vt0.c1)*(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY ((((((((v0.c0)OR((v0.c0 IN ()))))AND(CAST(0.0664652790518413 AS REAL))))AND(LIKELY(v0.c1))))AND(((v0.c1) IS TRUE)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((('6') BETWEEN (t0.c0 COLLATE RTRIM) AND (((vt0.c1)*(v0.c0))))) ORDER BY ((((((((v0.c0)OR((v0.c0 IN ()))))AND(CAST(0.0664652790518413 AS REAL))))AND(LIKELY(v0.c1))))AND(((v0.c1) IS TRUE)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN -672318518 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)<((vt1.c0 IN ()))) WHERE (HEX(DISTINCT CAST(vt1.c0 AS TEXT))) ORDER BY (((vt1.c0)<<(v0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN -672318518 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)<((vt1.c0 IN ()))) ORDER BY (((vt1.c0)<<(v0.c1)) IN ()));
SELECT * FROM vt1 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN -672318518 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)<((vt1.c0 IN ()))) WHERE (HEX(DISTINCT CAST(vt1.c0 AS TEXT))) ORDER BY (((vt1.c0)<<(v0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN -672318518 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)<((vt1.c0 IN ()))) ORDER BY (((vt1.c0)<<(v0.c1)) IN ()));
SELECT * FROM vt1 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN -672318518 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)<((vt1.c0 IN ()))) WHERE (HEX(DISTINCT CAST(vt1.c0 AS TEXT))) ORDER BY (((vt1.c0)<<(v0.c1)) IN ());
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) ISNULL) AS NUMERIC));
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((((((v0.c0)AND(t0.c0)))OR(v0.c2))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((((((v0.c0)AND(t0.c0)))OR(v0.c2))))));
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((((((v0.c0)AND(t0.c0)))OR(v0.c2))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((((((v0.c0)AND(t0.c0)))OR(v0.c2))))));
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((((((v0.c0)AND(t0.c0)))OR(v0.c2))))) WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM v0 WHERE (CASE WHEN '1142611265' THEN CAST(v0.c1 AS REAL) ELSE (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) END) ORDER BY ((0.9459290656831292) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1142611265' THEN CAST(v0.c1 AS REAL) ELSE (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0 ORDER BY ((0.9459290656831292) NOT NULL));
SELECT ALL * FROM v0 WHERE (CASE WHEN '1142611265' THEN CAST(v0.c1 AS REAL) ELSE (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) END) ORDER BY ((0.9459290656831292) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1142611265' THEN CAST(v0.c1 AS REAL) ELSE (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0 ORDER BY ((0.9459290656831292) NOT NULL));
SELECT ALL * FROM v0 WHERE (CASE WHEN '1142611265' THEN CAST(v0.c1 AS REAL) ELSE (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) END) ORDER BY ((0.9459290656831292) NOT NULL);
SELECT * FROM v0, vt1, vt0 WHERE (CAST(((vt1.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (CAST(((vt1.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (CAST(((vt1.c0) NOTNULL) AS BLOB));
SELECT * FROM v0 INNER JOIN vt0 ON ((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(t0.c0)))AND(t0.c57)))>=(x'')) CROSS JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c57) AND (v0.c0))))>=((((((((((v0.c0)AND('<d	<yp')))AND(t0.c57)))OR(vt0.c1)))OR(vt0.c0))))) CROSS JOIN vt1 ON ((UPPER(DISTINCT v0.c2))>>(CASE v0.c1  WHEN v0.c0 THEN '' END)) WHERE ((((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, vt0.c0, t0.c40))))>=(TRIM(vt0.c2)))) ORDER BY (((((v0.c2)IS NOT(t0.c40))))=((((vt0.c1) BETWEEN (v0.c2) AND (t0.c57))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, vt0.c0, t0.c40))))>=(TRIM(vt0.c2)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(t0.c0)))AND(t0.c57)))>=(x'')) CROSS JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c57) AND (v0.c0))))>=((((((((((v0.c0)AND('<d	<yp')))AND(t0.c57)))OR(vt0.c1)))OR(vt0.c0))))) CROSS JOIN vt1 ON ((UPPER(DISTINCT v0.c2))>>(CASE v0.c1  WHEN v0.c0 THEN '' END)) ORDER BY (((((v0.c2)IS NOT(t0.c40))))==((((vt0.c1) BETWEEN (v0.c2) AND (t0.c57))))) ASC);
SELECT * FROM v0 INNER JOIN vt0 ON ((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(t0.c0)))AND(t0.c57)))>=(x'')) CROSS JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c57) AND (v0.c0))))>=((((((((((v0.c0)AND('<d	<yp')))AND(t0.c57)))OR(vt0.c1)))OR(vt0.c0))))) CROSS JOIN vt1 ON ((UPPER(DISTINCT v0.c2))>>(CASE v0.c1  WHEN v0.c0 THEN '' END)) WHERE ((((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, vt0.c0, t0.c40))))>=(TRIM(vt0.c2)))) ORDER BY (((((v0.c2)IS NOT(t0.c40))))=((((vt0.c1) BETWEEN (v0.c2) AND (t0.c57))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, vt0.c0, t0.c40))))>=(TRIM(vt0.c2)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(t0.c0)))AND(t0.c57)))>=(x'')) CROSS JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c57) AND (v0.c0))))>=((((((((((v0.c0)AND('<d	<yp')))AND(t0.c57)))OR(vt0.c1)))OR(vt0.c0))))) CROSS JOIN vt1 ON ((UPPER(DISTINCT v0.c2))>>(CASE v0.c1  WHEN v0.c0 THEN '' END)) ORDER BY (((((v0.c2)IS NOT(t0.c40))))==((((vt0.c1) BETWEEN (v0.c2) AND (t0.c57))))) ASC);
SELECT * FROM v0 INNER JOIN vt0 ON ((((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(t0.c0)))AND(t0.c57)))>=(x'')) CROSS JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c57) AND (v0.c0))))>=((((((((((v0.c0)AND('<d	<yp')))AND(t0.c57)))OR(vt0.c1)))OR(vt0.c0))))) CROSS JOIN vt1 ON ((UPPER(DISTINCT v0.c2))>>(CASE v0.c1  WHEN v0.c0 THEN '' END)) WHERE ((((((NULL, x'', vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, vt0.c0, t0.c40))))>=(TRIM(vt0.c2)))) ORDER BY (((((v0.c2)IS NOT(t0.c40))))=((((vt0.c1) BETWEEN (v0.c2) AND (t0.c57))))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM);
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))||(CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))||(CAST('' AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))||(CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))||(CAST('' AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))||(CAST('' AS NUMERIC))));
SELECT * FROM t0, vt1, vt0 WHERE (((t0.c0 IN (t0.c0)) IN ())) ORDER BY CAST(0.804296825178396 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(0.804296825178396 AS REAL) ASC  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((t0.c0 IN (t0.c0)) IN ())) ORDER BY CAST(0.804296825178396 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(0.804296825178396 AS REAL) ASC  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((t0.c0 IN (t0.c0)) IN ())) ORDER BY CAST(0.804296825178396 AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((NULL)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))*(UNLIKELY(x''))));
SELECT SUM(count) FROM (SELECT (((((((NULL)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))*(UNLIKELY(x'')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((NULL)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))*(UNLIKELY(x''))));
SELECT SUM(count) FROM (SELECT (((((((NULL)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))*(UNLIKELY(x'')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((NULL)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))*(UNLIKELY(x''))));
SELECT ALL * FROM t0, v0 WHERE (((t0.c57 IN (v0.c0, t0.c40)) IN ())) ORDER BY 0x5e202ced, (((v0.c0)) NOT BETWEEN (((((v0.c1))<=((v0.c0))))) AND ((((NULL)-(t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c57 IN (v0.c0, t0.c40)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY 0x5e202ced, (((v0.c0)) NOT BETWEEN (((((v0.c1))<=((v0.c0))))) AND ((((NULL)-(t0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((t0.c57 IN (v0.c0, t0.c40)) IN ())) ORDER BY 0x5e202ced, (((v0.c0)) NOT BETWEEN (((((v0.c1))<=((v0.c0))))) AND ((((NULL)-(t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c57 IN (v0.c0, t0.c40)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY 0x5e202ced, (((v0.c0)) NOT BETWEEN (((((v0.c1))<=((v0.c0))))) AND ((((NULL)-(t0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)+(vt0.c1)))OR(((vt0.c1)IS(vt1.c0)))))OR(TRIM(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)+(vt0.c1)))OR(((vt0.c1)IS(vt1.c0)))))OR(TRIM(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)+(vt0.c1)))OR(((vt0.c1)IS(vt1.c0)))))OR(TRIM(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)+(vt0.c1)))OR(((vt0.c1)IS(vt1.c0)))))OR(TRIM(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)+(vt0.c1)))OR(((vt0.c1)IS(vt1.c0)))))OR(TRIM(DISTINCT v0.c0))));
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT t0.c57 COLLATE RTRIM, 0.44170761083066123));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT t0.c57 COLLATE RTRIM, 0.44170761083066123)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT t0.c57 COLLATE RTRIM, 0.44170761083066123));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT t0.c57 COLLATE RTRIM, 0.44170761083066123)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT t0.c57 COLLATE RTRIM, 0.44170761083066123));
SELECT * FROM t0, v0 NOT INDEXED, vt0 WHERE (CAST(vt0.c2 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0 NOT INDEXED, vt0 WHERE (CAST(vt0.c2 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0 NOT INDEXED, vt0 WHERE (CAST(vt0.c2 COLLATE RTRIM AS TEXT));
SELECT * FROM v0, vt1, vt0, t0 WHERE (((- (t0.c0)) IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0, vt1, vt0, t0);
SELECT * FROM v0, vt1, vt0, t0 WHERE (((- (t0.c0)) IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0, vt1, vt0, t0);
SELECT * FROM v0, vt1, vt0, t0 WHERE (((- (t0.c0)) IN (v0.c0)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 406982377 END)) AND ((((t0.c40)|(vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((vt0.c0) IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 406982377 END)) AND ((((t0.c40)|(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt1.c0)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((vt0.c0) IS FALSE)))) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 406982377 END)) AND ((((t0.c40)|(vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((vt0.c0) IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 406982377 END)) AND ((((t0.c40)|(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt1.c0)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((vt0.c0) IS FALSE)))) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 406982377 END)) AND ((((t0.c40)|(vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((vt0.c0) IS FALSE)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((- (t0.c40))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c40))) IS FALSE)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((- (t0.c40))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c40))) IS FALSE)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((- (t0.c40))) IS FALSE));
SELECT * FROM t0, vt1, v0, vt0 WHERE ((((t0.c40 IN ())) IS FALSE)) ORDER BY (((((vt0.c1)=(v0.c2))))=((((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY (((((vt0.c1)=(v0.c2))))=((((v0.c0)<=(v0.c0))))));
SELECT * FROM t0, vt1, v0, vt0 WHERE ((((t0.c40 IN ())) IS FALSE)) ORDER BY (((((vt0.c1)=(v0.c2))))=((((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt1, v0, vt0 ORDER BY (((((vt0.c1)=(v0.c2))))=((((v0.c0)<=(v0.c0))))));
SELECT * FROM t0, vt1, v0, vt0 WHERE ((((t0.c40 IN ())) IS FALSE)) ORDER BY (((((vt0.c1)=(v0.c2))))=((((v0.c0)<=(v0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((0.7883911091771854 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN v0 ON v0.c0 WHERE (0.783973668652852);
SELECT SUM(count) FROM (SELECT ((0.783973668652852) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CAST((0.7883911091771854 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN v0 ON v0.c0);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((0.7883911091771854 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN v0 ON v0.c0 WHERE (0.783973668652852);
SELECT SUM(count) FROM (SELECT ((0.783973668652852) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CAST((0.7883911091771854 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN v0 ON v0.c0);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((0.7883911091771854 IN ()) AS TEXT) LEFT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN v0 ON v0.c0 WHERE (0.783973668652852);
SELECT ALL COUNT(*) FROM vt1, t0, v0, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((t0.c57)LIKE('-2006918623')))))AND(v0.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))OR(((t0.c57)LIKE('-2006918623')))))AND(v0.c1))) IS TRUE)  as count FROM vt1, t0, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, v0, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((t0.c57)LIKE('-2006918623')))))AND(v0.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))OR(((t0.c57)LIKE('-2006918623')))))AND(v0.c1))) IS TRUE)  as count FROM vt1, t0, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, v0, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((t0.c57)LIKE('-2006918623')))))AND(v0.c1)));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((((vt1.c0)AND(t0.c57)))AND(t0.c40)), (((t0.c57, t0.c57, t0.c0)) NOT BETWEEN ((t0.c40, t0.c40, t0.c57)) AND ((vt1.c0, t0.c0, vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS REAL), (t0.c57 IN (vt1.c0)), ((((((((t0.c40)OR(t0.c57)))OR(t0.c40)))OR(vt1.c0)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT (((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((((vt1.c0)AND(t0.c57)))AND(t0.c40)), (((t0.c57, t0.c57, t0.c0)) NOT BETWEEN ((t0.c40, t0.c40, t0.c57)) AND ((vt1.c0, t0.c0, vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS REAL), (t0.c57 IN (vt1.c0)), ((((((((t0.c40)OR(t0.c57)))OR(t0.c40)))OR(vt1.c0)))OR(NULL)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((((vt1.c0)AND(t0.c57)))AND(t0.c40)), (((t0.c57, t0.c57, t0.c0)) NOT BETWEEN ((t0.c40, t0.c40, t0.c57)) AND ((vt1.c0, t0.c0, vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS REAL), (t0.c57 IN (vt1.c0)), ((((((((t0.c40)OR(t0.c57)))OR(t0.c40)))OR(vt1.c0)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT (((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((((vt1.c0)AND(t0.c57)))AND(t0.c40)), (((t0.c57, t0.c57, t0.c0)) NOT BETWEEN ((t0.c40, t0.c40, t0.c57)) AND ((vt1.c0, t0.c0, vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS REAL), (t0.c57 IN (vt1.c0)), ((((((((t0.c40)OR(t0.c57)))OR(t0.c40)))OR(vt1.c0)))OR(NULL)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c57, t0.c57, t0.c57)) NOT BETWEEN ((((((vt1.c0)AND(t0.c57)))AND(t0.c40)), (((t0.c57, t0.c57, t0.c0)) NOT BETWEEN ((t0.c40, t0.c40, t0.c57)) AND ((vt1.c0, t0.c0, vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS REAL), (t0.c57 IN (vt1.c0)), ((((((((t0.c40)OR(t0.c57)))OR(t0.c40)))OR(vt1.c0)))OR(NULL))))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c57)+(vt0.c0)) THEN ((((vt0.c1)OR(t0.c57)))OR(t0.c0)) END WHERE (CASE t0.c40  WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)IS(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c40) AND (t0.c40)) WHEN x'' THEN ((t0.c57)*(t0.c0)) ELSE '1805879474' END) ORDER BY (+ (t0.c0)) COLLATE NOCASE, ((CAST(vt0.c0 AS BLOB))+(CAST(t0.c40 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c40  WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)IS(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c40) AND (t0.c40)) WHEN x'' THEN ((t0.c57)*(t0.c0)) ELSE '1805879474' END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c57)+(vt0.c0)) THEN ((((vt0.c1)OR(t0.c57)))OR(t0.c0)) END ORDER BY (+ (t0.c0)) COLLATE NOCASE, ((CAST(vt0.c0 AS BLOB))+(CAST(t0.c40 AS INTEGER))) ASC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c57)+(vt0.c0)) THEN ((((vt0.c1)OR(t0.c57)))OR(t0.c0)) END WHERE (CASE t0.c40  WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)IS(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c40) AND (t0.c40)) WHEN x'' THEN ((t0.c57)*(t0.c0)) ELSE '1805879474' END) ORDER BY (+ (t0.c0)) COLLATE NOCASE, ((CAST(vt0.c0 AS BLOB))+(CAST(t0.c40 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c40  WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)IS(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c40) AND (t0.c40)) WHEN x'' THEN ((t0.c57)*(t0.c0)) ELSE '1805879474' END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c57)+(vt0.c0)) THEN ((((vt0.c1)OR(t0.c57)))OR(t0.c0)) END ORDER BY (+ (t0.c0)) COLLATE NOCASE, ((CAST(vt0.c0 AS BLOB))+(CAST(t0.c40 AS INTEGER))) ASC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE WHEN ((t0.c57)+(vt0.c0)) THEN ((((vt0.c1)OR(t0.c57)))OR(t0.c0)) END WHERE (CASE t0.c40  WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)IS(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c40) AND (t0.c40)) WHEN x'' THEN ((t0.c57)*(t0.c0)) ELSE '1805879474' END) ORDER BY (+ (t0.c0)) COLLATE NOCASE, ((CAST(vt0.c0 AS BLOB))+(CAST(t0.c40 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE ((~ ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((v0.c1 IN ())))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE ((~ ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((v0.c1 IN ())))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE ((~ ((v0.c1 IN ()))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND ('vs'))) IS TRUE) WHERE (((((vt0.c2)>(vt0.c1))) NOT NULL)) ORDER BY (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)), ((vt0.c1)<<(vt0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((0.6221384100430233)))))>((CASE v0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), v0.c1))) ASC, ((((vt0.c0) NOT BETWEEN (v0.c2) AND ('-1445506456'))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND ('vs'))) IS TRUE) ORDER BY (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)), ((vt0.c1)<<(vt0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((0.6221384100430233)))))>((CASE v0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), v0.c1))) ASC, ((((vt0.c0) NOT BETWEEN (v0.c2) AND ('-1445506456'))) NOT NULL) ASC);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND ('vs'))) IS TRUE) WHERE (((((vt0.c2)>(vt0.c1))) NOT NULL)) ORDER BY (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)), ((vt0.c1)<<(vt0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((0.6221384100430233)))))>((CASE v0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), v0.c1))) ASC, ((((vt0.c0) NOT BETWEEN (v0.c2) AND ('-1445506456'))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND ('vs'))) IS TRUE) ORDER BY (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)), ((vt0.c1)<<(vt0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((0.6221384100430233)))))>((CASE v0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), v0.c1))) ASC, ((((vt0.c0) NOT BETWEEN (v0.c2) AND ('-1445506456'))) NOT NULL) ASC);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND ('vs'))) IS TRUE) WHERE (((((vt0.c2)>(vt0.c1))) NOT NULL)) ORDER BY (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)), ((vt0.c1)<<(vt0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((0.6221384100430233)))))>((CASE v0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), v0.c1))) ASC, ((((vt0.c0) NOT BETWEEN (v0.c2) AND ('-1445506456'))) NOT NULL) ASC;
SELECT * FROM t0, vt1, vt0 WHERE ((((t0.c40)) NOT BETWEEN ((((t0.c57) NOTNULL))) AND ((CAST(t0.c57 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((t0.c40)) NOT BETWEEN ((((t0.c57) NOTNULL))) AND ((CAST(t0.c57 AS TEXT))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((t0.c40)) NOT BETWEEN ((((t0.c57) NOTNULL))) AND ((CAST(t0.c57 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((t0.c40)) NOT BETWEEN ((((t0.c57) NOTNULL))) AND ((CAST(t0.c57 AS TEXT))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((t0.c40)) NOT BETWEEN ((((t0.c57) NOTNULL))) AND ((CAST(t0.c57 AS TEXT)))));
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))%(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))%(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))%(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))%(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))%(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c57))))) ORDER BY ((vt1.c0) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c57)) BETWEEN ((vt0.c2)) AND ((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c57))))) IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY ((vt1.c0) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c57)) BETWEEN ((vt0.c2)) AND ((t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c57))))) ORDER BY ((vt1.c0) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c57)) BETWEEN ((vt0.c2)) AND ((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c57))))) IS TRUE)  as count FROM t0, v0, vt1, vt0 ORDER BY ((vt1.c0) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c57)) BETWEEN ((vt0.c2)) AND ((t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c57))))) ORDER BY ((vt1.c0) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c57)) BETWEEN ((vt0.c2)) AND ((t0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c2)))GLOB(ABS(v0.c0)))) ORDER BY (((vt0.c0 IN ()))<(vt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c2)))GLOB(ABS(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ()))<(vt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c2)))GLOB(ABS(v0.c0)))) ORDER BY (((vt0.c0 IN ()))<(vt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c2)))GLOB(ABS(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ()))<(vt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c2)))GLOB(ABS(v0.c0)))) ORDER BY (((vt0.c0 IN ()))<(vt0.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((NOT (((v0.c2)IS NOT(0.33610796341011695)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c2)IS NOT(0.33610796341011695))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((NOT (((v0.c2)IS NOT(0.33610796341011695)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c2)IS NOT(0.33610796341011695))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((NOT (((v0.c2)IS NOT(0.33610796341011695)))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((t0.c57)) NOT BETWEEN (((NOT (vt0.c2)))) AND (((~ (v0.c2))))) LEFT OUTER JOIN v0 ON TOTAL_CHANGES() FULL OUTER JOIN vt1 ON CAST(((vt1.c0)IS(vt0.c2)) AS INTEGER) WHERE (((((((vt0.c1) ISNULL))AND(CASE WHEN t0.c57 THEN vt0.c1 END)))AND(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) ISNULL))AND(CASE WHEN t0.c57 THEN vt0.c1 END)))AND(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((t0.c57)) NOT BETWEEN (((NOT (vt0.c2)))) AND (((~ (v0.c2))))) LEFT OUTER JOIN v0 ON TOTAL_CHANGES() FULL OUTER JOIN vt1 ON CAST(((vt1.c0)IS(vt0.c2)) AS INTEGER));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((t0.c57)) NOT BETWEEN (((NOT (vt0.c2)))) AND (((~ (v0.c2))))) LEFT OUTER JOIN v0 ON TOTAL_CHANGES() FULL OUTER JOIN vt1 ON CAST(((vt1.c0)IS(vt0.c2)) AS INTEGER) WHERE (((((((vt0.c1) ISNULL))AND(CASE WHEN t0.c57 THEN vt0.c1 END)))AND(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) ISNULL))AND(CASE WHEN t0.c57 THEN vt0.c1 END)))AND(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((t0.c57)) NOT BETWEEN (((NOT (vt0.c2)))) AND (((~ (v0.c2))))) LEFT OUTER JOIN v0 ON TOTAL_CHANGES() FULL OUTER JOIN vt1 ON CAST(((vt1.c0)IS(vt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM vt1, t0, v0 WHERE ((((v0.c0)-(vt1.c0)) IN (((vt1.c0)AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)-(vt1.c0)) IN (((vt1.c0)AND(v0.c1))))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE ((((v0.c0)-(vt1.c0)) IN (((vt1.c0)AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)-(vt1.c0)) IN (((vt1.c0)AND(v0.c1))))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE ((((v0.c0)-(vt1.c0)) IN (((vt1.c0)AND(v0.c1)))));
SELECT * FROM vt0, vt1, t0, v0 WHERE ((((((vt1.c0, v0.c1, v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c2, t0.c40, v0.c1, t0.c0, v0.c2)) AND ((t0.c40, t0.c0, vt1.c0, t0.c0, v0.c1)))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7575344702713275))) ORDER BY (((((((((((t0.c57, vt0.c0, v0.c2))!=((v0.c1, t0.c57, vt1.c0))))OR(((vt0.c2) ISNULL))))AND((vt0.c1 IN ()))))AND((((vt0.c0))>=((v0.c0))))))OR((((t0.c57)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, v0.c1, v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c2, t0.c40, v0.c1, t0.c0, v0.c2)) AND ((t0.c40, t0.c0, vt1.c0, t0.c0, v0.c1)))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7575344702713275))) IS TRUE)  as count FROM vt0, vt1, t0, v0 ORDER BY (((((((((((t0.c57, vt0.c0, v0.c2))<>((v0.c1, t0.c57, vt1.c0))))OR(((vt0.c2) ISNULL))))AND((vt0.c1 IN ()))))AND((((vt0.c0))>=((v0.c0))))))OR((((t0.c57)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))));
SELECT * FROM vt0, vt1, t0, v0 WHERE ((((((vt1.c0, v0.c1, v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c2, t0.c40, v0.c1, t0.c0, v0.c2)) AND ((t0.c40, t0.c0, vt1.c0, t0.c0, v0.c1)))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7575344702713275))) ORDER BY (((((((((((t0.c57, vt0.c0, v0.c2))!=((v0.c1, t0.c57, vt1.c0))))OR(((vt0.c2) ISNULL))))AND((vt0.c1 IN ()))))AND((((vt0.c0))>=((v0.c0))))))OR((((t0.c57)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, v0.c1, v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c2, t0.c40, v0.c1, t0.c0, v0.c2)) AND ((t0.c40, t0.c0, vt1.c0, t0.c0, v0.c1)))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7575344702713275))) IS TRUE)  as count FROM vt0, vt1, t0, v0 ORDER BY (((((((((((t0.c57, vt0.c0, v0.c2))<>((v0.c1, t0.c57, vt1.c0))))OR(((vt0.c2) ISNULL))))AND((vt0.c1 IN ()))))AND((((vt0.c0))>=((v0.c0))))))OR((((t0.c57)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))));
SELECT * FROM vt0, vt1, t0, v0 WHERE ((((((vt1.c0, v0.c1, v0.c0, vt1.c0, vt1.c0)) BETWEEN ((v0.c2, t0.c40, v0.c1, t0.c0, v0.c2)) AND ((t0.c40, t0.c0, vt1.c0, t0.c0, v0.c1)))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0.7575344702713275))) ORDER BY (((((((((((t0.c57, vt0.c0, v0.c2))!=((v0.c1, t0.c57, vt1.c0))))OR(((vt0.c2) ISNULL))))AND((vt0.c1 IN ()))))AND((((vt0.c0))>=((v0.c0))))))OR((((t0.c57)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) END) ORDER BY x'' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(COALESCE(DISTINCT vt1.c0, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1 ORDER BY x'' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(COALESCE(DISTINCT vt1.c0, vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) END) ORDER BY x'' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(COALESCE(DISTINCT vt1.c0, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1 ORDER BY x'' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(COALESCE(DISTINCT vt1.c0, vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) END) ORDER BY x'' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(COALESCE(DISTINCT vt1.c0, vt1.c0))) DESC;
SELECT * FROM t0 WHERE ((((t0.c57)GLOB(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c57)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c57)GLOB(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c57)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c57)GLOB(t0.c0)) IN ()));
SELECT ALL * FROM vt0, t0, v0 WHERE ((('-250449402')GLOB(((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('-250449402')GLOB(((v0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((('-250449402')GLOB(((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('-250449402')GLOB(((v0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((('-250449402')GLOB(((v0.c2) NOT NULL))));
SELECT * FROM vt1, v0, vt0 WHERE (((GLOB(v0.c2, v0.c2)) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((v0.c1)AND(vt1.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((GLOB(v0.c2, v0.c2)) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((v0.c1)AND(vt1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (((GLOB(v0.c2, v0.c2)) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((v0.c1)AND(vt1.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((GLOB(v0.c2, v0.c2)) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((v0.c1)AND(vt1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (((GLOB(v0.c2, v0.c2)) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((v0.c1)AND(vt1.c0)))OR(vt0.c1)))));
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON '-1491703171' WHERE (SQLITE_VERSION()) ORDER BY t0.c40 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON '-1491703171' ORDER BY t0.c40 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON '-1491703171' WHERE (SQLITE_VERSION()) ORDER BY t0.c40 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON '-1491703171' ORDER BY t0.c40 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON '-1491703171' WHERE (SQLITE_VERSION()) ORDER BY t0.c40 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN ((v0.c1) NOT BETWEEN (vt1.c0) AND (0.3475712211126748)) END CROSS JOIN v0 ON ((('cQ﨏') BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) INNER JOIN t0 ON t0.c40 WHERE (((t0.c57) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c57) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN ((v0.c1) NOT BETWEEN (vt1.c0) AND (0.3475712211126748)) END CROSS JOIN v0 ON ((('cQ﨏') BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) INNER JOIN t0 ON t0.c40);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN ((v0.c1) NOT BETWEEN (vt1.c0) AND (0.3475712211126748)) END CROSS JOIN v0 ON ((('cQ﨏') BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) INNER JOIN t0 ON t0.c40 WHERE (((t0.c57) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c57) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN ((v0.c1) NOT BETWEEN (vt1.c0) AND (0.3475712211126748)) END CROSS JOIN v0 ON ((('cQ﨏') BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) INNER JOIN t0 ON t0.c40);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN ((v0.c1) NOT BETWEEN (vt1.c0) AND (0.3475712211126748)) END CROSS JOIN v0 ON ((('cQ﨏') BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) INNER JOIN t0 ON t0.c40 WHERE (((t0.c57) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN v0 ON ((json_remove(v0.c2, v0.c0))+(CASE WHEN vt1.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON v0.c2 WHERE (((v0.c0)IS NOT((v0.c1 IN ())))) ORDER BY (('K') NOT BETWEEN ((((vt1.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))) AND (NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT((v0.c1 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((json_remove(v0.c2, v0.c0))+(CASE WHEN vt1.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON v0.c2 ORDER BY (('K') NOT BETWEEN ((((vt1.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))) AND (NULL)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN v0 ON ((json_remove(v0.c2, v0.c0))+(CASE WHEN vt1.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON v0.c2 WHERE (((v0.c0)IS NOT((v0.c1 IN ())))) ORDER BY (('K') NOT BETWEEN ((((vt1.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))) AND (NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT((v0.c1 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((json_remove(v0.c2, v0.c0))+(CASE WHEN vt1.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON v0.c2 ORDER BY (('K') NOT BETWEEN ((((vt1.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))) AND (NULL)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN v0 ON ((json_remove(v0.c2, v0.c0))+(CASE WHEN vt1.c0 THEN vt0.c0 END)) INNER JOIN vt0 ON v0.c2 WHERE (((v0.c0)IS NOT((v0.c1 IN ())))) ORDER BY (('K') NOT BETWEEN ((((vt1.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))) AND (NULL));
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((t0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((t0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((t0.c0 COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON ((ABS(0.0363394490224922)) NOT NULL) FULL OUTER JOIN t0 ON (((((t0.c0, vt1.c0, v0.c1, v0.c2, t0.c57)) BETWEEN ((x'9a75', NULL, t0.c57, v0.c1, v0.c0)) AND ((v0.c1, t0.c0, t0.c40, vt1.c0, 0.32765448664507857)))) IS TRUE) WHERE (v0.c1) ORDER BY t0.c40 ASC, (v0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON ((ABS(0.0363394490224922)) NOT NULL) FULL OUTER JOIN t0 ON (((((t0.c0, vt1.c0, v0.c1, v0.c2, t0.c57)) BETWEEN ((x'9a75', NULL, t0.c57, v0.c1, v0.c0)) AND ((v0.c1, t0.c0, t0.c40, vt1.c0, 0.32765448664507857)))) IS TRUE) ORDER BY t0.c40 ASC, (v0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON ((ABS(0.0363394490224922)) NOT NULL) FULL OUTER JOIN t0 ON (((((t0.c0, vt1.c0, v0.c1, v0.c2, t0.c57)) BETWEEN ((x'9a75', NULL, t0.c57, v0.c1, v0.c0)) AND ((v0.c1, t0.c0, t0.c40, vt1.c0, 0.32765448664507857)))) IS TRUE) WHERE (v0.c1) ORDER BY t0.c40 ASC, (v0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON ((ABS(0.0363394490224922)) NOT NULL) FULL OUTER JOIN t0 ON (((((t0.c0, vt1.c0, v0.c1, v0.c2, t0.c57)) BETWEEN ((x'9a75', NULL, t0.c57, v0.c1, v0.c0)) AND ((v0.c1, t0.c0, t0.c40, vt1.c0, 0.32765448664507857)))) IS TRUE) ORDER BY t0.c40 ASC, (v0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON ((ABS(0.0363394490224922)) NOT NULL) FULL OUTER JOIN t0 ON (((((t0.c0, vt1.c0, v0.c1, v0.c2, t0.c57)) BETWEEN ((x'9a75', NULL, t0.c57, v0.c1, v0.c0)) AND ((v0.c1, t0.c0, t0.c40, vt1.c0, 0.32765448664507857)))) IS TRUE) WHERE (v0.c1) ORDER BY t0.c40 ASC, (v0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c57 COLLATE BINARY)>=(((t0.c57) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c57 IN (t0.c0)))==(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c57 COLLATE BINARY)>=(((t0.c57) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c57 IN (t0.c0)))=(t0.c0)) DESC);
SELECT * FROM t0 WHERE (((t0.c57 COLLATE BINARY)>=(((t0.c57) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c57 IN (t0.c0)))==(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c57 COLLATE BINARY)>=(((t0.c57) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c57 IN (t0.c0)))=(t0.c0)) DESC);
SELECT * FROM t0 WHERE (((t0.c57 COLLATE BINARY)>=(((t0.c57) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c57 IN (t0.c0)))==(t0.c0)) DESC;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(x'')) THEN (v0.c1 IN ()) ELSE ((v0.c2) IS FALSE) END) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (CAST(v0.c2 AS NUMERIC))), (((((v0.c0)<=(v0.c0))))<>((((((v0.c2)AND(v0.c2)))OR(v0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN ((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(x'')) THEN (v0.c1 IN ()) ELSE ((v0.c2) IS FALSE) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (CAST(v0.c2 AS NUMERIC))), (((((v0.c0)<=(v0.c0))))<>((((((v0.c2)AND(v0.c2)))OR(v0.c2))))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(x'')) THEN (v0.c1 IN ()) ELSE ((v0.c2) IS FALSE) END) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (CAST(v0.c2 AS NUMERIC))), (((((v0.c0)<=(v0.c0))))<>((((((v0.c2)AND(v0.c2)))OR(v0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN ((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(x'')) THEN (v0.c1 IN ()) ELSE ((v0.c2) IS FALSE) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (CAST(v0.c2 AS NUMERIC))), (((((v0.c0)<=(v0.c0))))<>((((((v0.c2)AND(v0.c2)))OR(v0.c2))))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(x'')) THEN (v0.c1 IN ()) ELSE ((v0.c2) IS FALSE) END) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (CAST(v0.c2 AS NUMERIC))), (((((v0.c0)<=(v0.c0))))<>((((((v0.c2)AND(v0.c2)))OR(v0.c2))))) ASC;
SELECT ALL * FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, -1576743158)))) IS FALSE) WHERE (((CASE WHEN v0.c1 THEN t0.c40 WHEN v0.c2 THEN vt0.c2 WHEN vt0.c2 THEN v0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c1 THEN t0.c40 WHEN v0.c2 THEN vt0.c2 WHEN vt0.c2 THEN v0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, -1576743158)))) IS FALSE));
SELECT ALL * FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, -1576743158)))) IS FALSE) WHERE (((CASE WHEN v0.c1 THEN t0.c40 WHEN v0.c2 THEN vt0.c2 WHEN vt0.c2 THEN v0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c1 THEN t0.c40 WHEN v0.c2 THEN vt0.c2 WHEN vt0.c2 THEN v0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, -1576743158)))) IS FALSE));
SELECT ALL * FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((vt1.c0, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, -1576743158)))) IS FALSE) WHERE (((CASE WHEN v0.c1 THEN t0.c40 WHEN v0.c2 THEN vt0.c2 WHEN vt0.c2 THEN v0.c1 END) NOTNULL));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((v0.c2)+(((t0.c57)AND(0.48246585320468915)))) CROSS JOIN vt1 ON CASE WHEN CASE vt1.c0  WHEN t0.c40 THEN vt0.c1 WHEN t0.c57 THEN t0.c57 WHEN NULL THEN t0.c40 END THEN ((v0.c2) NOTNULL) ELSE ((vt0.c2) BETWEEN (v0.c1) AND (t0.c40)) END INNER JOIN v0 ON (((t0.c57))<((vt0.c1))) COLLATE BINARY WHERE (0.6700783018045945) ORDER BY ((((vt0.c1)IS(v0.c1)))IS(CAST(x'' AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6700783018045945) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((v0.c2)+(((t0.c57)AND(0.48246585320468915)))) CROSS JOIN vt1 ON CASE WHEN CASE vt1.c0  WHEN t0.c40 THEN vt0.c1 WHEN t0.c57 THEN t0.c57 WHEN NULL THEN t0.c40 END THEN ((v0.c2) NOTNULL) ELSE ((vt0.c2) BETWEEN (v0.c1) AND (t0.c40)) END INNER JOIN v0 ON (((t0.c57))<((vt0.c1))) COLLATE BINARY ORDER BY ((((vt0.c1)IS(v0.c1)))IS(CAST(x'' AS REAL)))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((v0.c2)+(((t0.c57)AND(0.48246585320468915)))) CROSS JOIN vt1 ON CASE WHEN CASE vt1.c0  WHEN t0.c40 THEN vt0.c1 WHEN t0.c57 THEN t0.c57 WHEN NULL THEN t0.c40 END THEN ((v0.c2) NOTNULL) ELSE ((vt0.c2) BETWEEN (v0.c1) AND (t0.c40)) END INNER JOIN v0 ON (((t0.c57))<((vt0.c1))) COLLATE BINARY WHERE (0.6700783018045945) ORDER BY ((((vt0.c1)IS(v0.c1)))IS(CAST(x'' AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6700783018045945) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((v0.c2)+(((t0.c57)AND(0.48246585320468915)))) CROSS JOIN vt1 ON CASE WHEN CASE vt1.c0  WHEN t0.c40 THEN vt0.c1 WHEN t0.c57 THEN t0.c57 WHEN NULL THEN t0.c40 END THEN ((v0.c2) NOTNULL) ELSE ((vt0.c2) BETWEEN (v0.c1) AND (t0.c40)) END INNER JOIN v0 ON (((t0.c57))<((vt0.c1))) COLLATE BINARY ORDER BY ((((vt0.c1)IS(v0.c1)))IS(CAST(x'' AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((+ (((t0.c57) ISNULL)))) ORDER BY ((((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((t0.c40)))))<=((vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c57) ISNULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((t0.c40)))))<=((vt1.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((+ (((t0.c57) ISNULL)))) ORDER BY ((((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((t0.c40)))))<=((vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c57) ISNULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((t0.c40)))))<=((vt1.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((+ (((t0.c57) ISNULL)))) ORDER BY ((((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((t0.c40)))))<=((vt1.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0, vt1 WHERE ((~ (((t0.c40)+(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c40)+(v0.c2))))) IS TRUE)  as count FROM v0, vt0, t0, vt1);
SELECT COUNT(*) FROM v0, vt0, t0, vt1 WHERE ((~ (((t0.c40)+(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c40)+(v0.c2))))) IS TRUE)  as count FROM v0, vt0, t0, vt1);
SELECT COUNT(*) FROM v0, vt0, t0, vt1 WHERE ((~ (((t0.c40)+(v0.c2)))));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) NOTNULL)))=((t0.c57))) WHERE ((TYPEOF(vt1.c0) IN (((((t0.c57)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((((t0.c40)OR(t0.c40)))AND(vt0.c1)))OR(t0.c40)))OR(t0.c40)))/(((vt1.c0) NOT BETWEEN (t0.c40) AND (t0.c57)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(vt1.c0) IN (((((t0.c57)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) NOTNULL)))=((t0.c57))) ORDER BY ((((((((((t0.c40)OR(t0.c40)))AND(vt0.c1)))OR(t0.c40)))OR(t0.c40)))/(((vt1.c0) NOT BETWEEN (t0.c40) AND (t0.c57)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) NOTNULL)))=((t0.c57))) WHERE ((TYPEOF(vt1.c0) IN (((((t0.c57)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((((t0.c40)OR(t0.c40)))AND(vt0.c1)))OR(t0.c40)))OR(t0.c40)))/(((vt1.c0) NOT BETWEEN (t0.c40) AND (t0.c57)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(vt1.c0) IN (((((t0.c57)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) NOTNULL)))=((t0.c57))) ORDER BY ((((((((((t0.c40)OR(t0.c40)))AND(vt0.c1)))OR(t0.c40)))OR(t0.c40)))/(((vt1.c0) NOT BETWEEN (t0.c40) AND (t0.c57)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((vt0.c0) NOTNULL)))=((t0.c57))) WHERE ((TYPEOF(vt1.c0) IN (((((t0.c57)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((((t0.c40)OR(t0.c40)))AND(vt0.c1)))OR(t0.c40)))OR(t0.c40)))/(((vt1.c0) NOT BETWEEN (t0.c40) AND (t0.c57)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, v0 NOT INDEXED);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, v0 NOT INDEXED);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((NOT (((vt1.c0)<=(v0.c2))))) ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL)  NULLS LAST, LOWER(((vt1.c0)*(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)<=(v0.c2))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL)  NULLS LAST, LOWER(((vt1.c0)*(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((NOT (((vt1.c0)<=(v0.c2))))) ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL)  NULLS LAST, LOWER(((vt1.c0)*(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)<=(v0.c2))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL)  NULLS LAST, LOWER(((vt1.c0)*(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((NOT (((vt1.c0)<=(v0.c2))))) ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL)  NULLS LAST, LOWER(((vt1.c0)*(vt1.c0)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c40) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON vt0.c2 WHERE (((NULL) NOT BETWEEN (((v0.c0)IS(t0.c57))) AND (SUBSTR(t0.c57, v0.c2))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((v0.c0)IS(t0.c57))) AND (SUBSTR(t0.c57, v0.c2)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c40) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON vt0.c2);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c40) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON vt0.c2 WHERE (((NULL) NOT BETWEEN (((v0.c0)IS(t0.c57))) AND (SUBSTR(t0.c57, v0.c2))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((v0.c0)IS(t0.c57))) AND (SUBSTR(t0.c57, v0.c2)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c40) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON vt0.c2);
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((t0.c57)) AND ((t0.c40))) THEN vt1.c0 ELSE (((t0.c57)) NOT BETWEEN ((NULL)) AND ((t0.c40))) END WHERE (((+ (t0.c57)) IN ((NOT (t0.c0))))) ORDER BY (((vt1.c0, t0.c40, t0.c57)) NOT BETWEEN ((t0.c40, ((((vt1.c0)OR(t0.c40)))AND('-741530179')), vt1.c0 COLLATE RTRIM)) AND ((t0.c0 COLLATE RTRIM, 0xffffffffe3d3b784, (t0.c40 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c57)) IN ((NOT (t0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((t0.c57)) AND ((t0.c40))) THEN vt1.c0 ELSE (((t0.c57)) NOT BETWEEN ((NULL)) AND ((t0.c40))) END ORDER BY (((vt1.c0, t0.c40, t0.c57)) NOT BETWEEN ((t0.c40, ((((vt1.c0)OR(t0.c40)))AND('-741530179')), vt1.c0 COLLATE RTRIM)) AND ((t0.c0 COLLATE RTRIM, 0Xffffffffe3d3b784, (t0.c40 IN ()))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((t0.c57)) AND ((t0.c40))) THEN vt1.c0 ELSE (((t0.c57)) NOT BETWEEN ((NULL)) AND ((t0.c40))) END WHERE (((+ (t0.c57)) IN ((NOT (t0.c0))))) ORDER BY (((vt1.c0, t0.c40, t0.c57)) NOT BETWEEN ((t0.c40, ((((vt1.c0)OR(t0.c40)))AND('-741530179')), vt1.c0 COLLATE RTRIM)) AND ((t0.c0 COLLATE RTRIM, 0xffffffffe3d3b784, (t0.c40 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c57)) IN ((NOT (t0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((t0.c57)) AND ((t0.c40))) THEN vt1.c0 ELSE (((t0.c57)) NOT BETWEEN ((NULL)) AND ((t0.c40))) END ORDER BY (((vt1.c0, t0.c40, t0.c57)) NOT BETWEEN ((t0.c40, ((((vt1.c0)OR(t0.c40)))AND('-741530179')), vt1.c0 COLLATE RTRIM)) AND ((t0.c0 COLLATE RTRIM, 0Xffffffffe3d3b784, (t0.c40 IN ()))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((t0.c57)) AND ((t0.c40))) THEN vt1.c0 ELSE (((t0.c57)) NOT BETWEEN ((NULL)) AND ((t0.c40))) END WHERE (((+ (t0.c57)) IN ((NOT (t0.c0))))) ORDER BY (((vt1.c0, t0.c40, t0.c57)) NOT BETWEEN ((t0.c40, ((((vt1.c0)OR(t0.c40)))AND('-741530179')), vt1.c0 COLLATE RTRIM)) AND ((t0.c0 COLLATE RTRIM, 0xffffffffe3d3b784, (t0.c40 IN ()))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c1 IN ()) AS NUMERIC)) ORDER BY ((((((v0.c1)!=(v0.c1)))AND(CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c2)-(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)<>(v0.c1)))AND(CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c2)-(v0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c1 IN ()) AS NUMERIC)) ORDER BY ((((((v0.c1)!=(v0.c1)))AND(CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c2)-(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)<>(v0.c1)))AND(CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c2)-(v0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c1 IN ()) AS NUMERIC)) ORDER BY ((((((v0.c1)!=(v0.c1)))AND(CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c2)-(v0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c57 COLLATE NOCASE)) AND (((((t0.c40)) BETWEEN ((t0.c57)) AND ((v0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((t0.c57 COLLATE NOCASE)) AND (((((t0.c40)) BETWEEN ((t0.c57)) AND ((v0.c2))))))) IS TRUE)  as count FROM vt1, vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c57 COLLATE NOCASE)) AND (((((t0.c40)) BETWEEN ((t0.c57)) AND ((v0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((t0.c57 COLLATE NOCASE)) AND (((((t0.c40)) BETWEEN ((t0.c57)) AND ((v0.c2))))))) IS TRUE)  as count FROM vt1, vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c57 COLLATE NOCASE)) AND (((((t0.c40)) BETWEEN ((t0.c57)) AND ((v0.c2)))))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(CASE vt0.c1  WHEN '-1531917204' THEN vt0.c1 END)))OR((vt0.c1 IN (vt0.c0, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(CASE vt0.c1  WHEN '-1531917204' THEN vt0.c1 END)))OR((vt0.c1 IN (vt0.c0, vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(CASE vt0.c1  WHEN '-1531917204' THEN vt0.c1 END)))OR((vt0.c1 IN (vt0.c0, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(CASE vt0.c1  WHEN '-1531917204' THEN vt0.c1 END)))OR((vt0.c1 IN (vt0.c0, vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(CASE vt0.c1  WHEN '-1531917204' THEN vt0.c1 END)))OR((vt0.c1 IN (vt0.c0, vt0.c2)))));
SELECT ALL * FROM vt0, vt1, v0, t0 WHERE (CAST(((t0.c57)>(t0.c57)) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN (('') IS FALSE) WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS NUMERIC) WHEN (~ (v0.c2)) THEN (NOT (vt0.c1)) END  NULLS FIRST, CAST(LIKE(vt0.c2, vt0.c2) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c57)>(t0.c57)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, v0, t0 ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN (('') IS FALSE) WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS NUMERIC) WHEN (~ (v0.c2)) THEN (NOT (vt0.c1)) END  NULLS FIRST, CAST(LIKE(vt0.c2, vt0.c2) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0, t0 WHERE (CAST(((t0.c57)>(t0.c57)) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN (('') IS FALSE) WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS NUMERIC) WHEN (~ (v0.c2)) THEN (NOT (vt0.c1)) END  NULLS FIRST, CAST(LIKE(vt0.c2, vt0.c2) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c57)>(t0.c57)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, v0, t0 ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN (('') IS FALSE) WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS NUMERIC) WHEN (~ (v0.c2)) THEN (NOT (vt0.c1)) END  NULLS FIRST, CAST(LIKE(vt0.c2, vt0.c2) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0, t0 WHERE (CAST(((t0.c57)>(t0.c57)) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN (('') IS FALSE) WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS NUMERIC) WHEN (~ (v0.c2)) THEN (NOT (vt0.c1)) END  NULLS FIRST, CAST(LIKE(vt0.c2, vt0.c2) AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))) WHERE (CASE v0.c1  WHEN v0.c1 THEN vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE v0.c1  WHEN v0.c1 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))) WHERE (CASE v0.c1  WHEN v0.c1 THEN vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE v0.c1  WHEN v0.c1 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (+ (((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))) WHERE (CASE v0.c1  WHEN v0.c1 THEN vt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0, vt1, t0 WHERE (((CAST(t0.c40 AS NUMERIC)) NOT BETWEEN (t0.c57) AND (vt1.c0 COLLATE RTRIM))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c40 AS NUMERIC)) NOT BETWEEN (t0.c57) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1, t0 WHERE (((CAST(t0.c40 AS NUMERIC)) NOT BETWEEN (t0.c57) AND (vt1.c0 COLLATE RTRIM))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c40 AS NUMERIC)) NOT BETWEEN (t0.c57) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1, t0 WHERE (((CAST(t0.c40 AS NUMERIC)) NOT BETWEEN (t0.c57) AND (vt1.c0 COLLATE RTRIM))) ORDER BY x''  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN ((NULL)OR(t0.c0)) ELSE LOWER(t0.c0) END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN ((NULL)OR(t0.c0)) ELSE LOWER(t0.c0) END);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN ((NULL)OR(t0.c0)) ELSE LOWER(t0.c0) END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN ((NULL)OR(t0.c0)) ELSE LOWER(t0.c0) END);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN ((NULL)OR(t0.c0)) ELSE LOWER(t0.c0) END;
SELECT ALL * FROM t0, vt1, v0 INDEXED BY i10, vt0 WHERE (CASE (((t0.c57, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c1, 2.72815855E8, t0.c0)) AND ((t0.c57, vt0.c1, vt0.c1)))  WHEN (((NULL, vt0.c2, ''))=((vt1.c0, t0.c40, t0.c0))) THEN ((v0.c2)LIKE(vt0.c2)) WHEN NULL THEN (v0.c1 IN ()) WHEN ((v0.c2) NOT BETWEEN (vt1.c0) AND ('-1552558661')) THEN v0.c2 COLLATE NOCASE ELSE ((((vt0.c2)OR(v0.c2)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c57, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c1, 2.72815855E8, t0.c0)) AND ((t0.c57, vt0.c1, vt0.c1)))  WHEN (((NULL, vt0.c2, ''))=((vt1.c0, t0.c40, t0.c0))) THEN ((v0.c2)LIKE(vt0.c2)) WHEN NULL THEN (v0.c1 IN ()) WHEN ((v0.c2) NOT BETWEEN (vt1.c0) AND ('-1552558661')) THEN v0.c2 COLLATE NOCASE ELSE ((((vt0.c2)OR(v0.c2)))OR(vt0.c1)) END) IS TRUE)  as count FROM t0, vt1, v0 INDEXED BY i10, vt0);
SELECT ALL * FROM t0, vt1, v0 INDEXED BY i10, vt0 WHERE (CASE (((t0.c57, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c1, 2.72815855E8, t0.c0)) AND ((t0.c57, vt0.c1, vt0.c1)))  WHEN (((NULL, vt0.c2, ''))=((vt1.c0, t0.c40, t0.c0))) THEN ((v0.c2)LIKE(vt0.c2)) WHEN NULL THEN (v0.c1 IN ()) WHEN ((v0.c2) NOT BETWEEN (vt1.c0) AND ('-1552558661')) THEN v0.c2 COLLATE NOCASE ELSE ((((vt0.c2)OR(v0.c2)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c57, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c1, 2.72815855E8, t0.c0)) AND ((t0.c57, vt0.c1, vt0.c1)))  WHEN (((NULL, vt0.c2, ''))=((vt1.c0, t0.c40, t0.c0))) THEN ((v0.c2)LIKE(vt0.c2)) WHEN NULL THEN (v0.c1 IN ()) WHEN ((v0.c2) NOT BETWEEN (vt1.c0) AND ('-1552558661')) THEN v0.c2 COLLATE NOCASE ELSE ((((vt0.c2)OR(v0.c2)))OR(vt0.c1)) END) IS TRUE)  as count FROM t0, vt1, v0 INDEXED BY i10, vt0);
SELECT * FROM vt1, t0, v0 WHERE (IFNULL(DISTINCT ((((v0.c2)OR(t0.c57)))OR(t0.c57)), v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((v0.c2)OR(t0.c57)))OR(t0.c57)), v0.c0)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (IFNULL(DISTINCT ((((v0.c2)OR(t0.c57)))OR(t0.c57)), v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((v0.c2)OR(t0.c57)))OR(t0.c57)), v0.c0)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (IFNULL(DISTINCT ((((v0.c2)OR(t0.c57)))OR(t0.c57)), v0.c0));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0))<>((vt1.c0))) IN ())) ORDER BY ((LENGTH(vt1.c0)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))!=((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((LENGTH(vt1.c0)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0))<>((vt1.c0))) IN ())) ORDER BY ((LENGTH(vt1.c0)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))!=((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((LENGTH(vt1.c0)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0))<>((vt1.c0))) IN ())) ORDER BY ((LENGTH(vt1.c0)) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN (((vt0.c1)|(vt0.c2)), ((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN (((vt0.c1)|(vt0.c2)), ((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN (((vt0.c1)|(vt0.c2)), ((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN (((vt0.c1)|(vt0.c2)), ((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN (((vt0.c1)|(vt0.c2)), ((vt0.c0) ISNULL))));
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0)>=(vt1.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON TRIM((((vt0.c2))<((t0.c57))), CAST(vt0.c2 AS BLOB)) WHERE (0.05635422840363469);
SELECT SUM(count) FROM (SELECT ((0.05635422840363469) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON TRIM((((vt0.c2))<((t0.c57))), CAST(vt0.c2 AS BLOB)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON TRIM((((vt0.c2))<((t0.c57))), CAST(vt0.c2 AS BLOB)) WHERE (0.05635422840363469);
SELECT SUM(count) FROM (SELECT ((0.05635422840363469) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON TRIM((((vt0.c2))<((t0.c57))), CAST(vt0.c2 AS BLOB)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON TRIM((((vt0.c2))<((t0.c57))), CAST(vt0.c2 AS BLOB)) WHERE (0.05635422840363469);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>(vt0.c0))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>(vt0.c0))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>(vt0.c0))) ORDER BY vt0.c0;
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(t0.c57 AS REAL)))) RIGHT OUTER JOIN t0 ON 0.4613049105624937 WHERE (((v0.c1 COLLATE RTRIM)=(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM)==(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(t0.c57 AS REAL)))) RIGHT OUTER JOIN t0 ON 0.4613049105624937);
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(t0.c57 AS REAL)))) RIGHT OUTER JOIN t0 ON 0.4613049105624937 WHERE (((v0.c1 COLLATE RTRIM)=(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM)==(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(t0.c57 AS REAL)))) RIGHT OUTER JOIN t0 ON 0.4613049105624937);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) WHERE (CAST(vt0.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY CASE WHEN (+ (vt0.c0)) THEN UPPER(v0.c0) ELSE UPPER(DISTINCT v0.c1) END;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN UPPER(v0.c0) ELSE UPPER(DISTINCT v0.c1) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) WHERE (CAST(vt0.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY CASE WHEN (+ (vt0.c0)) THEN UPPER(v0.c0) ELSE UPPER(DISTINCT v0.c1) END;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN UPPER(v0.c0) ELSE UPPER(DISTINCT v0.c1) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) WHERE (CAST(vt0.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY CASE WHEN (+ (vt0.c0)) THEN UPPER(v0.c0) ELSE UPPER(DISTINCT v0.c1) END;
SELECT ALL * FROM vt1, vt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((+ (NULL)));
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((v0.c0)OR(v0.c1)))OR(v0.c0)) THEN CAST(v0.c2 AS BLOB) END WHERE (((INSTR(v0.c1, v0.c0)) IS FALSE)) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((INSTR(v0.c1, v0.c0)) IS FALSE)) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((v0.c0)OR(v0.c1)))OR(v0.c0)) THEN CAST(v0.c2 AS BLOB) END ORDER BY v0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((v0.c0)OR(v0.c1)))OR(v0.c0)) THEN CAST(v0.c2 AS BLOB) END WHERE (((INSTR(v0.c1, v0.c0)) IS FALSE)) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((INSTR(v0.c1, v0.c0)) IS FALSE)) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((v0.c0)OR(v0.c1)))OR(v0.c0)) THEN CAST(v0.c2 AS BLOB) END ORDER BY v0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((v0.c0)OR(v0.c1)))OR(v0.c0)) THEN CAST(v0.c2 AS BLOB) END WHERE (((INSTR(v0.c1, v0.c0)) IS FALSE)) ORDER BY v0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c40)>(v0.c1))  WHEN '' THEN ((v0.c0) ISNULL) END CROSS JOIN v0 ON ((((((NULL)OR(vt1.c0)))OR(t0.c57))) BETWEEN (NULL) AND ((t0.c0 IN ()))) WHERE (((CAST(v0.c2 AS TEXT))<((t0.c57 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS TEXT))<((t0.c57 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c40)>(v0.c1))  WHEN '' THEN ((v0.c0) ISNULL) END CROSS JOIN v0 ON ((((((NULL)OR(vt1.c0)))OR(t0.c57))) BETWEEN (NULL) AND ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c40)>(v0.c1))  WHEN '' THEN ((v0.c0) ISNULL) END CROSS JOIN v0 ON ((((((NULL)OR(vt1.c0)))OR(t0.c57))) BETWEEN (NULL) AND ((t0.c0 IN ()))) WHERE (((CAST(v0.c2 AS TEXT))<((t0.c57 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS TEXT))<((t0.c57 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c40)>(v0.c1))  WHEN '' THEN ((v0.c0) ISNULL) END CROSS JOIN v0 ON ((((((NULL)OR(vt1.c0)))OR(t0.c57))) BETWEEN (NULL) AND ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN ((v0.c2) BETWEEN (v0.c0) AND (t0.c0)) END WHERE ((((CASE WHEN t0.c40 THEN v0.c0 END))>=((t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c40 THEN v0.c0 END))>=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN ((v0.c2) BETWEEN (v0.c0) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN ((v0.c2) BETWEEN (v0.c0) AND (t0.c0)) END WHERE ((((CASE WHEN t0.c40 THEN v0.c0 END))>=((t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c40 THEN v0.c0 END))>=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN ((v0.c2) BETWEEN (v0.c0) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN ((v0.c2) BETWEEN (v0.c0) AND (t0.c0)) END WHERE ((((CASE WHEN t0.c40 THEN v0.c0 END))>=((t0.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((- (v0.c0))) NOTNULL) CROSS JOIN vt1 ON x'' WHERE (1027730844) ORDER BY (((+ (vt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1027730844) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((- (v0.c0))) NOTNULL) CROSS JOIN vt1 ON x'' ORDER BY (((+ (vt0.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((- (v0.c0))) NOTNULL) CROSS JOIN vt1 ON x'' WHERE (1027730844) ORDER BY (((+ (vt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1027730844) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((- (v0.c0))) NOTNULL) CROSS JOIN vt1 ON x'' ORDER BY (((+ (vt0.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((- (v0.c0))) NOTNULL) CROSS JOIN vt1 ON x'' WHERE (1027730844) ORDER BY (((+ (vt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (x'');
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2)=(v0.c0)) AS REAL)) ORDER BY CASE WHEN ((((v0.c2)OR(v0.c0)))OR(-1.830790214E9)) THEN 0.19437783567497713 ELSE CAST(v0.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)==(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c2)OR(v0.c0)))OR(-1.830790214E9)) THEN 0.19437783567497713 ELSE CAST(v0.c0 AS REAL) END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2)=(v0.c0)) AS REAL)) ORDER BY CASE WHEN ((((v0.c2)OR(v0.c0)))OR(-1.830790214E9)) THEN 0.19437783567497713 ELSE CAST(v0.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)==(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c2)OR(v0.c0)))OR(-1.830790214E9)) THEN 0.19437783567497713 ELSE CAST(v0.c0 AS REAL) END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2)=(v0.c0)) AS REAL)) ORDER BY CASE WHEN ((((v0.c2)OR(v0.c0)))OR(-1.830790214E9)) THEN 0.19437783567497713 ELSE CAST(v0.c0 AS REAL) END  NULLS FIRST;
SELECT * FROM t0, v0, vt1 NATURAL JOIN vt0 WHERE (((((v0.c0)OR(t0.c57)))<('-624789302')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(t0.c57)))<('-624789302'))) IS TRUE)  as count FROM t0, v0, vt1 NATURAL JOIN vt0);
SELECT * FROM t0, v0, vt1 NATURAL JOIN vt0 WHERE (((((v0.c0)OR(t0.c57)))<('-624789302')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(t0.c57)))<('-624789302'))) IS TRUE)  as count FROM t0, v0, vt1 NATURAL JOIN vt0);
SELECT * FROM t0, v0, vt1 NATURAL JOIN vt0 WHERE (((((v0.c0)OR(t0.c57)))<('-624789302')));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))OR(CAST(vt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))OR(CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))OR(CAST(vt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))OR(CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))OR(CAST(vt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((PRINTF(vt0.c2))OR(((v0.c0)|(vt0.c0)))))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((PRINTF(vt0.c2))OR(((v0.c0)|(vt0.c0)))))AND(v0.c2))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((PRINTF(vt0.c2))OR(((v0.c0)|(vt0.c0)))))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((PRINTF(vt0.c2))OR(((v0.c0)|(vt0.c0)))))AND(v0.c2))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((PRINTF(vt0.c2))OR(((v0.c0)|(vt0.c0)))))AND(v0.c2)));
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((((((((((t0.c40)%(t0.c0)))AND(t0.c57 COLLATE RTRIM)))OR(((((v0.c2)OR(t0.c57)))OR(v0.c1)))))AND(v0.c0 COLLATE BINARY)))OR(DATETIME(v0.c1, v0.c2, v0.c0, t0.c40, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c40)%(t0.c0)))AND(t0.c57 COLLATE RTRIM)))OR(((((v0.c2)OR(t0.c57)))OR(v0.c1)))))AND(v0.c0 COLLATE BINARY)))OR(DATETIME(v0.c1, v0.c2, v0.c0, t0.c40, vt1.c0)))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((((((((((t0.c40)%(t0.c0)))AND(t0.c57 COLLATE RTRIM)))OR(((((v0.c2)OR(t0.c57)))OR(v0.c1)))))AND(v0.c0 COLLATE BINARY)))OR(DATETIME(v0.c1, v0.c2, v0.c0, t0.c40, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c40)%(t0.c0)))AND(t0.c57 COLLATE RTRIM)))OR(((((v0.c2)OR(t0.c57)))OR(v0.c1)))))AND(v0.c0 COLLATE BINARY)))OR(DATETIME(v0.c1, v0.c2, v0.c0, t0.c40, vt1.c0)))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((((((((((t0.c40)%(t0.c0)))AND(t0.c57 COLLATE RTRIM)))OR(((((v0.c2)OR(t0.c57)))OR(v0.c1)))))AND(v0.c0 COLLATE BINARY)))OR(DATETIME(v0.c1, v0.c2, v0.c0, t0.c40, vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c1) ORDER BY CAST(CAST(v0.c1 AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(CAST(v0.c1 AS BLOB) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c1) ORDER BY CAST(CAST(v0.c1 AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(CAST(v0.c1 AS BLOB) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c1) ORDER BY CAST(CAST(v0.c1 AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM v0, t0, vt1 WHERE ((~ ((~ (0.64357107117906)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (0.64357107117906))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((~ ((~ (0.64357107117906)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (0.64357107117906))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((~ ((~ (0.64357107117906)))));
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((((((((- (vt1.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((('')) NOT BETWEEN ((v0.c0)) AND ((vt0.c2))))))OR(((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c1)))))OR(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt1.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((('')) NOT BETWEEN ((v0.c0)) AND ((vt0.c2))))))OR(((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c1)))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((((((((- (vt1.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((('')) NOT BETWEEN ((v0.c0)) AND ((vt0.c2))))))OR(((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c1)))))OR(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt1.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((('')) NOT BETWEEN ((v0.c0)) AND ((vt0.c2))))))OR(((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c1)))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((((((((- (vt1.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((('')) NOT BETWEEN ((v0.c0)) AND ((vt0.c2))))))OR(((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c1)))))OR(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((NULL)IS(((t0.c57)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(((t0.c57)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((NULL)IS(((t0.c57)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(((t0.c57)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((NULL)IS(((t0.c57)GLOB(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((ABS(DISTINCT t0.c40))OR(ABS(DISTINCT vt1.c0))))AND(((NULL) NOT BETWEEN (t0.c57) AND (vt1.c0)))))AND(TRIM(0.2695858721051356))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((ABS(DISTINCT t0.c40))OR(ABS(DISTINCT vt1.c0))))AND(((NULL) NOT BETWEEN (t0.c57) AND (vt1.c0)))))AND(TRIM(0.2695858721051356))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((ABS(DISTINCT t0.c40))OR(ABS(DISTINCT vt1.c0))))AND(((NULL) NOT BETWEEN (t0.c57) AND (vt1.c0)))))AND(TRIM(0.2695858721051356))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((ABS(DISTINCT t0.c40))OR(ABS(DISTINCT vt1.c0))))AND(((NULL) NOT BETWEEN (t0.c57) AND (vt1.c0)))))AND(TRIM(0.2695858721051356))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((ABS(DISTINCT t0.c40))OR(ABS(DISTINCT vt1.c0))))AND(((NULL) NOT BETWEEN (t0.c57) AND (vt1.c0)))))AND(TRIM(0.2695858721051356))))OR((NOT (t0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c1)) AS REAL));
SELECT * FROM t0, vt1, v0 CROSS JOIN vt0 ON ((((((0.9470931651442474)AND(t0.c0)))OR('-1307303034'))) ISNULL) WHERE (0X1c358438);
SELECT SUM(count) FROM (SELECT ((0x1c358438) IS TRUE)  as count FROM t0, vt1, v0 CROSS JOIN vt0 ON ((((((0.9470931651442474)AND(t0.c0)))OR('-1307303034'))) ISNULL));
SELECT * FROM t0, vt1, v0 CROSS JOIN vt0 ON ((((((0.9470931651442474)AND(t0.c0)))OR('-1307303034'))) ISNULL) WHERE (0X1c358438);
SELECT SUM(count) FROM (SELECT ((0x1c358438) IS TRUE)  as count FROM t0, vt1, v0 CROSS JOIN vt0 ON ((((((0.9470931651442474)AND(t0.c0)))OR('-1307303034'))) ISNULL));
SELECT * FROM t0, vt1, v0 CROSS JOIN vt0 ON ((((((0.9470931651442474)AND(t0.c0)))OR('-1307303034'))) ISNULL) WHERE (0X1c358438);
SELECT * FROM t0, vt1, v0 WHERE ((t0.c40 IN ()) COLLATE BINARY) ORDER BY ((((v0.c0)*(t0.c40))) NOT BETWEEN ((vt1.c0 IN ('1935839999'))) AND (((vt1.c0)>=(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c40 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((((v0.c0)*(t0.c40))) NOT BETWEEN ((vt1.c0 IN ('1935839999'))) AND (((vt1.c0)>=(t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt1, v0 WHERE ((t0.c40 IN ()) COLLATE BINARY) ORDER BY ((((v0.c0)*(t0.c40))) NOT BETWEEN ((vt1.c0 IN ('1935839999'))) AND (((vt1.c0)>=(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c40 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((((v0.c0)*(t0.c40))) NOT BETWEEN ((vt1.c0 IN ('1935839999'))) AND (((vt1.c0)>=(t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt1, v0 WHERE ((t0.c40 IN ()) COLLATE BINARY) ORDER BY ((((v0.c0)*(t0.c40))) NOT BETWEEN ((vt1.c0 IN ('1935839999'))) AND (((vt1.c0)>=(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN vt1 ON CASE ((t0.c57) IS FALSE)  WHEN SQLITE_SOURCE_ID() THEN ((t0.c57)-(vt1.c0)) END INNER JOIN vt0 ON CASE '緱uY'  WHEN ((((v0.c2)AND(vt1.c0)))AND(vt0.c0)) THEN CAST(v0.c1 AS TEXT) ELSE '-1873381759' END INNER JOIN t0 ON 0.3921940090342041 WHERE ((CAST(t0.c40 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c40 AS BLOB) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON CASE ((t0.c57) IS FALSE)  WHEN SQLITE_SOURCE_ID() THEN ((t0.c57)-(vt1.c0)) END INNER JOIN vt0 ON CASE '緱uY'  WHEN ((((v0.c2)AND(vt1.c0)))AND(vt0.c0)) THEN CAST(v0.c1 AS TEXT) ELSE '-1873381759' END INNER JOIN t0 ON 0.3921940090342041);
SELECT ALL * FROM v0 CROSS JOIN vt1 ON CASE ((t0.c57) IS FALSE)  WHEN SQLITE_SOURCE_ID() THEN ((t0.c57)-(vt1.c0)) END INNER JOIN vt0 ON CASE '緱uY'  WHEN ((((v0.c2)AND(vt1.c0)))AND(vt0.c0)) THEN CAST(v0.c1 AS TEXT) ELSE '-1873381759' END INNER JOIN t0 ON 0.3921940090342041 WHERE ((CAST(t0.c40 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c40 AS BLOB) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON CASE ((t0.c57) IS FALSE)  WHEN SQLITE_SOURCE_ID() THEN ((t0.c57)-(vt1.c0)) END INNER JOIN vt0 ON CASE '緱uY'  WHEN ((((v0.c2)AND(vt1.c0)))AND(vt0.c0)) THEN CAST(v0.c1 AS TEXT) ELSE '-1873381759' END INNER JOIN t0 ON 0.3921940090342041);
SELECT ALL * FROM v0 CROSS JOIN vt1 ON CASE ((t0.c57) IS FALSE)  WHEN SQLITE_SOURCE_ID() THEN ((t0.c57)-(vt1.c0)) END INNER JOIN vt0 ON CASE '緱uY'  WHEN ((((v0.c2)AND(vt1.c0)))AND(vt0.c0)) THEN CAST(v0.c1 AS TEXT) ELSE '-1873381759' END INNER JOIN t0 ON 0.3921940090342041 WHERE ((CAST(t0.c40 AS BLOB) IN ()));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c57) NOT NULL))OR(t0.c57 COLLATE RTRIM))) ORDER BY (NOT (CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c57) NOT NULL))OR(t0.c57 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t0 ORDER BY (NOT (CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c57) NOT NULL))OR(t0.c57 COLLATE RTRIM))) ORDER BY (NOT (CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c57) NOT NULL))OR(t0.c57 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t0 ORDER BY (NOT (CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c57) NOT NULL))OR(t0.c57 COLLATE RTRIM))) ORDER BY (NOT (CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST;
