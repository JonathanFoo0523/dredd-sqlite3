-- Time: 2024/06/09 07:04:50
-- Database: database35
-- Database version: 3.40.0
-- seed value: 1280332935
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED, languageid="lid"); -- 0ms;
UPDATE OR IGNORE vt0 SET (lid)=(0.7888533332598072); -- 0ms;
INSERT OR IGNORE INTO vt0(lid) VALUES ('0.7888533332598072'); -- 0ms;
CREATE TEMP TABLE t0 (c0 REAL CHECK ( ((x'')|(c0)) COLLATE RTRIM) ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c0=0.5082994736693438, c0=NULL, c0=0.6457335323408587; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-507650734 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1707000133 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-5.07650734E8 AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7888533332598072)AND(-5.07650734E8)))AND(0.45460993009664186)))<((('')AND(1567113430)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=1426521151 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ccb5520c')/(NULL))) BETWEEN (x'') AND ((('0.5082994736693438') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CASE NULL  WHEN 0.014162730859881512 THEN '' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1567113430'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-293861809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1567113430'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)+('0.6457335323408587')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.44275700275953267; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((QUOTE('-1968077994')) NOT BETWEEN ((('[UE&\rgq/v') NOT NULL)) AND (CASE 0.48239482114675225  WHEN 'z	F-' THEN -1e500 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X2dadb84a IN ()) IN (((((-1.968077994E9)AND(x'')))AND(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('Ax-zP b')%(0.49643872727761384)))/((((('TRUE')OR(x'')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=353122508 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-258682706 sz=1235886414 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=698699710 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'bbce')OR(0.6457335323408587)))AND(x'6a31'))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND (CASE '-579851261'  WHEN NULL THEN 'd' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1074012053 sz=-1324127365 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-144281838 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-507650734 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1959719004'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)*(((((0.5757460278747832)OR(x'')))OR('-998181053')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1959719004')))AND(TYPEOF(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-772635336 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('z	f-', NULL, 0.5757460278747832))<((0.4915656756944379, '-1968077994', NULL)))) NOT BETWEEN (LOWER(DISTINCT '347930090')) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-731631663 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('\rlk]UM')&(0xffffffff8ea60610)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=339679727 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-772635336 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1969372804 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1066968399 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CASE '0.44275700275953267'  WHEN NULL THEN '-1814763908' END))>=((CASE x''  WHEN 'PxJ9C' THEN x'd5d8' ELSE 0.6679999294437711 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1426521151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE((('-1901722096')||(NULL)), ((((0.5378053439543684)AND('en5꺏[')))OR('涅轶')), (NOT ('\rlk]UM')), 1927304110, (('-1398255796') NOT BETWEEN ('-1324127365') AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-1901722096 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-1814763908)))||((((0Xffffffffc480f743)) BETWEEN ((-1.707000133E9)) AND ((0.27804059799351377))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 -2030504310 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1131507887 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1368849545'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=261768201'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.823195056633549)OR(NULL)))OR(x'9928')) IN ((('-1968077994') BETWEEN ('') AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=908437057 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=731144726 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1563940593', NULL, 0.33828440288624195))==(('', '', '245023054')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X13af134a)<=(NULL))) BETWEEN (x'3d02') AND ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 0 sz=-1091516068 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((json_array_length(0.06287128086569038)))>((NULL COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1357093109 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((((((((0.9028253443067911)AND(0.06275562436658644)))OR(x'11501ec0')))AND(NULL)))AND(0.12567817094501577)), CAST(NULL AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1969372804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') IS FALSE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1074012053 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1563940593 0 sz=1368849545'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)LIKE('yLݴH5弃Y')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1102084971 -144281838 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=766359626 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)>=(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-742878843'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1574373236'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-217676447'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('G]6JG1-500000獁a')*('-1814763908')) THEN x'cf64' COLLATE RTRIM ELSE ((979225284) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 -365017323 sz=1832704593 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.27804059799351377, '', '-376465638', x'')) BETWEEN ((((1993266368) BETWEEN (x'') AND ('-1335503825')), (0.7081536332680346 IN ()), (((x'9b5d'))<((-2.17676447E8))), COALESCE(DISTINCT 0.7198544251868996, '-728413291'), ((((x'')AND(NULL)))AND(0Xffffffff861ca885)))) AND ((0.014162730859881512, (('-579851261') NOT BETWEEN (NULL) AND (0.7956348689283255)), (0xffffffffe784f5d7 IN (NULL)), (+ ('-1673954639')), (((0.6504484624386117)) BETWEEN ((x'')) AND (('-410716713')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1707000133 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('-772635336'))!=(('261768201'))) THEN ((((x'')OR(0.4244452255283624)))OR('-478695793')) ELSE ((x'')OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1928256874 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-1090175292 sz=-2047542427 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((7.31144726E8, '-728413291', 0.584865846040567)) NOT BETWEEN ((((('蒕WYT8', x'e2de', 0xffffffffe14619cb)) BETWEEN ((1320387721, 0.06275562436658644, 0.6161574481313865)) AND ((x'', NULL, '1680962703'))), CASE '1959719004'  WHEN '0.5378053439543684' THEN NULL ELSE x'' END, (1.357093109E9 IN (x'', 0.9558156223502361)))) AND ((((0x53123e17) NOT NULL), (- (0.8831600561651539)), 0x6d3cda51 COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=370080003'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))>((0.8269616337286977))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Z'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(DISTINCT 0x1, 0.602814941023692)) BETWEEN (CAST('-1814763908' AS BLOB)) AND (CASE 0.26112900128739447  WHEN NULL THEN x'' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=450970866'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT x'4498', x'')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'yWe0D'  WHEN '245023054' THEN -1315813427 ELSE '766359626' END)%(((((((((-1968077994)OR(1.53580735E9)))OR('-1533750497')))AND('z	f-')))OR(1074012053)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=339679727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1320039158 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.7527886151556978)) BETWEEN (('hq')) AND ((x'8f4e'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1362585955 sz=1393704471 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)/('347930090'))  WHEN 0Xffffffff861e78ed COLLATE NOCASE THEN (('r-') BETWEEN ('-579851261') AND ('-1091516068')) WHEN CASE WHEN '?g' THEN '-2030504310' ELSE '-742878843' END THEN 0.7622887470226705 WHEN ((0.06275562436658644)|(x'')) THEN (0.4915656756944379 IN ()) ELSE (('') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'' THEN NULL WHEN '9223372036854775807' THEN '-998181053' WHEN x'82b9' THEN '' WHEN 0Xffffffffe784f5d7 THEN x'' WHEN NULL THEN 0.6325935516008859 END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (((((0.46122227296546703)AND(x'4e87')))OR(x'a16fd006')), json_object(NULL, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('S<鋔9䲐ch' COLLATE NOCASE) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1354854783 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((('1402059714')<<('')))) AND (((+ (x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.10296906223164737)) NOT BETWEEN (((((('')OR('1426521151')))AND(x'')))) AND ((((NULL) BETWEEN ('-1412800733') AND (0.8981163889608755))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=729061166'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.963882810347687 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '9223372036854775807 0 sz=1074012053 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LIKE(x'395c', 0.2579834917691666, 'g'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((1.832704593E9)OR(0.9621134963741071)))AND('1479748')))&(HEX('a/MKq䬔뎑G맨'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X3fbfbbed)&(x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2045378713 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.21963142025410964 COLLATE RTRIM)/(((((NULL)OR('2098274522')))AND('0.9621134963741071')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(-1242915758 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-2077987085 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=446347565 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2125926132'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2NR}	Z|K' COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '766359626 sz=1104668197 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '4 330240842 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-768979824')LIKE((('0.06275562436658644') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1880238419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'0bcc' COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-1972047620 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=565385832'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=734241164 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=225799557 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-156556326 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1894968743'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=698699710 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (x'')) THEN ((x'c720')<(x'ef54')) ELSE ((((0.9144116566013645)OR(0.5006509980142705)))AND('-31184570')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-182913902 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-217676447')==('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1393704471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.745139504835031) NOT BETWEEN (x'd01f') AND (0.5614775989333186))) NOT BETWEEN ((('370080003')*(x''))) AND (CASE WHEN x'' THEN '' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-291751872 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=2047312529 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7004146212610011; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-1015846443'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-856120071 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER('-1739928912'))AND(CAST('-695393364' AS REAL))))OR((+ ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<=(x'')))<=(((((NULL)AND(x'')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=251202129 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1131507887 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1969372804'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1131507887 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2037478111 sz=1969372804'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1880238419'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-2011882964 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=78166754 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=794542399 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-864727220 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((- (0.5689732208532277))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '940290143 -383042765 sz=-1968077994 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1069530093 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '370080003 sz=-167425138 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(CAST(0x3625a641 AS REAL), ((x'')IS NOT(NULL)), LTRIM(NULL), (NOT (0.513633949471191))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)/(((((x'5870')AND(NULL)))OR(0.8455128983545962)))); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(JULIANDAY(-9223372036854775808, -1.242915758E9, 'a6') AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e023') NOT NULL))AND((('2098274522')|(0xffffffffaa3fb3e2)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN NULL THEN -480900339 END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('')AND(NULL)))AND(NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X46a06652; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '1033721459 sz=992621494'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=313679723'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '107175130 sz=1680962703'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1600826284 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '1901523883 sz=40617090'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5995398404932245) NOTNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'86fe')>(NULL))  WHEN CASE 'D''㬠6'  WHEN NULL THEN 'Xp^S' END THEN ((NULL)<=(0.9326367156744109)) WHEN CASE WHEN 0.851124805504083 THEN '' END THEN CASE '452435994'  WHEN 2072088197 THEN '-671685193' WHEN '2' THEN NULL WHEN NULL THEN '-768979824' ELSE 'F8oG+\r⊖' END WHEN 0.09107730687682969 COLLATE BINARY THEN ((x'') NOT BETWEEN (0.056890345709127876) AND (0.10296906223164737)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.5614775989333186 AS BLOB) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '', x'4ab2')) NOT BETWEEN ((x'' COLLATE RTRIM, '%d' COLLATE NOCASE, ((((((((NULL)OR(NULL)))AND('-507650734')))AND(0.5383740877094566)))OR(0.5174929390439983)))) AND (((((0.9442345429929832)) NOT BETWEEN ((x'')) AND ((''))), (- (x'370b')), ((((x'')AND(0.5625585525064813)))AND(0.6325726834364515))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1977932756 AS INTEGER) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('' IN (0.9865476805635911)))OR(CASE '2019283106'  WHEN '794542399' THEN x'' WHEN '1619482101' THEN 'yLݴH5弃Y' WHEN NULL THEN '1866984168' ELSE NULL END)))AND((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.5197889281455794)))AND(NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.6986662164588721  WHEN NULL THEN NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1090175292; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1069530093 sz=1044636863 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '1354854783 sz=1074012053 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1385552174 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)%('-1324127365')) COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '786059399 sz=375490314 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))LIKE((('^6')IS('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1937555781 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-449797592 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1135126622 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1743548957'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=998815586 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2045378713 2061893865 sz=1535807350 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('缂M')) NOT BETWEEN ((-1.97204762E9)) AND ((((NULL)GLOB(-1.82913902E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2129304335 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 2.61768201E8 THEN NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-837205626 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (4.46347565E8))  WHEN CAST(0.08183117652785088 AS NUMERIC) THEN 9223372036854775807 COLLATE BINARY ELSE ((((((((x'')AND(NULL)))OR('-1673954639')))AND('0.8455128983545962')))AND(2039511899)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-338810503 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=682070226 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xfffffffff2fe641c IN ('', NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1009815126 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1845062426 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '683176037 sz=1958790545'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1613483968 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')IS(0xffffffffd9676a19)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x3abeec)AND('')))AND('')))+(((0.18737047102965132) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1393704471 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-998181053 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-969514255 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -507826978; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=409031455'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('z3i*9⦄t>0' AS REAL))OR(((200391204)+(0.5276679523943808)))))OR(CAST(x'' AS INTEGER))))OR(((NULL) IS TRUE))))OR(((0.0046626500859706654)<('-1039721209')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=2071182255 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1104668197'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2029106412 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1649361185 339679727 sz=215909660 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.12567817094501577; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=122843769 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-637365721'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '1255833718 0 sz=-182913902'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UNLIKELY(0Xffffffffa994fe0a) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '974226775'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(((x'') IS FALSE), UPPER(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-932618729))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=816493457 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=553633945 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((+ ('Ru/e_'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1531122858 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1614593628'))<=(('-728413291'))))OR(x'' COLLATE RTRIM)))AND((((0.23765180952773224, 0.974129749338557, NULL, NULL, x''))>=(('-1656973435', x'84dc', NULL, 0x23619054, x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(NULL COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-693977237 sz=-1362585955'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2030504310 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(0Xffffffffa530522d, x'a281')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')AND((('-1247246725') IS FALSE))))AND(x'6b81' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('373665592' AS BLOB)) NOT BETWEEN (((NULL) NOT BETWEEN (0xa232189) AND ('궭팟7|E7G'))) AND (0.2431118969802316)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-759602352 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-0.0')) BETWEEN ((((x'9aae')LIKE(NULL)))) AND ((TRIM(DISTINCT x'95ee', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'162d' AS REAL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=672565009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9709')-(x'b8e5')))GLOB(((x'') BETWEEN (x'd070') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1973999030531226)) BETWEEN ((CASE WHEN x'' THEN NULL ELSE NULL END)) AND ((CASE WHEN '0.5614775989333186' THEN NULL END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (0Xfffffffff9c5774b) AND ('.')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1996326981'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x1ae144f2)) BETWEEN ((CASE 0X5db11f61  WHEN 0.5174929390439983 THEN NULL ELSE -97954026 END)) AND (((('uX&v') NOT BETWEEN (0.09675728660856175) AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1595755580 1271349604 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=908437057 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=208350312 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1156092257 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1880238419 281349919 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffed96e2e4 COLLATE BINARY COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1368849545 -1102084971 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2047934807 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-619342482 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-218474256 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '261768201 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-496775792 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.9098600462869452)) IN (((('')) NOT BETWEEN ((x'')) AND ((NULL))), CAST('PH묎u%RMy	' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE(NULL)))<((('-1533750497') BETWEEN (0.0031473289753760625) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '848825410 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1993266368 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'1ca4' COLLATE BINARY) BETWEEN ((((x'')) BETWEEN ((x'')) AND ((NULL)))) AND (TRIM(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((RTRIM('tF')) NOT BETWEEN ((x'' IN ('P巾', 0.05998898260320451))) AND (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TOTAL_CHANGES() IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') ISNULL))AND(((('ea⌮rpJ|h'))<=((NULL))))))OR(((x'3c5b49cc')%(x'')))))AND(CAST('1567113430' AS NUMERIC))))OR((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1104668197 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '1354854783 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('1104668197' IN ())  WHEN (('0.6457335323408587')+('KWl]Ia8')) THEN (+ ('-1673954639')) ELSE NULL COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2014244761'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1069530093 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('_bwj' AS BLOB)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-365017323 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1625681286 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7532068075246794) BETWEEN (-1496095671) AND ('p~*p2&')))IS(((NULL)+(0.6152728892744338)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ ('XgCID/Po')) THEN ('' IN ('339679727', '-527810269')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(NULL)))OR(x'')))AND('~l*a')))OR(NULL))) BETWEEN ((('en5꺏[')*(x'6467'))) AND (((((((((0.7060710971565244)OR(x'1c9b')))OR(x'')))OR(x'')))OR(-1.56556326E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=911598564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=223645832'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1026541661 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1740187132 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1097850517 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1814763908 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1735350461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x'7bda'))==((x''))))OR((((''))<>((0.9579191725472721))))))OR(NULL COLLATE NOCASE)))AND((NOT ('291379570')))))AND(((0xffffffffbd4f2c76)LIKE(0.7343802992498036)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=973424179 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1024489786 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x18f8e96f) ISNULL)) NOT BETWEEN (CHANGES()) AND (((('\rlk]UM', 0.12567817094501577, '-1814763908')) NOT BETWEEN (('-1814763908', NULL, 'T')) AND (('1', 0.1471587288179801, '1993266368'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.5326812250834163) AND (NULL)))!=(((NULL) NOT BETWEEN (x'') AND (-1782546968)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9607037221323131, 'H7ZF42 u', x'f491')) BETWEEN (((NOT (NULL)), ('1066968399' IN ()), (('-76390653')GLOB('-1814763908')))) AND ((NULL COLLATE RTRIM, ('1' IN ()), ((NULL) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-182913902 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(((-258682706) NOT NULL), ((NULL) NOT BETWEEN (NULL) AND (0xffffffffae7abf03)), ((NULL)%(x'')), IFNULL(x'', NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((((((((NULL)AND(0xffffffff9d714889)))OR(x'6ad2')))AND(x'')))OR(NULL)))) AND ((((2085760307)/('-1209956829'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1421831588 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0X79ea0099, '-1164246744')) BETWEEN (((x'0102') BETWEEN ('0.8981163889608755') AND (0.21780013840955492))) AND (MAX(0.6842681355634291, 0.4186477523647374, '-507650734', -334637489))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=968189569'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0.0010654790249766677)) THEN MAX(NULL, 0X2e5e158f, 0.10296906223164737, '1426521151') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-830042642 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-340605683 sz=-162925689 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1885189988 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=897296313'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8306209365135204)) NOT BETWEEN ((CASE 'Rlv淥\r'  WHEN x'' THEN x'' WHEN NULL THEN x'' WHEN NULL THEN 0.9674469371847347 END)) AND ((CASE NULL  WHEN '339679727' THEN 0.37275291676404954 ELSE 0.1983334495347433 END))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(x'')))OR(NULL)))OR('a/mkq䬔뎑g맨')))AND(0.32623187487911487)))GLOB(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.05249486314720975 COLLATE RTRIM, (((x'f7893baa', 'D''㬠6', NULL)) BETWEEN ((x'1f76', x'', '115919327')) AND ((0.897787141651254, 0x66dadf97, NULL))), ((0X692deef5)<=(0xffffffffec04bc56))))>=(('575390364' COLLATE RTRIM, (((0.467796963488452, x'', 225799557)) BETWEEN ((0.6105510823937896, -1.090175292E9, 0.702432408284133)) AND ((NULL, NULL, x'c006'))), json_extract(0Xffffffff9d6285c1, 1996364648)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-1958411512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1968077994 sz=908437057 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1197228660)+('ea⌮rpJ|h')))IS NOT((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1894968743 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('729061166')AND(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR((x'' IN ()), (('1084862243')!=(0Xffffffffad4a71de))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '1826007097 sz=1357093109 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=646584700 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-728413291)) NOT BETWEEN ((((x'9055')+('-1825267299')))) AND (((+ ('-1412800733'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.7622887470226705 THEN 0.5081905522349934 ELSE x'2f73d274' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)||('734241164')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=952639948 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((937692479) NOT NULL))OR((('-713371508') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(0.39660437910200796)))OR(0.9579191725472721)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-594431821'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '276099173 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (0.9457843922499741, 0.9326367156744109)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN 0.6280593589525103 WHEN x'' THEN 865433865 WHEN x'' THEN NULL ELSE 0.8046150802610909 END)IS(-2077987085 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6167834648191671 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.642370515E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1821186800)<<(x'31b9')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1680962703 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1680962703' THEN 'z	f-' ELSE 'd*윏J' END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=-728413291 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') ISNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (x'') AND ('lKn?!ُ')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1897431911 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1398255796 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1797175833 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-31184570 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.38315845439477025)>=(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=729061166 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1244252709 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1648960601 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=758012901 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(1.393704471E9 AS NUMERIC) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('')) NOT BETWEEN ((NULL)) AND ((0.6532399240693378))))AND(CAST('794542399' AS TEXT))))AND(((0Xffffffffb065d42f) BETWEEN (x'') AND (x'3763')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=324574245 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(0x73aef171, x'')) NOT BETWEEN ((NOT (x''))) AND (('-1814763908' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1507558629 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 992322710 sz=-1335503825 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1447414890)AND('록')))AND(x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1879681037 sz=-922149938 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=546730880'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9963144724523768 COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.1253454856910624)AND(x'71236cdb')))AND(0.23206836276213139)))OR(0.3676828808551237)))AND(0.07431382604497128)) IN (((NULL) NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-728413291 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_valid('380439242') IN (NULL, ((0.9326367156744109) NOT BETWEEN (6.9869971E8) AND (0.48239482114675225)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-365017323 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.15582972437470322)) BETWEEN ((NULL)) AND ((0.46122227296546703)))  WHEN 0.5757460278747832 THEN (NOT (NULL)) ELSE ('' IN (x'', NULL)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2 sz=212729618'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'5d42')) NOT BETWEEN ((x'78a8')) AND (('-838324218'))))>=((((NULL)) BETWEEN (('wM[]')) AND ((x'73d4'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')AND(x'')) THEN ((NULL)>=(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=2098274522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1528882717 sz=630919983 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((MAX('-100135265', 0.0010654790249766677, '%TQ1t', '-515499573'))AND((((x'')) BETWEEN ((x'1ec0')) AND ((0.4957117180104218))))))AND((0.38082619036495335 IN ()))))OR(CAST(0.35426762485160246 AS REAL))))AND((('') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-293861809 -1194208777 sz=-156556326 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)<((~ (0xffffffff86f8f68a)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1787059297'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (ABS(DISTINCT 0.867926133761539) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'b62b' IN ('1131507887')))AND(((3.30240842E8)=(1069530093)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('[VR/Y' COLLATE BINARY AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1093168878 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1533750497 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-507650734 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', -1428120951)) NOT BETWEEN ((((NULL) BETWEEN (-1769733853) AND (0X1d947beb)), '1691698160', '-1362585955' COLLATE BINARY)) AND ((CAST(0.5257736908656094 AS NUMERIC), '1628703470' COLLATE BINARY, (NOT (x''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((-1398255796)/('-156556326'))))!=((((('0.0010654790249766677', x'1576', ''))>((NULL, '-2044823315', '')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1161701868'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-768979824 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ('-376465638' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=493047511'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=106608070 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('-579851261')AND(NULL)))AND(0x3dbc0d86)))AND('')))AND(x'4fb6')), CASE '﯒Z*OWWTG'  WHEN 0Xffffffffb065d42f THEN 0.0943523200903591 END, QUOTE('rF')))==((CAST('-1786999742' AS TEXT), (('-377553763') NOT BETWEEN ('') AND (-1324127365)), ('n.͋4\\r	' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-2077987085 sz=1843895179 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x375915c8, '-768979824', '2022986270')) BETWEEN ((NULL COLLATE RTRIM, (('YB*_R蓰j') ISNULL), CASE ''  WHEN '{}' THEN 1385839748 WHEN NULL THEN 0.8269616337286977 WHEN '-1564413903' THEN x'' ELSE NULL END)) AND ((((((NULL)AND(NULL)))OR('')), COALESCE('-1563940593', 0.974129749338557), CASE 0.691962962330062  WHEN x'' THEN '' WHEN 0X5d6840d6 THEN 'l' WHEN '712224102' THEN x'28a2' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1104398304'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((1807532794) NOT BETWEEN (NULL) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('S)/縫AY') NOT BETWEEN ('-1149530001') AND (0.2157859105310751)))OR((((NULL, 0.2579834917691666, x'')) BETWEEN ((0.9549475479529815, '', 0.6413695708769609)) AND (('-630870697', 0.12567817094501577, x''))))))AND(((x'') NOT BETWEEN (0.052144743137712335) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=734241164'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=766325768 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1178619999 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '4 76512332 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1617435987 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=1518161097 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=662139878'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT 0.10296906223164737 COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1235886414 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '877953539 -1928256874 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1968077994 sz=551013703 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1320387721 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -410716713'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT 0.8292894574715124, '0.05998898260320451') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2091330795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=363788797'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1587092177 sz=-1533750497'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1765411463')LIKE(NULL)))AND((848710907 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)AND('')) THEN CAST(0x55ab2faa AS TEXT) WHEN 'p\nw᧯' COLLATE NOCASE THEN (('-122799072')OR(0.6495404250922089)) WHEN ((('R-'))>=((''))) THEN ((-0.0) BETWEEN (0.7081506326044039) AND ('1615788044')) WHEN (('lv')-('731144726')) THEN STRFTIME(0.7533945554892681, '-1097493263', '-182913902') WHEN (('-1806747029')/(NULL)) THEN TRIM(x'') WHEN ((x'')-('1028248535')) THEN ((NULL)IS NOT(-4.78695793E8)) WHEN (((0.5614775989333186)) BETWEEN (('\n3*t')) AND (('-1524565763'))) THEN ((NULL) BETWEEN (x'') AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 370080003 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1522307653 0 sz=894067207 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '1920505630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=686604471'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-186703393'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-293861809'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 1558402777 sz=-1241536614'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-722089139 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('%	')AND(1.402059714E9)))OR(NULL)))AND(CASE WHEN x'd355731b' THEN NULL ELSE NULL END)))OR('731144726' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.5082994736693438 THEN '487538364' ELSE '0.513633949471191' END) NOT BETWEEN (((x'') BETWEEN (x'') AND (NULL))) AND (('?g' IN ('', 1680962703)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1968077994' IN ()))OR(NULL COLLATE BINARY)))OR(CAST(0.6280593589525103 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'', x'', 0.04152097879386141)) NOT BETWEEN ((0.30346686529932887, x'', -2.58682706E8)) AND ((NULL, NULL, NULL))) THEN ((NULL)OR(0.36095043242856817)) ELSE TOTAL_CHANGES() END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1734262838 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '842143646 sz=505190139 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 1947316559 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=376131304'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-749765480 -998181053 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.383062776028983) BETWEEN (0.9655280089681567) AND ('0.6105510823937896')))AND((x'' IN ()))))OR(('-1362585955' IN ('-638028991')))))OR(((((0x49034af5)AND(0.4186477523647374)))AND(NULL)))))AND((((NULL, x'', '330240842')) NOT BETWEEN ((NULL, '1426521151', NULL)) AND (('-229521466', NULL, '766359626'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1680962703 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LENGTH(0.8810062023354783))%((-1972047620 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1207740041 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 1941052230 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1894059263 sz=1780715132 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'0758') BETWEEN (0.7712783079699991) AND (x''))) BETWEEN (NULL) AND ((('2046849968')IS(x'0b50')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2021384826 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('!n', NULL, -1563697047)) BETWEEN (('/qnya', '', NULL)) AND ((0.8493628821997375, '933184705', 1704383682))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=80659712 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=731144726 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=496311564 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-579851261 261768201 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1131507887 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (912715097 IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN x'1a23' THEN x'd7162d76' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1535807350 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2044823315 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((0.048780784333104066) IS FALSE), CASE x'4acc'  WHEN 1.320387721E9 THEN '' END, '8'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-2123719546 sz=1074012053 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2022298961 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1302164666'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=353122508 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN '' THEN 0xffffffff85f4fb65 END, ((NULL)-('-748573934')), ((NULL)<<(0.9707895313614386)), (('xp^s') NOT BETWEEN ('-1262472199') AND (0.6210270713945074)), (NOT ('-2044823315'))))>=(((('')<<(x'')), (7.34241164E8 IN ()), (NULL IN ()), (('-1845409639') NOT BETWEEN (x'5e92') AND ('-554518040')), CAST(x'd37b' AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1313866035 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x627445ca)IS(0.7227508684553354))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1375759699 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1880238419 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=685320031 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('c7')))AND(0.7922483057032766))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((('-144281838')||(x'b487')), ((347930090) IS FALSE), (0.7302799593276807 IN ()), (~ (x'fd1d')), ((((((((x'')OR(x'')))OR(x'')))AND(x'7350')))OR(0.9873169285963775))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1304912235'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-31184570 2 sz=-1577548477 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('ckJ') NOT NULL))OR(((0.2999245487729697) NOT BETWEEN (NULL) AND (x'')))))OR(CASE WHEN 0X603f91a THEN x'' WHEN NULL THEN -478695793 WHEN 0.9388079056227333 THEN x'55b8' ELSE 'PK!' END)))AND('矍⒴' COLLATE NOCASE)))AND(((0.9587543660520087) BETWEEN (0.7560344044107898) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'fdae' AS NUMERIC)) BETWEEN (((((((((x'')OR(0.6364142170199685)))AND(-7.6390653E7)))OR('E~}X')))AND(0.4186477523647374))) AND (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X3408790c)IS NOT(0.46522798055560655)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1621206855)IS NOT(0.976458773295703)))<>(CAST(0.4186477523647374 AS REAL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.6688780193014267) NOT BETWEEN (((x'')|(0xffffffffd22a4c90))) AND (((((x'')OR(-1.7976931348623157E308)))OR(8.16493457E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1256711584 sz=1858950216 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '731144726'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN ('-1901722096') AND ('-1335503825')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ((('1832704593')LIKE(x'1de5c1f9'))) AND (((0x6c38d9e7)+('0.0')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-742878843 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 sz=330240842 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('-712325748')IS('192169712')))OR(('-513432021' IN ()))))AND(((NULL)|(0Xfffffffff518f492)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 sz=450970866 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.9579191725472721')AND(x'48c4')))AND(x'f1ef')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)-(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-2077987085 1245200822 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('261768201') NOTNULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1464634321 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1798497992'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-709823095 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2 0 sz=603585153'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0Xffffffffc5c0efe1)) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=438502285'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1911968146 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-484042399')) NOT BETWEEN (('Ff.]/')) AND ((x''))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1975471631 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1995675580 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('#t7x''' AS NUMERIC)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '770278803 sz=-2029106412 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((RTRIM(NULL)))>((x'' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)GLOB(x'b4ac333f')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('FALSE') NOT BETWEEN ('y  #5K^') AND (0.1236200972853504))) NOT BETWEEN (((x'')<=('-579851261'))) AND ((0.1471587288179801 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', x'', NULL)) BETWEEN (('', '0.37275291676404954', '-515499573')) AND ((x'', 0.5955392601417788, x'56f2cbd7'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)LIKE('-581536887')))AND(CASE NULL  WHEN 0.38560781789785925 THEN NULL END)))AND(((NULL) NOT BETWEEN (0Xffffffffe9ac6427) AND (-817455731)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1993862354 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2043269455 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=438850769 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-1880238419 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=426832273 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT BETWEEN ('') AND (-998181053))  WHEN ((NULL) BETWEEN ('l맨') AND (NULL)) THEN CASE '2136082013'  WHEN 0xffffffffd4705941 THEN '\-' WHEN x'aad0' THEN '' WHEN 1.393704471E9 THEN 0.5381181653933605 WHEN NULL THEN x'838e' WHEN -623509866 THEN 0.6218675262684621 END ELSE (((NULL))<=((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(TYPEOF(DISTINCT '450970866')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '818594435 1170070271 sz=-731631663'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CASE 0x53123e17  WHEN x'8a1d' THEN 'nX' WHEN 1.993266368E9 THEN x'' WHEN '-1583863241' THEN 0.05429098670013355 ELSE x'' END, ((x'') BETWEEN ('-102416266') AND ('7790951'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('26', x'', NULL)) BETWEEN ((0.7264881374655141, '5_X*<],\㣌', NULL)) AND ((x'069d', x'6f66', NULL))))LIKE(CASE WHEN '858580055' THEN '-638028991' WHEN NULL THEN x'' WHEN 0.16750600228120005 THEN 0X41d7e625 WHEN 0xffffffffe98f971a THEN NULL WHEN 0X3a3c864f THEN ',楘' ELSE '1969372804' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=450970866 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '590842394 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1734750853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-1125770781'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-282795106 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-820197283 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=-1207666624 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1393222850'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 1.7976931348623157E308 THEN '' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ('d#')) THEN (('-819736261')<=(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '0.897787141651254'  WHEN 7.34241164E8 THEN NULL WHEN 0.6818889606898744 THEN '6퐯' WHEN x'' THEN 305284016 ELSE 0.5276679523943808 END)AND(ABS(DISTINCT 0.6905825938723877))))OR(LIKELIHOOD(0.823195056633549, 0.09239341900974418))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2045378713'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS INTEGER) THEN x'8360b021' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-333914482'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT 0x1d24602d)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '289325681 sz=-478695793 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1357093109 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1927304110' COLLATE BINARY  WHEN CAST(NULL AS NUMERIC) THEN CASE '-1315813427'  WHEN -1309726447 THEN NULL ELSE 0.4291293259633049 END WHEN CAST(NULL AS NUMERIC) THEN CASE WHEN '&AUhw21><' THEN x'' WHEN 0.2751992148247925 THEN 0.6705530390763078 WHEN 0.2579834917691666 THEN NULL ELSE -1.97204762E9 END WHEN x'' COLLATE BINARY THEN (('-2030504310')LIKE(NULL)) WHEN CAST(0.8417942900958115 AS BLOB) THEN NULL COLLATE BINARY WHEN (NULL IN ()) THEN -3.76465638E8 ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'69c6aeb2') NOTNULL))/((((0.5792294838710698, 0.5383740877094566, x''))>(('1567113430', '-1598579378', '-1658366873'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(0X49d18954)))<(((-2077987085)IS NOT('rB''x-材')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN (NULL, x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2021398696 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1074012053 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=837945505 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 1 noskipscan'); -- 0ms;
UPDATE OR IGNORE t1 SET c0='-768979824'; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''); -- 0ms;
INSERT OR FAIL INTO vt0(c2) VALUES (NULL); -- 7ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-7.31631663E8); -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1901722096' COLLATE BINARY) NOT BETWEEN (CASE WHEN '-1082347644' THEN x'' ELSE x'' END) AND ((((((((('G/*l^E')AND(0.14044375405074494)))AND(x'')))OR(0.861779675173771)))AND('\n3*T')))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('', x''); -- 1ms;
UPDATE t0 SET (c0)=(0.8588318156483575); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.46730015465076313) WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(((((vt0.lid)AND(vt0.c1)))AND(vt0.c1)))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0.5378053439543684'), (0.5003633513573406), (NULL); -- 1ms;
INSERT OR ABORT INTO vt0(c1, c2) VALUES (NULL, x''); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c2)=(1404440303); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE ON t0 FOR EACH ROW  BEGIN SELECT RAISE(FAIL, 'asdf');END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'033b', NULL); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, lid, c1)=('1835331041', x'', NULL) WHERE (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c2 COLLATE RTRIM)); -- 0ms;
INSERT OR FAIL INTO vt0(lid, c0) VALUES (NULL, 0Xffffffff8c324398), (NULL, 0.8253184771488931), (x'', '-756736531'); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
CREATE INDEX IF NOT EXISTS i29 ON t0((('9Gsx2p#')LIKE(((c0) NOT BETWEEN (c0) AND ('-3'))))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.04842052825195653); -- 0ms;
COMMIT TRANSACTION; -- 3ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM t0 WHERE (((t0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((t0.c0 COLLATE BINARY))); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''), (x''), ('-652431567'); -- 0ms;
INSERT OR ABORT INTO vt0(lid) VALUES ('rF'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c48; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, lid)=(NULL, '-2044942203', x'') WHERE CAST(vt0.lid AS NUMERIC) COLLATE NOCASE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c69; -- 0ms;
CREATE UNIQUE INDEX i79 ON t0(CAST(CASE WHEN c69 THEN c69 ELSE c69 END AS INTEGER) DESC) WHERE ((((NULL) NOT BETWEEN ('1204428067') AND (c69)))|(c69)); -- 0ms;
UPDATE vt0 SET (lid)=(NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c2=NULL WHERE ((CAST(vt0.c2 AS BLOB)) NOT BETWEEN (vt0.lid COLLATE BINARY) AND ((+ (vt0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
UPDATE t0 SET (c69)=(0.4756626841325917); -- 0ms;
UPDATE t0 SET (c69)=(0.6872967528150047) WHERE ((IFNULL(t0.c69, t0.c69)) BETWEEN (t0.c69 COLLATE NOCASE) AND ((((t0.c69))>((0.41419882132698127))))); -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c69, c69)=(0.5082994736693438, NULL); -- 0ms;
UPDATE t0 SET c69=1082481939, c69=0x3bcecb82; -- 0ms;
UPDATE OR IGNORE t0 SET (c69)=(NULL) WHERE (((NOT (t0.c69)))<((+ (t0.c69)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c69 TO c29; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c29 TO c68; -- 1ms;
UPDATE OR IGNORE vt0 SET (lid, c0, c0)=('-1814763908', 0.5013306446094555, '330240842'); -- 1ms;
UPDATE OR IGNORE t0 SET c68='-1915945264', c68=0.30431908940338936 WHERE ((((((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)OR(CASE WHEN t0.c68 THEN t0.c68 END)))OR(UPPER(t0.c68))))AND(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR((t0.c68 IN ()))); -- 0ms;
DROP INDEX IF EXISTS "i79"; -- 0ms;
INSERT OR IGNORE INTO vt0(lid, c0, c2) VALUES (NULL, x'', x''); -- 0ms;
UPDATE OR REPLACE vt0 SET c2=x'c41b'; -- 0ms;
UPDATE OR IGNORE t0 SET c68=x'' WHERE ((((t0.c68)*(t0.c68)))<<(t0.c68)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 698699710);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1623962249,8');\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET c68=x'', c68=NULL, c68=NULL WHERE ((((CASE WHEN t0.c68 THEN t0.c68 END)OR(NULL)))OR((~ (t0.c68)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE t0 SET c68=261768201 WHERE 0.7814733824787973; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='-1335503825'; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=685894464,7');\n; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, lid) VALUES ('TRUE', '954788821'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44513'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0, lid) VALUES (NULL, NULL, -9223372036854775808); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt0(c2) VALUES (0.6786393017710477), ('-768979824'), ('0 MlE'); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) WHERE (CASE ((vt0.c2)|(vt0.c1))  WHEN ((((((((t0.c68)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((((((vt0.c2)OR(vt0.c1)))OR(vt0.lid)))<((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c2)|(vt0.c1))  WHEN ((((((((t0.c68)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) ORDER BY ((((((vt0.c2)OR(vt0.c1)))OR(vt0.lid)))<((NOT (vt0.c0)))) ASC);
SELECT * FROM t0 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) WHERE (CASE ((vt0.c2)|(vt0.c1))  WHEN ((((((((t0.c68)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((((((vt0.c2)OR(vt0.c1)))OR(vt0.lid)))<((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c2)|(vt0.c1))  WHEN ((((((((t0.c68)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) ORDER BY ((((((vt0.c2)OR(vt0.c1)))OR(vt0.lid)))<((NOT (vt0.c0)))) ASC);
SELECT * FROM t0 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) WHERE (CASE ((vt0.c2)|(vt0.c1))  WHEN ((((((((t0.c68)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((((((vt0.c2)OR(vt0.c1)))OR(vt0.lid)))<((NOT (vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (TYPEOF(((vt0.c0) IS FALSE))) ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE), (vt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE), (vt0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(((vt0.c0) IS FALSE))) ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE), (vt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE), (vt0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(((vt0.c0) IS FALSE))) ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE), (vt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1)<=(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)<=(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)<=(vt0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c2)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((x'')))) ORDER BY ((((vt0.c0)>=(vt0.c0)))>(((t0.c68) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((x'')))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)>=(vt0.c0)))>(((t0.c68) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c2)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((x'')))) ORDER BY ((((vt0.c0)>=(vt0.c0)))>(((t0.c68) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((x'')))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)>=(vt0.c0)))>(((t0.c68) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c2)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((x'')))) ORDER BY ((((vt0.c0)>=(vt0.c0)))>(((t0.c68) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0, t0 WHERE (CASE CAST(vt0.c2 AS BLOB)  WHEN UPPER(DISTINCT t0.c68) THEN ((((vt0.c1)OR(t0.c68)))OR(0xffffffffbf47ded8)) WHEN TRIM(DISTINCT vt0.lid) THEN ((-2.029106412E9) BETWEEN (vt0.c1) AND (0.7482610696463552)) WHEN ((((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE UNLIKELY(DISTINCT vt0.c0) END) ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c2 AS BLOB)  WHEN UPPER(DISTINCT t0.c68) THEN ((((vt0.c1)OR(t0.c68)))OR(0Xffffffffbf47ded8)) WHEN TRIM(DISTINCT vt0.lid) THEN ((-2.029106412E9) BETWEEN (vt0.c1) AND (0.7482610696463552)) WHEN ((((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE UNLIKELY(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CASE CAST(vt0.c2 AS BLOB)  WHEN UPPER(DISTINCT t0.c68) THEN ((((vt0.c1)OR(t0.c68)))OR(0xffffffffbf47ded8)) WHEN TRIM(DISTINCT vt0.lid) THEN ((-2.029106412E9) BETWEEN (vt0.c1) AND (0.7482610696463552)) WHEN ((((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE UNLIKELY(DISTINCT vt0.c0) END) ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c2 AS BLOB)  WHEN UPPER(DISTINCT t0.c68) THEN ((((vt0.c1)OR(t0.c68)))OR(0Xffffffffbf47ded8)) WHEN TRIM(DISTINCT vt0.lid) THEN ((-2.029106412E9) BETWEEN (vt0.c1) AND (0.7482610696463552)) WHEN ((((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE UNLIKELY(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CASE CAST(vt0.c2 AS BLOB)  WHEN UPPER(DISTINCT t0.c68) THEN ((((vt0.c1)OR(t0.c68)))OR(0xffffffffbf47ded8)) WHEN TRIM(DISTINCT vt0.lid) THEN ((-2.029106412E9) BETWEEN (vt0.c1) AND (0.7482610696463552)) WHEN ((((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE UNLIKELY(DISTINCT vt0.c0) END) ORDER BY (SQLITE_SOURCE_ID() IN ())  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.lid IN (NULL, vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.lid IN (NULL, vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.lid IN (NULL, vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.lid IN (NULL, vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.lid IN (NULL, vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((((vt0.lid))>=((vt0.c2)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (0X49aa214e));
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid))>=((vt0.c2)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (0x49aa214e)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((((vt0.lid))>=((vt0.c2)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (0X49aa214e));
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid))>=((vt0.c2)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (0x49aa214e)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((((vt0.lid))>=((vt0.c2)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (0X49aa214e));
SELECT * FROM t0 WHERE (((t0.c68)GLOB(t0.c68)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)GLOB(t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c68)GLOB(t0.c68)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)GLOB(t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c68)GLOB(t0.c68)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY '%,\rrUc'  NULLS FIRST, ((((((((TYPEOF(vt0.lid))OR(HEX(vt0.lid))))OR(CAST(vt0.c0 AS REAL))))OR(((0.9346274500220575)<(vt0.lid)))))AND((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY '%,\rrUc'  NULLS FIRST, ((((((((TYPEOF(vt0.lid))OR(HEX(vt0.lid))))OR(CAST(vt0.c0 AS REAL))))OR(((0.9346274500220575)<(vt0.lid)))))AND((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY '%,\rrUc'  NULLS FIRST, ((((((((TYPEOF(vt0.lid))OR(HEX(vt0.lid))))OR(CAST(vt0.c0 AS REAL))))OR(((0.9346274500220575)<(vt0.lid)))))AND((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY '%,\rrUc'  NULLS FIRST, ((((((((TYPEOF(vt0.lid))OR(HEX(vt0.lid))))OR(CAST(vt0.c0 AS REAL))))OR(((0.9346274500220575)<(vt0.lid)))))AND((vt0.c1 IN ()))));
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN t0.c68 END) ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND ('')) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN t0.c68 END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND ('')) AS INTEGER)  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN t0.c68 END) ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND ('')) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN t0.c68 END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND ('')) AS INTEGER)  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN t0.c68 END) ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND ('')) AS INTEGER)  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.lid COLLATE NOCASE)*(CAST(vt0.c1 AS NUMERIC)))) ORDER BY (((vt0.c1, ((vt0.c2)|(vt0.lid)), (vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.lid)&(vt0.c2)), ((vt0.c0) NOT NULL)))), (((vt0.c1 IN ()))IS NOT(((vt0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid COLLATE NOCASE)*(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, ((vt0.c2)|(vt0.lid)), (vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.lid)&(vt0.c2)), ((vt0.c0) NOT NULL)))), (((vt0.c1 IN ()))IS NOT(((vt0.c2) NOT NULL))) ASC);
SELECT * FROM vt0 WHERE (((vt0.lid COLLATE NOCASE)*(CAST(vt0.c1 AS NUMERIC)))) ORDER BY (((vt0.c1, ((vt0.c2)|(vt0.lid)), (vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.lid)&(vt0.c2)), ((vt0.c0) NOT NULL)))), (((vt0.c1 IN ()))IS NOT(((vt0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid COLLATE NOCASE)*(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, ((vt0.c2)|(vt0.lid)), (vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.lid)&(vt0.c2)), ((vt0.c0) NOT NULL)))), (((vt0.c1 IN ()))IS NOT(((vt0.c2) NOT NULL))) ASC);
SELECT * FROM vt0 WHERE (((vt0.lid COLLATE NOCASE)*(CAST(vt0.c1 AS NUMERIC)))) ORDER BY (((vt0.c1, ((vt0.c2)|(vt0.lid)), (vt0.c0 IN ())))>=((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), ((vt0.lid)&(vt0.c2)), ((vt0.c0) NOT NULL)))), (((vt0.c1 IN ()))IS NOT(((vt0.c2) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((NOT (vt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((NOT (vt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((NOT (vt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))AND((~ (vt0.lid))))) ORDER BY HEX(vt0.c1) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))AND((~ (vt0.lid))))) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(vt0.c1) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))AND((~ (vt0.lid))))) ORDER BY HEX(vt0.c1) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))AND((~ (vt0.lid))))) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(vt0.c1) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))AND((~ (vt0.lid))))) ORDER BY HEX(vt0.c1) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY ((((vt0.lid)OR(CASE WHEN vt0.lid THEN vt0.lid END)))OR(((vt0.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid)OR(CASE WHEN vt0.lid THEN vt0.lid END)))OR(((vt0.c1) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY ((((vt0.lid)OR(CASE WHEN vt0.lid THEN vt0.lid END)))OR(((vt0.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid)OR(CASE WHEN vt0.lid THEN vt0.lid END)))OR(((vt0.c1) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY ((((vt0.lid)OR(CASE WHEN vt0.lid THEN vt0.lid END)))OR(((vt0.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((+ ((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ ((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ ((- (t0.c68)))));
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((t0.c68)<(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)<(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (((t0.c68)<(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)<(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (((t0.c68)<(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY 648209778, 0.20023021418795195 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY 648209778, 0.20023021418795195 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY 648209778, 0.20023021418795195 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY 648209778, 0.20023021418795195 ASC);
SELECT * FROM vt0, t0 WHERE ((((t0.c68)) NOT BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c1)>=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c1)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c68)) NOT BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c1)>=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c1)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c68)) NOT BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c1)>=(vt0.c0))))));
SELECT * FROM t0 WHERE (t0.c68) ORDER BY ((+ (t0.c68)) IN (-589869957)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((+ (t0.c68)) IN (-589869957)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c68) ORDER BY ((+ (t0.c68)) IN (-589869957)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((+ (t0.c68)) IN (-589869957)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c68) ORDER BY ((+ (t0.c68)) IN (-589869957)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((0xffffffffd4642fd1)|(0.7777395608238125)));
SELECT SUM(count) FROM (SELECT ((((0xffffffffd4642fd1)|(0.7777395608238125))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0xffffffffd4642fd1)|(0.7777395608238125)));
SELECT SUM(count) FROM (SELECT ((((0xffffffffd4642fd1)|(0.7777395608238125))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0xffffffffd4642fd1)|(0.7777395608238125)));
SELECT * FROM t0 WHERE ((((((t0.c68, t0.c68, t0.c68))==((t0.c68, t0.c68, 'z3i*9⦄t>0')))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68, t0.c68, t0.c68))==((t0.c68, t0.c68, 'z3i*9⦄t>0')))) NOT NULL)) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE ((((((t0.c68, t0.c68, t0.c68))==((t0.c68, t0.c68, 'z3i*9⦄t>0')))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68, t0.c68, t0.c68))==((t0.c68, t0.c68, 'z3i*9⦄t>0')))) NOT NULL)) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE ((((((t0.c68, t0.c68, t0.c68))==((t0.c68, t0.c68, 'z3i*9⦄t>0')))) NOT NULL));
SELECT * FROM t0, vt0 WHERE (CASE 0X6d3cda51  WHEN vt0.lid COLLATE NOCASE THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid END WHEN ((vt0.c1)IS(t0.c68)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.lid END WHEN (((t0.c68, vt0.c1, vt0.c0, vt0.c1, vt0.c2))<((vt0.c2, vt0.c0, t0.c68, vt0.lid, vt0.c0))) THEN (((vt0.c2, vt0.c2, vt0.c0))=((vt0.c0, vt0.c2, 1522653128))) END) ORDER BY CAST(LOWER(DISTINCT vt0.c1) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE 0X6d3cda51  WHEN vt0.lid COLLATE NOCASE THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid END WHEN ((vt0.c1)IS(t0.c68)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.lid END WHEN (((t0.c68, vt0.c1, vt0.c0, vt0.c1, vt0.c2))<((vt0.c2, vt0.c0, t0.c68, vt0.lid, vt0.c0))) THEN (((vt0.c2, vt0.c2, vt0.c0))==((vt0.c0, vt0.c2, 1522653128))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(LOWER(DISTINCT vt0.c1) AS REAL) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CASE 0X6d3cda51  WHEN vt0.lid COLLATE NOCASE THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid END WHEN ((vt0.c1)IS(t0.c68)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.lid END WHEN (((t0.c68, vt0.c1, vt0.c0, vt0.c1, vt0.c2))<((vt0.c2, vt0.c0, t0.c68, vt0.lid, vt0.c0))) THEN (((vt0.c2, vt0.c2, vt0.c0))=((vt0.c0, vt0.c2, 1522653128))) END) ORDER BY CAST(LOWER(DISTINCT vt0.c1) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE 0X6d3cda51  WHEN vt0.lid COLLATE NOCASE THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid END WHEN ((vt0.c1)IS(t0.c68)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.lid END WHEN (((t0.c68, vt0.c1, vt0.c0, vt0.c1, vt0.c2))<((vt0.c2, vt0.c0, t0.c68, vt0.lid, vt0.c0))) THEN (((vt0.c2, vt0.c2, vt0.c0))==((vt0.c0, vt0.c2, 1522653128))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(LOWER(DISTINCT vt0.c1) AS REAL) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CASE 0X6d3cda51  WHEN vt0.lid COLLATE NOCASE THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid END WHEN ((vt0.c1)IS(t0.c68)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.lid END WHEN (((t0.c68, vt0.c1, vt0.c0, vt0.c1, vt0.c2))<((vt0.c2, vt0.c0, t0.c68, vt0.lid, vt0.c0))) THEN (((vt0.c2, vt0.c2, vt0.c0))=((vt0.c0, vt0.c2, 1522653128))) END) ORDER BY CAST(LOWER(DISTINCT vt0.c1) AS REAL) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((+ (t0.c68)) IN ())) ORDER BY SUBSTR(((t0.c68) NOTNULL), ((t0.c68)LIKE(NULL))), ((((t0.c68)<<(''))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c68)) IN ())) IS TRUE)  as count FROM t0 ORDER BY SUBSTR(((t0.c68) NOTNULL), ((t0.c68)LIKE(NULL))), ((((t0.c68)<<(''))) IS TRUE) DESC);
SELECT * FROM t0 WHERE (((+ (t0.c68)) IN ())) ORDER BY SUBSTR(((t0.c68) NOTNULL), ((t0.c68)LIKE(NULL))), ((((t0.c68)<<(''))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c68)) IN ())) IS TRUE)  as count FROM t0 ORDER BY SUBSTR(((t0.c68) NOTNULL), ((t0.c68)LIKE(NULL))), ((((t0.c68)<<(''))) IS TRUE) DESC);
SELECT * FROM t0 WHERE (((+ (t0.c68)) IN ())) ORDER BY SUBSTR(((t0.c68) NOTNULL), ((t0.c68)LIKE(NULL))), ((((t0.c68)<<(''))) IS TRUE) DESC;
SELECT * FROM t0, vt0 WHERE (((((vt0.lid) NOTNULL))<(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid) NOTNULL))<(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.lid) NOTNULL))<(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid) NOTNULL))<(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.lid) NOTNULL))<(((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.c0)))));
SELECT ALL * FROM t0 WHERE ((~ (((((t0.c68)OR(t0.c68)))AND(t0.c68))))) ORDER BY LOWER(DISTINCT (~ (t0.c68)))  NULLS LAST, json_remove(t0.c68, ((t0.c68) NOT BETWEEN (x'') AND (t0.c68))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((t0.c68)OR(t0.c68)))AND(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY LOWER(DISTINCT (~ (t0.c68)))  NULLS LAST, json_remove(t0.c68, ((t0.c68) NOT BETWEEN (x'') AND (t0.c68))) DESC);
SELECT ALL * FROM t0 WHERE ((~ (((((t0.c68)OR(t0.c68)))AND(t0.c68))))) ORDER BY LOWER(DISTINCT (~ (t0.c68)))  NULLS LAST, json_remove(t0.c68, ((t0.c68) NOT BETWEEN (x'') AND (t0.c68))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((t0.c68)OR(t0.c68)))AND(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY LOWER(DISTINCT (~ (t0.c68)))  NULLS LAST, json_remove(t0.c68, ((t0.c68) NOT BETWEEN (x'') AND (t0.c68))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.014162730859881512);
SELECT SUM(count) FROM (SELECT ((0.014162730859881512) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.014162730859881512);
SELECT SUM(count) FROM (SELECT ((0.014162730859881512) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.014162730859881512);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN '0qGUd' ELSE (t0.c68 IN (t0.c68)) END) ORDER BY ((x'' COLLATE BINARY)<=(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN '0qGUd' ELSE (t0.c68 IN (t0.c68)) END) IS TRUE)  as count FROM t0 ORDER BY ((x'' COLLATE BINARY)<=(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN '0qGUd' ELSE (t0.c68 IN (t0.c68)) END) ORDER BY ((x'' COLLATE BINARY)<=(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN '0qGUd' ELSE (t0.c68 IN (t0.c68)) END) IS TRUE)  as count FROM t0 ORDER BY ((x'' COLLATE BINARY)<=(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN '0qGUd' ELSE (t0.c68 IN (t0.c68)) END) ORDER BY ((x'' COLLATE BINARY)<=(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) DESC;
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c2) BETWEEN (t0.c68) AND (vt0.c1))))>((((t0.c68)/(vt0.lid))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2) BETWEEN (t0.c68) AND (vt0.c1))))>((((t0.c68)/(vt0.lid)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c2) BETWEEN (t0.c68) AND (vt0.c1))))>((((t0.c68)/(vt0.lid))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2) BETWEEN (t0.c68) AND (vt0.c1))))>((((t0.c68)/(vt0.lid)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c2) BETWEEN (t0.c68) AND (vt0.c1))))>((((t0.c68)/(vt0.lid))))));
SELECT ALL * FROM vt0, t0 WHERE ((((((((((('(B5A')OR(vt0.c0)))OR(t0.c68)))OR(-1630707654)))AND(vt0.c2)))<<(((vt0.c1)GLOB(vt0.lid)))));
SELECT SUM(count) FROM (SELECT (((((((((((('(B5A')OR(vt0.c0)))OR(t0.c68)))OR(-1630707654)))AND(vt0.c2)))<<(((vt0.c1)GLOB(vt0.lid))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((((((('(B5A')OR(vt0.c0)))OR(t0.c68)))OR(-1630707654)))AND(vt0.c2)))<<(((vt0.c1)GLOB(vt0.lid)))));
SELECT SUM(count) FROM (SELECT (((((((((((('(B5A')OR(vt0.c0)))OR(t0.c68)))OR(-1630707654)))AND(vt0.c2)))<<(((vt0.c1)GLOB(vt0.lid))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((((((('(B5A')OR(vt0.c0)))OR(t0.c68)))OR(-1630707654)))AND(vt0.c2)))<<(((vt0.c1)GLOB(vt0.lid)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.lid) IS TRUE))AND(CHAR(vt0.lid))))AND('''A'))) ORDER BY (-1.894968743E9 IN ()) ASC, ((((+ (vt0.c0))))>((CAST(vt0.lid AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid) IS TRUE))AND(CHAR(vt0.lid))))AND('''A'))) IS TRUE)  as count FROM vt0 ORDER BY (-1.894968743E9 IN ()) ASC, ((((+ (vt0.c0))))>((CAST(vt0.lid AS REAL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.lid) IS TRUE))AND(CHAR(vt0.lid))))AND('''A'))) ORDER BY (-1.894968743E9 IN ()) ASC, ((((+ (vt0.c0))))>((CAST(vt0.lid AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid) IS TRUE))AND(CHAR(vt0.lid))))AND('''A'))) IS TRUE)  as count FROM vt0 ORDER BY (-1.894968743E9 IN ()) ASC, ((((+ (vt0.c0))))>((CAST(vt0.lid AS REAL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.lid) IS TRUE))AND(CHAR(vt0.lid))))AND('''A'))) ORDER BY (-1.894968743E9 IN ()) ASC, ((((+ (vt0.c0))))>((CAST(vt0.lid AS REAL)))) DESC;
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c1))IS((((vt0.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c1))IS((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c1))IS((((vt0.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c1))IS((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c1))IS((((vt0.c0))<((vt0.c1))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.lid THEN vt0.lid END) IS FALSE)) ORDER BY CASE NULL  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)) THEN (vt0.lid IN ()) END DESC, TRIM(((vt0.c0) ISNULL), CASE t0.c68  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN '⿑Ꙃ' THEN t0.c68 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.lid THEN vt0.lid END) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE NULL  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)) THEN (vt0.lid IN ()) END DESC, TRIM(((vt0.c0) ISNULL), CASE t0.c68  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN '⿑Ꙃ' THEN t0.c68 END) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.lid THEN vt0.lid END) IS FALSE)) ORDER BY CASE NULL  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)) THEN (vt0.lid IN ()) END DESC, TRIM(((vt0.c0) ISNULL), CASE t0.c68  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN '⿑Ꙃ' THEN t0.c68 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.lid THEN vt0.lid END) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE NULL  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)) THEN (vt0.lid IN ()) END DESC, TRIM(((vt0.c0) ISNULL), CASE t0.c68  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN '⿑Ꙃ' THEN t0.c68 END) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.lid THEN vt0.lid END) IS FALSE)) ORDER BY CASE NULL  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)) THEN (vt0.lid IN ()) END DESC, TRIM(((vt0.c0) ISNULL), CASE t0.c68  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN '⿑Ꙃ' THEN t0.c68 END) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) ORDER BY t0.c68, '' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c68, '' COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) ORDER BY t0.c68, '' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c68, '' COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) ORDER BY t0.c68, '' COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE x'' END)) AND ((((vt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE x'' END)) AND ((((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE x'' END)) AND ((((vt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE x'' END)) AND ((((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE x'' END)) AND ((((vt0.c1) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))) NOTNULL));
SELECT * FROM vt0, t0 WHERE (((t0.c68) NOT NULL) COLLATE BINARY) ORDER BY CAST((vt0.c0 IN (vt0.c2)) AS REAL), ((((vt0.c1)GLOB(vt0.lid))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((((vt0.c0)AND(t0.c68)))OR(vt0.lid))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((vt0.c0 IN (vt0.c2)) AS REAL), ((((vt0.c1)GLOB(vt0.lid))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((((vt0.c0)AND(t0.c68)))OR(vt0.lid)))));
SELECT * FROM vt0, t0 WHERE (((t0.c68) NOT NULL) COLLATE BINARY) ORDER BY CAST((vt0.c0 IN (vt0.c2)) AS REAL), ((((vt0.c1)GLOB(vt0.lid))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((((vt0.c0)AND(t0.c68)))OR(vt0.lid))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((vt0.c0 IN (vt0.c2)) AS REAL), ((((vt0.c1)GLOB(vt0.lid))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((((vt0.c0)AND(t0.c68)))OR(vt0.lid)))));
SELECT * FROM vt0, t0 WHERE (((t0.c68) NOT NULL) COLLATE BINARY) ORDER BY CAST((vt0.c0 IN (vt0.c2)) AS REAL), ((((vt0.c1)GLOB(vt0.lid))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((((vt0.c0)AND(t0.c68)))OR(vt0.lid))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68)) AND ((x''))) COLLATE NOCASE) ORDER BY ((t0.c68)>>((((t0.c68))>=((NULL))))) DESC  NULLS LAST, CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((t0.c68)) AND ((x''))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68)>>((((t0.c68))>=((NULL))))) DESC  NULLS LAST, CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68)) AND ((x''))) COLLATE NOCASE) ORDER BY ((t0.c68)>>((((t0.c68))>=((NULL))))) DESC  NULLS LAST, CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((t0.c68)) AND ((x''))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68)>>((((t0.c68))>=((NULL))))) DESC  NULLS LAST, CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68)) AND ((x''))) COLLATE NOCASE) ORDER BY ((t0.c68)>>((((t0.c68))>=((NULL))))) DESC  NULLS LAST, CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY ASC;
SELECT * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c68);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-1255915794') ORDER BY ((vt0.c1) NOTNULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1255915794') IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) NOTNULL) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-1255915794') ORDER BY ((vt0.c1) NOTNULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1255915794') IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) NOTNULL) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-1255915794') ORDER BY ((vt0.c1) NOTNULL) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.lid, vt0.lid, vt0.c0, vt0.lid, vt0.c2))>=((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c0))) AS INTEGER)) ORDER BY CAST(((vt0.c1)IS NOT(vt0.c0)) AS INTEGER) DESC, ((((((vt0.c0)>(vt0.c0)))AND((('') IS TRUE))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.lid, vt0.lid, vt0.c0, vt0.lid, vt0.c2))>=((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)IS NOT(vt0.c0)) AS INTEGER) DESC, ((((((vt0.c0)>(vt0.c0)))AND((('') IS TRUE))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.lid, vt0.lid, vt0.c0, vt0.lid, vt0.c2))>=((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c0))) AS INTEGER)) ORDER BY CAST(((vt0.c1)IS NOT(vt0.c0)) AS INTEGER) DESC, ((((((vt0.c0)>(vt0.c0)))AND((('') IS TRUE))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.lid, vt0.lid, vt0.c0, vt0.lid, vt0.c2))>=((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)IS NOT(vt0.c0)) AS INTEGER) DESC, ((((((vt0.c0)>(vt0.c0)))AND((('') IS TRUE))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.lid, vt0.lid, vt0.c0, vt0.lid, vt0.c2))>=((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c0))) AS INTEGER)) ORDER BY CAST(((vt0.c1)IS NOT(vt0.c0)) AS INTEGER) DESC, ((((((vt0.c0)>(vt0.c0)))AND((('') IS TRUE))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(vt0.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))<<(vt0.lid))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(vt0.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))<<(vt0.lid))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(vt0.lid)));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((CAST('-2007936768' AS NUMERIC))) AND (('')))) ORDER BY (((vt0.lid)) BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (vt0.c2)))) AND ((((vt0.c2)|(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CAST('-2007936768' AS NUMERIC))) AND (('')))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.lid)) BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (vt0.c2)))) AND ((((vt0.c2)|(t0.c68))))));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((CAST('-2007936768' AS NUMERIC))) AND (('')))) ORDER BY (((vt0.lid)) BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (vt0.c2)))) AND ((((vt0.c2)|(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CAST('-2007936768' AS NUMERIC))) AND (('')))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.lid)) BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (vt0.c2)))) AND ((((vt0.c2)|(t0.c68))))));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((CAST('-2007936768' AS NUMERIC))) AND (('')))) ORDER BY (((vt0.lid)) BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (vt0.c2)))) AND ((((vt0.c2)|(t0.c68)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c2)GLOB(t0.c68))) BETWEEN ((((t0.c68))!=((vt0.c1)))) AND (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)GLOB(t0.c68))) BETWEEN ((((t0.c68))<>((vt0.c1)))) AND (t0.c68))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c2)GLOB(t0.c68))) BETWEEN ((((t0.c68))!=((vt0.c1)))) AND (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)GLOB(t0.c68))) BETWEEN ((((t0.c68))<>((vt0.c1)))) AND (t0.c68))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c2)GLOB(t0.c68))) BETWEEN ((((t0.c68))!=((vt0.c1)))) AND (t0.c68)));
SELECT ALL * FROM vt0 WHERE ((('-522328551')/(vt0.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('-522328551')/(vt0.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('-522328551')/(vt0.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('-522328551')/(vt0.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('-522328551')/(vt0.lid)) COLLATE BINARY);
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((t0.c68)GLOB(vt0.c0)) THEN ((vt0.lid)IS NOT(t0.c68)) ELSE t0.c68 END) ORDER BY (((vt0.c0)||(t0.c68)) IN (((((vt0.lid)AND(vt0.c0)))AND(vt0.c2)))) DESC  NULLS LAST, CAST(vt0.lid AS BLOB) COLLATE RTRIM DESC, (((((~ (vt0.lid)))AND(TOTAL_CHANGES())))OR(((((vt0.lid)OR(t0.c68)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c68)GLOB(vt0.c0)) THEN ((vt0.lid)IS NOT(t0.c68)) ELSE t0.c68 END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)||(t0.c68)) IN (((((vt0.lid)AND(vt0.c0)))AND(vt0.c2)))) DESC  NULLS LAST, CAST(vt0.lid AS BLOB) COLLATE RTRIM DESC, (((((~ (vt0.lid)))AND(TOTAL_CHANGES())))OR(((((vt0.lid)OR(t0.c68)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((t0.c68)GLOB(vt0.c0)) THEN ((vt0.lid)IS NOT(t0.c68)) ELSE t0.c68 END) ORDER BY (((vt0.c0)||(t0.c68)) IN (((((vt0.lid)AND(vt0.c0)))AND(vt0.c2)))) DESC  NULLS LAST, CAST(vt0.lid AS BLOB) COLLATE RTRIM DESC, (((((~ (vt0.lid)))AND(TOTAL_CHANGES())))OR(((((vt0.lid)OR(t0.c68)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c68)GLOB(vt0.c0)) THEN ((vt0.lid)IS NOT(t0.c68)) ELSE t0.c68 END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)||(t0.c68)) IN (((((vt0.lid)AND(vt0.c0)))AND(vt0.c2)))) DESC  NULLS LAST, CAST(vt0.lid AS BLOB) COLLATE RTRIM DESC, (((((~ (vt0.lid)))AND(TOTAL_CHANGES())))OR(((((vt0.lid)OR(t0.c68)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((t0.c68)GLOB(vt0.c0)) THEN ((vt0.lid)IS NOT(t0.c68)) ELSE t0.c68 END) ORDER BY (((vt0.c0)||(t0.c68)) IN (((((vt0.lid)AND(vt0.c0)))AND(vt0.c2)))) DESC  NULLS LAST, CAST(vt0.lid AS BLOB) COLLATE RTRIM DESC, (((((~ (vt0.lid)))AND(TOTAL_CHANGES())))OR(((((vt0.lid)OR(t0.c68)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.lid) ORDER BY vt0.c0 COLLATE RTRIM, CAST((NOT (0.6457335323408587)) AS NUMERIC) ASC, (vt0.c0 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM, CAST((NOT (0.6457335323408587)) AS NUMERIC) ASC, (vt0.c0 COLLATE BINARY IN ()) ASC);
SELECT * FROM vt0 WHERE (vt0.lid) ORDER BY vt0.c0 COLLATE RTRIM, CAST((NOT (0.6457335323408587)) AS NUMERIC) ASC, (vt0.c0 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM, CAST((NOT (0.6457335323408587)) AS NUMERIC) ASC, (vt0.c0 COLLATE BINARY IN ()) ASC);
SELECT * FROM vt0 WHERE (vt0.lid) ORDER BY vt0.c0 COLLATE RTRIM, CAST((NOT (0.6457335323408587)) AS NUMERIC) ASC, (vt0.c0 COLLATE BINARY IN ()) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (HEX(DISTINCT vt0.c2) COLLATE BINARY) ORDER BY ((TRIM(DISTINCT t0.c68, vt0.c0))>=(CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c2) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((TRIM(DISTINCT t0.c68, vt0.c0))>=(CAST(vt0.c0 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (HEX(DISTINCT vt0.c2) COLLATE BINARY) ORDER BY ((TRIM(DISTINCT t0.c68, vt0.c0))>=(CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c2) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((TRIM(DISTINCT t0.c68, vt0.c0))>=(CAST(vt0.c0 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (HEX(DISTINCT vt0.c2) COLLATE BINARY) ORDER BY ((TRIM(DISTINCT t0.c68, vt0.c0))>=(CAST(vt0.c0 AS REAL))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)LIKE(vt0.lid)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR((((t0.c68)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(SQLITE_VERSION())))OR(UPPER(DISTINCT t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.lid)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR((((t0.c68)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(SQLITE_VERSION())))OR(UPPER(DISTINCT t0.c68)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)LIKE(vt0.lid)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR((((t0.c68)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(SQLITE_VERSION())))OR(UPPER(DISTINCT t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.lid)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR((((t0.c68)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(SQLITE_VERSION())))OR(UPPER(DISTINCT t0.c68)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)LIKE(vt0.lid)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR((((t0.c68)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(SQLITE_VERSION())))OR(UPPER(DISTINCT t0.c68))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c2)))AND(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.c2)))OR(t0.c68)))OR(vt0.c1)))))OR(((vt0.c1)<(vt0.lid))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c2)))AND(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.c2)))OR(t0.c68)))OR(vt0.c1)))))OR(((vt0.c1)<(vt0.lid))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c2)))AND(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.c2)))OR(t0.c68)))OR(vt0.c1)))))OR(((vt0.c1)<(vt0.lid))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c2)))AND(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.c2)))OR(t0.c68)))OR(vt0.c1)))))OR(((vt0.c1)<(vt0.lid))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c2)))AND(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.c2)))OR(t0.c68)))OR(vt0.c1)))))OR(((vt0.c1)<(vt0.lid))))) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt0 INDEXED BY i29 WHERE (((0.5010551251053756) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.5010551251053756) IS FALSE)) IS TRUE)  as count FROM vt0 INDEXED BY i29);
SELECT COUNT(*) FROM vt0 INDEXED BY i29 WHERE (((0.5010551251053756) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.5010551251053756) IS FALSE)) IS TRUE)  as count FROM vt0 INDEXED BY i29);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c68 IN ())) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (((x'') BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c2) NOT BETWEEN (((vt0.c0)||(vt0.c1))) AND (vt0.lid)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c68 IN ())) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (((x'') BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c2) NOT BETWEEN (((vt0.c0)||(vt0.c1))) AND (vt0.lid)) DESC);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c68 IN ())) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (((x'') BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c2) NOT BETWEEN (((vt0.c0)||(vt0.c1))) AND (vt0.lid)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c68 IN ())) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (((x'') BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c2) NOT BETWEEN (((vt0.c0)||(vt0.c1))) AND (vt0.lid)) DESC);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c68 IN ())) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (((x'') BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c2) NOT BETWEEN (((vt0.c0)||(vt0.c1))) AND (vt0.lid)) DESC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((vt0.lid) BETWEEN (vt0.c0) AND (t0.c68)))) AND (((+ (0.048511175886726154))))) WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((vt0.lid) BETWEEN (vt0.c0) AND (t0.c68)))) AND (((+ (0.048511175886726154))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((vt0.lid) BETWEEN (vt0.c0) AND (t0.c68)))) AND (((+ (0.048511175886726154))))) WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((vt0.lid) BETWEEN (vt0.c0) AND (t0.c68)))) AND (((+ (0.048511175886726154))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((vt0.lid) BETWEEN (vt0.c0) AND (t0.c68)))) AND (((+ (0.048511175886726154))))) WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c2 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c2 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c2 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c2 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c2 AS INTEGER) AS REAL));
SELECT * FROM t0 WHERE ((((('	blZ緔뻺HA')>=(t0.c68)))&((t0.c68 IN (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((('	blZ緔뻺HA')>=(t0.c68)))&((t0.c68 IN (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((('	blZ緔뻺HA')>=(t0.c68)))&((t0.c68 IN (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((('	blZ緔뻺HA')>=(t0.c68)))&((t0.c68 IN (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((('	blZ緔뻺HA')>=(t0.c68)))&((t0.c68 IN (t0.c68)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c2 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c2 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c2 COLLATE BINARY AS BLOB));
SELECT * FROM vt0 WHERE (((vt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY TIME(vt0.lid COLLATE BINARY, ABS(DISTINCT vt0.c2), -1.412800733E9) DESC, ((((vt0.c0)IS(vt0.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY TIME(vt0.lid COLLATE BINARY, ABS(DISTINCT vt0.c2), -1.412800733E9) DESC, ((((vt0.c0)IS(vt0.c2))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY TIME(vt0.lid COLLATE BINARY, ABS(DISTINCT vt0.c2), -1.412800733E9) DESC, ((((vt0.c0)IS(vt0.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY TIME(vt0.lid COLLATE BINARY, ABS(DISTINCT vt0.c2), -1.412800733E9) DESC, ((((vt0.c0)IS(vt0.c2))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY TIME(vt0.lid COLLATE BINARY, ABS(DISTINCT vt0.c2), -1.412800733E9) DESC, ((((vt0.c0)IS(vt0.c2))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)LIKE(t0.c68))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)LIKE(t0.c68))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)LIKE(t0.c68))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)LIKE(t0.c68))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)LIKE(t0.c68))) NOTNULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c68, t0.c68, vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.lid)) AND ((t0.c68, vt0.c1, 'rb''x-材'))))%(vt0.lid COLLATE NOCASE)) WHERE (((((0.17310835371802447)OR(LIKELY(DISTINCT vt0.c2))))OR(COALESCE(DISTINCT vt0.c0, t0.c68)))) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((0.17310835371802447)OR(LIKELY(DISTINCT vt0.c2))))OR(COALESCE(DISTINCT vt0.c0, t0.c68)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c68, t0.c68, vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.lid)) AND ((t0.c68, vt0.c1, 'rb''x-材'))))%(vt0.lid COLLATE NOCASE)) ORDER BY vt0.c2 DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c68, t0.c68, vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.lid)) AND ((t0.c68, vt0.c1, 'rb''x-材'))))%(vt0.lid COLLATE NOCASE)) WHERE (((((0.17310835371802447)OR(LIKELY(DISTINCT vt0.c2))))OR(COALESCE(DISTINCT vt0.c0, t0.c68)))) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((0.17310835371802447)OR(LIKELY(DISTINCT vt0.c2))))OR(COALESCE(DISTINCT vt0.c0, t0.c68)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c68, t0.c68, vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.lid)) AND ((t0.c68, vt0.c1, 'rb''x-材'))))%(vt0.lid COLLATE NOCASE)) ORDER BY vt0.c2 DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c68, t0.c68, vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.lid)) AND ((t0.c68, vt0.c1, 'rb''x-材'))))%(vt0.lid COLLATE NOCASE)) WHERE (((((0.17310835371802447)OR(LIKELY(DISTINCT vt0.c2))))OR(COALESCE(DISTINCT vt0.c0, t0.c68)))) ORDER BY vt0.c2 DESC;
SELECT ALL * FROM t0, vt0 WHERE (TYPEOF(t0.c68) COLLATE NOCASE) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ((TYPEOF(t0.c68) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c2);
SELECT ALL * FROM t0, vt0 WHERE (TYPEOF(t0.c68) COLLATE NOCASE) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ((TYPEOF(t0.c68) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c2);
SELECT ALL * FROM t0, vt0 WHERE (TYPEOF(t0.c68) COLLATE NOCASE) ORDER BY vt0.c2;
SELECT * FROM vt0, t0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NOT (vt0.lid)) IN (((vt0.lid)&(vt0.c1)), ((((((((t0.c68)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.lid))))) ORDER BY ((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((vt0.c1))==((vt0.lid))))<>((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((x'', vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.lid)) IN (((vt0.lid)&(vt0.c1)), ((((((((t0.c68)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.lid))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((vt0.c1))=((vt0.lid))))<>((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((x'', vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NOT (vt0.lid)) IN (((vt0.lid)&(vt0.c1)), ((((((((t0.c68)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.lid))))) ORDER BY ((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((vt0.c1))==((vt0.lid))))<>((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((x'', vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.lid)) IN (((vt0.lid)&(vt0.c1)), ((((((((t0.c68)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.lid))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((vt0.c1))=((vt0.lid))))<>((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((x'', vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NOT (vt0.lid)) IN (((vt0.lid)&(vt0.c1)), ((((((((t0.c68)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.lid))))) ORDER BY ((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, (((((vt0.c1))==((vt0.lid))))<>((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((x'', vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS INTEGER)) NOT BETWEEN ((~ (x'd3e5'))) AND (CAST(t0.c68 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS INTEGER)) NOT BETWEEN ((~ (x'd3e5'))) AND (CAST(t0.c68 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS INTEGER)) NOT BETWEEN ((~ (x'd3e5'))) AND (CAST(t0.c68 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS INTEGER)) NOT BETWEEN ((~ (x'd3e5'))) AND (CAST(t0.c68 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS INTEGER)) NOT BETWEEN ((~ (x'd3e5'))) AND (CAST(t0.c68 AS REAL))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT * FROM vt0, t0 WHERE (((((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 END)AND(vt0.c2 COLLATE NOCASE)))OR(vt0.lid)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 END)AND(vt0.c2 COLLATE NOCASE)))OR(vt0.lid))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 END)AND(vt0.c2 COLLATE NOCASE)))OR(vt0.lid)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 END)AND(vt0.c2 COLLATE NOCASE)))OR(vt0.lid))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 END)AND(vt0.c2 COLLATE NOCASE)))OR(vt0.lid)));
SELECT * FROM t0 WHERE (LIKELIHOOD(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)), 0.4137368939341821));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)), 0.4137368939341821)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)), 0.4137368939341821));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)), 0.4137368939341821)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)), 0.4137368939341821));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))));
SELECT * FROM vt0, t0 WHERE (0.22396769251998938);
SELECT SUM(count) FROM (SELECT ((0.22396769251998938) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.22396769251998938);
SELECT SUM(count) FROM (SELECT ((0.22396769251998938) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.22396769251998938);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c2 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.lid))>=((vt0.lid))))OR((NOT (t0.c68)))))AND(vt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN NULL THEN (vt0.lid IN ()) ELSE CAST(vt0.c2 AS INTEGER) END, ((x'') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.lid))>=((vt0.lid))))OR((NOT (t0.c68)))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN NULL THEN (vt0.lid IN ()) ELSE CAST(vt0.c2 AS INTEGER) END, ((x'') NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.lid))>=((vt0.lid))))OR((NOT (t0.c68)))))AND(vt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN NULL THEN (vt0.lid IN ()) ELSE CAST(vt0.c2 AS INTEGER) END, ((x'') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.lid))>=((vt0.lid))))OR((NOT (t0.c68)))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN NULL THEN (vt0.lid IN ()) ELSE CAST(vt0.c2 AS INTEGER) END, ((x'') NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.lid))>=((vt0.lid))))OR((NOT (t0.c68)))))AND(vt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN NULL THEN (vt0.lid IN ()) ELSE CAST(vt0.c2 AS INTEGER) END, ((x'') NOTNULL) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('2/') ORDER BY json_type(vt0.c1) ASC  NULLS LAST, CASE ((vt0.c1) NOT NULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS INTEGER) WHEN x'' THEN CAST(vt0.c0 AS BLOB) WHEN (~ ('0.23765180952773224')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)) ELSE (vt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT (('2/') IS TRUE)  as count FROM vt0 ORDER BY json_type(vt0.c1) ASC  NULLS LAST, CASE ((vt0.c1) NOT NULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS INTEGER) WHEN x'' THEN CAST(vt0.c0 AS BLOB) WHEN (~ ('0.23765180952773224')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)) ELSE (vt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ('2/') ORDER BY json_type(vt0.c1) ASC  NULLS LAST, CASE ((vt0.c1) NOT NULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS INTEGER) WHEN x'' THEN CAST(vt0.c0 AS BLOB) WHEN (~ ('0.23765180952773224')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)) ELSE (vt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT (('2/') IS TRUE)  as count FROM vt0 ORDER BY json_type(vt0.c1) ASC  NULLS LAST, CASE ((vt0.c1) NOT NULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS INTEGER) WHEN x'' THEN CAST(vt0.c0 AS BLOB) WHEN (~ ('0.23765180952773224')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)) ELSE (vt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ('2/') ORDER BY json_type(vt0.c1) ASC  NULLS LAST, CASE ((vt0.c1) NOT NULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS INTEGER) WHEN x'' THEN CAST(vt0.c0 AS BLOB) WHEN (~ ('0.23765180952773224')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)) ELSE (vt0.c1 IN ()) END;
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c68 AS REAL) IN (((t0.c68)>(t0.c68))))) ORDER BY CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c68 AS REAL) IN (((t0.c68)>(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c68 AS REAL) IN (((t0.c68)>(t0.c68))))) ORDER BY CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c68 AS REAL) IN (((t0.c68)>(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c68 AS REAL) IN (((t0.c68)>(t0.c68))))) ORDER BY CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (- (((vt0.lid) NOTNULL))) WHERE (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- (((vt0.lid) NOTNULL))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (- (((vt0.lid) NOTNULL))) WHERE (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- (((vt0.lid) NOTNULL))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (- (((vt0.lid) NOTNULL))) WHERE (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c68)AND(vt0.lid)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)AND(vt0.lid)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c68)AND(vt0.lid)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)AND(vt0.lid)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c68)AND(vt0.lid)))OR(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(vt0.c2 AS REAL) THEN CASE WHEN vt0.lid THEN vt0.lid END END WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(vt0.c2 AS REAL) THEN CASE WHEN vt0.lid THEN vt0.lid END END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(vt0.c2 AS REAL) THEN CASE WHEN vt0.lid THEN vt0.lid END END WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(vt0.c2 AS REAL) THEN CASE WHEN vt0.lid THEN vt0.lid END END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(vt0.c2 AS REAL) THEN CASE WHEN vt0.lid THEN vt0.lid END END WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END);
SELECT COUNT(*) FROM t0 WHERE (((t0.c68) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (t0.c68))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c68) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (t0.c68))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c68) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (t0.c68)));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((t0.c68))<(('Q涅'))) THEN ((((((((((((t0.c68)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.lid)))AND(t0.c68)))AND('-2029106412')) ELSE (NOT (vt0.c1)) END) ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (vt0.c2)) ELSE 0Xffffffffa494d31f END DESC, CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS BLOB) DESC, ((vt0.c2)>(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c68))<(('Q涅'))) THEN ((((((((((((t0.c68)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.lid)))AND(t0.c68)))AND('-2029106412')) ELSE (NOT (vt0.c1)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (vt0.c2)) ELSE 0xffffffffa494d31f END DESC, CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS BLOB) DESC, ((vt0.c2)>(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((t0.c68))<(('Q涅'))) THEN ((((((((((((t0.c68)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.lid)))AND(t0.c68)))AND('-2029106412')) ELSE (NOT (vt0.c1)) END) ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (vt0.c2)) ELSE 0Xffffffffa494d31f END DESC, CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS BLOB) DESC, ((vt0.c2)>(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c68))<(('Q涅'))) THEN ((((((((((((t0.c68)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.lid)))AND(t0.c68)))AND('-2029106412')) ELSE (NOT (vt0.c1)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (vt0.c2)) ELSE 0xffffffffa494d31f END DESC, CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS BLOB) DESC, ((vt0.c2)>(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((t0.c68))<(('Q涅'))) THEN ((((((((((((t0.c68)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.lid)))AND(t0.c68)))AND('-2029106412')) ELSE (NOT (vt0.c1)) END) ORDER BY CASE WHEN ((vt0.c1) NOTNULL) THEN (NOT (vt0.c2)) ELSE 0Xffffffffa494d31f END DESC, CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS BLOB) DESC, ((vt0.c2)>(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN json(t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) END) ORDER BY (((t0.c68)-(t0.c68)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json(t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)-(t0.c68)) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN json(t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) END) ORDER BY (((t0.c68)-(t0.c68)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json(t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)-(t0.c68)) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN json(t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) END) ORDER BY (((t0.c68)-(t0.c68)) IN ()) DESC;
SELECT COUNT(*) FROM t0 WHERE (UNLIKELY(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UNLIKELY(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UNLIKELY(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c2 IN ()))/((vt0.lid IN (vt0.lid))))) ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, (NULL IN (((vt0.c1) NOT BETWEEN (vt0.lid) AND (t0.c68)), CASE WHEN vt0.lid THEN t0.c68 END, ((((vt0.c2)OR(x'')))AND('793655915'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))/((vt0.lid IN (vt0.lid))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, (NULL IN (((vt0.c1) NOT BETWEEN (vt0.lid) AND (t0.c68)), CASE WHEN vt0.lid THEN t0.c68 END, ((((vt0.c2)OR(x'')))AND('793655915'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c2 IN ()))/((vt0.lid IN (vt0.lid))))) ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, (NULL IN (((vt0.c1) NOT BETWEEN (vt0.lid) AND (t0.c68)), CASE WHEN vt0.lid THEN t0.c68 END, ((((vt0.c2)OR(x'')))AND('793655915'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))/((vt0.lid IN (vt0.lid))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, (NULL IN (((vt0.c1) NOT BETWEEN (vt0.lid) AND (t0.c68)), CASE WHEN vt0.lid THEN t0.c68 END, ((((vt0.c2)OR(x'')))AND('793655915'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c2 IN ()))/((vt0.lid IN (vt0.lid))))) ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, (NULL IN (((vt0.c1) NOT BETWEEN (vt0.lid) AND (t0.c68)), CASE WHEN vt0.lid THEN t0.c68 END, ((((vt0.c2)OR(x'')))AND('793655915'))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)) COLLATE NOCASE WHERE (((vt0.c2 COLLATE NOCASE)>=(vt0.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE)>=(vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)) COLLATE NOCASE WHERE (((vt0.c2 COLLATE NOCASE)>=(vt0.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE)>=(vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)) COLLATE NOCASE WHERE (((vt0.c2 COLLATE NOCASE)>=(vt0.lid COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.lid)>(vt0.lid))  WHEN ROUND(vt0.lid, vt0.c1) THEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) ELSE '731144726' END WHERE (((((((((((t0.c68)<=(t0.c68)))OR(((t0.c68) NOT NULL))))OR((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((NULL))))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c68)))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68)<=(t0.c68)))OR(((t0.c68) NOT NULL))))OR((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((NULL))))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c68)))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.lid)>(vt0.lid))  WHEN ROUND(vt0.lid, vt0.c1) THEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) ELSE '731144726' END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.lid)>(vt0.lid))  WHEN ROUND(vt0.lid, vt0.c1) THEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) ELSE '731144726' END WHERE (((((((((((t0.c68)<=(t0.c68)))OR(((t0.c68) NOT NULL))))OR((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((NULL))))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c68)))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68)<=(t0.c68)))OR(((t0.c68) NOT NULL))))OR((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((NULL))))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c68)))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.lid)>(vt0.lid))  WHEN ROUND(vt0.lid, vt0.c1) THEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) ELSE '731144726' END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.lid)>(vt0.lid))  WHEN ROUND(vt0.lid, vt0.c1) THEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) ELSE '731144726' END WHERE (((((((((((t0.c68)<=(t0.c68)))OR(((t0.c68) NOT NULL))))OR((((vt0.c1)) BETWEEN ((vt0.lid)) AND ((NULL))))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c68)))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0 CROSS JOIN t0 ON SQLITE_SOURCE_ID() WHERE ((((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))%(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))%(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON SQLITE_SOURCE_ID());
SELECT * FROM vt0 CROSS JOIN t0 ON SQLITE_SOURCE_ID() WHERE ((((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))%(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))%(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON SQLITE_SOURCE_ID());
SELECT * FROM vt0 CROSS JOIN t0 ON SQLITE_SOURCE_ID() WHERE ((((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))%(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT CAST(t0.c68 AS BLOB), ((t0.c68)&(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(t0.c68 AS BLOB), ((t0.c68)&(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT CAST(t0.c68 AS BLOB), ((t0.c68)&(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(t0.c68 AS BLOB), ((t0.c68)&(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT CAST(t0.c68 AS BLOB), ((t0.c68)&(t0.c68))));
SELECT * FROM vt0, t0 WHERE ((((NOT (t0.c68))) ISNULL)) ORDER BY ((((((((CAST(vt0.lid AS TEXT))AND(LOWER(DISTINCT t0.c68))))OR('')))OR(((((vt0.lid)OR(t0.c68)))AND(vt0.c1)))))AND(CAST(vt0.lid AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c68))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((CAST(vt0.lid AS TEXT))AND(LOWER(DISTINCT t0.c68))))OR('')))OR(((((vt0.lid)OR(t0.c68)))AND(vt0.c1)))))AND(CAST(vt0.lid AS BLOB))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((NOT (t0.c68))) ISNULL)) ORDER BY ((((((((CAST(vt0.lid AS TEXT))AND(LOWER(DISTINCT t0.c68))))OR('')))OR(((((vt0.lid)OR(t0.c68)))AND(vt0.c1)))))AND(CAST(vt0.lid AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c68))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((CAST(vt0.lid AS TEXT))AND(LOWER(DISTINCT t0.c68))))OR('')))OR(((((vt0.lid)OR(t0.c68)))AND(vt0.c1)))))AND(CAST(vt0.lid AS BLOB))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((NOT (t0.c68))) ISNULL)) ORDER BY ((((((((CAST(vt0.lid AS TEXT))AND(LOWER(DISTINCT t0.c68))))OR('')))OR(((((vt0.lid)OR(t0.c68)))AND(vt0.c1)))))AND(CAST(vt0.lid AS BLOB))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((((vt0.lid)OR(vt0.c1)))OR(vt0.c2)))||(t0.c68 COLLATE RTRIM)) WHERE ((- ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c2, vt0.c1, t0.c68))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c2, vt0.c1, t0.c68)))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((((((vt0.lid)OR(vt0.c1)))OR(vt0.c2)))||(t0.c68 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((((vt0.lid)OR(vt0.c1)))OR(vt0.c2)))||(t0.c68 COLLATE RTRIM)) WHERE ((- ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c2, vt0.c1, t0.c68))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c2, vt0.c1, t0.c68)))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((((((vt0.lid)OR(vt0.c1)))OR(vt0.c2)))||(t0.c68 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((((vt0.lid)OR(vt0.c1)))OR(vt0.c2)))||(t0.c68 COLLATE RTRIM)) WHERE ((- ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c2, vt0.c1, t0.c68))))));
SELECT ALL * FROM t0 WHERE (((((t0.c68 IN ()), (((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((0.9165632220367125))), 'l/6AG31c'))<=((((t0.c68)>=(t0.c68)), ((((t0.c68)AND(t0.c68)))AND(t0.c68)), LIKELY(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68 IN ()), (((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((0.9165632220367125))), 'l/6AG31c'))<=((((t0.c68)>=(t0.c68)), ((((t0.c68)AND(t0.c68)))AND(t0.c68)), LIKELY(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c68 IN ()), (((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((0.9165632220367125))), 'l/6AG31c'))<=((((t0.c68)>=(t0.c68)), ((((t0.c68)AND(t0.c68)))AND(t0.c68)), LIKELY(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68 IN ()), (((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((0.9165632220367125))), 'l/6AG31c'))<=((((t0.c68)>=(t0.c68)), ((((t0.c68)AND(t0.c68)))AND(t0.c68)), LIKELY(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c68 IN ()), (((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((0.9165632220367125))), 'l/6AG31c'))<=((((t0.c68)>=(t0.c68)), ((((t0.c68)AND(t0.c68)))AND(t0.c68)), LIKELY(t0.c68)))));
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((NULL) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) DESC, load_extension((t0.c68 IN (vt0.c2))), CASE WHEN t0.c68 COLLATE NOCASE THEN ((t0.c68)||(vt0.lid)) ELSE DATETIME('-149745095', vt0.c1, t0.c68) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((NULL) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) DESC, load_extension((t0.c68 IN (vt0.c2))), CASE WHEN t0.c68 COLLATE NOCASE THEN ((t0.c68)||(vt0.lid)) ELSE DATETIME('-149745095', vt0.c1, t0.c68) END  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((NULL) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) DESC, load_extension((t0.c68 IN (vt0.c2))), CASE WHEN t0.c68 COLLATE NOCASE THEN ((t0.c68)||(vt0.lid)) ELSE DATETIME('-149745095', vt0.c1, t0.c68) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((NULL) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) DESC, load_extension((t0.c68 IN (vt0.c2))), CASE WHEN t0.c68 COLLATE NOCASE THEN ((t0.c68)||(vt0.lid)) ELSE DATETIME('-149745095', vt0.c1, t0.c68) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'c2d3');
SELECT SUM(count) FROM (SELECT ALL ((x'c2d3') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'c2d3');
SELECT SUM(count) FROM (SELECT ALL ((x'c2d3') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'c2d3');
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) IS FALSE)));
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.lid))!=((vt0.lid))))>(json(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.lid))<>((vt0.lid))))>(json(vt0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.lid))!=((vt0.lid))))>(json(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.lid))<>((vt0.lid))))>(json(vt0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.lid WHERE ((((((vt0.lid, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-156556326', vt0.c0, vt0.c2, vt0.c0)) AND ((x'4833', vt0.lid, vt0.c0, vt0.lid, vt0.c2)))) ISNULL)) ORDER BY (((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, ((0X2a625418) IS FALSE), json_array_length(t0.c68, vt0.lid))) AND ((CAST(vt0.lid AS TEXT), (NOT (vt0.c2)), ((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.lid, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-156556326', vt0.c0, vt0.c2, vt0.c0)) AND ((x'4833', vt0.lid, vt0.c0, vt0.lid, vt0.c2)))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.lid ORDER BY (((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, ((0x2a625418) IS FALSE), json_array_length(t0.c68, vt0.lid))) AND ((CAST(vt0.lid AS TEXT), (NOT (vt0.c2)), ((vt0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.lid WHERE ((((((vt0.lid, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-156556326', vt0.c0, vt0.c2, vt0.c0)) AND ((x'4833', vt0.lid, vt0.c0, vt0.lid, vt0.c2)))) ISNULL)) ORDER BY (((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, ((0X2a625418) IS FALSE), json_array_length(t0.c68, vt0.lid))) AND ((CAST(vt0.lid AS TEXT), (NOT (vt0.c2)), ((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.lid, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-156556326', vt0.c0, vt0.c2, vt0.c0)) AND ((x'4833', vt0.lid, vt0.c0, vt0.lid, vt0.c2)))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.lid ORDER BY (((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, ((0x2a625418) IS FALSE), json_array_length(t0.c68, vt0.lid))) AND ((CAST(vt0.lid AS TEXT), (NOT (vt0.c2)), ((vt0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.lid WHERE ((((((vt0.lid, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-156556326', vt0.c0, vt0.c2, vt0.c0)) AND ((x'4833', vt0.lid, vt0.c0, vt0.lid, vt0.c2)))) ISNULL)) ORDER BY (((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, ((0X2a625418) IS FALSE), json_array_length(t0.c68, vt0.lid))) AND ((CAST(vt0.lid AS TEXT), (NOT (vt0.c2)), ((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (TRIM(vt0.lid COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.lid COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (TRIM(vt0.lid COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.lid COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (TRIM(vt0.lid COLLATE BINARY));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END))<=((vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END))<=((vt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END))<=((vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END))<=((vt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END))<=((vt0.c1))));
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.lid, x'', vt0.c2))) COLLATE NOCASE) ORDER BY ((((CASE WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid END)AND(vt0.c2)))OR(((vt0.c2)|(vt0.c2)))) DESC, ((vt0.c1 COLLATE RTRIM)=(((vt0.c1)!=(vt0.lid)))) DESC, (NOT (CAST(vt0.lid AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.lid, x'', vt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid END)AND(vt0.c2)))OR(((vt0.c2)|(vt0.c2)))) DESC, ((vt0.c1 COLLATE RTRIM)=(((vt0.c1)!=(vt0.lid)))) DESC, (NOT (CAST(vt0.lid AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.lid, x'', vt0.c2))) COLLATE NOCASE) ORDER BY ((((CASE WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid END)AND(vt0.c2)))OR(((vt0.c2)|(vt0.c2)))) DESC, ((vt0.c1 COLLATE RTRIM)=(((vt0.c1)!=(vt0.lid)))) DESC, (NOT (CAST(vt0.lid AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.lid, x'', vt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid END)AND(vt0.c2)))OR(((vt0.c2)|(vt0.c2)))) DESC, ((vt0.c1 COLLATE RTRIM)=(((vt0.c1)!=(vt0.lid)))) DESC, (NOT (CAST(vt0.lid AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.lid, x'', vt0.c2))) COLLATE NOCASE) ORDER BY ((((CASE WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid END)AND(vt0.c2)))OR(((vt0.c2)|(vt0.c2)))) DESC, ((vt0.c1 COLLATE RTRIM)=(((vt0.c1)!=(vt0.lid)))) DESC, (NOT (CAST(vt0.lid AS TEXT)));
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD('-1363051967', 0.4051779882368819)) ORDER BY ((t0.c68 COLLATE RTRIM) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('-1363051967', 0.4051779882368819)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE RTRIM) NOTNULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD('-1363051967', 0.4051779882368819)) ORDER BY ((t0.c68 COLLATE RTRIM) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('-1363051967', 0.4051779882368819)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE RTRIM) NOTNULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD('-1363051967', 0.4051779882368819)) ORDER BY ((t0.c68 COLLATE RTRIM) NOTNULL) DESC;
SELECT * FROM vt0 WHERE (x'6ff4');
SELECT SUM(count) FROM (SELECT ((x'6ff4') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'6ff4');
SELECT SUM(count) FROM (SELECT ((x'6ff4') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'6ff4');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (1.56711343E9) AND (vt0.lid))) NOTNULL) WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY CASE CAST(t0.c68 AS INTEGER)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((((0.3067070224270181)OR(x'')))OR(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (1.56711343E9) AND (vt0.lid))) NOTNULL) ORDER BY CASE CAST(t0.c68 AS INTEGER)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((((0.3067070224270181)OR(x'')))OR(vt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (1.56711343E9) AND (vt0.lid))) NOTNULL) WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY CASE CAST(t0.c68 AS INTEGER)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((((0.3067070224270181)OR(x'')))OR(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (1.56711343E9) AND (vt0.lid))) NOTNULL) ORDER BY CASE CAST(t0.c68 AS INTEGER)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((((0.3067070224270181)OR(x'')))OR(vt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (1.56711343E9) AND (vt0.lid))) NOTNULL) WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY CASE CAST(t0.c68 AS INTEGER)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((((0.3067070224270181)OR(x'')))OR(vt0.c0)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.lid COLLATE RTRIM)GLOB(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt0.lid COLLATE RTRIM)GLOB(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.lid COLLATE RTRIM)GLOB(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt0.lid COLLATE RTRIM)GLOB(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.lid COLLATE RTRIM)GLOB(((vt0.c1) IS TRUE))));
SELECT COUNT(*) FROM t0 INDEXED BY i29 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN (((t0.c68)<(t0.c68))) AND (((NULL) NOTNULL)))) ORDER BY t0.c68 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN (((t0.c68)<(t0.c68))) AND (((NULL) NOTNULL)))) IS TRUE)  as count FROM t0 INDEXED BY i29 ORDER BY t0.c68 ASC);
SELECT COUNT(*) FROM t0 INDEXED BY i29 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN (((t0.c68)<(t0.c68))) AND (((NULL) NOTNULL)))) ORDER BY t0.c68 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN (((t0.c68)<(t0.c68))) AND (((NULL) NOTNULL)))) IS TRUE)  as count FROM t0 INDEXED BY i29 ORDER BY t0.c68 ASC);
SELECT COUNT(*) FROM t0 INDEXED BY i29 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN (((t0.c68)<(t0.c68))) AND (((NULL) NOTNULL)))) ORDER BY t0.c68 ASC;
SELECT * FROM t0 WHERE ((((NULL)<(t0.c68)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL)<(t0.c68)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((NULL)<(t0.c68)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL)<(t0.c68)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((NULL)<(t0.c68)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c2)))>=(((vt0.c1)&(vt0.c0))))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(CAST(vt0.c2 AS REAL))) DESC, (+ ((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt0.c2)))>=(((vt0.c1)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(CAST(vt0.c2 AS REAL))) DESC, (+ ((NOT (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c2)))>=(((vt0.c1)&(vt0.c0))))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(CAST(vt0.c2 AS REAL))) DESC, (+ ((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt0.c2)))>=(((vt0.c1)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(CAST(vt0.c2 AS REAL))) DESC, (+ ((NOT (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c2)))>=(((vt0.c1)&(vt0.c0))))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(CAST(vt0.c2 AS REAL))) DESC, (+ ((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0xffffffffe377ae8f);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe377ae8f) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0xffffffffe377ae8f);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe377ae8f) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0xffffffffe377ae8f);
SELECT * FROM t0, vt0 WHERE ('I') ORDER BY ((vt0.c1 COLLATE RTRIM)>=(vt0.lid COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('I') IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)>=(vt0.lid COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ('I') ORDER BY ((vt0.c1 COLLATE RTRIM)>=(vt0.lid COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('I') IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)>=(vt0.lid COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ('I') ORDER BY ((vt0.c1 COLLATE RTRIM)>=(vt0.lid COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.lid)AND(0.4833628655105773)))AND(vt0.c0)))*((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)AND(0.4833628655105773)))AND(vt0.c0)))*((vt0.lid IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.lid)AND(0.4833628655105773)))AND(vt0.c0)))*((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)AND(0.4833628655105773)))AND(vt0.c0)))*((vt0.lid IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.lid)AND(0.4833628655105773)))AND(vt0.c0)))*((vt0.lid IN ()))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c2)=(t0.c68)) THEN (+ (vt0.c0)) WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN -1.968077994E9 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c0 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c68)) END WHERE (((t0.c68)>=((((vt0.c1))<=(('Ks'))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)>=((((vt0.c1))<=(('Ks')))))) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c2)==(t0.c68)) THEN (+ (vt0.c0)) WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN -1.968077994E9 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c0 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c68)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c2)=(t0.c68)) THEN (+ (vt0.c0)) WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN -1.968077994E9 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c0 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c68)) END WHERE (((t0.c68)>=((((vt0.c1))<=(('Ks'))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)>=((((vt0.c1))<=(('Ks')))))) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c2)==(t0.c68)) THEN (+ (vt0.c0)) WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN -1.968077994E9 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c0 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c68)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c2)=(t0.c68)) THEN (+ (vt0.c0)) WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN -1.968077994E9 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c0 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c68)) END WHERE (((t0.c68)>=((((vt0.c1))<=(('Ks'))))));
SELECT * FROM t0 WHERE ((((CAST(t0.c68 AS REAL)))!=((((t0.c68) BETWEEN (x'c830') AND (t0.c68)))))) ORDER BY (((~ (t0.c68)))/(((t0.c68)<=(t0.c68)))) ASC, ((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))))>=((CASE WHEN t0.c68 THEN x'' ELSE t0.c68 END)))  NULLS LAST, (((t0.c68)<=(t0.c68)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS REAL)))<>((((t0.c68) BETWEEN (x'c830') AND (t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c68)))/(((t0.c68)<=(t0.c68)))) ASC, ((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))))>=((CASE WHEN t0.c68 THEN x'' ELSE t0.c68 END)))  NULLS LAST, (((t0.c68)<=(t0.c68)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((CAST(t0.c68 AS REAL)))!=((((t0.c68) BETWEEN (x'c830') AND (t0.c68)))))) ORDER BY (((~ (t0.c68)))/(((t0.c68)<=(t0.c68)))) ASC, ((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))))>=((CASE WHEN t0.c68 THEN x'' ELSE t0.c68 END)))  NULLS LAST, (((t0.c68)<=(t0.c68)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS REAL)))<>((((t0.c68) BETWEEN (x'c830') AND (t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c68)))/(((t0.c68)<=(t0.c68)))) ASC, ((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))))>=((CASE WHEN t0.c68 THEN x'' ELSE t0.c68 END)))  NULLS LAST, (((t0.c68)<=(t0.c68)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((CAST(t0.c68 AS REAL)))!=((((t0.c68) BETWEEN (x'c830') AND (t0.c68)))))) ORDER BY (((~ (t0.c68)))/(((t0.c68)<=(t0.c68)))) ASC, ((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))))>=((CASE WHEN t0.c68 THEN x'' ELSE t0.c68 END)))  NULLS LAST, (((t0.c68)<=(t0.c68)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((-1.673954639E9) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE RTRIM) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((-1.673954639E9) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c2 DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((-1.673954639E9) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE RTRIM) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((-1.673954639E9) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c2 DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((-1.673954639E9) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE RTRIM) ORDER BY vt0.c2 DESC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE (vt0.c2 IN (t0.c68, t0.c68))  WHEN ((vt0.c2)<<(vt0.c1)) THEN (((vt0.c0))<((vt0.c2))) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c2 IN (t0.c68, t0.c68))  WHEN ((vt0.c2)<<(vt0.c1)) THEN (((vt0.c0))<((vt0.c2))) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE (vt0.c2 IN (t0.c68, t0.c68))  WHEN ((vt0.c2)<<(vt0.c1)) THEN (((vt0.c0))<((vt0.c2))) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c2 IN (t0.c68, t0.c68))  WHEN ((vt0.c2)<<(vt0.c1)) THEN (((vt0.c0))<((vt0.c2))) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE (vt0.c2 IN (t0.c68, t0.c68))  WHEN ((vt0.c2)<<(vt0.c1)) THEN (((vt0.c0))<((vt0.c2))) ELSE vt0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((x'', (((-2.077987085E9, vt0.lid, t0.c68)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((t0.c68, vt0.c2, vt0.c2))), (((0.5625775057921484)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))!=((UPPER('0.44275700275953267'), (- (vt0.lid)), NULL)))) ORDER BY CAST(((t0.c68)/(vt0.lid)) AS NUMERIC) ASC  NULLS LAST, (- (CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'', (((-2.077987085E9, vt0.lid, t0.c68)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((t0.c68, vt0.c2, vt0.c2))), (((0.5625775057921484)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<>((UPPER('0.44275700275953267'), (- (vt0.lid)), NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c68)/(vt0.lid)) AS NUMERIC) ASC  NULLS LAST, (- (CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((x'', (((-2.077987085E9, vt0.lid, t0.c68)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((t0.c68, vt0.c2, vt0.c2))), (((0.5625775057921484)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))!=((UPPER('0.44275700275953267'), (- (vt0.lid)), NULL)))) ORDER BY CAST(((t0.c68)/(vt0.lid)) AS NUMERIC) ASC  NULLS LAST, (- (CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'', (((-2.077987085E9, vt0.lid, t0.c68)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((t0.c68, vt0.c2, vt0.c2))), (((0.5625775057921484)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<>((UPPER('0.44275700275953267'), (- (vt0.lid)), NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c68)/(vt0.lid)) AS NUMERIC) ASC  NULLS LAST, (- (CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((x'', (((-2.077987085E9, vt0.lid, t0.c68)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((t0.c68, vt0.c2, vt0.c2))), (((0.5625775057921484)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))!=((UPPER('0.44275700275953267'), (- (vt0.lid)), NULL)))) ORDER BY CAST(((t0.c68)/(vt0.lid)) AS NUMERIC) ASC  NULLS LAST, (- (CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ('?g');
SELECT SUM(count) FROM (SELECT ALL (('?g') IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ('?g');
SELECT SUM(count) FROM (SELECT ALL (('?g') IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ('?g');
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c2 AS INTEGER) COLLATE BINARY) ORDER BY '-1662128440'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY '-1662128440'  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c2 AS INTEGER) COLLATE BINARY) ORDER BY '-1662128440'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY '-1662128440'  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c2 AS INTEGER) COLLATE BINARY) ORDER BY '-1662128440'  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) IS TRUE) IN ()));
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c68 AS REAL))AND((0.5624894981663222 IN ()))))OR((((t0.c68))!=((t0.c68))))))AND((NOT (t0.c68)))))OR(((t0.c68) NOT NULL)))) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c68 AS REAL))AND((0.5624894981663222 IN ()))))OR((((t0.c68))<>((t0.c68))))))AND((NOT (t0.c68)))))OR(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c68 AS REAL))AND((0.5624894981663222 IN ()))))OR((((t0.c68))!=((t0.c68))))))AND((NOT (t0.c68)))))OR(((t0.c68) NOT NULL)))) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c68 AS REAL))AND((0.5624894981663222 IN ()))))OR((((t0.c68))<>((t0.c68))))))AND((NOT (t0.c68)))))OR(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c68 AS REAL))AND((0.5624894981663222 IN ()))))OR((((t0.c68))!=((t0.c68))))))AND((NOT (t0.c68)))))OR(((t0.c68) NOT NULL)))) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((NULL))<=((((vt0.c0)*('l醅6')))))) ORDER BY (~ (vt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((((vt0.c0)*('l醅6')))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0 WHERE ((((NULL))<=((((vt0.c0)*('l醅6')))))) ORDER BY (~ (vt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((((vt0.c0)*('l醅6')))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0 WHERE ((((NULL))<=((((vt0.c0)*('l醅6')))))) ORDER BY (~ (vt0.c2 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB) WHERE (CAST(((vt0.c2)%(vt0.c1)) AS NUMERIC)) ORDER BY ((((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) ISNULL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((((vt0.c2)OR(t0.c68)))AND(t0.c68))) AND (vt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2)%(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB) ORDER BY ((((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) ISNULL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((((vt0.c2)OR(t0.c68)))AND(t0.c68))) AND (vt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB) WHERE (CAST(((vt0.c2)%(vt0.c1)) AS NUMERIC)) ORDER BY ((((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) ISNULL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((((vt0.c2)OR(t0.c68)))AND(t0.c68))) AND (vt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2)%(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB) ORDER BY ((((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) ISNULL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((((vt0.c2)OR(t0.c68)))AND(t0.c68))) AND (vt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB) WHERE (CAST(((vt0.c2)%(vt0.c1)) AS NUMERIC)) ORDER BY ((((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0))) ISNULL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((((vt0.c2)OR(t0.c68)))AND(t0.c68))) AND (vt0.c2))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((~ (vt0.c0))))<>((((vt0.c0)>>(vt0.c1)))))) ORDER BY NULLIF(((vt0.c0) NOTNULL), vt0.lid) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))!=((((vt0.c0)>>(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(((vt0.c0) NOTNULL), vt0.lid) DESC);
SELECT * FROM vt0 WHERE (((((~ (vt0.c0))))<>((((vt0.c0)>>(vt0.c1)))))) ORDER BY NULLIF(((vt0.c0) NOTNULL), vt0.lid) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))!=((((vt0.c0)>>(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(((vt0.c0) NOTNULL), vt0.lid) DESC);
SELECT * FROM vt0 WHERE (((((~ (vt0.c0))))<>((((vt0.c0)>>(vt0.c1)))))) ORDER BY NULLIF(((vt0.c0) NOTNULL), vt0.lid) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c68) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c68) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c68) NOTNULL));
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (NULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (NULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((~ (NULL)))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c68)-(t0.c68))) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)-(t0.c68))) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (x''))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c68)-(t0.c68))) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)-(t0.c68))) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (x''))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c68)-(t0.c68))) BETWEEN (((((t0.c68)AND(t0.c68)))OR(t0.c68))) AND (x''))  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c68)&(t0.c68)) THEN (('-1695996351')&(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c68)&(t0.c68)) THEN (('-1695996351')&(t0.c68)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c68)&(t0.c68)) THEN (('-1695996351')&(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c68)&(t0.c68)) THEN (('-1695996351')&(t0.c68)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c68)&(t0.c68)) THEN (('-1695996351')&(t0.c68)) END);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c68 IN ())  WHEN json_remove(t0.c68, t0.c68) THEN (t0.c68 IN (t0.c68, t0.c68, t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c68 IN ())  WHEN json_remove(t0.c68, t0.c68) THEN (t0.c68 IN (t0.c68, t0.c68, t0.c68)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c68 IN ())  WHEN json_remove(t0.c68, t0.c68) THEN (t0.c68 IN (t0.c68, t0.c68, t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c68 IN ())  WHEN json_remove(t0.c68, t0.c68) THEN (t0.c68 IN (t0.c68, t0.c68, t0.c68)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c68) IS TRUE) THEN t0.c68 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c68) IS TRUE) THEN t0.c68 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c68) IS TRUE) THEN t0.c68 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c68) IS TRUE) THEN t0.c68 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c68) IS TRUE) THEN t0.c68 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) ORDER BY ((t0.c68) BETWEEN (t0.c68 COLLATE RTRIM) AND (t0.c68)) ASC, (NOT (((t0.c68) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68) BETWEEN (t0.c68 COLLATE RTRIM) AND (t0.c68)) ASC, (NOT (((t0.c68) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) ORDER BY ((t0.c68) BETWEEN (t0.c68 COLLATE RTRIM) AND (t0.c68)) ASC, (NOT (((t0.c68) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68) BETWEEN (t0.c68 COLLATE RTRIM) AND (t0.c68)) ASC, (NOT (((t0.c68) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT NULL)) ORDER BY ((t0.c68) BETWEEN (t0.c68 COLLATE RTRIM) AND (t0.c68)) ASC, (NOT (((t0.c68) IS TRUE)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((NULL)AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((NULL)AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)AND(vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (TYPEOF(vt0.lid) COLLATE BINARY) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt0.lid) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (TYPEOF(vt0.lid) COLLATE BINARY) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt0.lid) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (TYPEOF(vt0.lid) COLLATE BINARY) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS BLOB))!=((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB))<>((- (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS BLOB))!=((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB))<>((- (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS BLOB))!=((- (t0.c68)))));
SELECT ALL * FROM t0 WHERE ((((+ (t0.c68))) BETWEEN ((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY t0.c68 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68))) BETWEEN ((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c68 DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((+ (t0.c68))) BETWEEN ((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY t0.c68 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68))) BETWEEN ((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c68 DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((+ (t0.c68))) BETWEEN ((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY t0.c68 DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((t0.c68 IN (((t0.c68) ISNULL)))) ORDER BY (((((0.47348947956381426))>=((t0.c68)))) NOT BETWEEN (RTRIM(NULL)) AND (STRFTIME(t0.c68, 0.015694056819570368, t0.c68, NULL, t0.c68))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c68 IN (((t0.c68) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((0.47348947956381426))>=((t0.c68)))) NOT BETWEEN (RTRIM(NULL)) AND (STRFTIME(t0.c68, 0.015694056819570368, t0.c68, NULL, t0.c68))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((t0.c68 IN (((t0.c68) ISNULL)))) ORDER BY (((((0.47348947956381426))>=((t0.c68)))) NOT BETWEEN (RTRIM(NULL)) AND (STRFTIME(t0.c68, 0.015694056819570368, t0.c68, NULL, t0.c68))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c68 IN (((t0.c68) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((0.47348947956381426))>=((t0.c68)))) NOT BETWEEN (RTRIM(NULL)) AND (STRFTIME(t0.c68, 0.015694056819570368, t0.c68, NULL, t0.c68))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((t0.c68 IN (((t0.c68) ISNULL)))) ORDER BY (((((0.47348947956381426))>=((t0.c68)))) NOT BETWEEN (RTRIM(NULL)) AND (STRFTIME(t0.c68, 0.015694056819570368, t0.c68, NULL, t0.c68))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((vt0.c1 COLLATE BINARY)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c1)<>(vt0.c2)))))AND((vt0.c0 IN ())))) ORDER BY '%	' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE BINARY)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c1)!=(vt0.c2)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY '%	' DESC);
SELECT * FROM vt0 WHERE (((((((((vt0.c1 COLLATE BINARY)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c1)<>(vt0.c2)))))AND((vt0.c0 IN ())))) ORDER BY '%	' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE BINARY)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c1)!=(vt0.c2)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY '%	' DESC);
SELECT * FROM vt0 WHERE (((((((((vt0.c1 COLLATE BINARY)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c1)<>(vt0.c2)))))AND((vt0.c0 IN ())))) ORDER BY '%	' DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN ()))>=(vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))>=(vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN ()))>=(vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))>=(vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN ()))>=(vt0.c2 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.lid)LIKE(x'')) AS TEXT)) ORDER BY ((t0.c68)>('-144281838')), (((vt0.c1)) NOT BETWEEN ((((((((((t0.c68)OR(vt0.lid)))OR(-811907394)))AND(t0.c68)))AND(NULL)))) AND ((MIN(vt0.c1, vt0.c0)))) DESC  NULLS FIRST, ((((vt0.lid)AND(0Xffffffffb065d42f)))AND(((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.lid)LIKE(x'')) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68)>('-144281838')), (((vt0.c1)) NOT BETWEEN ((((((((((t0.c68)OR(vt0.lid)))OR(-811907394)))AND(t0.c68)))AND(NULL)))) AND ((MIN(vt0.c1, vt0.c0)))) DESC  NULLS FIRST, ((((vt0.lid)AND(0xffffffffb065d42f)))AND(((vt0.c0) NOTNULL))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.lid)LIKE(x'')) AS TEXT)) ORDER BY ((t0.c68)>('-144281838')), (((vt0.c1)) NOT BETWEEN ((((((((((t0.c68)OR(vt0.lid)))OR(-811907394)))AND(t0.c68)))AND(NULL)))) AND ((MIN(vt0.c1, vt0.c0)))) DESC  NULLS FIRST, ((((vt0.lid)AND(0Xffffffffb065d42f)))AND(((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.lid)LIKE(x'')) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68)>('-144281838')), (((vt0.c1)) NOT BETWEEN ((((((((((t0.c68)OR(vt0.lid)))OR(-811907394)))AND(t0.c68)))AND(NULL)))) AND ((MIN(vt0.c1, vt0.c0)))) DESC  NULLS FIRST, ((((vt0.lid)AND(0xffffffffb065d42f)))AND(((vt0.c0) NOTNULL))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.lid)LIKE(x'')) AS TEXT)) ORDER BY ((t0.c68)>('-144281838')), (((vt0.c1)) NOT BETWEEN ((((((((((t0.c68)OR(vt0.lid)))OR(-811907394)))AND(t0.c68)))AND(NULL)))) AND ((MIN(vt0.c1, vt0.c0)))) DESC  NULLS FIRST, ((((vt0.lid)AND(0Xffffffffb065d42f)))AND(((vt0.c0) NOTNULL))) ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) IS FALSE)) BETWEEN ((((t0.c68, vt0.lid, vt0.c2)) BETWEEN ((x'2d53', vt0.c1, t0.c68)) AND ((vt0.c2, vt0.c0, t0.c68)))) AND (((vt0.lid)/(NULL))))) ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.lid IN (t0.c68)), ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.lid)), ((vt0.c2) NOT BETWEEN (t0.c68) AND (vt0.lid)))) AND ((CASE vt0.c1  WHEN NULL THEN vt0.c2 END, (((t0.c68, vt0.c0, vt0.c2))<((vt0.lid, vt0.c1, t0.c68))), CAST(vt0.c1 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS FALSE)) BETWEEN ((((t0.c68, vt0.lid, vt0.c2)) BETWEEN ((x'2d53', vt0.c1, t0.c68)) AND ((vt0.c2, vt0.c0, t0.c68)))) AND (((vt0.lid)/(NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.lid IN (t0.c68)), ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.lid)), ((vt0.c2) NOT BETWEEN (t0.c68) AND (vt0.lid)))) AND ((CASE vt0.c1  WHEN NULL THEN vt0.c2 END, (((t0.c68, vt0.c0, vt0.c2))<((vt0.lid, vt0.c1, t0.c68))), CAST(vt0.c1 AS REAL))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) IS FALSE)) BETWEEN ((((t0.c68, vt0.lid, vt0.c2)) BETWEEN ((x'2d53', vt0.c1, t0.c68)) AND ((vt0.c2, vt0.c0, t0.c68)))) AND (((vt0.lid)/(NULL))))) ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.lid IN (t0.c68)), ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.lid)), ((vt0.c2) NOT BETWEEN (t0.c68) AND (vt0.lid)))) AND ((CASE vt0.c1  WHEN NULL THEN vt0.c2 END, (((t0.c68, vt0.c0, vt0.c2))<((vt0.lid, vt0.c1, t0.c68))), CAST(vt0.c1 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS FALSE)) BETWEEN ((((t0.c68, vt0.lid, vt0.c2)) BETWEEN ((x'2d53', vt0.c1, t0.c68)) AND ((vt0.c2, vt0.c0, t0.c68)))) AND (((vt0.lid)/(NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.lid IN (t0.c68)), ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.lid)), ((vt0.c2) NOT BETWEEN (t0.c68) AND (vt0.lid)))) AND ((CASE vt0.c1  WHEN NULL THEN vt0.c2 END, (((t0.c68, vt0.c0, vt0.c2))<((vt0.lid, vt0.c1, t0.c68))), CAST(vt0.c1 AS REAL))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) IS FALSE)) BETWEEN ((((t0.c68, vt0.lid, vt0.c2)) BETWEEN ((x'2d53', vt0.c1, t0.c68)) AND ((vt0.c2, vt0.c0, t0.c68)))) AND (((vt0.lid)/(NULL))))) ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.lid IN (t0.c68)), ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.lid)), ((vt0.c2) NOT BETWEEN (t0.c68) AND (vt0.lid)))) AND ((CASE vt0.c1  WHEN NULL THEN vt0.c2 END, (((t0.c68, vt0.c0, vt0.c2))<((vt0.lid, vt0.c1, t0.c68))), CAST(vt0.c1 AS REAL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY CAST(t0.c68 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY CAST(t0.c68 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY CAST(t0.c68 AS NUMERIC) COLLATE NOCASE;
SELECT ALL * FROM vt0 WHERE (IFNULL(vt0.lid, ((vt0.lid)IS NOT(vt0.c2)))) ORDER BY CAST(((vt0.c2) IS TRUE) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.lid, ((vt0.lid)IS NOT(vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2) IS TRUE) AS REAL));
SELECT ALL * FROM vt0 WHERE (IFNULL(vt0.lid, ((vt0.lid)IS NOT(vt0.c2)))) ORDER BY CAST(((vt0.c2) IS TRUE) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.lid, ((vt0.lid)IS NOT(vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2) IS TRUE) AS REAL));
SELECT ALL * FROM vt0 WHERE (IFNULL(vt0.lid, ((vt0.lid)IS NOT(vt0.c2)))) ORDER BY CAST(((vt0.c2) IS TRUE) AS REAL);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c68 COLLATE NOCASE)=(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE NOCASE)==(SQLITE_VERSION()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c68 COLLATE NOCASE)=(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE NOCASE)==(SQLITE_VERSION()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c68 COLLATE NOCASE)=(SQLITE_VERSION())));
SELECT COUNT(*) FROM t0 WHERE (UPPER(QUOTE(t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(QUOTE(t0.c68))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(QUOTE(t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(QUOTE(t0.c68))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(QUOTE(t0.c68)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)), CAST(0x6232c38f AS REAL), TRIM(DISTINCT '	', vt0.c2)))==((((((vt0.c0)OR(vt0.c1)))OR('⛯d%')), NULL, ((vt0.c0)LIKE(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)), CAST(0X6232c38f AS REAL), TRIM(DISTINCT '	', vt0.c2)))=((((((vt0.c0)OR(vt0.c1)))OR('⛯d%')), NULL, ((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)), CAST(0x6232c38f AS REAL), TRIM(DISTINCT '	', vt0.c2)))==((((((vt0.c0)OR(vt0.c1)))OR('⛯d%')), NULL, ((vt0.c0)LIKE(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)), CAST(0X6232c38f AS REAL), TRIM(DISTINCT '	', vt0.c2)))=((((((vt0.c0)OR(vt0.c1)))OR('⛯d%')), NULL, ((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)), CAST(0x6232c38f AS REAL), TRIM(DISTINCT '	', vt0.c2)))==((((((vt0.c0)OR(vt0.c1)))OR('⛯d%')), NULL, ((vt0.c0)LIKE(vt0.c0))))));
SELECT ALL * FROM t0 WHERE (PRINTF(((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c68)), ((t0.c68)<<(t0.c68)), ((((t0.c68)AND(t0.c68)))OR(t0.c68)))) ORDER BY ((+ (-935093737)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c68)), ((t0.c68)<<(t0.c68)), ((((t0.c68)AND(t0.c68)))OR(t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY ((+ (-935093737)) IN ()) ASC);
SELECT ALL * FROM t0 WHERE (PRINTF(((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c68)), ((t0.c68)<<(t0.c68)), ((((t0.c68)AND(t0.c68)))OR(t0.c68)))) ORDER BY ((+ (-935093737)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c68)), ((t0.c68)<<(t0.c68)), ((((t0.c68)AND(t0.c68)))OR(t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY ((+ (-935093737)) IN ()) ASC);
SELECT ALL * FROM t0 WHERE (PRINTF(((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c68)), ((t0.c68)<<(t0.c68)), ((((t0.c68)AND(t0.c68)))OR(t0.c68)))) ORDER BY ((+ (-935093737)) IN ()) ASC;
SELECT * FROM t0, vt0 WHERE (CAST(UPPER(DISTINCT vt0.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT vt0.c1) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(UPPER(DISTINCT vt0.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT vt0.c1) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(UPPER(DISTINCT vt0.c1) AS NUMERIC));
SELECT * FROM t0 WHERE (((((((t0.c68)OR(t0.c68)))OR(t0.c68)))=(t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))==(t0.c68))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c68)OR(t0.c68)))OR(t0.c68)))=(t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))==(t0.c68))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c68)OR(t0.c68)))OR(t0.c68)))=(t0.c68)));
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c68))!=((0.14495216244995635))))OR(((t0.c68) NOTNULL))))AND((~ (t0.c68)))))AND((- (t0.c68)))))OR((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c68))<>((0.14495216244995635))))OR(((t0.c68) NOTNULL))))AND((~ (t0.c68)))))AND((- (t0.c68)))))OR((t0.c68 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c68))!=((0.14495216244995635))))OR(((t0.c68) NOTNULL))))AND((~ (t0.c68)))))AND((- (t0.c68)))))OR((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c68))<>((0.14495216244995635))))OR(((t0.c68) NOTNULL))))AND((~ (t0.c68)))))AND((- (t0.c68)))))OR((t0.c68 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c68))!=((0.14495216244995635))))OR(((t0.c68) NOTNULL))))AND((~ (t0.c68)))))AND((- (t0.c68)))))OR((t0.c68 IN ()))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.lid)OR(x'')))AND(t0.c68))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.lid) IS FALSE)))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.lid END THEN (+ (vt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.lid)OR(x'')))AND(t0.c68))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.lid) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.lid END THEN (+ (vt0.c1)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.lid)OR(x'')))AND(t0.c68))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.lid) IS FALSE)))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.lid END THEN (+ (vt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.lid)OR(x'')))AND(t0.c68))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.lid) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.lid END THEN (+ (vt0.c1)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.lid)OR(x'')))AND(t0.c68))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.lid) IS FALSE)))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.lid END THEN (+ (vt0.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68) IS TRUE)) NOT NULL)) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c2  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68) IS TRUE)) NOT NULL)) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c2  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68) IS TRUE)) NOT NULL)) ORDER BY vt0.c2  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((NOT (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((-1.102084971E9)AND(vt0.c0)))OR((t0.c68 IN (t0.c68)))))AND(-1832971868))) ORDER BY HEX(((vt0.c2) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((-1.102084971E9)AND(vt0.c0)))OR((t0.c68 IN (t0.c68)))))AND(-1832971868))) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(((vt0.c2) ISNULL)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((-1.102084971E9)AND(vt0.c0)))OR((t0.c68 IN (t0.c68)))))AND(-1832971868))) ORDER BY HEX(((vt0.c2) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((-1.102084971E9)AND(vt0.c0)))OR((t0.c68 IN (t0.c68)))))AND(-1832971868))) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(((vt0.c2) ISNULL)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((-1.102084971E9)AND(vt0.c0)))OR((t0.c68 IN (t0.c68)))))AND(-1832971868))) ORDER BY HEX(((vt0.c2) ISNULL)) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ('-293861809');
SELECT SUM(count) FROM (SELECT (('-293861809') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-293861809');
SELECT SUM(count) FROM (SELECT (('-293861809') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-293861809');
SELECT * FROM vt0, t0 WHERE ((((+ ('0.37275291676404954'))) NOT BETWEEN (((t0.c68) IS FALSE)) AND (((vt0.c2)AND(vt0.lid)))));
SELECT SUM(count) FROM (SELECT (((((+ ('0.37275291676404954'))) NOT BETWEEN (((t0.c68) IS FALSE)) AND (((vt0.c2)AND(vt0.lid))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((+ ('0.37275291676404954'))) NOT BETWEEN (((t0.c68) IS FALSE)) AND (((vt0.c2)AND(vt0.lid)))));
SELECT SUM(count) FROM (SELECT (((((+ ('0.37275291676404954'))) NOT BETWEEN (((t0.c68) IS FALSE)) AND (((vt0.c2)AND(vt0.lid))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((+ ('0.37275291676404954'))) NOT BETWEEN (((t0.c68) IS FALSE)) AND (((vt0.c2)AND(vt0.lid)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((COALESCE(DISTINCT vt0.c2, t0.c68, vt0.lid, vt0.c1))OR((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))))OR((('{}') BETWEEN (t0.c68) AND (vt0.c1))))) ORDER BY ((vt0.c2 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT vt0.c2, t0.c68, vt0.lid, vt0.c1))OR((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))))OR((('{}') BETWEEN (t0.c68) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c2 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((COALESCE(DISTINCT vt0.c2, t0.c68, vt0.lid, vt0.c1))OR((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))))OR((('{}') BETWEEN (t0.c68) AND (vt0.c1))))) ORDER BY ((vt0.c2 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT vt0.c2, t0.c68, vt0.lid, vt0.c1))OR((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))))OR((('{}') BETWEEN (t0.c68) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c2 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((COALESCE(DISTINCT vt0.c2, t0.c68, vt0.lid, vt0.c1))OR((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))))OR((('{}') BETWEEN (t0.c68) AND (vt0.c1))))) ORDER BY ((vt0.c2 IN ()) IN ());
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)<>(t0.c68))) ISNULL) WHERE (((((vt0.lid) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)!=(t0.c68))) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)<>(t0.c68))) ISNULL) WHERE (((((vt0.lid) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)!=(t0.c68))) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)<>(t0.c68))) ISNULL) WHERE (((((vt0.lid) IS TRUE))GLOB(CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)));
SELECT COUNT(*) FROM vt0 WHERE (0.1977789651937134) ORDER BY (((~ (vt0.lid)))>=(((x'')IS(vt0.c1)))) DESC, (((vt0.c2 IN ())) BETWEEN (((vt0.c1)-(vt0.c1))) AND ((+ (vt0.c2)))) DESC  NULLS FIRST, ((((vt0.lid)LIKE(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.1977789651937134) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.lid)))>=(((x'')IS(vt0.c1)))) DESC, (((vt0.c2 IN ())) BETWEEN (((vt0.c1)-(vt0.c1))) AND ((+ (vt0.c2)))) DESC  NULLS FIRST, ((((vt0.lid)LIKE(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (0.1977789651937134) ORDER BY (((~ (vt0.lid)))>=(((x'')IS(vt0.c1)))) DESC, (((vt0.c2 IN ())) BETWEEN (((vt0.c1)-(vt0.c1))) AND ((+ (vt0.c2)))) DESC  NULLS FIRST, ((((vt0.lid)LIKE(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.1977789651937134) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.lid)))>=(((x'')IS(vt0.c1)))) DESC, (((vt0.c2 IN ())) BETWEEN (((vt0.c1)-(vt0.c1))) AND ((+ (vt0.c2)))) DESC  NULLS FIRST, ((((vt0.lid)LIKE(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (0.1977789651937134) ORDER BY (((~ (vt0.lid)))>=(((x'')IS(vt0.c1)))) DESC, (((vt0.c2 IN ())) BETWEEN (((vt0.c1)-(vt0.c1))) AND ((+ (vt0.c2)))) DESC  NULLS FIRST, ((((vt0.lid)LIKE(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((CAST(t0.c68 AS REAL))) AND ((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))) ORDER BY CAST(t0.c68 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((CAST(t0.c68 AS REAL))) AND ((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((CAST(t0.c68 AS REAL))) AND ((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))) ORDER BY CAST(t0.c68 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((CAST(t0.c68 AS REAL))) AND ((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((CAST(t0.c68 AS REAL))) AND ((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))) ORDER BY CAST(t0.c68 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c1)>(vt0.lid)) AS NUMERIC)) ORDER BY ((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.c1)) AND ((vt0.c2, t0.c68, vt0.c0))) IN ()) ASC  NULLS FIRST, CAST(((vt0.c1) NOT NULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c1))<=((vt0.c0)))) AND ((((vt0.c1, vt0.c2, vt0.c2))>=((vt0.lid, vt0.c0, t0.c68))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)>(vt0.lid)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.c1)) AND ((vt0.c2, t0.c68, vt0.c0))) IN ()) ASC  NULLS FIRST, CAST(((vt0.c1) NOT NULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c1))<=((vt0.c0)))) AND ((((vt0.c1, vt0.c2, vt0.c2))>=((vt0.lid, vt0.c0, t0.c68))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c1)>(vt0.lid)) AS NUMERIC)) ORDER BY ((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.c1)) AND ((vt0.c2, t0.c68, vt0.c0))) IN ()) ASC  NULLS FIRST, CAST(((vt0.c1) NOT NULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c1))<=((vt0.c0)))) AND ((((vt0.c1, vt0.c2, vt0.c2))>=((vt0.lid, vt0.c0, t0.c68))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)>(vt0.lid)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.c1)) AND ((vt0.c2, t0.c68, vt0.c0))) IN ()) ASC  NULLS FIRST, CAST(((vt0.c1) NOT NULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c1))<=((vt0.c0)))) AND ((((vt0.c1, vt0.c2, vt0.c2))>=((vt0.lid, vt0.c0, t0.c68))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c1)>(vt0.lid)) AS NUMERIC)) ORDER BY ((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.c1)) AND ((vt0.c2, t0.c68, vt0.c0))) IN ()) ASC  NULLS FIRST, CAST(((vt0.c1) NOT NULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c1))<=((vt0.c0)))) AND ((((vt0.c1, vt0.c2, vt0.c2))>=((vt0.lid, vt0.c0, t0.c68))))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN INSTR(vt0.lid, vt0.c2) THEN vt0.lid WHEN ((vt0.c1)/(vt0.c2)) THEN '-1197893202' WHEN (- (vt0.c2)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (- (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN INSTR(vt0.lid, vt0.c2) THEN vt0.lid WHEN ((vt0.c1)/(vt0.c2)) THEN '-1197893202' WHEN (- (vt0.c2)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (- (x'')) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN INSTR(vt0.lid, vt0.c2) THEN vt0.lid WHEN ((vt0.c1)/(vt0.c2)) THEN '-1197893202' WHEN (- (vt0.c2)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (- (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN INSTR(vt0.lid, vt0.c2) THEN vt0.lid WHEN ((vt0.c1)/(vt0.c2)) THEN '-1197893202' WHEN (- (vt0.c2)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (- (x'')) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN INSTR(vt0.lid, vt0.c2) THEN vt0.lid WHEN ((vt0.c1)/(vt0.c2)) THEN '-1197893202' WHEN (- (vt0.c2)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (- (x'')) END);
SELECT ALL * FROM t0 WHERE (((((t0.c68)+(t0.c68)))LIKE(((t0.c68)IS NOT(t0.c68))))) ORDER BY ((t0.c68 COLLATE RTRIM)+(t0.c68 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)+(t0.c68)))LIKE(((t0.c68)IS NOT(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE RTRIM)+(t0.c68 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c68)+(t0.c68)))LIKE(((t0.c68)IS NOT(t0.c68))))) ORDER BY ((t0.c68 COLLATE RTRIM)+(t0.c68 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)+(t0.c68)))LIKE(((t0.c68)IS NOT(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE RTRIM)+(t0.c68 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c68)+(t0.c68)))LIKE(((t0.c68)IS NOT(t0.c68))))) ORDER BY ((t0.c68 COLLATE RTRIM)+(t0.c68 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c2)) ORDER BY 1.574373236E9 ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(vt0.c2)) IS TRUE)  as count FROM vt0 ORDER BY 1.574373236E9 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c2)) ORDER BY 1.574373236E9 ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(vt0.c2)) IS TRUE)  as count FROM vt0 ORDER BY 1.574373236E9 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c2)) ORDER BY 1.574373236E9 ASC;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.lid AS REAL))/((((vt0.c2)) BETWEEN (('794542399')) AND ((vt0.c1)))))) ORDER BY CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((x'4986', vt0.lid, NULL, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) WHEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)) THEN (~ (vt0.lid)) WHEN CAST(vt0.c1 AS REAL) THEN vt0.c2 COLLATE BINARY ELSE (+ (vt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.lid AS REAL))/((((vt0.c2)) BETWEEN (('794542399')) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((x'4986', vt0.lid, NULL, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) WHEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)) THEN (~ (vt0.lid)) WHEN CAST(vt0.c1 AS REAL) THEN vt0.c2 COLLATE BINARY ELSE (+ (vt0.c2)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.lid AS REAL))/((((vt0.c2)) BETWEEN (('794542399')) AND ((vt0.c1)))))) ORDER BY CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((x'4986', vt0.lid, NULL, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) WHEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)) THEN (~ (vt0.lid)) WHEN CAST(vt0.c1 AS REAL) THEN vt0.c2 COLLATE BINARY ELSE (+ (vt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.lid AS REAL))/((((vt0.c2)) BETWEEN (('794542399')) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((x'4986', vt0.lid, NULL, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) WHEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)) THEN (~ (vt0.lid)) WHEN CAST(vt0.c1 AS REAL) THEN vt0.c2 COLLATE BINARY ELSE (+ (vt0.c2)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.lid AS REAL))/((((vt0.c2)) BETWEEN (('794542399')) AND ((vt0.c1)))))) ORDER BY CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((x'4986', vt0.lid, NULL, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) WHEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)) THEN (~ (vt0.lid)) WHEN CAST(vt0.c1 AS REAL) THEN vt0.c2 COLLATE BINARY ELSE (+ (vt0.c2)) END ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.lid, vt0.c0)) NOT BETWEEN ((json_type(vt0.c1), ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)), (vt0.c1 IN ()))) AND ((CHANGES(), (+ (vt0.lid)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))) ORDER BY CHAR(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.lid, vt0.c0)) NOT BETWEEN ((json_type(vt0.c1), ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)), (vt0.c1 IN ()))) AND ((CHANGES(), (+ (vt0.lid)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY CHAR(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.lid, vt0.c0)) NOT BETWEEN ((json_type(vt0.c1), ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)), (vt0.c1 IN ()))) AND ((CHANGES(), (+ (vt0.lid)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))) ORDER BY CHAR(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.lid, vt0.c0)) NOT BETWEEN ((json_type(vt0.c1), ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)), (vt0.c1 IN ()))) AND ((CHANGES(), (+ (vt0.lid)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY CHAR(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.lid, vt0.c0)) NOT BETWEEN ((json_type(vt0.c1), ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)), (vt0.c1 IN ()))) AND ((CHANGES(), (+ (vt0.lid)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))) ORDER BY CHAR(((((((((vt0.c2)OR(vt0.lid)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c68 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c68 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 IN ()) COLLATE BINARY);
SELECT * FROM t0, vt0 WHERE ((((('	G%ઉ5')AND('-731631663')))OR(vt0.c0))) ORDER BY (+ (t0.c68));
SELECT SUM(count) FROM (SELECT (((((('	G%ઉ5')AND('-731631663')))OR(vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (t0.c68)));
SELECT * FROM t0, vt0 WHERE ((((('	G%ઉ5')AND('-731631663')))OR(vt0.c0))) ORDER BY (+ (t0.c68));
SELECT SUM(count) FROM (SELECT (((((('	G%ઉ5')AND('-731631663')))OR(vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (t0.c68)));
SELECT * FROM t0, vt0 WHERE ((((('	G%ઉ5')AND('-731631663')))OR(vt0.c0))) ORDER BY (+ (t0.c68));
SELECT * FROM t0 WHERE ((CAST(t0.c68 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c68 AS BLOB) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CAST(t0.c68 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c68 AS BLOB) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CAST(t0.c68 AS BLOB) IN ()));
SELECT COUNT(*) FROM t0, vt0 WHERE (UNICODE(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (UNICODE(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (UNICODE(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT * FROM t0 CROSS JOIN vt0 ON TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 END) WHERE (t0.c68) ORDER BY (- (((t0.c68)>>(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 END) ORDER BY (- (((t0.c68)>>(vt0.c2)))));
SELECT * FROM t0 CROSS JOIN vt0 ON TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 END) WHERE (t0.c68) ORDER BY (- (((t0.c68)>>(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 END) ORDER BY (- (((t0.c68)>>(vt0.c2)))));
SELECT * FROM t0 CROSS JOIN vt0 ON TYPEOF(CASE WHEN vt0.c0 THEN vt0.c1 END) WHERE (t0.c68) ORDER BY (- (((t0.c68)>>(vt0.c2))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c2 COLLATE RTRIM)AND(vt0.c2)))OR((((vt0.c2, vt0.c2, vt0.c2))<=((t0.c68, t0.c68, vt0.c0))))))AND(((vt0.c2)GLOB(x'')))))OR(vt0.lid COLLATE NOCASE))) ORDER BY MAX(vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN vt0.lid ELSE NULL END, t0.c68 COLLATE RTRIM, ((vt0.c2) BETWEEN (t0.c68) AND (vt0.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c2 COLLATE RTRIM)AND(vt0.c2)))OR((((vt0.c2, vt0.c2, vt0.c2))<=((t0.c68, t0.c68, vt0.c0))))))AND(((vt0.c2)GLOB(x'')))))OR(vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY MAX(vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN vt0.lid ELSE NULL END, t0.c68 COLLATE RTRIM, ((vt0.c2) BETWEEN (t0.c68) AND (vt0.lid))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c2 COLLATE RTRIM)AND(vt0.c2)))OR((((vt0.c2, vt0.c2, vt0.c2))<=((t0.c68, t0.c68, vt0.c0))))))AND(((vt0.c2)GLOB(x'')))))OR(vt0.lid COLLATE NOCASE))) ORDER BY MAX(vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN vt0.lid ELSE NULL END, t0.c68 COLLATE RTRIM, ((vt0.c2) BETWEEN (t0.c68) AND (vt0.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c2 COLLATE RTRIM)AND(vt0.c2)))OR((((vt0.c2, vt0.c2, vt0.c2))<=((t0.c68, t0.c68, vt0.c0))))))AND(((vt0.c2)GLOB(x'')))))OR(vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY MAX(vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN vt0.lid ELSE NULL END, t0.c68 COLLATE RTRIM, ((vt0.c2) BETWEEN (t0.c68) AND (vt0.lid))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c2 COLLATE RTRIM)AND(vt0.c2)))OR((((vt0.c2, vt0.c2, vt0.c2))<=((t0.c68, t0.c68, vt0.c0))))))AND(((vt0.c2)GLOB(x'')))))OR(vt0.lid COLLATE NOCASE))) ORDER BY MAX(vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN vt0.lid ELSE NULL END, t0.c68 COLLATE RTRIM, ((vt0.c2) BETWEEN (t0.c68) AND (vt0.lid)));
SELECT * FROM t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT * FROM t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT * FROM t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT * FROM vt0, t0 WHERE (CAST(DATE(vt0.c1, t0.c68, vt0.c2, vt0.c2, vt0.lid) AS TEXT)) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(DISTINCT 0.46122227296546703, 0.5808403812996645) END  NULLS LAST, ((((x'678d')AND(t0.c68 COLLATE BINARY)))OR((t0.c68 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(DATE(vt0.c1, t0.c68, vt0.c2, vt0.c2, vt0.lid) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(DISTINCT 0.46122227296546703, 0.5808403812996645) END  NULLS LAST, ((((x'678d')AND(t0.c68 COLLATE BINARY)))OR((t0.c68 IN ()))) ASC);
SELECT * FROM vt0, t0 WHERE (CAST(DATE(vt0.c1, t0.c68, vt0.c2, vt0.c2, vt0.lid) AS TEXT)) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(DISTINCT 0.46122227296546703, 0.5808403812996645) END  NULLS LAST, ((((x'678d')AND(t0.c68 COLLATE BINARY)))OR((t0.c68 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(DATE(vt0.c1, t0.c68, vt0.c2, vt0.c2, vt0.lid) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(DISTINCT 0.46122227296546703, 0.5808403812996645) END  NULLS LAST, ((((x'678d')AND(t0.c68 COLLATE BINARY)))OR((t0.c68 IN ()))) ASC);
SELECT * FROM vt0, t0 WHERE (CAST(DATE(vt0.c1, t0.c68, vt0.c2, vt0.c2, vt0.lid) AS TEXT)) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(DISTINCT 0.46122227296546703, 0.5808403812996645) END  NULLS LAST, ((((x'678d')AND(t0.c68 COLLATE BINARY)))OR((t0.c68 IN ()))) ASC;
SELECT ALL * FROM vt0, t0 WHERE ((x'b689' IN ()));
SELECT SUM(count) FROM (SELECT (((x'b689' IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((x'b689' IN ()));
SELECT SUM(count) FROM (SELECT (((x'b689' IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((x'b689' IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ()));
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END  WHEN CAST(vt0.c2 AS TEXT) THEN (~ (vt0.c1)) END) ORDER BY ((vt0.c2) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END  WHEN CAST(vt0.c2 AS TEXT) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END  WHEN CAST(vt0.c2 AS TEXT) THEN (~ (vt0.c1)) END) ORDER BY ((vt0.c2) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END  WHEN CAST(vt0.c2 AS TEXT) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END  WHEN CAST(vt0.c2 AS TEXT) THEN (~ (vt0.c1)) END) ORDER BY ((vt0.c2) ISNULL) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.lid))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.lid))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.lid))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.lid))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.lid))) ISNULL));
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE NOCASE IN (((('~l*a', t0.c68, t0.c68))<((t0.c68, t0.c68, t0.c68))))));
SELECT SUM(count) FROM (SELECT (((t0.c68 COLLATE NOCASE IN (((('~l*a', t0.c68, t0.c68))<((t0.c68, t0.c68, t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE NOCASE IN (((('~l*a', t0.c68, t0.c68))<((t0.c68, t0.c68, t0.c68))))));
SELECT SUM(count) FROM (SELECT (((t0.c68 COLLATE NOCASE IN (((('~l*a', t0.c68, t0.c68))<((t0.c68, t0.c68, t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE NOCASE IN (((('~l*a', t0.c68, t0.c68))<((t0.c68, t0.c68, t0.c68))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c68, vt0.c2, vt0.c1)) BETWEEN ((HEX(DISTINCT vt0.c2), ((vt0.c0)<<(vt0.c0)), vt0.c0)) AND ((CAST(t0.c68 AS REAL), (((vt0.c2))>((t0.c68))), CAST(7.29061166E8 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((t0.c68, vt0.c2, vt0.c1)) BETWEEN ((HEX(DISTINCT vt0.c2), ((vt0.c0)<<(vt0.c0)), vt0.c0)) AND ((CAST(t0.c68 AS REAL), (((vt0.c2))>((t0.c68))), CAST(7.29061166E8 AS INTEGER))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c68, vt0.c2, vt0.c1)) BETWEEN ((HEX(DISTINCT vt0.c2), ((vt0.c0)<<(vt0.c0)), vt0.c0)) AND ((CAST(t0.c68 AS REAL), (((vt0.c2))>((t0.c68))), CAST(7.29061166E8 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((t0.c68, vt0.c2, vt0.c1)) BETWEEN ((HEX(DISTINCT vt0.c2), ((vt0.c0)<<(vt0.c0)), vt0.c0)) AND ((CAST(t0.c68 AS REAL), (((vt0.c2))>((t0.c68))), CAST(7.29061166E8 AS INTEGER))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c68, vt0.c2, vt0.c1)) BETWEEN ((HEX(DISTINCT vt0.c2), ((vt0.c0)<<(vt0.c0)), vt0.c0)) AND ((CAST(t0.c68 AS REAL), (((vt0.c2))>((t0.c68))), CAST(7.29061166E8 AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((('2017552327'))<=((t0.c68)))) BETWEEN ((NOT (vt0.c2))) AND ((((vt0.c2, vt0.c2, vt0.lid)) BETWEEN ((vt0.c2, '423487430', t0.c68)) AND ((vt0.c0, vt0.lid, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((('2017552327'))<=((t0.c68)))) BETWEEN ((NOT (vt0.c2))) AND ((((vt0.c2, vt0.c2, vt0.lid)) BETWEEN ((vt0.c2, '423487430', t0.c68)) AND ((vt0.c0, vt0.lid, vt0.c1)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((('2017552327'))<=((t0.c68)))) BETWEEN ((NOT (vt0.c2))) AND ((((vt0.c2, vt0.c2, vt0.lid)) BETWEEN ((vt0.c2, '423487430', t0.c68)) AND ((vt0.c0, vt0.lid, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((('2017552327'))<=((t0.c68)))) BETWEEN ((NOT (vt0.c2))) AND ((((vt0.c2, vt0.c2, vt0.lid)) BETWEEN ((vt0.c2, '423487430', t0.c68)) AND ((vt0.c0, vt0.lid, vt0.c1)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((('2017552327'))<=((t0.c68)))) BETWEEN ((NOT (vt0.c2))) AND ((((vt0.c2, vt0.c2, vt0.lid)) BETWEEN ((vt0.c2, '423487430', t0.c68)) AND ((vt0.c0, vt0.lid, vt0.c1))))));
SELECT * FROM t0 CROSS JOIN vt0 ON CASE vt0.c1  WHEN vt0.c0 THEN ((('S<鋔9䲐ch'))<((vt0.lid))) WHEN '' THEN ((t0.c68)<<(vt0.lid)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)) ELSE CAST(t0.c68 AS NUMERIC) END WHERE (((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN (vt0.c1, vt0.c1))))) ORDER BY CASE x'fdf5'  WHEN '-2113531010' COLLATE NOCASE THEN x'' ELSE ((vt0.c0)IS(vt0.c1)) END ASC, (((vt0.lid)IS NOT(vt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN (vt0.c1, vt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE vt0.c1  WHEN vt0.c0 THEN ((('S<鋔9䲐ch'))<((vt0.lid))) WHEN '' THEN ((t0.c68)<<(vt0.lid)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)) ELSE CAST(t0.c68 AS NUMERIC) END ORDER BY CASE x'fdf5'  WHEN '-2113531010' COLLATE NOCASE THEN x'' ELSE ((vt0.c0)IS(vt0.c1)) END ASC, (((vt0.lid)IS NOT(vt0.c2)) IN ())  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE vt0.c1  WHEN vt0.c0 THEN ((('S<鋔9䲐ch'))<((vt0.lid))) WHEN '' THEN ((t0.c68)<<(vt0.lid)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)) ELSE CAST(t0.c68 AS NUMERIC) END WHERE (((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN (vt0.c1, vt0.c1))))) ORDER BY CASE x'fdf5'  WHEN '-2113531010' COLLATE NOCASE THEN x'' ELSE ((vt0.c0)IS(vt0.c1)) END ASC, (((vt0.lid)IS NOT(vt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN (vt0.c1, vt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE vt0.c1  WHEN vt0.c0 THEN ((('S<鋔9䲐ch'))<((vt0.lid))) WHEN '' THEN ((t0.c68)<<(vt0.lid)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)) ELSE CAST(t0.c68 AS NUMERIC) END ORDER BY CASE x'fdf5'  WHEN '-2113531010' COLLATE NOCASE THEN x'' ELSE ((vt0.c0)IS(vt0.c1)) END ASC, (((vt0.lid)IS NOT(vt0.c2)) IN ())  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE vt0.c1  WHEN vt0.c0 THEN ((('S<鋔9䲐ch'))<((vt0.lid))) WHEN '' THEN ((t0.c68)<<(vt0.lid)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)) ELSE CAST(t0.c68 AS NUMERIC) END WHERE (((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN (vt0.c1, vt0.c1))))) ORDER BY CASE x'fdf5'  WHEN '-2113531010' COLLATE NOCASE THEN x'' ELSE ((vt0.c0)IS(vt0.c1)) END ASC, (((vt0.lid)IS NOT(vt0.c2)) IN ())  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c68) NOT NULL))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT NULL))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c68) NOT NULL))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT NULL))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c68) NOT NULL))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c68)*(t0.c68))  WHEN t0.c68 COLLATE NOCASE THEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END ELSE t0.c68 END) ORDER BY (((t0.c68)) BETWEEN ((UPPER(t0.c68))) AND ((t0.c68 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68)*(t0.c68))  WHEN t0.c68 COLLATE NOCASE THEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END ELSE t0.c68 END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) BETWEEN ((UPPER(t0.c68))) AND ((t0.c68 COLLATE RTRIM))));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c68)*(t0.c68))  WHEN t0.c68 COLLATE NOCASE THEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END ELSE t0.c68 END) ORDER BY (((t0.c68)) BETWEEN ((UPPER(t0.c68))) AND ((t0.c68 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68)*(t0.c68))  WHEN t0.c68 COLLATE NOCASE THEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END ELSE t0.c68 END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) BETWEEN ((UPPER(t0.c68))) AND ((t0.c68 COLLATE RTRIM))));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c68)*(t0.c68))  WHEN t0.c68 COLLATE NOCASE THEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END ELSE t0.c68 END) ORDER BY (((t0.c68)) BETWEEN ((UPPER(t0.c68))) AND ((t0.c68 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC))GLOB(((t0.c68)<=(0x2f5bc13f)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS NUMERIC))GLOB(((t0.c68)<=(0x2f5bc13f))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC))GLOB(((t0.c68)<=(0x2f5bc13f)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS NUMERIC))GLOB(((t0.c68)<=(0x2f5bc13f))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC))GLOB(((t0.c68)<=(0x2f5bc13f)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.lid))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.lid))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.lid))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.lid))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.lid))) IS FALSE));
SELECT * FROM t0 WHERE ((((((t0.c68)AND(t0.c68))))<>((((((t0.c68)OR(t0.c68)))OR(t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)AND(t0.c68))))<>((((((t0.c68)OR(t0.c68)))OR(t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c68)AND(t0.c68))))<>((((((t0.c68)OR(t0.c68)))OR(t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)AND(t0.c68))))<>((((((t0.c68)OR(t0.c68)))OR(t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c68)AND(t0.c68))))<>((((((t0.c68)OR(t0.c68)))OR(t0.c68))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c68)>=(vt0.c2)) AS BLOB)) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68)>=(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY '');
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c68)>=(vt0.c2)) AS BLOB)) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68)>=(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY '');
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c68)>=(vt0.c2)) AS BLOB)) ORDER BY '';
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.lid)AND(t0.c68))) BETWEEN (x'b259') AND (((vt0.c0)%(vt0.c1)))) WHERE ((((NOT (vt0.c2)))|(t0.c68 COLLATE RTRIM))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, 0.19406905760241056  NULLS FIRST, ((((((vt0.c1) IS TRUE))AND(((vt0.lid) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))|(t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.lid)AND(t0.c68))) BETWEEN (x'b259') AND (((vt0.c0)%(vt0.c1)))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, 0.19406905760241056  NULLS FIRST, ((((((vt0.c1) IS TRUE))AND(((vt0.lid) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.lid)AND(t0.c68))) BETWEEN (x'b259') AND (((vt0.c0)%(vt0.c1)))) WHERE ((((NOT (vt0.c2)))|(t0.c68 COLLATE RTRIM))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, 0.19406905760241056  NULLS FIRST, ((((((vt0.c1) IS TRUE))AND(((vt0.lid) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))|(t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.lid)AND(t0.c68))) BETWEEN (x'b259') AND (((vt0.c0)%(vt0.c1)))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, 0.19406905760241056  NULLS FIRST, ((((((vt0.c1) IS TRUE))AND(((vt0.lid) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.lid)AND(t0.c68))) BETWEEN (x'b259') AND (((vt0.c0)%(vt0.c1)))) WHERE ((((NOT (vt0.c2)))|(t0.c68 COLLATE RTRIM))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, 0.19406905760241056  NULLS FIRST, ((((((vt0.c1) IS TRUE))AND(((vt0.lid) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 END THEN (t0.c68 IN ()) WHEN (t0.c68 IN (t0.c68)) THEN ((((0.10258573459359155)OR(t0.c68)))OR(t0.c68)) WHEN (NOT (t0.c68)) THEN '0.0046626500859706654' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 END THEN (t0.c68 IN ()) WHEN (t0.c68 IN (t0.c68)) THEN ((((0.10258573459359155)OR(t0.c68)))OR(t0.c68)) WHEN (NOT (t0.c68)) THEN '0.0046626500859706654' END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 END THEN (t0.c68 IN ()) WHEN (t0.c68 IN (t0.c68)) THEN ((((0.10258573459359155)OR(t0.c68)))OR(t0.c68)) WHEN (NOT (t0.c68)) THEN '0.0046626500859706654' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 END THEN (t0.c68 IN ()) WHEN (t0.c68 IN (t0.c68)) THEN ((((0.10258573459359155)OR(t0.c68)))OR(t0.c68)) WHEN (NOT (t0.c68)) THEN '0.0046626500859706654' END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c68 END THEN (t0.c68 IN ()) WHEN (t0.c68 IN (t0.c68)) THEN ((((0.10258573459359155)OR(t0.c68)))OR(t0.c68)) WHEN (NOT (t0.c68)) THEN '0.0046626500859706654' END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (NULL) AND (t0.c68)))<>(-1.968077994E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) BETWEEN (NULL) AND (t0.c68)))<>(-1.968077994E9))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (NULL) AND (t0.c68)))<>(-1.968077994E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) BETWEEN (NULL) AND (t0.c68)))<>(-1.968077994E9))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (NULL) AND (t0.c68)))<>(-1.968077994E9)));
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL * FROM t0, vt0 WHERE (NULLIF(DISTINCT CASE vt0.c1  WHEN vt0.lid THEN t0.c68 END, CAST(vt0.c1 AS NUMERIC))) ORDER BY (((((x'')|(vt0.c1))))>=((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CASE vt0.c1  WHEN vt0.lid THEN t0.c68 END, CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((x'')|(vt0.c1))))>=((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (NULLIF(DISTINCT CASE vt0.c1  WHEN vt0.lid THEN t0.c68 END, CAST(vt0.c1 AS NUMERIC))) ORDER BY (((((x'')|(vt0.c1))))>=((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CASE vt0.c1  WHEN vt0.lid THEN t0.c68 END, CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((x'')|(vt0.c1))))>=((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (NULLIF(DISTINCT CASE vt0.c1  WHEN vt0.lid THEN t0.c68 END, CAST(vt0.c1 AS NUMERIC))) ORDER BY (((((x'')|(vt0.c1))))>=((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(HEX(vt0.c0) AS BLOB)) ORDER BY CAST(0.9860401065556607 AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(vt0.c0) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(0.9860401065556607 AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(HEX(vt0.c0) AS BLOB)) ORDER BY CAST(0.9860401065556607 AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(vt0.c0) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(0.9860401065556607 AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(HEX(vt0.c0) AS BLOB)) ORDER BY CAST(0.9860401065556607 AS REAL);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOT NULL)) NOT BETWEEN (((vt0.c0)<<(t0.c68))) AND (CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END)) WHERE (-867304106);
SELECT SUM(count) FROM (SELECT ALL ((-867304106) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOT NULL)) NOT BETWEEN (((vt0.c0)<<(t0.c68))) AND (CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOT NULL)) NOT BETWEEN (((vt0.c0)<<(t0.c68))) AND (CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END)) WHERE (-867304106);
SELECT SUM(count) FROM (SELECT ALL ((-867304106) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOT NULL)) NOT BETWEEN (((vt0.c0)<<(t0.c68))) AND (CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOT NULL)) NOT BETWEEN (((vt0.c0)<<(t0.c68))) AND (CASE WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END)) WHERE (-867304106);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN '330240842' THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE x'' END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '330240842' THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE x'' END) IS TRUE)  as count FROM t0, vt0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN '330240842' THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE x'' END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '330240842' THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE x'' END) IS TRUE)  as count FROM t0, vt0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN '330240842' THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE x'' END) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((t0.c68 COLLATE NOCASE)GLOB(CASE '-922277181'  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))  NULLS LAST, CASE WHEN CAST(t0.c68 AS NUMERIC) THEN t0.c68 COLLATE BINARY ELSE ((x'') BETWEEN (t0.c68) AND (t0.c68)) END ASC, CASE WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN t0.c68 END;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE NOCASE)GLOB(CASE '-922277181'  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))  NULLS LAST, CASE WHEN CAST(t0.c68 AS NUMERIC) THEN t0.c68 COLLATE BINARY ELSE ((x'') BETWEEN (t0.c68) AND (t0.c68)) END ASC, CASE WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN t0.c68 END);
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((t0.c68 COLLATE NOCASE)GLOB(CASE '-922277181'  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))  NULLS LAST, CASE WHEN CAST(t0.c68 AS NUMERIC) THEN t0.c68 COLLATE BINARY ELSE ((x'') BETWEEN (t0.c68) AND (t0.c68)) END ASC, CASE WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN t0.c68 END;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE NOCASE)GLOB(CASE '-922277181'  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))  NULLS LAST, CASE WHEN CAST(t0.c68 AS NUMERIC) THEN t0.c68 COLLATE BINARY ELSE ((x'') BETWEEN (t0.c68) AND (t0.c68)) END ASC, CASE WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN t0.c68 END);
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((t0.c68 COLLATE NOCASE)GLOB(CASE '-922277181'  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))  NULLS LAST, CASE WHEN CAST(t0.c68 AS NUMERIC) THEN t0.c68 COLLATE BINARY ELSE ((x'') BETWEEN (t0.c68) AND (t0.c68)) END ASC, CASE WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN t0.c68 END;
SELECT * FROM vt0, t0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND (-2024652748))) BETWEEN ((NOT (vt0.c1))) AND (vt0.c2 COLLATE NOCASE))) ORDER BY (NULL IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt0.c0) AND (-2024652748))) BETWEEN ((NOT (vt0.c1))) AND (vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NULL IN ()) COLLATE RTRIM ASC);
SELECT * FROM vt0, t0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND (-2024652748))) BETWEEN ((NOT (vt0.c1))) AND (vt0.c2 COLLATE NOCASE))) ORDER BY (NULL IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt0.c0) AND (-2024652748))) BETWEEN ((NOT (vt0.c1))) AND (vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NULL IN ()) COLLATE RTRIM ASC);
SELECT * FROM vt0, t0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND (-2024652748))) BETWEEN ((NOT (vt0.c1))) AND (vt0.c2 COLLATE NOCASE))) ORDER BY (NULL IN ()) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY ((((CASE t0.c68  WHEN 0Xffffffffb5ea9c52 THEN t0.c68 END)OR(((0.18506255752014034) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((t0.c68) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c68  WHEN 0Xffffffffb5ea9c52 THEN t0.c68 END)OR(((0.18506255752014034) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((t0.c68) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY ((((CASE t0.c68  WHEN 0Xffffffffb5ea9c52 THEN t0.c68 END)OR(((0.18506255752014034) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((t0.c68) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c68  WHEN 0Xffffffffb5ea9c52 THEN t0.c68 END)OR(((0.18506255752014034) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((t0.c68) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY ((((CASE t0.c68  WHEN 0Xffffffffb5ea9c52 THEN t0.c68 END)OR(((0.18506255752014034) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((t0.c68) ISNULL)))  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(((t0.c68) NOTNULL) AS BLOB)) ORDER BY ((((t0.c68)||(t0.c68)))>((- (t0.c68)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68) NOTNULL) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)||(t0.c68)))>((- (t0.c68)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((t0.c68) NOTNULL) AS BLOB)) ORDER BY ((((t0.c68)||(t0.c68)))>((- (t0.c68)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68) NOTNULL) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)||(t0.c68)))>((- (t0.c68)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((t0.c68) NOTNULL) AS BLOB)) ORDER BY ((((t0.c68)||(t0.c68)))>((- (t0.c68)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0)) IN ())) ORDER BY (- (((vt0.c1)||(vt0.lid)))) ASC, vt0.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1)||(vt0.lid)))) ASC, vt0.lid  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0)) IN ())) ORDER BY (- (((vt0.c1)||(vt0.lid)))) ASC, vt0.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1)||(vt0.lid)))) ASC, vt0.lid  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0)) IN ())) ORDER BY (- (((vt0.c1)||(vt0.lid)))) ASC, vt0.lid  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((('') ISNULL));
SELECT SUM(count) FROM (SELECT (((('') ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('') ISNULL));
SELECT SUM(count) FROM (SELECT (((('') ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('') ISNULL));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((vt0.lid, vt0.c2, vt0.c0)) BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c1)))OR(vt0.lid)), vt0.c1 COLLATE RTRIM)) AND ((((t0.c68) ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c2) AND ('')), (~ (NULL))))) WHERE (CAST(SQLITE_VERSION() AS INTEGER)) ORDER BY ((json_array(vt0.c0, vt0.c1))%((t0.c68 IN (-2029106412, vt0.c1)))) DESC, (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_VERSION() AS INTEGER)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((vt0.lid, vt0.c2, vt0.c0)) BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c1)))OR(vt0.lid)), vt0.c1 COLLATE RTRIM)) AND ((((t0.c68) ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c2) AND ('')), (~ (NULL))))) ORDER BY ((json_array(vt0.c0, vt0.c1))%((t0.c68 IN (-2029106412, vt0.c1)))) DESC, (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((vt0.lid, vt0.c2, vt0.c0)) BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c1)))OR(vt0.lid)), vt0.c1 COLLATE RTRIM)) AND ((((t0.c68) ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c2) AND ('')), (~ (NULL))))) WHERE (CAST(SQLITE_VERSION() AS INTEGER)) ORDER BY ((json_array(vt0.c0, vt0.c1))%((t0.c68 IN (-2029106412, vt0.c1)))) DESC, (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_VERSION() AS INTEGER)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((vt0.lid, vt0.c2, vt0.c0)) BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c1)))OR(vt0.lid)), vt0.c1 COLLATE RTRIM)) AND ((((t0.c68) ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c2) AND ('')), (~ (NULL))))) ORDER BY ((json_array(vt0.c0, vt0.c1))%((t0.c68 IN (-2029106412, vt0.c1)))) DESC, (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((vt0.lid, vt0.c2, vt0.c0)) BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c1)))OR(vt0.lid)), vt0.c1 COLLATE RTRIM)) AND ((((t0.c68) ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c2) AND ('')), (~ (NULL))))) WHERE (CAST(SQLITE_VERSION() AS INTEGER)) ORDER BY ((json_array(vt0.c0, vt0.c1))%((t0.c68 IN (-2029106412, vt0.c1)))) DESC, (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))));
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c68))) NOT BETWEEN (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) AND (IFNULL(DISTINCT t0.c68, t0.c68)))) ORDER BY CAST(CAST(t0.c68 AS BLOB) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c68))) NOT BETWEEN (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) AND (IFNULL(DISTINCT t0.c68, t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c68 AS BLOB) AS BLOB) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c68))) NOT BETWEEN (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) AND (IFNULL(DISTINCT t0.c68, t0.c68)))) ORDER BY CAST(CAST(t0.c68 AS BLOB) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c68))) NOT BETWEEN (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) AND (IFNULL(DISTINCT t0.c68, t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c68 AS BLOB) AS BLOB) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c68))) NOT BETWEEN (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) AND (IFNULL(DISTINCT t0.c68, t0.c68)))) ORDER BY CAST(CAST(t0.c68 AS BLOB) AS BLOB) ASC;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS BLOB)) NOT BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN t0.c68 THEN t0.c68 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB)) NOT BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS BLOB)) NOT BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN t0.c68 THEN t0.c68 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB)) NOT BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS BLOB)) NOT BETWEEN (NULL COLLATE RTRIM) AND (CASE WHEN t0.c68 THEN t0.c68 END)));
SELECT * FROM t0 CROSS JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) WHERE ((((vt0.c1)||(t0.c68)) IN ())) ORDER BY ((((t0.c68) IS FALSE)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)||(t0.c68)) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) ORDER BY ((((t0.c68) IS FALSE)) ISNULL) DESC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) WHERE ((((vt0.c1)||(t0.c68)) IN ())) ORDER BY ((((t0.c68) IS FALSE)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)||(t0.c68)) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) ORDER BY ((((t0.c68) IS FALSE)) ISNULL) DESC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) WHERE ((((vt0.c1)||(t0.c68)) IN ())) ORDER BY ((((t0.c68) IS FALSE)) ISNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((x'a67b') NOT BETWEEN (vt0.lid) AND (t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'a67b') NOT BETWEEN (vt0.lid) AND (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((x'a67b') NOT BETWEEN (vt0.lid) AND (t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'a67b') NOT BETWEEN (vt0.lid) AND (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((x'a67b') NOT BETWEEN (vt0.lid) AND (t0.c68)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c68)AND('1074012053')) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c68)AND('1074012053')));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c68)AND('1074012053')) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c68)AND('1074012053')));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c68)AND('1074012053')) WHERE (NULL);
SELECT ALL * FROM t0 WHERE (rtreenode(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)), (((('147147671')OR(t0.c68)))AND(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)), (((('147147671')OR(t0.c68)))AND(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (rtreenode(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)), (((('147147671')OR(t0.c68)))AND(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)), (((('147147671')OR(t0.c68)))AND(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (rtreenode(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)), (((('147147671')OR(t0.c68)))AND(t0.c68))));
SELECT * FROM t0 WHERE (((((((((((((((t0.c68)<('461064997')))OR(t0.c68 COLLATE NOCASE)))AND(((((t0.c68)OR(t0.c68)))OR(t0.c68)))))AND(((t0.c68)=(x'')))))AND(t0.c68)))AND((NOT (t0.c68)))))OR(UPPER(t0.c68)))) ORDER BY (((NOT (t0.c68)))OR('8%k}'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c68)<('461064997')))OR(t0.c68 COLLATE NOCASE)))AND(((((t0.c68)OR(t0.c68)))OR(t0.c68)))))AND(((t0.c68)=(x'')))))AND(t0.c68)))AND((NOT (t0.c68)))))OR(UPPER(t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c68)))OR('8%k}')));
SELECT * FROM t0 WHERE (((((((((((((((t0.c68)<('461064997')))OR(t0.c68 COLLATE NOCASE)))AND(((((t0.c68)OR(t0.c68)))OR(t0.c68)))))AND(((t0.c68)=(x'')))))AND(t0.c68)))AND((NOT (t0.c68)))))OR(UPPER(t0.c68)))) ORDER BY (((NOT (t0.c68)))OR('8%k}'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c68)<('461064997')))OR(t0.c68 COLLATE NOCASE)))AND(((((t0.c68)OR(t0.c68)))OR(t0.c68)))))AND(((t0.c68)=(x'')))))AND(t0.c68)))AND((NOT (t0.c68)))))OR(UPPER(t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c68)))OR('8%k}')));
SELECT * FROM t0 WHERE (((((((((((((((t0.c68)<('461064997')))OR(t0.c68 COLLATE NOCASE)))AND(((((t0.c68)OR(t0.c68)))OR(t0.c68)))))AND(((t0.c68)=(x'')))))AND(t0.c68)))AND((NOT (t0.c68)))))OR(UPPER(t0.c68)))) ORDER BY (((NOT (t0.c68)))OR('8%k}'));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.lid)=(vt0.lid))) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c1)) AND (vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)==(vt0.lid))) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c1)) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.lid)=(vt0.lid))) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c1)) AND (vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)==(vt0.lid))) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c1)) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.lid)=(vt0.lid))) BETWEEN (NULLIF(DISTINCT vt0.c0, vt0.c1)) AND (vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 END COLLATE RTRIM WHERE (CAST(((vt0.c2) NOT NULL) AS TEXT)) ORDER BY CAST('' AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 END COLLATE RTRIM ORDER BY CAST('' AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 END COLLATE RTRIM WHERE (CAST(((vt0.c2) NOT NULL) AS TEXT)) ORDER BY CAST('' AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 END COLLATE RTRIM ORDER BY CAST('' AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 END COLLATE RTRIM WHERE (CAST(((vt0.c2) NOT NULL) AS TEXT)) ORDER BY CAST('' AS REAL) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((NULL)>=((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL)>=((NULL IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL)>=((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL)>=((NULL IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL)>=((NULL IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY CAST(((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(1074012053)))OR(t0.c68)))AND(t0.c68)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(1074012053)))OR(t0.c68)))AND(t0.c68)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY CAST(((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(1074012053)))OR(t0.c68)))AND(t0.c68)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(1074012053)))OR(t0.c68)))AND(t0.c68)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY CAST(((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(1074012053)))OR(t0.c68)))AND(t0.c68)) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1))) NOT BETWEEN (((vt0.c0)<=('245023054'))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1))) NOT BETWEEN (((vt0.c0)<=('245023054'))) AND (x''))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1))) NOT BETWEEN (((vt0.c0)<=('245023054'))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1))) NOT BETWEEN (((vt0.c0)<=('245023054'))) AND (x''))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1))) NOT BETWEEN (((vt0.c0)<=('245023054'))) AND (x'')));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER)) ORDER BY vt0.lid;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER)) ORDER BY vt0.lid;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER)) ORDER BY vt0.lid;
SELECT ALL * FROM vt0 WHERE (CASE WHEN NULL THEN ((0.7209611247938308) NOT NULL) END) ORDER BY (- (((vt0.c1)>(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((0.7209611247938308) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1)>(NULL)))) DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN NULL THEN ((0.7209611247938308) NOT NULL) END) ORDER BY (- (((vt0.c1)>(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((0.7209611247938308) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1)>(NULL)))) DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN NULL THEN ((0.7209611247938308) NOT NULL) END) ORDER BY (- (((vt0.c1)>(NULL)))) DESC;
SELECT ALL * FROM vt0 WHERE ((vt0.c2 IN ()) COLLATE BINARY) ORDER BY CASE '794542399'  WHEN ((((x'')OR(vt0.c2)))AND(vt0.lid)) THEN (((vt0.c0))<((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN NULL WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN vt0.c1 ELSE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE '446347565' END END DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE '794542399'  WHEN ((((x'')OR(vt0.c2)))AND(vt0.lid)) THEN (((vt0.c0))<((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN NULL WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN vt0.c1 ELSE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE '446347565' END END DESC);
SELECT ALL * FROM vt0 WHERE ((vt0.c2 IN ()) COLLATE BINARY) ORDER BY CASE '794542399'  WHEN ((((x'')OR(vt0.c2)))AND(vt0.lid)) THEN (((vt0.c0))<((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN NULL WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN vt0.c1 ELSE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE '446347565' END END DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE '794542399'  WHEN ((((x'')OR(vt0.c2)))AND(vt0.lid)) THEN (((vt0.c0))<((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN NULL WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN vt0.c1 ELSE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE '446347565' END END DESC);
SELECT ALL * FROM vt0 WHERE ((vt0.c2 IN ()) COLLATE BINARY) ORDER BY CASE '794542399'  WHEN ((((x'')OR(vt0.c2)))AND(vt0.lid)) THEN (((vt0.c0))<((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN NULL WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN vt0.c1 ELSE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE '446347565' END END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (NOT (vt0.c2)) THEN vt0.lid COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c2)) THEN vt0.lid COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (NOT (vt0.c2)) THEN vt0.lid COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c2)) THEN vt0.lid COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (NOT (vt0.c2)) THEN vt0.lid COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0, 0.46857724909259135, vt0.c2, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.lid, vt0.c2, vt0.lid)) AND ((vt0.lid, NULL, vt0.lid, x'', vt0.c1))))) AND (((((vt0.lid))=((vt0.c1))))))) ORDER BY (((~ (vt0.c0)))>>(((vt0.lid)==(vt0.c0))))  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN (vt0.c2 IN ()) THEN ((vt0.c0)>=(vt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c0, 0.46857724909259135, vt0.c2, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.lid, vt0.c2, vt0.lid)) AND ((vt0.lid, NULL, vt0.lid, x'', vt0.c1))))) AND (((((vt0.lid))=((vt0.c1))))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))>>(((vt0.lid)=(vt0.c0))))  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN (vt0.c2 IN ()) THEN ((vt0.c0)>=(vt0.c2)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0, 0.46857724909259135, vt0.c2, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.lid, vt0.c2, vt0.lid)) AND ((vt0.lid, NULL, vt0.lid, x'', vt0.c1))))) AND (((((vt0.lid))=((vt0.c1))))))) ORDER BY (((~ (vt0.c0)))>>(((vt0.lid)==(vt0.c0))))  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN (vt0.c2 IN ()) THEN ((vt0.c0)>=(vt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c0, 0.46857724909259135, vt0.c2, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.lid, vt0.c2, vt0.lid)) AND ((vt0.lid, NULL, vt0.lid, x'', vt0.c1))))) AND (((((vt0.lid))=((vt0.c1))))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))>>(((vt0.lid)=(vt0.c0))))  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN (vt0.c2 IN ()) THEN ((vt0.c0)>=(vt0.c2)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0, 0.46857724909259135, vt0.c2, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.lid, vt0.lid, vt0.c2, vt0.lid)) AND ((vt0.lid, NULL, vt0.lid, x'', vt0.c1))))) AND (((((vt0.lid))=((vt0.c1))))))) ORDER BY (((~ (vt0.c0)))>>(((vt0.lid)==(vt0.c0))))  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN (vt0.c2 IN ()) THEN ((vt0.c0)>=(vt0.c2)) END;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (LENGTH(vt0.lid));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(vt0.lid)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LENGTH(vt0.lid));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(vt0.lid)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LENGTH(vt0.lid));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)%(vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)%(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)%(vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)%(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)%(vt0.c1)) AS REAL));
SELECT COUNT(*) FROM vt0, t0 WHERE (json(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END));
SELECT SUM(count) FROM (SELECT ((json(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (json(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END));
SELECT SUM(count) FROM (SELECT ((json(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((0.4183112609036558 COLLATE BINARY) BETWEEN ((vt0.c1 IN ())) AND (vt0.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0.4183112609036558 COLLATE BINARY) BETWEEN ((vt0.c1 IN ())) AND (vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((0.4183112609036558 COLLATE BINARY) BETWEEN ((vt0.c1 IN ())) AND (vt0.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0.4183112609036558 COLLATE BINARY) BETWEEN ((vt0.c1 IN ())) AND (vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((0.4183112609036558 COLLATE BINARY) BETWEEN ((vt0.c1 IN ())) AND (vt0.lid COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((~ (t0.c68)) IN ())) ORDER BY ABS(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (t0.c68)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ABS(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((~ (t0.c68)) IN ())) ORDER BY ABS(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (t0.c68)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ABS(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((~ (t0.c68)) IN ())) ORDER BY ABS(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST((- (t0.c68)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c68)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((- (t0.c68)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c68)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((- (t0.c68)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS TRUE)) ORDER BY vt0.lid DESC, ((((x'17d9') NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0) AND (((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))) DESC  NULLS LAST, (((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)GLOB(vt0.c0)), vt0.c0, (vt0.c1 IN (vt0.c2)), vt0.c2 COLLATE RTRIM))==((CAST(vt0.c0 AS INTEGER), LIKE(vt0.c2, vt0.c1), x'', ((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'1604')), ((((((((((((x'')OR(vt0.c1)))OR(vt0.c0)))OR(0Xdeacae8)))OR('0.014162730859881512')))AND(vt0.c2)))AND(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid DESC, ((((x'17d9') NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0) AND (((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))) DESC  NULLS LAST, (((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)GLOB(vt0.c0)), vt0.c0, (vt0.c1 IN (vt0.c2)), vt0.c2 COLLATE RTRIM))=((CAST(vt0.c0 AS INTEGER), LIKE(vt0.c2, vt0.c1), x'', ((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'1604')), ((((((((((((x'')OR(vt0.c1)))OR(vt0.c0)))OR(0Xdeacae8)))OR('0.014162730859881512')))AND(vt0.c2)))AND(vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS TRUE)) ORDER BY vt0.lid DESC, ((((x'17d9') NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0) AND (((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))) DESC  NULLS LAST, (((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)GLOB(vt0.c0)), vt0.c0, (vt0.c1 IN (vt0.c2)), vt0.c2 COLLATE RTRIM))==((CAST(vt0.c0 AS INTEGER), LIKE(vt0.c2, vt0.c1), x'', ((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'1604')), ((((((((((((x'')OR(vt0.c1)))OR(vt0.c0)))OR(0Xdeacae8)))OR('0.014162730859881512')))AND(vt0.c2)))AND(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid DESC, ((((x'17d9') NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0) AND (((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))) DESC  NULLS LAST, (((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)GLOB(vt0.c0)), vt0.c0, (vt0.c1 IN (vt0.c2)), vt0.c2 COLLATE RTRIM))=((CAST(vt0.c0 AS INTEGER), LIKE(vt0.c2, vt0.c1), x'', ((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'1604')), ((((((((((((x'')OR(vt0.c1)))OR(vt0.c0)))OR(0Xdeacae8)))OR('0.014162730859881512')))AND(vt0.c2)))AND(vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS TRUE)) ORDER BY vt0.lid DESC, ((((x'17d9') NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0) AND (((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))) DESC  NULLS LAST, (((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)GLOB(vt0.c0)), vt0.c0, (vt0.c1 IN (vt0.c2)), vt0.c2 COLLATE RTRIM))==((CAST(vt0.c0 AS INTEGER), LIKE(vt0.c2, vt0.c1), x'', ((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'1604')), ((((((((((((x'')OR(vt0.c1)))OR(vt0.c0)))OR(0Xdeacae8)))OR('0.014162730859881512')))AND(vt0.c2)))AND(vt0.c1))))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (TRIM(DISTINCT vt0.lid)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) THEN x'bbcf' END ASC;
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(DISTINCT vt0.lid)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) THEN x'bbcf' END ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (TRIM(DISTINCT vt0.lid)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) THEN x'bbcf' END ASC;
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(DISTINCT vt0.lid)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) THEN x'bbcf' END ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (TRIM(DISTINCT vt0.lid)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) THEN x'bbcf' END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END) ORDER BY (((((((vt0.c2))<>((vt0.c2))))OR(((vt0.lid)OR(vt0.c1)))))AND(0Xfffffffff400c1f2)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c2))!=((vt0.c2))))OR(((vt0.lid)OR(vt0.c1)))))AND(0Xfffffffff400c1f2)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END) ORDER BY (((((((vt0.c2))<>((vt0.c2))))OR(((vt0.lid)OR(vt0.c1)))))AND(0Xfffffffff400c1f2)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c2))!=((vt0.c2))))OR(((vt0.lid)OR(vt0.c1)))))AND(0Xfffffffff400c1f2)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN vt0.c1 COLLATE BINARY END) ORDER BY (((((((vt0.c2))<>((vt0.c2))))OR(((vt0.lid)OR(vt0.c1)))))AND(0Xfffffffff400c1f2)) ASC;
SELECT ALL * FROM t0 WHERE (CASE '-2047542427'  WHEN CAST(t0.c68 AS REAL) THEN LIKELIHOOD(t0.c68, 0.7654719244496803) END) ORDER BY MIN(t0.c68 COLLATE RTRIM, (~ (t0.c68)))  NULLS LAST, UPPER(t0.c68) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '-2047542427'  WHEN CAST(t0.c68 AS REAL) THEN LIKELIHOOD(t0.c68, 0.7654719244496803) END) IS TRUE)  as count FROM t0 ORDER BY MIN(t0.c68 COLLATE RTRIM, (~ (t0.c68)))  NULLS LAST, UPPER(t0.c68) COLLATE NOCASE DESC);
SELECT ALL * FROM t0 WHERE (CASE '-2047542427'  WHEN CAST(t0.c68 AS REAL) THEN LIKELIHOOD(t0.c68, 0.7654719244496803) END) ORDER BY MIN(t0.c68 COLLATE RTRIM, (~ (t0.c68)))  NULLS LAST, UPPER(t0.c68) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '-2047542427'  WHEN CAST(t0.c68 AS REAL) THEN LIKELIHOOD(t0.c68, 0.7654719244496803) END) IS TRUE)  as count FROM t0 ORDER BY MIN(t0.c68 COLLATE RTRIM, (~ (t0.c68)))  NULLS LAST, UPPER(t0.c68) COLLATE NOCASE DESC);
SELECT ALL * FROM t0 WHERE (CASE '-2047542427'  WHEN CAST(t0.c68 AS REAL) THEN LIKELIHOOD(t0.c68, 0.7654719244496803) END) ORDER BY MIN(t0.c68 COLLATE RTRIM, (~ (t0.c68)))  NULLS LAST, UPPER(t0.c68) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))-(-2.044942203E9)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))-(-2.044942203E9))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))-(-2.044942203E9)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))-(-2.044942203E9))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))-(-2.044942203E9)));
SELECT ALL * FROM t0, vt0 WHERE ((- (HEX(vt0.c0)))) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (HEX(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((- (HEX(vt0.c0)))) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (HEX(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((- (HEX(vt0.c0)))) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((vt0.lid) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c1)IS(x''))) IS TRUE) ASC, ((((((((((((((vt0.c1) IS TRUE))AND(((vt0.c0)>>(vt0.lid)))))OR(((vt0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR('1969071038' COLLATE NOCASE)))AND(vt0.c1)))OR(CAST(vt0.c0 AS TEXT))))AND(((x'')=(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.lid) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1)IS(x''))) IS TRUE) ASC, ((((((((((((((vt0.c1) IS TRUE))AND(((vt0.c0)>>(vt0.lid)))))OR(((vt0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR('1969071038' COLLATE NOCASE)))AND(vt0.c1)))OR(CAST(vt0.c0 AS TEXT))))AND(((x'')==(vt0.c2)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((vt0.lid) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c1)IS(x''))) IS TRUE) ASC, ((((((((((((((vt0.c1) IS TRUE))AND(((vt0.c0)>>(vt0.lid)))))OR(((vt0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR('1969071038' COLLATE NOCASE)))AND(vt0.c1)))OR(CAST(vt0.c0 AS TEXT))))AND(((x'')=(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.lid) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1)IS(x''))) IS TRUE) ASC, ((((((((((((((vt0.c1) IS TRUE))AND(((vt0.c0)>>(vt0.lid)))))OR(((vt0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR('1969071038' COLLATE NOCASE)))AND(vt0.c1)))OR(CAST(vt0.c0 AS TEXT))))AND(((x'')==(vt0.c2)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((vt0.lid) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c1)IS(x''))) IS TRUE) ASC, ((((((((((((((vt0.c1) IS TRUE))AND(((vt0.c0)>>(vt0.lid)))))OR(((vt0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR('1969071038' COLLATE NOCASE)))AND(vt0.c1)))OR(CAST(vt0.c0 AS TEXT))))AND(((x'')=(vt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c68 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c68 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE NOCASE AS TEXT));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((+ (((vt0.c0)-(vt0.lid)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)-(vt0.lid))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((+ (((vt0.c0)-(vt0.lid)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)-(vt0.lid))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((+ (((vt0.c0)-(vt0.lid)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c68)OR(t0.c68)))AND(0.6661563384490011)))OR(0x2d25304d)))OR(t0.c68)) COLLATE RTRIM) ORDER BY ((t0.c68 COLLATE RTRIM)%(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c68)OR(t0.c68)))AND(0.6661563384490011)))OR(0x2d25304d)))OR(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE RTRIM)%(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c68)OR(t0.c68)))AND(0.6661563384490011)))OR(0x2d25304d)))OR(t0.c68)) COLLATE RTRIM) ORDER BY ((t0.c68 COLLATE RTRIM)%(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c68)OR(t0.c68)))AND(0.6661563384490011)))OR(0x2d25304d)))OR(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE RTRIM)%(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c68)OR(t0.c68)))AND(0.6661563384490011)))OR(0x2d25304d)))OR(t0.c68)) COLLATE RTRIM) ORDER BY ((t0.c68 COLLATE RTRIM)%(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))));
SELECT * FROM t0, vt0 INDEXED BY i29 WHERE (((vt0.c2 COLLATE NOCASE) IS TRUE)) ORDER BY (((t0.c68)OR(vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t0, vt0 INDEXED BY i29 ORDER BY (((t0.c68)OR(vt0.c2)) IN ()));
SELECT * FROM t0, vt0 INDEXED BY i29 WHERE (((vt0.c2 COLLATE NOCASE) IS TRUE)) ORDER BY (((t0.c68)OR(vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t0, vt0 INDEXED BY i29 ORDER BY (((t0.c68)OR(vt0.c2)) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((+ (t0.c68))) BETWEEN (vt0.c2 COLLATE RTRIM) AND ((((t0.c68, vt0.lid, t0.c68))=((vt0.lid, vt0.c2, vt0.lid))))) WHERE (CAST((((-401525864))>=((vt0.lid))) AS TEXT)) ORDER BY ((((vt0.c0)LIKE('*jG꠽')))-((t0.c68 IN (vt0.c0)))) ASC, (- (((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-401525864))>=((vt0.lid))) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((+ (t0.c68))) BETWEEN (vt0.c2 COLLATE RTRIM) AND ((((t0.c68, vt0.lid, t0.c68))==((vt0.lid, vt0.c2, vt0.lid))))) ORDER BY ((((vt0.c0)LIKE('*jG꠽')))-((t0.c68 IN (vt0.c0)))) ASC, (- (((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((+ (t0.c68))) BETWEEN (vt0.c2 COLLATE RTRIM) AND ((((t0.c68, vt0.lid, t0.c68))=((vt0.lid, vt0.c2, vt0.lid))))) WHERE (CAST((((-401525864))>=((vt0.lid))) AS TEXT)) ORDER BY ((((vt0.c0)LIKE('*jG꠽')))-((t0.c68 IN (vt0.c0)))) ASC, (- (((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-401525864))>=((vt0.lid))) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((+ (t0.c68))) BETWEEN (vt0.c2 COLLATE RTRIM) AND ((((t0.c68, vt0.lid, t0.c68))==((vt0.lid, vt0.c2, vt0.lid))))) ORDER BY ((((vt0.c0)LIKE('*jG꠽')))-((t0.c68 IN (vt0.c0)))) ASC, (- (((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((+ (t0.c68))) BETWEEN (vt0.c2 COLLATE RTRIM) AND ((((t0.c68, vt0.lid, t0.c68))=((vt0.lid, vt0.c2, vt0.lid))))) WHERE (CAST((((-401525864))>=((vt0.lid))) AS TEXT)) ORDER BY ((((vt0.c0)LIKE('*jG꠽')))-((t0.c68 IN (vt0.c0)))) ASC, (- (((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2)OR(vt0.c1)))AND(vt0.lid)) IN ())) ORDER BY ((ABS(vt0.c1))%((t0.c68 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)OR(vt0.c1)))AND(vt0.lid)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((ABS(vt0.c1))%((t0.c68 IN (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2)OR(vt0.c1)))AND(vt0.lid)) IN ())) ORDER BY ((ABS(vt0.c1))%((t0.c68 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)OR(vt0.c1)))AND(vt0.lid)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((ABS(vt0.c1))%((t0.c68 IN (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2)OR(vt0.c1)))AND(vt0.lid)) IN ())) ORDER BY ((ABS(vt0.c1))%((t0.c68 IN (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.lid) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.lid) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.lid) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.lid) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.lid) NOTNULL) END);
SELECT ALL * FROM t0, vt0 WHERE (((((((((LIKELIHOOD(DISTINCT x'', 0.4863698186676271))OR((((vt0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c1))))))OR((((vt0.c1, vt0.c1, vt0.c2))>=((vt0.c2, vt0.c1, vt0.lid))))))AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c68)))))AND(LIKELIHOOD(DISTINCT x'', 0.9435629999171619)))) ORDER BY (((vt0.c0 IN ()))/(vt0.c1 COLLATE BINARY)), (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((((vt0.c1)==(0.7128890461618772)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELIHOOD(DISTINCT x'', 0.4863698186676271))OR((((vt0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c1))))))OR((((vt0.c1, vt0.c1, vt0.c2))>=((vt0.c2, vt0.c1, vt0.lid))))))AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c68)))))AND(LIKELIHOOD(DISTINCT x'', 0.9435629999171619)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN ()))/(vt0.c1 COLLATE BINARY)), (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((((vt0.c1)=(0.7128890461618772)))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((((((LIKELIHOOD(DISTINCT x'', 0.4863698186676271))OR((((vt0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c1))))))OR((((vt0.c1, vt0.c1, vt0.c2))>=((vt0.c2, vt0.c1, vt0.lid))))))AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c68)))))AND(LIKELIHOOD(DISTINCT x'', 0.9435629999171619)))) ORDER BY (((vt0.c0 IN ()))/(vt0.c1 COLLATE BINARY)), (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((((vt0.c1)==(0.7128890461618772)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELIHOOD(DISTINCT x'', 0.4863698186676271))OR((((vt0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c1))))))OR((((vt0.c1, vt0.c1, vt0.c2))>=((vt0.c2, vt0.c1, vt0.lid))))))AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c68)))))AND(LIKELIHOOD(DISTINCT x'', 0.9435629999171619)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN ()))/(vt0.c1 COLLATE BINARY)), (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((((vt0.c1)=(0.7128890461618772)))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((((((LIKELIHOOD(DISTINCT x'', 0.4863698186676271))OR((((vt0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c1))))))OR((((vt0.c1, vt0.c1, vt0.c2))>=((vt0.c2, vt0.c1, vt0.lid))))))AND(((((vt0.c0)OR(vt0.c0)))OR(t0.c68)))))AND(LIKELIHOOD(DISTINCT x'', 0.9435629999171619)))) ORDER BY (((vt0.c0 IN ()))/(vt0.c1 COLLATE BINARY)), (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((((vt0.c1)==(0.7128890461618772)))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((((((((((t0.c68)OR(t0.c68)))AND(x'')))OR(t0.c68)))OR(x'')))OR((- (t0.c68)))))OR(CAST('u' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c68)OR(t0.c68)))AND(x'')))OR(t0.c68)))OR(x'')))OR((- (t0.c68)))))OR(CAST('u' AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((((t0.c68)OR(t0.c68)))AND(x'')))OR(t0.c68)))OR(x'')))OR((- (t0.c68)))))OR(CAST('u' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c68)OR(t0.c68)))AND(x'')))OR(t0.c68)))OR(x'')))OR((- (t0.c68)))))OR(CAST('u' AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((((t0.c68)OR(t0.c68)))AND(x'')))OR(t0.c68)))OR(x'')))OR((- (t0.c68)))))OR(CAST('u' AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))<=((((vt0.c0) ISNULL))))) ORDER BY ((((QUOTE(vt0.lid))AND(((vt0.c1) IS FALSE))))OR(((vt0.lid)<=(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0))))<=((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((QUOTE(vt0.lid))AND(((vt0.c1) IS FALSE))))OR(((vt0.lid)<=(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))<=((((vt0.c0) ISNULL))))) ORDER BY ((((QUOTE(vt0.lid))AND(((vt0.c1) IS FALSE))))OR(((vt0.lid)<=(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0))))<=((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((QUOTE(vt0.lid))AND(((vt0.c1) IS FALSE))))OR(((vt0.lid)<=(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))<=((((vt0.c0) ISNULL))))) ORDER BY ((((QUOTE(vt0.lid))AND(((vt0.c1) IS FALSE))))OR(((vt0.lid)<=(vt0.c1))))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((vt0.c2)<<(t0.c68))) BETWEEN (((NULL)IS(NULL))) AND ((~ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<<(t0.c68))) BETWEEN (((NULL)IS(NULL))) AND ((~ (t0.c68))))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT * FROM vt0, t0 WHERE (((((vt0.c2)<<(t0.c68))) BETWEEN (((NULL)IS(NULL))) AND ((~ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<<(t0.c68))) BETWEEN (((NULL)IS(NULL))) AND ((~ (t0.c68))))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT * FROM vt0, t0 WHERE (((((vt0.c2)<<(t0.c68))) BETWEEN (((NULL)IS(NULL))) AND ((~ (t0.c68)))));
SELECT ALL * FROM t0, vt0 WHERE (((NULL) BETWEEN (((vt0.lid) IS TRUE)) AND ((~ (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((vt0.lid) IS TRUE)) AND ((~ (vt0.lid))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((NULL) BETWEEN (((vt0.lid) IS TRUE)) AND ((~ (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((vt0.lid) IS TRUE)) AND ((~ (vt0.lid))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((NULL) BETWEEN (((vt0.lid) IS TRUE)) AND ((~ (vt0.lid)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((0.10340635897462436, t0.c68, -1154297339))<=((vt0.c2, vt0.c1, vt0.lid)))) NOT BETWEEN ((('>*I(N)')<<(vt0.lid))) AND (((((((((NULL)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2))))) ORDER BY t0.c68  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))))<<((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0.10340635897462436, t0.c68, -1154297339))<=((vt0.c2, vt0.c1, vt0.lid)))) NOT BETWEEN ((('>*I(N)')<<(vt0.lid))) AND (((((((((NULL)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c68  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))))<<((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((0.10340635897462436, t0.c68, -1154297339))<=((vt0.c2, vt0.c1, vt0.lid)))) NOT BETWEEN ((('>*I(N)')<<(vt0.lid))) AND (((((((((NULL)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2))))) ORDER BY t0.c68  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))))<<((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0.10340635897462436, t0.c68, -1154297339))<=((vt0.c2, vt0.c1, vt0.lid)))) NOT BETWEEN ((('>*I(N)')<<(vt0.lid))) AND (((((((((NULL)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c68  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))))<<((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((0.10340635897462436, t0.c68, -1154297339))<=((vt0.c2, vt0.c1, vt0.lid)))) NOT BETWEEN ((('>*I(N)')<<(vt0.lid))) AND (((((((((NULL)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2))))) ORDER BY t0.c68  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))))<<((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((('-1398255796'))<>((vt0.lid COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1398255796'))!=((vt0.lid COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('-1398255796'))<>((vt0.lid COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1398255796'))!=((vt0.lid COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('-1398255796'))<>((vt0.lid COLLATE NOCASE))));
SELECT * FROM t0, vt0 WHERE ('L7qu*2[,K' COLLATE NOCASE) ORDER BY vt0.c1 DESC  NULLS FIRST, (((- (-1.642370515E9)))<>(IFNULL(vt0.c0, vt0.lid)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('L7qu*2[,K' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1 DESC  NULLS FIRST, (((- (-1.642370515E9)))!=(IFNULL(vt0.c0, vt0.lid)))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ('L7qu*2[,K' COLLATE NOCASE) ORDER BY vt0.c1 DESC  NULLS FIRST, (((- (-1.642370515E9)))<>(IFNULL(vt0.c0, vt0.lid)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('L7qu*2[,K' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1 DESC  NULLS FIRST, (((- (-1.642370515E9)))!=(IFNULL(vt0.c0, vt0.lid)))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ('L7qu*2[,K' COLLATE NOCASE) ORDER BY vt0.c1 DESC  NULLS FIRST, (((- (-1.642370515E9)))<>(IFNULL(vt0.c0, vt0.lid)))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (json_type(CAST(vt0.lid AS TEXT)));
SELECT SUM(count) FROM (SELECT ((json_type(CAST(vt0.lid AS TEXT))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (json_type(CAST(vt0.lid AS TEXT)));
SELECT SUM(count) FROM (SELECT ((json_type(CAST(vt0.lid AS TEXT))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (json_type(CAST(vt0.lid AS TEXT)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER(CAST(NULL AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(NULL AS INTEGER))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER(CAST(NULL AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(NULL AS INTEGER))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER(CAST(NULL AS INTEGER)));
SELECT ALL COUNT(*) FROM t0 WHERE ('0.0031473289753760625') ORDER BY ((CASE t0.c68  WHEN -1324127365 THEN t0.c68 ELSE t0.c68 END) ISNULL);
SELECT SUM(count) FROM (SELECT (('0.0031473289753760625') IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c68  WHEN -1324127365 THEN t0.c68 ELSE t0.c68 END) ISNULL));
SELECT ALL COUNT(*) FROM t0 WHERE ('0.0031473289753760625') ORDER BY ((CASE t0.c68  WHEN -1324127365 THEN t0.c68 ELSE t0.c68 END) ISNULL);
SELECT SUM(count) FROM (SELECT (('0.0031473289753760625') IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c68  WHEN -1324127365 THEN t0.c68 ELSE t0.c68 END) ISNULL));
SELECT ALL COUNT(*) FROM t0 WHERE ('0.0031473289753760625') ORDER BY ((CASE t0.c68  WHEN -1324127365 THEN t0.c68 ELSE t0.c68 END) ISNULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.lid)AND(vt0.c2)) AS TEXT)) ORDER BY CAST((vt0.c2 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.lid)AND(vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c2 IN ()) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.lid)AND(vt0.c2)) AS TEXT)) ORDER BY CAST((vt0.c2 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.lid)AND(vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c2 IN ()) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.lid)AND(vt0.c2)) AS TEXT)) ORDER BY CAST((vt0.c2 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c2)) NOT BETWEEN (vt0.c0) AND (vt0.lid COLLATE NOCASE))) ORDER BY LIKE(CAST('	u' AS INTEGER), ((vt0.lid) IS FALSE), '2') ASC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c2)) NOT BETWEEN (vt0.c0) AND (vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY LIKE(CAST('	u' AS INTEGER), ((vt0.lid) IS FALSE), '2') ASC);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c2)) NOT BETWEEN (vt0.c0) AND (vt0.lid COLLATE NOCASE))) ORDER BY LIKE(CAST('	u' AS INTEGER), ((vt0.lid) IS FALSE), '2') ASC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c2)) NOT BETWEEN (vt0.c0) AND (vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY LIKE(CAST('	u' AS INTEGER), ((vt0.lid) IS FALSE), '2') ASC);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c2)) NOT BETWEEN (vt0.c0) AND (vt0.lid COLLATE NOCASE))) ORDER BY LIKE(CAST('	u' AS INTEGER), ((vt0.lid) IS FALSE), '2') ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY (STRFTIME(vt0.c0, vt0.c2, vt0.lid, vt0.lid, vt0.lid) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY (STRFTIME(vt0.c0, vt0.c2, vt0.lid, vt0.lid, vt0.lid) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY (STRFTIME(vt0.c0, vt0.c2, vt0.lid, vt0.lid, vt0.lid) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY (STRFTIME(vt0.c0, vt0.c2, vt0.lid, vt0.lid, vt0.lid) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY (STRFTIME(vt0.c0, vt0.c2, vt0.lid, vt0.lid, vt0.lid) IN ())  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL * FROM t0 WHERE ((t0.c68 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c68 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c68 COLLATE NOCASE IN ()));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.lid THEN 'W沾^rr' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.lid THEN 'W沾^rr' END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.lid THEN 'W沾^rr' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.lid THEN 'W沾^rr' END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.lid THEN 'W沾^rr' END COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c68)|(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68)|(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c68)|(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68)|(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c68)|(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c68 COLLATE NOCASE)||(IFNULL('1680339485', vt0.c0))) WHERE (TYPEOF(DISTINCT (vt0.c2 IN ()))) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY ASC  NULLS LAST, 0.6210292446540696 ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (vt0.c2 IN ()))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c68 COLLATE NOCASE)||(IFNULL('1680339485', vt0.c0))) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY ASC  NULLS LAST, 0.6210292446540696 ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c68 COLLATE NOCASE)||(IFNULL('1680339485', vt0.c0))) WHERE (TYPEOF(DISTINCT (vt0.c2 IN ()))) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY ASC  NULLS LAST, 0.6210292446540696 ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (vt0.c2 IN ()))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c68 COLLATE NOCASE)||(IFNULL('1680339485', vt0.c0))) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY ASC  NULLS LAST, 0.6210292446540696 ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c68 COLLATE NOCASE)||(IFNULL('1680339485', vt0.c0))) WHERE (TYPEOF(DISTINCT (vt0.c2 IN ()))) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY ASC  NULLS LAST, 0.6210292446540696 ASC;
SELECT ALL * FROM t0 WHERE (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68 COLLATE RTRIM)))AND(SUBSTR(t0.c68, t0.c68))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68 COLLATE RTRIM)))AND(SUBSTR(t0.c68, t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68 COLLATE RTRIM)))AND(SUBSTR(t0.c68, t0.c68))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68 COLLATE RTRIM)))AND(SUBSTR(t0.c68, t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68 COLLATE RTRIM)))AND(SUBSTR(t0.c68, t0.c68))));
SELECT * FROM vt0, t0 WHERE (CAST(((((vt0.c2)AND(vt0.lid)))OR(vt0.lid)) AS REAL)) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c2 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c2)AND(vt0.lid)))OR(vt0.lid)) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c2 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT * FROM vt0, t0 WHERE (CAST(((((vt0.c2)AND(vt0.lid)))OR(vt0.lid)) AS REAL)) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c2 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c2)AND(vt0.lid)))OR(vt0.lid)) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c2 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT * FROM vt0, t0 WHERE (CAST(((((vt0.c2)AND(vt0.lid)))OR(vt0.lid)) AS REAL)) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c2 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68)>(vt0.c1)))/(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY '', vt0.c0 ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)>(vt0.c1)))/(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '', vt0.c0 ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68)>(vt0.c1)))/(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY '', vt0.c0 ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)>(vt0.c1)))/(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '', vt0.c0 ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68)>(vt0.c1)))/(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY '', vt0.c0 ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((vt0.lid IN (vt0.c2, vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.lid IN (vt0.c2, vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((vt0.lid IN (vt0.c2, vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.lid IN (vt0.c2, vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((vt0.lid IN (vt0.c2, vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((0.533282921143248) NOT BETWEEN (0.7999357752893279) AND (LTRIM(vt0.lid))) WHERE (vt0.c0) ORDER BY (~ (load_extension(vt0.c0, vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((0.533282921143248) NOT BETWEEN (0.7999357752893279) AND (LTRIM(vt0.lid))) ORDER BY (~ (load_extension(vt0.c0, vt0.c1)))  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((0.533282921143248) NOT BETWEEN (0.7999357752893279) AND (LTRIM(vt0.lid))) WHERE (vt0.c0) ORDER BY (~ (load_extension(vt0.c0, vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((0.533282921143248) NOT BETWEEN (0.7999357752893279) AND (LTRIM(vt0.lid))) ORDER BY (~ (load_extension(vt0.c0, vt0.c1)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE UNICODE(t0.c68)  WHEN COALESCE(DISTINCT 0.9579191725472721, t0.c68) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN ((-1.315813427E9) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((x'')>>(t0.c68)) WHEN (((t0.c68, NULL, NULL, t0.c68, t0.c68))>((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))) THEN json_array(t0.c68, t0.c68) WHEN (t0.c68 IN (t0.c68)) THEN ((t0.c68)OR(t0.c68)) WHEN (+ (t0.c68)) THEN ((t0.c68) IS FALSE) ELSE -2021962102 END) ORDER BY CAST(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE UNICODE(t0.c68)  WHEN COALESCE(DISTINCT 0.9579191725472721, t0.c68) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN ((-1.315813427E9) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((x'')>>(t0.c68)) WHEN (((t0.c68, NULL, NULL, t0.c68, t0.c68))>((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))) THEN json_array(t0.c68, t0.c68) WHEN (t0.c68 IN (t0.c68)) THEN ((t0.c68)OR(t0.c68)) WHEN (+ (t0.c68)) THEN ((t0.c68) IS FALSE) ELSE -2021962102 END) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE UNICODE(t0.c68)  WHEN COALESCE(DISTINCT 0.9579191725472721, t0.c68) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN ((-1.315813427E9) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((x'')>>(t0.c68)) WHEN (((t0.c68, NULL, NULL, t0.c68, t0.c68))>((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))) THEN json_array(t0.c68, t0.c68) WHEN (t0.c68 IN (t0.c68)) THEN ((t0.c68)OR(t0.c68)) WHEN (+ (t0.c68)) THEN ((t0.c68) IS FALSE) ELSE -2021962102 END) ORDER BY CAST(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE UNICODE(t0.c68)  WHEN COALESCE(DISTINCT 0.9579191725472721, t0.c68) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN ((-1.315813427E9) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((x'')>>(t0.c68)) WHEN (((t0.c68, NULL, NULL, t0.c68, t0.c68))>((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))) THEN json_array(t0.c68, t0.c68) WHEN (t0.c68 IN (t0.c68)) THEN ((t0.c68)OR(t0.c68)) WHEN (+ (t0.c68)) THEN ((t0.c68) IS FALSE) ELSE -2021962102 END) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE UNICODE(t0.c68)  WHEN COALESCE(DISTINCT 0.9579191725472721, t0.c68) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN ((-1.315813427E9) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((x'')>>(t0.c68)) WHEN (((t0.c68, NULL, NULL, t0.c68, t0.c68))>((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))) THEN json_array(t0.c68, t0.c68) WHEN (t0.c68 IN (t0.c68)) THEN ((t0.c68)OR(t0.c68)) WHEN (+ (t0.c68)) THEN ((t0.c68) IS FALSE) ELSE -2021962102 END) ORDER BY CAST(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c2) IS FALSE))OR((+ (vt0.c1)))))AND(json_patch(vt0.c0, vt0.c2))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.lid AS BLOB)))) ORDER BY (((vt0.c0)) BETWEEN (((vt0.lid IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.lid THEN vt0.c0 WHEN x'' THEN vt0.c2 ELSE vt0.c2 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c2) IS FALSE))OR((+ (vt0.c1)))))AND(json_patch(vt0.c0, vt0.c2))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.lid AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.lid IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.lid THEN vt0.c0 WHEN x'' THEN vt0.c2 ELSE vt0.c2 END)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c2) IS FALSE))OR((+ (vt0.c1)))))AND(json_patch(vt0.c0, vt0.c2))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.lid AS BLOB)))) ORDER BY (((vt0.c0)) BETWEEN (((vt0.lid IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.lid THEN vt0.c0 WHEN x'' THEN vt0.c2 ELSE vt0.c2 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c2) IS FALSE))OR((+ (vt0.c1)))))AND(json_patch(vt0.c0, vt0.c2))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.lid AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.lid IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.lid THEN vt0.c0 WHEN x'' THEN vt0.c2 ELSE vt0.c2 END)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)<=(t0.c68)))+('c7' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)<=(t0.c68)))+('c7' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)<=(t0.c68)))+('c7' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)<=(t0.c68)))+('c7' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)<=(t0.c68)))+('c7' COLLATE NOCASE)));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND ('-1159240912'))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND ('-1159240912')))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND ('-1159240912'))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND ('-1159240912')))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND ('-1159240912'))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (json_insert(TRIM(DISTINCT 1567113430), CASE t0.c68  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, (('-1660958822') IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_insert(TRIM(DISTINCT 1567113430), CASE t0.c68  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, (('-1660958822') IS TRUE))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (json_insert(TRIM(DISTINCT 1567113430), CASE t0.c68  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, (('-1660958822') IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_insert(TRIM(DISTINCT 1567113430), CASE t0.c68  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, (('-1660958822') IS TRUE))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.lid) ORDER BY (((vt0.lid, vt0.c2, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 ELSE vt0.lid END, (- (vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (915359906)))) AND ((((vt0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), CASE vt0.lid  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END, ''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.lid, vt0.c2, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 ELSE vt0.lid END, (- (vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (915359906)))) AND ((((vt0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), CASE vt0.lid  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END, ''))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.lid) ORDER BY (((vt0.lid, vt0.c2, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 ELSE vt0.lid END, (- (vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (915359906)))) AND ((((vt0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), CASE vt0.lid  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END, ''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.lid, vt0.c2, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 ELSE vt0.lid END, (- (vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (915359906)))) AND ((((vt0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), CASE vt0.lid  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END, ''))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.lid) ORDER BY (((vt0.lid, vt0.c2, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN t0.c68 THEN vt0.c2 ELSE vt0.lid END, (- (vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (915359906)))) AND ((((vt0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), CASE vt0.lid  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN t0.c68 THEN vt0.lid ELSE vt0.c1 END, ''))) DESC;
SELECT ALL * FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY (((vt0.lid, vt0.lid, x'f075'))!=((0.21459686227381025, vt0.c1, vt0.lid))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.lid, vt0.lid, x'f075'))!=((0.21459686227381025, vt0.c1, vt0.lid))) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY (((vt0.lid, vt0.lid, x'f075'))!=((0.21459686227381025, vt0.c1, vt0.lid))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.lid, vt0.lid, x'f075'))!=((0.21459686227381025, vt0.c1, vt0.lid))) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY (((vt0.lid, vt0.lid, x'f075'))!=((0.21459686227381025, vt0.c1, vt0.lid))) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((0.5975122955197569, t0.c68, t0.c68)) NOT BETWEEN ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)), (((NULL, x'825e', t0.c68, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))), ((t0.c68) IS TRUE))) AND ((TRIM(t0.c68), rtreenode(t0.c68, t0.c68), ((t0.c68) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.5975122955197569, t0.c68, t0.c68)) NOT BETWEEN ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)), (((NULL, x'825e', t0.c68, t0.c68, t0.c68))==((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))), ((t0.c68) IS TRUE))) AND ((TRIM(t0.c68), rtreenode(t0.c68, t0.c68), ((t0.c68) NOT NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((0.5975122955197569, t0.c68, t0.c68)) NOT BETWEEN ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)), (((NULL, x'825e', t0.c68, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))), ((t0.c68) IS TRUE))) AND ((TRIM(t0.c68), rtreenode(t0.c68, t0.c68), ((t0.c68) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.5975122955197569, t0.c68, t0.c68)) NOT BETWEEN ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)), (((NULL, x'825e', t0.c68, t0.c68, t0.c68))==((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))), ((t0.c68) IS TRUE))) AND ((TRIM(t0.c68), rtreenode(t0.c68, t0.c68), ((t0.c68) NOT NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((0.5975122955197569, t0.c68, t0.c68)) NOT BETWEEN ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)), (((NULL, x'825e', t0.c68, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68))), ((t0.c68) IS TRUE))) AND ((TRIM(t0.c68), rtreenode(t0.c68, t0.c68), ((t0.c68) NOT NULL)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, vt0.c2, t0.c68)) BETWEEN (((((t0.c68)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c2))), t0.c68, CAST(vt0.lid AS INTEGER))) AND ((((vt0.c2)IS NOT(t0.c68)), vt0.c0, UPPER(DISTINCT vt0.c1))))) ORDER BY (((vt0.c0 IN (vt0.c2))) BETWEEN (0.17079002248817488) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c2, t0.c68)) BETWEEN (((((t0.c68)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c2))), t0.c68, CAST(vt0.lid AS INTEGER))) AND ((((vt0.c2)IS NOT(t0.c68)), vt0.c0, UPPER(DISTINCT vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN (vt0.c2))) BETWEEN (0.17079002248817488) AND (vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, vt0.c2, t0.c68)) BETWEEN (((((t0.c68)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c2))), t0.c68, CAST(vt0.lid AS INTEGER))) AND ((((vt0.c2)IS NOT(t0.c68)), vt0.c0, UPPER(DISTINCT vt0.c1))))) ORDER BY (((vt0.c0 IN (vt0.c2))) BETWEEN (0.17079002248817488) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c2, t0.c68)) BETWEEN (((((t0.c68)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c2))), t0.c68, CAST(vt0.lid AS INTEGER))) AND ((((vt0.c2)IS NOT(t0.c68)), vt0.c0, UPPER(DISTINCT vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN (vt0.c2))) BETWEEN (0.17079002248817488) AND (vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, vt0.c2, t0.c68)) BETWEEN (((((t0.c68)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c2))), t0.c68, CAST(vt0.lid AS INTEGER))) AND ((((vt0.c2)IS NOT(t0.c68)), vt0.c0, UPPER(DISTINCT vt0.c1))))) ORDER BY (((vt0.c0 IN (vt0.c2))) BETWEEN (0.17079002248817488) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((+ ((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ ((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ ((- (t0.c68)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68 COLLATE RTRIM)*(((vt0.lid)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE RTRIM)*(((vt0.lid)/(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68 COLLATE RTRIM)*(((vt0.lid)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE RTRIM)*(((vt0.lid)/(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68 COLLATE RTRIM)*(((vt0.lid)/(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c2 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (x'd022'))))) ORDER BY (+ ('-258682706')) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (x'd022'))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ('-258682706')) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c2 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (x'd022'))))) ORDER BY (+ ('-258682706')) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (x'd022'))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ('-258682706')) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c2 IN ()))/(((vt0.c0) BETWEEN (vt0.c0) AND (x'd022'))))) ORDER BY (+ ('-258682706')) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT * FROM vt0 WHERE (0xffffffffe14619cb);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe14619cb) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0xffffffffe14619cb);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe14619cb) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0xffffffffe14619cb);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1)<(vt0.c0))))<=((((vt0.lid)GLOB(vt0.c1))))) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1)<(vt0.c0))))<=((((vt0.lid)GLOB(vt0.c1))))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1)<(vt0.c0))))<=((((vt0.lid)GLOB(vt0.c1))))) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1)<(vt0.c0))))<=((((vt0.lid)GLOB(vt0.c1))))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1)<(vt0.c0))))<=((((vt0.lid)GLOB(vt0.c1))))) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1)>('D')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>('D'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1)>('D')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>('D'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1)>('D')));
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (((vt0.c2))>=((vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((vt0.c2))>=((vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (((vt0.c2))>=((vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((vt0.c2))>=((vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (((vt0.c2))>=((vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.lid)=(t0.c68)) THEN ((vt0.lid)OR(vt0.lid)) END) ORDER BY (NOT (vt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.lid)==(t0.c68)) THEN ((vt0.lid)OR(vt0.lid)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.lid)=(t0.c68)) THEN ((vt0.lid)OR(vt0.lid)) END) ORDER BY (NOT (vt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.lid)==(t0.c68)) THEN ((vt0.lid)OR(vt0.lid)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.lid)=(t0.c68)) THEN ((vt0.lid)OR(vt0.lid)) END) ORDER BY (NOT (vt0.c2 COLLATE BINARY));
SELECT * FROM vt0, t0 WHERE ((NOT (vt0.lid COLLATE NOCASE))) ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM vt0, t0 WHERE ((NOT (vt0.lid COLLATE NOCASE))) ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM vt0, t0 WHERE ((NOT (vt0.lid COLLATE NOCASE))) ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((json_object(vt0.lid, vt0.c2))OR(((t0.c68)AND(vt0.lid)))))AND((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR('1066968399')))OR(((vt0.lid) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_object(vt0.lid, vt0.c2))OR(((t0.c68)AND(vt0.lid)))))AND((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR('1066968399')))OR(((vt0.lid) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((json_object(vt0.lid, vt0.c2))OR(((t0.c68)AND(vt0.lid)))))AND((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR('1066968399')))OR(((vt0.lid) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_object(vt0.lid, vt0.c2))OR(((t0.c68)AND(vt0.lid)))))AND((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR('1066968399')))OR(((vt0.lid) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c68 AS BLOB) IN ())) ORDER BY ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)*(t0.c68 COLLATE BINARY)) ASC, ((((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))<>(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c68 AS BLOB) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)*(t0.c68 COLLATE BINARY)) ASC, ((((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))!=(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c68 AS BLOB) IN ())) ORDER BY ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)*(t0.c68 COLLATE BINARY)) ASC, ((((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))<>(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c68 AS BLOB) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)*(t0.c68 COLLATE BINARY)) ASC, ((((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))!=(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c68 AS BLOB) IN ())) ORDER BY ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)*(t0.c68 COLLATE BINARY)) ASC, ((((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))<>(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68 COLLATE RTRIM)) AND (('킮' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((t0.c68 COLLATE RTRIM)) AND (('킮' COLLATE NOCASE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68 COLLATE RTRIM)) AND (('킮' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((t0.c68 COLLATE RTRIM)) AND (('킮' COLLATE NOCASE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68 COLLATE RTRIM)) AND (('킮' COLLATE NOCASE))));
SELECT * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c68);
SELECT * FROM vt0, t0 WHERE (((+ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((+ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((+ (vt0.c1)) IN ()));
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((((vt0.c1))<=((vt0.c2)))) AND (CASE WHEN 402371960 THEN vt0.lid ELSE vt0.c2 END))  NULLS LAST, vt0.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((((vt0.c1))<=((vt0.c2)))) AND (CASE WHEN 402371960 THEN vt0.lid ELSE vt0.c2 END))  NULLS LAST, vt0.lid  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((((vt0.c1))<=((vt0.c2)))) AND (CASE WHEN 402371960 THEN vt0.lid ELSE vt0.c2 END))  NULLS LAST, vt0.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((((vt0.c1))<=((vt0.c2)))) AND (CASE WHEN 402371960 THEN vt0.lid ELSE vt0.c2 END))  NULLS LAST, vt0.lid  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((((vt0.c1))<=((vt0.c2)))) AND (CASE WHEN 402371960 THEN vt0.lid ELSE vt0.c2 END))  NULLS LAST, vt0.lid  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c2))>((vt0.c0, vt0.c0, vt0.c0))))/(vt0.c0))) ORDER BY (('-1064935558')&((~ (vt0.lid)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c2))>((vt0.c0, vt0.c0, vt0.c0))))/(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (('-1064935558')&((~ (vt0.lid)))) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c2))>((vt0.c0, vt0.c0, vt0.c0))))/(vt0.c0))) ORDER BY (('-1064935558')&((~ (vt0.lid)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c2))>((vt0.c0, vt0.c0, vt0.c0))))/(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (('-1064935558')&((~ (vt0.lid)))) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c2))>((vt0.c0, vt0.c0, vt0.c0))))/(vt0.c0))) ORDER BY (('-1064935558')&((~ (vt0.lid)))) ASC;
SELECT ALL * FROM t0, vt0 WHERE (TRIM(DISTINCT (vt0.lid IN ()), CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN NULL THEN 'ፊR' END)) ORDER BY ((((((((((((t0.c68)OR(vt0.lid)))OR(t0.c68)))AND((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.lid, vt0.c1)) AND ((vt0.c1, t0.c68, '-58380888'))))))AND(((t0.c68) NOT NULL))))AND(((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)))))OR(((vt0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt0.lid IN ()), CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN NULL THEN 'ፊR' END)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((((t0.c68)OR(vt0.lid)))OR(t0.c68)))AND((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.lid, vt0.c1)) AND ((vt0.c1, t0.c68, '-58380888'))))))AND(((t0.c68) NOT NULL))))AND(((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)))))OR(((vt0.c2) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (TRIM(DISTINCT (vt0.lid IN ()), CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN NULL THEN 'ፊR' END)) ORDER BY ((((((((((((t0.c68)OR(vt0.lid)))OR(t0.c68)))AND((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.lid, vt0.c1)) AND ((vt0.c1, t0.c68, '-58380888'))))))AND(((t0.c68) NOT NULL))))AND(((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)))))OR(((vt0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt0.lid IN ()), CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN NULL THEN 'ፊR' END)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((((t0.c68)OR(vt0.lid)))OR(t0.c68)))AND((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.lid, vt0.c1)) AND ((vt0.c1, t0.c68, '-58380888'))))))AND(((t0.c68) NOT NULL))))AND(((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)))))OR(((vt0.c2) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (TRIM(DISTINCT (vt0.lid IN ()), CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN NULL THEN 'ፊR' END)) ORDER BY ((((((((((((t0.c68)OR(vt0.lid)))OR(t0.c68)))AND((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.lid, vt0.c1)) AND ((vt0.c1, t0.c68, '-58380888'))))))AND(((t0.c68) NOT NULL))))AND(((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)))))OR(((vt0.c2) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c68);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c2);
SELECT ALL * FROM t0, vt0 WHERE (((((-144281838)AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((-144281838)AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((-144281838)AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((-144281838)AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((-144281838)AND(vt0.c0))) IS FALSE));
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0 IN (vt0.lid)))OR(((vt0.lid)&(vt0.c1)))))AND(DATETIME(vt0.c2, t0.c68, vt0.c0)))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC, ((((vt0.lid) IS FALSE))-('-1113981309')) DESC, CAST(CAST(vt0.lid AS BLOB) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (vt0.lid)))OR(((vt0.lid)&(vt0.c1)))))AND(DATETIME(vt0.c2, t0.c68, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC, ((((vt0.lid) IS FALSE))-('-1113981309')) DESC, CAST(CAST(vt0.lid AS BLOB) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0 IN (vt0.lid)))OR(((vt0.lid)&(vt0.c1)))))AND(DATETIME(vt0.c2, t0.c68, vt0.c0)))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC, ((((vt0.lid) IS FALSE))-('-1113981309')) DESC, CAST(CAST(vt0.lid AS BLOB) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (vt0.lid)))OR(((vt0.lid)&(vt0.c1)))))AND(DATETIME(vt0.c2, t0.c68, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC, ((((vt0.lid) IS FALSE))-('-1113981309')) DESC, CAST(CAST(vt0.lid AS BLOB) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0 IN (vt0.lid)))OR(((vt0.lid)&(vt0.c1)))))AND(DATETIME(vt0.c2, t0.c68, vt0.c0)))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC, ((((vt0.lid) IS FALSE))-('-1113981309')) DESC, CAST(CAST(vt0.lid AS BLOB) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ('1066968399') ORDER BY (((('')AND((vt0.c2 IN (vt0.c0)))))AND((((('698699710')OR(t0.c68)))AND(vt0.lid)))), (- (CASE WHEN vt0.lid THEN vt0.c2 END)), ((CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)|(CASE WHEN vt0.c0 THEN vt0.c2 ELSE t0.c68 END)) DESC, CAST((((t0.c68, vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.lid, t0.c68, vt0.c2))) AS BLOB) DESC  NULLS FIRST, (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1066968399') IS TRUE)  as count FROM vt0, t0 ORDER BY (((('')AND((vt0.c2 IN (vt0.c0)))))AND((((('698699710')OR(t0.c68)))AND(vt0.lid)))), (- (CASE WHEN vt0.lid THEN vt0.c2 END)), ((CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)|(CASE WHEN vt0.c0 THEN vt0.c2 ELSE t0.c68 END)) DESC, CAST((((t0.c68, vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.lid, t0.c68, vt0.c2))) AS BLOB) DESC  NULLS FIRST, (NULL IN ()) DESC);
SELECT * FROM vt0, t0 WHERE ('1066968399') ORDER BY (((('')AND((vt0.c2 IN (vt0.c0)))))AND((((('698699710')OR(t0.c68)))AND(vt0.lid)))), (- (CASE WHEN vt0.lid THEN vt0.c2 END)), ((CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)|(CASE WHEN vt0.c0 THEN vt0.c2 ELSE t0.c68 END)) DESC, CAST((((t0.c68, vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.lid, t0.c68, vt0.c2))) AS BLOB) DESC  NULLS FIRST, (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1066968399') IS TRUE)  as count FROM vt0, t0 ORDER BY (((('')AND((vt0.c2 IN (vt0.c0)))))AND((((('698699710')OR(t0.c68)))AND(vt0.lid)))), (- (CASE WHEN vt0.lid THEN vt0.c2 END)), ((CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)|(CASE WHEN vt0.c0 THEN vt0.c2 ELSE t0.c68 END)) DESC, CAST((((t0.c68, vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.lid, t0.c68, vt0.c2))) AS BLOB) DESC  NULLS FIRST, (NULL IN ()) DESC);
SELECT * FROM vt0, t0 WHERE ('1066968399') ORDER BY (((('')AND((vt0.c2 IN (vt0.c0)))))AND((((('698699710')OR(t0.c68)))AND(vt0.lid)))), (- (CASE WHEN vt0.lid THEN vt0.c2 END)), ((CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)|(CASE WHEN vt0.c0 THEN vt0.c2 ELSE t0.c68 END)) DESC, CAST((((t0.c68, vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.lid, t0.c68, vt0.c2))) AS BLOB) DESC  NULLS FIRST, (NULL IN ()) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c68)AND(t0.c68)))OR(vt0.lid))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)AND(t0.c68)))OR(vt0.lid))) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c68)AND(t0.c68)))OR(vt0.lid))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)AND(t0.c68)))OR(vt0.lid))) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c68)AND(t0.c68)))OR(vt0.lid))) NOT NULL));
SELECT * FROM vt0, t0 WHERE (((((vt0.c1 IN (0X30aab391, vt0.c2)), (NOT (vt0.c0)), (~ (t0.c68))))>(((+ (vt0.c1)), ((vt0.c1) NOT NULL), ((t0.c68)<(t0.c68)))))) ORDER BY CASE (x'aecf' IN ())  WHEN vt0.c2 THEN TYPEOF(vt0.c1) WHEN ((vt0.c1)!=(t0.c68)) THEN ((vt0.lid) IS FALSE) WHEN CAST(t0.c68 AS TEXT) THEN TRIM(DISTINCT vt0.c2, vt0.lid) ELSE CAST(vt0.c1 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN (0X30aab391, vt0.c2)), (NOT (vt0.c0)), (~ (t0.c68))))>(((+ (vt0.c1)), ((vt0.c1) NOT NULL), ((t0.c68)<(t0.c68)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (x'aecf' IN ())  WHEN vt0.c2 THEN TYPEOF(vt0.c1) WHEN ((vt0.c1)<>(t0.c68)) THEN ((vt0.lid) IS FALSE) WHEN CAST(t0.c68 AS TEXT) THEN TRIM(DISTINCT vt0.c2, vt0.lid) ELSE CAST(vt0.c1 AS REAL) END DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1 IN (0X30aab391, vt0.c2)), (NOT (vt0.c0)), (~ (t0.c68))))>(((+ (vt0.c1)), ((vt0.c1) NOT NULL), ((t0.c68)<(t0.c68)))))) ORDER BY CASE (x'aecf' IN ())  WHEN vt0.c2 THEN TYPEOF(vt0.c1) WHEN ((vt0.c1)!=(t0.c68)) THEN ((vt0.lid) IS FALSE) WHEN CAST(t0.c68 AS TEXT) THEN TRIM(DISTINCT vt0.c2, vt0.lid) ELSE CAST(vt0.c1 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN (0X30aab391, vt0.c2)), (NOT (vt0.c0)), (~ (t0.c68))))>(((+ (vt0.c1)), ((vt0.c1) NOT NULL), ((t0.c68)<(t0.c68)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (x'aecf' IN ())  WHEN vt0.c2 THEN TYPEOF(vt0.c1) WHEN ((vt0.c1)<>(t0.c68)) THEN ((vt0.lid) IS FALSE) WHEN CAST(t0.c68 AS TEXT) THEN TRIM(DISTINCT vt0.c2, vt0.lid) ELSE CAST(vt0.c1 AS REAL) END DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1 IN (0X30aab391, vt0.c2)), (NOT (vt0.c0)), (~ (t0.c68))))>(((+ (vt0.c1)), ((vt0.c1) NOT NULL), ((t0.c68)<(t0.c68)))))) ORDER BY CASE (x'aecf' IN ())  WHEN vt0.c2 THEN TYPEOF(vt0.c1) WHEN ((vt0.c1)!=(t0.c68)) THEN ((vt0.lid) IS FALSE) WHEN CAST(t0.c68 AS TEXT) THEN TRIM(DISTINCT vt0.c2, vt0.lid) ELSE CAST(vt0.c1 AS REAL) END DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c2)AND('0~*?}IU')))AND(vt0.c1)) THEN ((vt0.lid) NOTNULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY x'35d1' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c2)AND('0~*?}IU')))AND(vt0.c1)) THEN ((vt0.lid) NOTNULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY x'35d1' DESC);
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c2)AND('0~*?}IU')))AND(vt0.c1)) THEN ((vt0.lid) NOTNULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY x'35d1' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c2)AND('0~*?}IU')))AND(vt0.c1)) THEN ((vt0.lid) NOTNULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY x'35d1' DESC);
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c2)AND('0~*?}IU')))AND(vt0.c1)) THEN ((vt0.lid) NOTNULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY x'35d1' DESC;
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c68 AS NUMERIC)))=((((t0.c68) NOT NULL))))) ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)IS NOT(t0.c68)) ELSE ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) END, CASE WHEN UPPER(t0.c68) THEN (NOT (t0.c68)) ELSE t0.c68 END ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS NUMERIC)))=((((t0.c68) NOT NULL))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)IS NOT(t0.c68)) ELSE ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) END, CASE WHEN UPPER(t0.c68) THEN (NOT (t0.c68)) ELSE t0.c68 END ASC);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c68 AS NUMERIC)))=((((t0.c68) NOT NULL))))) ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)IS NOT(t0.c68)) ELSE ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) END, CASE WHEN UPPER(t0.c68) THEN (NOT (t0.c68)) ELSE t0.c68 END ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS NUMERIC)))=((((t0.c68) NOT NULL))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)IS NOT(t0.c68)) ELSE ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) END, CASE WHEN UPPER(t0.c68) THEN (NOT (t0.c68)) ELSE t0.c68 END ASC);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c68 AS NUMERIC)))=((((t0.c68) NOT NULL))))) ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)IS NOT(t0.c68)) ELSE ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) END, CASE WHEN UPPER(t0.c68) THEN (NOT (t0.c68)) ELSE t0.c68 END ASC;
SELECT COUNT(*) FROM t0 WHERE (((x'')>(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')>(NULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((x'')>(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')>(NULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((x'')>(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL)AND(vt0.c1)))OR(vt0.c1)) IN ())) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((NULL)AND(vt0.c1)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL)AND(vt0.c1)))OR(vt0.c1)) IN ())) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((NULL)AND(vt0.c1)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL)AND(vt0.c1)))OR(vt0.c1)) IN ())) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT NULL);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((+ (vt0.lid))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 'xf' THEN vt0.c2 END) AND (((t0.c68)||(t0.c68))))) ORDER BY ((((((((t0.c68)AND(((((t0.c68)OR(t0.c68)))OR(vt0.c0)))))OR(((vt0.c1)|(0.5748595759066419)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.lid))))))OR('')) DESC  NULLS LAST, CAST((+ (NULL)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.lid))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 'xf' THEN vt0.c2 END) AND (((t0.c68)||(t0.c68))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((((t0.c68)AND(((((t0.c68)OR(t0.c68)))OR(vt0.c0)))))OR(((vt0.c1)|(0.5748595759066419)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.lid))))))OR('')) DESC  NULLS LAST, CAST((+ (NULL)) AS NUMERIC));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((+ (vt0.lid))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 'xf' THEN vt0.c2 END) AND (((t0.c68)||(t0.c68))))) ORDER BY ((((((((t0.c68)AND(((((t0.c68)OR(t0.c68)))OR(vt0.c0)))))OR(((vt0.c1)|(0.5748595759066419)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.lid))))))OR('')) DESC  NULLS LAST, CAST((+ (NULL)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.lid))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 'xf' THEN vt0.c2 END) AND (((t0.c68)||(t0.c68))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((((t0.c68)AND(((((t0.c68)OR(t0.c68)))OR(vt0.c0)))))OR(((vt0.c1)|(0.5748595759066419)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.lid))))))OR('')) DESC  NULLS LAST, CAST((+ (NULL)) AS NUMERIC));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((+ (vt0.lid))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 'xf' THEN vt0.c2 END) AND (((t0.c68)||(t0.c68))))) ORDER BY ((((((((t0.c68)AND(((((t0.c68)OR(t0.c68)))OR(vt0.c0)))))OR(((vt0.c1)|(0.5748595759066419)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.lid))))))OR('')) DESC  NULLS LAST, CAST((+ (NULL)) AS NUMERIC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)AND(x'')))AND(CAST(t0.c68 AS TEXT))))OR(((((vt0.c2)OR(vt0.c2)))OR(t0.c68)))))AND(((((t0.c68)OR(t0.c68)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)AND(x'')))AND(CAST(t0.c68 AS TEXT))))OR(((((vt0.c2)OR(vt0.c2)))OR(t0.c68)))))AND(((((t0.c68)OR(t0.c68)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)AND(x'')))AND(CAST(t0.c68 AS TEXT))))OR(((((vt0.c2)OR(vt0.c2)))OR(t0.c68)))))AND(((((t0.c68)OR(t0.c68)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)AND(x'')))AND(CAST(t0.c68 AS TEXT))))OR(((((vt0.c2)OR(vt0.c2)))OR(t0.c68)))))AND(((((t0.c68)OR(t0.c68)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)AND(x'')))AND(CAST(t0.c68 AS TEXT))))OR(((((vt0.c2)OR(vt0.c2)))OR(t0.c68)))))AND(((((t0.c68)OR(t0.c68)))OR(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY vt0.c2 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY vt0.c2 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY vt0.c2 COLLATE NOCASE;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))<((vt0.c0)))) NOT NULL) WHERE (((0.8201627752458622) BETWEEN (((((t0.c68)OR(t0.c68)))OR(vt0.lid))) AND (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((0.8201627752458622) BETWEEN (((((t0.c68)OR(t0.c68)))OR(vt0.lid))) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))<((vt0.c0)))) NOT NULL));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))<((vt0.c0)))) NOT NULL) WHERE (((0.8201627752458622) BETWEEN (((((t0.c68)OR(t0.c68)))OR(vt0.lid))) AND (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((0.8201627752458622) BETWEEN (((((t0.c68)OR(t0.c68)))OR(vt0.lid))) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))<((vt0.c0)))) NOT NULL));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))<((vt0.c0)))) NOT NULL) WHERE (((0.8201627752458622) BETWEEN (((((t0.c68)OR(t0.c68)))OR(vt0.lid))) AND (((vt0.c2) NOTNULL))));
SELECT ALL * FROM vt0, t0 WHERE (0.45765987396314356) ORDER BY ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))OR(NULL)))AND(vt0.lid COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((0.45765987396314356) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))OR(NULL)))AND(vt0.lid COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0 WHERE (0.45765987396314356) ORDER BY ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))OR(NULL)))AND(vt0.lid COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((0.45765987396314356) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))OR(NULL)))AND(vt0.lid COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0 WHERE (0.45765987396314356) ORDER BY ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))OR(NULL)))AND(vt0.lid COLLATE RTRIM));
SELECT ALL * FROM t0, vt0 WHERE (((((0.7081536332680346)&(vt0.c2)))GLOB((+ ('-628825467')))));
SELECT SUM(count) FROM (SELECT ((((((0.7081536332680346)&(vt0.c2)))GLOB((+ ('-628825467'))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((0.7081536332680346)&(vt0.c2)))GLOB((+ ('-628825467')))));
SELECT SUM(count) FROM (SELECT ((((((0.7081536332680346)&(vt0.c2)))GLOB((+ ('-628825467'))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((0.7081536332680346)&(vt0.c2)))GLOB((+ ('-628825467')))));
SELECT * FROM vt0 WHERE (CASE WHEN COALESCE(vt0.lid, vt0.lid) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(vt0.lid, vt0.lid) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN COALESCE(vt0.lid, vt0.lid) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(vt0.lid, vt0.lid) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN COALESCE(vt0.lid, vt0.lid) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68) BETWEEN (t0.c68) AND (vt0.lid)))IS(vt0.c2))) ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (t0.c68) AND (vt0.lid)))IS(vt0.c2))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68) BETWEEN (t0.c68) AND (vt0.lid)))IS(vt0.c2))) ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (t0.c68) AND (vt0.lid)))IS(vt0.c2))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68) BETWEEN (t0.c68) AND (vt0.lid)))IS(vt0.c2))) ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC;
SELECT * FROM t0, vt0 WHERE (((~ (vt0.c2)) IN (CASE t0.c68  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '-1866720899' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END, NULL))) ORDER BY TRIM(DISTINCT vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c2)) IN (CASE t0.c68  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '-1866720899' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END, NULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY TRIM(DISTINCT vt0.c0));
SELECT * FROM t0, vt0 WHERE (((~ (vt0.c2)) IN (CASE t0.c68  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '-1866720899' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END, NULL))) ORDER BY TRIM(DISTINCT vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c2)) IN (CASE t0.c68  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '-1866720899' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END, NULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY TRIM(DISTINCT vt0.c0));
SELECT * FROM t0, vt0 WHERE (((~ (vt0.c2)) IN (CASE t0.c68  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '-1866720899' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END, NULL))) ORDER BY TRIM(DISTINCT vt0.c0);
SELECT ALL * FROM vt0 WHERE ((HEX(DISTINCT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(DISTINCT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((HEX(DISTINCT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(DISTINCT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((HEX(DISTINCT NULL) IN ()));
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN -2.044823315E9 END)>(((((((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))AND(t0.c68)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN -2.044823315E9 END)>(((((((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))AND(t0.c68)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN -2.044823315E9 END)>(((((((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))AND(t0.c68)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN -2.044823315E9 END)>(((((((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))AND(t0.c68)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN -2.044823315E9 END)>(((((((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))AND(t0.c68)))OR(vt0.c0)))));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (- (((vt0.c1)|(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (- (((vt0.c1)|(vt0.c2))))  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (- (((vt0.c1)|(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (- (((vt0.c1)|(vt0.c2))))  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (- (((vt0.c1)|(vt0.c2))))  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c68) ORDER BY CASE ((t0.c68) IS FALSE)  WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN (+ (t0.c68)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c68) IS FALSE)  WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN (+ (t0.c68)) END  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c68) ORDER BY CASE ((t0.c68) IS FALSE)  WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN (+ (t0.c68)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c68) IS FALSE)  WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN (+ (t0.c68)) END  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c68) ORDER BY CASE ((t0.c68) IS FALSE)  WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN (+ (t0.c68)) END  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((0.43160400655126674)OR(t0.c68)))AND(t0.c68)))OR(0.29152661398048274)))AND(t0.c68)))/(((t0.c68) IS TRUE)))) ORDER BY (('{A< NMD9J') NOT BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (''))) AND (x''))  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))))<=(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.43160400655126674)OR(t0.c68)))AND(t0.c68)))OR(0.29152661398048274)))AND(t0.c68)))/(((t0.c68) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY (('{A< NMD9J') NOT BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (''))) AND (x''))  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))))<=(x'')) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((((((0.43160400655126674)OR(t0.c68)))AND(t0.c68)))OR(0.29152661398048274)))AND(t0.c68)))/(((t0.c68) IS TRUE)))) ORDER BY (('{A< NMD9J') NOT BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (''))) AND (x''))  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))))<=(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.43160400655126674)OR(t0.c68)))AND(t0.c68)))OR(0.29152661398048274)))AND(t0.c68)))/(((t0.c68) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY (('{A< NMD9J') NOT BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (''))) AND (x''))  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))))<=(x'')) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((((((0.43160400655126674)OR(t0.c68)))AND(t0.c68)))OR(0.29152661398048274)))AND(t0.c68)))/(((t0.c68) IS TRUE)))) ORDER BY (('{A< NMD9J') NOT BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (''))) AND (x''))  NULLS LAST, (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))))<=(x'')) ASC;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)|(((((((((vt0.c0)OR(vt0.lid)))OR(t0.c68)))OR(t0.c68)))AND(vt0.c0)))) WHERE (CASE ((vt0.lid)-(vt0.lid))  WHEN UNLIKELY(vt0.c1) THEN t0.c68 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END WHEN ((vt0.lid)IS(vt0.c1)) THEN ((NULL)AND(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.lid)-(vt0.lid))  WHEN UNLIKELY(vt0.c1) THEN t0.c68 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END WHEN ((vt0.lid)IS(vt0.c1)) THEN ((NULL)AND(t0.c68)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)|(((((((((vt0.c0)OR(vt0.lid)))OR(t0.c68)))OR(t0.c68)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)|(((((((((vt0.c0)OR(vt0.lid)))OR(t0.c68)))OR(t0.c68)))AND(vt0.c0)))) WHERE (CASE ((vt0.lid)-(vt0.lid))  WHEN UNLIKELY(vt0.c1) THEN t0.c68 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END WHEN ((vt0.lid)IS(vt0.c1)) THEN ((NULL)AND(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.lid)-(vt0.lid))  WHEN UNLIKELY(vt0.c1) THEN t0.c68 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END WHEN ((vt0.lid)IS(vt0.c1)) THEN ((NULL)AND(t0.c68)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)|(((((((((vt0.c0)OR(vt0.lid)))OR(t0.c68)))OR(t0.c68)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)|(((((((((vt0.c0)OR(vt0.lid)))OR(t0.c68)))OR(t0.c68)))AND(vt0.c0)))) WHERE (CASE ((vt0.lid)-(vt0.lid))  WHEN UNLIKELY(vt0.c1) THEN t0.c68 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END WHEN ((vt0.lid)IS(vt0.c1)) THEN ((NULL)AND(t0.c68)) END);
SELECT COUNT(*) FROM vt0, t0 WHERE ((('0.39660437910200796')|((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((('0.39660437910200796')|((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((('0.39660437910200796')|((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((('0.39660437910200796')|((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((('0.39660437910200796')|((vt0.c1 IN ()))));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN t0.c68 THEN ((x'') BETWEEN (421922795) AND (vt0.lid)) WHEN CAST(vt0.c2 AS NUMERIC) THEN (((('5h5kG')AND(vt0.c2)))AND(vt0.c0)) WHEN ((vt0.lid)<<(vt0.lid)) THEN LIKELIHOOD(vt0.lid, 0.2660447311658759) END) ORDER BY CASE (((vt0.lid, vt0.c0, vt0.c2))<((t0.c68, vt0.c2, vt0.c1)))  WHEN (- (vt0.c1)) THEN TRIM(vt0.c1, vt0.lid) WHEN CAST(vt0.c0 AS TEXT) THEN (t0.c68 IN (t0.c68)) WHEN 0Xffffffffd81fa402 THEN (((vt0.c1, vt0.c0, vt0.c2))>=((vt0.lid, vt0.c0, vt0.c2))) WHEN ((vt0.c0)==(vt0.c2)) THEN (((x'', vt0.c2, 0.992232322403974)) NOT BETWEEN ((vt0.lid, vt0.lid, t0.c68)) AND ((vt0.lid, vt0.c0, '698699710'))) WHEN (+ (vt0.lid)) THEN vt0.c2 END ASC  NULLS FIRST, (((vt0.c2, t0.c68, vt0.lid)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(t0.c68)))AND(vt0.c0)), ((((((((x'')AND(t0.c68)))OR(t0.c68)))OR(vt0.lid)))OR(vt0.c2)))) AND ((NULL, t0.c68 COLLATE RTRIM, (- (vt0.lid))))) DESC, (((CASE WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid END))!=((LOWER(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT NULL)  WHEN t0.c68 THEN ((x'') BETWEEN (421922795) AND (vt0.lid)) WHEN CAST(vt0.c2 AS NUMERIC) THEN (((('5h5kG')AND(vt0.c2)))AND(vt0.c0)) WHEN ((vt0.lid)<<(vt0.lid)) THEN LIKELIHOOD(vt0.lid, 0.2660447311658759) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CASE (((vt0.lid, vt0.c0, vt0.c2))<((t0.c68, vt0.c2, vt0.c1)))  WHEN (- (vt0.c1)) THEN TRIM(vt0.c1, vt0.lid) WHEN CAST(vt0.c0 AS TEXT) THEN (t0.c68 IN (t0.c68)) WHEN 0Xffffffffd81fa402 THEN (((vt0.c1, vt0.c0, vt0.c2))>=((vt0.lid, vt0.c0, vt0.c2))) WHEN ((vt0.c0)==(vt0.c2)) THEN (((x'', vt0.c2, 0.992232322403974)) NOT BETWEEN ((vt0.lid, vt0.lid, t0.c68)) AND ((vt0.lid, vt0.c0, '698699710'))) WHEN (+ (vt0.lid)) THEN vt0.c2 END ASC  NULLS FIRST, (((vt0.c2, t0.c68, vt0.lid)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(t0.c68)))AND(vt0.c0)), ((((((((x'')AND(t0.c68)))OR(t0.c68)))OR(vt0.lid)))OR(vt0.c2)))) AND ((NULL, t0.c68 COLLATE RTRIM, (- (vt0.lid))))) DESC, (((CASE WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid END))<>((LOWER(vt0.c2)))) DESC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN t0.c68 THEN ((x'') BETWEEN (421922795) AND (vt0.lid)) WHEN CAST(vt0.c2 AS NUMERIC) THEN (((('5h5kG')AND(vt0.c2)))AND(vt0.c0)) WHEN ((vt0.lid)<<(vt0.lid)) THEN LIKELIHOOD(vt0.lid, 0.2660447311658759) END) ORDER BY CASE (((vt0.lid, vt0.c0, vt0.c2))<((t0.c68, vt0.c2, vt0.c1)))  WHEN (- (vt0.c1)) THEN TRIM(vt0.c1, vt0.lid) WHEN CAST(vt0.c0 AS TEXT) THEN (t0.c68 IN (t0.c68)) WHEN 0Xffffffffd81fa402 THEN (((vt0.c1, vt0.c0, vt0.c2))>=((vt0.lid, vt0.c0, vt0.c2))) WHEN ((vt0.c0)==(vt0.c2)) THEN (((x'', vt0.c2, 0.992232322403974)) NOT BETWEEN ((vt0.lid, vt0.lid, t0.c68)) AND ((vt0.lid, vt0.c0, '698699710'))) WHEN (+ (vt0.lid)) THEN vt0.c2 END ASC  NULLS FIRST, (((vt0.c2, t0.c68, vt0.lid)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(t0.c68)))AND(vt0.c0)), ((((((((x'')AND(t0.c68)))OR(t0.c68)))OR(vt0.lid)))OR(vt0.c2)))) AND ((NULL, t0.c68 COLLATE RTRIM, (- (vt0.lid))))) DESC, (((CASE WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid END))!=((LOWER(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT NULL)  WHEN t0.c68 THEN ((x'') BETWEEN (421922795) AND (vt0.lid)) WHEN CAST(vt0.c2 AS NUMERIC) THEN (((('5h5kG')AND(vt0.c2)))AND(vt0.c0)) WHEN ((vt0.lid)<<(vt0.lid)) THEN LIKELIHOOD(vt0.lid, 0.2660447311658759) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CASE (((vt0.lid, vt0.c0, vt0.c2))<((t0.c68, vt0.c2, vt0.c1)))  WHEN (- (vt0.c1)) THEN TRIM(vt0.c1, vt0.lid) WHEN CAST(vt0.c0 AS TEXT) THEN (t0.c68 IN (t0.c68)) WHEN 0Xffffffffd81fa402 THEN (((vt0.c1, vt0.c0, vt0.c2))>=((vt0.lid, vt0.c0, vt0.c2))) WHEN ((vt0.c0)==(vt0.c2)) THEN (((x'', vt0.c2, 0.992232322403974)) NOT BETWEEN ((vt0.lid, vt0.lid, t0.c68)) AND ((vt0.lid, vt0.c0, '698699710'))) WHEN (+ (vt0.lid)) THEN vt0.c2 END ASC  NULLS FIRST, (((vt0.c2, t0.c68, vt0.lid)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(t0.c68)))AND(vt0.c0)), ((((((((x'')AND(t0.c68)))OR(t0.c68)))OR(vt0.lid)))OR(vt0.c2)))) AND ((NULL, t0.c68 COLLATE RTRIM, (- (vt0.lid))))) DESC, (((CASE WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid END))<>((LOWER(vt0.c2)))) DESC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN t0.c68 THEN ((x'') BETWEEN (421922795) AND (vt0.lid)) WHEN CAST(vt0.c2 AS NUMERIC) THEN (((('5h5kG')AND(vt0.c2)))AND(vt0.c0)) WHEN ((vt0.lid)<<(vt0.lid)) THEN LIKELIHOOD(vt0.lid, 0.2660447311658759) END) ORDER BY CASE (((vt0.lid, vt0.c0, vt0.c2))<((t0.c68, vt0.c2, vt0.c1)))  WHEN (- (vt0.c1)) THEN TRIM(vt0.c1, vt0.lid) WHEN CAST(vt0.c0 AS TEXT) THEN (t0.c68 IN (t0.c68)) WHEN 0Xffffffffd81fa402 THEN (((vt0.c1, vt0.c0, vt0.c2))>=((vt0.lid, vt0.c0, vt0.c2))) WHEN ((vt0.c0)==(vt0.c2)) THEN (((x'', vt0.c2, 0.992232322403974)) NOT BETWEEN ((vt0.lid, vt0.lid, t0.c68)) AND ((vt0.lid, vt0.c0, '698699710'))) WHEN (+ (vt0.lid)) THEN vt0.c2 END ASC  NULLS FIRST, (((vt0.c2, t0.c68, vt0.lid)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(t0.c68)))AND(vt0.c0)), ((((((((x'')AND(t0.c68)))OR(t0.c68)))OR(vt0.lid)))OR(vt0.c2)))) AND ((NULL, t0.c68 COLLATE RTRIM, (- (vt0.lid))))) DESC, (((CASE WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid END))!=((LOWER(vt0.c2)))) DESC;
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.lid)) AND (((vt0.c2) IS TRUE)))) ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.lid)) AND (((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.lid)) AND (((vt0.c2) IS TRUE)))) ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.lid)) AND (((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.lid)) AND (((vt0.c2) IS TRUE)))) ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ (((t0.c68)AND(vt0.lid)))) WHERE ((((((t0.c68))==((vt0.lid)))) NOT BETWEEN (((vt0.c2) NOTNULL)) AND ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68))=((vt0.lid)))) NOT BETWEEN (((vt0.c2) NOTNULL)) AND ((t0.c68 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (~ (((t0.c68)AND(vt0.lid)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ (((t0.c68)AND(vt0.lid)))) WHERE ((((((t0.c68))==((vt0.lid)))) NOT BETWEEN (((vt0.c2) NOTNULL)) AND ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68))=((vt0.lid)))) NOT BETWEEN (((vt0.c2) NOTNULL)) AND ((t0.c68 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (~ (((t0.c68)AND(vt0.lid)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ (((t0.c68)AND(vt0.lid)))) WHERE ((((((t0.c68))==((vt0.lid)))) NOT BETWEEN (((vt0.c2) NOTNULL)) AND ((t0.c68 IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (NULL)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (NULL)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (NULL)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (NULL)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (NULL)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((LTRIM(vt0.c0, vt0.c0)))>((vt0.c2)))) ORDER BY (((vt0.c1 IN ()))&(((vt0.c1)/(vt0.c0))))  NULLS LAST, UNLIKELY(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END) DESC;
SELECT SUM(count) FROM (SELECT (((((LTRIM(vt0.c0, vt0.c0)))>((vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))&(((vt0.c1)/(vt0.c0))))  NULLS LAST, UNLIKELY(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((LTRIM(vt0.c0, vt0.c0)))>((vt0.c2)))) ORDER BY (((vt0.c1 IN ()))&(((vt0.c1)/(vt0.c0))))  NULLS LAST, UNLIKELY(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END) DESC;
SELECT SUM(count) FROM (SELECT (((((LTRIM(vt0.c0, vt0.c0)))>((vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))&(((vt0.c1)/(vt0.c0))))  NULLS LAST, UNLIKELY(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((LTRIM(vt0.c0, vt0.c0)))>((vt0.c2)))) ORDER BY (((vt0.c1 IN ()))&(((vt0.c1)/(vt0.c0))))  NULLS LAST, UNLIKELY(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END) DESC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((((0.13286987195382804))>=((vt0.lid))))OR(0.0031473289753760625)))OR(((vt0.c2)-(vt0.lid)))) WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((((0.13286987195382804))>=((vt0.lid))))OR(0.0031473289753760625)))OR(((vt0.c2)-(vt0.lid)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((((0.13286987195382804))>=((vt0.lid))))OR(0.0031473289753760625)))OR(((vt0.c2)-(vt0.lid)))) WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((((0.13286987195382804))>=((vt0.lid))))OR(0.0031473289753760625)))OR(((vt0.c2)-(vt0.lid)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((((0.13286987195382804))>=((vt0.lid))))OR(0.0031473289753760625)))OR(((vt0.c2)-(vt0.lid)))) WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1)IS(t0.c68))))<=((((t0.c68)IS(vt0.lid))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)IS(t0.c68))))<=((((t0.c68)IS(vt0.lid)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1)IS(t0.c68))))<=((((t0.c68)IS(vt0.lid))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)IS(t0.c68))))<=((((t0.c68)IS(vt0.lid)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1)IS(t0.c68))))<=((((t0.c68)IS(vt0.lid))))));
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((((((((((((vt0.c2)=(vt0.c0)))OR(((vt0.c1)|(vt0.c0)))))OR((NOT (vt0.lid)))))OR((NOT (vt0.c0)))))OR(((vt0.lid) NOTNULL))))OR(((vt0.lid)LIKE('-1362585955')))))AND(((((vt0.c1)OR(x'99f0')))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c2)=(vt0.c0)))OR(((vt0.c1)|(vt0.c0)))))OR((NOT (vt0.lid)))))OR((NOT (vt0.c0)))))OR(((vt0.lid) NOTNULL))))OR(((vt0.lid)LIKE('-1362585955')))))AND(((((vt0.c1)OR(x'99f0')))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((((((((((((vt0.c2)=(vt0.c0)))OR(((vt0.c1)|(vt0.c0)))))OR((NOT (vt0.lid)))))OR((NOT (vt0.c0)))))OR(((vt0.lid) NOTNULL))))OR(((vt0.lid)LIKE('-1362585955')))))AND(((((vt0.c1)OR(x'99f0')))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c2)=(vt0.c0)))OR(((vt0.c1)|(vt0.c0)))))OR((NOT (vt0.lid)))))OR((NOT (vt0.c0)))))OR(((vt0.lid) NOTNULL))))OR(((vt0.lid)LIKE('-1362585955')))))AND(((((vt0.c1)OR(x'99f0')))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((((((((((((vt0.c2)=(vt0.c0)))OR(((vt0.c1)|(vt0.c0)))))OR((NOT (vt0.lid)))))OR((NOT (vt0.c0)))))OR(((vt0.lid) NOTNULL))))OR(((vt0.lid)LIKE('-1362585955')))))AND(((((vt0.c1)OR(x'99f0')))OR(vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)!=(t0.c68)))&(LOWER(DISTINCT t0.c68)))) ORDER BY ((((NOT (t0.c68)), LIKELIHOOD(t0.c68, 0.10558177668815183), t0.c68 COLLATE NOCASE))>((((((t0.c68)OR('')))OR(t0.c68)), CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, (~ (t0.c68)))))  NULLS LAST, (((t0.c68 IN ())) NOT BETWEEN ((- (x''))) AND (((((t0.c68)AND(t0.c68)))OR(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)<>(t0.c68)))&(LOWER(DISTINCT t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY ((((NOT (t0.c68)), LIKELIHOOD(t0.c68, 0.10558177668815183), t0.c68 COLLATE NOCASE))>((((((t0.c68)OR('')))OR(t0.c68)), CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, (~ (t0.c68)))))  NULLS LAST, (((t0.c68 IN ())) NOT BETWEEN ((- (x''))) AND (((((t0.c68)AND(t0.c68)))OR(NULL))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)!=(t0.c68)))&(LOWER(DISTINCT t0.c68)))) ORDER BY ((((NOT (t0.c68)), LIKELIHOOD(t0.c68, 0.10558177668815183), t0.c68 COLLATE NOCASE))>((((((t0.c68)OR('')))OR(t0.c68)), CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, (~ (t0.c68)))))  NULLS LAST, (((t0.c68 IN ())) NOT BETWEEN ((- (x''))) AND (((((t0.c68)AND(t0.c68)))OR(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)<>(t0.c68)))&(LOWER(DISTINCT t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY ((((NOT (t0.c68)), LIKELIHOOD(t0.c68, 0.10558177668815183), t0.c68 COLLATE NOCASE))>((((((t0.c68)OR('')))OR(t0.c68)), CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, (~ (t0.c68)))))  NULLS LAST, (((t0.c68 IN ())) NOT BETWEEN ((- (x''))) AND (((((t0.c68)AND(t0.c68)))OR(NULL))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)!=(t0.c68)))&(LOWER(DISTINCT t0.c68)))) ORDER BY ((((NOT (t0.c68)), LIKELIHOOD(t0.c68, 0.10558177668815183), t0.c68 COLLATE NOCASE))>((((((t0.c68)OR('')))OR(t0.c68)), CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, (~ (t0.c68)))))  NULLS LAST, (((t0.c68 IN ())) NOT BETWEEN ((- (x''))) AND (((((t0.c68)AND(t0.c68)))OR(NULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN x'744b' THEN 347930090 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN x'744b' THEN 347930090 END AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN x'744b' THEN 347930090 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN x'744b' THEN 347930090 END AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN x'744b' THEN 347930090 END AS TEXT));
SELECT ALL * FROM vt0, t0 WHERE ((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END IN ((('-1242915758') NOT BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END)));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END IN ((('-1242915758') NOT BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END IN ((('-1242915758') NOT BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END)));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END IN ((('-1242915758') NOT BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((CASE vt0.c2  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END IN ((('-1242915758') NOT BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c2 THEN t0.c68 ELSE vt0.lid END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2)))OR(((vt0.c0)OR(vt0.c0)))))AND(vt0.lid)))OR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2)))OR(((vt0.c0)OR(vt0.c0)))))AND(vt0.lid)))OR(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2)))OR(((vt0.c0)OR(vt0.c0)))))AND(vt0.lid)))OR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2)))OR(((vt0.c0)OR(vt0.c0)))))AND(vt0.lid)))OR(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2)))OR(((vt0.c0)OR(vt0.c0)))))AND(vt0.lid)))OR(vt0.c2)));
SELECT * FROM t0 WHERE (((CAST('9GSX2P#' AS REAL)) NOT NULL)) ORDER BY ((((t0.c68)<<(t0.c68))) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('9GSX2P#' AS REAL)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)<<(t0.c68))) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)) ASC);
SELECT * FROM t0 WHERE (((CAST('9GSX2P#' AS REAL)) NOT NULL)) ORDER BY ((((t0.c68)<<(t0.c68))) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('9GSX2P#' AS REAL)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)<<(t0.c68))) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)) ASC);
SELECT * FROM t0 WHERE (((CAST('9GSX2P#' AS REAL)) NOT NULL)) ORDER BY ((((t0.c68)<<(t0.c68))) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c68 AS BLOB))AND(((t0.c68)&(t0.c68)))))AND(((((t0.c68)AND(t0.c68)))AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c68 AS BLOB))AND(((t0.c68)&(t0.c68)))))AND(((((t0.c68)AND(t0.c68)))AND(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c68 AS BLOB))AND(((t0.c68)&(t0.c68)))))AND(((((t0.c68)AND(t0.c68)))AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c68 AS BLOB))AND(((t0.c68)&(t0.c68)))))AND(((((t0.c68)AND(t0.c68)))AND(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c68 AS BLOB))AND(((t0.c68)&(t0.c68)))))AND(((((t0.c68)AND(t0.c68)))AND(t0.c68)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (IFNULL(DISTINCT ((vt0.c1) IS FALSE), vt0.lid COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c1) IS FALSE), vt0.lid COLLATE RTRIM)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (IFNULL(DISTINCT ((vt0.c1) IS FALSE), vt0.lid COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c1) IS FALSE), vt0.lid COLLATE RTRIM)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (IFNULL(DISTINCT ((vt0.c1) IS FALSE), vt0.lid COLLATE RTRIM));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2 IN (vt0.lid, vt0.lid))) NOT BETWEEN (CAST(0.4502726522848066 AS INTEGER)) AND ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.lid, vt0.lid))) NOT BETWEEN (CAST(0.4502726522848066 AS INTEGER)) AND ((x'' IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2 IN (vt0.lid, vt0.lid))) NOT BETWEEN (CAST(0.4502726522848066 AS INTEGER)) AND ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.lid, vt0.lid))) NOT BETWEEN (CAST(0.4502726522848066 AS INTEGER)) AND ((x'' IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2 IN (vt0.lid, vt0.lid))) NOT BETWEEN (CAST(0.4502726522848066 AS INTEGER)) AND ((x'' IN ()))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON COALESCE(DISTINCT LIKELIHOOD(vt0.lid, 0.27850420627100037), 0x3625a641) WHERE ((+ (((vt0.c2) IS FALSE)))) ORDER BY CAST(((((((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c0)))OR(t0.c68)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON COALESCE(DISTINCT LIKELIHOOD(vt0.lid, 0.27850420627100037), 0x3625a641) ORDER BY CAST(((((((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c0)))OR(t0.c68)) AS BLOB));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON COALESCE(DISTINCT LIKELIHOOD(vt0.lid, 0.27850420627100037), 0x3625a641) WHERE ((+ (((vt0.c2) IS FALSE)))) ORDER BY CAST(((((((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c0)))OR(t0.c68)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON COALESCE(DISTINCT LIKELIHOOD(vt0.lid, 0.27850420627100037), 0x3625a641) ORDER BY CAST(((((((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c0)))OR(t0.c68)) AS BLOB));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON COALESCE(DISTINCT LIKELIHOOD(vt0.lid, 0.27850420627100037), 0x3625a641) WHERE ((+ (((vt0.c2) IS FALSE)))) ORDER BY CAST(((((((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c0)))OR(t0.c68)) AS BLOB);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68)IS(vt0.lid))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(0.9568845109947116)))OR(t0.c68)))OR(t0.c68))) AND (CASE WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN vt0.lid ELSE vt0.c2 END)) WHERE (((t0.c68)AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((UNLIKELY(DISTINCT t0.c68))LIKE(x'')), x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68)IS(vt0.lid))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(0.9568845109947116)))OR(t0.c68)))OR(t0.c68))) AND (CASE WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN vt0.lid ELSE vt0.c2 END)) ORDER BY ((UNLIKELY(DISTINCT t0.c68))LIKE(x'')), x'' ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68)IS(vt0.lid))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(0.9568845109947116)))OR(t0.c68)))OR(t0.c68))) AND (CASE WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN vt0.lid ELSE vt0.c2 END)) WHERE (((t0.c68)AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((UNLIKELY(DISTINCT t0.c68))LIKE(x'')), x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68)IS(vt0.lid))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(0.9568845109947116)))OR(t0.c68)))OR(t0.c68))) AND (CASE WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN vt0.lid ELSE vt0.c2 END)) ORDER BY ((UNLIKELY(DISTINCT t0.c68))LIKE(x'')), x'' ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68)IS(vt0.lid))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(0.9568845109947116)))OR(t0.c68)))OR(t0.c68))) AND (CASE WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN vt0.lid ELSE vt0.c2 END)) WHERE (((t0.c68)AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((UNLIKELY(DISTINCT t0.c68))LIKE(x'')), x'' ASC;
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c68 IN ()))%((+ (t0.c68))))) ORDER BY NULLIF(DISTINCT (~ (t0.c68)), CAST(t0.c68 AS TEXT));
SELECT SUM(count) FROM (SELECT (((((t0.c68 IN ()))%((+ (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT (~ (t0.c68)), CAST(t0.c68 AS TEXT)));
SELECT * FROM t0 WHERE ((((t0.c68 IN ()))%((+ (t0.c68))))) ORDER BY NULLIF(DISTINCT (~ (t0.c68)), CAST(t0.c68 AS TEXT));
SELECT SUM(count) FROM (SELECT (((((t0.c68 IN ()))%((+ (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT (~ (t0.c68)), CAST(t0.c68 AS TEXT)));
SELECT * FROM t0 WHERE ((((t0.c68 IN ()))%((+ (t0.c68))))) ORDER BY NULLIF(DISTINCT (~ (t0.c68)), CAST(t0.c68 AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE (((((TRIM(vt0.c0))OR(0.9621134963741071)))OR((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt0.c0))OR(0.9621134963741071)))OR((vt0.lid IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((TRIM(vt0.c0))OR(0.9621134963741071)))OR((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt0.c0))OR(0.9621134963741071)))OR((vt0.lid IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((TRIM(vt0.c0))OR(0.9621134963741071)))OR((vt0.lid IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c2, '9')) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0))) ORDER BY ((((((((NULL)AND(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.lid)))))AND((~ (vt0.lid)))))OR(((vt0.c2)IS NOT(vt0.c0)))))AND(CASE vt0.lid  WHEN vt0.c1 THEN vt0.lid END)) ASC, (vt0.c1 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c0, vt0.c2, '9')) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((NULL)AND(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.lid)))))AND((~ (vt0.lid)))))OR(((vt0.c2)IS NOT(vt0.c0)))))AND(CASE vt0.lid  WHEN vt0.c1 THEN vt0.lid END)) ASC, (vt0.c1 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c2, '9')) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0))) ORDER BY ((((((((NULL)AND(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.lid)))))AND((~ (vt0.lid)))))OR(((vt0.c2)IS NOT(vt0.c0)))))AND(CASE vt0.lid  WHEN vt0.c1 THEN vt0.lid END)) ASC, (vt0.c1 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c0, vt0.c2, '9')) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((NULL)AND(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.lid)))))AND((~ (vt0.lid)))))OR(((vt0.c2)IS NOT(vt0.c0)))))AND(CASE vt0.lid  WHEN vt0.c1 THEN vt0.lid END)) ASC, (vt0.c1 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c2, '9')) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0))) ORDER BY ((((((((NULL)AND(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.lid)))))AND((~ (vt0.lid)))))OR(((vt0.c2)IS NOT(vt0.c0)))))AND(CASE vt0.lid  WHEN vt0.c1 THEN vt0.lid END)) ASC, (vt0.c1 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ ('0.5378053439543684'))) ORDER BY ((((((((((vt0.lid)OR(vt0.lid)))OR(t0.c68)))OR(9.08437057E8)))AND(vt0.lid))) NOT BETWEEN ((((vt0.c2, vt0.c2, vt0.c0))=(('_x', vt0.c2, t0.c68)))) AND (((t0.c68) BETWEEN (vt0.lid) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT ALL (((~ ('0.5378053439543684'))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.lid)OR(vt0.lid)))OR(t0.c68)))OR(9.08437057E8)))AND(vt0.lid))) NOT BETWEEN ((((vt0.c2, vt0.c2, vt0.c0))==(('_x', vt0.c2, t0.c68)))) AND (((t0.c68) BETWEEN (vt0.lid) AND (t0.c68)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ ('0.5378053439543684'))) ORDER BY ((((((((((vt0.lid)OR(vt0.lid)))OR(t0.c68)))OR(9.08437057E8)))AND(vt0.lid))) NOT BETWEEN ((((vt0.c2, vt0.c2, vt0.c0))=(('_x', vt0.c2, t0.c68)))) AND (((t0.c68) BETWEEN (vt0.lid) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT ALL (((~ ('0.5378053439543684'))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.lid)OR(vt0.lid)))OR(t0.c68)))OR(9.08437057E8)))AND(vt0.lid))) NOT BETWEEN ((((vt0.c2, vt0.c2, vt0.c0))==(('_x', vt0.c2, t0.c68)))) AND (((t0.c68) BETWEEN (vt0.lid) AND (t0.c68)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ ('0.5378053439543684'))) ORDER BY ((((((((((vt0.lid)OR(vt0.lid)))OR(t0.c68)))OR(9.08437057E8)))AND(vt0.lid))) NOT BETWEEN ((((vt0.c2, vt0.c2, vt0.c0))=(('_x', vt0.c2, t0.c68)))) AND (((t0.c68) BETWEEN (vt0.lid) AND (t0.c68))));
SELECT COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(((((((((t0.c68)AND(t0.c68)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c2)), 0.16138050893146105)) ORDER BY (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))AND(((vt0.c1)-(vt0.c2)))))OR(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((((((t0.c68)AND(t0.c68)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c2)), 0.16138050893146105)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))AND(((vt0.c1)-(vt0.c2)))))OR(x''))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(((((((((t0.c68)AND(t0.c68)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c2)), 0.16138050893146105)) ORDER BY (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))AND(((vt0.c1)-(vt0.c2)))))OR(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((((((t0.c68)AND(t0.c68)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c2)), 0.16138050893146105)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))AND(((vt0.c1)-(vt0.c2)))))OR(x''))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(((((((((t0.c68)AND(t0.c68)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c2)), 0.16138050893146105)) ORDER BY (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))AND(((vt0.c1)-(vt0.c2)))))OR(x''))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c68 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c68 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE BINARY IN ()));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (0.48691173916297603);
SELECT SUM(count) FROM (SELECT ((0.48691173916297603) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON vt0.c0);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (0.48691173916297603);
SELECT SUM(count) FROM (SELECT ((0.48691173916297603) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON vt0.c0);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (0.48691173916297603);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON UNLIKELY((~ ('N<P\rCksM'))) WHERE (((vt0.c0)GLOB((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB((t0.c68 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON UNLIKELY((~ ('N<P\rCksM'))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON UNLIKELY((~ ('N<P\rCksM'))) WHERE (((vt0.c0)GLOB((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB((t0.c68 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON UNLIKELY((~ ('N<P\rCksM'))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON UNLIKELY((~ ('N<P\rCksM'))) WHERE (((vt0.c0)GLOB((t0.c68 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END, vt0.c2 COLLATE BINARY, CAST(vt0.lid AS NUMERIC)))<((CAST(vt0.lid AS INTEGER), ((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)!=(vt0.lid)))))) ORDER BY CAST(CAST(vt0.lid AS TEXT) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END, vt0.c2 COLLATE BINARY, CAST(vt0.lid AS NUMERIC)))<((CAST(vt0.lid AS INTEGER), ((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)<>(vt0.lid)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.lid AS TEXT) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END, vt0.c2 COLLATE BINARY, CAST(vt0.lid AS NUMERIC)))<((CAST(vt0.lid AS INTEGER), ((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)!=(vt0.lid)))))) ORDER BY CAST(CAST(vt0.lid AS TEXT) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END, vt0.c2 COLLATE BINARY, CAST(vt0.lid AS NUMERIC)))<((CAST(vt0.lid AS INTEGER), ((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)<>(vt0.lid)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.lid AS TEXT) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END, vt0.c2 COLLATE BINARY, CAST(vt0.lid AS NUMERIC)))<((CAST(vt0.lid AS INTEGER), ((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)!=(vt0.lid)))))) ORDER BY CAST(CAST(vt0.lid AS TEXT) AS NUMERIC);
SELECT * FROM t0 WHERE (x'f019');
SELECT SUM(count) FROM (SELECT ((x'f019') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'f019');
SELECT SUM(count) FROM (SELECT ((x'f019') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'f019');
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c68)GLOB(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c68)GLOB(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c68)GLOB(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c68)GLOB(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c68)GLOB(t0.c68)))));
SELECT ALL * FROM t0 WHERE (CASE t0.c68  WHEN CAST(t0.c68 AS TEXT) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN (~ (t0.c68)) THEN t0.c68 COLLATE NOCASE WHEN (t0.c68 IN ()) THEN t0.c68 COLLATE RTRIM ELSE (((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) END) ORDER BY ((t0.c68) NOT BETWEEN ((t0.c68 IN ())) AND ('328538366' COLLATE RTRIM))  NULLS LAST, x'cd62'  NULLS FIRST, ((((t0.c68)>(t0.c68))) BETWEEN ((((-1.97204762E9)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c68  WHEN CAST(t0.c68 AS TEXT) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN (~ (t0.c68)) THEN t0.c68 COLLATE NOCASE WHEN (t0.c68 IN ()) THEN t0.c68 COLLATE RTRIM ELSE (((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68) NOT BETWEEN ((t0.c68 IN ())) AND ('328538366' COLLATE RTRIM))  NULLS LAST, x'cd62'  NULLS FIRST, ((((t0.c68)>(t0.c68))) BETWEEN ((((-1.97204762E9)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL * FROM t0 WHERE (CASE t0.c68  WHEN CAST(t0.c68 AS TEXT) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN (~ (t0.c68)) THEN t0.c68 COLLATE NOCASE WHEN (t0.c68 IN ()) THEN t0.c68 COLLATE RTRIM ELSE (((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) END) ORDER BY ((t0.c68) NOT BETWEEN ((t0.c68 IN ())) AND ('328538366' COLLATE RTRIM))  NULLS LAST, x'cd62'  NULLS FIRST, ((((t0.c68)>(t0.c68))) BETWEEN ((((-1.97204762E9)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c68  WHEN CAST(t0.c68 AS TEXT) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN (~ (t0.c68)) THEN t0.c68 COLLATE NOCASE WHEN (t0.c68 IN ()) THEN t0.c68 COLLATE RTRIM ELSE (((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68) NOT BETWEEN ((t0.c68 IN ())) AND ('328538366' COLLATE RTRIM))  NULLS LAST, x'cd62'  NULLS FIRST, ((((t0.c68)>(t0.c68))) BETWEEN ((((-1.97204762E9)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL * FROM t0 WHERE (CASE t0.c68  WHEN CAST(t0.c68 AS TEXT) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN (~ (t0.c68)) THEN t0.c68 COLLATE NOCASE WHEN (t0.c68 IN ()) THEN t0.c68 COLLATE RTRIM ELSE (((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) END) ORDER BY ((t0.c68) NOT BETWEEN ((t0.c68 IN ())) AND ('328538366' COLLATE RTRIM))  NULLS LAST, x'cd62'  NULLS FIRST, ((((t0.c68)>(t0.c68))) BETWEEN ((((-1.97204762E9)) NOT BETWEEN ((t0.c68)) AND ((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))));
SELECT * FROM t0 WHERE (((0.9540498428585669)=(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) ORDER BY ((((LOWER(DISTINCT t0.c68))OR((t0.c68 IN ()))))AND((NULL IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.9540498428585669)=(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY ((((LOWER(DISTINCT t0.c68))OR((t0.c68 IN ()))))AND((NULL IN ())))  NULLS LAST);
SELECT * FROM t0 WHERE (((0.9540498428585669)=(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) ORDER BY ((((LOWER(DISTINCT t0.c68))OR((t0.c68 IN ()))))AND((NULL IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.9540498428585669)=(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY ((((LOWER(DISTINCT t0.c68))OR((t0.c68 IN ()))))AND((NULL IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c68 COLLATE BINARY THEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) WHEN ((t0.c68)IS(t0.c68)) THEN ((t0.c68) IS FALSE) WHEN ((NULL) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)-(t0.c68)) ELSE (t0.c68 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c68 COLLATE BINARY THEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) WHEN ((t0.c68)IS(t0.c68)) THEN ((t0.c68) IS FALSE) WHEN ((NULL) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)-(t0.c68)) ELSE (t0.c68 IN ()) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c68 COLLATE BINARY THEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) WHEN ((t0.c68)IS(t0.c68)) THEN ((t0.c68) IS FALSE) WHEN ((NULL) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)-(t0.c68)) ELSE (t0.c68 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c68 COLLATE BINARY THEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) WHEN ((t0.c68)IS(t0.c68)) THEN ((t0.c68) IS FALSE) WHEN ((NULL) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)-(t0.c68)) ELSE (t0.c68 IN ()) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c68 COLLATE BINARY THEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) WHEN ((t0.c68)IS(t0.c68)) THEN ((t0.c68) IS FALSE) WHEN ((NULL) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68)-(t0.c68)) ELSE (t0.c68 IN ()) END);
SELECT * FROM t0, vt0 WHERE (LIKELIHOOD(((((((((vt0.lid)AND(vt0.lid)))AND(vt0.c2)))OR(t0.c68)))OR(x'cf53')), 0.09765858194848875));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((((((vt0.lid)AND(vt0.lid)))AND(vt0.c2)))OR(t0.c68)))OR(x'cf53')), 0.09765858194848875)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LIKELIHOOD(((((((((vt0.lid)AND(vt0.lid)))AND(vt0.c2)))OR(t0.c68)))OR(x'cf53')), 0.09765858194848875));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((((((vt0.lid)AND(vt0.lid)))AND(vt0.c2)))OR(t0.c68)))OR(x'cf53')), 0.09765858194848875)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LIKELIHOOD(((((((((vt0.lid)AND(vt0.lid)))AND(vt0.c2)))OR(t0.c68)))OR(x'cf53')), 0.09765858194848875));
SELECT ALL * FROM t0, vt0 WHERE (CASE ((vt0.lid) NOT NULL)  WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid ELSE t0.c68 END THEN TRIM(vt0.c2) END) ORDER BY (((vt0.c1)) BETWEEN (('')) AND ((((vt0.c0)<=(vt0.c0)))))  NULLS LAST, ((vt0.c1)<>(NULL)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.lid) NOT NULL)  WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid ELSE t0.c68 END THEN TRIM(vt0.c2) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1)) BETWEEN (('')) AND ((((vt0.c0)<=(vt0.c0)))))  NULLS LAST, ((vt0.c1)<>(NULL)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (CASE ((vt0.lid) NOT NULL)  WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid ELSE t0.c68 END THEN TRIM(vt0.c2) END) ORDER BY (((vt0.c1)) BETWEEN (('')) AND ((((vt0.c0)<=(vt0.c0)))))  NULLS LAST, ((vt0.c1)<>(NULL)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.lid) NOT NULL)  WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid ELSE t0.c68 END THEN TRIM(vt0.c2) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1)) BETWEEN (('')) AND ((((vt0.c0)<=(vt0.c0)))))  NULLS LAST, ((vt0.c1)<>(NULL)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (CASE ((vt0.lid) NOT NULL)  WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid ELSE t0.c68 END THEN TRIM(vt0.c2) END) ORDER BY (((vt0.c1)) BETWEEN (('')) AND ((((vt0.c0)<=(vt0.c0)))))  NULLS LAST, ((vt0.c1)<>(NULL)) COLLATE RTRIM;
SELECT * FROM t0 WHERE (CAST(((((t0.c68)OR(t0.c68)))AND(t0.c68)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c68)OR(t0.c68)))AND(t0.c68)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((((t0.c68)OR(t0.c68)))AND(t0.c68)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c68)OR(t0.c68)))AND(t0.c68)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((((t0.c68)OR(t0.c68)))AND(t0.c68)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid))) BETWEEN (LIKELY('bJ581<>|4')) AND (vt0.c2))) ORDER BY CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN TRIM(DISTINCT vt0.c1, vt0.c1) THEN CAST(vt0.c1 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR('b镍yt')) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid))) BETWEEN (LIKELY('bJ581<>|4')) AND (vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN TRIM(DISTINCT vt0.c1, vt0.c1) THEN CAST(vt0.c1 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR('b镍yt')) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid))) BETWEEN (LIKELY('bJ581<>|4')) AND (vt0.c2))) ORDER BY CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN TRIM(DISTINCT vt0.c1, vt0.c1) THEN CAST(vt0.c1 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR('b镍yt')) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid))) BETWEEN (LIKELY('bJ581<>|4')) AND (vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN TRIM(DISTINCT vt0.c1, vt0.c1) THEN CAST(vt0.c1 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR('b镍yt')) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.lid)))AND(vt0.lid))) BETWEEN (LIKELY('bJ581<>|4')) AND (vt0.c2))) ORDER BY CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN TRIM(DISTINCT vt0.c1, vt0.c1) THEN CAST(vt0.c1 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR('b镍yt')) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC;
SELECT ALL * FROM t0 WHERE (((-1.091516068E9)&(CASE WHEN t0.c68 THEN t0.c68 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((-1.091516068E9)&(CASE WHEN t0.c68 THEN t0.c68 ELSE NULL END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((-1.091516068E9)&(CASE WHEN t0.c68 THEN t0.c68 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((-1.091516068E9)&(CASE WHEN t0.c68 THEN t0.c68 ELSE NULL END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((-1.091516068E9)&(CASE WHEN t0.c68 THEN t0.c68 ELSE NULL END)));
SELECT * FROM t0 WHERE (((((t0.c68) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c68) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c68) IS FALSE)) NOT NULL));
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN vt0.c2 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN vt0.c2 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN vt0.c2 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN vt0.c2 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)OR(vt0.lid)))AND(vt0.c2))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN vt0.c2 THEN vt0.c2 END)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN ()))%((NOT (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))%((NOT (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN ()))%((NOT (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))%((NOT (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN ()))%((NOT (vt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.lid))) BETWEEN ('-1090175292') AND ((NOT (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.lid))) BETWEEN ('-1090175292') AND ((NOT (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.lid))) BETWEEN ('-1090175292') AND ((NOT (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.lid))) BETWEEN ('-1090175292') AND ((NOT (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.lid))) BETWEEN ('-1090175292') AND ((NOT (vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(json_quote(vt0.c2), 0.24190706111438276)) ORDER BY CASE WHEN ((vt0.c2) IS FALSE) THEN ((t0.c68)+(vt0.c1)) END, (vt0.c1 COLLATE NOCASE IN ()) DESC  NULLS FIRST, CAST(((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(json_quote(vt0.c2), 0.24190706111438276)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c2) IS FALSE) THEN ((t0.c68)+(vt0.c1)) END, (vt0.c1 COLLATE NOCASE IN ()) DESC  NULLS FIRST, CAST(((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(json_quote(vt0.c2), 0.24190706111438276)) ORDER BY CASE WHEN ((vt0.c2) IS FALSE) THEN ((t0.c68)+(vt0.c1)) END, (vt0.c1 COLLATE NOCASE IN ()) DESC  NULLS FIRST, CAST(((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(json_quote(vt0.c2), 0.24190706111438276)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c2) IS FALSE) THEN ((t0.c68)+(vt0.c1)) END, (vt0.c1 COLLATE NOCASE IN ()) DESC  NULLS FIRST, CAST(((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NULL) NOT NULL) IN ())) ORDER BY (- (vt0.lid COLLATE RTRIM)) DESC, -3.118457E7;
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT NULL) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (vt0.lid COLLATE RTRIM)) DESC, -3.118457E7);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NULL) NOT NULL) IN ())) ORDER BY (- (vt0.lid COLLATE RTRIM)) DESC, -3.118457E7;
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT NULL) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (vt0.lid COLLATE RTRIM)) DESC, -3.118457E7);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NULL) NOT NULL) IN ())) ORDER BY (- (vt0.lid COLLATE RTRIM)) DESC, -3.118457E7;
SELECT ALL * FROM vt0, t0 WHERE (((CAST(0Xffffffffcdc1ea9a AS NUMERIC)) IS TRUE)) ORDER BY CAST('<U' AS INTEGER)  NULLS FIRST, ((vt0.c2)>=(vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CAST(0xffffffffcdc1ea9a AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST('<U' AS INTEGER)  NULLS FIRST, ((vt0.c2)>=(vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(0Xffffffffcdc1ea9a AS NUMERIC)) IS TRUE)) ORDER BY CAST('<U' AS INTEGER)  NULLS FIRST, ((vt0.c2)>=(vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CAST(0xffffffffcdc1ea9a AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST('<U' AS INTEGER)  NULLS FIRST, ((vt0.c2)>=(vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(0Xffffffffcdc1ea9a AS NUMERIC)) IS TRUE)) ORDER BY CAST('<U' AS INTEGER)  NULLS FIRST, ((vt0.c2)>=(vt0.c1)) COLLATE NOCASE;
SELECT ALL * FROM vt0, t0 WHERE (((vt0.lid) NOT NULL) COLLATE NOCASE) ORDER BY ((((TRIM(t0.c68))OR(((vt0.lid) NOT BETWEEN (vt0.c2) AND (1678068296)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c68 WHEN 0X0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((TRIM(t0.c68))OR(((vt0.lid) NOT BETWEEN (vt0.c2) AND (1678068296)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c68 WHEN 0X0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0, t0 WHERE (((vt0.lid) NOT NULL) COLLATE NOCASE) ORDER BY ((((TRIM(t0.c68))OR(((vt0.lid) NOT BETWEEN (vt0.c2) AND (1678068296)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c68 WHEN 0X0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((TRIM(t0.c68))OR(((vt0.lid) NOT BETWEEN (vt0.c2) AND (1678068296)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c68 WHEN 0X0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0, t0 WHERE (((vt0.lid) NOT NULL) COLLATE NOCASE) ORDER BY ((((TRIM(t0.c68))OR(((vt0.lid) NOT BETWEEN (vt0.c2) AND (1678068296)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c68 WHEN 0X0 THEN vt0.c0 END));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c2) BETWEEN (0.9217271422996152) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c2) BETWEEN (0.9217271422996152) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c2) BETWEEN (0.9217271422996152) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c2) BETWEEN (0.9217271422996152) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c2) BETWEEN (0.9217271422996152) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-43555331');
SELECT SUM(count) FROM (SELECT ALL (('-43555331') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-43555331');
SELECT SUM(count) FROM (SELECT ALL (('-43555331') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-43555331');
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)OR(t0.c68))) ISNULL)) ORDER BY ((CAST(t0.c68 AS REAL))>>(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) DESC, (((t0.c68)) NOT BETWEEN (((((t0.c68))>=((t0.c68))))) AND (((NOT (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)OR(t0.c68))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c68 AS REAL))>>(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) DESC, (((t0.c68)) NOT BETWEEN (((((t0.c68))>=((t0.c68))))) AND (((NOT (t0.c68))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)OR(t0.c68))) ISNULL)) ORDER BY ((CAST(t0.c68 AS REAL))>>(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) DESC, (((t0.c68)) NOT BETWEEN (((((t0.c68))>=((t0.c68))))) AND (((NOT (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)OR(t0.c68))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c68 AS REAL))>>(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) DESC, (((t0.c68)) NOT BETWEEN (((((t0.c68))>=((t0.c68))))) AND (((NOT (t0.c68))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)OR(t0.c68))) ISNULL)) ORDER BY ((CAST(t0.c68 AS REAL))>>(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) DESC, (((t0.c68)) NOT BETWEEN (((((t0.c68))>=((t0.c68))))) AND (((NOT (t0.c68)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY UNLIKELY(DISTINCT vt0.c2 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT vt0.c2 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY UNLIKELY(DISTINCT vt0.c2 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT vt0.c2 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY UNLIKELY(DISTINCT vt0.c2 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ('1561888054');
SELECT SUM(count) FROM (SELECT ALL (('1561888054') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('1561888054');
SELECT SUM(count) FROM (SELECT ALL (('1561888054') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('1561888054');
SELECT COUNT(*) FROM vt0, t0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((x'') ISNULL));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (+ (CASE vt0.c2  WHEN vt0.lid THEN vt0.c0 END)) WHERE (HEX(DISTINCT vt0.c2 COLLATE RTRIM)) ORDER BY t0.c68, CASE WHEN 0.9694204850552948 THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CAST(0.034578095788823204 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT vt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (+ (CASE vt0.c2  WHEN vt0.lid THEN vt0.c0 END)) ORDER BY t0.c68, CASE WHEN 0.9694204850552948 THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CAST(0.034578095788823204 AS NUMERIC) END DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (+ (CASE vt0.c2  WHEN vt0.lid THEN vt0.c0 END)) WHERE (HEX(DISTINCT vt0.c2 COLLATE RTRIM)) ORDER BY t0.c68, CASE WHEN 0.9694204850552948 THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CAST(0.034578095788823204 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT vt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (+ (CASE vt0.c2  WHEN vt0.lid THEN vt0.c0 END)) ORDER BY t0.c68, CASE WHEN 0.9694204850552948 THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CAST(0.034578095788823204 AS NUMERIC) END DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (+ (CASE vt0.c2  WHEN vt0.lid THEN vt0.c0 END)) WHERE (HEX(DISTINCT vt0.c2 COLLATE RTRIM)) ORDER BY t0.c68, CASE WHEN 0.9694204850552948 THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CAST(0.034578095788823204 AS NUMERIC) END DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ('-842119426' IN ()) WHERE (((((((((vt0.c0)AND(((t0.c68) BETWEEN (vt0.lid) AND (vt0.c1)))))OR(LIKELY(t0.c68))))AND(CAST(vt0.lid AS TEXT))))OR(((((364875145)OR(NULL)))AND(vt0.c0))))) ORDER BY (~ (((t0.c68)*(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((t0.c68) BETWEEN (vt0.lid) AND (vt0.c1)))))OR(LIKELY(t0.c68))))AND(CAST(vt0.lid AS TEXT))))OR(((((364875145)OR(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ('-842119426' IN ()) ORDER BY (~ (((t0.c68)*(vt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ('-842119426' IN ()) WHERE (((((((((vt0.c0)AND(((t0.c68) BETWEEN (vt0.lid) AND (vt0.c1)))))OR(LIKELY(t0.c68))))AND(CAST(vt0.lid AS TEXT))))OR(((((364875145)OR(NULL)))AND(vt0.c0))))) ORDER BY (~ (((t0.c68)*(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((t0.c68) BETWEEN (vt0.lid) AND (vt0.c1)))))OR(LIKELY(t0.c68))))AND(CAST(vt0.lid AS TEXT))))OR(((((364875145)OR(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ('-842119426' IN ()) ORDER BY (~ (((t0.c68)*(vt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ('-842119426' IN ()) WHERE (((((((((vt0.c0)AND(((t0.c68) BETWEEN (vt0.lid) AND (vt0.c1)))))OR(LIKELY(t0.c68))))AND(CAST(vt0.lid AS TEXT))))OR(((((364875145)OR(NULL)))AND(vt0.c0))))) ORDER BY (~ (((t0.c68)*(vt0.c2)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.lid)) BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c2) IS TRUE))))) ORDER BY ((+ (vt0.lid)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid)) BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c2) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.lid)) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.lid)) BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c2) IS TRUE))))) ORDER BY ((+ (vt0.lid)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid)) BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c2) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.lid)) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.lid)) BETWEEN ((((vt0.lid) IS FALSE))) AND ((((vt0.c2) IS TRUE))))) ORDER BY ((+ (vt0.lid)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON vt0.lid WHERE (vt0.lid) ORDER BY ((((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c2)))OR(vt0.lid)))AND(vt0.c0)))AND(vt0.c0)))IS NOT(((vt0.c1) BETWEEN (vt0.c1) AND (0.4964707698103972)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.lid ORDER BY ((((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c2)))OR(vt0.lid)))AND(vt0.c0)))AND(vt0.c0)))IS NOT(((vt0.c1) BETWEEN (vt0.c1) AND (0.4964707698103972)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON vt0.lid WHERE (vt0.lid) ORDER BY ((((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c2)))OR(vt0.lid)))AND(vt0.c0)))AND(vt0.c0)))IS NOT(((vt0.c1) BETWEEN (vt0.c1) AND (0.4964707698103972)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.lid ORDER BY ((((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c2)))OR(vt0.lid)))AND(vt0.c0)))AND(vt0.c0)))IS NOT(((vt0.c1) BETWEEN (vt0.c1) AND (0.4964707698103972)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON vt0.lid WHERE (vt0.lid) ORDER BY ((((((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c2)))OR(vt0.lid)))AND(vt0.c0)))AND(vt0.c0)))IS NOT(((vt0.c1) BETWEEN (vt0.c1) AND (0.4964707698103972)))) ASC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((((~ (vt0.lid)))GLOB(((vt0.c2)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.lid)))GLOB(((vt0.c2)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((~ (vt0.lid)))GLOB(((vt0.c2)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.lid)))GLOB(((vt0.c2)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((~ (vt0.lid)))GLOB(((vt0.c2)IS(vt0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((LIKELIHOOD(vt0.lid, 0.04630966729652641))IS NOT(-1.901722096E9)) DESC, ((vt0.c2) NOT NULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((LIKELIHOOD(vt0.lid, 0.04630966729652641))IS NOT(-1.901722096E9)) DESC, ((vt0.c2) NOT NULL) COLLATE BINARY ASC);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((LIKELIHOOD(vt0.lid, 0.04630966729652641))IS NOT(-1.901722096E9)) DESC, ((vt0.c2) NOT NULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((LIKELIHOOD(vt0.lid, 0.04630966729652641))IS NOT(-1.901722096E9)) DESC, ((vt0.c2) NOT NULL) COLLATE BINARY ASC);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((LIKELIHOOD(vt0.lid, 0.04630966729652641))IS NOT(-1.901722096E9)) DESC, ((vt0.c2) NOT NULL) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c68)|(t0.c68)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68)|(t0.c68)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c68)|(t0.c68)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68)|(t0.c68)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c68)|(t0.c68)) AS REAL));
SELECT ALL * FROM vt0, t0 WHERE ((NOT (vt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (vt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (vt0.c2)) COLLATE NOCASE);
SELECT * FROM t0 WHERE (((json_array_length(t0.c68, t0.c68)) BETWEEN (670704974) AND (t0.c68 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((json_array_length(t0.c68, t0.c68)) BETWEEN (670704974) AND (t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((json_array_length(t0.c68, t0.c68)) BETWEEN (670704974) AND (t0.c68 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((json_array_length(t0.c68, t0.c68)) BETWEEN (670704974) AND (t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (NULL))) ORDER BY ((CAST(vt0.lid AS INTEGER)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(vt0.lid AS INTEGER)) IS FALSE) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (NULL))) ORDER BY ((CAST(vt0.lid AS INTEGER)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(vt0.lid AS INTEGER)) IS FALSE) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (NULL))) ORDER BY ((CAST(vt0.lid AS INTEGER)) IS FALSE) ASC;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((vt0.c2 IN ())) AND (0x1606ad32)) WHERE ((((~ (''))) NOT NULL)) ORDER BY (((vt0.c2)*(vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((~ (''))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((vt0.c2 IN ())) AND (0X1606ad32)) ORDER BY (((vt0.c2)*(vt0.c2)) IN ()));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((vt0.c2 IN ())) AND (0x1606ad32)) WHERE ((((~ (''))) NOT NULL)) ORDER BY (((vt0.c2)*(vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((~ (''))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((vt0.c2 IN ())) AND (0X1606ad32)) ORDER BY (((vt0.c2)*(vt0.c2)) IN ()));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((vt0.c2 IN ())) AND (0x1606ad32)) WHERE ((((~ (''))) NOT NULL)) ORDER BY (((vt0.c2)*(vt0.c2)) IN ());
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.13951659596858934);
SELECT SUM(count) FROM (SELECT ((0.13951659596858934) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.13951659596858934);
SELECT SUM(count) FROM (SELECT ((0.13951659596858934) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.13951659596858934);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))&(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))&(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))&(vt0.c0)));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c68))>=((t0.c68))) THEN CAST(t0.c68 AS BLOB) WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN CASE WHEN t0.c68 THEN NULL ELSE t0.c68 END WHEN t0.c68 COLLATE BINARY THEN (~ (t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c68))>=((t0.c68))) THEN CAST(t0.c68 AS BLOB) WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN CASE WHEN t0.c68 THEN NULL ELSE t0.c68 END WHEN t0.c68 COLLATE BINARY THEN (~ (t0.c68)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c68))>=((t0.c68))) THEN CAST(t0.c68 AS BLOB) WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN CASE WHEN t0.c68 THEN NULL ELSE t0.c68 END WHEN t0.c68 COLLATE BINARY THEN (~ (t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c68))>=((t0.c68))) THEN CAST(t0.c68 AS BLOB) WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN CASE WHEN t0.c68 THEN NULL ELSE t0.c68 END WHEN t0.c68 COLLATE BINARY THEN (~ (t0.c68)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c68))>=((t0.c68))) THEN CAST(t0.c68 AS BLOB) WHEN ((((t0.c68)OR(t0.c68)))OR(t0.c68)) THEN CASE WHEN t0.c68 THEN NULL ELSE t0.c68 END WHEN t0.c68 COLLATE BINARY THEN (~ (t0.c68)) END);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c2 AS BLOB))/(((((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS BLOB))/(((((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c2 AS BLOB))/(((((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS BLOB))/(((((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c2 AS BLOB))/(((((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))AND(vt0.lid)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((0.9293213335563435) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.9293213335563435) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((0.9293213335563435) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.9293213335563435) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((0.9293213335563435) ISNULL))));
SELECT ALL * FROM t0 INDEXED BY i29 INNER JOIN vt0 ON (((vt0.c2, 0.7319238203996643, t0.c68, t0.c68, -1242285493)) NOT BETWEEN (((NOT (vt0.c2)), ((t0.c68) IS FALSE), json_array_length(t0.c68), ((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)), vt0.lid)) AND (((((vt0.c0))<>((t0.c68))), CAST(vt0.c0 AS REAL), (vt0.lid IN (vt0.c2)), ((t0.c68) NOTNULL), json_quote('D')))) WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN vt0.lid WHEN t0.c68 THEN vt0.c2 ELSE 0.7712101434860981 END)LIKE(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN vt0.lid WHEN t0.c68 THEN vt0.c2 ELSE 0.7712101434860981 END)LIKE(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INDEXED BY i29 INNER JOIN vt0 ON (((vt0.c2, 0.7319238203996643, t0.c68, t0.c68, -1242285493)) NOT BETWEEN (((NOT (vt0.c2)), ((t0.c68) IS FALSE), json_array_length(t0.c68), ((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)), vt0.lid)) AND (((((vt0.c0))!=((t0.c68))), CAST(vt0.c0 AS REAL), (vt0.lid IN (vt0.c2)), ((t0.c68) NOTNULL), json_quote('D')))));
SELECT ALL * FROM t0 INDEXED BY i29 INNER JOIN vt0 ON (((vt0.c2, 0.7319238203996643, t0.c68, t0.c68, -1242285493)) NOT BETWEEN (((NOT (vt0.c2)), ((t0.c68) IS FALSE), json_array_length(t0.c68), ((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)), vt0.lid)) AND (((((vt0.c0))<>((t0.c68))), CAST(vt0.c0 AS REAL), (vt0.lid IN (vt0.c2)), ((t0.c68) NOTNULL), json_quote('D')))) WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN vt0.lid WHEN t0.c68 THEN vt0.c2 ELSE 0.7712101434860981 END)LIKE(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN vt0.lid WHEN t0.c68 THEN vt0.c2 ELSE 0.7712101434860981 END)LIKE(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INDEXED BY i29 INNER JOIN vt0 ON (((vt0.c2, 0.7319238203996643, t0.c68, t0.c68, -1242285493)) NOT BETWEEN (((NOT (vt0.c2)), ((t0.c68) IS FALSE), json_array_length(t0.c68), ((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)), vt0.lid)) AND (((((vt0.c0))!=((t0.c68))), CAST(vt0.c0 AS REAL), (vt0.lid IN (vt0.c2)), ((t0.c68) NOTNULL), json_quote('D')))));
SELECT ALL * FROM t0 INDEXED BY i29 INNER JOIN vt0 ON (((vt0.c2, 0.7319238203996643, t0.c68, t0.c68, -1242285493)) NOT BETWEEN (((NOT (vt0.c2)), ((t0.c68) IS FALSE), json_array_length(t0.c68), ((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)), vt0.lid)) AND (((((vt0.c0))<>((t0.c68))), CAST(vt0.c0 AS REAL), (vt0.lid IN (vt0.c2)), ((t0.c68) NOTNULL), json_quote('D')))) WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN vt0.lid WHEN t0.c68 THEN vt0.c2 ELSE 0.7712101434860981 END)LIKE(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c68 IN (vt0.c1))) BETWEEN (((vt0.c2)IS NOT(''))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68 IN (vt0.c1))) BETWEEN (((vt0.c2)IS NOT(''))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c68 IN (vt0.c1))) BETWEEN (((vt0.c2)IS NOT(''))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68 IN (vt0.c1))) BETWEEN (((vt0.c2)IS NOT(''))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c68 IN (vt0.c1))) BETWEEN (((vt0.c2)IS NOT(''))) AND (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((UPPER(vt0.c1))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid)))))OR(CASE t0.c68  WHEN vt0.c0 THEN t0.c68 END)))AND(0.41881080513475366)))AND(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END)))OR(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((NULL)<=(t0.c68))))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((((UPPER(vt0.c1))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid)))))OR(CASE t0.c68  WHEN vt0.c0 THEN t0.c68 END)))AND(0.41881080513475366)))AND(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END)))OR(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((NULL)<=(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((UPPER(vt0.c1))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid)))))OR(CASE t0.c68  WHEN vt0.c0 THEN t0.c68 END)))AND(0.41881080513475366)))AND(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END)))OR(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((NULL)<=(t0.c68))))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((((UPPER(vt0.c1))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid)))))OR(CASE t0.c68  WHEN vt0.c0 THEN t0.c68 END)))AND(0.41881080513475366)))AND(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END)))OR(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((NULL)<=(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((UPPER(vt0.c1))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid)))))OR(CASE t0.c68  WHEN vt0.c0 THEN t0.c68 END)))AND(0.41881080513475366)))AND(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END)))OR(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((NULL)<=(t0.c68))))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 END IN ());
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c68 AS INTEGER)))>=(((- (t0.c68)))))) ORDER BY json_quote(0.09675728660856175) COLLATE RTRIM, ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS INTEGER)))>=(((- (t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY json_quote(0.09675728660856175) COLLATE RTRIM, ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c68 AS INTEGER)))>=(((- (t0.c68)))))) ORDER BY json_quote(0.09675728660856175) COLLATE RTRIM, ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS INTEGER)))>=(((- (t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY json_quote(0.09675728660856175) COLLATE RTRIM, ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c68 AS INTEGER)))>=(((- (t0.c68)))))) ORDER BY json_quote(0.09675728660856175) COLLATE RTRIM, ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c68) AND (-1.814763908E9)))<<(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.lid)))) WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c68) AND (-1.814763908E9)))<<(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.lid)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c68) AND (-1.814763908E9)))<<(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.lid)))) WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c68) AND (-1.814763908E9)))<<(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.lid)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c68) AND (-1.814763908E9)))<<(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.lid)))) WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c68))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c68))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c68))) ISNULL));
SELECT ALL * FROM t0 WHERE ((~ (LIKELIHOOD(t0.c68, 0.4930330686568434)))) ORDER BY (0.23765180952773224 IN ()) DESC  NULLS LAST, NULLIF(DISTINCT t0.c68, t0.c68) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(t0.c68, 0.4930330686568434)))) IS TRUE)  as count FROM t0 ORDER BY (0.23765180952773224 IN ()) DESC  NULLS LAST, NULLIF(DISTINCT t0.c68, t0.c68) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ((~ (LIKELIHOOD(t0.c68, 0.4930330686568434)))) ORDER BY (0.23765180952773224 IN ()) DESC  NULLS LAST, NULLIF(DISTINCT t0.c68, t0.c68) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(t0.c68, 0.4930330686568434)))) IS TRUE)  as count FROM t0 ORDER BY (0.23765180952773224 IN ()) DESC  NULLS LAST, NULLIF(DISTINCT t0.c68, t0.c68) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ((~ (LIKELIHOOD(t0.c68, 0.4930330686568434)))) ORDER BY (0.23765180952773224 IN ()) DESC  NULLS LAST, NULLIF(DISTINCT t0.c68, t0.c68) COLLATE RTRIM;
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c1 AS TEXT))>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT))>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.lid))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c1 AS TEXT))>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT))>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.lid))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c1 AS TEXT))>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.lid)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.lid COLLATE NOCASE  WHEN ((vt0.c1) IS TRUE) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END WHEN vt0.c2 THEN '[VR/Y' WHEN LTRIM(vt0.c2, vt0.lid) THEN CAST(vt0.lid AS REAL) ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN 0X30cf95a4 WHEN x'0e15' THEN vt0.c0 END END) ORDER BY CAST((vt0.c2 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.lid COLLATE NOCASE  WHEN ((vt0.c1) IS TRUE) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END WHEN vt0.c2 THEN '[VR/Y' WHEN LTRIM(vt0.c2, vt0.lid) THEN CAST(vt0.lid AS REAL) ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN 0x30cf95a4 WHEN x'0e15' THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c2 IN ()) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.lid COLLATE NOCASE  WHEN ((vt0.c1) IS TRUE) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END WHEN vt0.c2 THEN '[VR/Y' WHEN LTRIM(vt0.c2, vt0.lid) THEN CAST(vt0.lid AS REAL) ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN 0X30cf95a4 WHEN x'0e15' THEN vt0.c0 END END) ORDER BY CAST((vt0.c2 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.lid COLLATE NOCASE  WHEN ((vt0.c1) IS TRUE) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END WHEN vt0.c2 THEN '[VR/Y' WHEN LTRIM(vt0.c2, vt0.lid) THEN CAST(vt0.lid AS REAL) ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN 0x30cf95a4 WHEN x'0e15' THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c2 IN ()) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.lid COLLATE NOCASE  WHEN ((vt0.c1) IS TRUE) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END WHEN vt0.c2 THEN '[VR/Y' WHEN LTRIM(vt0.c2, vt0.lid) THEN CAST(vt0.lid AS REAL) ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN 0X30cf95a4 WHEN x'0e15' THEN vt0.c0 END END) ORDER BY CAST((vt0.c2 IN ()) AS NUMERIC) DESC;
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)=(vt0.c2))) AND (((((((((vt0.lid)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)=(vt0.c2))) AND (((((((((vt0.lid)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)=(vt0.c2))) AND (((((((((vt0.lid)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)=(vt0.c2))) AND (((((((((vt0.lid)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)=(vt0.c2))) AND (((((((((vt0.lid)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c2) IS TRUE) IN (0.7089061091661815))) ORDER BY (((((NOT (vt0.lid)))AND(((vt0.c1)%(vt0.c0)))))OR(((((((((((((vt0.lid)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1)))AND(vt0.lid)))) DESC, ((vt0.c1) BETWEEN (x'') AND (vt0.lid)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2) IS TRUE) IN (0.7089061091661815))) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.lid)))AND(((vt0.c1)%(vt0.c0)))))OR(((((((((((((vt0.lid)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1)))AND(vt0.lid)))) DESC, ((vt0.c1) BETWEEN (x'') AND (vt0.lid)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c2) IS TRUE) IN (0.7089061091661815))) ORDER BY (((((NOT (vt0.lid)))AND(((vt0.c1)%(vt0.c0)))))OR(((((((((((((vt0.lid)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1)))AND(vt0.lid)))) DESC, ((vt0.c1) BETWEEN (x'') AND (vt0.lid)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2) IS TRUE) IN (0.7089061091661815))) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.lid)))AND(((vt0.c1)%(vt0.c0)))))OR(((((((((((((vt0.lid)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1)))AND(vt0.lid)))) DESC, ((vt0.c1) BETWEEN (x'') AND (vt0.lid)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c2) IS TRUE) IN (0.7089061091661815))) ORDER BY (((((NOT (vt0.lid)))AND(((vt0.c1)%(vt0.c0)))))OR(((((((((((((vt0.lid)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c1)))AND(vt0.lid)))) DESC, ((vt0.c1) BETWEEN (x'') AND (vt0.lid)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c1)<>(NULL)))AND((t0.c68 IN (vt0.c2, t0.c68)))))OR((t0.c68 IN ()))) WHERE (((((vt0.c1)<(t0.c68)))|((((vt0.c2, vt0.c1, vt0.lid, vt0.c2, '0.963882810347687', vt0.c1, vt0.c2))<=((vt0.c0, vt0.c0, vt0.c0, t0.c68, vt0.c1, '-1090175292', vt0.c1)))))) ORDER BY (((t0.c68)) BETWEEN ((((((vt0.c0)AND(vt0.c2)))OR(0.9579191725472721)))) AND ((((t0.c68) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<(t0.c68)))|((((vt0.c2, vt0.c1, vt0.lid, vt0.c2, '0.963882810347687', vt0.c1, vt0.c2))<=((vt0.c0, vt0.c0, vt0.c0, t0.c68, vt0.c1, '-1090175292', vt0.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c1)!=(NULL)))AND((t0.c68 IN (vt0.c2, t0.c68)))))OR((t0.c68 IN ()))) ORDER BY (((t0.c68)) BETWEEN ((((((vt0.c0)AND(vt0.c2)))OR(0.9579191725472721)))) AND ((((t0.c68) ISNULL)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c1)<>(NULL)))AND((t0.c68 IN (vt0.c2, t0.c68)))))OR((t0.c68 IN ()))) WHERE (((((vt0.c1)<(t0.c68)))|((((vt0.c2, vt0.c1, vt0.lid, vt0.c2, '0.963882810347687', vt0.c1, vt0.c2))<=((vt0.c0, vt0.c0, vt0.c0, t0.c68, vt0.c1, '-1090175292', vt0.c1)))))) ORDER BY (((t0.c68)) BETWEEN ((((((vt0.c0)AND(vt0.c2)))OR(0.9579191725472721)))) AND ((((t0.c68) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<(t0.c68)))|((((vt0.c2, vt0.c1, vt0.lid, vt0.c2, '0.963882810347687', vt0.c1, vt0.c2))<=((vt0.c0, vt0.c0, vt0.c0, t0.c68, vt0.c1, '-1090175292', vt0.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c1)!=(NULL)))AND((t0.c68 IN (vt0.c2, t0.c68)))))OR((t0.c68 IN ()))) ORDER BY (((t0.c68)) BETWEEN ((((((vt0.c0)AND(vt0.c2)))OR(0.9579191725472721)))) AND ((((t0.c68) ISNULL)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c1)<>(NULL)))AND((t0.c68 IN (vt0.c2, t0.c68)))))OR((t0.c68 IN ()))) WHERE (((((vt0.c1)<(t0.c68)))|((((vt0.c2, vt0.c1, vt0.lid, vt0.c2, '0.963882810347687', vt0.c1, vt0.c2))<=((vt0.c0, vt0.c0, vt0.c0, t0.c68, vt0.c1, '-1090175292', vt0.c1)))))) ORDER BY (((t0.c68)) BETWEEN ((((((vt0.c0)AND(vt0.c2)))OR(0.9579191725472721)))) AND ((((t0.c68) ISNULL))));
SELECT COUNT(*) FROM t0 WHERE (UPPER(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68))));
SELECT * FROM t0 WHERE (CAST(((t0.c68)>>(t0.c68)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c68)>>(t0.c68)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c68)>>(t0.c68)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c68)>>(t0.c68)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c68)>>(t0.c68)) AS NUMERIC));
SELECT * FROM vt0 WHERE (vt0.lid COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.lid COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.lid COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.lid COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.lid COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE ((((((((((t0.c68 IN ()))AND(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))AND(CAST(t0.c68 AS INTEGER))))OR((((t0.c68))<((t0.c68))))))OR(((t0.c68) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c68 IN ()))AND(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))AND(CAST(t0.c68 AS INTEGER))))OR((((t0.c68))<((t0.c68))))))OR(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((((t0.c68 IN ()))AND(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))AND(CAST(t0.c68 AS INTEGER))))OR((((t0.c68))<((t0.c68))))))OR(((t0.c68) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c68 IN ()))AND(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))AND(CAST(t0.c68 AS INTEGER))))OR((((t0.c68))<((t0.c68))))))OR(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((((t0.c68 IN ()))AND(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))AND(CAST(t0.c68 AS INTEGER))))OR((((t0.c68))<((t0.c68))))))OR(((t0.c68) NOT NULL))));
SELECT * FROM vt0, t0 WHERE ((((vt0.c1, vt0.lid, vt0.c1))<((vt0.c0, vt0.c0, t0.c68))) COLLATE BINARY) ORDER BY CASE WHEN '-1642370515' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.lid, vt0.c1))<((vt0.c0, vt0.c0, t0.c68))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN '-1642370515' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END END ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c1, vt0.lid, vt0.c1))<((vt0.c0, vt0.c0, t0.c68))) COLLATE BINARY) ORDER BY CASE WHEN '-1642370515' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.lid, vt0.c1))<((vt0.c0, vt0.c0, t0.c68))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN '-1642370515' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END END ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c1, vt0.lid, vt0.c1))<((vt0.c0, vt0.c0, t0.c68))) COLLATE BINARY) ORDER BY CASE WHEN '-1642370515' THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END END ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((NOT (t0.c68 COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))+(((vt0.lid) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))+(((vt0.lid) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (t0.c68 COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))+(((vt0.lid) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))+(((vt0.lid) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (t0.c68 COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))+(((vt0.lid) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.lid  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)GLOB(vt0.c2)))-(((vt0.c2)<>(t0.c68))))) ORDER BY ((((vt0.c2)OR((vt0.lid IN ()))))OR(((vt0.lid)+(vt0.c0))))  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)GLOB(vt0.c2)))-(((vt0.c2)!=(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c2)OR((vt0.lid IN ()))))OR(((vt0.lid)+(vt0.c0))))  NULLS LAST, NULL);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)GLOB(vt0.c2)))-(((vt0.c2)<>(t0.c68))))) ORDER BY ((((vt0.c2)OR((vt0.lid IN ()))))OR(((vt0.lid)+(vt0.c0))))  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)GLOB(vt0.c2)))-(((vt0.c2)!=(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c2)OR((vt0.lid IN ()))))OR(((vt0.lid)+(vt0.c0))))  NULLS LAST, NULL);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)GLOB(vt0.c2)))-(((vt0.c2)<>(t0.c68))))) ORDER BY ((((vt0.c2)OR((vt0.lid IN ()))))OR(((vt0.lid)+(vt0.c0))))  NULLS LAST, NULL;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) NOT NULL)) ORDER BY (- (t0.c68)) COLLATE NOCASE, CAST(((t0.c68)IS NOT(t0.c68)) AS TEXT), (+ (((t0.c68) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c68)) COLLATE NOCASE, CAST(((t0.c68)IS NOT(t0.c68)) AS TEXT), (+ (((t0.c68) NOTNULL))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) NOT NULL)) ORDER BY (- (t0.c68)) COLLATE NOCASE, CAST(((t0.c68)IS NOT(t0.c68)) AS TEXT), (+ (((t0.c68) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c68)) COLLATE NOCASE, CAST(((t0.c68)IS NOT(t0.c68)) AS TEXT), (+ (((t0.c68) NOTNULL))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) NOT NULL)) ORDER BY (- (t0.c68)) COLLATE NOCASE, CAST(((t0.c68)IS NOT(t0.c68)) AS TEXT), (+ (((t0.c68) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.lid)<(vt0.c1)) AS INTEGER), ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'f62b9bbe')))AND(((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1)OR(vt0.lid)))))OR(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))))AND(((vt0.c2)<>(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.lid)<(vt0.c1)) AS INTEGER), ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'f62b9bbe')))AND(((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1)OR(vt0.lid)))))OR(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))))AND(((vt0.c2)<>(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.lid)<(vt0.c1)) AS INTEGER), ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'f62b9bbe')))AND(((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1)OR(vt0.lid)))))OR(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))))AND(((vt0.c2)<>(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.lid)<(vt0.c1)) AS INTEGER), ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'f62b9bbe')))AND(((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1)OR(vt0.lid)))))OR(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))))AND(((vt0.c2)<>(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.lid)<(vt0.c1)) AS INTEGER), ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'f62b9bbe')))AND(((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1)OR(vt0.lid)))))OR(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))))AND(((vt0.c2)<>(vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c68)AND(t0.c68)))AND(t0.c68)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c68)AND(t0.c68)))AND(t0.c68)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c68)AND(t0.c68)))AND(t0.c68)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c68)AND(t0.c68)))AND(t0.c68)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c68)AND(t0.c68)))AND(t0.c68)) AS BLOB));
SELECT ALL * FROM t0 WHERE ((('1104668197')!=(((((t0.c68)OR(t0.c68)))OR(t0.c68))))) ORDER BY (((t0.c68)) BETWEEN (('-866325415')) AND (((0.9326450436644559 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('1104668197')<>(((((t0.c68)OR(t0.c68)))OR(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) BETWEEN (('-866325415')) AND (((0.9326450436644559 IN ())))) DESC);
SELECT ALL * FROM t0 WHERE ((('1104668197')!=(((((t0.c68)OR(t0.c68)))OR(t0.c68))))) ORDER BY (((t0.c68)) BETWEEN (('-866325415')) AND (((0.9326450436644559 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('1104668197')<>(((((t0.c68)OR(t0.c68)))OR(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) BETWEEN (('-866325415')) AND (((0.9326450436644559 IN ())))) DESC);
SELECT ALL * FROM t0 WHERE ((('1104668197')!=(((((t0.c68)OR(t0.c68)))OR(t0.c68))))) ORDER BY (((t0.c68)) BETWEEN (('-866325415')) AND (((0.9326450436644559 IN ())))) DESC;
SELECT * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (t0.c68);
SELECT * FROM vt0, t0 WHERE (vt0.lid) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (vt0.lid) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (vt0.lid) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))GLOB((vt0.c2 IN ())))) ORDER BY ((vt0.c1)>(vt0.lid)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))GLOB((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((vt0.c1)>(vt0.lid)) COLLATE RTRIM ASC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))GLOB((vt0.c2 IN ())))) ORDER BY ((vt0.c1)>(vt0.lid)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))GLOB((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((vt0.c1)>(vt0.lid)) COLLATE RTRIM ASC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))GLOB((vt0.c2 IN ())))) ORDER BY ((vt0.c1)>(vt0.lid)) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68)) BETWEEN ((-2030504310)) AND ((vt0.c0))) IN (((t0.c68) NOT BETWEEN (t0.c68) AND ('')), ((vt0.c0)>(vt0.c0))))) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(t0.c68)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)) BETWEEN ((-2030504310)) AND ((vt0.c0))) IN (((t0.c68) NOT BETWEEN (t0.c68) AND ('')), ((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(t0.c68)) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68)) BETWEEN ((-2030504310)) AND ((vt0.c0))) IN (((t0.c68) NOT BETWEEN (t0.c68) AND ('')), ((vt0.c0)>(vt0.c0))))) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(t0.c68)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)) BETWEEN ((-2030504310)) AND ((vt0.c0))) IN (((t0.c68) NOT BETWEEN (t0.c68) AND ('')), ((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(t0.c68)) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c68)) BETWEEN ((-2030504310)) AND ((vt0.c0))) IN (((t0.c68) NOT BETWEEN (t0.c68) AND ('')), ((vt0.c0)>(vt0.c0))))) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(t0.c68)) AS REAL)  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.lid, ((0.9144116566013645) IS FALSE), (((vt0.c1))<=((vt0.c0)))))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.lid)))OR('-629455612')), ((((0.8894432455131207)AND(vt0.c1)))AND(vt0.c0)), ((((t0.c68)AND(vt0.c0)))OR(vt0.c1))))) WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END IN ())) ORDER BY t0.c68 DESC  NULLS LAST, 'N>' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.lid, ((0.9144116566013645) IS FALSE), (((vt0.c1))<=((vt0.c0)))))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.lid)))OR('-629455612')), ((((0.8894432455131207)AND(vt0.c1)))AND(vt0.c0)), ((((t0.c68)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY t0.c68 DESC  NULLS LAST, 'N>' ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.lid, ((0.9144116566013645) IS FALSE), (((vt0.c1))<=((vt0.c0)))))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.lid)))OR('-629455612')), ((((0.8894432455131207)AND(vt0.c1)))AND(vt0.c0)), ((((t0.c68)AND(vt0.c0)))OR(vt0.c1))))) WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END IN ())) ORDER BY t0.c68 DESC  NULLS LAST, 'N>' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.lid, ((0.9144116566013645) IS FALSE), (((vt0.c1))<=((vt0.c0)))))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.lid)))OR('-629455612')), ((((0.8894432455131207)AND(vt0.c1)))AND(vt0.c0)), ((((t0.c68)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY t0.c68 DESC  NULLS LAST, 'N>' ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.lid, ((0.9144116566013645) IS FALSE), (((vt0.c1))<=((vt0.c0)))))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.lid)))OR('-629455612')), ((((0.8894432455131207)AND(vt0.c1)))AND(vt0.c0)), ((((t0.c68)AND(vt0.c0)))OR(vt0.c1))))) WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END IN ())) ORDER BY t0.c68 DESC  NULLS LAST, 'N>' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))+(CAST(vt0.lid AS REAL)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c1))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL))+(CAST(vt0.lid AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c1))))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))+(CAST(vt0.lid AS REAL)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c1))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL))+(CAST(vt0.lid AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c1))))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))+(CAST(vt0.lid AS REAL)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c1))))))  NULLS FIRST;
SELECT * FROM vt0 WHERE ('816493457') ORDER BY ((vt0.c0)|(vt0.lid)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('816493457') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)|(vt0.lid)) COLLATE BINARY);
SELECT * FROM vt0 WHERE ('816493457') ORDER BY ((vt0.c0)|(vt0.lid)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('816493457') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)|(vt0.lid)) COLLATE BINARY);
SELECT * FROM vt0 WHERE ('816493457') ORDER BY ((vt0.c0)|(vt0.lid)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1, vt0.c2, vt0.c2))=((vt0.lid, vt0.c2, vt0.c0))))OR(CASE vt0.c2  WHEN vt0.c1 THEN 0.11516001624178229 END)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END)))OR(((vt0.c1)<<(vt0.lid)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB)  NULLS LAST, CAST(0X1a9ab92d AS REAL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1, vt0.c2, vt0.c2))==((vt0.lid, vt0.c2, vt0.c0))))OR(CASE vt0.c2  WHEN vt0.c1 THEN 0.11516001624178229 END)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END)))OR(((vt0.c1)<<(vt0.lid)))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB)  NULLS LAST, CAST(0x1a9ab92d AS REAL) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1, vt0.c2, vt0.c2))=((vt0.lid, vt0.c2, vt0.c0))))OR(CASE vt0.c2  WHEN vt0.c1 THEN 0.11516001624178229 END)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END)))OR(((vt0.c1)<<(vt0.lid)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB)  NULLS LAST, CAST(0X1a9ab92d AS REAL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1, vt0.c2, vt0.c2))==((vt0.lid, vt0.c2, vt0.c0))))OR(CASE vt0.c2  WHEN vt0.c1 THEN 0.11516001624178229 END)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END)))OR(((vt0.c1)<<(vt0.lid)))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB)  NULLS LAST, CAST(0x1a9ab92d AS REAL) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1, vt0.c2, vt0.c2))=((vt0.lid, vt0.c2, vt0.c0))))OR(CASE vt0.c2  WHEN vt0.c1 THEN 0.11516001624178229 END)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END)))OR(((vt0.c1)<<(vt0.lid)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB)  NULLS LAST, CAST(0X1a9ab92d AS REAL) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) ORDER BY ((((((t0.c68)IS NOT(vt0.c0)))OR(CAST(vt0.c2 AS REAL))))AND((~ (vt0.lid)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c68)IS NOT(vt0.c0)))OR(CAST(vt0.c2 AS REAL))))AND((~ (vt0.lid)))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) ORDER BY ((((((t0.c68)IS NOT(vt0.c0)))OR(CAST(vt0.c2 AS REAL))))AND((~ (vt0.lid)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c68)IS NOT(vt0.c0)))OR(CAST(vt0.c2 AS REAL))))AND((~ (vt0.lid)))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) ORDER BY ((((((t0.c68)IS NOT(vt0.c0)))OR(CAST(vt0.c2 AS REAL))))AND((~ (vt0.lid)))) DESC;
SELECT * FROM t0 WHERE ((((~ (t0.c68))) BETWEEN (CASE t0.c68  WHEN 0.9946851193225441 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c68 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c68))) BETWEEN (CASE t0.c68  WHEN 0.9946851193225441 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c68 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c68))) BETWEEN (CASE t0.c68  WHEN 0.9946851193225441 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c68 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c68))) BETWEEN (CASE t0.c68  WHEN 0.9946851193225441 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c68 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c68))) BETWEEN (CASE t0.c68  WHEN 0.9946851193225441 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c68 AS REAL))));
SELECT ALL * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT (~ (vt0.c1)))) ORDER BY ((CAST(vt0.c2 AS BLOB))!=(vt0.lid)), (NOT ('-1430103246'))  NULLS FIRST, CASE WHEN NULL THEN vt0.c1 COLLATE RTRIM ELSE ((((vt0.lid)OR(t0.c68)))OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (~ (vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(vt0.c2 AS BLOB))<>(vt0.lid)), (NOT ('-1430103246'))  NULLS FIRST, CASE WHEN NULL THEN vt0.c1 COLLATE RTRIM ELSE ((((vt0.lid)OR(t0.c68)))OR(vt0.c0)) END);
SELECT ALL * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT (~ (vt0.c1)))) ORDER BY ((CAST(vt0.c2 AS BLOB))!=(vt0.lid)), (NOT ('-1430103246'))  NULLS FIRST, CASE WHEN NULL THEN vt0.c1 COLLATE RTRIM ELSE ((((vt0.lid)OR(t0.c68)))OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (~ (vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(vt0.c2 AS BLOB))<>(vt0.lid)), (NOT ('-1430103246'))  NULLS FIRST, CASE WHEN NULL THEN vt0.c1 COLLATE RTRIM ELSE ((((vt0.lid)OR(t0.c68)))OR(vt0.c0)) END);
SELECT ALL * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT (~ (vt0.c1)))) ORDER BY ((CAST(vt0.c2 AS BLOB))!=(vt0.lid)), (NOT ('-1430103246'))  NULLS FIRST, CASE WHEN NULL THEN vt0.c1 COLLATE RTRIM ELSE ((((vt0.lid)OR(t0.c68)))OR(vt0.c0)) END;
SELECT ALL * FROM vt0, t0 WHERE (TRIM(((((vt0.c2)AND(t0.c68)))OR(NULL)), (vt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(((((vt0.c2)AND(t0.c68)))OR(NULL)), (vt0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (TRIM(((((vt0.c2)AND(t0.c68)))OR(NULL)), (vt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(((((vt0.c2)AND(t0.c68)))OR(NULL)), (vt0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (TRIM(((((vt0.c2)AND(t0.c68)))OR(NULL)), (vt0.c2 IN ())));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT * FROM t0 WHERE (IFNULL(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), t0.c68 COLLATE NOCASE)) ORDER BY ((t0.c68 COLLATE RTRIM)<=(((t0.c68)|(t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), t0.c68 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE RTRIM)<=(((t0.c68)|(t0.c68))))  NULLS FIRST);
SELECT * FROM t0 WHERE (IFNULL(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), t0.c68 COLLATE NOCASE)) ORDER BY ((t0.c68 COLLATE RTRIM)<=(((t0.c68)|(t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), t0.c68 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE RTRIM)<=(((t0.c68)|(t0.c68))))  NULLS FIRST);
SELECT * FROM t0 WHERE (IFNULL(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), t0.c68 COLLATE NOCASE)) ORDER BY ((t0.c68 COLLATE RTRIM)<=(((t0.c68)|(t0.c68))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) IN (CASE vt0.lid  WHEN NULL THEN t0.c68 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) IN (CASE vt0.lid  WHEN NULL THEN t0.c68 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) IN (CASE vt0.lid  WHEN NULL THEN t0.c68 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) IN (CASE vt0.lid  WHEN NULL THEN t0.c68 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) IN (CASE vt0.lid  WHEN NULL THEN t0.c68 ELSE vt0.c0 END)));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))-(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))-(x''))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))-(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))-(x''))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (((((((vt0.lid)AND(t0.c68)))OR(vt0.c1)))-(x'')));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)AND(t0.c68)))AND(vt0.c2)))AND((((x'', vt0.c1, vt0.c0))=((t0.c68, t0.c68, t0.c68))))))OR((((t0.c68)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) WHERE (((((vt0.c2)!=(vt0.c1)))>>((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<>(vt0.c1)))>>((+ (t0.c68))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)AND(t0.c68)))AND(vt0.c2)))AND((((x'', vt0.c1, vt0.c0))=((t0.c68, t0.c68, t0.c68))))))OR((((t0.c68)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)AND(t0.c68)))AND(vt0.c2)))AND((((x'', vt0.c1, vt0.c0))=((t0.c68, t0.c68, t0.c68))))))OR((((t0.c68)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) WHERE (((((vt0.c2)!=(vt0.c1)))>>((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<>(vt0.c1)))>>((+ (t0.c68))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)AND(t0.c68)))AND(vt0.c2)))AND((((x'', vt0.c1, vt0.c0))=((t0.c68, t0.c68, t0.c68))))))OR((((t0.c68)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)AND(t0.c68)))AND(vt0.c2)))AND((((x'', vt0.c1, vt0.c0))=((t0.c68, t0.c68, t0.c68))))))OR((((t0.c68)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) WHERE (((((vt0.c2)!=(vt0.c1)))>>((+ (t0.c68)))));
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c68))) ORDER BY (((((((((t0.c68)OR(x'')))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) IN ()) DESC  NULLS FIRST, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(((t0.c68)+(t0.c68)))))OR((((t0.c68))<>((t0.c68))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c68))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c68)OR(x'')))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) IN ()) DESC  NULLS FIRST, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(((t0.c68)+(t0.c68)))))OR((((t0.c68))<>((t0.c68))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c68))) ORDER BY (((((((((t0.c68)OR(x'')))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) IN ()) DESC  NULLS FIRST, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(((t0.c68)+(t0.c68)))))OR((((t0.c68))<>((t0.c68))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c68))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c68)OR(x'')))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) IN ()) DESC  NULLS FIRST, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(((t0.c68)+(t0.c68)))))OR((((t0.c68))<>((t0.c68))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c68))) ORDER BY (((((((((t0.c68)OR(x'')))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) IN ()) DESC  NULLS FIRST, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))OR(((t0.c68)+(t0.c68)))))OR((((t0.c68))<>((t0.c68))))) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (LENGTH(((t0.c68)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((t0.c68)>=(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LENGTH(((t0.c68)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((t0.c68)>=(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LENGTH(((t0.c68)>=(vt0.c0))));
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c68 THEN '' ELSE t0.c68 END))!=((((t0.c68) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c68 THEN '' ELSE t0.c68 END))!=((((t0.c68) IS TRUE))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c68 THEN '' ELSE t0.c68 END))!=((((t0.c68) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c68 THEN '' ELSE t0.c68 END))!=((((t0.c68) IS TRUE))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c68 THEN '' ELSE t0.c68 END))!=((((t0.c68) IS TRUE)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68)>=(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)>=(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68)>=(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)>=(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68)>=(vt0.c2))) NOTNULL));
SELECT * FROM vt0 WHERE (CASE vt0.c2 COLLATE BINARY  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 WHEN ((vt0.c1)*(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c2)) THEN (((('')OR(vt0.c1)))OR(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c2 COLLATE BINARY  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 WHEN ((vt0.c1)*(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c2)) THEN (((('')OR(vt0.c1)))OR(vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c2 COLLATE BINARY  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 WHEN ((vt0.c1)*(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c2)) THEN (((('')OR(vt0.c1)))OR(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c2 COLLATE BINARY  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 WHEN ((vt0.c1)*(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c2)) THEN (((('')OR(vt0.c1)))OR(vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c2 COLLATE BINARY  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 WHEN ((vt0.c1)*(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c2)) THEN (((('')OR(vt0.c1)))OR(vt0.c2)) END);
SELECT * FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1, t0.c68, t0.c68, NULL, vt0.c2))<((vt0.c0, vt0.c0, vt0.c1, 0.7196025400988666, vt0.lid)))) ISNULL)) ORDER BY (((((((((~ (vt0.lid)))AND(((0.7116168835979815)||(t0.c68)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid END)))OR(((((vt0.c2)OR('565385832')))AND(vt0.c1)))))AND(((vt0.c0)<>(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, t0.c68, t0.c68, NULL, vt0.c2))<((vt0.c0, vt0.c0, vt0.c1, 0.7196025400988666, vt0.lid)))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((~ (vt0.lid)))AND(((0.7116168835979815)||(t0.c68)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid END)))OR(((((vt0.c2)OR('565385832')))AND(vt0.c1)))))AND(((vt0.c0)<>(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1, t0.c68, t0.c68, NULL, vt0.c2))<((vt0.c0, vt0.c0, vt0.c1, 0.7196025400988666, vt0.lid)))) ISNULL)) ORDER BY (((((((((~ (vt0.lid)))AND(((0.7116168835979815)||(t0.c68)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid END)))OR(((((vt0.c2)OR('565385832')))AND(vt0.c1)))))AND(((vt0.c0)<>(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, t0.c68, t0.c68, NULL, vt0.c2))<((vt0.c0, vt0.c0, vt0.c1, 0.7196025400988666, vt0.lid)))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((~ (vt0.lid)))AND(((0.7116168835979815)||(t0.c68)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid END)))OR(((((vt0.c2)OR('565385832')))AND(vt0.c1)))))AND(((vt0.c0)<>(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1, t0.c68, t0.c68, NULL, vt0.c2))<((vt0.c0, vt0.c0, vt0.c1, 0.7196025400988666, vt0.lid)))) ISNULL)) ORDER BY (((((((((~ (vt0.lid)))AND(((0.7116168835979815)||(t0.c68)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid END)))OR(((((vt0.c2)OR('565385832')))AND(vt0.c1)))))AND(((vt0.c0)<>(vt0.c1)))) ASC;
SELECT * FROM t0, vt0 INDEXED BY i29 WHERE (((((t0.c68) BETWEEN (vt0.lid) AND (''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (vt0.lid) AND (''))) NOTNULL)) IS TRUE)  as count FROM t0, vt0 INDEXED BY i29);
SELECT * FROM t0, vt0 INDEXED BY i29 WHERE (((((t0.c68) BETWEEN (vt0.lid) AND (''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (vt0.lid) AND (''))) NOTNULL)) IS TRUE)  as count FROM t0, vt0 INDEXED BY i29);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c68);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i29 WHERE ((((('-1080362748')/(vt0.c0)))!=((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((('-1080362748')/(vt0.c0)))<>((- (t0.c68))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i29);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i29 WHERE ((((('-1080362748')/(vt0.c0)))!=((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((('-1080362748')/(vt0.c0)))<>((- (t0.c68))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i29);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i29 WHERE ((((('-1080362748')/(vt0.c0)))!=((- (t0.c68)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (((vt0.c1)>>(-1.563940593E9)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)>>(-1.563940593E9))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (((vt0.c1)>>(-1.563940593E9)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)>>(-1.563940593E9))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (((vt0.c1)>>(-1.563940593E9)))));
SELECT ALL * FROM vt0 INDEXED BY i29 WHERE (((((((((((((vt0.c2)OR(vt0.c2)))AND(1.354854783E9)))OR((- (vt0.c2)))))AND(UNLIKELY(vt0.c2))))OR(((vt0.lid)>(vt0.lid)))))AND(CASE vt0.lid  WHEN vt0.lid THEN 1624536530 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c2)OR(vt0.c2)))AND(1.354854783E9)))OR((- (vt0.c2)))))AND(UNLIKELY(vt0.c2))))OR(((vt0.lid)>(vt0.lid)))))AND(CASE vt0.lid  WHEN vt0.lid THEN 1624536530 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 INDEXED BY i29);
SELECT ALL * FROM vt0 INDEXED BY i29 WHERE (((((((((((((vt0.c2)OR(vt0.c2)))AND(1.354854783E9)))OR((- (vt0.c2)))))AND(UNLIKELY(vt0.c2))))OR(((vt0.lid)>(vt0.lid)))))AND(CASE vt0.lid  WHEN vt0.lid THEN 1624536530 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c2)OR(vt0.c2)))AND(1.354854783E9)))OR((- (vt0.c2)))))AND(UNLIKELY(vt0.c2))))OR(((vt0.lid)>(vt0.lid)))))AND(CASE vt0.lid  WHEN vt0.lid THEN 1624536530 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 INDEXED BY i29);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c1)&(vt0.c1))  WHEN ((vt0.c0)<=(vt0.lid)) THEN (((vt0.c1, vt0.lid, NULL))==((vt0.lid, vt0.c1, vt0.c2))) END) ORDER BY ((t0.c68 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, '794542399' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)&(vt0.c1))  WHEN ((vt0.c0)<=(vt0.lid)) THEN (((vt0.c1, vt0.lid, NULL))==((vt0.lid, vt0.c1, vt0.c2))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, '794542399' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c1)&(vt0.c1))  WHEN ((vt0.c0)<=(vt0.lid)) THEN (((vt0.c1, vt0.lid, NULL))==((vt0.lid, vt0.c1, vt0.c2))) END) ORDER BY ((t0.c68 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, '794542399' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)&(vt0.c1))  WHEN ((vt0.c0)<=(vt0.lid)) THEN (((vt0.c1, vt0.lid, NULL))==((vt0.lid, vt0.c1, vt0.c2))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, '794542399' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c1)&(vt0.c1))  WHEN ((vt0.c0)<=(vt0.lid)) THEN (((vt0.c1, vt0.lid, NULL))==((vt0.lid, vt0.c1, vt0.c2))) END) ORDER BY ((t0.c68 COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, '794542399' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((8.16493457E8)>=(t0.c68))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((8.16493457E8)>=(t0.c68))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((8.16493457E8)>=(t0.c68))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((8.16493457E8)>=(t0.c68))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((8.16493457E8)>=(t0.c68))) IS FALSE));
SELECT ALL * FROM vt0, t0 WHERE (((((-1.186229548E9) IS TRUE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE WHEN vt0.lid THEN vt0.c0 END))) ORDER BY (((((vt0.c0) NOTNULL)))=((((((NULL)OR(vt0.lid)))AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1.186229548E9) IS TRUE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE WHEN vt0.lid THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0) NOTNULL)))==((((((NULL)OR(vt0.lid)))AND(t0.c68))))));
SELECT ALL * FROM vt0, t0 WHERE (((((-1.186229548E9) IS TRUE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE WHEN vt0.lid THEN vt0.c0 END))) ORDER BY (((((vt0.c0) NOTNULL)))=((((((NULL)OR(vt0.lid)))AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1.186229548E9) IS TRUE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE WHEN vt0.lid THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0) NOTNULL)))==((((((NULL)OR(vt0.lid)))AND(t0.c68))))));
SELECT ALL * FROM vt0, t0 WHERE (((((-1.186229548E9) IS TRUE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE WHEN vt0.lid THEN vt0.c0 END))) ORDER BY (((((vt0.c0) NOTNULL)))=((((((NULL)OR(vt0.lid)))AND(t0.c68)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY INSTR(NULL, (((vt0.c2, vt0.lid, vt0.lid))>((vt0.lid, vt0.c2, vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY INSTR(NULL, (((vt0.c2, vt0.lid, vt0.lid))>((vt0.lid, vt0.c2, vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY INSTR(NULL, (((vt0.c2, vt0.lid, vt0.lid))>((vt0.lid, vt0.c2, vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY INSTR(NULL, (((vt0.c2, vt0.lid, vt0.lid))>((vt0.lid, vt0.c2, vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY INSTR(NULL, (((vt0.c2, vt0.lid, vt0.lid))>((vt0.lid, vt0.c2, vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0X4eae32f6 END COLLATE NOCASE) ORDER BY ((((((vt0.c0)OR(x'8e9c0154')))AND(vt0.c2))) IS TRUE), (((CAST(NULL AS BLOB)))<((CAST(vt0.c0 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0X4eae32f6 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(x'8e9c0154')))AND(vt0.c2))) IS TRUE), (((CAST(NULL AS BLOB)))<((CAST(vt0.c0 AS REAL)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0X4eae32f6 END COLLATE NOCASE) ORDER BY ((((((vt0.c0)OR(x'8e9c0154')))AND(vt0.c2))) IS TRUE), (((CAST(NULL AS BLOB)))<((CAST(vt0.c0 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0X4eae32f6 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(x'8e9c0154')))AND(vt0.c2))) IS TRUE), (((CAST(NULL AS BLOB)))<((CAST(vt0.c0 AS REAL)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0X4eae32f6 END COLLATE NOCASE) ORDER BY ((((((vt0.c0)OR(x'8e9c0154')))AND(vt0.c2))) IS TRUE), (((CAST(NULL AS BLOB)))<((CAST(vt0.c0 AS REAL)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)) IN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))<>(((((((((t0.c68)AND(t0.c68)))OR('-1102290529')))AND(t0.c68)))OR(t0.c68))))  NULLS LAST, ((((t0.c68)OR('')))<=((+ (t0.c68)))), json_array(NULL, ((t0.c68) ISNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)) IN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))!=(((((((((t0.c68)AND(t0.c68)))OR('-1102290529')))AND(t0.c68)))OR(t0.c68))))  NULLS LAST, ((((t0.c68)OR('')))<=((+ (t0.c68)))), json_array(NULL, ((t0.c68) ISNULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)) IN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))<>(((((((((t0.c68)AND(t0.c68)))OR('-1102290529')))AND(t0.c68)))OR(t0.c68))))  NULLS LAST, ((((t0.c68)OR('')))<=((+ (t0.c68)))), json_array(NULL, ((t0.c68) ISNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)) IN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))!=(((((((((t0.c68)AND(t0.c68)))OR('-1102290529')))AND(t0.c68)))OR(t0.c68))))  NULLS LAST, ((((t0.c68)OR('')))<=((+ (t0.c68)))), json_array(NULL, ((t0.c68) ISNULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)) IN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))<>(((((((((t0.c68)AND(t0.c68)))OR('-1102290529')))AND(t0.c68)))OR(t0.c68))))  NULLS LAST, ((((t0.c68)OR('')))<=((+ (t0.c68)))), json_array(NULL, ((t0.c68) ISNULL)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (0.09006203020022563) ORDER BY ((((vt0.lid) IS FALSE)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.09006203020022563) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.lid) IS FALSE)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (0.09006203020022563) ORDER BY ((((vt0.lid) IS FALSE)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.09006203020022563) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.lid) IS FALSE)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (0.09006203020022563) ORDER BY ((((vt0.lid) IS FALSE)) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((((((('')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((((((((('')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((((((('')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((((((((('')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((((((('')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2, t0.c68, x''))>=((vt0.c1, vt0.c0, vt0.c1))))AND(((((((((vt0.c2)AND(vt0.c2)))OR(t0.c68)))OR(1.066968399E9)))OR(t0.c68))))) ORDER BY ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c1)))|((((vt0.lid, vt0.lid, t0.c68)) BETWEEN (('-319401336', vt0.c1, t0.c68)) AND ((vt0.c1, vt0.c1, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2, t0.c68, x''))>=((vt0.c1, vt0.c0, vt0.c1))))AND(((((((((vt0.c2)AND(vt0.c2)))OR(t0.c68)))OR(1.066968399E9)))OR(t0.c68))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c1)))|((((vt0.lid, vt0.lid, t0.c68)) BETWEEN (('-319401336', vt0.c1, t0.c68)) AND ((vt0.c1, vt0.c1, vt0.c0))))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2, t0.c68, x''))>=((vt0.c1, vt0.c0, vt0.c1))))AND(((((((((vt0.c2)AND(vt0.c2)))OR(t0.c68)))OR(1.066968399E9)))OR(t0.c68))))) ORDER BY ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c1)))|((((vt0.lid, vt0.lid, t0.c68)) BETWEEN (('-319401336', vt0.c1, t0.c68)) AND ((vt0.c1, vt0.c1, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2, t0.c68, x''))>=((vt0.c1, vt0.c0, vt0.c1))))AND(((((((((vt0.c2)AND(vt0.c2)))OR(t0.c68)))OR(1.066968399E9)))OR(t0.c68))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c1)))|((((vt0.lid, vt0.lid, t0.c68)) BETWEEN (('-319401336', vt0.c1, t0.c68)) AND ((vt0.c1, vt0.c1, vt0.c0))))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c2, t0.c68, x''))>=((vt0.c1, vt0.c0, vt0.c1))))AND(((((((((vt0.c2)AND(vt0.c2)))OR(t0.c68)))OR(1.066968399E9)))OR(t0.c68))))) ORDER BY ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c1)))|((((vt0.lid, vt0.lid, t0.c68)) BETWEEN (('-319401336', vt0.c1, t0.c68)) AND ((vt0.c1, vt0.c1, vt0.c0))))) DESC;
SELECT * FROM t0 WHERE (CAST((('')<=(t0.c68)) AS TEXT)) ORDER BY NULLIF(DISTINCT t0.c68, t0.c68)  NULLS LAST, ((CAST(t0.c68 AS BLOB)) BETWEEN (t0.c68 COLLATE RTRIM) AND (CAST(t0.c68 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')<=(t0.c68)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT t0.c68, t0.c68)  NULLS LAST, ((CAST(t0.c68 AS BLOB)) BETWEEN (t0.c68 COLLATE RTRIM) AND (CAST(t0.c68 AS NUMERIC))));
SELECT * FROM t0 WHERE (CAST((('')<=(t0.c68)) AS TEXT)) ORDER BY NULLIF(DISTINCT t0.c68, t0.c68)  NULLS LAST, ((CAST(t0.c68 AS BLOB)) BETWEEN (t0.c68 COLLATE RTRIM) AND (CAST(t0.c68 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')<=(t0.c68)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT t0.c68, t0.c68)  NULLS LAST, ((CAST(t0.c68 AS BLOB)) BETWEEN (t0.c68 COLLATE RTRIM) AND (CAST(t0.c68 AS NUMERIC))));
SELECT * FROM t0 WHERE (CAST((('')<=(t0.c68)) AS TEXT)) ORDER BY NULLIF(DISTINCT t0.c68, t0.c68)  NULLS LAST, ((CAST(t0.c68 AS BLOB)) BETWEEN (t0.c68 COLLATE RTRIM) AND (CAST(t0.c68 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c68)AND(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)AND(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c68)AND(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)AND(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c68)AND(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((t0.c68)) BETWEEN ((TRIM(vt0.c0, x''))) AND ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid))))) WHERE (((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) ORDER BY (vt0.c1 IN ()) ASC, (((vt0.c1 IN ()))AND(((vt0.lid)LIKE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((t0.c68)) BETWEEN ((TRIM(vt0.c0, x''))) AND ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid))))) ORDER BY (vt0.c1 IN ()) ASC, (((vt0.c1 IN ()))AND(((vt0.lid)LIKE(vt0.c1)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((t0.c68)) BETWEEN ((TRIM(vt0.c0, x''))) AND ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid))))) WHERE (((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) ORDER BY (vt0.c1 IN ()) ASC, (((vt0.c1 IN ()))AND(((vt0.lid)LIKE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((t0.c68)) BETWEEN ((TRIM(vt0.c0, x''))) AND ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.lid))))) ORDER BY (vt0.c1 IN ()) ASC, (((vt0.c1 IN ()))AND(((vt0.lid)LIKE(vt0.c1)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ())) ORDER BY TRIM(((vt0.c2) NOTNULL))  NULLS FIRST, (LIKELY(DISTINCT vt0.lid) IN (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)), CASE vt0.c1  WHEN '549219555' THEN vt0.lid END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c2) NOTNULL))  NULLS FIRST, (LIKELY(DISTINCT vt0.lid) IN (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)), CASE vt0.c1  WHEN '549219555' THEN vt0.lid END)) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ())) ORDER BY TRIM(((vt0.c2) NOTNULL))  NULLS FIRST, (LIKELY(DISTINCT vt0.lid) IN (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)), CASE vt0.c1  WHEN '549219555' THEN vt0.lid END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c2) NOTNULL))  NULLS FIRST, (LIKELY(DISTINCT vt0.lid) IN (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)), CASE vt0.c1  WHEN '549219555' THEN vt0.lid END)) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ())) ORDER BY TRIM(((vt0.c2) NOTNULL))  NULLS FIRST, (LIKELY(DISTINCT vt0.lid) IN (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)), CASE vt0.c1  WHEN '549219555' THEN vt0.lid END)) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((((CASE WHEN vt0.lid THEN vt0.lid END)OR(((vt0.c1) ISNULL))))OR(vt0.c2)))OR(CAST(vt0.lid AS REAL))))AND(((((vt0.c0)OR(vt0.c2)))AND('-419458167')))))OR(json_extract(vt0.c0, t0.c68, vt0.c2, vt0.c2, vt0.c0, vt0.lid))))OR((- (vt0.c2))))) ORDER BY ((CAST(vt0.c2 AS TEXT))>>(''))  NULLS FIRST, (((- (vt0.c2))) IS TRUE)  NULLS LAST, (+ ((('4Nmx') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN vt0.lid THEN vt0.lid END)OR(((vt0.c1) ISNULL))))OR(vt0.c2)))OR(CAST(vt0.lid AS REAL))))AND(((((vt0.c0)OR(vt0.c2)))AND('-419458167')))))OR(json_extract(vt0.c0, t0.c68, vt0.c2, vt0.c2, vt0.c0, vt0.lid))))OR((- (vt0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c2 AS TEXT))>>(''))  NULLS FIRST, (((- (vt0.c2))) IS TRUE)  NULLS LAST, (+ ((('4Nmx') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((((CASE WHEN vt0.lid THEN vt0.lid END)OR(((vt0.c1) ISNULL))))OR(vt0.c2)))OR(CAST(vt0.lid AS REAL))))AND(((((vt0.c0)OR(vt0.c2)))AND('-419458167')))))OR(json_extract(vt0.c0, t0.c68, vt0.c2, vt0.c2, vt0.c0, vt0.lid))))OR((- (vt0.c2))))) ORDER BY ((CAST(vt0.c2 AS TEXT))>>(''))  NULLS FIRST, (((- (vt0.c2))) IS TRUE)  NULLS LAST, (+ ((('4Nmx') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN vt0.lid THEN vt0.lid END)OR(((vt0.c1) ISNULL))))OR(vt0.c2)))OR(CAST(vt0.lid AS REAL))))AND(((((vt0.c0)OR(vt0.c2)))AND('-419458167')))))OR(json_extract(vt0.c0, t0.c68, vt0.c2, vt0.c2, vt0.c0, vt0.lid))))OR((- (vt0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c2 AS TEXT))>>(''))  NULLS FIRST, (((- (vt0.c2))) IS TRUE)  NULLS LAST, (+ ((('4Nmx') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.lid IN (t0.c68))) BETWEEN (((vt0.c1) NOT NULL)) AND (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.lid IN (t0.c68))) BETWEEN (((vt0.c1) NOT NULL)) AND (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.lid IN (t0.c68))) BETWEEN (((vt0.c1) NOT NULL)) AND (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.lid IN (t0.c68))) BETWEEN (((vt0.c1) NOT NULL)) AND (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.lid IN (t0.c68))) BETWEEN (((vt0.c1) NOT NULL)) AND (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c68 AS BLOB))||((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB))||((t0.c68 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c68 AS BLOB))||((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB))||((t0.c68 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c68 AS BLOB))||((t0.c68 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c68 IN ()))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68 IN ()))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((NULL)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c68 IN ()))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68 IN ()))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((NULL)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c68 IN ()))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((NULL))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.lid COLLATE BINARY)AND(NULL)))AND(((((vt0.lid)OR(vt0.lid)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid COLLATE BINARY)AND(NULL)))AND(((((vt0.lid)OR(vt0.lid)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.lid COLLATE BINARY)AND(NULL)))AND(((((vt0.lid)OR(vt0.lid)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid COLLATE BINARY)AND(NULL)))AND(((((vt0.lid)OR(vt0.lid)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.lid COLLATE BINARY)AND(NULL)))AND(((((vt0.lid)OR(vt0.lid)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.lid)&(vt0.c2)) THEN ((t0.c68)||(vt0.c1)) WHEN ((t0.c68)GLOB(vt0.c0)) THEN vt0.c0 WHEN ((t0.c68) BETWEEN (vt0.c1) AND (vt0.lid)) THEN ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c2)) END) ORDER BY ((CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END) BETWEEN (SQLITE_VERSION()) AND ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.lid)&(vt0.c2)) THEN ((t0.c68)||(vt0.c1)) WHEN ((t0.c68)GLOB(vt0.c0)) THEN vt0.c0 WHEN ((t0.c68) BETWEEN (vt0.c1) AND (vt0.lid)) THEN ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c2)) END) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY ((CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END) BETWEEN (SQLITE_VERSION()) AND ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.lid)&(vt0.c2)) THEN ((t0.c68)||(vt0.c1)) WHEN ((t0.c68)GLOB(vt0.c0)) THEN vt0.c0 WHEN ((t0.c68) BETWEEN (vt0.c1) AND (vt0.lid)) THEN ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c2)) END) ORDER BY ((CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END) BETWEEN (SQLITE_VERSION()) AND ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.lid)&(vt0.c2)) THEN ((t0.c68)||(vt0.c1)) WHEN ((t0.c68)GLOB(vt0.c0)) THEN vt0.c0 WHEN ((t0.c68) BETWEEN (vt0.c1) AND (vt0.lid)) THEN ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c2)) END) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY ((CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END) BETWEEN (SQLITE_VERSION()) AND ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.lid)&(vt0.c2)) THEN ((t0.c68)||(vt0.c1)) WHEN ((t0.c68)GLOB(vt0.c0)) THEN vt0.c0 WHEN ((t0.c68) BETWEEN (vt0.c1) AND (vt0.lid)) THEN ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c2)) END) ORDER BY ((CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END) BETWEEN (SQLITE_VERSION()) AND ((vt0.c1 IN ())));
SELECT ALL * FROM t0, vt0 WHERE (0.9164766809120489);
SELECT SUM(count) FROM (SELECT ((0.9164766809120489) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0.9164766809120489);
SELECT SUM(count) FROM (SELECT ((0.9164766809120489) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0.9164766809120489);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c2) IS FALSE))AND(CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 WHEN '370080003' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))OR(LIKELY(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2) IS FALSE))AND(CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 WHEN '370080003' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))OR(LIKELY(t0.c68)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c2) IS FALSE))AND(CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 WHEN '370080003' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))OR(LIKELY(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2) IS FALSE))AND(CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 WHEN '370080003' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))OR(LIKELY(t0.c68)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c2) IS FALSE))AND(CASE t0.c68  WHEN vt0.c2 THEN vt0.c1 WHEN '370080003' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))OR(LIKELY(t0.c68))));
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)OR((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE RTRIM)OR((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((vt0.lid IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)OR((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE RTRIM)OR((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((vt0.lid IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)OR((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((vt0.lid IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT * FROM t0 WHERE ((+ (t0.c68)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (t0.c68)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (t0.c68)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (((TYPEOF(t0.c68))-((+ (t0.c68))))) ORDER BY CAST(t0.c68 AS NUMERIC), (((t0.c68 IN (t0.c68)))OR(t0.c68 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c68))-((+ (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS NUMERIC), (((t0.c68 IN (t0.c68)))OR(t0.c68 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 WHERE (((TYPEOF(t0.c68))-((+ (t0.c68))))) ORDER BY CAST(t0.c68 AS NUMERIC), (((t0.c68 IN (t0.c68)))OR(t0.c68 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c68))-((+ (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS NUMERIC), (((t0.c68 IN (t0.c68)))OR(t0.c68 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 WHERE (((TYPEOF(t0.c68))-((+ (t0.c68))))) ORDER BY CAST(t0.c68 AS NUMERIC), (((t0.c68 IN (t0.c68)))OR(t0.c68 COLLATE NOCASE));
SELECT * FROM vt0, t0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END COLLATE BINARY) ORDER BY CASE WHEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c2 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c2 AS REAL) END DESC);
SELECT * FROM vt0, t0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END COLLATE BINARY) ORDER BY CASE WHEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c2 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c2 AS REAL) END DESC);
SELECT * FROM vt0, t0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END COLLATE BINARY) ORDER BY CASE WHEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c2 AS REAL) END DESC;
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) AS BLOB)) ORDER BY x'0dea' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY x'0dea' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) AS BLOB)) ORDER BY x'0dea' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY x'0dea' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) AS BLOB)) ORDER BY x'0dea' ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT ALL * FROM t0 WHERE (((((((((t0.c68 COLLATE BINARY)AND(((t0.c68) IS FALSE))))OR(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))OR(((t0.c68) NOTNULL))))AND(LOWER(t0.c68)))) ORDER BY t0.c68 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c68 COLLATE BINARY)AND(((t0.c68) IS FALSE))))OR(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))OR(((t0.c68) NOTNULL))))AND(LOWER(t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY t0.c68 ASC);
SELECT ALL * FROM t0 WHERE (((((((((t0.c68 COLLATE BINARY)AND(((t0.c68) IS FALSE))))OR(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))OR(((t0.c68) NOTNULL))))AND(LOWER(t0.c68)))) ORDER BY t0.c68 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c68 COLLATE BINARY)AND(((t0.c68) IS FALSE))))OR(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))OR(((t0.c68) NOTNULL))))AND(LOWER(t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY t0.c68 ASC);
SELECT ALL * FROM t0 WHERE (((((((((t0.c68 COLLATE BINARY)AND(((t0.c68) IS FALSE))))OR(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))OR(((t0.c68) NOTNULL))))AND(LOWER(t0.c68)))) ORDER BY t0.c68 ASC;
SELECT * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c68);
SELECT * FROM t0, vt0 WHERE (CASE WHEN '' THEN (vt0.c2 IN ()) END) ORDER BY vt0.lid DESC, (((((x'c3af')) BETWEEN ((vt0.c0)) AND ((vt0.c2))))IS(CAST(t0.c68 AS TEXT)))  NULLS FIRST, ((t0.c68)%(TYPEOF(t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '' THEN (vt0.c2 IN ()) END) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.lid DESC, (((((x'c3af')) BETWEEN ((vt0.c0)) AND ((vt0.c2))))IS(CAST(t0.c68 AS TEXT)))  NULLS FIRST, ((t0.c68)%(TYPEOF(t0.c68))));
SELECT * FROM t0, vt0 WHERE (CASE WHEN '' THEN (vt0.c2 IN ()) END) ORDER BY vt0.lid DESC, (((((x'c3af')) BETWEEN ((vt0.c0)) AND ((vt0.c2))))IS(CAST(t0.c68 AS TEXT)))  NULLS FIRST, ((t0.c68)%(TYPEOF(t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '' THEN (vt0.c2 IN ()) END) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.lid DESC, (((((x'c3af')) BETWEEN ((vt0.c0)) AND ((vt0.c2))))IS(CAST(t0.c68 AS TEXT)))  NULLS FIRST, ((t0.c68)%(TYPEOF(t0.c68))));
SELECT * FROM t0, vt0 WHERE (CASE WHEN '' THEN (vt0.c2 IN ()) END) ORDER BY vt0.lid DESC, (((((x'c3af')) BETWEEN ((vt0.c0)) AND ((vt0.c2))))IS(CAST(t0.c68 AS TEXT)))  NULLS FIRST, ((t0.c68)%(TYPEOF(t0.c68)));
SELECT * FROM vt0 WHERE ((((((((vt0.c1, 1.368849545E9, vt0.c0))<=((vt0.c2, vt0.c2, vt0.c1))))OR((~ (vt0.c2)))))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1, 1.368849545E9, vt0.c0))<=((vt0.c2, vt0.c2, vt0.c1))))OR((~ (vt0.c2)))))AND(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c1, 1.368849545E9, vt0.c0))<=((vt0.c2, vt0.c2, vt0.c1))))OR((~ (vt0.c2)))))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1, 1.368849545E9, vt0.c0))<=((vt0.c2, vt0.c2, vt0.c1))))OR((~ (vt0.c2)))))AND(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c1, 1.368849545E9, vt0.c0))<=((vt0.c2, vt0.c2, vt0.c1))))OR((~ (vt0.c2)))))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1)|((- (t0.c68))))) ORDER BY ((((vt0.lid IN ())))<>((vt0.lid COLLATE RTRIM))), ((((vt0.lid) NOTNULL)) BETWEEN (vt0.lid) AND ((((vt0.lid))!=((t0.c68))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)|((- (t0.c68))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.lid IN ())))<>((vt0.lid COLLATE RTRIM))), ((((vt0.lid) NOTNULL)) BETWEEN (vt0.lid) AND ((((vt0.lid))!=((t0.c68))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1)|((- (t0.c68))))) ORDER BY ((((vt0.lid IN ())))<>((vt0.lid COLLATE RTRIM))), ((((vt0.lid) NOTNULL)) BETWEEN (vt0.lid) AND ((((vt0.lid))!=((t0.c68))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)|((- (t0.c68))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.lid IN ())))<>((vt0.lid COLLATE RTRIM))), ((((vt0.lid) NOTNULL)) BETWEEN (vt0.lid) AND ((((vt0.lid))!=((t0.c68))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1)|((- (t0.c68))))) ORDER BY ((((vt0.lid IN ())))<>((vt0.lid COLLATE RTRIM))), ((((vt0.lid) NOTNULL)) BETWEEN (vt0.lid) AND ((((vt0.lid))!=((t0.c68))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (UPPER((+ (vt0.c1)))) ORDER BY vt0.lid DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER((+ (vt0.c1)))) ORDER BY vt0.lid DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER((+ (vt0.c1)))) ORDER BY vt0.lid DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.lid)))AND(vt0.c2)))OR(vt0.c2)))) ORDER BY ((((vt0.c0)+(vt0.c2)))>(LIKELY(DISTINCT vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.lid)))AND(vt0.c2)))OR(vt0.c2)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)+(vt0.c2)))>(LIKELY(DISTINCT vt0.c2))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.lid)))AND(vt0.c2)))OR(vt0.c2)))) ORDER BY ((((vt0.c0)+(vt0.c2)))>(LIKELY(DISTINCT vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.lid)))AND(vt0.c2)))OR(vt0.c2)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)+(vt0.c2)))>(LIKELY(DISTINCT vt0.c2))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.lid)))AND(vt0.c2)))OR(vt0.c2)))) ORDER BY ((((vt0.c0)+(vt0.c2)))>(LIKELY(DISTINCT vt0.c2))) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (t0.c68)))IS NOT(vt0.c1 COLLATE RTRIM))) ORDER BY (NOT (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68)))IS NOT(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (t0.c68)))IS NOT(vt0.c1 COLLATE RTRIM))) ORDER BY (NOT (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68)))IS NOT(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (t0.c68)))IS NOT(vt0.c1 COLLATE RTRIM))) ORDER BY (NOT (vt0.c0))  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE NOCASE WHERE ((((0.8831600561651539, vt0.c1, vt0.c2)) BETWEEN ((COALESCE(DISTINCT 0X4eae32f6, vt0.lid, vt0.c1, vt0.c0), ((t0.c68) BETWEEN (x'') AND (vt0.c2)), ((vt0.lid) ISNULL))) AND (((NOT (t0.c68)), vt0.c2 COLLATE NOCASE, vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((0.8831600561651539, vt0.c1, vt0.c2)) BETWEEN ((COALESCE(DISTINCT 0x4eae32f6, vt0.lid, vt0.c1, vt0.c0), ((t0.c68) BETWEEN (x'') AND (vt0.c2)), ((vt0.lid) ISNULL))) AND (((NOT (t0.c68)), vt0.c2 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE NOCASE);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE NOCASE WHERE ((((0.8831600561651539, vt0.c1, vt0.c2)) BETWEEN ((COALESCE(DISTINCT 0X4eae32f6, vt0.lid, vt0.c1, vt0.c0), ((t0.c68) BETWEEN (x'') AND (vt0.c2)), ((vt0.lid) ISNULL))) AND (((NOT (t0.c68)), vt0.c2 COLLATE NOCASE, vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((0.8831600561651539, vt0.c1, vt0.c2)) BETWEEN ((COALESCE(DISTINCT 0x4eae32f6, vt0.lid, vt0.c1, vt0.c0), ((t0.c68) BETWEEN (x'') AND (vt0.c2)), ((vt0.lid) ISNULL))) AND (((NOT (t0.c68)), vt0.c2 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE NOCASE);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE NOCASE WHERE ((((0.8831600561651539, vt0.c1, vt0.c2)) BETWEEN ((COALESCE(DISTINCT 0X4eae32f6, vt0.lid, vt0.c1, vt0.c0), ((t0.c68) BETWEEN (x'') AND (vt0.c2)), ((vt0.lid) ISNULL))) AND (((NOT (t0.c68)), vt0.c2 COLLATE NOCASE, vt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(2.045378713E9 AS NUMERIC)) NOT NULL)) ORDER BY ((((0.8450631504175837) BETWEEN (t0.c68) AND (vt0.lid)))IS NOT(-1644484840 COLLATE NOCASE)), ((((vt0.c1)&(vt0.c2)))IS(vt0.c2 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(2.045378713E9 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0.8450631504175837) BETWEEN (t0.c68) AND (vt0.lid)))IS NOT(-1644484840 COLLATE NOCASE)), ((((vt0.c1)&(vt0.c2)))IS(vt0.c2 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(2.045378713E9 AS NUMERIC)) NOT NULL)) ORDER BY ((((0.8450631504175837) BETWEEN (t0.c68) AND (vt0.lid)))IS NOT(-1644484840 COLLATE NOCASE)), ((((vt0.c1)&(vt0.c2)))IS(vt0.c2 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(2.045378713E9 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0.8450631504175837) BETWEEN (t0.c68) AND (vt0.lid)))IS NOT(-1644484840 COLLATE NOCASE)), ((((vt0.c1)&(vt0.c2)))IS(vt0.c2 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(2.045378713E9 AS NUMERIC)) NOT NULL)) ORDER BY ((((0.8450631504175837) BETWEEN (t0.c68) AND (vt0.lid)))IS NOT(-1644484840 COLLATE NOCASE)), ((((vt0.c1)&(vt0.c2)))IS(vt0.c2 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((t0.c68)/(t0.c68)))) ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c68)/(t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) NOT NULL));
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((t0.c68)/(t0.c68)))) ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c68)/(t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) NOT NULL));
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((t0.c68)/(t0.c68)))) ORDER BY ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) NOT NULL);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((vt0.c2 IN ())))) ORDER BY ((((t0.c68) ISNULL))<((vt0.c2 IN (t0.c68, vt0.lid))))  NULLS FIRST, json_patch(((vt0.c1)>>(vt0.lid)), ((vt0.lid)*(vt0.c2))) ASC  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c68) ISNULL))<((vt0.c2 IN (t0.c68, vt0.lid))))  NULLS FIRST, json_patch(((vt0.c1)>>(vt0.lid)), ((vt0.lid)*(vt0.c2))) ASC  NULLS FIRST, vt0.c1 ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((vt0.c2 IN ())))) ORDER BY ((((t0.c68) ISNULL))<((vt0.c2 IN (t0.c68, vt0.lid))))  NULLS FIRST, json_patch(((vt0.c1)>>(vt0.lid)), ((vt0.lid)*(vt0.c2))) ASC  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c68) ISNULL))<((vt0.c2 IN (t0.c68, vt0.lid))))  NULLS FIRST, json_patch(((vt0.c1)>>(vt0.lid)), ((vt0.lid)*(vt0.c2))) ASC  NULLS FIRST, vt0.c1 ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((vt0.c2 IN ())))) ORDER BY ((((t0.c68) ISNULL))<((vt0.c2 IN (t0.c68, vt0.lid))))  NULLS FIRST, json_patch(((vt0.c1)>>(vt0.lid)), ((vt0.lid)*(vt0.c2))) ASC  NULLS FIRST, vt0.c1 ASC;
SELECT ALL * FROM vt0, t0 WHERE (((((((((((x'')OR(vt0.c1)))AND(vt0.c2)))AND(t0.c68)))AND(vt0.lid))) NOTNULL)) ORDER BY (((((vt0.c1)&(vt0.c1))))>=((CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((x'')OR(vt0.c1)))AND(vt0.c2)))AND(t0.c68)))AND(vt0.lid))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c1)&(vt0.c1))))>=((CAST(vt0.c2 AS REAL)))));
SELECT ALL * FROM vt0, t0 WHERE (((((((((((x'')OR(vt0.c1)))AND(vt0.c2)))AND(t0.c68)))AND(vt0.lid))) NOTNULL)) ORDER BY (((((vt0.c1)&(vt0.c1))))>=((CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((x'')OR(vt0.c1)))AND(vt0.c2)))AND(t0.c68)))AND(vt0.lid))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c1)&(vt0.c1))))>=((CAST(vt0.c2 AS REAL)))));
SELECT ALL * FROM vt0, t0 WHERE (((((((((((x'')OR(vt0.c1)))AND(vt0.c2)))AND(t0.c68)))AND(vt0.lid))) NOTNULL)) ORDER BY (((((vt0.c1)&(vt0.c1))))>=((CAST(vt0.c2 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (0);
SELECT SUM(count) FROM (SELECT ((0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0);
SELECT SUM(count) FROM (SELECT ((0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.lid)) NOT BETWEEN ((CAST(t0.c68 AS NUMERIC))) AND ((CAST('1535807350' AS REAL))))) ORDER BY vt0.c1, ((((((vt0.c0)LIKE(vt0.c0)))OR((- (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN vt0.lid END)) ASC, (((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS NUMERIC))) AND (((((vt0.lid, vt0.c1, t0.c68)) NOT BETWEEN ((t0.c68, vt0.c2, vt0.c1)) AND ((vt0.c0, vt0.lid, '0唯'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid)) NOT BETWEEN ((CAST(t0.c68 AS NUMERIC))) AND ((CAST('1535807350' AS REAL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1, ((((((vt0.c0)LIKE(vt0.c0)))OR((- (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN vt0.lid END)) ASC, (((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS NUMERIC))) AND (((((vt0.lid, vt0.c1, t0.c68)) NOT BETWEEN ((t0.c68, vt0.c2, vt0.c1)) AND ((vt0.c0, vt0.lid, '0唯')))))));
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.lid)) NOT BETWEEN ((CAST(t0.c68 AS NUMERIC))) AND ((CAST('1535807350' AS REAL))))) ORDER BY vt0.c1, ((((((vt0.c0)LIKE(vt0.c0)))OR((- (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN vt0.lid END)) ASC, (((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS NUMERIC))) AND (((((vt0.lid, vt0.c1, t0.c68)) NOT BETWEEN ((t0.c68, vt0.c2, vt0.c1)) AND ((vt0.c0, vt0.lid, '0唯'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid)) NOT BETWEEN ((CAST(t0.c68 AS NUMERIC))) AND ((CAST('1535807350' AS REAL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1, ((((((vt0.c0)LIKE(vt0.c0)))OR((- (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN vt0.lid END)) ASC, (((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS NUMERIC))) AND (((((vt0.lid, vt0.c1, t0.c68)) NOT BETWEEN ((t0.c68, vt0.c2, vt0.c1)) AND ((vt0.c0, vt0.lid, '0唯')))))));
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.lid)) NOT BETWEEN ((CAST(t0.c68 AS NUMERIC))) AND ((CAST('1535807350' AS REAL))))) ORDER BY vt0.c1, ((((((vt0.c0)LIKE(vt0.c0)))OR((- (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN vt0.lid END)) ASC, (((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS NUMERIC))) AND (((((vt0.lid, vt0.c1, t0.c68)) NOT BETWEEN ((t0.c68, vt0.c2, vt0.c1)) AND ((vt0.c0, vt0.lid, '0唯'))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LOWER((NOT (t0.c68)))) ORDER BY ((CASE vt0.lid  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN '-861538347' WHEN t0.c68 THEN vt0.c1 ELSE vt0.c2 END)==(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((NOT (t0.c68)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE vt0.lid  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN '-861538347' WHEN t0.c68 THEN vt0.c1 ELSE vt0.c2 END)==(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LOWER((NOT (t0.c68)))) ORDER BY ((CASE vt0.lid  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN '-861538347' WHEN t0.c68 THEN vt0.c1 ELSE vt0.c2 END)==(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((NOT (t0.c68)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE vt0.lid  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN '-861538347' WHEN t0.c68 THEN vt0.c1 ELSE vt0.c2 END)==(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LOWER((NOT (t0.c68)))) ORDER BY ((CASE vt0.lid  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN '-861538347' WHEN t0.c68 THEN vt0.c1 ELSE vt0.c2 END)==(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((('1916285378')OR(CAST(t0.c68 AS REAL)))) ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1916285378')OR(CAST(t0.c68 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((('1916285378')OR(CAST(t0.c68 AS REAL)))) ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1916285378')OR(CAST(t0.c68 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((('1916285378')OR(CAST(t0.c68 AS REAL)))) ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((load_extension(t0.c68, vt0.c1)) BETWEEN ((('464186038')>=(vt0.c2))) AND (t0.c68)) WHERE (json_extract(CAST(vt0.c0 AS NUMERIC), (vt0.lid IN ())));
SELECT SUM(count) FROM (SELECT ((json_extract(CAST(vt0.c0 AS NUMERIC), (vt0.lid IN ()))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((load_extension(t0.c68, vt0.c1)) BETWEEN ((('464186038')>=(vt0.c2))) AND (t0.c68)));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((load_extension(t0.c68, vt0.c1)) BETWEEN ((('464186038')>=(vt0.c2))) AND (t0.c68)) WHERE (json_extract(CAST(vt0.c0 AS NUMERIC), (vt0.lid IN ())));
SELECT SUM(count) FROM (SELECT ((json_extract(CAST(vt0.c0 AS NUMERIC), (vt0.lid IN ()))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((load_extension(t0.c68, vt0.c1)) BETWEEN ((('464186038')>=(vt0.c2))) AND (t0.c68)));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68))) IS FALSE) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68))) IS FALSE));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68))) IS FALSE) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68))) IS FALSE));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68))) IS FALSE) WHERE (vt0.c2);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '-1102084971' END IN (CAST(t0.c68 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '-1102084971' END IN (CAST(t0.c68 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '-1102084971' END IN (CAST(t0.c68 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '-1102084971' END IN (CAST(t0.c68 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '-1102084971' END IN (CAST(t0.c68 AS TEXT))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((- (t0.c68)) IN ((((vt0.c1, vt0.lid, vt0.c2, vt0.lid, vt0.c2)) BETWEEN ((x'9892', '5_X*<],\㣌', vt0.c0, t0.c68, vt0.lid)) AND ((vt0.c2, vt0.c0, x'5248', t0.c68, vt0.lid))))));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c68)) IN ((((vt0.c1, vt0.lid, vt0.c2, vt0.lid, vt0.c2)) BETWEEN ((x'9892', '5_X*<],\㣌', vt0.c0, t0.c68, vt0.lid)) AND ((vt0.c2, vt0.c0, x'5248', t0.c68, vt0.lid)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((- (t0.c68)) IN ((((vt0.c1, vt0.lid, vt0.c2, vt0.lid, vt0.c2)) BETWEEN ((x'9892', '5_X*<],\㣌', vt0.c0, t0.c68, vt0.lid)) AND ((vt0.c2, vt0.c0, x'5248', t0.c68, vt0.lid))))));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c68)) IN ((((vt0.c1, vt0.lid, vt0.c2, vt0.lid, vt0.c2)) BETWEEN ((x'9892', '5_X*<],\㣌', vt0.c0, t0.c68, vt0.lid)) AND ((vt0.c2, vt0.c0, x'5248', t0.c68, vt0.lid)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((- (t0.c68)) IN ((((vt0.c1, vt0.lid, vt0.c2, vt0.lid, vt0.c2)) BETWEEN ((x'9892', '5_X*<],\㣌', vt0.c0, t0.c68, vt0.lid)) AND ((vt0.c2, vt0.c0, x'5248', t0.c68, vt0.lid))))));
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68, t0.c68, t0.c68)) BETWEEN ((-813077115, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) IN ())) ORDER BY CASE WHEN CAST(t0.c68 AS REAL) THEN json_quote(t0.c68) END, ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)=(((t0.c68)%(t0.c68)))), (t0.c68 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68, t0.c68, t0.c68)) BETWEEN ((-813077115, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c68 AS REAL) THEN json_quote(t0.c68) END, ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)=(((t0.c68)%(t0.c68)))), (t0.c68 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68, t0.c68, t0.c68)) BETWEEN ((-813077115, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) IN ())) ORDER BY CASE WHEN CAST(t0.c68 AS REAL) THEN json_quote(t0.c68) END, ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)=(((t0.c68)%(t0.c68)))), (t0.c68 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68, t0.c68, t0.c68)) BETWEEN ((-813077115, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c68 AS REAL) THEN json_quote(t0.c68) END, ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)=(((t0.c68)%(t0.c68)))), (t0.c68 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68, t0.c68, t0.c68)) BETWEEN ((-813077115, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) IN ())) ORDER BY CASE WHEN CAST(t0.c68 AS REAL) THEN json_quote(t0.c68) END, ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)=(((t0.c68)%(t0.c68)))), (t0.c68 COLLATE BINARY IN ());
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c68) IS TRUE))%((((t0.c68))<=((t0.c68))))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) IS TRUE))%((((t0.c68))<=((t0.c68))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c68) IS TRUE))%((((t0.c68))<=((t0.c68))))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) IS TRUE))%((((t0.c68))<=((t0.c68))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c68) IS TRUE))%((((t0.c68))<=((t0.c68))))) DESC;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CAST(t0.c68 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CAST(t0.c68 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CAST(t0.c68 AS BLOB)) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)<>(vt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((-1.533750497E9)/(vt0.c1))  WHEN '1320039158' THEN ((vt0.c2)&(vt0.c0)) WHEN ((vt0.c2)/(vt0.c1)) THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 END WHEN (0x1fe1ba17 IN ()) THEN CASE WHEN vt0.lid THEN vt0.lid ELSE vt0.c1 END WHEN TRIM(vt0.c0, vt0.c1) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (vt0.c2)) THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1)+(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((-1.533750497E9)/(vt0.c1))  WHEN '1320039158' THEN ((vt0.c2)&(vt0.c0)) WHEN ((vt0.c2)/(vt0.c1)) THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 END WHEN (0X1fe1ba17 IN ()) THEN CASE WHEN vt0.lid THEN vt0.lid ELSE vt0.c1 END WHEN TRIM(vt0.c0, vt0.c1) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (vt0.c2)) THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1)+(vt0.c1)) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((-1.533750497E9)/(vt0.c1))  WHEN '1320039158' THEN ((vt0.c2)&(vt0.c0)) WHEN ((vt0.c2)/(vt0.c1)) THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 END WHEN (0x1fe1ba17 IN ()) THEN CASE WHEN vt0.lid THEN vt0.lid ELSE vt0.c1 END WHEN TRIM(vt0.c0, vt0.c1) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (vt0.c2)) THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1)+(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((-1.533750497E9)/(vt0.c1))  WHEN '1320039158' THEN ((vt0.c2)&(vt0.c0)) WHEN ((vt0.c2)/(vt0.c1)) THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 END WHEN (0X1fe1ba17 IN ()) THEN CASE WHEN vt0.lid THEN vt0.lid ELSE vt0.c1 END WHEN TRIM(vt0.c0, vt0.c1) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (vt0.c2)) THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1)+(vt0.c1)) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((-1.533750497E9)/(vt0.c1))  WHEN '1320039158' THEN ((vt0.c2)&(vt0.c0)) WHEN ((vt0.c2)/(vt0.c1)) THEN CASE vt0.lid  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 END WHEN (0x1fe1ba17 IN ()) THEN CASE WHEN vt0.lid THEN vt0.lid ELSE vt0.c1 END WHEN TRIM(vt0.c0, vt0.c1) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (vt0.c2)) THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1)+(vt0.c1)) END  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ('446347565');
SELECT SUM(count) FROM (SELECT (('446347565') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('446347565');
SELECT SUM(count) FROM (SELECT (('446347565') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('446347565');
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.lid) NOTNULL))<=(CAST('1368849545' AS INTEGER)))) ORDER BY TRIM(DISTINCT vt0.c2 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid) NOTNULL))<=(CAST('1368849545' AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY TRIM(DISTINCT vt0.c2 COLLATE NOCASE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.lid) NOTNULL))<=(CAST('1368849545' AS INTEGER)))) ORDER BY TRIM(DISTINCT vt0.c2 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid) NOTNULL))<=(CAST('1368849545' AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY TRIM(DISTINCT vt0.c2 COLLATE NOCASE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.lid) NOTNULL))<=(CAST('1368849545' AS INTEGER)))) ORDER BY TRIM(DISTINCT vt0.c2 COLLATE NOCASE)  NULLS FIRST;
SELECT * FROM t0 WHERE ((+ (t0.c68 COLLATE RTRIM))) ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) AND ((t0.c68 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) AND ((t0.c68 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (t0.c68 COLLATE RTRIM))) ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) AND ((t0.c68 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) AND ((t0.c68 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (t0.c68 COLLATE RTRIM))) ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) AND ((t0.c68 COLLATE RTRIM)))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((vt0.lid) NOT BETWEEN (''' ,oa1EgE') AND ((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((vt0.lid) NOT BETWEEN (''' ,oa1EgE') AND ((+ (t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.lid) NOT BETWEEN (''' ,oa1EgE') AND ((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((vt0.lid) NOT BETWEEN (''' ,oa1EgE') AND ((+ (t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.lid) NOT BETWEEN (''' ,oa1EgE') AND ((+ (t0.c68)))));
SELECT * FROM vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.lid);
SELECT ALL * FROM t0, vt0 WHERE (0.16479674005405875);
SELECT SUM(count) FROM (SELECT ((0.16479674005405875) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0.16479674005405875);
SELECT SUM(count) FROM (SELECT ((0.16479674005405875) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0.16479674005405875);
SELECT COUNT(*) FROM t0, vt0 WHERE (4.50970866E8);
SELECT SUM(count) FROM (SELECT ALL ((4.50970866E8) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (4.50970866E8);
SELECT SUM(count) FROM (SELECT ALL ((4.50970866E8) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (4.50970866E8);
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.lid AS REAL))IS(LENGTH(vt0.lid)))) ORDER BY CAST(t0.c68 AS REAL) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.lid AS REAL))IS(LENGTH(vt0.lid)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(t0.c68 AS REAL) COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.lid AS REAL))IS(LENGTH(vt0.lid)))) ORDER BY CAST(t0.c68 AS REAL) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.lid AS REAL))IS(LENGTH(vt0.lid)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(t0.c68 AS REAL) COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.lid AS REAL))IS(LENGTH(vt0.lid)))) ORDER BY CAST(t0.c68 AS REAL) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (TYPEOF(DISTINCT ((((x'')AND(-1.533750497E9)))AND(vt0.c1)))) ORDER BY (((vt0.c2, 0.8455128983545962, t0.c68)) BETWEEN ((UNLIKELY(NULL), '\', vt0.c1 COLLATE NOCASE)) AND (((- (vt0.c0)), (+ (vt0.c0)), ((vt0.lid)%(vt0.c0))))) ASC  NULLS FIRST, ((((t0.c68)<=(vt0.lid))) BETWEEN ((('1656268865')IS NOT(vt0.lid))) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((((x'')AND(-1.533750497E9)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2, 0.8455128983545962, t0.c68)) BETWEEN ((UNLIKELY(NULL), '\', vt0.c1 COLLATE NOCASE)) AND (((- (vt0.c0)), (+ (vt0.c0)), ((vt0.lid)%(vt0.c0))))) ASC  NULLS FIRST, ((((t0.c68)<=(vt0.lid))) BETWEEN ((('1656268865')IS NOT(vt0.lid))) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))));
SELECT ALL * FROM vt0, t0 WHERE (TYPEOF(DISTINCT ((((x'')AND(-1.533750497E9)))AND(vt0.c1)))) ORDER BY (((vt0.c2, 0.8455128983545962, t0.c68)) BETWEEN ((UNLIKELY(NULL), '\', vt0.c1 COLLATE NOCASE)) AND (((- (vt0.c0)), (+ (vt0.c0)), ((vt0.lid)%(vt0.c0))))) ASC  NULLS FIRST, ((((t0.c68)<=(vt0.lid))) BETWEEN ((('1656268865')IS NOT(vt0.lid))) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((((x'')AND(-1.533750497E9)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2, 0.8455128983545962, t0.c68)) BETWEEN ((UNLIKELY(NULL), '\', vt0.c1 COLLATE NOCASE)) AND (((- (vt0.c0)), (+ (vt0.c0)), ((vt0.lid)%(vt0.c0))))) ASC  NULLS FIRST, ((((t0.c68)<=(vt0.lid))) BETWEEN ((('1656268865')IS NOT(vt0.lid))) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))));
SELECT ALL * FROM vt0, t0 WHERE (TYPEOF(DISTINCT ((((x'')AND(-1.533750497E9)))AND(vt0.c1)))) ORDER BY (((vt0.c2, 0.8455128983545962, t0.c68)) BETWEEN ((UNLIKELY(NULL), '\', vt0.c1 COLLATE NOCASE)) AND (((- (vt0.c0)), (+ (vt0.c0)), ((vt0.lid)%(vt0.c0))))) ASC  NULLS FIRST, ((((t0.c68)<=(vt0.lid))) BETWEEN ((('1656268865')IS NOT(vt0.lid))) AND ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c0)>(''))  WHEN ((x'') ISNULL) THEN ((vt0.c2)IS(vt0.c0)) ELSE 0x4f630423 COLLATE NOCASE END) ORDER BY CASE WHEN t0.c68 COLLATE BINARY THEN ((vt0.c2) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN (((t0.c68))<=((vt0.c1))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)<(t0.c68)) THEN (+ (vt0.c1)) ELSE 0.897787141651254 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>(''))  WHEN ((x'') ISNULL) THEN ((vt0.c2)IS(vt0.c0)) ELSE 0X4f630423 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN t0.c68 COLLATE BINARY THEN ((vt0.c2) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN (((t0.c68))<=((vt0.c1))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)<(t0.c68)) THEN (+ (vt0.c1)) ELSE 0.897787141651254 END  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c0)>(''))  WHEN ((x'') ISNULL) THEN ((vt0.c2)IS(vt0.c0)) ELSE 0x4f630423 COLLATE NOCASE END) ORDER BY CASE WHEN t0.c68 COLLATE BINARY THEN ((vt0.c2) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN (((t0.c68))<=((vt0.c1))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)<(t0.c68)) THEN (+ (vt0.c1)) ELSE 0.897787141651254 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>(''))  WHEN ((x'') ISNULL) THEN ((vt0.c2)IS(vt0.c0)) ELSE 0X4f630423 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN t0.c68 COLLATE BINARY THEN ((vt0.c2) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN (((t0.c68))<=((vt0.c1))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)<(t0.c68)) THEN (+ (vt0.c1)) ELSE 0.897787141651254 END  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c0)>(''))  WHEN ((x'') ISNULL) THEN ((vt0.c2)IS(vt0.c0)) ELSE 0x4f630423 COLLATE NOCASE END) ORDER BY CASE WHEN t0.c68 COLLATE BINARY THEN ((vt0.c2) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN (((t0.c68))<=((vt0.c1))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)<(t0.c68)) THEN (+ (vt0.c1)) ELSE 0.897787141651254 END  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c68))<>((t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c68))<>((t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c68))<>((t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c68))<>((t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c68))<>((t0.c68))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.lid AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.lid AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.lid AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.lid AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.lid AS NUMERIC));
SELECT ALL * FROM t0 WHERE ((NOT ((~ (t0.c68))))) ORDER BY CASE ((((t0.c68)OR(t0.c68)))OR(t0.c68))  WHEN ((x'') ISNULL) THEN t0.c68 ELSE (~ (t0.c68)) END ASC  NULLS FIRST, ((((t0.c68) ISNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c68)OR(t0.c68)))OR(t0.c68))  WHEN ((x'') ISNULL) THEN t0.c68 ELSE (~ (t0.c68)) END ASC  NULLS FIRST, ((((t0.c68) ISNULL)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((NOT ((~ (t0.c68))))) ORDER BY CASE ((((t0.c68)OR(t0.c68)))OR(t0.c68))  WHEN ((x'') ISNULL) THEN t0.c68 ELSE (~ (t0.c68)) END ASC  NULLS FIRST, ((((t0.c68) ISNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c68)OR(t0.c68)))OR(t0.c68))  WHEN ((x'') ISNULL) THEN t0.c68 ELSE (~ (t0.c68)) END ASC  NULLS FIRST, ((((t0.c68) ISNULL)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((NOT ((~ (t0.c68))))) ORDER BY CASE ((((t0.c68)OR(t0.c68)))OR(t0.c68))  WHEN ((x'') ISNULL) THEN t0.c68 ELSE (~ (t0.c68)) END ASC  NULLS FIRST, ((((t0.c68) ISNULL)) IS TRUE)  NULLS LAST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)))%(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)))%(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)))%(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)))%(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)))%(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (NULL);
SELECT * FROM vt0, t0 WHERE (((('7'))<=((((vt0.c1) BETWEEN (vt0.c2) AND (t0.c68)))))) ORDER BY ((((vt0.lid) IS TRUE))>(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2)))) DESC, (vt0.lid IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('7'))<=((((vt0.c1) BETWEEN (vt0.c2) AND (t0.c68)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.lid) IS TRUE))>(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2)))) DESC, (vt0.lid IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((('7'))<=((((vt0.c1) BETWEEN (vt0.c2) AND (t0.c68)))))) ORDER BY ((((vt0.lid) IS TRUE))>(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2)))) DESC, (vt0.lid IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('7'))<=((((vt0.c1) BETWEEN (vt0.c2) AND (t0.c68)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.lid) IS TRUE))>(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2)))) DESC, (vt0.lid IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((('7'))<=((((vt0.c1) BETWEEN (vt0.c2) AND (t0.c68)))))) ORDER BY ((((vt0.lid) IS TRUE))>(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2)))) DESC, (vt0.lid IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((NOT (HEX(DISTINCT t0.c68)))) ORDER BY ((t0.c68) NOT NULL), CAST(t0.c68 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(DISTINCT t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68) NOT NULL), CAST(t0.c68 AS BLOB)  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (HEX(DISTINCT t0.c68)))) ORDER BY ((t0.c68) NOT NULL), CAST(t0.c68 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(DISTINCT t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68) NOT NULL), CAST(t0.c68 AS BLOB)  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (HEX(DISTINCT t0.c68)))) ORDER BY ((t0.c68) NOT NULL), CAST(t0.c68 AS BLOB)  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((((vt0.c2 IN (vt0.c1)))AND('-579851261'))) ORDER BY ((((((vt0.c2)<<(vt0.c1)))AND(CASE vt0.c2  WHEN vt0.c2 THEN 0x53123e17 ELSE vt0.lid END)))AND(IFNULL(DISTINCT vt0.c2, vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.c1)))AND('-579851261'))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c2)<<(vt0.c1)))AND(CASE vt0.c2  WHEN vt0.c2 THEN 0X53123e17 ELSE vt0.lid END)))AND(IFNULL(DISTINCT vt0.c2, vt0.c0))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c2 IN (vt0.c1)))AND('-579851261'))) ORDER BY ((((((vt0.c2)<<(vt0.c1)))AND(CASE vt0.c2  WHEN vt0.c2 THEN 0x53123e17 ELSE vt0.lid END)))AND(IFNULL(DISTINCT vt0.c2, vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.c1)))AND('-579851261'))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c2)<<(vt0.c1)))AND(CASE vt0.c2  WHEN vt0.c2 THEN 0X53123e17 ELSE vt0.lid END)))AND(IFNULL(DISTINCT vt0.c2, vt0.c0))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c2 IN (vt0.c1)))AND('-579851261'))) ORDER BY ((((((vt0.c2)<<(vt0.c1)))AND(CASE vt0.c2  WHEN vt0.c2 THEN 0x53123e17 ELSE vt0.lid END)))AND(IFNULL(DISTINCT vt0.c2, vt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)LIKE(t0.c68)))>('1583931288' COLLATE RTRIM))) ORDER BY ((CASE t0.c68  WHEN '1133307016' THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((t0.c68)OR(t0.c68)))AND(t0.c68))))  NULLS LAST, ((t0.c68)<<(((t0.c68)>=(t0.c68))))  NULLS FIRST, (((((t0.c68)OR(NULL)))OR(t0.c68)) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c68)LIKE(t0.c68)))>('1583931288' COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c68  WHEN '1133307016' THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((t0.c68)OR(t0.c68)))AND(t0.c68))))  NULLS LAST, ((t0.c68)<<(((t0.c68)>=(t0.c68))))  NULLS FIRST, (((((t0.c68)OR(NULL)))OR(t0.c68)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)LIKE(t0.c68)))>('1583931288' COLLATE RTRIM))) ORDER BY ((CASE t0.c68  WHEN '1133307016' THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((t0.c68)OR(t0.c68)))AND(t0.c68))))  NULLS LAST, ((t0.c68)<<(((t0.c68)>=(t0.c68))))  NULLS FIRST, (((((t0.c68)OR(NULL)))OR(t0.c68)) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c68)LIKE(t0.c68)))>('1583931288' COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c68  WHEN '1133307016' THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((t0.c68)OR(t0.c68)))AND(t0.c68))))  NULLS LAST, ((t0.c68)<<(((t0.c68)>=(t0.c68))))  NULLS FIRST, (((((t0.c68)OR(NULL)))OR(t0.c68)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)LIKE(t0.c68)))>('1583931288' COLLATE RTRIM))) ORDER BY ((CASE t0.c68  WHEN '1133307016' THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((t0.c68)OR(t0.c68)))AND(t0.c68))))  NULLS LAST, ((t0.c68)<<(((t0.c68)>=(t0.c68))))  NULLS FIRST, (((((t0.c68)OR(NULL)))OR(t0.c68)) IN ());
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c1  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c1  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c1  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((x'605b') NOT BETWEEN (t0.c68) AND (t0.c68)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'605b') NOT BETWEEN (t0.c68) AND (t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((x'605b') NOT BETWEEN (t0.c68) AND (t0.c68)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'605b') NOT BETWEEN (t0.c68) AND (t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((x'605b') NOT BETWEEN (t0.c68) AND (t0.c68)) COLLATE NOCASE);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.lid) AND (((vt0.c2)LIKE(vt0.lid))))) ORDER BY vt0.lid;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.lid) AND (((vt0.c2)LIKE(vt0.lid))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.lid);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.lid) AND (((vt0.c2)LIKE(vt0.lid))))) ORDER BY vt0.lid;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.lid) AND (((vt0.c2)LIKE(vt0.lid))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.lid);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.lid) AND (((vt0.c2)LIKE(vt0.lid))))) ORDER BY vt0.lid;
SELECT ALL * FROM t0, vt0 WHERE (x'73f8') ORDER BY ((t0.c68) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((x'73f8') IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68) IS FALSE));
SELECT ALL * FROM t0, vt0 WHERE (x'73f8') ORDER BY ((t0.c68) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((x'73f8') IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68) IS FALSE));
SELECT ALL * FROM t0, vt0 WHERE (x'73f8') ORDER BY ((t0.c68) IS FALSE);
SELECT * FROM vt0, t0 WHERE (((((vt0.c2)-(vt0.c0))) NOT NULL)) ORDER BY (((((((((vt0.c2)AND(NULL)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)-(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((vt0.c2)AND(NULL)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)) IN ())  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c2)-(vt0.c0))) NOT NULL)) ORDER BY (((((((((vt0.c2)AND(NULL)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)-(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((vt0.c2)AND(NULL)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)) IN ())  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c2)-(vt0.c0))) NOT NULL)) ORDER BY (((((((((vt0.c2)AND(NULL)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)) IN ())  NULLS FIRST;
