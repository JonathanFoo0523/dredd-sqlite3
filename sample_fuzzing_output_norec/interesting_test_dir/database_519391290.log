-- Time: 2024/06/10 14:24:52
-- Database: database90
-- Database version: 3.40.0
-- seed value: 519391290
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR FAIL INTO rt0(c2) VALUES (''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES ('KQ'); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES ('', 0.48347491039844737), (x'', 0.6914449581331904), ('-542826082', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (-542826082, x'', NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('737272880'), (''), (x'e955'), (x''), (0.5924387303735213); -- 0ms;
ANALYZE; -- 1ms;
END; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 TEXT ); -- 4ms;
INSERT OR IGNORE INTO rt1 VALUES (x'00c23bb7ced5', NULL, x'', '_#Zi[a'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (x'', 0.55355934852854); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'b540', NULL, '0EVD怸烉LU)', NULL), (NULL, 0.45669334347265444, x'', x'b6fd'), (x'', '1787001305', '-542826082', x''); -- 0ms;
INSERT OR REPLACE INTO rt1(c3, c1, c0, c2) VALUES (x'', '1787001305', '-941398893', x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (x''), (''), (NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=9223372036854775807, c2='qJQ[W'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (x''), (''), (x''); -- 14ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-682237366'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 5ms;
INSERT OR IGNORE INTO rt1(c2, c3, c1) VALUES ('1787001305', NULL, 0.9454619911346774); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (NULL, NULL), ('0.9454619911346774', NULL), (0.5924387303735213, 'QꜲ'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c3) VALUES (x'', 'VY'), (NULL, '-1516968066'), (721594162, '-1516968066'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA journal_size_limit = 0; -- 0ms;
COMMIT; -- 9ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=721594162 unordered'); -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0)=('mk''', NULL) WHERE ((vt0.c0 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1453121583 unordered'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c3=x'0b10' WHERE -8.58562504E8; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c0, c1) VALUES (NULL, x'', 0.6899421630892298), (NULL, 0.7038052533743449, '-858562504'), (0.9429950921500706, '0.9429950921500706', 0.7459835252725769); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('1751347401', '737272880'); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (NULL), (''), (NULL); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST('-672306414' AS BLOB))LIKE(((vt0.c0)IS(rt0.c0)))) INNER JOIN rt0 ON CASE vt0.c0  WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c2 END COLLATE BINARY WHERE (0.967226612621859) ORDER BY ((0X326f538b)-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.967226612621859) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST('-672306414' AS BLOB))LIKE(((vt0.c0)IS(rt0.c0)))) INNER JOIN rt0 ON CASE vt0.c0  WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c2 END COLLATE BINARY ORDER BY ((0x326f538b)-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST('-672306414' AS BLOB))LIKE(((vt0.c0)IS(rt0.c0)))) INNER JOIN rt0 ON CASE vt0.c0  WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c2 END COLLATE BINARY WHERE (0.967226612621859) ORDER BY ((0X326f538b)-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.967226612621859) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((CAST('-672306414' AS BLOB))LIKE(((vt0.c0)IS(rt0.c0)))) INNER JOIN rt0 ON CASE vt0.c0  WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c2 END COLLATE BINARY ORDER BY ((0x326f538b)-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) ASC);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((rt1.c0)<=(rt1.c0)) IN (rt1.c1 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<=(rt1.c0)) IN (rt1.c1 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((rt1.c0)<=(rt1.c0)) IN (rt1.c1 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<=(rt1.c0)) IN (rt1.c1 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((rt1.c0)<=(rt1.c0)) IN (rt1.c1 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((LIKELIHOOD(rt1.c0, 0.3093225472216772))OR(0X18403619)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt1.c0, 0.3093225472216772))OR(0X18403619))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((LIKELIHOOD(rt1.c0, 0.3093225472216772))OR(0X18403619)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt1.c0, 0.3093225472216772))OR(0X18403619))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((LIKELIHOOD(rt1.c0, 0.3093225472216772))OR(0X18403619)));
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((- ((rt1.c1 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((- ((rt1.c1 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((- ((rt1.c1 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT * FROM rt0 WHERE (((json_quote(rt0.c2)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(rt0.c2)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((json_quote(rt0.c2)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(rt0.c2)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((json_quote(rt0.c2)) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(rt1.c3) THEN (((x'', rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c3, vt0.c0, rt1.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) END LEFT OUTER JOIN vt0 ON ((((rt1.c2)/(rt0.c0))) NOTNULL) WHERE (COALESCE(DISTINCT '>', ((rt0.c2)<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT '>', ((rt0.c2)<(rt0.c2)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(rt1.c3) THEN (((x'', rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c3, vt0.c0, rt1.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) END LEFT OUTER JOIN vt0 ON ((((rt1.c2)/(rt0.c0))) NOTNULL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(rt1.c3) THEN (((x'', rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c3, vt0.c0, rt1.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) END LEFT OUTER JOIN vt0 ON ((((rt1.c2)/(rt0.c0))) NOTNULL) WHERE (COALESCE(DISTINCT '>', ((rt0.c2)<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT '>', ((rt0.c2)<(rt0.c2)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(rt1.c3) THEN (((x'', rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c3, vt0.c0, rt1.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) END LEFT OUTER JOIN vt0 ON ((((rt1.c2)/(rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c0)))<(UPPER(DISTINCT vt0.c0)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))<(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c0)))<(UPPER(DISTINCT vt0.c0)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))<(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c0)))<(UPPER(DISTINCT vt0.c0)))) ORDER BY '';
SELECT ALL * FROM vt0, rt1 WHERE (ABS(DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (ABS(DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (ABS(DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER)) ORDER BY (((NOT (vt0.c0)))>=(((rt0.c2) IS TRUE))), ((((rt0.c1)/(rt0.c0)))%(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((NOT (vt0.c0)))>=(((rt0.c2) IS TRUE))), ((((rt0.c1)/(rt0.c0)))%(NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER)) ORDER BY (((NOT (vt0.c0)))>=(((rt0.c2) IS TRUE))), ((((rt0.c1)/(rt0.c0)))%(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((NOT (vt0.c0)))>=(((rt0.c2) IS TRUE))), ((((rt0.c1)/(rt0.c0)))%(NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER)) ORDER BY (((NOT (vt0.c0)))>=(((rt0.c2) IS TRUE))), ((((rt0.c1)/(rt0.c0)))%(NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_USED(rt0.c0) THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c0, -941398893))) WHEN HEX(x'd9e8') THEN '0' END) ORDER BY (((rt0.c1) NOTNULL) IN ()) ASC, (-1667828418 IN (CAST('_#ZI[A' AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN SQLITE_COMPILEOPTION_USED(rt0.c0) THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c0, -941398893))) WHEN HEX(x'd9e8') THEN '0' END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((rt0.c1) NOTNULL) IN ()) ASC, (-1667828418 IN (CAST('_#ZI[A' AS REAL))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_USED(rt0.c0) THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c0, -941398893))) WHEN HEX(x'd9e8') THEN '0' END) ORDER BY (((rt0.c1) NOTNULL) IN ()) ASC, (-1667828418 IN (CAST('_#ZI[A' AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN SQLITE_COMPILEOPTION_USED(rt0.c0) THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c0, -941398893))) WHEN HEX(x'd9e8') THEN '0' END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((rt0.c1) NOTNULL) IN ()) ASC, (-1667828418 IN (CAST('_#ZI[A' AS REAL))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_USED(rt0.c0) THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c0, -941398893))) WHEN HEX(x'd9e8') THEN '0' END) ORDER BY (((rt0.c1) NOTNULL) IN ()) ASC, (-1667828418 IN (CAST('_#ZI[A' AS REAL))) DESC;
SELECT * FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c1 IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)IS(0.9521671432176134))) AND (vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)IS(0.9521671432176134))) AND (vt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)IS(0.9521671432176134))) AND (vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)IS(0.9521671432176134))) AND (vt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)IS(0.9521671432176134))) AND (vt0.c0)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE NOCASE DESC, ((((((((((vt0.c0) IS FALSE))AND(rt0.c1)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)=(rt0.c1)))))OR(CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE NOCASE DESC, ((((((((((vt0.c0) IS FALSE))AND(rt0.c1)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)==(rt0.c1)))))OR(CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE NOCASE DESC, ((((((((((vt0.c0) IS FALSE))AND(rt0.c1)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)=(rt0.c1)))))OR(CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE NOCASE DESC, ((((((((((vt0.c0) IS FALSE))AND(rt0.c1)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)==(rt0.c1)))))OR(CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)) IN ()) ASC  NULLS FIRST, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE NOCASE DESC, ((((((((((vt0.c0) IS FALSE))AND(rt0.c1)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0)=(rt0.c1)))))OR(CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c2);
SELECT * FROM vt0, rt1 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c3)))OR((- (rt1.c2)))))OR((+ (rt1.c0)))) DESC  NULLS LAST, CASE WHEN (rt1.c1 IN ()) THEN 0Xffffffffccd36038 ELSE ((rt1.c0) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c3)))OR((- (rt1.c2)))))OR((+ (rt1.c0)))) DESC  NULLS LAST, CASE WHEN (rt1.c1 IN ()) THEN 0Xffffffffccd36038 ELSE ((rt1.c0) NOT NULL) END ASC);
SELECT * FROM vt0, rt1 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c3)))OR((- (rt1.c2)))))OR((+ (rt1.c0)))) DESC  NULLS LAST, CASE WHEN (rt1.c1 IN ()) THEN 0Xffffffffccd36038 ELSE ((rt1.c0) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c3)))OR((- (rt1.c2)))))OR((+ (rt1.c0)))) DESC  NULLS LAST, CASE WHEN (rt1.c1 IN ()) THEN 0Xffffffffccd36038 ELSE ((rt1.c0) NOT NULL) END ASC);
SELECT * FROM vt0, rt1 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c3)))OR((- (rt1.c2)))))OR((+ (rt1.c0)))) DESC  NULLS LAST, CASE WHEN (rt1.c1 IN ()) THEN 0Xffffffffccd36038 ELSE ((rt1.c0) NOT NULL) END ASC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1 COLLATE BINARY INNER JOIN rt0 ON (((rt0.c0 IN ()))*((-858562504 IN ()))) WHERE (CASE WHEN ((rt1.c3)-(rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3)-(rt0.c2)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1 COLLATE BINARY INNER JOIN rt0 ON (((rt0.c0 IN ()))*((-858562504 IN ()))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1 COLLATE BINARY INNER JOIN rt0 ON (((rt0.c0 IN ()))*((-858562504 IN ()))) WHERE (CASE WHEN ((rt1.c3)-(rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3)-(rt0.c2)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1 COLLATE BINARY INNER JOIN rt0 ON (((rt0.c0 IN ()))*((-858562504 IN ()))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c1 COLLATE BINARY INNER JOIN rt0 ON (((rt0.c0 IN ()))*((-858562504 IN ()))) WHERE (CASE WHEN ((rt1.c3)-(rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c2)%(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, ((vt0.c0) NOTNULL), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY 0.968001312015321 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c2)%(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, ((vt0.c0) NOTNULL), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.968001312015321 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c2)%(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, ((vt0.c0) NOTNULL), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY 0.968001312015321 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c2)%(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, ((vt0.c0) NOTNULL), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.968001312015321 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c2)%(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, ((vt0.c0) NOTNULL), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY 0.968001312015321 DESC  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE ((+ (HEX(DISTINCT NULL)))) ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt0.c0)))OR(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (HEX(DISTINCT NULL)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt0.c0)))OR(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((+ (HEX(DISTINCT NULL)))) ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt0.c0)))OR(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (HEX(DISTINCT NULL)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt0.c0)))OR(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((+ (HEX(DISTINCT NULL)))) ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt0.c0)))OR(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c3);
SELECT ALL * FROM rt1, vt0 WHERE (CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c1)AND(vt0.c0)) THEN ((rt1.c1) ISNULL) ELSE (((rt1.c1))<=((rt1.c0))) END) ORDER BY (((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(vt0.c0)))OR(rt1.c2)), LTRIM(rt1.c3), ((vt0.c0)|(rt1.c0))))=((((rt1.c2) NOT BETWEEN (rt1.c2) AND (NULL)), ((vt0.c0)!=(rt1.c2)), (+ (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c1)AND(vt0.c0)) THEN ((rt1.c1) ISNULL) ELSE (((rt1.c1))<=((rt1.c0))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(vt0.c0)))OR(rt1.c2)), LTRIM(rt1.c3), ((vt0.c0)|(rt1.c0))))=((((rt1.c2) NOT BETWEEN (rt1.c2) AND (NULL)), ((vt0.c0)<>(rt1.c2)), (+ (rt1.c3)))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c1)AND(vt0.c0)) THEN ((rt1.c1) ISNULL) ELSE (((rt1.c1))<=((rt1.c0))) END) ORDER BY (((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(vt0.c0)))OR(rt1.c2)), LTRIM(rt1.c3), ((vt0.c0)|(rt1.c0))))=((((rt1.c2) NOT BETWEEN (rt1.c2) AND (NULL)), ((vt0.c0)!=(rt1.c2)), (+ (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c1)AND(vt0.c0)) THEN ((rt1.c1) ISNULL) ELSE (((rt1.c1))<=((rt1.c0))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(vt0.c0)))OR(rt1.c2)), LTRIM(rt1.c3), ((vt0.c0)|(rt1.c0))))=((((rt1.c2) NOT BETWEEN (rt1.c2) AND (NULL)), ((vt0.c0)<>(rt1.c2)), (+ (rt1.c3)))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c1)AND(vt0.c0)) THEN ((rt1.c1) ISNULL) ELSE (((rt1.c1))<=((rt1.c0))) END) ORDER BY (((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(vt0.c0)))OR(rt1.c2)), LTRIM(rt1.c3), ((vt0.c0)|(rt1.c0))))=((((rt1.c2) NOT BETWEEN (rt1.c2) AND (NULL)), ((vt0.c0)!=(rt1.c2)), (+ (rt1.c3)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN 'Jo璲*' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND('712436386')))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR((((vt0.c0))>((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN 'Jo璲*' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND('712436386')))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR((((vt0.c0))>((NULL)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN 'Jo璲*' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND('712436386')))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR((((vt0.c0))>((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN 'Jo璲*' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND('712436386')))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR((((vt0.c0))>((NULL)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN 'Jo璲*' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND('712436386')))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR((((vt0.c0))>((NULL)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULLIF(DISTINCT ((rt1.c3) IS FALSE), ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR(''))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt1.c3) IS FALSE), ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR('')))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULLIF(DISTINCT ((rt1.c3) IS FALSE), ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR(''))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt1.c3) IS FALSE), ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR('')))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULLIF(DISTINCT ((rt1.c3) IS FALSE), ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR(''))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)|(((rt1.c3)LIKE(rt1.c2))))) ORDER BY ((((rt1.c2)|(rt1.c3))) BETWEEN (rt1.c2) AND ((+ (rt1.c1)))) ASC, CASE WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c2) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END)|(((rt1.c3)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)|(rt1.c3))) BETWEEN (rt1.c2) AND ((+ (rt1.c1)))) ASC, CASE WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c2) IS TRUE) END);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)|(((rt1.c3)LIKE(rt1.c2))))) ORDER BY ((((rt1.c2)|(rt1.c3))) BETWEEN (rt1.c2) AND ((+ (rt1.c1)))) ASC, CASE WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c2) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END)|(((rt1.c3)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)|(rt1.c3))) BETWEEN (rt1.c2) AND ((+ (rt1.c1)))) ASC, CASE WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c2) IS TRUE) END);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)|(((rt1.c3)LIKE(rt1.c2))))) ORDER BY ((((rt1.c2)|(rt1.c3))) BETWEEN (rt1.c2) AND ((+ (rt1.c1)))) ASC, CASE WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c2) IS TRUE) END;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 NOT INDEXED WHERE (((TRIM(DISTINCT vt0.c0))|(CAST(rt0.c2 AS BLOB)))) ORDER BY CHAR(rt1.c3, CAST(rt1.c1 AS NUMERIC), (((rt1.c3, rt1.c0, vt0.c0))>=((rt1.c1, rt0.c1, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0))|(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CHAR(rt1.c3, CAST(rt1.c1 AS NUMERIC), (((rt1.c3, rt1.c0, vt0.c0))>=((rt1.c1, rt0.c1, vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 NOT INDEXED WHERE (((TRIM(DISTINCT vt0.c0))|(CAST(rt0.c2 AS BLOB)))) ORDER BY CHAR(rt1.c3, CAST(rt1.c1 AS NUMERIC), (((rt1.c3, rt1.c0, vt0.c0))>=((rt1.c1, rt0.c1, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0))|(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CHAR(rt1.c3, CAST(rt1.c1 AS NUMERIC), (((rt1.c3, rt1.c0, vt0.c0))>=((rt1.c1, rt0.c1, vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 NOT INDEXED WHERE (((TRIM(DISTINCT vt0.c0))|(CAST(rt0.c2 AS BLOB)))) ORDER BY CHAR(rt1.c3, CAST(rt1.c1 AS NUMERIC), (((rt1.c3, rt1.c0, vt0.c0))>=((rt1.c1, rt0.c1, vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((((rt1.c0)AND(rt1.c2)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c2)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((((rt1.c0)AND(rt1.c2)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c2)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((((rt1.c0)AND(rt1.c2)))AND(rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(0.45669334347265444)))AND(rt1.c0)) THEN (((rt0.c0))<=((0.6486485927709877))) ELSE 0.7955065250887592 END) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(0.45669334347265444)))AND(rt1.c0)) THEN (((rt0.c0))<=((0.6486485927709877))) ELSE 0.7955065250887592 END) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(0.45669334347265444)))AND(rt1.c0)) THEN (((rt0.c0))<=((0.6486485927709877))) ELSE 0.7955065250887592 END) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(0.45669334347265444)))AND(rt1.c0)) THEN (((rt0.c0))<=((0.6486485927709877))) ELSE 0.7955065250887592 END) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(0.45669334347265444)))AND(rt1.c0)) THEN (((rt0.c0))<=((0.6486485927709877))) ELSE 0.7955065250887592 END) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)-(rt1.c2)))+(((rt1.c1)=(rt1.c3))))) ORDER BY (('-991442224') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)-(rt1.c2)))+(((rt1.c1)=(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (('-991442224') NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)-(rt1.c2)))+(((rt1.c1)=(rt1.c3))))) ORDER BY (('-991442224') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)-(rt1.c2)))+(((rt1.c1)=(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (('-991442224') NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)-(rt1.c2)))+(((rt1.c1)=(rt1.c3))))) ORDER BY (('-991442224') NOTNULL) ASC;
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c2)))))) ORDER BY CAST(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)) AS TEXT) DESC, CAST(((rt0.c0) NOT NULL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))<((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)) AS TEXT) DESC, CAST(((rt0.c0) NOT NULL) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c2)))))) ORDER BY CAST(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)) AS TEXT) DESC, CAST(((rt0.c0) NOT NULL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))<((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)) AS TEXT) DESC, CAST(((rt0.c0) NOT NULL) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c2)))))) ORDER BY CAST(((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)) AS TEXT) DESC, CAST(((rt0.c0) NOT NULL) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) IS TRUE))-(x'')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))-(x''))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) IS TRUE))-(x'')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))-(x''))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0) IS TRUE))-(x'')));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c1)))) ISNULL) CROSS JOIN rt1 ON (CAST(rt1.c3 AS INTEGER) IN (CAST(rt1.c2 AS INTEGER))) WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c1)))) ISNULL) CROSS JOIN rt1 ON (CAST(rt1.c3 AS INTEGER) IN (CAST(rt1.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c1)))) ISNULL) CROSS JOIN rt1 ON (CAST(rt1.c3 AS INTEGER) IN (CAST(rt1.c2 AS INTEGER))) WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c1)))) ISNULL) CROSS JOIN rt1 ON (CAST(rt1.c3 AS INTEGER) IN (CAST(rt1.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c1)))) ISNULL) CROSS JOIN rt1 ON (CAST(rt1.c3 AS INTEGER) IN (CAST(rt1.c2 AS INTEGER))) WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c2 COLLATE NOCASE  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((('#nbEC', rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, x'3576', rt1.c1)) AND ((rt1.c1, rt1.c3, rt1.c0))) ELSE ((rt1.c0)>>(rt1.c0)) END) ORDER BY ((((((((((((((rt1.c2)OR(rt1.c0)))AND(((rt1.c1) IS TRUE))))AND(((rt1.c1) NOT BETWEEN (-2041318105) AND (rt1.c3)))))AND(rt1.c3)))OR((- (rt1.c0)))))OR((((rt1.c3))<((rt1.c2))))))OR(((rt1.c2)||(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2 COLLATE NOCASE  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((('#nbEC', rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, x'3576', rt1.c1)) AND ((rt1.c1, rt1.c3, rt1.c0))) ELSE ((rt1.c0)>>(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((((rt1.c2)OR(rt1.c0)))AND(((rt1.c1) IS TRUE))))AND(((rt1.c1) NOT BETWEEN (-2041318105) AND (rt1.c3)))))AND(rt1.c3)))OR((- (rt1.c0)))))OR((((rt1.c3))<((rt1.c2))))))OR(((rt1.c2)||(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (CASE rt1.c2 COLLATE NOCASE  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((('#nbEC', rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, x'3576', rt1.c1)) AND ((rt1.c1, rt1.c3, rt1.c0))) ELSE ((rt1.c0)>>(rt1.c0)) END) ORDER BY ((((((((((((((rt1.c2)OR(rt1.c0)))AND(((rt1.c1) IS TRUE))))AND(((rt1.c1) NOT BETWEEN (-2041318105) AND (rt1.c3)))))AND(rt1.c3)))OR((- (rt1.c0)))))OR((((rt1.c3))<((rt1.c2))))))OR(((rt1.c2)||(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2 COLLATE NOCASE  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((('#nbEC', rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, x'3576', rt1.c1)) AND ((rt1.c1, rt1.c3, rt1.c0))) ELSE ((rt1.c0)>>(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((((rt1.c2)OR(rt1.c0)))AND(((rt1.c1) IS TRUE))))AND(((rt1.c1) NOT BETWEEN (-2041318105) AND (rt1.c3)))))AND(rt1.c3)))OR((- (rt1.c0)))))OR((((rt1.c3))<((rt1.c2))))))OR(((rt1.c2)||(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (CASE rt1.c2 COLLATE NOCASE  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN ((('#nbEC', rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, x'3576', rt1.c1)) AND ((rt1.c1, rt1.c3, rt1.c0))) ELSE ((rt1.c0)>>(rt1.c0)) END) ORDER BY ((((((((((((((rt1.c2)OR(rt1.c0)))AND(((rt1.c1) IS TRUE))))AND(((rt1.c1) NOT BETWEEN (-2041318105) AND (rt1.c3)))))AND(rt1.c3)))OR((- (rt1.c0)))))OR((((rt1.c3))<((rt1.c2))))))OR(((rt1.c2)||(rt1.c1))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)*(((rt0.c1)>=(rt0.c2))))) ORDER BY (NOT ((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)*(((rt0.c1)>=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((- (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)*(((rt0.c1)>=(rt0.c2))))) ORDER BY (NOT ((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)*(((rt0.c1)>=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((- (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)*(((rt0.c1)>=(rt0.c2))))) ORDER BY (NOT ((- (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((((rt1.c3, rt0.c0, rt0.c0))==((0x758ff5d7, rt1.c0, rt0.c2))))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, rt0.c0, rt0.c0))==((0x758ff5d7, rt1.c0, rt0.c2))))||((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((((rt1.c3, rt0.c0, rt0.c0))==((0x758ff5d7, rt1.c0, rt0.c2))))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, rt0.c0, rt0.c0))==((0x758ff5d7, rt1.c0, rt0.c2))))||((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((((rt1.c3, rt0.c0, rt0.c0))==((0x758ff5d7, rt1.c0, rt0.c2))))||((vt0.c0 IN ()))));
SELECT * FROM vt0, rt0 WHERE (CAST((((0.860660669421981))!=((NULL))) AS TEXT)) ORDER BY 1215878638 DESC, (~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.860660669421981))<>((NULL))) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 1215878638 DESC, (~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST((((0.860660669421981))!=((NULL))) AS TEXT)) ORDER BY 1215878638 DESC, (~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.860660669421981))<>((NULL))) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 1215878638 DESC, (~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c2)) COLLATE BINARY) ORDER BY 0.5689082095643899  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.5689082095643899  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c2)) COLLATE BINARY) ORDER BY 0.5689082095643899  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.5689082095643899  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c2)) COLLATE BINARY) ORDER BY 0.5689082095643899  NULLS FIRST;
SELECT * FROM vt0, rt0, rt1 WHERE (CAST(ABS(rt1.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (CAST(ABS(rt1.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (CAST(ABS(rt1.c1) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((0.5004503505585376) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((0.5004503505585376) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((0.5004503505585376) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((0.5004503505585376) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((0.5004503505585376) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE (('')LIKE(rt0.c2))  WHEN ((((rt0.c2)AND(rt1.c2)))AND(NULL)) THEN (rt1.c1 IN ()) ELSE ((('1787001305')) NOT BETWEEN ((rt0.c1)) AND ((x''))) END WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE (('')LIKE(rt0.c2))  WHEN ((((rt0.c2)AND(rt1.c2)))AND(NULL)) THEN (rt1.c1 IN ()) ELSE ((('1787001305')) NOT BETWEEN ((rt0.c1)) AND ((x''))) END);
SELECT ALL * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE (('')LIKE(rt0.c2))  WHEN ((((rt0.c2)AND(rt1.c2)))AND(NULL)) THEN (rt1.c1 IN ()) ELSE ((('1787001305')) NOT BETWEEN ((rt0.c1)) AND ((x''))) END WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE (('')LIKE(rt0.c2))  WHEN ((((rt0.c2)AND(rt1.c2)))AND(NULL)) THEN (rt1.c1 IN ()) ELSE ((('1787001305')) NOT BETWEEN ((rt0.c1)) AND ((x''))) END);
SELECT ALL * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE (('')LIKE(rt0.c2))  WHEN ((((rt0.c2)AND(rt1.c2)))AND(NULL)) THEN (rt1.c1 IN ()) ELSE ((('1787001305')) NOT BETWEEN ((rt0.c1)) AND ((x''))) END WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((+ (rt0.c1)) IN ())) ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c1) ISNULL) THEN (+ ('')) END DESC  NULLS LAST, CAST('v' AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c1) ISNULL) THEN (+ ('')) END DESC  NULLS LAST, CAST('v' AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((+ (rt0.c1)) IN ())) ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c1) ISNULL) THEN (+ ('')) END DESC  NULLS LAST, CAST('v' AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c1) ISNULL) THEN (+ ('')) END DESC  NULLS LAST, CAST('v' AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((+ (rt0.c1)) IN ())) ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c1) ISNULL) THEN (+ ('')) END DESC  NULLS LAST, CAST('v' AS REAL) ASC;
SELECT ALL * FROM rt0 WHERE (((((NULL)>(rt0.c0)))*(((rt0.c0)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)>(rt0.c0)))*(((rt0.c0)/(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NULL)>(rt0.c0)))*(((rt0.c0)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)>(rt0.c0)))*(((rt0.c0)/(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NULL)>(rt0.c0)))*(((rt0.c0)/(rt0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 ASC, ((CAST(0.21813275814047406 AS NUMERIC)) ISNULL) ASC  NULLS LAST, (((rt0.c0 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c0 ASC, ((CAST(0.21813275814047406 AS NUMERIC)) ISNULL) ASC  NULLS LAST, (((rt0.c0 IN ())) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 ASC, ((CAST(0.21813275814047406 AS NUMERIC)) ISNULL) ASC  NULLS LAST, (((rt0.c0 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c0 ASC, ((CAST(0.21813275814047406 AS NUMERIC)) ISNULL) ASC  NULLS LAST, (((rt0.c0 IN ())) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 ASC, ((CAST(0.21813275814047406 AS NUMERIC)) ISNULL) ASC  NULLS LAST, (((rt0.c0 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt0 ON QUOTE(CASE rt1.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN 0.9429950921500706 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 END) INNER JOIN rt1 ON (+ (((rt0.c1)!=(rt1.c2)))) WHERE (((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)OR(0.9839311079801212)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)OR(0.9839311079801212))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON QUOTE(CASE rt1.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN 0.9429950921500706 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 END) INNER JOIN rt1 ON (+ (((rt0.c1)!=(rt1.c2)))));
SELECT * FROM vt0 INNER JOIN rt0 ON QUOTE(CASE rt1.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN 0.9429950921500706 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 END) INNER JOIN rt1 ON (+ (((rt0.c1)!=(rt1.c2)))) WHERE (((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)OR(0.9839311079801212)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)OR(0.9839311079801212))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON QUOTE(CASE rt1.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN 0.9429950921500706 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 END) INNER JOIN rt1 ON (+ (((rt0.c1)!=(rt1.c2)))));
SELECT * FROM vt0 INNER JOIN rt0 ON QUOTE(CASE rt1.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN 0.9429950921500706 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 END) INNER JOIN rt1 ON (+ (((rt0.c1)!=(rt1.c2)))) WHERE (((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)OR(0.9839311079801212)));
SELECT * FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN ((-1609430475)IS(rt1.c2)) END) ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN (((rt1.c3))==((vt0.c0))) ELSE LTRIM(rt1.c0, rt1.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN ((-1609430475)IS(rt1.c2)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN (((rt1.c3))=((vt0.c0))) ELSE LTRIM(rt1.c0, rt1.c0) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN ((-1609430475)IS(rt1.c2)) END) ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN (((rt1.c3))==((vt0.c0))) ELSE LTRIM(rt1.c0, rt1.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN ((-1609430475)IS(rt1.c2)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN (((rt1.c3))=((vt0.c0))) ELSE LTRIM(rt1.c0, rt1.c0) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN ((-1609430475)IS(rt1.c2)) END) ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN (((rt1.c3))==((vt0.c0))) ELSE LTRIM(rt1.c0, rt1.c0) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL) COLLATE BINARY);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL)!=(rt0.c1)) WHERE (((((rt0.c2)/(rt0.c1)))IS(0.6242253926589691))) ORDER BY CASE (((NULL, rt0.c0, rt0.c1))>=((rt0.c2, 0x7765a049, vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(rt0.c0 AS BLOB) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)/(rt0.c1)))IS(0.6242253926589691))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL)<>(rt0.c1)) ORDER BY CASE (((NULL, rt0.c0, rt0.c1))>=((rt0.c2, 0X7765a049, vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(rt0.c0 AS BLOB) END DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL)!=(rt0.c1)) WHERE (((((rt0.c2)/(rt0.c1)))IS(0.6242253926589691))) ORDER BY CASE (((NULL, rt0.c0, rt0.c1))>=((rt0.c2, 0x7765a049, vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(rt0.c0 AS BLOB) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)/(rt0.c1)))IS(0.6242253926589691))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL)<>(rt0.c1)) ORDER BY CASE (((NULL, rt0.c0, rt0.c1))>=((rt0.c2, 0X7765a049, vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(rt0.c0 AS BLOB) END DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL)!=(rt0.c1)) WHERE (((((rt0.c2)/(rt0.c1)))IS(0.6242253926589691))) ORDER BY CASE (((NULL, rt0.c0, rt0.c1))>=((rt0.c2, 0x7765a049, vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(rt0.c0 AS BLOB) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)<<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)<<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c0)))));
SELECT ALL * FROM rt0, rt1, vt0 WHERE (NULL) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL), NULLIF(ROUND(-1119434961, vt0.c0), ((((((((rt1.c1)AND('-1701012866')))AND(rt1.c0)))AND(rt1.c1)))OR(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL), NULLIF(ROUND(-1119434961, vt0.c0), ((((((((rt1.c1)AND('-1701012866')))AND(rt1.c0)))AND(rt1.c1)))OR(rt0.c1))) DESC);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (NULL) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL), NULLIF(ROUND(-1119434961, vt0.c0), ((((((((rt1.c1)AND('-1701012866')))AND(rt1.c0)))AND(rt1.c1)))OR(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL), NULLIF(ROUND(-1119434961, vt0.c0), ((((((((rt1.c1)AND('-1701012866')))AND(rt1.c0)))AND(rt1.c1)))OR(rt0.c1))) DESC);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (NULL) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL), NULLIF(ROUND(-1119434961, vt0.c0), ((((((((rt1.c1)AND('-1701012866')))AND(rt1.c0)))AND(rt1.c1)))OR(rt0.c1))) DESC;
SELECT ALL * FROM rt1 WHERE (((rt1.c2)<((~ (rt1.c1))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)<((~ (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c2)<((~ (rt1.c1))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)<((~ (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c2)<((~ (rt1.c1))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((rt1.c2))>((rt1.c1))) COLLATE NOCASE WHERE ((((rt1.c2))>=((((vt0.c0)!=(rt1.c3)))))) ORDER BY CAST(json_valid(vt0.c0) AS INTEGER) DESC, CASE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN ((rt1.c0)>(vt0.c0)) THEN (- (rt1.c0)) WHEN 0.24033168899136348 THEN UNLIKELY(rt1.c1) WHEN CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)) WHEN (+ ('-1393113028')) THEN NULL WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)) THEN 0.02434070154004575 ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2))>=((((vt0.c0)!=(rt1.c3)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((rt1.c2))>((rt1.c1))) COLLATE NOCASE ORDER BY CAST(json_valid(vt0.c0) AS INTEGER) DESC, CASE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN ((rt1.c0)>(vt0.c0)) THEN (- (rt1.c0)) WHEN 0.24033168899136348 THEN UNLIKELY(rt1.c1) WHEN CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)) WHEN (+ ('-1393113028')) THEN NULL WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)) THEN 0.02434070154004575 ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((rt1.c2))>((rt1.c1))) COLLATE NOCASE WHERE ((((rt1.c2))>=((((vt0.c0)!=(rt1.c3)))))) ORDER BY CAST(json_valid(vt0.c0) AS INTEGER) DESC, CASE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN ((rt1.c0)>(vt0.c0)) THEN (- (rt1.c0)) WHEN 0.24033168899136348 THEN UNLIKELY(rt1.c1) WHEN CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)) WHEN (+ ('-1393113028')) THEN NULL WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)) THEN 0.02434070154004575 ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2))>=((((vt0.c0)!=(rt1.c3)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((rt1.c2))>((rt1.c1))) COLLATE NOCASE ORDER BY CAST(json_valid(vt0.c0) AS INTEGER) DESC, CASE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN ((rt1.c0)>(vt0.c0)) THEN (- (rt1.c0)) WHEN 0.24033168899136348 THEN UNLIKELY(rt1.c1) WHEN CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)) WHEN (+ ('-1393113028')) THEN NULL WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)) THEN 0.02434070154004575 ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((rt1.c2))>((rt1.c1))) COLLATE NOCASE WHERE ((((rt1.c2))>=((((vt0.c0)!=(rt1.c3)))))) ORDER BY CAST(json_valid(vt0.c0) AS INTEGER) DESC, CASE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN ((rt1.c0)>(vt0.c0)) THEN (- (rt1.c0)) WHEN 0.24033168899136348 THEN UNLIKELY(rt1.c1) WHEN CASE WHEN NULL THEN rt1.c2 ELSE rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)) WHEN (+ ('-1393113028')) THEN NULL WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)) THEN 0.02434070154004575 ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) END DESC  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((((x'5232f37d') BETWEEN (vt0.c0) AND (rt1.c3)))) AND ((rt1.c3)))) ORDER BY ((x'')LIKE((((rt1.c3))>((rt1.c0)))))  NULLS FIRST, rt1.c1;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((x'5232f37d') BETWEEN (vt0.c0) AND (rt1.c3)))) AND ((rt1.c3)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((x'')LIKE((((rt1.c3))>((rt1.c0)))))  NULLS FIRST, rt1.c1);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((((x'5232f37d') BETWEEN (vt0.c0) AND (rt1.c3)))) AND ((rt1.c3)))) ORDER BY ((x'')LIKE((((rt1.c3))>((rt1.c0)))))  NULLS FIRST, rt1.c1;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((x'5232f37d') BETWEEN (vt0.c0) AND (rt1.c3)))) AND ((rt1.c3)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((x'')LIKE((((rt1.c3))>((rt1.c0)))))  NULLS FIRST, rt1.c1);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((((x'5232f37d') BETWEEN (vt0.c0) AND (rt1.c3)))) AND ((rt1.c3)))) ORDER BY ((x'')LIKE((((rt1.c3))>((rt1.c0)))))  NULLS FIRST, rt1.c1;
SELECT * FROM rt1, vt0 NOT INDEXED WHERE ((CASE WHEN x'3980' THEN rt1.c2 ELSE rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN x'3980' THEN rt1.c2 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 NOT INDEXED WHERE ((CASE WHEN x'3980' THEN rt1.c2 ELSE rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN x'3980' THEN rt1.c2 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 NOT INDEXED WHERE ((CASE WHEN x'3980' THEN rt1.c2 ELSE rt1.c0 END IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c2 AS INTEGER))AND(CAST(rt0.c2 AS NUMERIC))))AND(LIKELIHOOD(0.37911421642266196, 0.8339549885590529))))OR(vt0.c0)))AND(UPPER(DISTINCT vt0.c0)))) ORDER BY (((((+ (vt0.c0)))AND(((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS INTEGER))AND(CAST(rt0.c2 AS NUMERIC))))AND(LIKELIHOOD(0.37911421642266196, 0.8339549885590529))))OR(vt0.c0)))AND(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((+ (vt0.c0)))AND(((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2) ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c2 AS INTEGER))AND(CAST(rt0.c2 AS NUMERIC))))AND(LIKELIHOOD(0.37911421642266196, 0.8339549885590529))))OR(vt0.c0)))AND(UPPER(DISTINCT vt0.c0)))) ORDER BY (((((+ (vt0.c0)))AND(((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS INTEGER))AND(CAST(rt0.c2 AS NUMERIC))))AND(LIKELIHOOD(0.37911421642266196, 0.8339549885590529))))OR(vt0.c0)))AND(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((+ (vt0.c0)))AND(((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2) ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c2 AS INTEGER))AND(CAST(rt0.c2 AS NUMERIC))))AND(LIKELIHOOD(0.37911421642266196, 0.8339549885590529))))OR(vt0.c0)))AND(UPPER(DISTINCT vt0.c0)))) ORDER BY (((((+ (vt0.c0)))AND(((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, NULL  NULLS LAST, CAST(CAST(-1453121583 AS REAL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, NULL  NULLS LAST, CAST(CAST(-1453121583 AS REAL) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, NULL  NULLS LAST, CAST(CAST(-1453121583 AS REAL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, NULL  NULLS LAST, CAST(CAST(-1453121583 AS REAL) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, NULL  NULLS LAST, CAST(CAST(-1453121583 AS REAL) AS TEXT);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c3)))%((- (rt1.c2))))) ORDER BY (((rt1.c0 IN ())) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c3)))%((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN ())) IS TRUE) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c3)))%((- (rt1.c2))))) ORDER BY (((rt1.c0 IN ())) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c3)))%((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN ())) IS TRUE) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c3)))%((- (rt1.c2))))) ORDER BY (((rt1.c0 IN ())) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (((+ (vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) END ASC, (((('-941398893')IS(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) END ASC, (((('-941398893')IS(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (((+ (vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) END ASC, (((('-941398893')IS(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) END ASC, (((('-941398893')IS(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (((+ (vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) END ASC, (((('-941398893')IS(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))));
SELECT * FROM rt1, vt0 WHERE (((((((((CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN '' WHEN rt1.c1 THEN x'' END)OR(((vt0.c0)<<(rt1.c3)))))OR(((rt1.c0)<=(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))))AND(((rt1.c0)>=(rt1.c0))))) ORDER BY (((rt1.c1)LIKE(rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN '' WHEN rt1.c1 THEN x'' END)OR(((vt0.c0)<<(rt1.c3)))))OR(((rt1.c0)<=(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))))AND(((rt1.c0)>=(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1)LIKE(rt1.c1)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((((((CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN '' WHEN rt1.c1 THEN x'' END)OR(((vt0.c0)<<(rt1.c3)))))OR(((rt1.c0)<=(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))))AND(((rt1.c0)>=(rt1.c0))))) ORDER BY (((rt1.c1)LIKE(rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN '' WHEN rt1.c1 THEN x'' END)OR(((vt0.c0)<<(rt1.c3)))))OR(((rt1.c0)<=(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))))AND(((rt1.c0)>=(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1)LIKE(rt1.c1)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((((((CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN '' WHEN rt1.c1 THEN x'' END)OR(((vt0.c0)<<(rt1.c3)))))OR(((rt1.c0)<=(rt1.c0)))))OR(((((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))))AND(((rt1.c0)>=(rt1.c0))))) ORDER BY (((rt1.c1)LIKE(rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT ALL * FROM vt0, rt1 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN (LOWER(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0) IS FALSE) IN (LOWER(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN (LOWER(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0) IS FALSE) IN (LOWER(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN (LOWER(rt1.c2))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY (NOT ((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((rt0.c1 IN ()))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY (NOT ((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((rt0.c1 IN ()))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY (NOT ((rt0.c1 IN ()))) ASC;
SELECT * FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY ((vt0.c0)IS(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS(vt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY ((vt0.c0)IS(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS(vt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY ((vt0.c0)IS(vt0.c0)) COLLATE RTRIM ASC;
SELECT * FROM rt1, vt0, rt0 WHERE (((((0X28312206)!=(rt1.c2))) NOT BETWEEN (((rt1.c0)LIKE(rt1.c2))) AND (rt0.c2))) ORDER BY ((((rt1.c1)<>(rt1.c0))) NOT NULL)  NULLS LAST, (('Jc뽈')>=(((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0x28312206)!=(rt1.c2))) NOT BETWEEN (((rt1.c0)LIKE(rt1.c2))) AND (rt0.c2))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt1.c1)<>(rt1.c0))) NOT NULL)  NULLS LAST, (('Jc뽈')>=(((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST);
SELECT * FROM rt1, vt0, rt0 WHERE (((((0X28312206)!=(rt1.c2))) NOT BETWEEN (((rt1.c0)LIKE(rt1.c2))) AND (rt0.c2))) ORDER BY ((((rt1.c1)<>(rt1.c0))) NOT NULL)  NULLS LAST, (('Jc뽈')>=(((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0x28312206)!=(rt1.c2))) NOT BETWEEN (((rt1.c0)LIKE(rt1.c2))) AND (rt0.c2))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt1.c1)<>(rt1.c0))) NOT NULL)  NULLS LAST, (('Jc뽈')>=(((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST);
SELECT * FROM rt1, vt0, rt0 WHERE (((((0X28312206)!=(rt1.c2))) NOT BETWEEN (((rt1.c0)LIKE(rt1.c2))) AND (rt0.c2))) ORDER BY ((((rt1.c1)<>(rt1.c0))) NOT NULL)  NULLS LAST, (('Jc뽈')>=(((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN vt0 ON CASE CAST(rt1.c3 AS REAL)  WHEN vt0.c0 THEN PRINTF(vt0.c0) ELSE CAST(rt1.c2 AS TEXT) END WHERE (((((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END)+((((0.24765944069634416)) NOT BETWEEN ((x'')) AND ((rt1.c3))))), json_array_length(((('896745397', rt1.c3, rt1.c3))>((rt1.c3, rt1.c3, rt1.c3))), rt1.c3 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE CAST(rt1.c3 AS REAL)  WHEN vt0.c0 THEN PRINTF(vt0.c0) ELSE CAST(rt1.c2 AS TEXT) END ORDER BY ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END)+((((0.24765944069634416)) NOT BETWEEN ((x'')) AND ((rt1.c3))))), json_array_length(((('896745397', rt1.c3, rt1.c3))>((rt1.c3, rt1.c3, rt1.c3))), rt1.c3 COLLATE BINARY) DESC);
SELECT * FROM rt1 CROSS JOIN vt0 ON CASE CAST(rt1.c3 AS REAL)  WHEN vt0.c0 THEN PRINTF(vt0.c0) ELSE CAST(rt1.c2 AS TEXT) END WHERE (((((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END)+((((0.24765944069634416)) NOT BETWEEN ((x'')) AND ((rt1.c3))))), json_array_length(((('896745397', rt1.c3, rt1.c3))>((rt1.c3, rt1.c3, rt1.c3))), rt1.c3 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE CAST(rt1.c3 AS REAL)  WHEN vt0.c0 THEN PRINTF(vt0.c0) ELSE CAST(rt1.c2 AS TEXT) END ORDER BY ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END)+((((0.24765944069634416)) NOT BETWEEN ((x'')) AND ((rt1.c3))))), json_array_length(((('896745397', rt1.c3, rt1.c3))>((rt1.c3, rt1.c3, rt1.c3))), rt1.c3 COLLATE BINARY) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)>=(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)>=(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)>=(((rt1.c1) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c2 AS INTEGER)))<>(((((rt0.c1, rt0.c0, rt0.c2))<=((vt0.c0, rt0.c0, rt0.c1))))))) ORDER BY ((((NULL)|(vt0.c0)))|(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS INTEGER)))!=(((((rt0.c1, rt0.c0, rt0.c2))<=((vt0.c0, rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((NULL)|(vt0.c0)))|(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c2 AS INTEGER)))<>(((((rt0.c1, rt0.c0, rt0.c2))<=((vt0.c0, rt0.c0, rt0.c1))))))) ORDER BY ((((NULL)|(vt0.c0)))|(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS INTEGER)))!=(((((rt0.c1, rt0.c0, rt0.c2))<=((vt0.c0, rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((NULL)|(vt0.c0)))|(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c2 AS INTEGER)))<>(((((rt0.c1, rt0.c0, rt0.c2))<=((vt0.c0, rt0.c0, rt0.c1))))))) ORDER BY ((((NULL)|(vt0.c0)))|(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((2050685390)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((2050685390)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((2050685390)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((2050685390)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((2050685390)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((((((((NULL COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(0.5843036457384223)))AND(ABS(DISTINCT vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(0.5843036457384223)))AND(ABS(DISTINCT vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((NULL COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(0.5843036457384223)))AND(ABS(DISTINCT vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(0.5843036457384223)))AND(ABS(DISTINCT vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((NULL COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(0.5843036457384223)))AND(ABS(DISTINCT vt0.c0))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT * FROM rt1 INNER JOIN vt0 ON LIKELY(((rt1.c1)<=(rt1.c3))) WHERE ((((((rt1.c2) IS FALSE)))=((CAST(rt1.c2 AS NUMERIC))))) ORDER BY rt1.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) IS FALSE)))=((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON LIKELY(((rt1.c1)<=(rt1.c3))) ORDER BY rt1.c3  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt0 ON LIKELY(((rt1.c1)<=(rt1.c3))) WHERE ((((((rt1.c2) IS FALSE)))=((CAST(rt1.c2 AS NUMERIC))))) ORDER BY rt1.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) IS FALSE)))=((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON LIKELY(((rt1.c1)<=(rt1.c3))) ORDER BY rt1.c3  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt0 ON LIKELY(((rt1.c1)<=(rt1.c3))) WHERE ((((((rt1.c2) IS FALSE)))=((CAST(rt1.c2 AS NUMERIC))))) ORDER BY rt1.c3  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((PRINTF(rt0.c0))))) ORDER BY ((rt1.c2)>(rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((PRINTF(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((rt1.c2)>(rt0.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((PRINTF(rt0.c0))))) ORDER BY ((rt1.c2)>(rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((PRINTF(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((rt1.c2)>(rt0.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((PRINTF(rt0.c0))))) ORDER BY ((rt1.c2)>(rt0.c1)) COLLATE BINARY DESC;
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((rt1.c3, rt0.c0, rt1.c0)) BETWEEN (((+ (rt1.c0)), (rt1.c2 IN (rt1.c3, vt0.c0)), CAST(rt1.c1 AS REAL))) AND ((CAST(rt0.c1 AS NUMERIC), '1921045633', (((rt1.c2))>=((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt0.c0, rt1.c0)) BETWEEN (((+ (rt1.c0)), (rt1.c2 IN (rt1.c3, vt0.c0)), CAST(rt1.c1 AS REAL))) AND ((CAST(rt0.c1 AS NUMERIC), '1921045633', (((rt1.c2))>=((rt0.c2))))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((rt1.c3, rt0.c0, rt1.c0)) BETWEEN (((+ (rt1.c0)), (rt1.c2 IN (rt1.c3, vt0.c0)), CAST(rt1.c1 AS REAL))) AND ((CAST(rt0.c1 AS NUMERIC), '1921045633', (((rt1.c2))>=((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt0.c0, rt1.c0)) BETWEEN (((+ (rt1.c0)), (rt1.c2 IN (rt1.c3, vt0.c0)), CAST(rt1.c1 AS REAL))) AND ((CAST(rt0.c1 AS NUMERIC), '1921045633', (((rt1.c2))>=((rt0.c2))))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((rt1.c3, rt0.c0, rt1.c0)) BETWEEN (((+ (rt1.c0)), (rt1.c2 IN (rt1.c3, vt0.c0)), CAST(rt1.c1 AS REAL))) AND ((CAST(rt0.c1 AS NUMERIC), '1921045633', (((rt1.c2))>=((rt0.c2)))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((0.818704709861421)AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.818704709861421)AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((0.818704709861421)AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.818704709861421)AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((0.818704709861421)AND((~ (rt0.c2)))));
SELECT COUNT(*) FROM rt1 WHERE (json_quote(CASE rt1.c3  WHEN x'f1f6' THEN rt1.c0 ELSE rt1.c1 END)) ORDER BY (('ZgA0RT	.') IS FALSE) DESC, rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CASE rt1.c3  WHEN x'f1f6' THEN rt1.c0 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt1 ORDER BY (('ZgA0RT	.') IS FALSE) DESC, rt1.c3  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (json_quote(CASE rt1.c3  WHEN x'f1f6' THEN rt1.c0 ELSE rt1.c1 END)) ORDER BY (('ZgA0RT	.') IS FALSE) DESC, rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CASE rt1.c3  WHEN x'f1f6' THEN rt1.c0 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt1 ORDER BY (('ZgA0RT	.') IS FALSE) DESC, rt1.c3  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (json_quote(CASE rt1.c3  WHEN x'f1f6' THEN rt1.c0 ELSE rt1.c1 END)) ORDER BY (('ZgA0RT	.') IS FALSE) DESC, rt1.c3  NULLS LAST;
SELECT * FROM rt1, vt0, rt0 WHERE (0xffffffffc4f976b7);
SELECT SUM(count) FROM (SELECT ((0Xffffffffc4f976b7) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (0xffffffffc4f976b7);
SELECT SUM(count) FROM (SELECT ((0Xffffffffc4f976b7) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (0xffffffffc4f976b7);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ (ABS(0x1e440c8f))) WHERE (((CAST(rt1.c1 AS BLOB))<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN 2088587214 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB))<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN 2088587214 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ (ABS(0X1e440c8f))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ (ABS(0x1e440c8f))) WHERE (((CAST(rt1.c1 AS BLOB))<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN 2088587214 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB))<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN 2088587214 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ (ABS(0X1e440c8f))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ (ABS(0x1e440c8f))) WHERE (((CAST(rt1.c1 AS BLOB))<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN 2088587214 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END)));
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((~ (TYPEOF(DISTINCT rt1.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN (('eKC*.')) AND ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))))  NULLS LAST, (+ (ABS(DISTINCT rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1 ORDER BY (((vt0.c0)) NOT BETWEEN (('eKC*.')) AND ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))))  NULLS LAST, (+ (ABS(DISTINCT rt1.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((~ (TYPEOF(DISTINCT rt1.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN (('eKC*.')) AND ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))))  NULLS LAST, (+ (ABS(DISTINCT rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1 ORDER BY (((vt0.c0)) NOT BETWEEN (('eKC*.')) AND ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))))  NULLS LAST, (+ (ABS(DISTINCT rt1.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((~ (TYPEOF(DISTINCT rt1.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN (('eKC*.')) AND ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))))  NULLS LAST, (+ (ABS(DISTINCT rt1.c2))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT NULL))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))LIKE(0.8313628584108764)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))LIKE(0.8313628584108764)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT NULL))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))LIKE(0.8313628584108764)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))LIKE(0.8313628584108764)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT NULL))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))LIKE(0.8313628584108764)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)==(rt1.c2)))/(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)==(rt1.c2)))/(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)==(rt1.c2)))/(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)==(rt1.c2)))/(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)==(rt1.c2)))/(rt1.c2 COLLATE BINARY)));
SELECT * FROM vt0, rt0, rt1 WHERE (((((rt0.c0) ISNULL))<(((rt0.c1) NOT NULL)))) ORDER BY HEX(DISTINCT ((rt1.c0)%(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))<(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY HEX(DISTINCT ((rt1.c0)%(rt0.c0))));
SELECT * FROM vt0, rt0, rt1 WHERE (((((rt0.c0) ISNULL))<(((rt0.c1) NOT NULL)))) ORDER BY HEX(DISTINCT ((rt1.c0)%(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))<(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY HEX(DISTINCT ((rt1.c0)%(rt0.c0))));
SELECT * FROM vt0, rt0, rt1 WHERE (((((rt0.c0) ISNULL))<(((rt0.c1) NOT NULL)))) ORDER BY HEX(DISTINCT ((rt1.c0)%(rt0.c0)));
SELECT * FROM rt1 CROSS JOIN vt0 ON IFNULL(CASE WHEN rt0.c2 THEN NULL END, ((NULL)>(vt0.c0))) LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c1)))OR(((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR('-1579367558')))OR(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)))))OR(IFNULL(DISTINCT rt1.c2, vt0.c0))) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) AS INTEGER)) ORDER BY ((NULL)&(UPPER(DISTINCT rt1.c2))), ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)))IS(rt0.c0)), (rt1.c3 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON IFNULL(CASE WHEN rt0.c2 THEN NULL END, ((NULL)>(vt0.c0))) LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c1)))OR(((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR('-1579367558')))OR(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)))))OR(IFNULL(DISTINCT rt1.c2, vt0.c0))) ORDER BY ((NULL)&(UPPER(DISTINCT rt1.c2))), ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)))IS(rt0.c0)), (rt1.c3 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN vt0 ON IFNULL(CASE WHEN rt0.c2 THEN NULL END, ((NULL)>(vt0.c0))) LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c1)))OR(((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR('-1579367558')))OR(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)))))OR(IFNULL(DISTINCT rt1.c2, vt0.c0))) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) AS INTEGER)) ORDER BY ((NULL)&(UPPER(DISTINCT rt1.c2))), ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)))IS(rt0.c0)), (rt1.c3 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON IFNULL(CASE WHEN rt0.c2 THEN NULL END, ((NULL)>(vt0.c0))) LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c1)))OR(((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR('-1579367558')))OR(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)))))OR(IFNULL(DISTINCT rt1.c2, vt0.c0))) ORDER BY ((NULL)&(UPPER(DISTINCT rt1.c2))), ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)))IS(rt0.c0)), (rt1.c3 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN vt0 ON IFNULL(CASE WHEN rt0.c2 THEN NULL END, ((NULL)>(vt0.c0))) LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c1)))OR(((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))))OR('-1579367558')))OR(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)))))OR(IFNULL(DISTINCT rt1.c2, vt0.c0))) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) AS INTEGER)) ORDER BY ((NULL)&(UPPER(DISTINCT rt1.c2))), ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c3)))IS(rt0.c0)), (rt1.c3 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((rt1.c2)AND(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN 0.8763003041231008 THEN rt0.c2 ELSE rt1.c1 END) AND (((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2)AND(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN 0.8763003041231008 THEN rt0.c2 ELSE rt1.c1 END) AND (((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((rt1.c2)AND(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN 0.8763003041231008 THEN rt0.c2 ELSE rt1.c1 END) AND (((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2)AND(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN 0.8763003041231008 THEN rt0.c2 ELSE rt1.c1 END) AND (((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((rt1.c2)AND(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN 0.8763003041231008 THEN rt0.c2 ELSE rt1.c1 END) AND (((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT * FROM rt0 WHERE ((((rt0.c2)-(rt0.c1)) IN (x'')));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)-(rt0.c1)) IN (x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)-(rt0.c1)) IN (x'')));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)-(rt0.c1)) IN (x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)-(rt0.c1)) IN (x'')));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c3)*(rt0.c2)) THEN ((rt1.c2)<<(rt1.c2)) WHEN rt0.c1 THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END WHEN rt0.c2 COLLATE BINARY THEN ((((rt1.c0)AND(rt0.c1)))AND(rt1.c2)) ELSE '-1018980383' END) ORDER BY (NOT (((rt0.c0) ISNULL))) ASC  NULLS FIRST, UNLIKELY((~ (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3)*(rt0.c2)) THEN ((rt1.c2)<<(rt1.c2)) WHEN rt0.c1 THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END WHEN rt0.c2 COLLATE BINARY THEN ((((rt1.c0)AND(rt0.c1)))AND(rt1.c2)) ELSE '-1018980383' END) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((rt0.c0) ISNULL))) ASC  NULLS FIRST, UNLIKELY((~ (rt1.c0))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c3)*(rt0.c2)) THEN ((rt1.c2)<<(rt1.c2)) WHEN rt0.c1 THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END WHEN rt0.c2 COLLATE BINARY THEN ((((rt1.c0)AND(rt0.c1)))AND(rt1.c2)) ELSE '-1018980383' END) ORDER BY (NOT (((rt0.c0) ISNULL))) ASC  NULLS FIRST, UNLIKELY((~ (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3)*(rt0.c2)) THEN ((rt1.c2)<<(rt1.c2)) WHEN rt0.c1 THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END WHEN rt0.c2 COLLATE BINARY THEN ((((rt1.c0)AND(rt0.c1)))AND(rt1.c2)) ELSE '-1018980383' END) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((rt0.c0) ISNULL))) ASC  NULLS FIRST, UNLIKELY((~ (rt1.c0))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c3)*(rt0.c2)) THEN ((rt1.c2)<<(rt1.c2)) WHEN rt0.c1 THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END WHEN rt0.c2 COLLATE BINARY THEN ((((rt1.c0)AND(rt0.c1)))AND(rt1.c2)) ELSE '-1018980383' END) ORDER BY (NOT (((rt0.c0) ISNULL))) ASC  NULLS FIRST, UNLIKELY((~ (rt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY vt0.c0;
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)IS NOT(rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)IS NOT(rt0.c1))) NOTNULL) ASC);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)IS NOT(rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)IS NOT(rt0.c1))) NOTNULL) ASC);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)IS NOT(rt0.c1))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((vt0.c0) BETWEEN ((((rt1.c2, rt1.c1, rt1.c0))<>((rt1.c1, vt0.c0, vt0.c0)))) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((0.9528403817605278) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ((((rt1.c2, rt1.c1, rt1.c0))!=((rt1.c1, vt0.c0, vt0.c0)))) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((0.9528403817605278) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((vt0.c0) BETWEEN ((((rt1.c2, rt1.c1, rt1.c0))<>((rt1.c1, vt0.c0, vt0.c0)))) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((0.9528403817605278) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ((((rt1.c2, rt1.c1, rt1.c0))!=((rt1.c1, vt0.c0, vt0.c0)))) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((0.9528403817605278) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((vt0.c0) BETWEEN ((((rt1.c2, rt1.c1, rt1.c0))<>((rt1.c1, vt0.c0, vt0.c0)))) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((0.9528403817605278) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0X6dc789ea)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((0x6dc789ea)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0X6dc789ea)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((0x6dc789ea)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0X6dc789ea)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM rt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((~ (vt0.c0)))<(LOWER(vt0.c0)))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN rt1.c2 THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) ELSE CAST(rt1.c1 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))<(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0) ISNULL)  WHEN rt1.c2 THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) ELSE CAST(rt1.c1 AS INTEGER) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((~ (vt0.c0)))<(LOWER(vt0.c0)))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN rt1.c2 THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) ELSE CAST(rt1.c1 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))<(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0) ISNULL)  WHEN rt1.c2 THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) ELSE CAST(rt1.c1 AS INTEGER) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((~ (vt0.c0)))<(LOWER(vt0.c0)))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN rt1.c2 THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) ELSE CAST(rt1.c1 AS INTEGER) END ASC;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE BINARY) BETWEEN (((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))) AND (CAST(rt1.c1 AS BLOB)))) ORDER BY ((((((rt1.c3)OR(x'd348')))AND(rt1.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE BINARY) BETWEEN (((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))) AND (CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3)OR(x'd348')))AND(rt1.c2))) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE BINARY) BETWEEN (((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))) AND (CAST(rt1.c1 AS BLOB)))) ORDER BY ((((((rt1.c3)OR(x'd348')))AND(rt1.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE BINARY) BETWEEN (((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))) AND (CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3)OR(x'd348')))AND(rt1.c2))) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE BINARY) BETWEEN (((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))) AND (CAST(rt1.c1 AS BLOB)))) ORDER BY ((((((rt1.c3)OR(x'd348')))AND(rt1.c2))) ISNULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)*(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)*(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((0X358f2b8f)-(rt0.c2)))%(('721594162' IN ())))) ORDER BY (((rt1.c1 IN (rt0.c0, rt1.c2)))|((+ (x'a5a9')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0X358f2b8f)-(rt0.c2)))%(('721594162' IN ())))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((rt1.c1 IN (rt0.c0, rt1.c2)))|((+ (x'a5a9')))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((0X358f2b8f)-(rt0.c2)))%(('721594162' IN ())))) ORDER BY (((rt1.c1 IN (rt0.c0, rt1.c2)))|((+ (x'a5a9')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0X358f2b8f)-(rt0.c2)))%(('721594162' IN ())))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((rt1.c1 IN (rt0.c0, rt1.c2)))|((+ (x'a5a9')))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((0X358f2b8f)-(rt0.c2)))%(('721594162' IN ())))) ORDER BY (((rt1.c1 IN (rt0.c0, rt1.c2)))|((+ (x'a5a9')))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c2)))OR(((rt0.c2) IS TRUE))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)>>(rt0.c2)))OR(((rt0.c2) IS TRUE))))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c2)))OR(((rt0.c2) IS TRUE))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)>>(rt0.c2)))OR(((rt0.c2) IS TRUE))))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c2)))OR(((rt0.c2) IS TRUE))))OR(NULL)));
SELECT * FROM vt0, rt1 WHERE (GLOB(NULLIF(rt1.c1, '1903435563'), ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3)))AND('0.967226612621859')))) ORDER BY CASE rt1.c3  WHEN '806425906' THEN rt1.c3 END COLLATE RTRIM  NULLS LAST, ((((rt1.c1)>=(rt1.c2))) BETWEEN (((((rt1.c0)AND(vt0.c0)))OR(rt1.c1))) AND (((rt1.c3)*(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(NULLIF(rt1.c1, '1903435563'), ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3)))AND('0.967226612621859')))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE rt1.c3  WHEN '806425906' THEN rt1.c3 END COLLATE RTRIM  NULLS LAST, ((((rt1.c1)>=(rt1.c2))) BETWEEN (((((rt1.c0)AND(vt0.c0)))OR(rt1.c1))) AND (((rt1.c3)*(rt1.c0)))) DESC);
SELECT * FROM vt0, rt1 WHERE (GLOB(NULLIF(rt1.c1, '1903435563'), ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3)))AND('0.967226612621859')))) ORDER BY CASE rt1.c3  WHEN '806425906' THEN rt1.c3 END COLLATE RTRIM  NULLS LAST, ((((rt1.c1)>=(rt1.c2))) BETWEEN (((((rt1.c0)AND(vt0.c0)))OR(rt1.c1))) AND (((rt1.c3)*(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(NULLIF(rt1.c1, '1903435563'), ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3)))AND('0.967226612621859')))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE rt1.c3  WHEN '806425906' THEN rt1.c3 END COLLATE RTRIM  NULLS LAST, ((((rt1.c1)>=(rt1.c2))) BETWEEN (((((rt1.c0)AND(vt0.c0)))OR(rt1.c1))) AND (((rt1.c3)*(rt1.c0)))) DESC);
SELECT * FROM vt0, rt1 WHERE (GLOB(NULLIF(rt1.c1, '1903435563'), ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3)))AND('0.967226612621859')))) ORDER BY CASE rt1.c3  WHEN '806425906' THEN rt1.c3 END COLLATE RTRIM  NULLS LAST, ((((rt1.c1)>=(rt1.c2))) BETWEEN (((((rt1.c0)AND(vt0.c0)))OR(rt1.c1))) AND (((rt1.c3)*(rt1.c0)))) DESC;
SELECT * FROM vt0 INNER JOIN rt0 ON (- (CAST(rt1.c2 AS TEXT))) INNER JOIN rt1 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) WHERE (TRIM(DISTINCT (rt1.c3 IN (rt1.c1)))) ORDER BY ((((rt1.c0)AND(CAST(rt0.c2 AS INTEGER))))OR(NULL)), (((vt0.c0)LIKE(rt1.c3)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt1.c3 IN (rt1.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (CAST(rt1.c2 AS TEXT))) INNER JOIN rt1 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) ORDER BY ((((rt1.c0)AND(CAST(rt0.c2 AS INTEGER))))OR(NULL)), (((vt0.c0)LIKE(rt1.c3)) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON (- (CAST(rt1.c2 AS TEXT))) INNER JOIN rt1 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) WHERE (TRIM(DISTINCT (rt1.c3 IN (rt1.c1)))) ORDER BY ((((rt1.c0)AND(CAST(rt0.c2 AS INTEGER))))OR(NULL)), (((vt0.c0)LIKE(rt1.c3)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt1.c3 IN (rt1.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (CAST(rt1.c2 AS TEXT))) INNER JOIN rt1 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) ORDER BY ((((rt1.c0)AND(CAST(rt0.c2 AS INTEGER))))OR(NULL)), (((vt0.c0)LIKE(rt1.c3)) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON (- (CAST(rt1.c2 AS TEXT))) INNER JOIN rt1 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) WHERE (TRIM(DISTINCT (rt1.c3 IN (rt1.c1)))) ORDER BY ((((rt1.c0)AND(CAST(rt0.c2 AS INTEGER))))OR(NULL)), (((vt0.c0)LIKE(rt1.c3)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CAST(rt0.c0 AS NUMERIC))+(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC))+(NULL)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CAST(rt0.c0 AS NUMERIC))+(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC))+(NULL)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CAST(rt0.c0 AS NUMERIC))+(NULL)) ASC;
SELECT * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ((NOT (rt0.c0)), ((rt0.c0)<=(rt0.c1))))) ORDER BY ((((rt0.c2)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ((NOT (rt0.c0)), ((rt0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ((NOT (rt0.c0)), ((rt0.c0)<=(rt0.c1))))) ORDER BY ((((rt0.c2)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ((NOT (rt0.c0)), ((rt0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ((NOT (rt0.c0)), ((rt0.c0)<=(rt0.c1))))) ORDER BY ((((rt0.c2)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ()))*(((rt1.c3)IS NOT(rt1.c2)))) WHERE (((rt1.c2)||(x'')));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)||(x''))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ()))*(((rt1.c3)IS NOT(rt1.c2)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ()))*(((rt1.c3)IS NOT(rt1.c2)))) WHERE (((rt1.c2)||(x'')));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)||(x''))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ()))*(((rt1.c3)IS NOT(rt1.c2)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((rt1.c0 IN ()))*(((rt1.c3)IS NOT(rt1.c2)))) WHERE (((rt1.c2)||(x'')));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT * FROM vt0, rt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (0.24726893856658194) AND (0.8979081429883976)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0) NOT BETWEEN (0.24726893856658194) AND (0.8979081429883976)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (0.24726893856658194) AND (0.8979081429883976)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0) NOT BETWEEN (0.24726893856658194) AND (0.8979081429883976)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (0.24726893856658194) AND (0.8979081429883976)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (IFNULL(LIKELIHOOD(rt1.c3, 0.10749316990621782), rt0.c1)) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)GLOB(((rt0.c2) NOT NULL))) ASC, ((rt1.c0 COLLATE BINARY)-((rt0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(LIKELIHOOD(rt1.c3, 0.10749316990621782), rt0.c1)) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)GLOB(((rt0.c2) NOT NULL))) ASC, ((rt1.c0 COLLATE BINARY)-((rt0.c2 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (IFNULL(LIKELIHOOD(rt1.c3, 0.10749316990621782), rt0.c1)) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)GLOB(((rt0.c2) NOT NULL))) ASC, ((rt1.c0 COLLATE BINARY)-((rt0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(LIKELIHOOD(rt1.c3, 0.10749316990621782), rt0.c1)) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)GLOB(((rt0.c2) NOT NULL))) ASC, ((rt1.c0 COLLATE BINARY)-((rt0.c2 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (IFNULL(LIKELIHOOD(rt1.c3, 0.10749316990621782), rt0.c1)) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)GLOB(((rt0.c2) NOT NULL))) ASC, ((rt1.c0 COLLATE BINARY)-((rt0.c2 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c0)))AND(vt0.c0))) ISNULL) WHERE (vt0.c0) ORDER BY CHAR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)), CAST(rt1.c3 AS REAL), ((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)), GLOB(rt1.c1, rt1.c0), (+ (rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c0)))AND(vt0.c0))) ISNULL) ORDER BY CHAR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)), CAST(rt1.c3 AS REAL), ((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)), GLOB(rt1.c1, rt1.c0), (+ (rt1.c3))) ASC);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c0)))AND(vt0.c0))) ISNULL) WHERE (vt0.c0) ORDER BY CHAR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)), CAST(rt1.c3 AS REAL), ((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)), GLOB(rt1.c1, rt1.c0), (+ (rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c0)))AND(vt0.c0))) ISNULL) ORDER BY CHAR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)), CAST(rt1.c3 AS REAL), ((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)), GLOB(rt1.c1, rt1.c0), (+ (rt1.c3))) ASC);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON ((((((vt0.c0)OR(rt1.c0)))AND(vt0.c0))) ISNULL) WHERE (vt0.c0) ORDER BY CHAR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)), CAST(rt1.c3 AS REAL), ((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)), GLOB(rt1.c1, rt1.c0), (+ (rt1.c3))) ASC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON rt0.c1 INNER JOIN vt0 ON rt0.c0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))OR(vt0.c0))) AND (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE) BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))OR(vt0.c0))) AND (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt0.c1 INNER JOIN vt0 ON rt0.c0 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON rt0.c1 INNER JOIN vt0 ON rt0.c0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))OR(vt0.c0))) AND (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE) BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))OR(vt0.c0))) AND (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt0.c1 INNER JOIN vt0 ON rt0.c0 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON rt0.c1 INNER JOIN vt0 ON rt0.c0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))OR(vt0.c0))) AND (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON (- (((rt1.c0)OR(rt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))AND(rt1.c3)))OR('-447063063')))+(rt1.c2 COLLATE NOCASE)) WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) ORDER BY (((+ ('-19723295')))%(rt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (- (((rt1.c0)OR(rt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))AND(rt1.c3)))OR('-447063063')))+(rt1.c2 COLLATE NOCASE)) ORDER BY (((+ ('-19723295')))%(rt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON (- (((rt1.c0)OR(rt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))AND(rt1.c3)))OR('-447063063')))+(rt1.c2 COLLATE NOCASE)) WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) ORDER BY (((+ ('-19723295')))%(rt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (- (((rt1.c0)OR(rt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))AND(rt1.c3)))OR('-447063063')))+(rt1.c2 COLLATE NOCASE)) ORDER BY (((+ ('-19723295')))%(rt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON (- (((rt1.c0)OR(rt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))AND(rt1.c3)))OR('-447063063')))+(rt1.c2 COLLATE NOCASE)) WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) ORDER BY (((+ ('-19723295')))%(rt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((((x'7efb')) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((x'7efb')) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((((x'7efb')) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((x'7efb')) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((((x'7efb')) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT * FROM rt1 WHERE (json_array_length(rt1.c2, rt1.c3) COLLATE NOCASE) ORDER BY rtreenode(rt1.c2 COLLATE BINARY, (NOT (rt1.c3))) DESC  NULLS FIRST, ((NULL)GLOB(((rt1.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(rt1.c2, rt1.c3) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rtreenode(rt1.c2 COLLATE BINARY, (NOT (rt1.c3))) DESC  NULLS FIRST, ((NULL)GLOB(((rt1.c1) ISNULL))) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (json_array_length(rt1.c2, rt1.c3) COLLATE NOCASE) ORDER BY rtreenode(rt1.c2 COLLATE BINARY, (NOT (rt1.c3))) DESC  NULLS FIRST, ((NULL)GLOB(((rt1.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(rt1.c2, rt1.c3) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rtreenode(rt1.c2 COLLATE BINARY, (NOT (rt1.c3))) DESC  NULLS FIRST, ((NULL)GLOB(((rt1.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) NOT BETWEEN ('-1667828418') AND ((((rt1.c2, rt1.c0, rt1.c1))<=((rt1.c0, 0.40061029139176685, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOT BETWEEN ('-1667828418') AND ((((rt1.c2, rt1.c0, rt1.c1))<=((rt1.c0, 0.40061029139176685, rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) NOT BETWEEN ('-1667828418') AND ((((rt1.c2, rt1.c0, rt1.c1))<=((rt1.c0, 0.40061029139176685, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOT BETWEEN ('-1667828418') AND ((((rt1.c2, rt1.c0, rt1.c1))<=((rt1.c0, 0.40061029139176685, rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) NOT BETWEEN ('-1667828418') AND ((((rt1.c2, rt1.c0, rt1.c1))<=((rt1.c0, 0.40061029139176685, rt1.c2))))));
SELECT * FROM vt0, rt0 FULL OUTER JOIN rt1 ON (((((((((((rt1.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, vt0.c0))))OR(((rt0.c0)GLOB(rt1.c1)))))OR(((rt1.c3)AND(rt1.c1)))))AND((((x'', rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, 0.39524476173971923)) AND ((rt0.c0, rt1.c2, rt0.c2))))))OR((rt0.c1 IN (x'')))) WHERE (((NULL) NOTNULL)) ORDER BY (((rt1.c1 IN (rt0.c1)))*(((NULL)>(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN rt1 ON (((((((((((rt1.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, vt0.c0))))OR(((rt0.c0)GLOB(rt1.c1)))))OR(((rt1.c3)AND(rt1.c1)))))AND((((x'', rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, 0.39524476173971923)) AND ((rt0.c0, rt1.c2, rt0.c2))))))OR((rt0.c1 IN (x'')))) ORDER BY (((rt1.c1 IN (rt0.c1)))*(((NULL)>(rt1.c1))))  NULLS FIRST);
SELECT * FROM vt0, rt0 FULL OUTER JOIN rt1 ON (((((((((((rt1.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, vt0.c0))))OR(((rt0.c0)GLOB(rt1.c1)))))OR(((rt1.c3)AND(rt1.c1)))))AND((((x'', rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, 0.39524476173971923)) AND ((rt0.c0, rt1.c2, rt0.c2))))))OR((rt0.c1 IN (x'')))) WHERE (((NULL) NOTNULL)) ORDER BY (((rt1.c1 IN (rt0.c1)))*(((NULL)>(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN rt1 ON (((((((((((rt1.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, vt0.c0))))OR(((rt0.c0)GLOB(rt1.c1)))))OR(((rt1.c3)AND(rt1.c1)))))AND((((x'', rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, 0.39524476173971923)) AND ((rt0.c0, rt1.c2, rt0.c2))))))OR((rt0.c1 IN (x'')))) ORDER BY (((rt1.c1 IN (rt0.c1)))*(((NULL)>(rt1.c1))))  NULLS FIRST);
SELECT * FROM vt0, rt0 FULL OUTER JOIN rt1 ON (((((((((((rt1.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, vt0.c0))))OR(((rt0.c0)GLOB(rt1.c1)))))OR(((rt1.c3)AND(rt1.c1)))))AND((((x'', rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, 0.39524476173971923)) AND ((rt0.c0, rt1.c2, rt0.c2))))))OR((rt0.c1 IN (x'')))) WHERE (((NULL) NOTNULL)) ORDER BY (((rt1.c1 IN (rt0.c1)))*(((NULL)>(rt1.c1))))  NULLS FIRST;
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (NULLIF(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), (rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), (rt1.c0 IN ()))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (NULLIF(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), (rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), (rt1.c0 IN ()))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (NULLIF(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), (rt1.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3)))) AND ((LIKELIHOOD(rt0.c0, 0.7566625911451066)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3)))) AND ((LIKELIHOOD(rt0.c0, 0.7566625911451066))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3)))) AND ((LIKELIHOOD(rt0.c0, 0.7566625911451066)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3)))) AND ((LIKELIHOOD(rt0.c0, 0.7566625911451066))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3)))) AND ((LIKELIHOOD(rt0.c0, 0.7566625911451066)))));
SELECT * FROM vt0, rt0 CROSS JOIN rt1 ON ((rt1.c3) NOT NULL) WHERE (((CASE 0.7621580884170558  WHEN rt0.c1 THEN rt1.c2 END)>(((rt0.c0)!=(rt1.c2))))) ORDER BY ((CAST('' AS BLOB)) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (highlight(rt1.c1, rt1.c2, rt1.c0, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.7621580884170558  WHEN rt0.c1 THEN rt1.c2 END)>(((rt0.c0)!=(rt1.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 CROSS JOIN rt1 ON ((rt1.c3) NOT NULL) ORDER BY ((CAST('' AS BLOB)) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (highlight(rt1.c1, rt1.c2, rt1.c0, rt0.c1)))  NULLS FIRST);
SELECT * FROM vt0, rt0 CROSS JOIN rt1 ON ((rt1.c3) NOT NULL) WHERE (((CASE 0.7621580884170558  WHEN rt0.c1 THEN rt1.c2 END)>(((rt0.c0)!=(rt1.c2))))) ORDER BY ((CAST('' AS BLOB)) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (highlight(rt1.c1, rt1.c2, rt1.c0, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.7621580884170558  WHEN rt0.c1 THEN rt1.c2 END)>(((rt0.c0)!=(rt1.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 CROSS JOIN rt1 ON ((rt1.c3) NOT NULL) ORDER BY ((CAST('' AS BLOB)) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (highlight(rt1.c1, rt1.c2, rt1.c0, rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0))=((rt0.c0))) IN ())) ORDER BY CASE '>08z'  WHEN '拺3' THEN ((rt0.c0)GLOB(rt0.c0)) ELSE rt0.c2 END ASC, LOWER(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0))=((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE '>08z'  WHEN '拺3' THEN ((rt0.c0)GLOB(rt0.c0)) ELSE rt0.c2 END ASC, LOWER(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0))=((rt0.c0))) IN ())) ORDER BY CASE '>08z'  WHEN '拺3' THEN ((rt0.c0)GLOB(rt0.c0)) ELSE rt0.c2 END ASC, LOWER(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0))=((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE '>08z'  WHEN '拺3' THEN ((rt0.c0)GLOB(rt0.c0)) ELSE rt0.c2 END ASC, LOWER(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0))=((rt0.c0))) IN ())) ORDER BY CASE '>08z'  WHEN '拺3' THEN ((rt0.c0)GLOB(rt0.c0)) ELSE rt0.c2 END ASC, LOWER(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND ('1916007559')))GLOB(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c1) AND ('1916007559')))GLOB(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND ('1916007559')))GLOB(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c1) AND ('1916007559')))GLOB(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND ('1916007559')))GLOB(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((((((((((((rt1.c0)-(rt1.c0)))AND(TRIM(DISTINCT rt0.c1))))OR((rt0.c2 IN ()))))AND(1.1919522E9)))OR(rt1.c3 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(((((rt1.c0)AND(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c0)-(rt1.c0)))AND(TRIM(DISTINCT rt0.c1))))OR((rt0.c2 IN ()))))AND(1.1919522E9)))OR(rt1.c3 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(((((rt1.c0)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((((((((((((rt1.c0)-(rt1.c0)))AND(TRIM(DISTINCT rt0.c1))))OR((rt0.c2 IN ()))))AND(1.1919522E9)))OR(rt1.c3 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(((((rt1.c0)AND(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c0)-(rt1.c0)))AND(TRIM(DISTINCT rt0.c1))))OR((rt0.c2 IN ()))))AND(1.1919522E9)))OR(rt1.c3 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(((((rt1.c0)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((((((((((((rt1.c0)-(rt1.c0)))AND(TRIM(DISTINCT rt0.c1))))OR((rt0.c2 IN ()))))AND(1.1919522E9)))OR(rt1.c3 COLLATE NOCASE)))AND(((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(((((rt1.c0)AND(rt0.c2)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER(((rt1.c1)>('~')))) ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ((UPPER(((rt1.c1)>('~')))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER(((rt1.c1)>('~')))) ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ((UPPER(((rt1.c1)>('~')))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER(((rt1.c1)>('~')))) ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER);
SELECT ALL * FROM rt1, rt0 WHERE (json_array(((rt1.c0)>=(rt1.c2)), (((rt1.c2, rt1.c2, '')) NOT BETWEEN ((rt0.c2, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c2, rt1.c2))), (rt1.c1 IN ()), (rt1.c0 IN ()), CAST(rt0.c2 AS TEXT), LIKELIHOOD(rt1.c3, 0.015199013432999786)));
SELECT SUM(count) FROM (SELECT ((json_array(((rt1.c0)>=(rt1.c2)), (((rt1.c2, rt1.c2, '')) NOT BETWEEN ((rt0.c2, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c2, rt1.c2))), (rt1.c1 IN ()), (rt1.c0 IN ()), CAST(rt0.c2 AS TEXT), LIKELIHOOD(rt1.c3, 0.015199013432999786))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (json_array(((rt1.c0)>=(rt1.c2)), (((rt1.c2, rt1.c2, '')) NOT BETWEEN ((rt0.c2, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c2, rt1.c2))), (rt1.c1 IN ()), (rt1.c0 IN ()), CAST(rt0.c2 AS TEXT), LIKELIHOOD(rt1.c3, 0.015199013432999786)));
SELECT SUM(count) FROM (SELECT ((json_array(((rt1.c0)>=(rt1.c2)), (((rt1.c2, rt1.c2, '')) NOT BETWEEN ((rt0.c2, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c2, rt1.c2))), (rt1.c1 IN ()), (rt1.c0 IN ()), CAST(rt0.c2 AS TEXT), LIKELIHOOD(rt1.c3, 0.015199013432999786))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c0)))AND(rt0.c2)))AND(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'3f38d646')))>>(x'')), ((((rt0.c2)AND(rt0.c2)))IS NOT((- (rt0.c1)))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))AND(rt0.c2)))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'3f38d646')))>>(x'')), ((((rt0.c2)AND(rt0.c2)))IS NOT((- (rt0.c1)))), NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c0)))AND(rt0.c2)))AND(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'3f38d646')))>>(x'')), ((((rt0.c2)AND(rt0.c2)))IS NOT((- (rt0.c1)))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))AND(rt0.c2)))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'3f38d646')))>>(x'')), ((((rt0.c2)AND(rt0.c2)))IS NOT((- (rt0.c1)))), NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c0)))AND(rt0.c2)))AND(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'3f38d646')))>>(x'')), ((((rt0.c2)AND(rt0.c2)))IS NOT((- (rt0.c1)))), NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, ((vt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE, CAST(rt0.c0 AS INTEGER), ((rt0.c0)>('2088587214')), vt0.c0 COLLATE BINARY, rt0.c2 COLLATE NOCASE)) AND ((((NULL)LIKE(rt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0, (rt0.c0 IN ()), rt0.c2 COLLATE RTRIM, -1701012866, ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c0) BETWEEN ('1972368855') AND (rt0.c1)) END) ORDER BY ((((rt0.c1) NOTNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c0) BETWEEN ('1972368855') AND (rt0.c1)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, ((vt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE, CAST(rt0.c0 AS INTEGER), ((rt0.c0)>('2088587214')), vt0.c0 COLLATE BINARY, rt0.c2 COLLATE NOCASE)) AND ((((NULL)LIKE(rt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0, (rt0.c0 IN ()), rt0.c2 COLLATE RTRIM, -1701012866, ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) ORDER BY ((((rt0.c1) NOTNULL)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, ((vt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE, CAST(rt0.c0 AS INTEGER), ((rt0.c0)>('2088587214')), vt0.c0 COLLATE BINARY, rt0.c2 COLLATE NOCASE)) AND ((((NULL)LIKE(rt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0, (rt0.c0 IN ()), rt0.c2 COLLATE RTRIM, -1701012866, ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c0) BETWEEN ('1972368855') AND (rt0.c1)) END) ORDER BY ((((rt0.c1) NOTNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c0) BETWEEN ('1972368855') AND (rt0.c1)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, ((vt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE, CAST(rt0.c0 AS INTEGER), ((rt0.c0)>('2088587214')), vt0.c0 COLLATE BINARY, rt0.c2 COLLATE NOCASE)) AND ((((NULL)LIKE(rt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0, (rt0.c0 IN ()), rt0.c2 COLLATE RTRIM, -1701012866, ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) ORDER BY ((((rt0.c1) NOTNULL)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, ((vt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE, CAST(rt0.c0 AS INTEGER), ((rt0.c0)>('2088587214')), vt0.c0 COLLATE BINARY, rt0.c2 COLLATE NOCASE)) AND ((((NULL)LIKE(rt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0, (rt0.c0 IN ()), rt0.c2 COLLATE RTRIM, -1701012866, ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c0) BETWEEN ('1972368855') AND (rt0.c1)) END) ORDER BY ((((rt0.c1) NOTNULL)) IS FALSE) DESC;
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))))>((rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))))>((rt0.c1 COLLATE RTRIM))));
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))))>((rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))))>((rt0.c1 COLLATE RTRIM))));
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))))>((rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((- (rt1.c2))) IS FALSE)) ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((- (rt1.c2))) IS FALSE)) ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((- (rt1.c2))) IS FALSE)) ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) IN ()) DESC;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1) NOTNULL))) AND ((CASE WHEN 'mcr諯GU^[-' THEN rt1.c1 WHEN 'v[t[' THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 END)))) ORDER BY (((rt1.c1))>((CASE rt1.c1  WHEN NULL THEN rt1.c3 ELSE rt1.c3 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((((rt1.c1) NOTNULL))) AND ((CASE WHEN 'mcr諯GU^[-' THEN rt1.c1 WHEN 'v[t[' THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 END)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1))>((CASE rt1.c1  WHEN NULL THEN rt1.c3 ELSE rt1.c3 END))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1) NOTNULL))) AND ((CASE WHEN 'mcr諯GU^[-' THEN rt1.c1 WHEN 'v[t[' THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 END)))) ORDER BY (((rt1.c1))>((CASE rt1.c1  WHEN NULL THEN rt1.c3 ELSE rt1.c3 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((((rt1.c1) NOTNULL))) AND ((CASE WHEN 'mcr諯GU^[-' THEN rt1.c1 WHEN 'v[t[' THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 END)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1))>((CASE rt1.c1  WHEN NULL THEN rt1.c3 ELSE rt1.c3 END))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1) NOTNULL))) AND ((CASE WHEN 'mcr諯GU^[-' THEN rt1.c1 WHEN 'v[t[' THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 END)))) ORDER BY (((rt1.c1))>((CASE rt1.c1  WHEN NULL THEN rt1.c3 ELSE rt1.c3 END))) DESC  NULLS LAST;
SELECT * FROM rt1 CROSS JOIN vt0 ON (~ (((((((((rt1.c1)AND(rt1.c3)))OR(NULL)))AND(vt0.c0)))OR(rt1.c3)))) INNER JOIN rt0 ON (~ (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))) WHERE (((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt1.c2, rt1.c0))) IN ())) ORDER BY ((x'') NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt1.c2, rt1.c0))) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (~ (((((((((rt1.c1)AND(rt1.c3)))OR(NULL)))AND(vt0.c0)))OR(rt1.c3)))) INNER JOIN rt0 ON (~ (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))) ORDER BY ((x'') NOTNULL)  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN vt0 ON (~ (((((((((rt1.c1)AND(rt1.c3)))OR(NULL)))AND(vt0.c0)))OR(rt1.c3)))) INNER JOIN rt0 ON (~ (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))) WHERE (((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt1.c2, rt1.c0))) IN ())) ORDER BY ((x'') NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt1.c2, rt1.c0))) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (~ (((((((((rt1.c1)AND(rt1.c3)))OR(NULL)))AND(vt0.c0)))OR(rt1.c3)))) INNER JOIN rt0 ON (~ (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))) ORDER BY ((x'') NOTNULL)  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN vt0 ON (~ (((((((((rt1.c1)AND(rt1.c3)))OR(NULL)))AND(vt0.c0)))OR(rt1.c3)))) INNER JOIN rt0 ON (~ (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))) WHERE (((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt1.c2, rt1.c0))) IN ())) ORDER BY ((x'') NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) IS FALSE)) ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS TEXT) ELSE rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS TEXT) ELSE rt0.c1 END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) IS FALSE)) ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS TEXT) ELSE rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS TEXT) ELSE rt0.c1 END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) IS FALSE)) ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS TEXT) ELSE rt0.c1 END DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))+((('-738716081')|(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC))+((('-738716081')|(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))+((('-738716081')|(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC))+((('-738716081')|(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))+((('-738716081')|(rt1.c3)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1)IS NOT(rt1.c1)))AND((rt1.c3 IN (vt0.c0)))))AND(('' IN (rt1.c2, vt0.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (NULL) AND (json_patch(rt1.c3, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)IS NOT(rt1.c1)))AND((rt1.c3 IN (vt0.c0)))))AND(('' IN (rt1.c2, vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (NULL) AND (json_patch(rt1.c3, vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1)IS NOT(rt1.c1)))AND((rt1.c3 IN (vt0.c0)))))AND(('' IN (rt1.c2, vt0.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (NULL) AND (json_patch(rt1.c3, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)IS NOT(rt1.c1)))AND((rt1.c3 IN (vt0.c0)))))AND(('' IN (rt1.c2, vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (NULL) AND (json_patch(rt1.c3, vt0.c0)))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((MIN(rt1.c1, rt1.c2)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END) AND (load_extension(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((MIN(rt1.c1, rt1.c2)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END) AND (load_extension(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((MIN(rt1.c1, rt1.c2)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END) AND (load_extension(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((MIN(rt1.c1, rt1.c2)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END) AND (load_extension(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (2050685390);
SELECT SUM(count) FROM (SELECT ALL ((2050685390) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (2050685390);
SELECT SUM(count) FROM (SELECT ALL ((2050685390) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (2050685390);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (CAST(rt1.c2 AS TEXT)) AND (x'' COLLATE BINARY))) ORDER BY IFNULL(DISTINCT CAST(rt1.c2 AS BLOB), ((rt1.c1) NOT NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (CAST(rt1.c2 AS TEXT)) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY IFNULL(DISTINCT CAST(rt1.c2 AS BLOB), ((rt1.c1) NOT NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (CAST(rt1.c2 AS TEXT)) AND (x'' COLLATE BINARY))) ORDER BY IFNULL(DISTINCT CAST(rt1.c2 AS BLOB), ((rt1.c1) NOT NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (CAST(rt1.c2 AS TEXT)) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY IFNULL(DISTINCT CAST(rt1.c2 AS BLOB), ((rt1.c1) NOT NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (CAST(rt1.c2 AS TEXT)) AND (x'' COLLATE BINARY))) ORDER BY IFNULL(DISTINCT CAST(rt1.c2 AS BLOB), ((rt1.c1) NOT NULL)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) ORDER BY 2096299837 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY 2096299837 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) ORDER BY 2096299837 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY 2096299837 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((vt0.c0)>>(rt1.c1)))) AND (((((NULL, rt0.c1, rt0.c0, rt1.c0, rt1.c2))<>((712436386, rt1.c3, rt0.c0, rt1.c2, rt1.c3)))))) CROSS JOIN vt0 ON json_remove(((rt0.c0)!=(rt1.c0)), CAST(rt0.c1 AS NUMERIC)) WHERE ((((rt1.c0)) BETWEEN (((rt0.c0 IN (rt0.c1)))) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN (((rt0.c0 IN (rt0.c1)))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((vt0.c0)>>(rt1.c1)))) AND (((((NULL, rt0.c1, rt0.c0, rt1.c0, rt1.c2))!=((712436386, rt1.c3, rt0.c0, rt1.c2, rt1.c3)))))) CROSS JOIN vt0 ON json_remove(((rt0.c0)<>(rt1.c0)), CAST(rt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((vt0.c0)>>(rt1.c1)))) AND (((((NULL, rt0.c1, rt0.c0, rt1.c0, rt1.c2))<>((712436386, rt1.c3, rt0.c0, rt1.c2, rt1.c3)))))) CROSS JOIN vt0 ON json_remove(((rt0.c0)!=(rt1.c0)), CAST(rt0.c1 AS NUMERIC)) WHERE ((((rt1.c0)) BETWEEN (((rt0.c0 IN (rt0.c1)))) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN (((rt0.c0 IN (rt0.c1)))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((vt0.c0)>>(rt1.c1)))) AND (((((NULL, rt0.c1, rt0.c0, rt1.c0, rt1.c2))!=((712436386, rt1.c3, rt0.c0, rt1.c2, rt1.c3)))))) CROSS JOIN vt0 ON json_remove(((rt0.c0)<>(rt1.c0)), CAST(rt0.c1 AS NUMERIC)));
SELECT ALL * FROM vt0, rt1, rt0 WHERE (UNLIKELY(DISTINCT CAST(x'' AS TEXT)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(x'' AS TEXT))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (UNLIKELY(DISTINCT CAST(x'' AS TEXT)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(x'' AS TEXT))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (UNLIKELY(DISTINCT CAST(x'' AS TEXT)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0xffffffff9c96f53e THEN CAST(vt0.c0 AS TEXT) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0xffffffff9c96f53e THEN CAST(vt0.c0 AS TEXT) ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0xffffffff9c96f53e THEN CAST(vt0.c0 AS TEXT) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0xffffffff9c96f53e THEN CAST(vt0.c0 AS TEXT) ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0xffffffff9c96f53e THEN CAST(vt0.c0 AS TEXT) ELSE x'' END);
SELECT * FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<>((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)*(vt0.c0))))!=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<>((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)*(vt0.c0))))!=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<>((CAST(vt0.c0 AS REAL)))));
SELECT * FROM rt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(NULL AS NUMERIC));
SELECT ALL * FROM vt0, rt1, rt0 WHERE (HEX(DISTINCT ((((((((NULL)AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(0xffffffffe55a5be9)))) ORDER BY (((((NULL, rt1.c1, rt1.c2))>((vt0.c0, x'', rt1.c1)))) BETWEEN (HEX(DISTINCT rt1.c0)) AND (JULIANDAY(rt0.c1, rt1.c1, 0.21217448403405403)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((((((NULL)AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(0Xffffffffe55a5be9)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((((NULL, rt1.c1, rt1.c2))>((vt0.c0, x'', rt1.c1)))) BETWEEN (HEX(DISTINCT rt1.c0)) AND (JULIANDAY(rt0.c1, rt1.c1, 0.21217448403405403))));
SELECT ALL * FROM vt0, rt1, rt0 WHERE (HEX(DISTINCT ((((((((NULL)AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(0xffffffffe55a5be9)))) ORDER BY (((((NULL, rt1.c1, rt1.c2))>((vt0.c0, x'', rt1.c1)))) BETWEEN (HEX(DISTINCT rt1.c0)) AND (JULIANDAY(rt0.c1, rt1.c1, 0.21217448403405403)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((((((NULL)AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(0Xffffffffe55a5be9)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((((NULL, rt1.c1, rt1.c2))>((vt0.c0, x'', rt1.c1)))) BETWEEN (HEX(DISTINCT rt1.c0)) AND (JULIANDAY(rt0.c1, rt1.c1, 0.21217448403405403))));
SELECT ALL * FROM vt0, rt1, rt0 WHERE (HEX(DISTINCT ((((((((NULL)AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(0xffffffffe55a5be9)))) ORDER BY (((((NULL, rt1.c1, rt1.c2))>((vt0.c0, x'', rt1.c1)))) BETWEEN (HEX(DISTINCT rt1.c0)) AND (JULIANDAY(rt0.c1, rt1.c1, 0.21217448403405403)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c3)%(rt1.c2)) IN (((rt1.c2)IS NOT('0.5843036457384223')), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((((((((((rt1.c3)OR(vt0.c0)))OR((((rt0.c1))>((vt0.c0))))))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(TRIM('0.24726893856658194'))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)%(rt1.c2)) IN (((rt1.c2)IS NOT('0.5843036457384223')), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((((((((rt1.c3)OR(vt0.c0)))OR((((rt0.c1))>((vt0.c0))))))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(TRIM('0.24726893856658194'))) ASC);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c3)%(rt1.c2)) IN (((rt1.c2)IS NOT('0.5843036457384223')), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((((((((((rt1.c3)OR(vt0.c0)))OR((((rt0.c1))>((vt0.c0))))))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(TRIM('0.24726893856658194'))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)%(rt1.c2)) IN (((rt1.c2)IS NOT('0.5843036457384223')), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((((((((rt1.c3)OR(vt0.c0)))OR((((rt0.c1))>((vt0.c0))))))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(TRIM('0.24726893856658194'))) ASC);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c3)%(rt1.c2)) IN (((rt1.c2)IS NOT('0.5843036457384223')), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((((((((((rt1.c3)OR(vt0.c0)))OR((((rt0.c1))>((vt0.c0))))))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(TRIM('0.24726893856658194'))) ASC;
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON CAST((((rt0.c0, 1921045633, rt0.c2, rt1.c0, rt1.c2)) BETWEEN ((vt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c3)) AND ((rt1.c1, rt1.c1, rt0.c2, rt0.c1, rt1.c2))) AS TEXT) WHERE (0x6fa8c0be) ORDER BY UPPER(DISTINCT (('0U䮄ta\n') NOT BETWEEN (rt1.c2) AND (rt1.c0))), (CAST(rt0.c2 AS TEXT) IN ((rt1.c1 IN ()))), ((((rt0.c2) BETWEEN (0.5599713410849316) AND (rt1.c3)))<=(CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((0X6fa8c0be) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON CAST((((rt0.c0, 1921045633, rt0.c2, rt1.c0, rt1.c2)) BETWEEN ((vt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c3)) AND ((rt1.c1, rt1.c1, rt0.c2, rt0.c1, rt1.c2))) AS TEXT) ORDER BY UPPER(DISTINCT (('0U䮄ta\n') NOT BETWEEN (rt1.c2) AND (rt1.c0))), (CAST(rt0.c2 AS TEXT) IN ((rt1.c1 IN ()))), ((((rt0.c2) BETWEEN (0.5599713410849316) AND (rt1.c3)))<=(CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c0 END)));
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON CAST((((rt0.c0, 1921045633, rt0.c2, rt1.c0, rt1.c2)) BETWEEN ((vt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c3)) AND ((rt1.c1, rt1.c1, rt0.c2, rt0.c1, rt1.c2))) AS TEXT) WHERE (0x6fa8c0be) ORDER BY UPPER(DISTINCT (('0U䮄ta\n') NOT BETWEEN (rt1.c2) AND (rt1.c0))), (CAST(rt0.c2 AS TEXT) IN ((rt1.c1 IN ()))), ((((rt0.c2) BETWEEN (0.5599713410849316) AND (rt1.c3)))<=(CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((0X6fa8c0be) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON CAST((((rt0.c0, 1921045633, rt0.c2, rt1.c0, rt1.c2)) BETWEEN ((vt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c3)) AND ((rt1.c1, rt1.c1, rt0.c2, rt0.c1, rt1.c2))) AS TEXT) ORDER BY UPPER(DISTINCT (('0U䮄ta\n') NOT BETWEEN (rt1.c2) AND (rt1.c0))), (CAST(rt0.c2 AS TEXT) IN ((rt1.c1 IN ()))), ((((rt0.c2) BETWEEN (0.5599713410849316) AND (rt1.c3)))<=(CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c0 END)));
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON CAST((((rt0.c0, 1921045633, rt0.c2, rt1.c0, rt1.c2)) BETWEEN ((vt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c3)) AND ((rt1.c1, rt1.c1, rt0.c2, rt0.c1, rt1.c2))) AS TEXT) WHERE (0x6fa8c0be) ORDER BY UPPER(DISTINCT (('0U䮄ta\n') NOT BETWEEN (rt1.c2) AND (rt1.c0))), (CAST(rt0.c2 AS TEXT) IN ((rt1.c1 IN ()))), ((((rt0.c2) BETWEEN (0.5599713410849316) AND (rt1.c3)))<=(CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c0 END));
SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c3 COLLATE NOCASE)OR(0Xffffffffc09f8f52)))AND(rt1.c1 COLLATE NOCASE)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c3 COLLATE NOCASE)OR(0xffffffffc09f8f52)))AND(rt1.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c3 COLLATE NOCASE)OR(0Xffffffffc09f8f52)))AND(rt1.c1 COLLATE NOCASE)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c3 COLLATE NOCASE)OR(0xffffffffc09f8f52)))AND(rt1.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt1.c3 COLLATE NOCASE)OR(0Xffffffffc09f8f52)))AND(rt1.c1 COLLATE NOCASE)) WHERE (NULL);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt1.c3))) BETWEEN (rt1.c2) AND (((rt0.c2)<=(rt1.c1)))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY CASE (rt1.c1 IN (rt0.c1))  WHEN ((rt1.c1) NOT NULL) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END ELSE rt1.c3 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt1.c3))) BETWEEN (rt1.c2) AND (((rt0.c2)<=(rt1.c1)))) ORDER BY CASE (rt1.c1 IN (rt0.c1))  WHEN ((rt1.c1) NOT NULL) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END ELSE rt1.c3 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt1.c3))) BETWEEN (rt1.c2) AND (((rt0.c2)<=(rt1.c1)))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY CASE (rt1.c1 IN (rt0.c1))  WHEN ((rt1.c1) NOT NULL) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END ELSE rt1.c3 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt1.c3))) BETWEEN (rt1.c2) AND (((rt0.c2)<=(rt1.c1)))) ORDER BY CASE (rt1.c1 IN (rt0.c1))  WHEN ((rt1.c1) NOT NULL) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END ELSE rt1.c3 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt1.c3))) BETWEEN (rt1.c2) AND (((rt0.c2)<=(rt1.c1)))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY CASE (rt1.c1 IN (rt0.c1))  WHEN ((rt1.c1) NOT NULL) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END ELSE rt1.c3 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ ((- (rt1.c2)))) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt0.c0)||(rt1.c1)))))AND(NULL)) WHERE (rt1.c0) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ ((- (rt1.c2)))) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt0.c0)||(rt1.c1)))))AND(NULL)) ORDER BY rt1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ ((- (rt1.c2)))) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt0.c0)||(rt1.c1)))))AND(NULL)) WHERE (rt1.c0) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ ((- (rt1.c2)))) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt0.c0)||(rt1.c1)))))AND(NULL)) ORDER BY rt1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ ((- (rt1.c2)))) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(((rt0.c0)||(rt1.c1)))))AND(NULL)) WHERE (rt1.c0) ORDER BY rt1.c2  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((NOT (0.505374597240792)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.505374597240792))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((NOT (0.505374597240792)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.505374597240792))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((NOT (0.505374597240792)));
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL)OR(x'54f9')))AND((NOT (rt0.c1))))) ORDER BY IFNULL(DISTINCT rt0.c1 COLLATE BINARY, CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END), ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(0.968001312015321)))OR(x''))) AND (((rt0.c1)%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(x'54f9')))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(DISTINCT rt0.c1 COLLATE BINARY, CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END), ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(0.968001312015321)))OR(x''))) AND (((rt0.c1)%(vt0.c0)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL)OR(x'54f9')))AND((NOT (rt0.c1))))) ORDER BY IFNULL(DISTINCT rt0.c1 COLLATE BINARY, CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END), ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(0.968001312015321)))OR(x''))) AND (((rt0.c1)%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(x'54f9')))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(DISTINCT rt0.c1 COLLATE BINARY, CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END), ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(0.968001312015321)))OR(x''))) AND (((rt0.c1)%(vt0.c0)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL)OR(x'54f9')))AND((NOT (rt0.c1))))) ORDER BY IFNULL(DISTINCT rt0.c1 COLLATE BINARY, CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END), ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(0.968001312015321)))OR(x''))) AND (((rt0.c1)%(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN x'' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN x'' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN x'' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN x'' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN x'' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON CAST(CAST(rt1.c2 AS REAL) AS BLOB) LEFT OUTER JOIN vt0 ON (((NOT (vt0.c0)))==((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c1, rt1.c1))))) WHERE (((rt0.c2 COLLATE BINARY) IS TRUE)) ORDER BY 0.336451432382849 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(CAST(rt1.c2 AS REAL) AS BLOB) LEFT OUTER JOIN vt0 ON (((NOT (vt0.c0)))==((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c1, rt1.c1))))) ORDER BY 0.336451432382849 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON CAST(CAST(rt1.c2 AS REAL) AS BLOB) LEFT OUTER JOIN vt0 ON (((NOT (vt0.c0)))==((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c1, rt1.c1))))) WHERE (((rt0.c2 COLLATE BINARY) IS TRUE)) ORDER BY 0.336451432382849 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(CAST(rt1.c2 AS REAL) AS BLOB) LEFT OUTER JOIN vt0 ON (((NOT (vt0.c0)))==((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c1, rt1.c1))))) ORDER BY 0.336451432382849 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON CAST(CAST(rt1.c2 AS REAL) AS BLOB) LEFT OUTER JOIN vt0 ON (((NOT (vt0.c0)))==((((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c2)) AND ((rt0.c2, rt1.c1, rt1.c1))))) WHERE (((rt0.c2 COLLATE BINARY) IS TRUE)) ORDER BY 0.336451432382849 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN rt1 ON CAST(-785579583 AS REAL) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN rt1 ON CAST(-785579583 AS REAL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN rt1 ON CAST(-785579583 AS REAL) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN rt1 ON CAST(-785579583 AS REAL));
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((NULL)IS NOT(rt1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt0 ORDER BY ((NULL)IS NOT(rt1.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((NULL)IS NOT(rt1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt0 ORDER BY ((NULL)IS NOT(rt1.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((NULL)IS NOT(rt1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt1.c0) ORDER BY (((rt1.c2, rt1.c2, rt1.c3)) BETWEEN (('1490193135', ((rt1.c1)<(rt0.c1)), ((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)), CAST(x'cf84' AS NUMERIC), CASE WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((rt1.c2, rt1.c2, rt1.c3)) BETWEEN (('1490193135', ((rt1.c1)<(rt0.c1)), ((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)), CAST(x'cf84' AS NUMERIC), CASE WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt1.c0) ORDER BY (((rt1.c2, rt1.c2, rt1.c3)) BETWEEN (('1490193135', ((rt1.c1)<(rt0.c1)), ((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)), CAST(x'cf84' AS NUMERIC), CASE WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((rt1.c2, rt1.c2, rt1.c3)) BETWEEN (('1490193135', ((rt1.c1)<(rt0.c1)), ((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)), CAST(x'cf84' AS NUMERIC), CASE WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt1.c0) ORDER BY (((rt1.c2, rt1.c2, rt1.c3)) BETWEEN (('1490193135', ((rt1.c1)<(rt0.c1)), ((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)), CAST(x'cf84' AS NUMERIC), CASE WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (((((((((((vt0.c0)+(rt1.c2)))OR(ABS(rt1.c1))))OR(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))))AND(rt1.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN x'ab47e45e' ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)+(rt1.c2)))OR(ABS(rt1.c1))))OR(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))))AND(rt1.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN x'ab47e45e' ELSE rt1.c1 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((((((vt0.c0)+(rt1.c2)))OR(ABS(rt1.c1))))OR(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))))AND(rt1.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN x'ab47e45e' ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)+(rt1.c2)))OR(ABS(rt1.c1))))OR(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))))AND(rt1.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN x'ab47e45e' ELSE rt1.c1 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((((((vt0.c0)+(rt1.c2)))OR(ABS(rt1.c1))))OR(((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))))AND(rt1.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN x'ab47e45e' ELSE rt1.c1 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LIKELY(vt0.c0))GLOB((((vt0.c0, vt0.c0, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0)))))) ORDER BY LIKELIHOOD(CAST(NULL AS NUMERIC), 0.08689050074142879) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0))GLOB((((vt0.c0, vt0.c0, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELIHOOD(CAST(NULL AS NUMERIC), 0.08689050074142879) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LIKELY(vt0.c0))GLOB((((vt0.c0, vt0.c0, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0)))))) ORDER BY LIKELIHOOD(CAST(NULL AS NUMERIC), 0.08689050074142879) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0))GLOB((((vt0.c0, vt0.c0, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELIHOOD(CAST(NULL AS NUMERIC), 0.08689050074142879) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LIKELY(vt0.c0))GLOB((((vt0.c0, vt0.c0, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0)))))) ORDER BY LIKELIHOOD(CAST(NULL AS NUMERIC), 0.08689050074142879) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((NULL)>(ABS(DISTINCT rt1.c3)))) ORDER BY ABS(NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>(ABS(DISTINCT rt1.c3)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ABS(NULL) ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((NULL)>(ABS(DISTINCT rt1.c3)))) ORDER BY ABS(NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>(ABS(DISTINCT rt1.c3)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ABS(NULL) ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((NULL)>(ABS(DISTINCT rt1.c3)))) ORDER BY ABS(NULL) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (0x2b02a732) AND (vt0.c0))) ISNULL)) ORDER BY (('nowQ') NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (0x2b02a732) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('nowQ') NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (0x2b02a732) AND (vt0.c0))) ISNULL)) ORDER BY (('nowQ') NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (0x2b02a732) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('nowQ') NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (0x2b02a732) AND (vt0.c0))) ISNULL)) ORDER BY (('nowQ') NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((((('759821313')OR(CAST(x'' AS INTEGER))))OR(((rt1.c3)<<(vt0.c0)))))AND((((rt1.c2, rt1.c3, vt0.c0))!=((rt1.c2, x'', rt1.c1))))))OR(NULL))) ORDER BY TYPEOF(DISTINCT TYPEOF(vt0.c0))  NULLS FIRST, ((((rt1.c3)<=(rt1.c1)))/(TRIM(vt0.c0))) ASC  NULLS FIRST, (((QUOTE(rt1.c3)))=((CAST(vt0.c0 AS BLOB)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((('759821313')OR(CAST(x'' AS INTEGER))))OR(((rt1.c3)<<(vt0.c0)))))AND((((rt1.c2, rt1.c3, vt0.c0))!=((rt1.c2, x'', rt1.c1))))))OR(NULL))) IS TRUE)  as count FROM rt1, vt0 ORDER BY TYPEOF(DISTINCT TYPEOF(vt0.c0))  NULLS FIRST, ((((rt1.c3)<=(rt1.c1)))/(TRIM(vt0.c0))) ASC  NULLS FIRST, (((QUOTE(rt1.c3)))=((CAST(vt0.c0 AS BLOB)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((((('759821313')OR(CAST(x'' AS INTEGER))))OR(((rt1.c3)<<(vt0.c0)))))AND((((rt1.c2, rt1.c3, vt0.c0))!=((rt1.c2, x'', rt1.c1))))))OR(NULL))) ORDER BY TYPEOF(DISTINCT TYPEOF(vt0.c0))  NULLS FIRST, ((((rt1.c3)<=(rt1.c1)))/(TRIM(vt0.c0))) ASC  NULLS FIRST, (((QUOTE(rt1.c3)))=((CAST(vt0.c0 AS BLOB)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((('759821313')OR(CAST(x'' AS INTEGER))))OR(((rt1.c3)<<(vt0.c0)))))AND((((rt1.c2, rt1.c3, vt0.c0))!=((rt1.c2, x'', rt1.c1))))))OR(NULL))) IS TRUE)  as count FROM rt1, vt0 ORDER BY TYPEOF(DISTINCT TYPEOF(vt0.c0))  NULLS FIRST, ((((rt1.c3)<=(rt1.c1)))/(TRIM(vt0.c0))) ASC  NULLS FIRST, (((QUOTE(rt1.c3)))=((CAST(vt0.c0 AS BLOB)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((((('759821313')OR(CAST(x'' AS INTEGER))))OR(((rt1.c3)<<(vt0.c0)))))AND((((rt1.c2, rt1.c3, vt0.c0))!=((rt1.c2, x'', rt1.c1))))))OR(NULL))) ORDER BY TYPEOF(DISTINCT TYPEOF(vt0.c0))  NULLS FIRST, ((((rt1.c3)<=(rt1.c1)))/(TRIM(vt0.c0))) ASC  NULLS FIRST, (((QUOTE(rt1.c3)))=((CAST(vt0.c0 AS BLOB)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (TRIM(rt1.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c0)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (TRIM(rt1.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c0)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (TRIM(rt1.c0));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))>(('{f2ꁉ{Wk' IN (vt0.c0))))) ORDER BY CASE WHEN LENGTH(rt1.c0) THEN CAST(rt0.c2 AS INTEGER) END ASC, ((CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))>(('{f2ꁉ{Wk' IN (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN LENGTH(rt1.c0) THEN CAST(rt0.c2 AS INTEGER) END ASC, ((CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))>(('{f2ꁉ{Wk' IN (vt0.c0))))) ORDER BY CASE WHEN LENGTH(rt1.c0) THEN CAST(rt0.c2 AS INTEGER) END ASC, ((CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))>(('{f2ꁉ{Wk' IN (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN LENGTH(rt1.c0) THEN CAST(rt0.c2 AS INTEGER) END ASC, ((CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))>(('{f2ꁉ{Wk' IN (vt0.c0))))) ORDER BY CASE WHEN LENGTH(rt1.c0) THEN CAST(rt0.c2 AS INTEGER) END ASC, ((CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END) NOTNULL)  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((~ (((rt1.c2)GLOB(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2)GLOB(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((~ (((rt1.c2)GLOB(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2)GLOB(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((~ (((rt1.c2)GLOB(rt1.c1)))));
SELECT * FROM rt1, vt0 WHERE (HEX(((rt1.c3) BETWEEN (rt1.c0) AND (vt0.c0)))) ORDER BY '-1291307877' ASC;
SELECT SUM(count) FROM (SELECT ((HEX(((rt1.c3) BETWEEN (rt1.c0) AND (vt0.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '-1291307877' ASC);
SELECT * FROM rt1, vt0 WHERE (HEX(((rt1.c3) BETWEEN (rt1.c0) AND (vt0.c0)))) ORDER BY '-1291307877' ASC;
SELECT SUM(count) FROM (SELECT ((HEX(((rt1.c3) BETWEEN (rt1.c0) AND (vt0.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '-1291307877' ASC);
SELECT * FROM rt1, vt0 WHERE (HEX(((rt1.c3) BETWEEN (rt1.c0) AND (vt0.c0)))) ORDER BY '-1291307877' ASC;
SELECT COUNT(*) FROM rt0 WHERE (((json_patch(rt0.c1, rt0.c1)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((json_patch(rt0.c1, rt0.c1)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((json_patch(rt0.c1, rt0.c1)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((json_patch(rt0.c1, rt0.c1)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((json_patch(rt0.c1, rt0.c1)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((NULL) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1)!=(rt0.c1)) IN ()) WHERE ('&3') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('&3') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1)!=(rt0.c1)) IN ()) ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1)!=(rt0.c1)) IN ()) WHERE ('&3') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('&3') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1)!=(rt0.c1)) IN ()) ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1)!=(rt0.c1)) IN ()) WHERE ('&3') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY) ORDER BY NULL COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN rt1.c3 THEN x'' END COLLATE NOCASE COLLATE RTRIM, (((NOT (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN rt1.c3 THEN x'' END COLLATE NOCASE COLLATE RTRIM, (((NOT (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY) ORDER BY NULL COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN rt1.c3 THEN x'' END COLLATE NOCASE COLLATE RTRIM, (((NOT (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN rt1.c3 THEN x'' END COLLATE NOCASE COLLATE RTRIM, (((NOT (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY) ORDER BY NULL COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN rt1.c3 THEN x'' END COLLATE NOCASE COLLATE RTRIM, (((NOT (vt0.c0))) ISNULL);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (LOWER(DISTINCT ((rt1.c1)OR(rt1.c0)))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt1.c1)OR(rt1.c0)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0))) NOT NULL) ASC);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (LOWER(DISTINCT ((rt1.c1)OR(rt1.c0)))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt1.c1)OR(rt1.c0)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0))) NOT NULL) ASC);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (LOWER(DISTINCT ((rt1.c1)OR(rt1.c0)))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (HEX(DISTINCT 0xffffffff9a9c9a7e)) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (HEX(DISTINCT 0xffffffff9a9c9a7e)) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (HEX(DISTINCT 0xffffffff9a9c9a7e)) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (HEX(DISTINCT 0xffffffff9a9c9a7e)) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (HEX(DISTINCT 0xffffffff9a9c9a7e)) AND ((+ (rt0.c0)))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS FALSE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (rt1.c1 COLLATE BINARY))) ORDER BY (((rt1.c1)) NOT BETWEEN ((DATETIME(rt1.c3, rt1.c0, rt1.c0))) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) NOT BETWEEN ((DATETIME(rt1.c3, rt1.c0, rt1.c0))) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS FALSE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (rt1.c1 COLLATE BINARY))) ORDER BY (((rt1.c1)) NOT BETWEEN ((DATETIME(rt1.c3, rt1.c0, rt1.c0))) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) NOT BETWEEN ((DATETIME(rt1.c3, rt1.c0, rt1.c0))) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS FALSE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (rt1.c1 COLLATE BINARY))) ORDER BY (((rt1.c1)) NOT BETWEEN ((DATETIME(rt1.c3, rt1.c0, rt1.c0))) AND ((CAST(rt1.c2 AS NUMERIC))))  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c3)/(rt1.c3)))||(rt0.c0))) ORDER BY 0.9521671432176134 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)/(rt1.c3)))||(rt0.c0))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY 0.9521671432176134 DESC);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c3)/(rt1.c3)))||(rt0.c0))) ORDER BY 0.9521671432176134 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)/(rt1.c3)))||(rt0.c0))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY 0.9521671432176134 DESC);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c3)/(rt1.c3)))||(rt0.c0))) ORDER BY 0.9521671432176134 DESC;
SELECT * FROM rt0, rt1, vt0 WHERE ((((- (rt1.c2)))>=((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c3, rt0.c1)) AND ((rt1.c1, rt1.c3, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))>=((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c3, rt0.c1)) AND ((rt1.c1, rt1.c3, rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, vt0 NOT INDEXED);
SELECT * FROM rt0, rt1, vt0 WHERE ((((- (rt1.c2)))>=((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c3, rt0.c1)) AND ((rt1.c1, rt1.c3, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))>=((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c3, rt0.c1)) AND ((rt1.c1, rt1.c3, rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, vt0 NOT INDEXED);
SELECT * FROM rt0, rt1, vt0 WHERE ((((- (rt1.c2)))>=((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c3, rt0.c1)) AND ((rt1.c1, rt1.c3, rt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((0.49376583506651994)) AND ((1490193135)))))<=(((- (rt0.c1)))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))&(0.9217494101256829));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) BETWEEN ((0.49376583506651994)) AND ((1490193135)))))<=(((- (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))&(0.9217494101256829)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((0.49376583506651994)) AND ((1490193135)))))<=(((- (rt0.c1)))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))&(0.9217494101256829));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) BETWEEN ((0.49376583506651994)) AND ((1490193135)))))<=(((- (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))&(0.9217494101256829)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((0.49376583506651994)) AND ((1490193135)))))<=(((- (rt0.c1)))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))&(0.9217494101256829));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((rt1.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((rt1.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((rt1.c1 IN ())) NOTNULL));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CASE rt0.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END) NOT NULL)) ORDER BY (((rt1.c3, rt1.c2, rt0.c1))>=(('1921045633', rt1.c1, rt1.c2))) COLLATE BINARY, CASE (((rt1.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c0)) BETWEEN ((rt1.c3, x'', rt1.c1, rt0.c2, rt1.c0)) AND ((rt1.c1, rt0.c2, rt0.c2, rt0.c0, 0x468dd62d)))  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c2)) THEN '0.5843036457384223' ELSE (rt1.c1 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3, rt1.c2, rt0.c1))>=(('1921045633', rt1.c1, rt1.c2))) COLLATE BINARY, CASE (((rt1.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c0)) BETWEEN ((rt1.c3, x'', rt1.c1, rt0.c2, rt1.c0)) AND ((rt1.c1, rt0.c2, rt0.c2, rt0.c0, 0X468dd62d)))  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c2)) THEN '0.5843036457384223' ELSE (rt1.c1 IN ()) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CASE rt0.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END) NOT NULL)) ORDER BY (((rt1.c3, rt1.c2, rt0.c1))>=(('1921045633', rt1.c1, rt1.c2))) COLLATE BINARY, CASE (((rt1.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c0)) BETWEEN ((rt1.c3, x'', rt1.c1, rt0.c2, rt1.c0)) AND ((rt1.c1, rt0.c2, rt0.c2, rt0.c0, 0x468dd62d)))  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c2)) THEN '0.5843036457384223' ELSE (rt1.c1 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3, rt1.c2, rt0.c1))>=(('1921045633', rt1.c1, rt1.c2))) COLLATE BINARY, CASE (((rt1.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c0)) BETWEEN ((rt1.c3, x'', rt1.c1, rt0.c2, rt1.c0)) AND ((rt1.c1, rt0.c2, rt0.c2, rt0.c0, 0X468dd62d)))  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c2)) THEN '0.5843036457384223' ELSE (rt1.c1 IN ()) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CASE rt0.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END) NOT NULL)) ORDER BY (((rt1.c3, rt1.c2, rt0.c1))>=(('1921045633', rt1.c1, rt1.c2))) COLLATE BINARY, CASE (((rt1.c3, rt0.c2, rt1.c2, rt1.c0, rt0.c0)) BETWEEN ((rt1.c3, x'', rt1.c1, rt0.c2, rt1.c0)) AND ((rt1.c1, rt0.c2, rt0.c2, rt0.c0, 0x468dd62d)))  WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c2)) THEN '0.5843036457384223' ELSE (rt1.c1 IN ()) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (- (((rt1.c0) NOTNULL))) RIGHT OUTER JOIN rt1 ON rt0.c2 WHERE (((rt1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- (((rt1.c0) NOTNULL))) RIGHT OUTER JOIN rt1 ON rt0.c2);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (- (((rt1.c0) NOTNULL))) RIGHT OUTER JOIN rt1 ON rt0.c2 WHERE (((rt1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- (((rt1.c0) NOTNULL))) RIGHT OUTER JOIN rt1 ON rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2)+(rt1.c0)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c2)+(rt1.c0)))) AND ((rt0.c2)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2)+(rt1.c0)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c2)+(rt1.c0)))) AND ((rt0.c2)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2)+(rt1.c0)))) AND ((rt0.c2))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c0  WHEN rt1.c0 THEN '-1143599013' WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END)AND(rt1.c3)))AND(((rt0.c1)<(rt0.c1)))) WHERE (x'de46');
SELECT SUM(count) FROM (SELECT ((x'de46') IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c0  WHEN rt1.c0 THEN '-1143599013' WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END)AND(rt1.c3)))AND(((rt0.c1)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c0  WHEN rt1.c0 THEN '-1143599013' WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END)AND(rt1.c3)))AND(((rt0.c1)<(rt0.c1)))) WHERE (x'de46');
SELECT SUM(count) FROM (SELECT ((x'de46') IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c0  WHEN rt1.c0 THEN '-1143599013' WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END)AND(rt1.c3)))AND(((rt0.c1)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c0  WHEN rt1.c0 THEN '-1143599013' WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END)AND(rt1.c3)))AND(((rt0.c1)<(rt0.c1)))) WHERE (x'de46');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt0.c1 END) AND (((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c0)))) INNER JOIN rt0 ON NULL WHERE ('0.6242253926589691' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('0.6242253926589691' COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt0.c1 END) AND (((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c0)))) INNER JOIN rt0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt0.c1 END) AND (((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c0)))) INNER JOIN rt0 ON NULL WHERE ('0.6242253926589691' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('0.6242253926589691' COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt0.c1 END) AND (((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c0)))) INNER JOIN rt0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt0.c1 END) AND (((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c0)))) INNER JOIN rt0 ON NULL WHERE ('0.6242253926589691' COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2, rt0.c0, rt0.c1))>((rt0.c1, rt0.c2, rt0.c2))) IN ((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c1, rt0.c2, vt0.c0))), NULL))) ORDER BY RTRIM(json_extract(vt0.c0, rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, rt0.c0, rt0.c1))>((rt0.c1, rt0.c2, rt0.c2))) IN ((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c1, rt0.c2, vt0.c0))), NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY RTRIM(json_extract(vt0.c0, rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2, rt0.c0, rt0.c1))>((rt0.c1, rt0.c2, rt0.c2))) IN ((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c1, rt0.c2, vt0.c0))), NULL))) ORDER BY RTRIM(json_extract(vt0.c0, rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, rt0.c0, rt0.c1))>((rt0.c1, rt0.c2, rt0.c2))) IN ((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c1, rt0.c2, vt0.c0))), NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY RTRIM(json_extract(vt0.c0, rt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 NOT INDEXED WHERE (rt0.c1) ORDER BY json_type(vt0.c0) COLLATE BINARY ASC  NULLS FIRST, ((((((((((NULL)OR(NULL)))AND(rt1.c1)))OR(rt0.c0)))AND(rt1.c1))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY json_type(vt0.c0) COLLATE BINARY ASC  NULLS FIRST, ((((((((((NULL)OR(NULL)))AND(rt1.c1)))OR(rt0.c0)))AND(rt1.c1))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 NOT INDEXED WHERE (rt0.c1) ORDER BY json_type(vt0.c0) COLLATE BINARY ASC  NULLS FIRST, ((((((((((NULL)OR(NULL)))AND(rt1.c1)))OR(rt0.c0)))AND(rt1.c1))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY json_type(vt0.c0) COLLATE BINARY ASC  NULLS FIRST, ((((((((((NULL)OR(NULL)))AND(rt1.c1)))OR(rt0.c0)))AND(rt1.c1))) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY (+ ((rt0.c0 IN (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((rt0.c0 IN (rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY (+ ((rt0.c0 IN (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((rt0.c0 IN (rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY (+ ((rt0.c0 IN (rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END IN ()));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c0)%(rt0.c0)))+(((1215878638)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)%(rt0.c0)))+(((1215878638)/(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c0)%(rt0.c0)))+(((1215878638)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)%(rt0.c0)))+(((1215878638)/(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c0)%(rt0.c0)))+(((1215878638)/(rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((+ (x'2488'))) ORDER BY CAST(rt1.c3 COLLATE BINARY AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (((+ (x'2488'))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CAST(rt1.c3 COLLATE BINARY AS TEXT) DESC);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((+ (x'2488'))) ORDER BY CAST(rt1.c3 COLLATE BINARY AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (((+ (x'2488'))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CAST(rt1.c3 COLLATE BINARY AS TEXT) DESC);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((+ (x'2488'))) ORDER BY CAST(rt1.c3 COLLATE BINARY AS TEXT) DESC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))GLOB((('') NOT NULL))) INNER JOIN rt1 ON CAST((1916007559 IN (rt1.c0, rt1.c3)) AS TEXT) WHERE ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ((rt0.c0 IN ())))) ORDER BY LIKELY(DISTINCT (((rt1.c1))<((rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))GLOB((('') NOT NULL))) INNER JOIN rt1 ON CAST((1916007559 IN (rt1.c0, rt1.c3)) AS TEXT) ORDER BY LIKELY(DISTINCT (((rt1.c1))<((rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))GLOB((('') NOT NULL))) INNER JOIN rt1 ON CAST((1916007559 IN (rt1.c0, rt1.c3)) AS TEXT) WHERE ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ((rt0.c0 IN ())))) ORDER BY LIKELY(DISTINCT (((rt1.c1))<((rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))GLOB((('') NOT NULL))) INNER JOIN rt1 ON CAST((1916007559 IN (rt1.c0, rt1.c3)) AS TEXT) ORDER BY LIKELY(DISTINCT (((rt1.c1))<((rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))GLOB((('') NOT NULL))) INNER JOIN rt1 ON CAST((1916007559 IN (rt1.c0, rt1.c3)) AS TEXT) WHERE ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ((rt0.c0 IN ())))) ORDER BY LIKELY(DISTINCT (((rt1.c1))<((rt0.c1)))) ASC;
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((x'')))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((x'')))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((x''))));
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (((MIN(rt1.c3, rt1.c2)) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(vt0.c0))) AND (((vt0.c0)||(rt1.c3))))) ORDER BY (((((rt1.c1))<>((rt1.c0)))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (('-2009959132' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((MIN(rt1.c3, rt1.c2)) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(vt0.c0))) AND (((vt0.c0)||(rt1.c3))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((((rt1.c1))<>((rt1.c0)))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (('-2009959132' IN ()))) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (((MIN(rt1.c3, rt1.c2)) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(vt0.c0))) AND (((vt0.c0)||(rt1.c3))))) ORDER BY (((((rt1.c1))<>((rt1.c0)))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (('-2009959132' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((MIN(rt1.c3, rt1.c2)) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(vt0.c0))) AND (((vt0.c0)||(rt1.c3))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((((rt1.c1))<>((rt1.c0)))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (('-2009959132' IN ()))) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (((MIN(rt1.c3, rt1.c2)) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(vt0.c0))) AND (((vt0.c0)||(rt1.c3))))) ORDER BY (((((rt1.c1))<>((rt1.c0)))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (('-2009959132' IN ()))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)=(vt0.c0)))) AND (((+ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0)=(vt0.c0)))) AND (((+ (rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)=(vt0.c0)))) AND (((+ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0)=(vt0.c0)))) AND (((+ (rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)=(vt0.c0)))) AND (((+ (rt0.c1))))));
SELECT ALL * FROM rt1, vt0 WHERE (CHAR(((rt1.c0)<<(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((CHAR(((rt1.c0)<<(rt1.c2)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CHAR(((rt1.c0)<<(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((CHAR(((rt1.c0)<<(rt1.c2)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CHAR(((rt1.c0)<<(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt1.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt1.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt1.c3) ISNULL))));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c1)AND(rt1.c3)))OR(rt1.c2)))OR((rt1.c3 IN ()))))AND('FALSE')) WHERE ((((rt0.c2 IN (rt1.c2, vt0.c0)))IS(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt1.c2, vt0.c0)))IS(rt1.c2))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c1)AND(rt1.c3)))OR(rt1.c2)))OR((rt1.c3 IN ()))))AND('FALSE')));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c1)AND(rt1.c3)))OR(rt1.c2)))OR((rt1.c3 IN ()))))AND('FALSE')) WHERE ((((rt0.c2 IN (rt1.c2, vt0.c0)))IS(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt1.c2, vt0.c0)))IS(rt1.c2))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c1)AND(rt1.c3)))OR(rt1.c2)))OR((rt1.c3 IN ()))))AND('FALSE')));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c1)AND(rt1.c3)))OR(rt1.c2)))OR((rt1.c3 IN ()))))AND('FALSE')) WHERE ((((rt0.c2 IN (rt1.c2, vt0.c0)))IS(rt1.c2)));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3)) BETWEEN (((- (rt1.c2)))) AND ((vt0.c0))) FULL OUTER JOIN rt0 ON ((((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 END)AND((NOT (rt0.c1)))))AND((rt0.c0 IN (rt1.c0)))) WHERE (((rt1.c3)||(rt1.c3)) COLLATE RTRIM) ORDER BY (rt1.c1 IN (rt0.c1, rt0.c2)) COLLATE NOCASE  NULLS LAST, (((((rt1.c1)) BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)||(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3)) BETWEEN (((- (rt1.c2)))) AND ((vt0.c0))) FULL OUTER JOIN rt0 ON ((((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 END)AND((NOT (rt0.c1)))))AND((rt0.c0 IN (rt1.c0)))) ORDER BY (rt1.c1 IN (rt0.c1, rt0.c2)) COLLATE NOCASE  NULLS LAST, (((((rt1.c1)) BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3)) BETWEEN (((- (rt1.c2)))) AND ((vt0.c0))) FULL OUTER JOIN rt0 ON ((((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 END)AND((NOT (rt0.c1)))))AND((rt0.c0 IN (rt1.c0)))) WHERE (((rt1.c3)||(rt1.c3)) COLLATE RTRIM) ORDER BY (rt1.c1 IN (rt0.c1, rt0.c2)) COLLATE NOCASE  NULLS LAST, (((((rt1.c1)) BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)||(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3)) BETWEEN (((- (rt1.c2)))) AND ((vt0.c0))) FULL OUTER JOIN rt0 ON ((((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 END)AND((NOT (rt0.c1)))))AND((rt0.c0 IN (rt1.c0)))) ORDER BY (rt1.c1 IN (rt0.c1, rt0.c2)) COLLATE NOCASE  NULLS LAST, (((((rt1.c1)) BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3)) BETWEEN (((- (rt1.c2)))) AND ((vt0.c0))) FULL OUTER JOIN rt0 ON ((((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c3 END)AND((NOT (rt0.c1)))))AND((rt0.c0 IN (rt1.c0)))) WHERE (((rt1.c3)||(rt1.c3)) COLLATE RTRIM) ORDER BY (rt1.c1 IN (rt0.c1, rt0.c2)) COLLATE NOCASE  NULLS LAST, (((((rt1.c1)) BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((~ ('Rb~P9)fD')));
SELECT SUM(count) FROM (SELECT ALL (((~ ('Rb~P9)fD'))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((~ ('Rb~P9)fD')));
SELECT SUM(count) FROM (SELECT ALL (((~ ('Rb~P9)fD'))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((~ ('Rb~P9)fD')));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0, vt0.c0))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0, vt0.c0))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0, vt0.c0))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0, vt0.c0))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0, vt0.c0))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)))))) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)) AS INTEGER));
SELECT * FROM vt0, rt1 WHERE ((~ ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((~ ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((~ ((rt1.c1 IN ()))));
SELECT * FROM rt0 WHERE (((rt0.c1)>=('Jo璲*')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=('Jo璲*'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)>=('Jo璲*')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=('Jo璲*'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)>=('Jo璲*')));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((x'') NOT BETWEEN ((('n') ISNULL)) AND (((rt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((('n') ISNULL)) AND (((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((x'') NOT BETWEEN ((('n') ISNULL)) AND (((rt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((('n') ISNULL)) AND (((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((x'') NOT BETWEEN ((('n') ISNULL)) AND (((rt0.c0)>=(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))AND(rt0.c0)))AND(rt1.c0))) ISNULL) LEFT OUTER JOIN rt0 ON (((rt1.c0))>((((rt1.c3) NOT NULL)))) WHERE (CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c1)) THEN (((rt1.c2)) NOT BETWEEN (('')) AND ((rt1.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt1.c2, rt0.c2))<>((rt0.c1, vt0.c0, 1.916007559E9))) WHEN rt1.c0 THEN (vt0.c0 IN ()) END) ORDER BY (((rt1.c2, rt0.c2, rt1.c1)) NOT BETWEEN ((UPPER(DISTINCT rt1.c2), (rt0.c2 IN ()), rt1.c2)) AND ((NULL, TOTAL_CHANGES(), 0.818704709861421))), (('297711151')<(((((((((rt0.c2)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c1)) THEN (((rt1.c2)) NOT BETWEEN (('')) AND ((rt1.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt1.c2, rt0.c2))<>((rt0.c1, vt0.c0, 1.916007559E9))) WHEN rt1.c0 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))AND(rt0.c0)))AND(rt1.c0))) ISNULL) LEFT OUTER JOIN rt0 ON (((rt1.c0))>((((rt1.c3) NOT NULL)))) ORDER BY (((rt1.c2, rt0.c2, rt1.c1)) NOT BETWEEN ((UPPER(DISTINCT rt1.c2), (rt0.c2 IN ()), rt1.c2)) AND ((NULL, TOTAL_CHANGES(), 0.818704709861421))), (('297711151')<(((((((((rt0.c2)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))AND(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))AND(rt0.c0)))AND(rt1.c0))) ISNULL) LEFT OUTER JOIN rt0 ON (((rt1.c0))>((((rt1.c3) NOT NULL)))) WHERE (CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c1)) THEN (((rt1.c2)) NOT BETWEEN (('')) AND ((rt1.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt1.c2, rt0.c2))<>((rt0.c1, vt0.c0, 1.916007559E9))) WHEN rt1.c0 THEN (vt0.c0 IN ()) END) ORDER BY (((rt1.c2, rt0.c2, rt1.c1)) NOT BETWEEN ((UPPER(DISTINCT rt1.c2), (rt0.c2 IN ()), rt1.c2)) AND ((NULL, TOTAL_CHANGES(), 0.818704709861421))), (('297711151')<(((((((((rt0.c2)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c1)) THEN (((rt1.c2)) NOT BETWEEN (('')) AND ((rt1.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt1.c2, rt0.c2))<>((rt0.c1, vt0.c0, 1.916007559E9))) WHEN rt1.c0 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))AND(rt0.c0)))AND(rt1.c0))) ISNULL) LEFT OUTER JOIN rt0 ON (((rt1.c0))>((((rt1.c3) NOT NULL)))) ORDER BY (((rt1.c2, rt0.c2, rt1.c1)) NOT BETWEEN ((UPPER(DISTINCT rt1.c2), (rt0.c2 IN ()), rt1.c2)) AND ((NULL, TOTAL_CHANGES(), 0.818704709861421))), (('297711151')<(((((((((rt0.c2)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))AND(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))AND(rt0.c0)))AND(rt1.c0))) ISNULL) LEFT OUTER JOIN rt0 ON (((rt1.c0))>((((rt1.c3) NOT NULL)))) WHERE (CASE WHEN ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c1)) THEN (((rt1.c2)) NOT BETWEEN (('')) AND ((rt1.c0))) WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt1.c2, rt0.c2))<>((rt0.c1, vt0.c0, 1.916007559E9))) WHEN rt1.c0 THEN (vt0.c0 IN ()) END) ORDER BY (((rt1.c2, rt0.c2, rt1.c1)) NOT BETWEEN ((UPPER(DISTINCT rt1.c2), (rt0.c2 IN ()), rt1.c2)) AND ((NULL, TOTAL_CHANGES(), 0.818704709861421))), (('297711151')<(((((((((rt0.c2)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))AND(rt0.c0)))) DESC;
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((((((rt1.c3))==((vt0.c0))))AND((~ (rt0.c1)))))OR(((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(0.8968810138778949)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c3))=((vt0.c0))))AND((~ (rt0.c1)))))OR(((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(0.8968810138778949)))OR(rt1.c2))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((((((rt1.c3))==((vt0.c0))))AND((~ (rt0.c1)))))OR(((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(0.8968810138778949)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c3))=((vt0.c0))))AND((~ (rt0.c1)))))OR(((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(0.8968810138778949)))OR(rt1.c2))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((((((rt1.c3))==((vt0.c0))))AND((~ (rt0.c1)))))OR(((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(0.8968810138778949)))OR(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c2) NOT BETWEEN (x'') AND (0.24765051570018004)) IN ())) ORDER BY ((CASE -1.9723295E7  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END)GLOB(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (x'') AND (0.24765051570018004)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((CASE -1.9723295E7  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END)GLOB(CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c2) NOT BETWEEN (x'') AND (0.24765051570018004)) IN ())) ORDER BY ((CASE -1.9723295E7  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END)GLOB(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (x'') AND (0.24765051570018004)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((CASE -1.9723295E7  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END)GLOB(CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt0.c2) NOT BETWEEN (x'') AND (0.24765051570018004)) IN ())) ORDER BY ((CASE -1.9723295E7  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c1 END)GLOB(CAST(rt0.c1 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((+ (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (x'')) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((+ (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (x'')) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((+ (x'')) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (((rt1.c1))>=((rt1.c3))) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)) WHEN (- (rt1.c1)) THEN rt1.c3 COLLATE RTRIM WHEN (rt1.c1 IN (rt1.c1)) THEN '6E' ELSE ((rt1.c1)IS(rt1.c2)) END) ORDER BY UNLIKELY(DISTINCT 'YYw࠶WcQ');
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c1))>=((rt1.c3))) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)) WHEN (- (rt1.c1)) THEN rt1.c3 COLLATE RTRIM WHEN (rt1.c1 IN (rt1.c1)) THEN '6E' ELSE ((rt1.c1)IS(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY UNLIKELY(DISTINCT 'YYw࠶WcQ'));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (((rt1.c1))>=((rt1.c3))) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)) WHEN (- (rt1.c1)) THEN rt1.c3 COLLATE RTRIM WHEN (rt1.c1 IN (rt1.c1)) THEN '6E' ELSE ((rt1.c1)IS(rt1.c2)) END) ORDER BY UNLIKELY(DISTINCT 'YYw࠶WcQ');
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c1))>=((rt1.c3))) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)) WHEN (- (rt1.c1)) THEN rt1.c3 COLLATE RTRIM WHEN (rt1.c1 IN (rt1.c1)) THEN '6E' ELSE ((rt1.c1)IS(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY UNLIKELY(DISTINCT 'YYw࠶WcQ'));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (((rt1.c1))>=((rt1.c3))) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)) WHEN (- (rt1.c1)) THEN rt1.c3 COLLATE RTRIM WHEN (rt1.c1 IN (rt1.c1)) THEN '6E' ELSE ((rt1.c1)IS(rt1.c2)) END) ORDER BY UNLIKELY(DISTINCT 'YYw࠶WcQ');
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffc88d1f80) ORDER BY (- ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, 0.9813196098006993, rt0.c2)) AND ((rt0.c0, '0', rt0.c2))))), ((rt0.c1)-('797420883')) COLLATE NOCASE DESC, x'8787'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffc88d1f80) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, 0.9813196098006993, rt0.c2)) AND ((rt0.c0, '0', rt0.c2))))), ((rt0.c1)-('797420883')) COLLATE NOCASE DESC, x'8787'  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffc88d1f80) ORDER BY (- ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, 0.9813196098006993, rt0.c2)) AND ((rt0.c0, '0', rt0.c2))))), ((rt0.c1)-('797420883')) COLLATE NOCASE DESC, x'8787'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffc88d1f80) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, 0.9813196098006993, rt0.c2)) AND ((rt0.c0, '0', rt0.c2))))), ((rt0.c1)-('797420883')) COLLATE NOCASE DESC, x'8787'  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffc88d1f80) ORDER BY (- ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, 0.9813196098006993, rt0.c2)) AND ((rt0.c0, '0', rt0.c2))))), ((rt0.c1)-('797420883')) COLLATE NOCASE DESC, x'8787'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((('|[''') BETWEEN (((rt1.c3) NOTNULL)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('|[''') BETWEEN (((rt1.c3) NOTNULL)) AND (NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((('|[''') BETWEEN (((rt1.c3) NOTNULL)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('|[''') BETWEEN (((rt1.c3) NOTNULL)) AND (NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((('|[''') BETWEEN (((rt1.c3) NOTNULL)) AND (NULL)));
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt1.c0)))OR(rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt1.c0)))OR(rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt1.c0)))OR(rt1.c3))) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN '0.7038052533743449' ELSE rt1.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt1.c2 THEN '0.7038052533743449' ELSE rt1.c0 END AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN '0.7038052533743449' ELSE rt1.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt1.c2 THEN '0.7038052533743449' ELSE rt1.c0 END AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN '0.7038052533743449' ELSE rt1.c0 END AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (SQLITE_COMPILEOPTION_USED(((rt1.c0)OR(rt0.c1)))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) BETWEEN ((('-1701012866')<(rt1.c1))) AND (rt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((rt1.c0)OR(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) BETWEEN ((('-1701012866')<(rt1.c1))) AND (rt1.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (SQLITE_COMPILEOPTION_USED(((rt1.c0)OR(rt0.c1)))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) BETWEEN ((('-1701012866')<(rt1.c1))) AND (rt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((rt1.c0)OR(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) BETWEEN ((('-1701012866')<(rt1.c1))) AND (rt1.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (SQLITE_COMPILEOPTION_USED(((rt1.c0)OR(rt0.c1)))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) BETWEEN ((('-1701012866')<(rt1.c1))) AND (rt1.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2)>=(rt1.c2)) IN ((~ (rt1.c2))))) ORDER BY '-1018980383' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)>=(rt1.c2)) IN ((~ (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY '-1018980383' ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2)>=(rt1.c2)) IN ((~ (rt1.c2))))) ORDER BY '-1018980383' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)>=(rt1.c2)) IN ((~ (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY '-1018980383' ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2)>=(rt1.c2)) IN ((~ (rt1.c2))))) ORDER BY '-1018980383' ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST((rt1.c3 IN ()) AS BLOB)) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c3 IN ()) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT * FROM rt1 WHERE (CAST((rt1.c3 IN ()) AS BLOB)) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c3 IN ()) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT * FROM rt1 WHERE (CAST((rt1.c3 IN ()) AS BLOB)) ORDER BY rt1.c1 ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT (rt1.c1 COLLATE BINARY))) ORDER BY (((rt1.c1)/(rt1.c2)) IN ((((rt1.c2)) BETWEEN ((NULL)) AND (('0*'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c1)/(rt1.c2)) IN ((((rt1.c2)) BETWEEN ((NULL)) AND (('0*'))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT (rt1.c1 COLLATE BINARY))) ORDER BY (((rt1.c1)/(rt1.c2)) IN ((((rt1.c2)) BETWEEN ((NULL)) AND (('0*'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c1)/(rt1.c2)) IN ((((rt1.c2)) BETWEEN ((NULL)) AND (('0*'))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT (rt1.c1 COLLATE BINARY))) ORDER BY (((rt1.c1)/(rt1.c2)) IN ((((rt1.c2)) BETWEEN ((NULL)) AND (('0*'))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE)) ORDER BY LENGTH((vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST, CAST((('') BETWEEN (vt0.c0) AND (x'')) AS REAL), ((((((((0.9718464684855835)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0))==((vt0.c0))))))OR((~ (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))), ((CAST(vt0.c0 AS BLOB))==(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY LENGTH((vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST, CAST((('') BETWEEN (vt0.c0) AND (x'')) AS REAL), ((((((((0.9718464684855835)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0))=((vt0.c0))))))OR((~ (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))), ((CAST(vt0.c0 AS BLOB))==(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE)) ORDER BY LENGTH((vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST, CAST((('') BETWEEN (vt0.c0) AND (x'')) AS REAL), ((((((((0.9718464684855835)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0))==((vt0.c0))))))OR((~ (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))), ((CAST(vt0.c0 AS BLOB))==(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY LENGTH((vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST, CAST((('') BETWEEN (vt0.c0) AND (x'')) AS REAL), ((((((((0.9718464684855835)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0))=((vt0.c0))))))OR((~ (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))), ((CAST(vt0.c0 AS BLOB))==(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE)) ORDER BY LENGTH((vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST, CAST((('') BETWEEN (vt0.c0) AND (x'')) AS REAL), ((((((((0.9718464684855835)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0))==((vt0.c0))))))OR((~ (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))), ((CAST(vt0.c0 AS BLOB))==(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((- (rt1.c2)))==(x''))) ORDER BY LIKELY(DISTINCT ((rt1.c3) NOTNULL)), ((((((((((((rt1.c1)AND(0.6899421630892298)))OR(rt0.c1)))OR(CASE 1019735650  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 END)))AND(CAST(rt0.c2 AS REAL))))AND(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))==(x''))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LIKELY(DISTINCT ((rt1.c3) NOTNULL)), ((((((((((((rt1.c1)AND(0.6899421630892298)))OR(rt0.c1)))OR(CASE 1019735650  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 END)))AND(CAST(rt0.c2 AS REAL))))AND(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((- (rt1.c2)))==(x''))) ORDER BY LIKELY(DISTINCT ((rt1.c3) NOTNULL)), ((((((((((((rt1.c1)AND(0.6899421630892298)))OR(rt0.c1)))OR(CASE 1019735650  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 END)))AND(CAST(rt0.c2 AS REAL))))AND(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))==(x''))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LIKELY(DISTINCT ((rt1.c3) NOTNULL)), ((((((((((((rt1.c1)AND(0.6899421630892298)))OR(rt0.c1)))OR(CASE 1019735650  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 END)))AND(CAST(rt0.c2 AS REAL))))AND(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((- (rt1.c2)))==(x''))) ORDER BY LIKELY(DISTINCT ((rt1.c3) NOTNULL)), ((((((((((((rt1.c1)AND(0.6899421630892298)))OR(rt0.c1)))OR(CASE 1019735650  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 END)))AND(CAST(rt0.c2 AS REAL))))AND(CAST(rt0.c1 AS INTEGER)));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((rt0.c2))!=((rt1.c1)))) IS TRUE)) ORDER BY ((rt0.c0 IN (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS LAST, json_type((((rt1.c0))<=((rt0.c2)))) DESC  NULLS LAST, ((((rt0.c0)AND(rt1.c1))) BETWEEN (((rt0.c0) NOTNULL)) AND ((~ (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))!=((rt1.c1)))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((rt0.c0 IN (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS LAST, json_type((((rt1.c0))<=((rt0.c2)))) DESC  NULLS LAST, ((((rt0.c0)AND(rt1.c1))) BETWEEN (((rt0.c0) NOTNULL)) AND ((~ (rt1.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((rt0.c2))!=((rt1.c1)))) IS TRUE)) ORDER BY ((rt0.c0 IN (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS LAST, json_type((((rt1.c0))<=((rt0.c2)))) DESC  NULLS LAST, ((((rt0.c0)AND(rt1.c1))) BETWEEN (((rt0.c0) NOTNULL)) AND ((~ (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))!=((rt1.c1)))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((rt0.c0 IN (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS LAST, json_type((((rt1.c0))<=((rt0.c2)))) DESC  NULLS LAST, ((((rt0.c0)AND(rt1.c1))) BETWEEN (((rt0.c0) NOTNULL)) AND ((~ (rt1.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((rt0.c2))!=((rt1.c1)))) IS TRUE)) ORDER BY ((rt0.c0 IN (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS LAST, json_type((((rt1.c0))<=((rt0.c2)))) DESC  NULLS LAST, ((((rt0.c0)AND(rt1.c1))) BETWEEN (((rt0.c0) NOTNULL)) AND ((~ (rt1.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (SQLITE_VERSION());
SELECT * FROM vt0, rt1 WHERE ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE '-785579583'  WHEN (((rt1.c0))<((rt1.c1))) THEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE '-785579583'  WHEN (((rt1.c0))<((rt1.c1))) THEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE '-785579583'  WHEN (((rt1.c0))<((rt1.c1))) THEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE '-785579583'  WHEN (((rt1.c0))<((rt1.c1))) THEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE '-785579583'  WHEN (((rt1.c0))<((rt1.c1))) THEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((('-2103280481')AND(vt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2103280481')AND(vt0.c0)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((('-2103280481')AND(vt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2103280481')AND(vt0.c0)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((('-2103280481')AND(vt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END AS BLOB) ASC  NULLS LAST;
SELECT * FROM vt0, rt1, rt0 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)) IN ())) ORDER BY ((CAST(rt1.c3 AS REAL)) NOTNULL) ASC, (((((rt0.c1)AND(rt0.c2)))AND(x'')) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((CAST(rt1.c3 AS REAL)) NOTNULL) ASC, (((((rt0.c1)AND(rt0.c2)))AND(x'')) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)) IN ())) ORDER BY ((CAST(rt1.c3 AS REAL)) NOTNULL) ASC, (((((rt0.c1)AND(rt0.c2)))AND(x'')) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((CAST(rt1.c3 AS REAL)) NOTNULL) ASC, (((((rt0.c1)AND(rt0.c2)))AND(x'')) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c0)) IN ())) ORDER BY ((CAST(rt1.c3 AS REAL)) NOTNULL) ASC, (((((rt0.c1)AND(rt0.c2)))AND(x'')) IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)GLOB((((rt0.c1))<((vt0.c0)))))) ORDER BY ((((rt0.c1 COLLATE RTRIM)AND(NULL)))OR(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((((rt0.c1))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1 COLLATE RTRIM)AND(NULL)))OR(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)GLOB((((rt0.c1))<((vt0.c0)))))) ORDER BY ((((rt0.c1 COLLATE RTRIM)AND(NULL)))OR(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((((rt0.c1))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1 COLLATE RTRIM)AND(NULL)))OR(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)GLOB((((rt0.c1))<((vt0.c0)))))) ORDER BY ((((rt0.c1 COLLATE RTRIM)AND(NULL)))OR(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)) ORDER BY (x'531d' IN (((vt0.c0)>(x'7f94')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT NULL))) ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (x'531d' IN (((vt0.c0)>(x'7f94')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT NULL))) ASC, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)) ORDER BY (x'531d' IN (((vt0.c0)>(x'7f94')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT NULL))) ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (x'531d' IN (((vt0.c0)>(x'7f94')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT NULL))) ASC, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)) ORDER BY (x'531d' IN (((vt0.c0)>(x'7f94')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT NULL))) ASC, vt0.c0 DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((('')OR(rt1.c2)))<=(((rt0.c2)GLOB(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((('')OR(rt1.c2)))<=(((rt0.c2)GLOB(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((('')OR(rt1.c2)))<=(((rt0.c2)GLOB(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((('')OR(rt1.c2)))<=(((rt0.c2)GLOB(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((('')OR(rt1.c2)))<=(((rt0.c2)GLOB(rt1.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0))<((rt0.c0))) ELSE CASE -6.82237366E8  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0))<((rt0.c0))) ELSE CASE -6.82237366E8  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0))<((rt0.c0))) ELSE CASE -6.82237366E8  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0))<((rt0.c0))) ELSE CASE -6.82237366E8  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0))<((rt0.c0))) ELSE CASE -6.82237366E8  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END END);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt1.c3, rt0.c2))) COLLATE BINARY) ORDER BY ((((rt1.c2)+(rt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt1.c3, rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2)+(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt1.c3, rt0.c2))) COLLATE BINARY) ORDER BY ((((rt1.c2)+(rt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt1.c3, rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2)+(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt1.c3, rt0.c2))) COLLATE BINARY) ORDER BY ((((rt1.c2)+(rt0.c0))) IS FALSE);
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c1) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c1) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c1) IS TRUE) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND((((vt0.c0))>=((vt0.c0))))))OR((('0.21217448403405403') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(DISTINCT vt0.c0) DESC, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER)  NULLS FIRST, (((('OX') IS FALSE))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND((((vt0.c0))>=((vt0.c0))))))OR((('0.21217448403405403') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT vt0.c0) DESC, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER)  NULLS FIRST, (((('OX') IS FALSE))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND((((vt0.c0))>=((vt0.c0))))))OR((('0.21217448403405403') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(DISTINCT vt0.c0) DESC, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER)  NULLS FIRST, (((('OX') IS FALSE))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND((((vt0.c0))>=((vt0.c0))))))OR((('0.21217448403405403') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT vt0.c0) DESC, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER)  NULLS FIRST, (((('OX') IS FALSE))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND((((vt0.c0))>=((vt0.c0))))))OR((('0.21217448403405403') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(DISTINCT vt0.c0) DESC, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER)  NULLS FIRST, (((('OX') IS FALSE))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c3) ORDER BY (- (((vt0.c0)GLOB(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (- (((vt0.c0)GLOB(rt1.c0)))) ASC);
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c3) ORDER BY (- (((vt0.c0)GLOB(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (- (((vt0.c0)GLOB(rt1.c0)))) ASC);
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c3) ORDER BY (- (((vt0.c0)GLOB(rt1.c0)))) ASC;
SELECT ALL * FROM rt1 WHERE ((((0.4166023162780855, rt1.c1, rt1.c3)) BETWEEN (((+ (rt1.c3)), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c3 COLLATE NOCASE)) AND ((rt1.c0, CASE rt1.c1  WHEN NULL THEN rt1.c1 END, (~ (rt1.c3)))))) ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))) DESC  NULLS FIRST, CASE ((rt1.c1) IS TRUE)  WHEN (rt1.c2 IN ()) THEN ((rt1.c1) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.4166023162780855, rt1.c1, rt1.c3)) BETWEEN (((+ (rt1.c3)), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c3 COLLATE NOCASE)) AND ((rt1.c0, CASE rt1.c1  WHEN NULL THEN rt1.c1 END, (~ (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))) DESC  NULLS FIRST, CASE ((rt1.c1) IS TRUE)  WHEN (rt1.c2 IN ()) THEN ((rt1.c1) NOT NULL) END ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((0.4166023162780855, rt1.c1, rt1.c3)) BETWEEN (((+ (rt1.c3)), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c3 COLLATE NOCASE)) AND ((rt1.c0, CASE rt1.c1  WHEN NULL THEN rt1.c1 END, (~ (rt1.c3)))))) ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))) DESC  NULLS FIRST, CASE ((rt1.c1) IS TRUE)  WHEN (rt1.c2 IN ()) THEN ((rt1.c1) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.4166023162780855, rt1.c1, rt1.c3)) BETWEEN (((+ (rt1.c3)), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c3 COLLATE NOCASE)) AND ((rt1.c0, CASE rt1.c1  WHEN NULL THEN rt1.c1 END, (~ (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))) DESC  NULLS FIRST, CASE ((rt1.c1) IS TRUE)  WHEN (rt1.c2 IN ()) THEN ((rt1.c1) NOT NULL) END ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((0.4166023162780855, rt1.c1, rt1.c3)) BETWEEN (((+ (rt1.c3)), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c3 COLLATE NOCASE)) AND ((rt1.c0, CASE rt1.c1  WHEN NULL THEN rt1.c1 END, (~ (rt1.c3)))))) ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))) DESC  NULLS FIRST, CASE ((rt1.c1) IS TRUE)  WHEN (rt1.c2 IN ()) THEN ((rt1.c1) NOT NULL) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON CASE ((vt0.c0)IS NOT(rt0.c1))  WHEN (rt0.c1 IN ()) THEN (((((((('-376036330')AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) ELSE LIKELY(DISTINCT rt0.c1) END WHERE (0.818704709861421) ORDER BY NULLIF(CASE WHEN 'aZꩾ8^MZ0U' THEN rt0.c1 ELSE vt0.c0 END, (rt0.c1 IN (rt0.c0, rt0.c1))) ASC, ((rt0.c2) ISNULL);
SELECT SUM(count) FROM (SELECT ((0.818704709861421) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE ((vt0.c0)IS NOT(rt0.c1))  WHEN (rt0.c1 IN ()) THEN (((((((('-376036330')AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) ELSE LIKELY(DISTINCT rt0.c1) END ORDER BY NULLIF(CASE WHEN 'aZꩾ8^MZ0U' THEN rt0.c1 ELSE vt0.c0 END, (rt0.c1 IN (rt0.c0, rt0.c1))) ASC, ((rt0.c2) ISNULL));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON CASE ((vt0.c0)IS NOT(rt0.c1))  WHEN (rt0.c1 IN ()) THEN (((((((('-376036330')AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) ELSE LIKELY(DISTINCT rt0.c1) END WHERE (0.818704709861421) ORDER BY NULLIF(CASE WHEN 'aZꩾ8^MZ0U' THEN rt0.c1 ELSE vt0.c0 END, (rt0.c1 IN (rt0.c0, rt0.c1))) ASC, ((rt0.c2) ISNULL);
SELECT SUM(count) FROM (SELECT ((0.818704709861421) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE ((vt0.c0)IS NOT(rt0.c1))  WHEN (rt0.c1 IN ()) THEN (((((((('-376036330')AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) ELSE LIKELY(DISTINCT rt0.c1) END ORDER BY NULLIF(CASE WHEN 'aZꩾ8^MZ0U' THEN rt0.c1 ELSE vt0.c0 END, (rt0.c1 IN (rt0.c0, rt0.c1))) ASC, ((rt0.c2) ISNULL));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON CASE ((vt0.c0)IS NOT(rt0.c1))  WHEN (rt0.c1 IN ()) THEN (((((((('-376036330')AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) ELSE LIKELY(DISTINCT rt0.c1) END WHERE (0.818704709861421) ORDER BY NULLIF(CASE WHEN 'aZꩾ8^MZ0U' THEN rt0.c1 ELSE vt0.c0 END, (rt0.c1 IN (rt0.c0, rt0.c1))) ASC, ((rt0.c2) ISNULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(x'e5cf', ((((0.3098347499492592)AND(0.45907979475865535)))OR(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))AND(0X2d49f401)), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c1)||(rt0.c0)) ELSE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) END DESC, LOWER(((rt0.c1) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(x'e5cf', ((((0.3098347499492592)AND(0.45907979475865535)))OR(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))AND(0X2d49f401)), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c1)||(rt0.c0)) ELSE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) END DESC, LOWER(((rt0.c1) IS TRUE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(x'e5cf', ((((0.3098347499492592)AND(0.45907979475865535)))OR(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))AND(0X2d49f401)), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c1)||(rt0.c0)) ELSE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) END DESC, LOWER(((rt0.c1) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(x'e5cf', ((((0.3098347499492592)AND(0.45907979475865535)))OR(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))AND(0X2d49f401)), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c1)||(rt0.c0)) ELSE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) END DESC, LOWER(((rt0.c1) IS TRUE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(x'e5cf', ((((0.3098347499492592)AND(0.45907979475865535)))OR(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))AND(0X2d49f401)), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c1)||(rt0.c0)) ELSE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) END DESC, LOWER(((rt0.c1) IS TRUE))  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt1 ON ((8.06425906E8) NOT BETWEEN (((rt1.c3)GLOB(rt1.c1))) AND (((rt1.c3)<=(rt1.c0)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((8.06425906E8) NOT BETWEEN (((rt1.c3)GLOB(rt1.c1))) AND (((rt1.c3)<=(rt1.c0)))));
SELECT * FROM vt0 INNER JOIN rt1 ON ((8.06425906E8) NOT BETWEEN (((rt1.c3)GLOB(rt1.c1))) AND (((rt1.c3)<=(rt1.c0)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((8.06425906E8) NOT BETWEEN (((rt1.c3)GLOB(rt1.c1))) AND (((rt1.c3)<=(rt1.c0)))));
SELECT * FROM vt0 INNER JOIN rt1 ON ((8.06425906E8) NOT BETWEEN (((rt1.c3)GLOB(rt1.c1))) AND (((rt1.c3)<=(rt1.c0)))) WHERE (x'');
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)OR((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)OR((- (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)OR((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)OR((- (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)OR((- (rt1.c1)))));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (1841793514);
SELECT SUM(count) FROM (SELECT ALL ((1841793514) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (1841793514);
SELECT SUM(count) FROM (SELECT ALL ((1841793514) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (1841793514);
SELECT * FROM rt1, vt0 WHERE (CAST((((((((((((('505681015')AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((((((((((('505681015')AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST((((((((((((('505681015')AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((((((((((('505681015')AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST((((((((((((('505681015')AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC));
SELECT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((x'')==(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((x'')==(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((x'')==(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((x'')==(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((x'')==(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 END)));
SELECT * FROM rt0, vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (rt1.c3);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((ABS(rt1.c3))>=(rt1.c2))) ORDER BY rt1.c1  NULLS FIRST, UNLIKELY(((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c3))>=(rt1.c2))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY rt1.c1  NULLS FIRST, UNLIKELY(((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((ABS(rt1.c3))>=(rt1.c2))) ORDER BY rt1.c1  NULLS FIRST, UNLIKELY(((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c3))>=(rt1.c2))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY rt1.c1  NULLS FIRST, UNLIKELY(((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((ABS(rt1.c3))>=(rt1.c2))) ORDER BY rt1.c1  NULLS FIRST, UNLIKELY(((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))LIKE(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt1.c1 AS REAL))GLOB(((rt1.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))LIKE(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt1.c1 AS REAL))GLOB(((rt1.c2) NOTNULL))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))LIKE(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt1.c1 AS REAL))GLOB(((rt1.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))LIKE(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt1.c1 AS REAL))GLOB(((rt1.c2) NOTNULL))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))LIKE(x'' COLLATE BINARY)) ASC  NULLS LAST, ((CAST(rt1.c1 AS REAL))GLOB(((rt1.c2) NOTNULL))) DESC;
SELECT * FROM rt0, rt1 WHERE ((CAST(rt1.c3 AS NUMERIC) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c0 END))) ORDER BY ((x'' COLLATE BINARY) NOT BETWEEN ((~ (rt0.c0))) AND ((NOT (rt1.c1)))), CASE 'bqG <QOTb'  WHEN json_insert(rt1.c2, rt0.c2, rt1.c0) THEN '*''|Q	]*#' END  NULLS LAST, ((rt1.c0 IN (rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c3 AS NUMERIC) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'' COLLATE BINARY) NOT BETWEEN ((~ (rt0.c0))) AND ((NOT (rt1.c1)))), CASE 'bqG <QOTb'  WHEN json_insert(rt1.c2, rt0.c2, rt1.c0) THEN '*''|Q	]*#' END  NULLS LAST, ((rt1.c0 IN (rt0.c2)) IN ())  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((CAST(rt1.c3 AS NUMERIC) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c0 END))) ORDER BY ((x'' COLLATE BINARY) NOT BETWEEN ((~ (rt0.c0))) AND ((NOT (rt1.c1)))), CASE 'bqG <QOTb'  WHEN json_insert(rt1.c2, rt0.c2, rt1.c0) THEN '*''|Q	]*#' END  NULLS LAST, ((rt1.c0 IN (rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c3 AS NUMERIC) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'' COLLATE BINARY) NOT BETWEEN ((~ (rt0.c0))) AND ((NOT (rt1.c1)))), CASE 'bqG <QOTb'  WHEN json_insert(rt1.c2, rt0.c2, rt1.c0) THEN '*''|Q	]*#' END  NULLS LAST, ((rt1.c0 IN (rt0.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON load_extension(((rt0.c0) ISNULL)) WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (x'd1cc9760') AND (rt0.c0)) WHEN ((rt0.c2)>(0.3441828132448924)) THEN (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, vt0.c0))) WHEN (rt0.c0 IN (rt0.c1)) THEN LOWER(rt0.c2) WHEN '1H>y]a' THEN ((vt0.c0) IS TRUE) ELSE ((rt0.c2)>>(rt0.c0)) END) ORDER BY (((~ (rt0.c1))) BETWEEN ('297711151') AND (((vt0.c0)==('1160668133')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (x'd1cc9760') AND (rt0.c0)) WHEN ((rt0.c2)>(0.3441828132448924)) THEN (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, vt0.c0))) WHEN (rt0.c0 IN (rt0.c1)) THEN LOWER(rt0.c2) WHEN '1H>y]a' THEN ((vt0.c0) IS TRUE) ELSE ((rt0.c2)>>(rt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON load_extension(((rt0.c0) ISNULL)) ORDER BY (((~ (rt0.c1))) BETWEEN ('297711151') AND (((vt0.c0)==('1160668133')))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON load_extension(((rt0.c0) ISNULL)) WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (x'd1cc9760') AND (rt0.c0)) WHEN ((rt0.c2)>(0.3441828132448924)) THEN (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, vt0.c0))) WHEN (rt0.c0 IN (rt0.c1)) THEN LOWER(rt0.c2) WHEN '1H>y]a' THEN ((vt0.c0) IS TRUE) ELSE ((rt0.c2)>>(rt0.c0)) END) ORDER BY (((~ (rt0.c1))) BETWEEN ('297711151') AND (((vt0.c0)==('1160668133')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (x'd1cc9760') AND (rt0.c0)) WHEN ((rt0.c2)>(0.3441828132448924)) THEN (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, vt0.c0))) WHEN (rt0.c0 IN (rt0.c1)) THEN LOWER(rt0.c2) WHEN '1H>y]a' THEN ((vt0.c0) IS TRUE) ELSE ((rt0.c2)>>(rt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON load_extension(((rt0.c0) ISNULL)) ORDER BY (((~ (rt0.c1))) BETWEEN ('297711151') AND (((vt0.c0)==('1160668133')))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))=(((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))=(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))=(((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))=(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))=(((rt1.c3) IS TRUE))));
SELECT ALL * FROM rt1 WHERE (SQLITE_COMPILEOPTION_GET(((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY x'');
SELECT ALL * FROM rt1 WHERE (SQLITE_COMPILEOPTION_GET(((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY x'');
SELECT ALL * FROM rt1 WHERE (SQLITE_COMPILEOPTION_GET(((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)))) ORDER BY x'';
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((vt0.c0) NOT NULL))||(((rt0.c0)AND(rt0.c1))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2))) ISNULL), ((((rt1.c3)<(rt1.c2))) NOTNULL) DESC  NULLS FIRST, TYPEOF(0.8135943326236607 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))||(((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2))) ISNULL), ((((rt1.c3)<(rt1.c2))) NOTNULL) DESC  NULLS FIRST, TYPEOF(0.8135943326236607 COLLATE NOCASE) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((vt0.c0) NOT NULL))||(((rt0.c0)AND(rt0.c1))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2))) ISNULL), ((((rt1.c3)<(rt1.c2))) NOTNULL) DESC  NULLS FIRST, TYPEOF(0.8135943326236607 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))||(((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2))) ISNULL), ((((rt1.c3)<(rt1.c2))) NOTNULL) DESC  NULLS FIRST, TYPEOF(0.8135943326236607 COLLATE NOCASE) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((vt0.c0) NOT NULL))||(((rt0.c0)AND(rt0.c1))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2))) ISNULL), ((((rt1.c3)<(rt1.c2))) NOTNULL) DESC  NULLS FIRST, TYPEOF(0.8135943326236607 COLLATE NOCASE) ASC;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c0)))AND(rt0.c0)))AND(0X1e440c8f)))OR('G녜m}c')))AND(rt0.c0)) THEN (((rt1.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((0.9314890530522114, '2050685390', rt0.c0))) ELSE rt0.c2 COLLATE RTRIM END WHERE (CAST(TRIM(vt0.c0) AS INTEGER)) ORDER BY ((GLOB(rt1.c3, rt1.c1)) NOT BETWEEN (CAST(0.9214779252439885 AS REAL)) AND ((+ (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c0)))AND(rt0.c0)))AND(0X1e440c8f)))OR('G녜m}c')))AND(rt0.c0)) THEN (((rt1.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((0.9314890530522114, '2050685390', rt0.c0))) ELSE rt0.c2 COLLATE RTRIM END ORDER BY ((GLOB(rt1.c3, rt1.c1)) NOT BETWEEN (CAST(0.9214779252439885 AS REAL)) AND ((+ (NULL)))) DESC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c0)))AND(rt0.c0)))AND(0X1e440c8f)))OR('G녜m}c')))AND(rt0.c0)) THEN (((rt1.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((0.9314890530522114, '2050685390', rt0.c0))) ELSE rt0.c2 COLLATE RTRIM END WHERE (CAST(TRIM(vt0.c0) AS INTEGER)) ORDER BY ((GLOB(rt1.c3, rt1.c1)) NOT BETWEEN (CAST(0.9214779252439885 AS REAL)) AND ((+ (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c0)))AND(rt0.c0)))AND(0X1e440c8f)))OR('G녜m}c')))AND(rt0.c0)) THEN (((rt1.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((0.9314890530522114, '2050685390', rt0.c0))) ELSE rt0.c2 COLLATE RTRIM END ORDER BY ((GLOB(rt1.c3, rt1.c1)) NOT BETWEEN (CAST(0.9214779252439885 AS REAL)) AND ((+ (NULL)))) DESC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c0)))AND(rt0.c0)))AND(0X1e440c8f)))OR('G녜m}c')))AND(rt0.c0)) THEN (((rt1.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((0.9314890530522114, '2050685390', rt0.c0))) ELSE rt0.c2 COLLATE RTRIM END WHERE (CAST(TRIM(vt0.c0) AS INTEGER)) ORDER BY ((GLOB(rt1.c3, rt1.c1)) NOT BETWEEN (CAST(0.9214779252439885 AS REAL)) AND ((+ (NULL)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CAST(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC, ('6X' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY CAST(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC, ('6X' IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CAST(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC, ('6X' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY CAST(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC, ('6X' IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CAST(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC, ('6X' IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 NOT INDEXED WHERE ((NOT ((((1.160668133E9))<=((rt0.c1)))))) ORDER BY (((rt0.c0)LIKE(rt1.c0)) IN ()) ASC, ((((CAST(rt0.c2 AS BLOB))OR(((((rt1.c0)AND(rt0.c2)))OR(rt1.c1)))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((1.160668133E9))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((rt0.c0)LIKE(rt1.c0)) IN ()) ASC, ((((CAST(rt0.c2 AS BLOB))OR(((((rt1.c0)AND(rt0.c2)))OR(rt1.c1)))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 NOT INDEXED WHERE ((NOT ((((1.160668133E9))<=((rt0.c1)))))) ORDER BY (((rt0.c0)LIKE(rt1.c0)) IN ()) ASC, ((((CAST(rt0.c2 AS BLOB))OR(((((rt1.c0)AND(rt0.c2)))OR(rt1.c1)))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((1.160668133E9))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((rt0.c0)LIKE(rt1.c0)) IN ()) ASC, ((((CAST(rt0.c2 AS BLOB))OR(((((rt1.c0)AND(rt0.c2)))OR(rt1.c1)))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 NOT INDEXED WHERE ((NOT ((((1.160668133E9))<=((rt0.c1)))))) ORDER BY (((rt0.c0)LIKE(rt1.c0)) IN ()) ASC, ((((CAST(rt0.c2 AS BLOB))OR(((((rt1.c0)AND(rt0.c2)))OR(rt1.c1)))))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (TOTAL_CHANGES()) ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (TOTAL_CHANGES()) ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (TOTAL_CHANGES()) ORDER BY ((rt1.c2) IS FALSE) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (NULL) AND (((rt1.c3)-(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL)) NOT BETWEEN (NULL) AND (((rt1.c3)-(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (NULL) AND (((rt1.c3)-(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL)) NOT BETWEEN (NULL) AND (((rt1.c3)-(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (NULL) AND (((rt1.c3)-(rt1.c1)))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (((+ (rt1.c0)))GLOB((- (vt0.c0)))) WHERE ((- (ABS(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (ABS(DISTINCT rt1.c1)))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON (((+ (rt1.c0)))GLOB((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (((+ (rt1.c0)))GLOB((- (vt0.c0)))) WHERE ((- (ABS(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (ABS(DISTINCT rt1.c1)))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON (((+ (rt1.c0)))GLOB((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (((+ (rt1.c0)))GLOB((- (vt0.c0)))) WHERE ((- (ABS(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((rt0.c0, rt1.c2, rt0.c0))<=((rt1.c1, rt0.c2, rt1.c3))))+(CASE WHEN vt0.c0 THEN rt1.c1 END))) ORDER BY (((+ (rt1.c2)))OR(rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt1.c2, rt0.c0))<=((rt1.c1, rt0.c2, rt1.c3))))+(CASE WHEN vt0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((+ (rt1.c2)))OR(rt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((rt0.c0, rt1.c2, rt0.c0))<=((rt1.c1, rt0.c2, rt1.c3))))+(CASE WHEN vt0.c0 THEN rt1.c1 END))) ORDER BY (((+ (rt1.c2)))OR(rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt1.c2, rt0.c0))<=((rt1.c1, rt0.c2, rt1.c3))))+(CASE WHEN vt0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((+ (rt1.c2)))OR(rt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((rt0.c0, rt1.c2, rt0.c0))<=((rt1.c1, rt0.c2, rt1.c3))))+(CASE WHEN vt0.c0 THEN rt1.c1 END))) ORDER BY (((+ (rt1.c2)))OR(rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED, vt0, rt1 WHERE (((NULL)<=(((rt1.c2)IS(rt0.c1))))) ORDER BY '-d00C' DESC, rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<=(((rt1.c2)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY '-d00C' DESC, rt1.c0  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, rt1 WHERE (((NULL)<=(((rt1.c2)IS(rt0.c1))))) ORDER BY '-d00C' DESC, rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<=(((rt1.c2)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY '-d00C' DESC, rt1.c0  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, rt1 WHERE (((NULL)<=(((rt1.c2)IS(rt0.c1))))) ORDER BY '-d00C' DESC, rt1.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) NOTNULL))OR(vt0.c0)))AND('-1672852824')))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)%(vt0.c0)))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0) NOTNULL))OR(vt0.c0)))AND('-1672852824')))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)%(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) NOTNULL))OR(vt0.c0)))AND('-1672852824')))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)%(vt0.c0)))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0) NOTNULL))OR(vt0.c0)))AND('-1672852824')))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)%(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) NOTNULL))OR(vt0.c0)))AND('-1672852824')))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)%(vt0.c0)))))OR(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.7671125252994898) ORDER BY (((rt0.c2, ((rt0.c0)IS NOT(rt0.c0)), CAST(rt0.c0 AS INTEGER)))>((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c1)||(rt0.c1)), rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7671125252994898) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2, ((rt0.c0)IS NOT(rt0.c0)), CAST(rt0.c0 AS INTEGER)))>((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c1)||(rt0.c1)), rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.7671125252994898) ORDER BY (((rt0.c2, ((rt0.c0)IS NOT(rt0.c0)), CAST(rt0.c0 AS INTEGER)))>((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c1)||(rt0.c1)), rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7671125252994898) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2, ((rt0.c0)IS NOT(rt0.c0)), CAST(rt0.c0 AS INTEGER)))>((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c1)||(rt0.c1)), rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.7671125252994898) ORDER BY (((rt0.c2, ((rt0.c0)IS NOT(rt0.c0)), CAST(rt0.c0 AS INTEGER)))>((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c1)||(rt0.c1)), rt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((((((((~ (rt1.c1)))AND((rt1.c3 IN (rt0.c2)))))AND((rt1.c1 IN ()))))AND((((rt0.c0, rt0.c1, rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0, rt0.c1, rt1.c0)) AND ((rt0.c2, -1667828418, rt0.c0, rt1.c1, rt1.c3))))))OR(((rt1.c2)>=(rt1.c3)))) WHERE (CASE WHEN 0.15583102507893465 THEN TYPEOF(DISTINCT rt0.c2) ELSE rt1.c1 COLLATE RTRIM END) ORDER BY (('-1579367558')/(rt1.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.15583102507893465 THEN TYPEOF(DISTINCT rt0.c2) ELSE rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((((((((~ (rt1.c1)))AND((rt1.c3 IN (rt0.c2)))))AND((rt1.c1 IN ()))))AND((((rt0.c0, rt0.c1, rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0, rt0.c1, rt1.c0)) AND ((rt0.c2, -1667828418, rt0.c0, rt1.c1, rt1.c3))))))OR(((rt1.c2)>=(rt1.c3)))) ORDER BY (('-1579367558')/(rt1.c2)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((((((((~ (rt1.c1)))AND((rt1.c3 IN (rt0.c2)))))AND((rt1.c1 IN ()))))AND((((rt0.c0, rt0.c1, rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0, rt0.c1, rt1.c0)) AND ((rt0.c2, -1667828418, rt0.c0, rt1.c1, rt1.c3))))))OR(((rt1.c2)>=(rt1.c3)))) WHERE (CASE WHEN 0.15583102507893465 THEN TYPEOF(DISTINCT rt0.c2) ELSE rt1.c1 COLLATE RTRIM END) ORDER BY (('-1579367558')/(rt1.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.15583102507893465 THEN TYPEOF(DISTINCT rt0.c2) ELSE rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((((((((~ (rt1.c1)))AND((rt1.c3 IN (rt0.c2)))))AND((rt1.c1 IN ()))))AND((((rt0.c0, rt0.c1, rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0, rt0.c1, rt1.c0)) AND ((rt0.c2, -1667828418, rt0.c0, rt1.c1, rt1.c3))))))OR(((rt1.c2)>=(rt1.c3)))) ORDER BY (('-1579367558')/(rt1.c2)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((((((((~ (rt1.c1)))AND((rt1.c3 IN (rt0.c2)))))AND((rt1.c1 IN ()))))AND((((rt0.c0, rt0.c1, rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0, rt0.c1, rt1.c0)) AND ((rt0.c2, -1667828418, rt0.c0, rt1.c1, rt1.c3))))))OR(((rt1.c2)>=(rt1.c3)))) WHERE (CASE WHEN 0.15583102507893465 THEN TYPEOF(DISTINCT rt0.c2) ELSE rt1.c1 COLLATE RTRIM END) ORDER BY (('-1579367558')/(rt1.c2)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))>((rt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON ((x'' COLLATE BINARY)OR(0.298231511487968)) WHERE (((rt1.c1) BETWEEN (rt0.c1) AND ('KQ')) COLLATE RTRIM) ORDER BY ((((((((TYPEOF(rt1.c2))OR((((rt0.c2))<>((rt0.c2))))))OR('')))AND(CAST(rt1.c1 AS NUMERIC))))AND(CAST(rt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) BETWEEN (rt0.c1) AND ('KQ')) COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))>((rt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON ((x'' COLLATE BINARY)OR(0.298231511487968)) ORDER BY ((((((((TYPEOF(rt1.c2))OR((((rt0.c2))<>((rt0.c2))))))OR('')))AND(CAST(rt1.c1 AS NUMERIC))))AND(CAST(rt1.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))>((rt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON ((x'' COLLATE BINARY)OR(0.298231511487968)) WHERE (((rt1.c1) BETWEEN (rt0.c1) AND ('KQ')) COLLATE RTRIM) ORDER BY ((((((((TYPEOF(rt1.c2))OR((((rt0.c2))<>((rt0.c2))))))OR('')))AND(CAST(rt1.c1 AS NUMERIC))))AND(CAST(rt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) BETWEEN (rt0.c1) AND ('KQ')) COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))>((rt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON ((x'' COLLATE BINARY)OR(0.298231511487968)) ORDER BY ((((((((TYPEOF(rt1.c2))OR((((rt0.c2))<>((rt0.c2))))))OR('')))AND(CAST(rt1.c1 AS NUMERIC))))AND(CAST(rt1.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))>((rt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON ((x'' COLLATE BINARY)OR(0.298231511487968)) WHERE (((rt1.c1) BETWEEN (rt0.c1) AND ('KQ')) COLLATE RTRIM) ORDER BY ((((((((TYPEOF(rt1.c2))OR((((rt0.c2))<>((rt0.c2))))))OR('')))AND(CAST(rt1.c1 AS NUMERIC))))AND(CAST(rt1.c0 AS BLOB))) DESC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c2) ISNULL) AS TEXT)) ORDER BY rt1.c3, ((0.5952477894911584)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c3, ((0.5952477894911584)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c2) ISNULL) AS TEXT)) ORDER BY rt1.c3, ((0.5952477894911584)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c3, ((0.5952477894911584)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c2) ISNULL) AS TEXT)) ORDER BY rt1.c3, ((0.5952477894911584)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((x'') NOT BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((x'') NOT BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((x'') NOT BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.24033168899136348 IN ())))<((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0.24033168899136348 IN ())))<((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.24033168899136348 IN ())))<((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0.24033168899136348 IN ())))<((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.24033168899136348 IN ())))<((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt1.c1))) IS TRUE));
SELECT ALL * FROM rt0, vt0 CROSS JOIN rt1 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (((rt0.c2)/(vt0.c0))) AND (((rt1.c3) NOT BETWEEN (NULL) AND (vt0.c0)))) WHERE (LTRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, (- (rt1.c1)))) ORDER BY CASE WHEN rt0.c1 THEN CASE x''  WHEN rt0.c1 THEN vt0.c0 END END  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, (- (rt1.c1)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN rt1 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (((rt0.c2)/(vt0.c0))) AND (((rt1.c3) NOT BETWEEN (NULL) AND (vt0.c0)))) ORDER BY CASE WHEN rt0.c1 THEN CASE x''  WHEN rt0.c1 THEN vt0.c0 END END  NULLS LAST, rt1.c1);
SELECT ALL * FROM rt0, vt0 CROSS JOIN rt1 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (((rt0.c2)/(vt0.c0))) AND (((rt1.c3) NOT BETWEEN (NULL) AND (vt0.c0)))) WHERE (LTRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, (- (rt1.c1)))) ORDER BY CASE WHEN rt0.c1 THEN CASE x''  WHEN rt0.c1 THEN vt0.c0 END END  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, (- (rt1.c1)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN rt1 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (((rt0.c2)/(vt0.c0))) AND (((rt1.c3) NOT BETWEEN (NULL) AND (vt0.c0)))) ORDER BY CASE WHEN rt0.c1 THEN CASE x''  WHEN rt0.c1 THEN vt0.c0 END END  NULLS LAST, rt1.c1);
SELECT ALL * FROM rt0, vt0 CROSS JOIN rt1 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (((rt0.c2)/(vt0.c0))) AND (((rt1.c3) NOT BETWEEN (NULL) AND (vt0.c0)))) WHERE (LTRIM(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, (- (rt1.c1)))) ORDER BY CASE WHEN rt0.c1 THEN CASE x''  WHEN rt0.c1 THEN vt0.c0 END END  NULLS LAST, rt1.c1;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c2)GLOB(rt0.c2))))) ORDER BY (- (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c2)GLOB(rt0.c2))))) ORDER BY (- (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c2)GLOB(rt0.c2))))) ORDER BY (- (CAST(vt0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((((NULL)OR(CASE WHEN rt1.c2 THEN rt0.c1 END)))OR((((rt0.c1))<((rt0.c2)))))) ORDER BY rt1.c2, (((((((rt0.c1))>=((rt1.c2))))OR(((rt0.c0)>>(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CASE WHEN rt1.c2 THEN rt0.c1 END)))OR((((rt0.c1))<((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY rt1.c2, (((((((rt0.c1))>=((rt1.c2))))OR(((rt0.c0)>>(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((((NULL)OR(CASE WHEN rt1.c2 THEN rt0.c1 END)))OR((((rt0.c1))<((rt0.c2)))))) ORDER BY rt1.c2, (((((((rt0.c1))>=((rt1.c2))))OR(((rt0.c0)>>(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CASE WHEN rt1.c2 THEN rt0.c1 END)))OR((((rt0.c1))<((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY rt1.c2, (((((((rt0.c1))>=((rt1.c2))))OR(((rt0.c0)>>(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((((NULL)OR(CASE WHEN rt1.c2 THEN rt0.c1 END)))OR((((rt0.c1))<((rt0.c2)))))) ORDER BY rt1.c2, (((((((rt0.c1))>=((rt1.c2))))OR(((rt0.c0)>>(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) ASC;
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN rt1.c1 END COLLATE RTRIM WHERE ((~ (((rt1.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN rt1.c1 END COLLATE RTRIM);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN rt1.c1 END COLLATE RTRIM WHERE ((~ (((rt1.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN rt1.c1 END COLLATE RTRIM);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN rt1.c1 END COLLATE RTRIM WHERE ((~ (((rt1.c0)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY)/(rt1.c2 COLLATE BINARY))) ORDER BY ((NULL)*(((((rt1.c1)OR(rt1.c3)))OR(0.12793792912919588))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY)/(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL)*(((((rt1.c1)OR(rt1.c3)))OR(0.12793792912919588)))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY)/(rt1.c2 COLLATE BINARY))) ORDER BY ((NULL)*(((((rt1.c1)OR(rt1.c3)))OR(0.12793792912919588))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY)/(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL)*(((((rt1.c1)OR(rt1.c3)))OR(0.12793792912919588)))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY)/(rt1.c2 COLLATE BINARY))) ORDER BY ((NULL)*(((((rt1.c1)OR(rt1.c3)))OR(0.12793792912919588))));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)&(rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END THEN CAST(vt0.c0 AS BLOB) END WHERE (((NULL)>>((rt0.c1 IN ())))) ORDER BY ('-1793902330' IN ());
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)&(rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END THEN CAST(vt0.c0 AS BLOB) END ORDER BY ('-1793902330' IN ()));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)&(rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END THEN CAST(vt0.c0 AS BLOB) END WHERE (((NULL)>>((rt0.c1 IN ())))) ORDER BY ('-1793902330' IN ());
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)&(rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END THEN CAST(vt0.c0 AS BLOB) END ORDER BY ('-1793902330' IN ()));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)&(rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END THEN CAST(vt0.c0 AS BLOB) END WHERE (((NULL)>>((rt0.c1 IN ())))) ORDER BY ('-1793902330' IN ());
SELECT * FROM rt1, rt0 WHERE (((((x'c5ee')>(rt1.c2)))*(((rt1.c1)>(-1701012866)))));
SELECT SUM(count) FROM (SELECT ((((((x'c5ee')>(rt1.c2)))*(((rt1.c1)>(-1701012866))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((x'c5ee')>(rt1.c2)))*(((rt1.c1)>(-1701012866)))));
SELECT SUM(count) FROM (SELECT ((((((x'c5ee')>(rt1.c2)))*(((rt1.c1)>(-1701012866))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((x'c5ee')>(rt1.c2)))*(((rt1.c1)>(-1701012866)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN vt0 ON (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((CAST(rt0.c1 AS INTEGER)))) WHERE (LIKELY(DISTINCT ((rt1.c2)/(vt0.c0)))) ORDER BY rt1.c0 DESC  NULLS LAST, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt1.c2)/(vt0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN vt0 ON (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((CAST(rt0.c1 AS INTEGER)))) ORDER BY rt1.c0 DESC  NULLS LAST, rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN vt0 ON (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((CAST(rt0.c1 AS INTEGER)))) WHERE (LIKELY(DISTINCT ((rt1.c2)/(vt0.c0)))) ORDER BY rt1.c0 DESC  NULLS LAST, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt1.c2)/(vt0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN vt0 ON (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((CAST(rt0.c1 AS INTEGER)))) ORDER BY rt1.c0 DESC  NULLS LAST, rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN vt0 ON (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((CAST(rt0.c1 AS INTEGER)))) WHERE (LIKELY(DISTINCT ((rt1.c2)/(vt0.c0)))) ORDER BY rt1.c0 DESC  NULLS LAST, rt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY MAX(((rt0.c0)LIKE(rt0.c1)), (rt0.c1 IN ()), 1.992942468E9, (NULL IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY MAX(((rt0.c0)LIKE(rt0.c1)), (rt0.c1 IN ()), 1.992942468E9, (NULL IN ()))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY MAX(((rt0.c0)LIKE(rt0.c1)), (rt0.c1 IN ()), 1.992942468E9, (NULL IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY MAX(((rt0.c0)LIKE(rt0.c1)), (rt0.c1 IN ()), 1.992942468E9, (NULL IN ()))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY MAX(((rt0.c0)LIKE(rt0.c1)), (rt0.c1 IN ()), 1.992942468E9, (NULL IN ()))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN DATE(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)OR(vt0.c0))  WHEN DATE(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN DATE(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)OR(vt0.c0))  WHEN DATE(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN DATE(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)<=(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT 0.6433103101638443)) NOT NULL)) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT 0.6433103101638443)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT 0.6433103101638443)) NOT NULL)) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT 0.6433103101638443)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT 0.6433103101638443)) NOT NULL)) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((+ ((NOT (rt0.c1))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)>=(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)>=(x''))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((NOT (rt0.c1))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)>=(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)>=(x''))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((NOT (rt0.c1))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)>=(x''))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) ORDER BY CAST(((((rt1.c3)OR('wiZ2')))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST(((((rt1.c3)OR('wiZ2')))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) ORDER BY CAST(((((rt1.c3)OR('wiZ2')))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST(((((rt1.c3)OR('wiZ2')))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) ORDER BY CAST(((((rt1.c3)OR('wiZ2')))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((rt1.c3)AND(rt0.c0)))AND(rt1.c2)))AND(((((rt1.c1)OR(rt1.c3)))AND(rt0.c2))))) ORDER BY (((vt0.c0)<>(rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)AND(rt0.c0)))AND(rt1.c2)))AND(((((rt1.c1)OR(rt1.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((vt0.c0)!=(rt0.c2)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((rt1.c3)AND(rt0.c0)))AND(rt1.c2)))AND(((((rt1.c1)OR(rt1.c3)))AND(rt0.c2))))) ORDER BY (((vt0.c0)<>(rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)AND(rt0.c0)))AND(rt1.c2)))AND(((((rt1.c1)OR(rt1.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((vt0.c0)!=(rt0.c2)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((rt1.c3)AND(rt0.c0)))AND(rt1.c2)))AND(((((rt1.c1)OR(rt1.c3)))AND(rt0.c2))))) ORDER BY (((vt0.c0)<>(rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((LTRIM('', rt1.c2))GLOB(((rt1.c3) NOTNULL))) WHERE (CAST(COALESCE(rt1.c0, rt0.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(rt1.c0, rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((LTRIM('', rt1.c2))GLOB(((rt1.c3) NOTNULL))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((LTRIM('', rt1.c2))GLOB(((rt1.c3) NOTNULL))) WHERE (CAST(COALESCE(rt1.c0, rt0.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(rt1.c0, rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((LTRIM('', rt1.c2))GLOB(((rt1.c3) NOTNULL))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((LTRIM('', rt1.c2))GLOB(((rt1.c3) NOTNULL))) WHERE (CAST(COALESCE(rt1.c0, rt0.c1) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (json_array((- (rt1.c3)), CAST(rt1.c3 AS INTEGER), CASE rt0.c2  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END, rt1.c3)) ORDER BY ((NULL)%(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array((- (rt1.c3)), CAST(rt1.c3 AS INTEGER), CASE rt0.c2  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END, rt1.c3)) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((NULL)%(x'')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (json_array((- (rt1.c3)), CAST(rt1.c3 AS INTEGER), CASE rt0.c2  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END, rt1.c3)) ORDER BY ((NULL)%(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array((- (rt1.c3)), CAST(rt1.c3 AS INTEGER), CASE rt0.c2  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END, rt1.c3)) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((NULL)%(x'')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((~ (rt0.c2)))AND(CASE WHEN rt0.c1 THEN x'64e9' END)))OR((('')||(rt0.c1)))))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((~ (rt0.c2)))AND(CASE WHEN rt0.c1 THEN x'64e9' END)))OR((('')||(rt0.c1)))))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((~ (rt0.c2)))AND(CASE WHEN rt0.c1 THEN x'64e9' END)))OR((('')||(rt0.c1)))))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((~ (rt0.c2)))AND(CASE WHEN rt0.c1 THEN x'64e9' END)))OR((('')||(rt0.c1)))))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((~ (rt0.c2)))AND(CASE WHEN rt0.c1 THEN x'64e9' END)))OR((('')||(rt0.c1)))))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))*(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('Y'))))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, (((- (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))*(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('Y'))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, (((- (rt0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))*(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('Y'))))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, (((- (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))*(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('Y'))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, (((- (rt0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))*(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('Y'))))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, (((- (rt0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((((rt1.c3)OR((('/45~6(i')/(rt1.c1)))))AND(CAST(rt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR((('/45~6(i')/(rt1.c1)))))AND(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((((rt1.c3)OR((('/45~6(i')/(rt1.c1)))))AND(CAST(rt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR((('/45~6(i')/(rt1.c1)))))AND(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((((rt1.c3)OR((('/45~6(i')/(rt1.c1)))))AND(CAST(rt1.c2 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ (CAST('' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST('' AS TEXT)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ (CAST('' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST('' AS TEXT)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ (CAST('' AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON x'42ba' INNER JOIN rt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))) BETWEEN (((rt0.c2)-(rt1.c2))) AND (((((rt1.c0)OR(rt0.c1)))OR(rt1.c3)))) WHERE (TRIM(DISTINCT ((rt1.c2)>(vt0.c0)), ((((rt0.c0)OR(rt1.c2)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c2)>(vt0.c0)), ((((rt0.c0)OR(rt1.c2)))OR(rt1.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON x'42ba' INNER JOIN rt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))) BETWEEN (((rt0.c2)-(rt1.c2))) AND (((((rt1.c0)OR(rt0.c1)))OR(rt1.c3)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON x'42ba' INNER JOIN rt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))) BETWEEN (((rt0.c2)-(rt1.c2))) AND (((((rt1.c0)OR(rt0.c1)))OR(rt1.c3)))) WHERE (TRIM(DISTINCT ((rt1.c2)>(vt0.c0)), ((((rt0.c0)OR(rt1.c2)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c2)>(vt0.c0)), ((((rt0.c0)OR(rt1.c2)))OR(rt1.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON x'42ba' INNER JOIN rt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))) BETWEEN (((rt0.c2)-(rt1.c2))) AND (((((rt1.c0)OR(rt0.c1)))OR(rt1.c3)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON x'42ba' INNER JOIN rt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))) BETWEEN (((rt0.c2)-(rt1.c2))) AND (((((rt1.c0)OR(rt0.c1)))OR(rt1.c3)))) WHERE (TRIM(DISTINCT ((rt1.c2)>(vt0.c0)), ((((rt0.c0)OR(rt1.c2)))OR(rt1.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))-((NOT (rt0.c1))))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))-((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))-((NOT (rt0.c1))))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))-((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))-((NOT (rt0.c1))))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) IS FALSE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) IS FALSE) WHERE (rt1.c3 COLLATE BINARY) ORDER BY (~ (((rt1.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3 COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) IS FALSE) ORDER BY (~ (((rt1.c3) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) IS FALSE) WHERE (rt1.c3 COLLATE BINARY) ORDER BY (~ (((rt1.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3 COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) IS FALSE) ORDER BY (~ (((rt1.c3) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) IS FALSE) WHERE (rt1.c3 COLLATE BINARY) ORDER BY (~ (((rt1.c3) NOT NULL)));
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 END)>>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END))) ORDER BY ((json_valid(rt1.c3))<<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END)) DESC, CASE WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)) THEN (('1160668133')==(rt1.c2)) WHEN (- (rt1.c2)) THEN (~ (rt1.c0)) WHEN rt1.c2 THEN ((rt1.c2)IS(rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c0 END)>>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY ((json_valid(rt1.c3))<<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END)) DESC, CASE WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)) THEN (('1160668133')=(rt1.c2)) WHEN (- (rt1.c2)) THEN (~ (rt1.c0)) WHEN rt1.c2 THEN ((rt1.c2)IS(rt1.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 END)>>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END))) ORDER BY ((json_valid(rt1.c3))<<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END)) DESC, CASE WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)) THEN (('1160668133')==(rt1.c2)) WHEN (- (rt1.c2)) THEN (~ (rt1.c0)) WHEN rt1.c2 THEN ((rt1.c2)IS(rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c0 END)>>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY ((json_valid(rt1.c3))<<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END)) DESC, CASE WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)) THEN (('1160668133')=(rt1.c2)) WHEN (- (rt1.c2)) THEN (~ (rt1.c0)) WHEN rt1.c2 THEN ((rt1.c2)IS(rt1.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 END)>>(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END))) ORDER BY ((json_valid(rt1.c3))<<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END)) DESC, CASE WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)) THEN (('1160668133')==(rt1.c2)) WHEN (- (rt1.c2)) THEN (~ (rt1.c0)) WHEN rt1.c2 THEN ((rt1.c2)IS(rt1.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((LIKELY(rt0.c0), x'', ((rt0.c2)OR(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '-2044081209' THEN rt0.c0 END, rt0.c0 COLLATE NOCASE, CASE 'Xj'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))) ORDER BY CASE WHEN rt0.c0 THEN (rt0.c2 IN (rt0.c0, '-1143599013')) ELSE x'25be' END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((LIKELY(rt0.c0), x'', ((rt0.c2)OR(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '-2044081209' THEN rt0.c0 END, rt0.c0 COLLATE NOCASE, CASE 'Xj'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN (rt0.c2 IN (rt0.c0, '-1143599013')) ELSE x'25be' END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((LIKELY(rt0.c0), x'', ((rt0.c2)OR(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '-2044081209' THEN rt0.c0 END, rt0.c0 COLLATE NOCASE, CASE 'Xj'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))) ORDER BY CASE WHEN rt0.c0 THEN (rt0.c2 IN (rt0.c0, '-1143599013')) ELSE x'25be' END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((LIKELY(rt0.c0), x'', ((rt0.c2)OR(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '-2044081209' THEN rt0.c0 END, rt0.c0 COLLATE NOCASE, CASE 'Xj'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN (rt0.c2 IN (rt0.c0, '-1143599013')) ELSE x'25be' END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((LIKELY(rt0.c0), x'', ((rt0.c2)OR(rt0.c1)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '-2044081209' THEN rt0.c0 END, rt0.c0 COLLATE NOCASE, CASE 'Xj'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))) ORDER BY CASE WHEN rt0.c0 THEN (rt0.c2 IN (rt0.c0, '-1143599013')) ELSE x'25be' END;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((NULL) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c0)))) ORDER BY COALESCE(((rt1.c1)>=(rt0.c0)), CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0.8645694008657334) ISNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c0)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY COALESCE(((rt1.c1)>=(rt0.c0)), CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0.8645694008657334) ISNULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((NULL) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c0)))) ORDER BY COALESCE(((rt1.c1)>=(rt0.c0)), CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0.8645694008657334) ISNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c0)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY COALESCE(((rt1.c1)>=(rt0.c0)), CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0.8645694008657334) ISNULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((NULL) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c0)))) ORDER BY COALESCE(((rt1.c1)>=(rt0.c0)), CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0.8645694008657334) ISNULL)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))+(((rt1.c2)OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))+(((rt1.c2)OR(rt1.c3))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))+(((rt1.c2)OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))+(((rt1.c2)OR(rt1.c3))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))+(((rt1.c2)OR(rt1.c3)))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN 0Xffffffffde031fcd ELSE rt1.c2 END)%(rt1.c3))) ORDER BY (LIKELY(rt1.c0) IN ());
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN 0Xffffffffde031fcd ELSE rt1.c2 END)%(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY (LIKELY(rt1.c0) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN 0Xffffffffde031fcd ELSE rt1.c2 END)%(rt1.c3))) ORDER BY (LIKELY(rt1.c0) IN ());
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN 0Xffffffffde031fcd ELSE rt1.c2 END)%(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY (LIKELY(rt1.c0) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN 0Xffffffffde031fcd ELSE rt1.c2 END)%(rt1.c3))) ORDER BY (LIKELY(rt1.c0) IN ());
SELECT COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (UNLIKELY(DISTINCT CAST(rt1.c0 AS NUMERIC))) ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt0.c0))  WHEN ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c0 IN (rt1.c3, rt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(rt1.c0 AS NUMERIC))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt0.c0))  WHEN ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c0 IN (rt1.c3, rt0.c2)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (UNLIKELY(DISTINCT CAST(rt1.c0 AS NUMERIC))) ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt0.c0))  WHEN ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c0 IN (rt1.c3, rt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(rt1.c0 AS NUMERIC))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt0.c0))  WHEN ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c0 IN (rt1.c3, rt0.c2)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (UNLIKELY(DISTINCT CAST(rt1.c0 AS NUMERIC))) ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt0.c0))  WHEN ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c0 IN (rt1.c3, rt0.c2)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt1.c3))))OR(((vt0.c0)||(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt1.c3))))OR(((vt0.c0)||(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt1.c3))))OR(((vt0.c0)||(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt1.c3))))OR(((vt0.c0)||(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt1.c3))))OR(((vt0.c0)||(rt1.c2)))));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(-682237366 AS BLOB)) AND (rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.877234550379883)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(-682237366 AS BLOB)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.877234550379883)) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(-682237366 AS BLOB)) AND (rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.877234550379883)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(-682237366 AS BLOB)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.877234550379883)) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(-682237366 AS BLOB)) AND (rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.877234550379883)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c2))) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c2))) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c2))) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c2))) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c2))) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((((- (rt0.c1)))OR(((('-941398893', rt1.c0, rt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, x''))))))AND(((rt1.c2)<<(rt0.c1))))) ORDER BY (((-2.04583521E9, rt0.c0, vt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt1.c1), ((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt0.c0)))OR(rt1.c3)), ((rt1.c1) IS TRUE))) AND ((((rt0.c1)-(rt1.c2)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt1.c1)), ((rt0.c0) IS FALSE)))) ASC  NULLS FIRST, CAST(TRIM(rt0.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))OR(((('-941398893', rt1.c0, rt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, x''))))))AND(((rt1.c2)<<(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((-2.04583521E9, rt0.c0, vt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt1.c1), ((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt0.c0)))OR(rt1.c3)), ((rt1.c1) IS TRUE))) AND ((((rt0.c1)-(rt1.c2)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt1.c1)), ((rt0.c0) IS FALSE)))) ASC  NULLS FIRST, CAST(TRIM(rt0.c0) AS INTEGER));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((((- (rt0.c1)))OR(((('-941398893', rt1.c0, rt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, x''))))))AND(((rt1.c2)<<(rt0.c1))))) ORDER BY (((-2.04583521E9, rt0.c0, vt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt1.c1), ((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt0.c0)))OR(rt1.c3)), ((rt1.c1) IS TRUE))) AND ((((rt0.c1)-(rt1.c2)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt1.c1)), ((rt0.c0) IS FALSE)))) ASC  NULLS FIRST, CAST(TRIM(rt0.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))OR(((('-941398893', rt1.c0, rt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, x''))))))AND(((rt1.c2)<<(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((-2.04583521E9, rt0.c0, vt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt1.c1), ((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt0.c0)))OR(rt1.c3)), ((rt1.c1) IS TRUE))) AND ((((rt0.c1)-(rt1.c2)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt1.c1)), ((rt0.c0) IS FALSE)))) ASC  NULLS FIRST, CAST(TRIM(rt0.c0) AS INTEGER));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((((- (rt0.c1)))OR(((('-941398893', rt1.c0, rt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, x''))))))AND(((rt1.c2)<<(rt0.c1))))) ORDER BY (((-2.04583521E9, rt0.c0, vt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt1.c1), ((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt0.c0)))OR(rt1.c3)), ((rt1.c1) IS TRUE))) AND ((((rt0.c1)-(rt1.c2)), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt1.c1)), ((rt0.c0) IS FALSE)))) ASC  NULLS FIRST, CAST(TRIM(rt0.c0) AS INTEGER);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((~ (((rt1.c0) ISNULL)))) ORDER BY ((((x'')=(rt1.c1)))>=(rt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN rt1 ORDER BY ((((x'')==(rt1.c1)))>=(rt0.c1 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((~ (((rt1.c0) ISNULL)))) ORDER BY ((((x'')=(rt1.c1)))>=(rt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN rt1 ORDER BY ((((x'')==(rt1.c1)))>=(rt0.c1 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN rt1 WHERE ((~ (((rt1.c0) ISNULL)))) ORDER BY ((((x'')=(rt1.c1)))>=(rt0.c1 COLLATE RTRIM)) DESC;
SELECT * FROM rt0 WHERE ((('')AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('')AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('')AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('')AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('')AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3 IN ())))>((((rt0.c2)<(rt1.c2))))) LEFT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS NUMERIC))) WHERE (((vt0.c0)<(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((rt1.c1)<>(rt1.c2))) NOT BETWEEN (((rt1.c2)>>(rt0.c2))) AND ((('-447063063')IS(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3 IN ())))>((((rt0.c2)<(rt1.c2))))) LEFT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((rt1.c1)!=(rt1.c2))) NOT BETWEEN (((rt1.c2)>>(rt0.c2))) AND ((('-447063063')IS(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3 IN ())))>((((rt0.c2)<(rt1.c2))))) LEFT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS NUMERIC))) WHERE (((vt0.c0)<(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((rt1.c1)<>(rt1.c2))) NOT BETWEEN (((rt1.c2)>>(rt0.c2))) AND ((('-447063063')IS(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3 IN ())))>((((rt0.c2)<(rt1.c2))))) LEFT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((rt1.c1)!=(rt1.c2))) NOT BETWEEN (((rt1.c2)>>(rt0.c2))) AND ((('-447063063')IS(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3 IN ())))>((((rt0.c2)<(rt1.c2))))) LEFT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS NUMERIC))) WHERE (((vt0.c0)<(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((rt1.c1)<>(rt1.c2))) NOT BETWEEN (((rt1.c2)>>(rt0.c2))) AND ((('-447063063')IS(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE (rt1.c2) ORDER BY (~ (((rt1.c3)/(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 ORDER BY (~ (((rt1.c3)/(rt1.c3)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE (rt1.c2) ORDER BY (~ (((rt1.c3)/(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 ORDER BY (~ (((rt1.c3)/(rt1.c3)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE (rt1.c2) ORDER BY (~ (((rt1.c3)/(rt1.c3))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))&(((rt1.c2)<<(rt1.c0))))) ORDER BY ((((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)))LIKE(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))&(((rt1.c2)<<(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)))LIKE(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))&(((rt1.c2)<<(rt1.c0))))) ORDER BY ((((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)))LIKE(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))&(((rt1.c2)<<(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)))LIKE(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))&(((rt1.c2)<<(rt1.c0))))) ORDER BY ((((((rt1.c3)OR(rt1.c3)))AND(rt1.c1)))LIKE(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt1.c2)<=(rt1.c1)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(rt1.c1)))LIKE(vt0.c0))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt1.c2)<=(rt1.c1)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(rt1.c1)))LIKE(vt0.c0))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt1.c2)<=(rt1.c1)))LIKE(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'b2461c73' AS NUMERIC) COLLATE RTRIM COLLATE BINARY) ORDER BY (((('q[^') BETWEEN (vt0.c0) AND (0x6dc789ea))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'b2461c73' AS NUMERIC) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((('q[^') BETWEEN (vt0.c0) AND (0X6dc789ea))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'b2461c73' AS NUMERIC) COLLATE RTRIM COLLATE BINARY) ORDER BY (((('q[^') BETWEEN (vt0.c0) AND (0x6dc789ea))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'b2461c73' AS NUMERIC) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((('q[^') BETWEEN (vt0.c0) AND (0X6dc789ea))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'b2461c73' AS NUMERIC) COLLATE RTRIM COLLATE BINARY) ORDER BY (((('q[^') BETWEEN (vt0.c0) AND (0x6dc789ea))) IS TRUE)  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2)|(rt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)|(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2)|(rt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)|(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2)|(rt1.c0))) NOTNULL));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON CASE (((('ZgA0RT	.')OR(rt0.c0)))AND(vt0.c0))  WHEN (~ (rt1.c2)) THEN ((rt1.c3)AND(rt1.c0)) WHEN (((('674308614')AND(rt0.c1)))OR(rt1.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (vt0.c0 IN (rt0.c1)) THEN ((rt1.c1)%(rt1.c3)) END CROSS JOIN rt0 ON (((rt1.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c0)))) AND ((CAST(rt0.c2 AS TEXT)))) WHERE (CASE x''  WHEN (rt1.c3 IN ()) THEN x'' ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (rt1.c3 IN ()) THEN x'' ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE (((('ZgA0RT	.')OR(rt0.c0)))AND(vt0.c0))  WHEN (~ (rt1.c2)) THEN ((rt1.c3)AND(rt1.c0)) WHEN (((('674308614')AND(rt0.c1)))OR(rt1.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (vt0.c0 IN (rt0.c1)) THEN ((rt1.c1)%(rt1.c3)) END CROSS JOIN rt0 ON (((rt1.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c0)))) AND ((CAST(rt0.c2 AS TEXT)))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON CASE (((('ZgA0RT	.')OR(rt0.c0)))AND(vt0.c0))  WHEN (~ (rt1.c2)) THEN ((rt1.c3)AND(rt1.c0)) WHEN (((('674308614')AND(rt0.c1)))OR(rt1.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (vt0.c0 IN (rt0.c1)) THEN ((rt1.c1)%(rt1.c3)) END CROSS JOIN rt0 ON (((rt1.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c0)))) AND ((CAST(rt0.c2 AS TEXT)))) WHERE (CASE x''  WHEN (rt1.c3 IN ()) THEN x'' ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (rt1.c3 IN ()) THEN x'' ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE (((('ZgA0RT	.')OR(rt0.c0)))AND(vt0.c0))  WHEN (~ (rt1.c2)) THEN ((rt1.c3)AND(rt1.c0)) WHEN (((('674308614')AND(rt0.c1)))OR(rt1.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (vt0.c0 IN (rt0.c1)) THEN ((rt1.c1)%(rt1.c3)) END CROSS JOIN rt0 ON (((rt1.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c0)))) AND ((CAST(rt0.c2 AS TEXT)))));
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt1, rt0 INNER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((((rt1.c3)AND(vt0.c0)))) AND ((((vt0.c0)OR(rt1.c3))))) WHERE (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 INNER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((((rt1.c3)AND(vt0.c0)))) AND ((((vt0.c0)OR(rt1.c3))))));
SELECT ALL * FROM rt1, rt0 INNER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((((rt1.c3)AND(vt0.c0)))) AND ((((vt0.c0)OR(rt1.c3))))) WHERE (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 INNER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((((rt1.c3)AND(vt0.c0)))) AND ((((vt0.c0)OR(rt1.c3))))));
SELECT ALL * FROM rt1, rt0 INNER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((((rt1.c3)AND(vt0.c0)))) AND ((((vt0.c0)OR(rt1.c3))))) WHERE (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY('PbDzAg8L[')) ORDER BY LOWER(DISTINCT rt0.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY('PbDzAg8L[')) IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(DISTINCT rt0.c0) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY('PbDzAg8L[')) ORDER BY LOWER(DISTINCT rt0.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY('PbDzAg8L[')) IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(DISTINCT rt0.c0) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY('PbDzAg8L[')) ORDER BY LOWER(DISTINCT rt0.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt0, rt1, rt0 WHERE (((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c3 END) NOT BETWEEN ((- (rt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt0.c0 COLLATE NOCASE ELSE x'' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c3 END) NOT BETWEEN ((- (rt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt0.c0 COLLATE NOCASE ELSE x'' END DESC  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0 WHERE (((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c3 END) NOT BETWEEN ((- (rt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt0.c0 COLLATE NOCASE ELSE x'' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c3 END) NOT BETWEEN ((- (rt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt0.c0 COLLATE NOCASE ELSE x'' END DESC  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0 WHERE (((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c3 END) NOT BETWEEN ((- (rt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt0.c0 COLLATE NOCASE ELSE x'' END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (((((rt1.c0)AND(vt0.c0))) BETWEEN (CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(vt0.c0))) BETWEEN (CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END) AND (rt0.c0))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (((((rt1.c0)AND(vt0.c0))) BETWEEN (CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(vt0.c0))) BETWEEN (CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END) AND (rt0.c0))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN rt1 WHERE (((((rt1.c0)AND(vt0.c0))) BETWEEN (CASE rt0.c0  WHEN rt1.c2 THEN vt0.c0 END) AND (rt0.c0)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (IFNULL(NULLIF(rt0.c1, vt0.c0), (((('2096299837')AND(x'39c8')))OR(rt0.c0)))) ORDER BY (NOT (rt0.c0))  NULLS LAST, TRIM(rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(NULLIF(rt0.c1, vt0.c0), (((('2096299837')AND(x'39c8')))OR(rt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0 ORDER BY (NOT (rt0.c0))  NULLS LAST, TRIM(rt0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (IFNULL(NULLIF(rt0.c1, vt0.c0), (((('2096299837')AND(x'39c8')))OR(rt0.c0)))) ORDER BY (NOT (rt0.c0))  NULLS LAST, TRIM(rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(NULLIF(rt0.c1, vt0.c0), (((('2096299837')AND(x'39c8')))OR(rt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0 ORDER BY (NOT (rt0.c0))  NULLS LAST, TRIM(rt0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (IFNULL(NULLIF(rt0.c1, vt0.c0), (((('2096299837')AND(x'39c8')))OR(rt0.c0)))) ORDER BY (NOT (rt0.c0))  NULLS LAST, TRIM(rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN rt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))) ORDER BY CASE WHEN (((rt0.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c3, rt0.c0, vt0.c0))) THEN CAST(rt1.c3 AS INTEGER) END, CAST(((rt1.c0)<<(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC))|((NOT (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY ORDER BY CASE WHEN (((rt0.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c3, rt0.c0, vt0.c0))) THEN CAST(rt1.c3 AS INTEGER) END, CAST(((rt1.c0)<<(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC))|((NOT (rt1.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN rt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))) ORDER BY CASE WHEN (((rt0.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c3, rt0.c0, vt0.c0))) THEN CAST(rt1.c3 AS INTEGER) END, CAST(((rt1.c0)<<(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC))|((NOT (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY ORDER BY CASE WHEN (((rt0.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c3, rt0.c0, vt0.c0))) THEN CAST(rt1.c3 AS INTEGER) END, CAST(((rt1.c0)<<(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC))|((NOT (rt1.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN rt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))) ORDER BY CASE WHEN (((rt0.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c3, rt0.c0, vt0.c0))) THEN CAST(rt1.c3 AS INTEGER) END, CAST(((rt1.c0)<<(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC))|((NOT (rt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END)));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt0.c2)%(rt0.c1)) ELSE IFNULL(DISTINCT rt0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt0.c2)%(rt0.c1)) ELSE IFNULL(DISTINCT rt0.c2, rt0.c0) END) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt0.c2)%(rt0.c1)) ELSE IFNULL(DISTINCT rt0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt0.c2)%(rt0.c1)) ELSE IFNULL(DISTINCT rt0.c2, rt0.c0) END) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt0.c2)%(rt0.c1)) ELSE IFNULL(DISTINCT rt0.c2, rt0.c0) END);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (NULL) ORDER BY ((((((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1)))AND(((((rt0.c1)OR(rt1.c3)))OR(rt1.c3)))))AND((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1)))AND(((((rt0.c1)OR(rt1.c3)))OR(rt1.c3)))))AND((rt1.c2 IN ()))) ASC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (NULL) ORDER BY ((((((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1)))AND(((((rt0.c1)OR(rt1.c3)))OR(rt1.c3)))))AND((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1)))AND(((((rt0.c1)OR(rt1.c3)))OR(rt1.c3)))))AND((rt1.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))*(((0.41086143659154073)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))*(((0.41086143659154073)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))*(((0.41086143659154073)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))*(((0.41086143659154073)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))*(((0.41086143659154073)<=(vt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2))=((rt1.c3))) COLLATE NOCASE) ORDER BY CASE (rt1.c1 IN ())  WHEN NULL THEN vt0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2))==((rt1.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE (rt1.c1 IN ())  WHEN NULL THEN vt0.c0 COLLATE BINARY END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2))=((rt1.c3))) COLLATE NOCASE) ORDER BY CASE (rt1.c1 IN ())  WHEN NULL THEN vt0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2))==((rt1.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE (rt1.c1 IN ())  WHEN NULL THEN vt0.c0 COLLATE BINARY END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2))=((rt1.c3))) COLLATE NOCASE) ORDER BY CASE (rt1.c1 IN ())  WHEN NULL THEN vt0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (('-852315493' COLLATE BINARY) ISNULL) WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))>(IFNULL(x'6572', rt1.c1)))) ORDER BY ((((rt1.c2) BETWEEN (rt0.c0) AND ('yC&WF'))) ISNULL) ASC, CAST(CASE WHEN rt1.c0 THEN rt1.c3 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))>(IFNULL(x'6572', rt1.c1)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (('-852315493' COLLATE BINARY) ISNULL) ORDER BY ((((rt1.c2) BETWEEN (rt0.c0) AND ('yC&WF'))) ISNULL) ASC, CAST(CASE WHEN rt1.c0 THEN rt1.c3 END AS INTEGER) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (('-852315493' COLLATE BINARY) ISNULL) WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))>(IFNULL(x'6572', rt1.c1)))) ORDER BY ((((rt1.c2) BETWEEN (rt0.c0) AND ('yC&WF'))) ISNULL) ASC, CAST(CASE WHEN rt1.c0 THEN rt1.c3 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))>(IFNULL(x'6572', rt1.c1)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (('-852315493' COLLATE BINARY) ISNULL) ORDER BY ((((rt1.c2) BETWEEN (rt0.c0) AND ('yC&WF'))) ISNULL) ASC, CAST(CASE WHEN rt1.c0 THEN rt1.c3 END AS INTEGER) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (('-852315493' COLLATE BINARY) ISNULL) WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))>(IFNULL(x'6572', rt1.c1)))) ORDER BY ((((rt1.c2) BETWEEN (rt0.c0) AND ('yC&WF'))) ISNULL) ASC, CAST(CASE WHEN rt1.c0 THEN rt1.c3 END AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) ORDER BY '1848215714' DESC  NULLS LAST, ((x'')*(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY '1848215714' DESC  NULLS LAST, ((x'')*(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) ORDER BY '1848215714' DESC  NULLS LAST, ((x'')*(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY '1848215714' DESC  NULLS LAST, ((x'')*(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) ORDER BY '1848215714' DESC  NULLS LAST, ((x'')*(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY UPPER(DISTINCT ((((rt1.c1)OR(x'')))OR(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT ((((rt1.c1)OR(x'')))OR(rt1.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY UPPER(DISTINCT ((((rt1.c1)OR(x'')))OR(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT ((((rt1.c1)OR(x'')))OR(rt1.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY UPPER(DISTINCT ((((rt1.c1)OR(x'')))OR(rt1.c0)));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c1)LIKE(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)LIKE(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c1)LIKE(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)LIKE(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c1)LIKE(rt1.c0)) AS BLOB));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2)AND(rt1.c2))) BETWEEN ((((rt0.c2))==((rt1.c1)))) AND (CASE WHEN rt1.c0 THEN rt1.c3 END))) ORDER BY ((((((rt1.c1) IS FALSE))OR(rt0.c2 COLLATE BINARY)))AND(CASE WHEN 1815478762 THEN rt0.c2 ELSE rt1.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt1.c2))) BETWEEN ((((rt0.c2))=((rt1.c1)))) AND (CASE WHEN rt1.c0 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c1) IS FALSE))OR(rt0.c2 COLLATE BINARY)))AND(CASE WHEN 1815478762 THEN rt0.c2 ELSE rt1.c2 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2)AND(rt1.c2))) BETWEEN ((((rt0.c2))==((rt1.c1)))) AND (CASE WHEN rt1.c0 THEN rt1.c3 END))) ORDER BY ((((((rt1.c1) IS FALSE))OR(rt0.c2 COLLATE BINARY)))AND(CASE WHEN 1815478762 THEN rt0.c2 ELSE rt1.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt1.c2))) BETWEEN ((((rt0.c2))=((rt1.c1)))) AND (CASE WHEN rt1.c0 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c1) IS FALSE))OR(rt0.c2 COLLATE BINARY)))AND(CASE WHEN 1815478762 THEN rt0.c2 ELSE rt1.c2 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2)AND(rt1.c2))) BETWEEN ((((rt0.c2))==((rt1.c1)))) AND (CASE WHEN rt1.c0 THEN rt1.c3 END))) ORDER BY ((((((rt1.c1) IS FALSE))OR(rt0.c2 COLLATE BINARY)))AND(CASE WHEN 1815478762 THEN rt0.c2 ELSE rt1.c2 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)) WHERE ((((rt1.c0) IS TRUE) IN ((rt1.c0 IN ()), rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS TRUE) IN ((rt1.c0 IN ()), rt1.c1))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)) WHERE ((((rt1.c0) IS TRUE) IN ((rt1.c0 IN ()), rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS TRUE) IN ((rt1.c0 IN ()), rt1.c1))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)) WHERE ((((rt1.c0) IS TRUE) IN ((rt1.c0 IN ()), rt1.c1)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (1850772207);
SELECT SUM(count) FROM (SELECT ALL ((1850772207) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (1850772207);
SELECT SUM(count) FROM (SELECT ALL ((1850772207) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (1850772207);
SELECT ALL * FROM vt0 WHERE ((((('-1215026690')OR(x''))) BETWEEN ((0.2736664436384777 IN ())) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1215026690')OR(x''))) BETWEEN ((0.2736664436384777 IN ())) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('-1215026690')OR(x''))) BETWEEN ((0.2736664436384777 IN ())) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1215026690')OR(x''))) BETWEEN ((0.2736664436384777 IN ())) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('-1215026690')OR(x''))) BETWEEN ((0.2736664436384777 IN ())) AND (CAST(vt0.c0 AS REAL))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)|(rt0.c1)) THEN ((NULL)||('-277030550')) END) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)|(rt0.c1)) THEN ((NULL)||('-277030550')) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)|(rt0.c1)) THEN ((NULL)||('-277030550')) END) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)|(rt0.c1)) THEN ((NULL)||('-277030550')) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)|(rt0.c1)) THEN ((NULL)||('-277030550')) END) ORDER BY rt0.c2  NULLS LAST;
SELECT * FROM rt0, rt1, vt0 WHERE (((TRIM(rt0.c2, rt0.c2)) IS TRUE)) ORDER BY CAST(rt0.c0 AS BLOB) ASC  NULLS LAST, (((rt1.c3 IN ()))>>(((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)))), ((rt0.c0)||(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c2, rt0.c2)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(rt0.c0 AS BLOB) ASC  NULLS LAST, (((rt1.c3 IN ()))>>(((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)))), ((rt0.c0)||(((vt0.c0) NOTNULL))));
SELECT * FROM rt0, rt1, vt0 WHERE (((TRIM(rt0.c2, rt0.c2)) IS TRUE)) ORDER BY CAST(rt0.c0 AS BLOB) ASC  NULLS LAST, (((rt1.c3 IN ()))>>(((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)))), ((rt0.c0)||(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c2, rt0.c2)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(rt0.c0 AS BLOB) ASC  NULLS LAST, (((rt1.c3 IN ()))>>(((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)))), ((rt0.c0)||(((vt0.c0) NOTNULL))));
SELECT * FROM rt0, rt1, vt0 WHERE (((TRIM(rt0.c2, rt0.c2)) IS TRUE)) ORDER BY CAST(rt0.c0 AS BLOB) ASC  NULLS LAST, (((rt1.c3 IN ()))>>(((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c3)))), ((rt0.c0)||(((vt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((x'' IN ()));
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY 'ǦH*' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY 'ǦH*' ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY 'ǦH*' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY 'ǦH*' ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY 'ǦH*' ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c2 IN (rt0.c1, rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY json_quote(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) ASC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((rt0.c2 IN (rt0.c1, rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0 ORDER BY json_quote(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) ASC, rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c2 IN (rt0.c1, rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY json_quote(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) ASC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((rt0.c2 IN (rt0.c1, rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0 ORDER BY json_quote(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) ASC, rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c2 IN (rt0.c1, rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY json_quote(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) ASC, rt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT) WHERE (x'') ORDER BY (((~ (rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT) ORDER BY (((~ (rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT) WHERE (x'') ORDER BY (((~ (rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT) ORDER BY (((~ (rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON CAST((~ (rt0.c2)) AS TEXT) WHERE (x'') ORDER BY (((~ (rt0.c1))) IS TRUE);
SELECT * FROM vt0, rt0, rt1 WHERE (TYPEOF(CASE WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) ORDER BY (((vt0.c0)OR(rt1.c0)) IN (((rt1.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((vt0.c0)OR(rt1.c0)) IN (((rt1.c1) NOT NULL))));
SELECT * FROM vt0, rt0, rt1 WHERE (TYPEOF(CASE WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) ORDER BY (((vt0.c0)OR(rt1.c0)) IN (((rt1.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((vt0.c0)OR(rt1.c0)) IN (((rt1.c1) NOT NULL))));
SELECT * FROM vt0, rt0, rt1 WHERE (TYPEOF(CASE WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) ORDER BY (((vt0.c0)OR(rt1.c0)) IN (((rt1.c1) NOT NULL)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)&(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)&(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)&(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)&(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)&(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) ORDER BY ((IFNULL(DISTINCT rt0.c0, rt0.c0)) BETWEEN (CAST(x'' AS BLOB)) AND (((rt0.c2)==(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(DISTINCT rt0.c0, rt0.c0)) BETWEEN (CAST(x'' AS BLOB)) AND (((rt0.c2)=(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) ORDER BY ((IFNULL(DISTINCT rt0.c0, rt0.c0)) BETWEEN (CAST(x'' AS BLOB)) AND (((rt0.c2)==(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(DISTINCT rt0.c0, rt0.c0)) BETWEEN (CAST(x'' AS BLOB)) AND (((rt0.c2)=(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) ORDER BY ((IFNULL(DISTINCT rt0.c0, rt0.c0)) BETWEEN (CAST(x'' AS BLOB)) AND (((rt0.c2)==(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) AS REAL)) ORDER BY (((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))), NULL ASC, (NOT (((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))), NULL ASC, (NOT (((rt0.c1) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) AS REAL)) ORDER BY (((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))), NULL ASC, (NOT (((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))), NULL ASC, (NOT (((rt0.c1) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) AS REAL)) ORDER BY (((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))), NULL ASC, (NOT (((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c0)AND(rt1.c2)))AND(rt1.c3)) COLLATE RTRIM) ORDER BY ((NULL)-((rt0.c0 IN (759821313, rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt1.c2)))AND(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((NULL)-((rt0.c0 IN (759821313, rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c0)AND(rt1.c2)))AND(rt1.c3)) COLLATE RTRIM) ORDER BY ((NULL)-((rt0.c0 IN (759821313, rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt1.c2)))AND(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((NULL)-((rt0.c0 IN (759821313, rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c0)AND(rt1.c2)))AND(rt1.c3)) COLLATE RTRIM) ORDER BY ((NULL)-((rt0.c0 IN (759821313, rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((LOWER(vt0.c0))<<(rt1.c1 COLLATE BINARY)) INNER JOIN vt0 ON CAST(COALESCE(rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt1.c3, rt1.c2) AS NUMERIC) WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((LOWER(vt0.c0))<<(rt1.c1 COLLATE BINARY)) INNER JOIN vt0 ON CAST(COALESCE(rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt1.c3, rt1.c2) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((LOWER(vt0.c0))<<(rt1.c1 COLLATE BINARY)) INNER JOIN vt0 ON CAST(COALESCE(rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt1.c3, rt1.c2) AS NUMERIC) WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((LOWER(vt0.c0))<<(rt1.c1 COLLATE BINARY)) INNER JOIN vt0 ON CAST(COALESCE(rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt1.c3, rt1.c2) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((LOWER(vt0.c0))<<(rt1.c1 COLLATE BINARY)) INNER JOIN vt0 ON CAST(COALESCE(rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt1.c3, rt1.c2) AS NUMERIC) WHERE (NULL COLLATE BINARY);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))))OR(((rt1.c0) NOT NULL)))) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((HEX(rt1.c2)))) DESC, (((rt0.c0 COLLATE RTRIM))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) ASC  NULLS LAST, CAST(CAST(2092418853 AS NUMERIC) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))))OR(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((HEX(rt1.c2)))) DESC, (((rt0.c0 COLLATE RTRIM))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) ASC  NULLS LAST, CAST(CAST(2092418853 AS NUMERIC) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))))OR(((rt1.c0) NOT NULL)))) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((HEX(rt1.c2)))) DESC, (((rt0.c0 COLLATE RTRIM))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) ASC  NULLS LAST, CAST(CAST(2092418853 AS NUMERIC) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))))OR(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((HEX(rt1.c2)))) DESC, (((rt0.c0 COLLATE RTRIM))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) ASC  NULLS LAST, CAST(CAST(2092418853 AS NUMERIC) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))))OR(((rt1.c0) NOT NULL)))) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<((HEX(rt1.c2)))) DESC, (((rt0.c0 COLLATE RTRIM))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) ASC  NULLS LAST, CAST(CAST(2092418853 AS NUMERIC) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((((x'c25e' COLLATE NOCASE)OR(((rt0.c2)<>(rt0.c2)))))OR((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'c25e' COLLATE NOCASE)OR(((rt0.c2)!=(rt0.c2)))))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((x'c25e' COLLATE NOCASE)OR(((rt0.c2)<>(rt0.c2)))))OR((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'c25e' COLLATE NOCASE)OR(((rt0.c2)!=(rt0.c2)))))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((x'c25e' COLLATE NOCASE)OR(((rt0.c2)<>(rt0.c2)))))OR((NOT (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((NULL)AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((NULL)AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((NULL)AND(vt0.c0))) IS TRUE));
SELECT * FROM rt1, rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c0 COLLATE NOCASE)OR((~ (rt1.c2)))))AND((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((rt0.c0 COLLATE NOCASE)OR((~ (rt1.c2)))))AND((rt0.c1 IN ()))) DESC);
SELECT * FROM rt1, rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c0 COLLATE NOCASE)OR((~ (rt1.c2)))))AND((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((rt0.c0 COLLATE NOCASE)OR((~ (rt1.c2)))))AND((rt0.c1 IN ()))) DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '?|qg' END AS BLOB) WHERE (((((rt1.c1)OR(rt1.c2)))+(CAST(0X25a9bb6a AS NUMERIC)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))||((- (rt1.c1)))) ASC, ((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(rt1.c2)))+(CAST(0x25a9bb6a AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '?|qg' END AS BLOB) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))||((- (rt1.c1)))) ASC, ((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '?|qg' END AS BLOB) WHERE (((((rt1.c1)OR(rt1.c2)))+(CAST(0X25a9bb6a AS NUMERIC)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))||((- (rt1.c1)))) ASC, ((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(rt1.c2)))+(CAST(0x25a9bb6a AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '?|qg' END AS BLOB) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))||((- (rt1.c1)))) ASC, ((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '?|qg' END AS BLOB) WHERE (((((rt1.c1)OR(rt1.c2)))+(CAST(0X25a9bb6a AS NUMERIC)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))||((- (rt1.c1)))) ASC, ((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END) ISNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt1.c2) ISNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) ISNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt1.c2) ISNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) ISNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt1.c2) ISNULL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (((rt1.c1) IS FALSE))));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (rt1.c0);
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c0) AND (x''))  WHEN ((rt0.c2)=(rt0.c1)) THEN ((rt1.c1) NOTNULL) END) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3) BETWEEN (rt1.c0) AND (x''))  WHEN ((rt0.c2)==(rt0.c1)) THEN ((rt1.c1) NOTNULL) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c0) AND (x''))  WHEN ((rt0.c2)=(rt0.c1)) THEN ((rt1.c1) NOTNULL) END) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3) BETWEEN (rt1.c0) AND (x''))  WHEN ((rt0.c2)==(rt0.c1)) THEN ((rt1.c1) NOTNULL) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c0) AND (x''))  WHEN ((rt0.c2)=(rt0.c1)) THEN ((rt1.c1) NOTNULL) END) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))LIKE(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))LIKE(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))LIKE(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))LIKE(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))LIKE(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((CASE WHEN x'' THEN rt1.c0 ELSE rt1.c3 END)%((vt0.c0 IN ())))) ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (x'0a7d') AND (((rt0.c1)<>(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN rt1.c0 ELSE rt1.c3 END)%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (x'0a7d') AND (((rt0.c1)<>(rt1.c2)))) DESC);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((CASE WHEN x'' THEN rt1.c0 ELSE rt1.c3 END)%((vt0.c0 IN ())))) ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (x'0a7d') AND (((rt0.c1)<>(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN rt1.c0 ELSE rt1.c3 END)%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (x'0a7d') AND (((rt0.c1)<>(rt1.c2)))) DESC);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((CASE WHEN x'' THEN rt1.c0 ELSE rt1.c3 END)%((vt0.c0 IN ())))) ORDER BY ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (x'0a7d') AND (((rt0.c1)<>(rt1.c2)))) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((0.7459835252725769))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((0.7459835252725769)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((0.7459835252725769))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((0.7459835252725769)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((0.7459835252725769))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))+((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))) WHERE (((NULL)<<(rt0.c1)) COLLATE BINARY) ORDER BY ((rt1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))+((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))) ORDER BY ((rt1.c2 IN ()) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))+((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))) WHERE (((NULL)<<(rt0.c1)) COLLATE BINARY) ORDER BY ((rt1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))+((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))) ORDER BY ((rt1.c2 IN ()) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))+((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))) WHERE (((NULL)<<(rt0.c1)) COLLATE BINARY) ORDER BY ((rt1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOT NULL)) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END)))OR(ABS(DISTINCT rt1.c3))) ASC  NULLS LAST, ((((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)+(rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END)))OR(ABS(DISTINCT rt1.c3))) ASC  NULLS LAST, ((((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)+(rt1.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOT NULL)) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END)))OR(ABS(DISTINCT rt1.c3))) ASC  NULLS LAST, ((((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)+(rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END)))OR(ABS(DISTINCT rt1.c3))) ASC  NULLS LAST, ((((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)+(rt1.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOT NULL)) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))AND(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END)))OR(ABS(DISTINCT rt1.c3))) ASC  NULLS LAST, ((((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)+(rt1.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (CAST((~ (rt1.c1)) AS TEXT)) ORDER BY (- ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (- ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (CAST((~ (rt1.c1)) AS TEXT)) ORDER BY (- ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (- ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (CAST((~ (rt1.c1)) AS TEXT)) ORDER BY (- ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((CASE ']ᆽ]GY-'  WHEN vt0.c0 THEN vt0.c0 END))!=((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((vt0.c0 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC, (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE ']ᆽ]GY-'  WHEN vt0.c0 THEN vt0.c0 END))<>((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC, (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE ']ᆽ]GY-'  WHEN vt0.c0 THEN vt0.c0 END))!=((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((vt0.c0 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC, (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE ']ᆽ]GY-'  WHEN vt0.c0 THEN vt0.c0 END))<>((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC, (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE ']ᆽ]GY-'  WHEN vt0.c0 THEN vt0.c0 END))!=((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((vt0.c0 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC, (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((vt0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt1.c3)) AND ((rt0.c1, rt0.c1, rt1.c0))))!=(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FULL OUTER JOIN rt0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>=(CAST(x'67fc' AS REAL))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt1.c3)) AND ((rt0.c1, rt0.c1, rt1.c0))))<>(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FULL OUTER JOIN rt0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>=(CAST(x'67fc' AS REAL))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt1.c3)) AND ((rt0.c1, rt0.c1, rt1.c0))))!=(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FULL OUTER JOIN rt0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>=(CAST(x'67fc' AS REAL))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((((rt1.c0, rt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt1.c3)) AND ((rt0.c1, rt0.c1, rt1.c0))))<>(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FULL OUTER JOIN rt0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>=(CAST(x'67fc' AS REAL))));
SELECT * FROM rt0, rt1, vt0 WHERE (CASE NULLIF(rt0.c0, rt1.c2)  WHEN CASE WHEN rt1.c2 THEN rt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((((vt0.c0)OR(rt0.c0)))AND(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULLIF(rt0.c0, rt1.c2)  WHEN CASE WHEN rt1.c2 THEN rt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((((vt0.c0)OR(rt0.c0)))AND(rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (CASE NULLIF(rt0.c0, rt1.c2)  WHEN CASE WHEN rt1.c2 THEN rt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((((vt0.c0)OR(rt0.c0)))AND(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULLIF(rt0.c0, rt1.c2)  WHEN CASE WHEN rt1.c2 THEN rt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((((vt0.c0)OR(rt0.c0)))AND(rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (CASE NULLIF(rt0.c0, rt1.c2)  WHEN CASE WHEN rt1.c2 THEN rt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((((vt0.c0)OR(rt0.c0)))AND(rt1.c3)) END);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c2)*(rt1.c1))))) ORDER BY TYPEOF(DISTINCT '') ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2)*(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TYPEOF(DISTINCT '') ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c2)*(rt1.c1))))) ORDER BY TYPEOF(DISTINCT '') ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2)*(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TYPEOF(DISTINCT '') ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c2)*(rt1.c1))))) ORDER BY TYPEOF(DISTINCT '') ASC;
SELECT * FROM rt1, rt0, vt0 WHERE (CASE WHEN ((rt0.c1)+(rt1.c1)) THEN ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END THEN ((rt1.c1) NOT NULL) WHEN rt1.c0 THEN CAST(rt1.c0 AS BLOB) ELSE LIKELIHOOD(DISTINCT rt1.c0, 0.669428367212297) END) ORDER BY ((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))!=(rt1.c1)) ASC  NULLS FIRST, (~ (rt1.c3)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)+(rt1.c1)) THEN ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END THEN ((rt1.c1) NOT NULL) WHEN rt1.c0 THEN CAST(rt1.c0 AS BLOB) ELSE LIKELIHOOD(DISTINCT rt1.c0, 0.669428367212297) END) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))!=(rt1.c1)) ASC  NULLS FIRST, (~ (rt1.c3)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE (CASE WHEN ((rt0.c1)+(rt1.c1)) THEN ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END THEN ((rt1.c1) NOT NULL) WHEN rt1.c0 THEN CAST(rt1.c0 AS BLOB) ELSE LIKELIHOOD(DISTINCT rt1.c0, 0.669428367212297) END) ORDER BY ((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))!=(rt1.c1)) ASC  NULLS FIRST, (~ (rt1.c3)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)+(rt1.c1)) THEN ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END THEN ((rt1.c1) NOT NULL) WHEN rt1.c0 THEN CAST(rt1.c0 AS BLOB) ELSE LIKELIHOOD(DISTINCT rt1.c0, 0.669428367212297) END) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))!=(rt1.c1)) ASC  NULLS FIRST, (~ (rt1.c3)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE (CASE WHEN ((rt0.c1)+(rt1.c1)) THEN ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) WHEN CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END THEN ((rt1.c1) NOT NULL) WHEN rt1.c0 THEN CAST(rt1.c0 AS BLOB) ELSE LIKELIHOOD(DISTINCT rt1.c0, 0.669428367212297) END) ORDER BY ((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))!=(rt1.c1)) ASC  NULLS FIRST, (~ (rt1.c3)) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0, rt1 NOT INDEXED WHERE (((rt1.c3) NOT BETWEEN ((((rt1.c3, 430943850, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))) AND (((((((((rt1.c0)OR(rt1.c3)))AND(NULL)))OR(rt1.c2)))AND(rt1.c1))))) ORDER BY (('284791440') NOT BETWEEN (((rt1.c0)>(rt1.c3))) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, LIKELY((NOT (rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) NOT BETWEEN ((((rt1.c3, 430943850, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))) AND (((((((((rt1.c0)OR(rt1.c3)))AND(NULL)))OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (('284791440') NOT BETWEEN (((rt1.c0)>(rt1.c3))) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, LIKELY((NOT (rt1.c1)))  NULLS FIRST);
SELECT * FROM vt0, rt1 NOT INDEXED WHERE (((rt1.c3) NOT BETWEEN ((((rt1.c3, 430943850, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))) AND (((((((((rt1.c0)OR(rt1.c3)))AND(NULL)))OR(rt1.c2)))AND(rt1.c1))))) ORDER BY (('284791440') NOT BETWEEN (((rt1.c0)>(rt1.c3))) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, LIKELY((NOT (rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) NOT BETWEEN ((((rt1.c3, 430943850, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))) AND (((((((((rt1.c0)OR(rt1.c3)))AND(NULL)))OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (('284791440') NOT BETWEEN (((rt1.c0)>(rt1.c3))) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, LIKELY((NOT (rt1.c1)))  NULLS FIRST);
SELECT * FROM vt0, rt1 NOT INDEXED WHERE (((rt1.c3) NOT BETWEEN ((((rt1.c3, 430943850, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))) AND (((((((((rt1.c0)OR(rt1.c3)))AND(NULL)))OR(rt1.c2)))AND(rt1.c1))))) ORDER BY (('284791440') NOT BETWEEN (((rt1.c0)>(rt1.c3))) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, LIKELY((NOT (rt1.c1)))  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c1))) IS FALSE));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((~ (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((~ (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((~ (CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0)/(((rt1.c3) IS TRUE)))) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)/(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0)/(((rt1.c3) IS TRUE)))) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)/(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c0)/(((rt1.c3) IS TRUE)))) ORDER BY rt1.c2  NULLS LAST;
SELECT ALL * FROM rt1, vt0, rt0 WHERE (CASE ((rt1.c2)-(rt1.c3))  WHEN (NOT (rt1.c0)) THEN ((rt1.c0)<>(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)-(rt1.c3))  WHEN (NOT (rt1.c0)) THEN ((rt1.c0)<>(rt1.c3)) END) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (CASE ((rt1.c2)-(rt1.c3))  WHEN (NOT (rt1.c0)) THEN ((rt1.c0)<>(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)-(rt1.c3))  WHEN (NOT (rt1.c0)) THEN ((rt1.c0)<>(rt1.c3)) END) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (CASE ((rt1.c2)-(rt1.c3))  WHEN (NOT (rt1.c0)) THEN ((rt1.c0)<>(rt1.c3)) END);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0)<<('ilK'))) AND (((vt0.c0) NOT NULL)))) ORDER BY (+ ('+F'))  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.45669334347265444)) AND ((rt1.c0))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0)<<('ilK'))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ ('+F'))  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.45669334347265444)) AND ((rt1.c0))) COLLATE RTRIM DESC);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0)<<('ilK'))) AND (((vt0.c0) NOT NULL)))) ORDER BY (+ ('+F'))  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.45669334347265444)) AND ((rt1.c0))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0)<<('ilK'))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ ('+F'))  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.45669334347265444)) AND ((rt1.c0))) COLLATE RTRIM DESC);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0)<<('ilK'))) AND (((vt0.c0) NOT NULL)))) ORDER BY (+ ('+F'))  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.45669334347265444)) AND ((rt1.c0))) COLLATE RTRIM DESC;
SELECT * FROM vt0, rt0, rt1 WHERE (((((((vt0.c0)AND(x'')))AND(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(x'')))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((((((vt0.c0)AND(x'')))AND(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(x'')))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((((((vt0.c0)AND(x'')))AND(rt0.c1))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (UPPER(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (UPPER(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (UPPER(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(0.6151197590193999)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(0.6151197590193999)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(0.6151197590193999)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(0.6151197590193999)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(0.6151197590193999)))AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(0.06076233431497202)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c1)))OR(0.06076233431497202)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(0.06076233431497202)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c1)))OR(0.06076233431497202)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(0.06076233431497202)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE);
SELECT * FROM rt0, rt1, vt0 WHERE (((((rt0.c1)-(rt1.c0))) NOTNULL)) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0, rt1, vt0 WHERE (((((rt0.c1)-(rt1.c0))) NOTNULL)) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0, rt1, vt0 WHERE (((((rt0.c1)-(rt1.c0))) NOTNULL)) ORDER BY rt0.c1 DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((('됳*')<<(((rt1.c3) ISNULL)))) ORDER BY ((rt1.c2)>=(CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((('됳*')<<(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>=(CAST(rt1.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((('됳*')<<(((rt1.c3) ISNULL)))) ORDER BY ((rt1.c2)>=(CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((('됳*')<<(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>=(CAST(rt1.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((('됳*')<<(((rt1.c3) ISNULL)))) ORDER BY ((rt1.c2)>=(CAST(rt1.c2 AS NUMERIC)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3)>(rt1.c0)))>=(CASE WHEN rt1.c1 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>(rt1.c0)))>=(CASE WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3)>(rt1.c0)))>=(CASE WHEN rt1.c1 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>(rt1.c0)))>=(CASE WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3)>(rt1.c0)))>=(CASE WHEN rt1.c1 THEN rt1.c1 END)));
SELECT * FROM rt1 WHERE (CAST(((rt1.c1)OR(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)OR(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c1)OR(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)OR(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((rt1.c1)OR(rt1.c2)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((json_extract(rt1.c1, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_extract(rt1.c1, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((json_extract(rt1.c1, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_extract(rt1.c1, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((- ((((rt0.c2, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt0.c2, rt1.c0)) AND ((rt0.c0, rt0.c1, rt0.c1)))))) ORDER BY (((rt1.c1)) BETWEEN ((((rt0.c0)<(0.5547667027609194)))) AND ((COALESCE(DISTINCT rt1.c0, rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt0.c2, rt1.c0)) AND ((rt0.c0, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1)) BETWEEN ((((rt0.c0)<(0.5547667027609194)))) AND ((COALESCE(DISTINCT rt1.c0, rt1.c3)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((- ((((rt0.c2, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt0.c2, rt1.c0)) AND ((rt0.c0, rt0.c1, rt0.c1)))))) ORDER BY (((rt1.c1)) BETWEEN ((((rt0.c0)<(0.5547667027609194)))) AND ((COALESCE(DISTINCT rt1.c0, rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt0.c2, rt1.c0)) AND ((rt0.c0, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1)) BETWEEN ((((rt0.c0)<(0.5547667027609194)))) AND ((COALESCE(DISTINCT rt1.c0, rt1.c3)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((- ((((rt0.c2, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt0.c2, rt1.c0)) AND ((rt0.c0, rt0.c1, rt0.c1)))))) ORDER BY (((rt1.c1)) BETWEEN ((((rt0.c0)<(0.5547667027609194)))) AND ((COALESCE(DISTINCT rt1.c0, rt1.c3)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 END COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 END COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 END COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)) IN ((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)) IN ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)) IN ((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)) IN ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((rt0.c2)OR(rt1.c1)))OR(rt1.c0)) IN ((+ (rt1.c2)))));
SELECT ALL * FROM vt0 WHERE (CAST(x'9428077a' AS BLOB)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(x'9428077a' AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (CAST(x'9428077a' AS BLOB)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(x'9428077a' AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (CAST(x'9428077a' AS BLOB)) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c2, rt0.c0, rt1.c0))<>((rt0.c0, rt0.c1, rt1.c1))))<>(ABS(rt0.c0)))) ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))), ((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END) AND (rt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, rt0.c0, rt1.c0))<>((rt0.c0, rt0.c1, rt1.c1))))<>(ABS(rt0.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))), ((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END) AND (rt1.c1)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c2, rt0.c0, rt1.c0))<>((rt0.c0, rt0.c1, rt1.c1))))<>(ABS(rt0.c0)))) ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))), ((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END) AND (rt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, rt0.c0, rt1.c0))<>((rt0.c0, rt0.c1, rt1.c1))))<>(ABS(rt0.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))), ((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END) AND (rt1.c1)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c2, rt0.c0, rt1.c0))<>((rt0.c0, rt0.c1, rt1.c1))))<>(ABS(rt0.c0)))) ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))), ((rt1.c0 COLLATE RTRIM) BETWEEN (CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END) AND (rt1.c1)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((DATETIME(vt0.c0, x'', vt0.c0))OR(((rt0.c1)GLOB(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (0.256833360964671) AND (rt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c2)GLOB(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((DATETIME(vt0.c0, x'', vt0.c0))OR(((rt0.c1)GLOB(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (0.256833360964671) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c2)GLOB(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((DATETIME(vt0.c0, x'', vt0.c0))OR(((rt0.c1)GLOB(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (0.256833360964671) AND (rt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c2)GLOB(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((DATETIME(vt0.c0, x'', vt0.c0))OR(((rt0.c1)GLOB(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (0.256833360964671) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c2)GLOB(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((DATETIME(vt0.c0, x'', vt0.c0))OR(((rt0.c1)GLOB(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (0.256833360964671) AND (rt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((((rt0.c2)GLOB(rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, rt1 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)))) AND (((rt0.c1 IN ()))))  NULLS LAST, CAST((NOT (rt1.c3)) AS TEXT), ((CAST(rt1.c3 AS INTEGER))=(((rt0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)))) AND (((rt0.c1 IN ()))))  NULLS LAST, CAST((NOT (rt1.c3)) AS TEXT), ((CAST(rt1.c3 AS INTEGER))==(((rt0.c2) ISNULL))) ASC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)))) AND (((rt0.c1 IN ()))))  NULLS LAST, CAST((NOT (rt1.c3)) AS TEXT), ((CAST(rt1.c3 AS INTEGER))=(((rt0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)))) AND (((rt0.c1 IN ()))))  NULLS LAST, CAST((NOT (rt1.c3)) AS TEXT), ((CAST(rt1.c3 AS INTEGER))==(((rt0.c2) ISNULL))) ASC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)))) AND (((rt0.c1 IN ()))))  NULLS LAST, CAST((NOT (rt1.c3)) AS TEXT), ((CAST(rt1.c3 AS INTEGER))=(((rt0.c2) ISNULL))) ASC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (NULL)) LEFT OUTER JOIN vt0 ON CASE ((((rt1.c3)AND(rt0.c2)))AND(rt1.c2))  WHEN ((rt1.c1)AND(vt0.c0)) THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt0.c1 END END WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt1.c3)))) AND ((COALESCE(vt0.c0, rt1.c1))))) ORDER BY ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))OR(((rt0.c1) NOT NULL))) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN rt1.c0 THEN rt0.c1 END IN ()) DESC, (((- (rt0.c2)))<=(COALESCE(DISTINCT NULL, rt1.c0, vt0.c0, rt1.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((- (rt1.c3)))) AND ((COALESCE(vt0.c0, rt1.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (NULL)) LEFT OUTER JOIN vt0 ON CASE ((((rt1.c3)AND(rt0.c2)))AND(rt1.c2))  WHEN ((rt1.c1)AND(vt0.c0)) THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt0.c1 END END ORDER BY ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))OR(((rt0.c1) NOT NULL))) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN rt1.c0 THEN rt0.c1 END IN ()) DESC, (((- (rt0.c2)))<=(COALESCE(DISTINCT NULL, rt1.c0, vt0.c0, rt1.c3)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (NULL)) LEFT OUTER JOIN vt0 ON CASE ((((rt1.c3)AND(rt0.c2)))AND(rt1.c2))  WHEN ((rt1.c1)AND(vt0.c0)) THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt0.c1 END END WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt1.c3)))) AND ((COALESCE(vt0.c0, rt1.c1))))) ORDER BY ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))OR(((rt0.c1) NOT NULL))) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN rt1.c0 THEN rt0.c1 END IN ()) DESC, (((- (rt0.c2)))<=(COALESCE(DISTINCT NULL, rt1.c0, vt0.c0, rt1.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((- (rt1.c3)))) AND ((COALESCE(vt0.c0, rt1.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (NULL)) LEFT OUTER JOIN vt0 ON CASE ((((rt1.c3)AND(rt0.c2)))AND(rt1.c2))  WHEN ((rt1.c1)AND(vt0.c0)) THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt0.c1 END END ORDER BY ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))OR(((rt0.c1) NOT NULL))) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN rt1.c0 THEN rt0.c1 END IN ()) DESC, (((- (rt0.c2)))<=(COALESCE(DISTINCT NULL, rt1.c0, vt0.c0, rt1.c3)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (NULL)) LEFT OUTER JOIN vt0 ON CASE ((((rt1.c3)AND(rt0.c2)))AND(rt1.c2))  WHEN ((rt1.c1)AND(vt0.c0)) THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt0.c1 END END WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt1.c3)))) AND ((COALESCE(vt0.c0, rt1.c1))))) ORDER BY ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))OR(((rt0.c1) NOT NULL))) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN rt1.c0 THEN rt0.c1 END IN ()) DESC, (((- (rt0.c2)))<=(COALESCE(DISTINCT NULL, rt1.c0, vt0.c0, rt1.c3)))  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((rt1.c1)GLOB(rt0.c2)))OR(-1.453121583E9)))OR(((rt1.c2) NOT NULL))))AND(CAST(rt0.c0 AS INTEGER))))AND(((rt0.c2)/(vt0.c0)))) CROSS JOIN rt1 ON CAST((NOT (rt0.c2)) AS BLOB) WHERE (((((rt1.c3))<((rt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3))<((rt1.c2))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((rt1.c1)GLOB(rt0.c2)))OR(-1.453121583E9)))OR(((rt1.c2) NOT NULL))))AND(CAST(rt0.c0 AS INTEGER))))AND(((rt0.c2)/(vt0.c0)))) CROSS JOIN rt1 ON CAST((NOT (rt0.c2)) AS BLOB));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((rt1.c1)GLOB(rt0.c2)))OR(-1.453121583E9)))OR(((rt1.c2) NOT NULL))))AND(CAST(rt0.c0 AS INTEGER))))AND(((rt0.c2)/(vt0.c0)))) CROSS JOIN rt1 ON CAST((NOT (rt0.c2)) AS BLOB) WHERE (((((rt1.c3))<((rt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3))<((rt1.c2))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((rt1.c1)GLOB(rt0.c2)))OR(-1.453121583E9)))OR(((rt1.c2) NOT NULL))))AND(CAST(rt0.c0 AS INTEGER))))AND(((rt0.c2)/(vt0.c0)))) CROSS JOIN rt1 ON CAST((NOT (rt0.c2)) AS BLOB));
SELECT ALL * FROM rt1 WHERE (json_type((- ('-1961663728'))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((- ('-1961663728')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (json_type((- ('-1961663728'))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((- ('-1961663728')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (json_type((- ('-1961663728'))));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8623822385162111);
SELECT SUM(count) FROM (SELECT ALL ((0.8623822385162111) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8623822385162111);
SELECT SUM(count) FROM (SELECT ALL ((0.8623822385162111) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8623822385162111);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (+ (CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (+ (CAST(rt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (+ (CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (+ (CAST(rt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (+ (CAST(rt0.c1 AS REAL)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c2 COLLATE RTRIM)))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST, x'3200'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c2 COLLATE RTRIM)))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST, x'3200'  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c2 COLLATE RTRIM)))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST, x'3200'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c2 COLLATE RTRIM)))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST, x'3200'  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c2 COLLATE RTRIM)))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST, x'3200'  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) IN ()));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c0 WHERE (((((((rt1.c3)AND(0.37495147499505577)))OR(0.4945448102424159)))-((+ (rt0.c2))))) ORDER BY CAST((NOT (rt1.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)AND(0.37495147499505577)))OR(0.4945448102424159)))-((+ (rt0.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c0 ORDER BY CAST((NOT (rt1.c2)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c0 WHERE (((((((rt1.c3)AND(0.37495147499505577)))OR(0.4945448102424159)))-((+ (rt0.c2))))) ORDER BY CAST((NOT (rt1.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)AND(0.37495147499505577)))OR(0.4945448102424159)))-((+ (rt0.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c0 ORDER BY CAST((NOT (rt1.c2)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c0 WHERE (((((((rt1.c3)AND(0.37495147499505577)))OR(0.4945448102424159)))-((+ (rt0.c2))))) ORDER BY CAST((NOT (rt1.c2)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c1)OR(rt0.c0))) NOTNULL)) ORDER BY ABS(DISTINCT ((rt1.c2)>=(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ABS(DISTINCT ((rt1.c2)>=(rt0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c1)OR(rt0.c0))) NOTNULL)) ORDER BY ABS(DISTINCT ((rt1.c2)>=(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ABS(DISTINCT ((rt1.c2)>=(rt0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c1)OR(rt0.c0))) NOTNULL)) ORDER BY ABS(DISTINCT ((rt1.c2)>=(rt0.c2)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN CAST('1921045633' AS BLOB) THEN LOWER(DISTINCT rt1.c3) ELSE LAST_INSERT_ROWID() END) ORDER BY ((rt1.c1)GLOB(rt1.c3))  NULLS LAST, (CASE WHEN 'Ho' THEN rt0.c1 END IN ()), '';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST('1921045633' AS BLOB) THEN LOWER(DISTINCT rt1.c3) ELSE LAST_INSERT_ROWID() END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c1)GLOB(rt1.c3))  NULLS LAST, (CASE WHEN 'Ho' THEN rt0.c1 END IN ()), '');
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN CAST('1921045633' AS BLOB) THEN LOWER(DISTINCT rt1.c3) ELSE LAST_INSERT_ROWID() END) ORDER BY ((rt1.c1)GLOB(rt1.c3))  NULLS LAST, (CASE WHEN 'Ho' THEN rt0.c1 END IN ()), '';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST('1921045633' AS BLOB) THEN LOWER(DISTINCT rt1.c3) ELSE LAST_INSERT_ROWID() END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c1)GLOB(rt1.c3))  NULLS LAST, (CASE WHEN 'Ho' THEN rt0.c1 END IN ()), '');
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN CAST('1921045633' AS BLOB) THEN LOWER(DISTINCT rt1.c3) ELSE LAST_INSERT_ROWID() END) ORDER BY ((rt1.c1)GLOB(rt1.c3))  NULLS LAST, (CASE WHEN 'Ho' THEN rt0.c1 END IN ()), '';
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE -1871522872 END AS NUMERIC) WHERE (0.723188460080125);
SELECT SUM(count) FROM (SELECT ((0.723188460080125) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE -1871522872 END AS NUMERIC));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE -1871522872 END AS NUMERIC) WHERE (0.723188460080125);
SELECT SUM(count) FROM (SELECT ((0.723188460080125) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE -1871522872 END AS NUMERIC));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE -1871522872 END AS NUMERIC) WHERE (0.723188460080125);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON rt1.c3 WHERE (((TRIM(rt0.c0))<<(CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END))) ORDER BY ((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))&(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c2)))) DESC, vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0))<<(CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON rt1.c3 ORDER BY ((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))&(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c2)))) DESC, vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, rt0.c0);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON rt1.c3 WHERE (((TRIM(rt0.c0))<<(CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END))) ORDER BY ((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))&(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c2)))) DESC, vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0))<<(CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON rt1.c3 ORDER BY ((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))&(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c2)))) DESC, vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, rt0.c0);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON rt1.c3 WHERE (((TRIM(rt0.c0))<<(CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END))) ORDER BY ((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))&(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c2)))) DESC, vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, rt0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(NULL AS TEXT))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt1.c3) ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)))>=((rt0.c2 IN ()))), (- ((('-2041318105')LIKE('O')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0, rt0 ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)))>=((rt0.c2 IN ()))), (- ((('-2041318105')LIKE('O')))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt1.c3) ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)))>=((rt0.c2 IN ()))), (- ((('-2041318105')LIKE('O')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0, rt0 ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)))>=((rt0.c2 IN ()))), (- ((('-2041318105')LIKE('O')))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt1.c3) ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)))>=((rt0.c2 IN ()))), (- ((('-2041318105')LIKE('O')))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((vt0.c0)IS NOT(('1848215714' IN ()))) WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))+(((rt0.c1)>>(rt0.c0))))) ORDER BY (~ (GLOB(rt0.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))+(((rt0.c1)>>(rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0)IS NOT(('1848215714' IN ()))) ORDER BY (~ (GLOB(rt0.c0, vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((vt0.c0)IS NOT(('1848215714' IN ()))) WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))+(((rt0.c1)>>(rt0.c0))))) ORDER BY (~ (GLOB(rt0.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))+(((rt0.c1)>>(rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0)IS NOT(('1848215714' IN ()))) ORDER BY (~ (GLOB(rt0.c0, vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((vt0.c0)IS NOT(('1848215714' IN ()))) WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))+(((rt0.c1)>>(rt0.c0))))) ORDER BY (~ (GLOB(rt0.c0, vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 COLLATE NOCASE))>((json_array_length(NULL)))) WHERE (((ABS(rt1.c1))-(((((NULL)OR(7.21594162E8)))OR(rt1.c2))))) ORDER BY CASE (((rt0.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((0x5e8c3690, rt1.c1, rt0.c1)) AND ((rt1.c2, rt0.c2, rt1.c0)))  WHEN ((rt1.c3)/(rt0.c2)) THEN ((rt1.c2)-(-930275456)) END, CASE WHEN rt1.c0 THEN rt0.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(rt1.c1))-(((((NULL)OR(7.21594162E8)))OR(rt1.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 COLLATE NOCASE))>((json_array_length(NULL)))) ORDER BY CASE (((rt0.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((0X5e8c3690, rt1.c1, rt0.c1)) AND ((rt1.c2, rt0.c2, rt1.c0)))  WHEN ((rt1.c3)/(rt0.c2)) THEN ((rt1.c2)-(-930275456)) END, CASE WHEN rt1.c0 THEN rt0.c1 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 COLLATE NOCASE))>((json_array_length(NULL)))) WHERE (((ABS(rt1.c1))-(((((NULL)OR(7.21594162E8)))OR(rt1.c2))))) ORDER BY CASE (((rt0.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((0x5e8c3690, rt1.c1, rt0.c1)) AND ((rt1.c2, rt0.c2, rt1.c0)))  WHEN ((rt1.c3)/(rt0.c2)) THEN ((rt1.c2)-(-930275456)) END, CASE WHEN rt1.c0 THEN rt0.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(rt1.c1))-(((((NULL)OR(7.21594162E8)))OR(rt1.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 COLLATE NOCASE))>((json_array_length(NULL)))) ORDER BY CASE (((rt0.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((0X5e8c3690, rt1.c1, rt0.c1)) AND ((rt1.c2, rt0.c2, rt1.c0)))  WHEN ((rt1.c3)/(rt0.c2)) THEN ((rt1.c2)-(-930275456)) END, CASE WHEN rt1.c0 THEN rt0.c1 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 COLLATE NOCASE))>((json_array_length(NULL)))) WHERE (((ABS(rt1.c1))-(((((NULL)OR(7.21594162E8)))OR(rt1.c2))))) ORDER BY CASE (((rt0.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((0x5e8c3690, rt1.c1, rt0.c1)) AND ((rt1.c2, rt0.c2, rt1.c0)))  WHEN ((rt1.c3)/(rt0.c2)) THEN ((rt1.c2)-(-930275456)) END, CASE WHEN rt1.c0 THEN rt0.c1 END ASC  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE ((('-2041318105') NOT BETWEEN (x'' COLLATE RTRIM) AND ((rt1.c1 IN ())))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))+(((vt0.c0)>(rt1.c2)))) DESC, ((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)))OR(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))))OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3))));
SELECT SUM(count) FROM (SELECT (((('-2041318105') NOT BETWEEN (x'' COLLATE RTRIM) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))+(((vt0.c0)>(rt1.c2)))) DESC, ((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)))OR(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))))OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))));
SELECT * FROM rt1, vt0 WHERE ((('-2041318105') NOT BETWEEN (x'' COLLATE RTRIM) AND ((rt1.c1 IN ())))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))+(((vt0.c0)>(rt1.c2)))) DESC, ((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)))OR(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))))OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3))));
SELECT SUM(count) FROM (SELECT (((('-2041318105') NOT BETWEEN (x'' COLLATE RTRIM) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))+(((vt0.c0)>(rt1.c2)))) DESC, ((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)))OR(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))))OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))));
SELECT * FROM rt1, vt0 WHERE ((('-2041318105') NOT BETWEEN (x'' COLLATE RTRIM) AND ((rt1.c1 IN ())))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))+(((vt0.c0)>(rt1.c2)))) DESC, ((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3)))OR(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))))OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3))));
SELECT * FROM rt0 INNER JOIN rt1 ON x'' WHERE (((((rt0.c1)-(rt0.c2)))>(0x7d54fd17))) ORDER BY CAST((- (rt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c2)))>(0X7d54fd17))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON x'' ORDER BY CAST((- (rt1.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN rt1 ON x'' WHERE (((((rt0.c1)-(rt0.c2)))>(0x7d54fd17))) ORDER BY CAST((- (rt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c2)))>(0X7d54fd17))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON x'' ORDER BY CAST((- (rt1.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN rt1 ON x'' WHERE (((((rt0.c1)-(rt0.c2)))>(0x7d54fd17))) ORDER BY CAST((- (rt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c3 COLLATE RTRIM))<(((rt1.c3 IN ())))) WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c3 COLLATE RTRIM))<(((rt1.c3 IN ())))));
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c3 COLLATE RTRIM))<(((rt1.c3 IN ())))) WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c3 COLLATE RTRIM))<(((rt1.c3 IN ())))));
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c3 COLLATE RTRIM))<(((rt1.c3 IN ())))) WHERE ((- (NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((0X727e835f) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((0X727e835f) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((0X727e835f) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((0X727e835f) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((0X727e835f) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE)));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((1681659362)!=(rt0.c2))) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1) NOT NULL)))) ORDER BY ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL), (((rt0.c1 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((1681659362)<>(rt0.c2))) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL), (((rt0.c1 IN ())) IS FALSE) ASC);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((1681659362)!=(rt0.c2))) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1) NOT NULL)))) ORDER BY ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL), (((rt0.c1 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((1681659362)<>(rt0.c2))) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL), (((rt0.c1 IN ())) IS FALSE) ASC);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((1681659362)!=(rt0.c2))) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1) NOT NULL)))) ORDER BY ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOTNULL), (((rt0.c1 IN ())) IS FALSE) ASC;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(x'7c45')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.47674228984275535))))) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(((vt0.c0) ISNULL))))AND(NULL COLLATE RTRIM)), CASE ((vt0.c0)<<(vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(x'7c45')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.47674228984275535))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(((vt0.c0) ISNULL))))AND(NULL COLLATE RTRIM)), CASE ((vt0.c0)<<(vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(x'7c45')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.47674228984275535))))) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(((vt0.c0) ISNULL))))AND(NULL COLLATE RTRIM)), CASE ((vt0.c0)<<(vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(x'7c45')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.47674228984275535))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(((vt0.c0) ISNULL))))AND(NULL COLLATE RTRIM)), CASE ((vt0.c0)<<(vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE))GLOB(((rt1.c3)<(rt0.c1)))) WHERE (((((((rt0.c2)OR('-198275481')))OR(rt1.c2)))||((rt0.c0 IN ())))) ORDER BY ((((rt1.c1) IS FALSE)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR('-198275481')))OR(rt1.c2)))||((rt0.c0 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE))GLOB(((rt1.c3)<(rt0.c1)))) ORDER BY ((((rt1.c1) IS FALSE)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE))GLOB(((rt1.c3)<(rt0.c1)))) WHERE (((((((rt0.c2)OR('-198275481')))OR(rt1.c2)))||((rt0.c0 IN ())))) ORDER BY ((((rt1.c1) IS FALSE)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR('-198275481')))OR(rt1.c2)))||((rt0.c0 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE))GLOB(((rt1.c3)<(rt0.c1)))) ORDER BY ((((rt1.c1) IS FALSE)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE))GLOB(((rt1.c3)<(rt0.c1)))) WHERE (((((((rt0.c2)OR('-198275481')))OR(rt1.c2)))||((rt0.c0 IN ())))) ORDER BY ((((rt1.c1) IS FALSE)) NOT NULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((('')-(vt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('674308614'))) ISNULL), ((json_array_length(vt0.c0, vt0.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')-(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('674308614'))) ISNULL), ((json_array_length(vt0.c0, vt0.c0)) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 WHERE ((('')-(vt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('674308614'))) ISNULL), ((json_array_length(vt0.c0, vt0.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')-(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('674308614'))) ISNULL), ((json_array_length(vt0.c0, vt0.c0)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN x'180a' THEN rt0.c1 END) AND ((rt1.c0 IN ())))) ORDER BY ((rt0.c2 COLLATE RTRIM)<>(((rt1.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN x'180a' THEN rt0.c1 END) AND ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c2 COLLATE RTRIM)<>(((rt1.c2) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN x'180a' THEN rt0.c1 END) AND ((rt1.c0 IN ())))) ORDER BY ((rt0.c2 COLLATE RTRIM)<>(((rt1.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN x'180a' THEN rt0.c1 END) AND ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c2 COLLATE RTRIM)<>(((rt1.c2) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN x'180a' THEN rt0.c1 END) AND ((rt1.c0 IN ())))) ORDER BY ((rt0.c2 COLLATE RTRIM)<>(((rt1.c2) ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3)-('-1930316494')) IN ())) ORDER BY rt1.c0 ASC, ((rt1.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)-('-1930316494')) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c0 ASC, ((rt1.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3)-('-1930316494')) IN ())) ORDER BY rt1.c0 ASC, ((rt1.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)-('-1930316494')) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c0 ASC, ((rt1.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3)-('-1930316494')) IN ())) ORDER BY rt1.c0 ASC, ((rt1.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)AND(vt0.c0)))))OR('wS')))AND((vt0.c0 IN ()))))OR(((vt0.c0)IS(-1713438323))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)AND(vt0.c0)))))OR('wS')))AND((vt0.c0 IN ()))))OR(((vt0.c0)IS(-1713438323))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)AND(vt0.c0)))))OR('wS')))AND((vt0.c0 IN ()))))OR(((vt0.c0)IS(-1713438323))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)AND(vt0.c0)))))OR('wS')))AND((vt0.c0 IN ()))))OR(((vt0.c0)IS(-1713438323))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)AND(vt0.c0)))))OR('wS')))AND((vt0.c0 IN ()))))OR(((vt0.c0)IS(-1713438323))))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c2)-(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c2)-(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c2)-(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((NULL IN (((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NULL IN (((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NULL IN (((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NULL IN (((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NULL IN (((rt0.c0)*(rt0.c0)))));
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)*(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)*(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((0.14212350075357127 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.14212350075357127 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((0.14212350075357127 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.14212350075357127 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((0.14212350075357127 IN ()));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt1.c0) BETWEEN (0.015299981228060311) AND (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (0.015299981228060311) AND (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt1.c0) BETWEEN (0.015299981228060311) AND (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (0.015299981228060311) AND (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt1.c0) BETWEEN (0.015299981228060311) AND (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE ((((NULL COLLATE NOCASE, NULL, CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END))<>((((vt0.c0)<<(vt0.c0)), CAST(rt1.c3 AS INTEGER), CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY ((json(rt1.c3))AND(((rt1.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL COLLATE NOCASE, NULL, CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END))!=((((vt0.c0)<<(vt0.c0)), CAST(rt1.c3 AS INTEGER), CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((json(rt1.c3))AND(((rt1.c0)*(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((((NULL COLLATE NOCASE, NULL, CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END))<>((((vt0.c0)<<(vt0.c0)), CAST(rt1.c3 AS INTEGER), CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY ((json(rt1.c3))AND(((rt1.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL COLLATE NOCASE, NULL, CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END))!=((((vt0.c0)<<(vt0.c0)), CAST(rt1.c3 AS INTEGER), CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((json(rt1.c3))AND(((rt1.c0)*(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((~ (rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 COLLATE NOCASE, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE, vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 COLLATE NOCASE, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE, vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 COLLATE NOCASE, vt0.c0 ASC;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END))<=(((((rt1.c2, rt0.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, x'')))))) INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))IS((rt1.c2 IN ()))) WHERE (CAST(CAST(rt0.c0 AS REAL) AS BLOB)) ORDER BY ((((rt0.c0) BETWEEN (0.5088325806211089) AND (rt0.c1)))LIKE(CASE WHEN 2.05068539E9 THEN vt0.c0 END))  NULLS LAST, INSTR('a\gdZI]', CAST(rt1.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END))<=(((((rt1.c2, rt0.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, x'')))))) INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))IS((rt1.c2 IN ()))) ORDER BY ((((rt0.c0) BETWEEN (0.5088325806211089) AND (rt0.c1)))LIKE(CASE WHEN 2.05068539E9 THEN vt0.c0 END))  NULLS LAST, INSTR('a\gdZI]', CAST(rt1.c1 AS BLOB)));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END))<=(((((rt1.c2, rt0.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, x'')))))) INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))IS((rt1.c2 IN ()))) WHERE (CAST(CAST(rt0.c0 AS REAL) AS BLOB)) ORDER BY ((((rt0.c0) BETWEEN (0.5088325806211089) AND (rt0.c1)))LIKE(CASE WHEN 2.05068539E9 THEN vt0.c0 END))  NULLS LAST, INSTR('a\gdZI]', CAST(rt1.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END))<=(((((rt1.c2, rt0.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, x'')))))) INNER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))IS((rt1.c2 IN ()))) ORDER BY ((((rt0.c0) BETWEEN (0.5088325806211089) AND (rt0.c1)))LIKE(CASE WHEN 2.05068539E9 THEN vt0.c0 END))  NULLS LAST, INSTR('a\gdZI]', CAST(rt1.c1 AS BLOB)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON NULL COLLATE NOCASE WHERE ((~ (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON NULL COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON NULL COLLATE NOCASE WHERE ((~ (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON NULL COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON NULL COLLATE NOCASE WHERE ((~ (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN NULL THEN rt1.c1 ELSE rt1.c3 END THEN CAST(rt1.c3 AS REAL) WHEN ((rt1.c3)%(rt0.c2)) THEN ((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN CASE WHEN rt0.c2 THEN rt1.c1 END END WHERE (((x'')<(((rt1.c3)||(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'')<(((rt1.c3)||(rt1.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN NULL THEN rt1.c1 ELSE rt1.c3 END THEN CAST(rt1.c3 AS REAL) WHEN ((rt1.c3)%(rt0.c2)) THEN ((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN CASE WHEN rt0.c2 THEN rt1.c1 END END);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN NULL THEN rt1.c1 ELSE rt1.c3 END THEN CAST(rt1.c3 AS REAL) WHEN ((rt1.c3)%(rt0.c2)) THEN ((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN CASE WHEN rt0.c2 THEN rt1.c1 END END WHERE (((x'')<(((rt1.c3)||(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'')<(((rt1.c3)||(rt1.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN NULL THEN rt1.c1 ELSE rt1.c3 END THEN CAST(rt1.c3 AS REAL) WHEN ((rt1.c3)%(rt0.c2)) THEN ((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN CASE WHEN rt0.c2 THEN rt1.c1 END END);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN NULL THEN rt1.c1 ELSE rt1.c3 END THEN CAST(rt1.c3 AS REAL) WHEN ((rt1.c3)%(rt0.c2)) THEN ((((rt1.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)) THEN CASE WHEN rt0.c2 THEN rt1.c1 END END WHERE (((x'')<(((rt1.c3)||(rt1.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c0))>(('-152454390'))) THEN (NOT (rt0.c0)) END WHERE (((((rt0.c2)LIKE(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c0))>(('-152454390'))) THEN (NOT (rt0.c0)) END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c0))>(('-152454390'))) THEN (NOT (rt0.c0)) END WHERE (((((rt0.c2)LIKE(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c0))>(('-152454390'))) THEN (NOT (rt0.c0)) END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c0))>(('-152454390'))) THEN (NOT (rt0.c0)) END WHERE (((((rt0.c2)LIKE(vt0.c0))) NOT NULL));
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS TEXT))) AND ((((((rt0.c0)AND(0.2519453635264084)))AND(rt0.c0)), ((rt0.c0)>(rt0.c2)), rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS TEXT))) AND ((((((rt0.c0)AND(0.2519453635264084)))AND(rt0.c0)), ((rt0.c0)>(rt0.c2)), rt0.c2))) ASC);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS TEXT))) AND ((((((rt0.c0)AND(0.2519453635264084)))AND(rt0.c0)), ((rt0.c0)>(rt0.c2)), rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS TEXT))) AND ((((((rt0.c0)AND(0.2519453635264084)))AND(rt0.c0)), ((rt0.c0)>(rt0.c2)), rt0.c2))) ASC);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS TEXT))) AND ((((((rt0.c0)AND(0.2519453635264084)))AND(rt0.c0)), ((rt0.c0)>(rt0.c2)), rt0.c2))) ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c3) ORDER BY (+ ((+ (rt0.c0)))) ASC, CAST(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ ((+ (rt0.c0)))) ASC, CAST(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END AS INTEGER) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c3) ORDER BY (+ ((+ (rt0.c0)))) ASC, CAST(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ ((+ (rt0.c0)))) ASC, CAST(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END AS INTEGER) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c3) ORDER BY (+ ((+ (rt0.c0)))) ASC, CAST(CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END AS INTEGER) ASC;
SELECT * FROM vt0, rt1 WHERE ((((1.183700525E9)) BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c3))))) AND ((((rt1.c3)GLOB(rt1.c1)))))) ORDER BY (((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((1.183700525E9)) BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c3))))) AND ((((rt1.c3)GLOB(rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((1.183700525E9)) BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c3))))) AND ((((rt1.c3)GLOB(rt1.c1)))))) ORDER BY (((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((1.183700525E9)) BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c3))))) AND ((((rt1.c3)GLOB(rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((1.183700525E9)) BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c3))))) AND ((((rt1.c3)GLOB(rt1.c1)))))) ORDER BY (((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (IFNULL(DISTINCT rt1.c0 COLLATE NOCASE, -718966962 COLLATE RTRIM)) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT rt1.c0 COLLATE NOCASE, -718966962 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY TOTAL_CHANGES()  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (IFNULL(DISTINCT rt1.c0 COLLATE NOCASE, -718966962 COLLATE RTRIM)) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT rt1.c0 COLLATE NOCASE, -718966962 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY TOTAL_CHANGES()  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (IFNULL(DISTINCT rt1.c0 COLLATE NOCASE, -718966962 COLLATE RTRIM)) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON NULL COLLATE RTRIM RIGHT OUTER JOIN rt0 ON (((rt0.c1)|(rt1.c0)) IN (((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), LOWER(rt1.c2))) WHERE (CASE rt0.c1  WHEN CAST(NULL AS BLOB) THEN (- (rt1.c2)) WHEN (('-448767482') NOT NULL) THEN CASE rt1.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END WHEN IFNULL(rt0.c2, rt1.c3) THEN ((rt1.c3)==(x'')) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN rt1.c3 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN CAST(NULL AS BLOB) THEN (- (rt1.c2)) WHEN (('-448767482') NOT NULL) THEN CASE rt1.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END WHEN IFNULL(rt0.c2, rt1.c3) THEN ((rt1.c3)=(x'')) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON NULL COLLATE RTRIM RIGHT OUTER JOIN rt0 ON (((rt0.c1)|(rt1.c0)) IN (((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), LOWER(rt1.c2))) ORDER BY CAST(CASE WHEN vt0.c0 THEN rt1.c3 END AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON NULL COLLATE RTRIM RIGHT OUTER JOIN rt0 ON (((rt0.c1)|(rt1.c0)) IN (((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), LOWER(rt1.c2))) WHERE (CASE rt0.c1  WHEN CAST(NULL AS BLOB) THEN (- (rt1.c2)) WHEN (('-448767482') NOT NULL) THEN CASE rt1.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END WHEN IFNULL(rt0.c2, rt1.c3) THEN ((rt1.c3)==(x'')) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN rt1.c3 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN CAST(NULL AS BLOB) THEN (- (rt1.c2)) WHEN (('-448767482') NOT NULL) THEN CASE rt1.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END WHEN IFNULL(rt0.c2, rt1.c3) THEN ((rt1.c3)=(x'')) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON NULL COLLATE RTRIM RIGHT OUTER JOIN rt0 ON (((rt0.c1)|(rt1.c0)) IN (((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), LOWER(rt1.c2))) ORDER BY CAST(CASE WHEN vt0.c0 THEN rt1.c3 END AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON NULL COLLATE RTRIM RIGHT OUTER JOIN rt0 ON (((rt0.c1)|(rt1.c0)) IN (((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), LOWER(rt1.c2))) WHERE (CASE rt0.c1  WHEN CAST(NULL AS BLOB) THEN (- (rt1.c2)) WHEN (('-448767482') NOT NULL) THEN CASE rt1.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END WHEN IFNULL(rt0.c2, rt1.c3) THEN ((rt1.c3)==(x'')) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN rt1.c3 END AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((-1609430475) NOT NULL)) ORDER BY (- (((((rt1.c1)AND(rt1.c2)))OR(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-1609430475) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (- (((((rt1.c1)AND(rt1.c2)))OR(rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((-1609430475) NOT NULL)) ORDER BY (- (((((rt1.c1)AND(rt1.c2)))OR(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-1609430475) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (- (((((rt1.c1)AND(rt1.c2)))OR(rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((-1609430475) NOT NULL)) ORDER BY (- (((((rt1.c1)AND(rt1.c2)))OR(rt1.c1))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (CASE x'004c'  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)<>(vt0.c0)) ELSE ((vt0.c0)|(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'004c'  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)<>(vt0.c0)) ELSE ((vt0.c0)|(NULL)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE x'004c'  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)<>(vt0.c0)) ELSE ((vt0.c0)|(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'004c'  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)<>(vt0.c0)) ELSE ((vt0.c0)|(NULL)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE x'004c'  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)<>(vt0.c0)) ELSE ((vt0.c0)|(NULL)) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((vt0.c0)<=(vt0.c0)) ELSE LOWER(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((vt0.c0)<=(vt0.c0)) ELSE LOWER(DISTINCT vt0.c0) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((vt0.c0)<=(vt0.c0)) ELSE LOWER(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((vt0.c0)<=(vt0.c0)) ELSE LOWER(DISTINCT vt0.c0) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((vt0.c0)<=(vt0.c0)) ELSE LOWER(DISTINCT vt0.c0) END);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)-(rt1.c1)))||(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)-(rt1.c1)))||(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)-(rt1.c1)))||(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)-(rt1.c1)))||(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)-(rt1.c1)))||(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)OR((rt1.c1 IN ())))) ORDER BY ((NULL)<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)OR((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL)<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)OR((rt1.c1 IN ())))) ORDER BY ((NULL)<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)OR((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL)<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)OR((rt1.c1 IN ())))) ORDER BY ((NULL)<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1, rt0 WHERE (CAST(UPPER(NULL) AS NUMERIC)) ORDER BY ((+ (rt0.c0)) IN (rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((+ (rt0.c0)) IN (rt1.c1))  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (CAST(UPPER(NULL) AS NUMERIC)) ORDER BY ((+ (rt0.c0)) IN (rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((+ (rt0.c0)) IN (rt1.c1))  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (CAST(UPPER(NULL) AS NUMERIC)) ORDER BY ((+ (rt0.c0)) IN (rt1.c1))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((((rt1.c3)>>(rt1.c1))) NOT BETWEEN (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c3))) AND (vt0.c0))) ORDER BY (((((rt1.c2 IN ()))AND(DATETIME(vt0.c0, 0.7465631516284533, rt1.c2))))OR(CAST(rt1.c2 AS REAL))) ASC, rt1.c1 DESC, (((((rt1.c2)&(rt1.c3))))>=((((rt1.c3)+(406861337))))) ASC, ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((-2.04583521E9)))))>=(((rt1.c3 IN (rt1.c2, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>>(rt1.c1))) NOT BETWEEN (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c3))) AND (vt0.c0))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY (((((rt1.c2 IN ()))AND(DATETIME(vt0.c0, 0.7465631516284533, rt1.c2))))OR(CAST(rt1.c2 AS REAL))) ASC, rt1.c1 DESC, (((((rt1.c2)&(rt1.c3))))>=((((rt1.c3)+(406861337))))) ASC, ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((-2.04583521E9)))))>=(((rt1.c3 IN (rt1.c2, vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((((rt1.c3)>>(rt1.c1))) NOT BETWEEN (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c3))) AND (vt0.c0))) ORDER BY (((((rt1.c2 IN ()))AND(DATETIME(vt0.c0, 0.7465631516284533, rt1.c2))))OR(CAST(rt1.c2 AS REAL))) ASC, rt1.c1 DESC, (((((rt1.c2)&(rt1.c3))))>=((((rt1.c3)+(406861337))))) ASC, ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((-2.04583521E9)))))>=(((rt1.c3 IN (rt1.c2, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>>(rt1.c1))) NOT BETWEEN (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c3))) AND (vt0.c0))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY (((((rt1.c2 IN ()))AND(DATETIME(vt0.c0, 0.7465631516284533, rt1.c2))))OR(CAST(rt1.c2 AS REAL))) ASC, rt1.c1 DESC, (((((rt1.c2)&(rt1.c3))))>=((((rt1.c3)+(406861337))))) ASC, ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((-2.04583521E9)))))>=(((rt1.c3 IN (rt1.c2, vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((((rt1.c3)>>(rt1.c1))) NOT BETWEEN (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c3))) AND (vt0.c0))) ORDER BY (((((rt1.c2 IN ()))AND(DATETIME(vt0.c0, 0.7465631516284533, rt1.c2))))OR(CAST(rt1.c2 AS REAL))) ASC, rt1.c1 DESC, (((((rt1.c2)&(rt1.c3))))>=((((rt1.c3)+(406861337))))) ASC, ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((-2.04583521E9)))))>=(((rt1.c3 IN (rt1.c2, vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN (rt1.c2)))IS NOT(('#xg&%A' IN (rt1.c2)))) CROSS JOIN vt0 ON x'b4a5' WHERE ('%䘋');
SELECT SUM(count) FROM (SELECT (('%䘋') IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN (rt1.c2)))IS NOT(('#xg&%A' IN (rt1.c2)))) CROSS JOIN vt0 ON x'b4a5');
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN (rt1.c2)))IS NOT(('#xg&%A' IN (rt1.c2)))) CROSS JOIN vt0 ON x'b4a5' WHERE ('%䘋');
SELECT SUM(count) FROM (SELECT (('%䘋') IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN (rt1.c2)))IS NOT(('#xg&%A' IN (rt1.c2)))) CROSS JOIN vt0 ON x'b4a5');
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON (((rt0.c1 IN (rt1.c2)))IS NOT(('#xg&%A' IN (rt1.c2)))) CROSS JOIN vt0 ON x'b4a5' WHERE ('%䘋');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ('1751347401');
SELECT SUM(count) FROM (SELECT (('1751347401') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('1751347401');
SELECT SUM(count) FROM (SELECT (('1751347401') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('1751347401');
SELECT ALL * FROM vt0, rt1 WHERE ((- (CASE rt1.c0  WHEN '' THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt1.c0  WHEN '' THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (CASE rt1.c0  WHEN '' THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt1.c0  WHEN '' THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (CASE rt1.c0  WHEN '' THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE NULL END)));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c2 COLLATE NOCASE)LIKE(CAST(vt0.c0 AS BLOB)))) ORDER BY ((rt0.c1)>(rt0.c0)) COLLATE RTRIM, CAST(((rt0.c0)==(rt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)LIKE(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((rt0.c1)>(rt0.c0)) COLLATE RTRIM, CAST(((rt0.c0)=(rt0.c0)) AS REAL) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c2 COLLATE NOCASE)LIKE(CAST(vt0.c0 AS BLOB)))) ORDER BY ((rt0.c1)>(rt0.c0)) COLLATE RTRIM, CAST(((rt0.c0)==(rt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)LIKE(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((rt0.c1)>(rt0.c0)) COLLATE RTRIM, CAST(((rt0.c0)=(rt0.c0)) AS REAL) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c2 COLLATE NOCASE)LIKE(CAST(vt0.c0 AS BLOB)))) ORDER BY ((rt0.c1)>(rt0.c0)) COLLATE RTRIM, CAST(((rt0.c0)==(rt0.c0)) AS REAL) DESC;
SELECT COUNT(*) FROM rt1, vt0 NOT INDEXED, rt0 WHERE ((- ((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM rt1, vt0 NOT INDEXED, rt0 WHERE ((- ((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM rt1, vt0 NOT INDEXED, rt0 WHERE ((- ((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))))) ORDER BY vt0.c0 DESC;
SELECT * FROM rt0 WHERE ((+ (((rt0.c2)>=(rt0.c1))))) ORDER BY rt0.c1 DESC, TYPEOF(DISTINCT COALESCE(DISTINCT rt0.c0, NULL, rt0.c2, rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC, TYPEOF(DISTINCT COALESCE(DISTINCT rt0.c0, NULL, rt0.c2, rt0.c1)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (((rt0.c2)>=(rt0.c1))))) ORDER BY rt0.c1 DESC, TYPEOF(DISTINCT COALESCE(DISTINCT rt0.c0, NULL, rt0.c2, rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC, TYPEOF(DISTINCT COALESCE(DISTINCT rt0.c0, NULL, rt0.c2, rt0.c1)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (((rt0.c2)>=(rt0.c1))))) ORDER BY rt0.c1 DESC, TYPEOF(DISTINCT COALESCE(DISTINCT rt0.c0, NULL, rt0.c2, rt0.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN ((rt0.c1)|(rt1.c0)) ELSE 0.984760136702478 END WHERE ('-1817170057') ORDER BY ((((rt0.c2) BETWEEN ('-234418483') AND (rt0.c2)))+(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c0 END))  NULLS LAST, 0.298231511487968 ASC, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1817170057') IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN ((rt0.c1)|(rt1.c0)) ELSE 0.984760136702478 END ORDER BY ((((rt0.c2) BETWEEN ('-234418483') AND (rt0.c2)))+(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c0 END))  NULLS LAST, 0.298231511487968 ASC, rt0.c2  NULLS LAST);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN ((rt0.c1)|(rt1.c0)) ELSE 0.984760136702478 END WHERE ('-1817170057') ORDER BY ((((rt0.c2) BETWEEN ('-234418483') AND (rt0.c2)))+(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c0 END))  NULLS LAST, 0.298231511487968 ASC, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1817170057') IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN ((rt0.c1)|(rt1.c0)) ELSE 0.984760136702478 END ORDER BY ((((rt0.c2) BETWEEN ('-234418483') AND (rt0.c2)))+(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c0 END))  NULLS LAST, 0.298231511487968 ASC, rt0.c2  NULLS LAST);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN ((rt0.c1)|(rt1.c0)) ELSE 0.984760136702478 END WHERE ('-1817170057') ORDER BY ((((rt0.c2) BETWEEN ('-234418483') AND (rt0.c2)))+(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt0.c0 END))  NULLS LAST, 0.298231511487968 ASC, rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((((NULL IN ()))OR((((rt1.c3, x'095f', '', rt1.c2, rt1.c3, rt1.c3, rt1.c0))>((rt1.c3, 1.1919522E9, rt1.c3, rt1.c0, rt1.c3, rt1.c3, rt1.c1))))))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0Xffffffffc4e7cad0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))OR((((rt1.c3, x'095f', '', rt1.c2, rt1.c3, rt1.c3, rt1.c0))>((rt1.c3, 1.1919522E9, rt1.c3, rt1.c0, rt1.c3, rt1.c3, rt1.c1))))))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0xffffffffc4e7cad0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((NULL IN ()))OR((((rt1.c3, x'095f', '', rt1.c2, rt1.c3, rt1.c3, rt1.c0))>((rt1.c3, 1.1919522E9, rt1.c3, rt1.c0, rt1.c3, rt1.c3, rt1.c1))))))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0Xffffffffc4e7cad0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))OR((((rt1.c3, x'095f', '', rt1.c2, rt1.c3, rt1.c3, rt1.c0))>((rt1.c3, 1.1919522E9, rt1.c3, rt1.c0, rt1.c3, rt1.c3, rt1.c1))))))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0xffffffffc4e7cad0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((NULL IN ()))OR((((rt1.c3, x'095f', '', rt1.c2, rt1.c3, rt1.c3, rt1.c0))>((rt1.c3, 1.1919522E9, rt1.c3, rt1.c0, rt1.c3, rt1.c3, rt1.c1))))))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0Xffffffffc4e7cad0)))));
SELECT * FROM rt0, rt1, vt0 WHERE (CAST(((rt0.c1) IS TRUE) AS INTEGER)) ORDER BY CASE ((((rt1.c1)AND(rt1.c3)))OR(rt0.c1))  WHEN TIME(rt1.c2, 0x10f99290, 2.102721815E9) THEN ((NULL)IS(rt0.c1)) WHEN '+F' THEN ((rt1.c1) NOTNULL) WHEN CAST(rt1.c3 AS BLOB) THEN (rt1.c1 IN ()) ELSE (rt1.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE ((((rt1.c1)AND(rt1.c3)))OR(rt0.c1))  WHEN TIME(rt1.c2, 0x10f99290, 2.102721815E9) THEN ((NULL)IS(rt0.c1)) WHEN '+F' THEN ((rt1.c1) NOTNULL) WHEN CAST(rt1.c3 AS BLOB) THEN (rt1.c1 IN ()) ELSE (rt1.c1 IN ()) END  NULLS LAST);
SELECT * FROM rt0, rt1, vt0 WHERE (CAST(((rt0.c1) IS TRUE) AS INTEGER)) ORDER BY CASE ((((rt1.c1)AND(rt1.c3)))OR(rt0.c1))  WHEN TIME(rt1.c2, 0x10f99290, 2.102721815E9) THEN ((NULL)IS(rt0.c1)) WHEN '+F' THEN ((rt1.c1) NOTNULL) WHEN CAST(rt1.c3 AS BLOB) THEN (rt1.c1 IN ()) ELSE (rt1.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE ((((rt1.c1)AND(rt1.c3)))OR(rt0.c1))  WHEN TIME(rt1.c2, 0x10f99290, 2.102721815E9) THEN ((NULL)IS(rt0.c1)) WHEN '+F' THEN ((rt1.c1) NOTNULL) WHEN CAST(rt1.c3 AS BLOB) THEN (rt1.c1 IN ()) ELSE (rt1.c1 IN ()) END  NULLS LAST);
SELECT * FROM rt0, rt1, vt0 WHERE (CAST(((rt0.c1) IS TRUE) AS INTEGER)) ORDER BY CASE ((((rt1.c1)AND(rt1.c3)))OR(rt0.c1))  WHEN TIME(rt1.c2, 0x10f99290, 2.102721815E9) THEN ((NULL)IS(rt0.c1)) WHEN '+F' THEN ((rt1.c1) NOTNULL) WHEN CAST(rt1.c3 AS BLOB) THEN (rt1.c1 IN ()) ELSE (rt1.c1 IN ()) END  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c3)))>=(rt1.c2)) RIGHT OUTER JOIN rt1 ON x'a3fd' WHERE (((CAST(rt0.c0 AS BLOB))==(vt0.c0))) ORDER BY CAST(CASE '402359071'  WHEN rt0.c2 THEN '*jus' END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))=(vt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c3)))>=(rt1.c2)) RIGHT OUTER JOIN rt1 ON x'a3fd' ORDER BY CAST(CASE '402359071'  WHEN rt0.c2 THEN '*jus' END AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c3)))>=(rt1.c2)) RIGHT OUTER JOIN rt1 ON x'a3fd' WHERE (((CAST(rt0.c0 AS BLOB))==(vt0.c0))) ORDER BY CAST(CASE '402359071'  WHEN rt0.c2 THEN '*jus' END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))=(vt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c3)))>=(rt1.c2)) RIGHT OUTER JOIN rt1 ON x'a3fd' ORDER BY CAST(CASE '402359071'  WHEN rt0.c2 THEN '*jus' END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (NULL) ORDER BY (+ (CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (+ (CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (NULL) ORDER BY (+ (CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (+ (CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (NULL) ORDER BY (+ (CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)) DESC;
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (+ (((((((((1.850772207E9)OR(rt1.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS(rt1.c0)) AS REAL) WHERE (((rt0.c0)>>(((rt1.c2)LIKE(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>>(((rt1.c2)LIKE(rt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (+ (((((((((1.850772207E9)OR(rt1.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS(rt1.c0)) AS REAL));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (+ (((((((((1.850772207E9)OR(rt1.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS(rt1.c0)) AS REAL) WHERE (((rt0.c0)>>(((rt1.c2)LIKE(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>>(((rt1.c2)LIKE(rt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (+ (((((((((1.850772207E9)OR(rt1.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS(rt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((TRIM(DISTINCT vt0.c0))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY json_array_length((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c0))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY json_array_length((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((TRIM(DISTINCT vt0.c0))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY json_array_length((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c0))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY json_array_length((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt1.c3)LIKE(rt1.c3)))=((((NULL))==((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)LIKE(rt1.c3)))=((((NULL))=((rt0.c1)))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt1.c3)LIKE(rt1.c3)))=((((NULL))==((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)LIKE(rt1.c3)))=((((NULL))=((rt0.c1)))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt1.c3)LIKE(rt1.c3)))=((((NULL))==((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, rt1 NOT INDEXED, vt0 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS INTEGER) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(rt1.c2 AS INTEGER) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 NOT INDEXED, vt0 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS INTEGER) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(rt1.c2 AS INTEGER) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 NOT INDEXED, vt0 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS INTEGER) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c0)) BETWEEN ((((((vt0.c0)OR(NULL)))OR(vt0.c0)))) AND ((CAST(rt0.c0 AS REAL)))) WHERE ((~ (rt0.c1))) ORDER BY ((SUBSTR(rt1.c0, rt0.c0)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c0)) BETWEEN ((((((vt0.c0)OR(NULL)))OR(vt0.c0)))) AND ((CAST(rt0.c0 AS REAL)))) ORDER BY ((SUBSTR(rt1.c0, rt0.c0)) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c0)) BETWEEN ((((((vt0.c0)OR(NULL)))OR(vt0.c0)))) AND ((CAST(rt0.c0 AS REAL)))) WHERE ((~ (rt0.c1))) ORDER BY ((SUBSTR(rt1.c0, rt0.c0)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c0)) BETWEEN ((((((vt0.c0)OR(NULL)))OR(vt0.c0)))) AND ((CAST(rt0.c0 AS REAL)))) ORDER BY ((SUBSTR(rt1.c0, rt0.c0)) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c0)) BETWEEN ((((((vt0.c0)OR(NULL)))OR(vt0.c0)))) AND ((CAST(rt0.c0 AS REAL)))) WHERE ((~ (rt0.c1))) ORDER BY ((SUBSTR(rt1.c0, rt0.c0)) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((rt1.c1 IN ()) IN (((rt0.c1)AND(rt1.c1)))) CROSS JOIN rt1 ON ((rt1.c2)OR(CAST(rt0.c1 AS REAL))) WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt1.c1 IN ()) IN (((rt0.c1)AND(rt1.c1)))) CROSS JOIN rt1 ON ((rt1.c2)OR(CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((rt1.c1 IN ()) IN (((rt0.c1)AND(rt1.c1)))) CROSS JOIN rt1 ON ((rt1.c2)OR(CAST(rt0.c1 AS REAL))) WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt1.c1 IN ()) IN (((rt0.c1)AND(rt1.c1)))) CROSS JOIN rt1 ON ((rt1.c2)OR(CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) ISNULL)) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) ISNULL)) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) ISNULL)) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (rt0.c0) ORDER BY (- (((rt0.c2) NOT BETWEEN ('-1456884685') AND (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (- (((rt0.c2) NOT BETWEEN ('-1456884685') AND (rt1.c1)))) DESC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (rt0.c0) ORDER BY (- (((rt0.c2) NOT BETWEEN ('-1456884685') AND (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (- (((rt0.c2) NOT BETWEEN ('-1456884685') AND (rt1.c1)))) DESC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (rt0.c0) ORDER BY (- (((rt0.c2) NOT BETWEEN ('-1456884685') AND (rt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c0)==(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)=(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c0)==(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)=(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c0)==(rt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE ((((NOT (NULL)))<>(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))<>(x'' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((NOT (NULL)))<>(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))<>(x'' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((NOT (NULL)))<>(x'' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c3)||(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)||(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c3)||(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)||(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c3)||(rt0.c2))) NOT NULL));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((((((rt1.c1)*(rt0.c0)))OR(x'')))AND((rt1.c0 IN ()))))OR((rt0.c1 IN ()))))OR(((((rt0.c0)AND(rt0.c0)))OR(vt0.c0))))) ORDER BY CAST(CASE WHEN rt0.c1 THEN '-990812026' WHEN vt0.c0 THEN x'0b74' WHEN 0xffffffffc7e36493 THEN rt0.c0 END AS REAL) DESC, (((rt0.c0)>(NULL)) IN ())  NULLS LAST, ((((rt1.c0) BETWEEN (rt0.c1) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)*(rt0.c0)))OR(x'')))AND((rt1.c0 IN ()))))OR((rt0.c1 IN ()))))OR(((((rt0.c0)AND(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN '-990812026' WHEN vt0.c0 THEN x'0b74' WHEN 0xffffffffc7e36493 THEN rt0.c0 END AS REAL) DESC, (((rt0.c0)>(NULL)) IN ())  NULLS LAST, ((((rt1.c0) BETWEEN (rt0.c1) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((((((rt1.c1)*(rt0.c0)))OR(x'')))AND((rt1.c0 IN ()))))OR((rt0.c1 IN ()))))OR(((((rt0.c0)AND(rt0.c0)))OR(vt0.c0))))) ORDER BY CAST(CASE WHEN rt0.c1 THEN '-990812026' WHEN vt0.c0 THEN x'0b74' WHEN 0xffffffffc7e36493 THEN rt0.c0 END AS REAL) DESC, (((rt0.c0)>(NULL)) IN ())  NULLS LAST, ((((rt1.c0) BETWEEN (rt0.c1) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)*(rt0.c0)))OR(x'')))AND((rt1.c0 IN ()))))OR((rt0.c1 IN ()))))OR(((((rt0.c0)AND(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN '-990812026' WHEN vt0.c0 THEN x'0b74' WHEN 0xffffffffc7e36493 THEN rt0.c0 END AS REAL) DESC, (((rt0.c0)>(NULL)) IN ())  NULLS LAST, ((((rt1.c0) BETWEEN (rt0.c1) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((((((rt1.c1)*(rt0.c0)))OR(x'')))AND((rt1.c0 IN ()))))OR((rt0.c1 IN ()))))OR(((((rt0.c0)AND(rt0.c0)))OR(vt0.c0))))) ORDER BY CAST(CASE WHEN rt0.c1 THEN '-990812026' WHEN vt0.c0 THEN x'0b74' WHEN 0xffffffffc7e36493 THEN rt0.c0 END AS REAL) DESC, (((rt0.c0)>(NULL)) IN ())  NULLS LAST, ((((rt1.c0) BETWEEN (rt0.c1) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0))>=((rt0.c1))))GLOB(((rt1.c0)<>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>=((rt0.c1))))GLOB(((rt1.c0)<>(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0))>=((rt0.c1))))GLOB(((rt1.c0)<>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>=((rt0.c1))))GLOB(((rt1.c0)<>(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0))>=((rt0.c1))))GLOB(((rt1.c0)<>(rt1.c2)))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)<<(vt0.c0)))IS NOT(CAST(1490193135 AS REAL))) WHERE (((((rt0.c1) NOTNULL))&((~ (rt0.c1))))) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))&((~ (rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)<<(vt0.c0)))IS NOT(CAST(1490193135 AS REAL))) ORDER BY '' ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)<<(vt0.c0)))IS NOT(CAST(1490193135 AS REAL))) WHERE (((((rt0.c1) NOTNULL))&((~ (rt0.c1))))) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))&((~ (rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)<<(vt0.c0)))IS NOT(CAST(1490193135 AS REAL))) ORDER BY '' ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)<<(vt0.c0)))IS NOT(CAST(1490193135 AS REAL))) WHERE (((((rt0.c1) NOTNULL))&((~ (rt0.c1))))) ORDER BY '' ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((CAST(rt1.c0 AS BLOB))|(((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB))|(((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((CAST(rt1.c0 AS BLOB))|(((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB))|(((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((CAST(rt1.c0 AS BLOB))|(((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)/(rt0.c1 COLLATE BINARY)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)/(rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)/(rt0.c1 COLLATE BINARY)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)/(rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)/(rt0.c1 COLLATE BINARY)) WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1) NOTNULL))AND(rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c0)-(rt0.c1))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c0)-(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1) NOTNULL))AND(rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1) NOTNULL))AND(rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c0)-(rt0.c1))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c0)-(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1) NOTNULL))AND(rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1) NOTNULL))AND(rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c0)-(rt0.c1))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN (((((vt0.c0)AND(rt0.c1)))OR(rt1.c3))) AND (x'')) CROSS JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN ((rt1.c0)<<(rt0.c0)) END WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))))) ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(rt1.c1 AS TEXT)))  NULLS FIRST, ((((((x'')OR(rt1.c1)))AND(rt0.c2))) NOT BETWEEN (rt1.c0) AND (vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN (((((vt0.c0)AND(rt0.c1)))OR(rt1.c3))) AND (x'')) CROSS JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN ((rt1.c0)<<(rt0.c0)) END ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(rt1.c1 AS TEXT)))  NULLS FIRST, ((((((x'')OR(rt1.c1)))AND(rt0.c2))) NOT BETWEEN (rt1.c0) AND (vt0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN (((((vt0.c0)AND(rt0.c1)))OR(rt1.c3))) AND (x'')) CROSS JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN ((rt1.c0)<<(rt0.c0)) END WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))))) ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(rt1.c1 AS TEXT)))  NULLS FIRST, ((((((x'')OR(rt1.c1)))AND(rt0.c2))) NOT BETWEEN (rt1.c0) AND (vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN (((((vt0.c0)AND(rt0.c1)))OR(rt1.c3))) AND (x'')) CROSS JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN ((rt1.c0)<<(rt0.c0)) END ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(rt1.c1 AS TEXT)))  NULLS FIRST, ((((((x'')OR(rt1.c1)))AND(rt0.c2))) NOT BETWEEN (rt1.c0) AND (vt0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN (((((vt0.c0)AND(rt0.c1)))OR(rt1.c3))) AND (x'')) CROSS JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN ((rt1.c0)<<(rt0.c0)) END WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))))) ORDER BY ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(rt1.c1 AS TEXT)))  NULLS FIRST, ((((((x'')OR(rt1.c1)))AND(rt0.c2))) NOT BETWEEN (rt1.c0) AND (vt0.c0 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN (((((rt0.c2))>=((rt0.c0))))) AND (((- (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((rt0.c2))>=((rt0.c0))))) AND (((- (rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN (((((rt0.c2))>=((rt0.c0))))) AND (((- (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((rt0.c2))>=((rt0.c0))))) AND (((- (rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN (((((rt0.c2))>=((rt0.c0))))) AND (((- (rt0.c0))))));
SELECT ALL * FROM vt0, rt1, rt0 WHERE ('-1871522872');
SELECT SUM(count) FROM (SELECT ALL (('-1871522872') IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ('-1871522872');
SELECT SUM(count) FROM (SELECT ALL (('-1871522872') IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ('-1871522872');
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ABS(DISTINCT vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN SQLITE_VERSION() ELSE ((((0.8520824402522184)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ABS(DISTINCT vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN SQLITE_VERSION() ELSE ((((0.8520824402522184)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ABS(DISTINCT vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN SQLITE_VERSION() ELSE ((((0.8520824402522184)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ABS(DISTINCT vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN SQLITE_VERSION() ELSE ((((0.8520824402522184)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ABS(DISTINCT vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN SQLITE_VERSION() ELSE ((((0.8520824402522184)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE) DESC  NULLS FIRST, (+ (((((rt1.c1)OR('dYiO-xh')))AND(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE) DESC  NULLS FIRST, (+ (((((rt1.c1)OR('dYiO-xh')))AND(rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE) DESC  NULLS FIRST, (+ (((((rt1.c1)OR('dYiO-xh')))AND(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE) DESC  NULLS FIRST, (+ (((((rt1.c1)OR('dYiO-xh')))AND(rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE) DESC  NULLS FIRST, (+ (((((rt1.c1)OR('dYiO-xh')))AND(rt1.c1))))  NULLS FIRST;
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt0.c2)<<('\r*W+\t')))IS NOT(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<('\r*W+\t')))IS NOT(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt0.c2)<<('\r*W+\t')))IS NOT(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<('\r*W+\t')))IS NOT(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt0.c2)<<('\r*W+\t')))IS NOT(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt0.c0 THEN 0.28092174672083436 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c2 END)/(((rt0.c0)>(rt0.c0))))) ORDER BY json(((((rt1.c1)AND(vt0.c0)))AND(rt1.c3)))  NULLS FIRST, ((json_remove(rt0.c1, rt1.c0)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt0.c2)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN 0.28092174672083436 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c2 END)/(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY json(((((rt1.c1)AND(vt0.c0)))AND(rt1.c3)))  NULLS FIRST, ((json_remove(rt0.c1, rt1.c0)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt0.c2)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt0.c0 THEN 0.28092174672083436 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c2 END)/(((rt0.c0)>(rt0.c0))))) ORDER BY json(((((rt1.c1)AND(vt0.c0)))AND(rt1.c3)))  NULLS FIRST, ((json_remove(rt0.c1, rt1.c0)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt0.c2)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN 0.28092174672083436 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c2 END)/(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY json(((((rt1.c1)AND(vt0.c0)))AND(rt1.c3)))  NULLS FIRST, ((json_remove(rt0.c1, rt1.c0)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt0.c2)<=(vt0.c0)))));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt0.c2)IS(rt1.c2))) AND (((((((((rt0.c0)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))) WHERE (((rt0.c2) BETWEEN ((NOT (rt1.c0))) AND (((rt0.c0) ISNULL)))) ORDER BY (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(NULL)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ((NOT (rt1.c0))) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt0.c2)IS(rt1.c2))) AND (((((((((rt0.c0)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))) ORDER BY (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(NULL)) IN ()));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt0.c2)IS(rt1.c2))) AND (((((((((rt0.c0)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))) WHERE (((rt0.c2) BETWEEN ((NOT (rt1.c0))) AND (((rt0.c0) ISNULL)))) ORDER BY (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(NULL)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ((NOT (rt1.c0))) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt0.c2)IS(rt1.c2))) AND (((((((((rt0.c0)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))) ORDER BY (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(NULL)) IN ()));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2))) BETWEEN (((rt0.c2)IS(rt1.c2))) AND (((((((((rt0.c0)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))) WHERE (((rt0.c2) BETWEEN ((NOT (rt1.c0))) AND (((rt0.c0) ISNULL)))) ORDER BY (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(NULL)) IN ());
SELECT * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))/(((vt0.c0)<>(vt0.c0))))) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt0.c0))))/(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))/(((vt0.c0)<>(vt0.c0))))) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt0.c0))))/(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))/(((vt0.c0)<>(vt0.c0))))) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(NULLIF(DISTINCT rt1.c1, rt1.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(DISTINCT rt1.c1, rt1.c2) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(NULLIF(DISTINCT rt1.c1, rt1.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(DISTINCT rt1.c1, rt1.c2) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(NULLIF(DISTINCT rt1.c1, rt1.c2) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0X2d49f401)) NOT BETWEEN ((0.8144835075752892)) AND ((vt0.c0))))) AND ((((rt0.c1)%(0.5468964193877492))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((0x2d49f401)) NOT BETWEEN ((0.8144835075752892)) AND ((vt0.c0))))) AND ((((rt0.c1)%(0.5468964193877492)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0X2d49f401)) NOT BETWEEN ((0.8144835075752892)) AND ((vt0.c0))))) AND ((((rt0.c1)%(0.5468964193877492))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((0x2d49f401)) NOT BETWEEN ((0.8144835075752892)) AND ((vt0.c0))))) AND ((((rt0.c1)%(0.5468964193877492)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0X2d49f401)) NOT BETWEEN ((0.8144835075752892)) AND ((vt0.c0))))) AND ((((rt0.c1)%(0.5468964193877492))))));
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((NULL)) AND ((((vt0.c0)-(vt0.c0)))))) ORDER BY TYPEOF(((0.336451432382849)||(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((NULL)) AND ((((vt0.c0)-(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY TYPEOF(((0.336451432382849)||(vt0.c0))) ASC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((NULL)) AND ((((vt0.c0)-(vt0.c0)))))) ORDER BY TYPEOF(((0.336451432382849)||(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((NULL)) AND ((((vt0.c0)-(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY TYPEOF(((0.336451432382849)||(vt0.c0))) ASC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((NULL)) AND ((((vt0.c0)-(vt0.c0)))))) ORDER BY TYPEOF(((0.336451432382849)||(vt0.c0))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3)<<(rt1.c1)))|(UNLIKELY(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)<<(rt1.c1)))|(UNLIKELY(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3)<<(rt1.c1)))|(UNLIKELY(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)<<(rt1.c1)))|(UNLIKELY(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3)<<(rt1.c1)))|(UNLIKELY(DISTINCT rt1.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c3 IN ()) COLLATE BINARY) ORDER BY json_array_length(GLOB(rt1.c1, rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY json_array_length(GLOB(rt1.c1, rt1.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c3 IN ()) COLLATE BINARY) ORDER BY json_array_length(GLOB(rt1.c1, rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY json_array_length(GLOB(rt1.c1, rt1.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c3 IN ()) COLLATE BINARY) ORDER BY json_array_length(GLOB(rt1.c1, rt1.c0)) DESC;
SELECT * FROM rt1 WHERE (0.5358474386688042) ORDER BY 1.215878638E9  NULLS LAST, '0.21217448403405403'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5358474386688042) IS TRUE)  as count FROM rt1 ORDER BY 1.215878638E9  NULLS LAST, '0.21217448403405403'  NULLS FIRST);
SELECT * FROM rt1 WHERE (0.5358474386688042) ORDER BY 1.215878638E9  NULLS LAST, '0.21217448403405403'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5358474386688042) IS TRUE)  as count FROM rt1 ORDER BY 1.215878638E9  NULLS LAST, '0.21217448403405403'  NULLS FIRST);
SELECT * FROM rt1 WHERE (0.5358474386688042) ORDER BY 1.215878638E9  NULLS LAST, '0.21217448403405403'  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (((vt0.c0)>=(rt1.c1))) ORDER BY ((vt0.c0)<<(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=(rt1.c1))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0)<<(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((vt0.c0)>=(rt1.c1))) ORDER BY ((vt0.c0)<<(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=(rt1.c1))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0)<<(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((vt0.c0)>=(rt1.c1))) ORDER BY ((vt0.c0)<<(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)) AS BLOB) WHERE (((((rt0.c0)<=(rt1.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (rt1.c3 COLLATE NOCASE))) ORDER BY ((((((((((((((((rt1.c2)AND(rt1.c3)))AND('430943850')))OR(vt0.c0)))OR(rt1.c0)))OR(x'd2c8')))AND(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0)))))AND((~ (rt1.c1)))))OR(rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt1.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)) AS BLOB) ORDER BY ((((((((((((((((rt1.c2)AND(rt1.c3)))AND('430943850')))OR(vt0.c0)))OR(rt1.c0)))OR(x'd2c8')))AND(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0)))))AND((~ (rt1.c1)))))OR(rt1.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)) AS BLOB) WHERE (((((rt0.c0)<=(rt1.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (rt1.c3 COLLATE NOCASE))) ORDER BY ((((((((((((((((rt1.c2)AND(rt1.c3)))AND('430943850')))OR(vt0.c0)))OR(rt1.c0)))OR(x'd2c8')))AND(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0)))))AND((~ (rt1.c1)))))OR(rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt1.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)) AS BLOB) ORDER BY ((((((((((((((((rt1.c2)AND(rt1.c3)))AND('430943850')))OR(vt0.c0)))OR(rt1.c0)))OR(x'd2c8')))AND(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0)))))AND((~ (rt1.c1)))))OR(rt1.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)) AS BLOB) WHERE (((((rt0.c0)<=(rt1.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (rt1.c3 COLLATE NOCASE))) ORDER BY ((((((((((((((((rt1.c2)AND(rt1.c3)))AND('430943850')))OR(vt0.c0)))OR(rt1.c0)))OR(x'd2c8')))AND(((((rt1.c0)AND(vt0.c0)))AND(rt1.c0)))))AND((~ (rt1.c1)))))OR(rt1.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE ('Y2Z');
SELECT SUM(count) FROM (SELECT (('Y2Z') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('Y2Z');
SELECT SUM(count) FROM (SELECT (('Y2Z') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('Y2Z');
SELECT * FROM vt0, rt1, rt0 WHERE (CAST((((rt1.c2, rt1.c3, rt1.c3)) BETWEEN ((rt1.c3, rt1.c3, rt1.c3)) AND ((rt1.c2, '-1980297498', rt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2, rt1.c3, rt1.c3)) BETWEEN ((rt1.c3, rt1.c3, rt1.c3)) AND ((rt1.c2, '-1980297498', rt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (CAST((((rt1.c2, rt1.c3, rt1.c3)) BETWEEN ((rt1.c3, rt1.c3, rt1.c3)) AND ((rt1.c2, '-1980297498', rt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2, rt1.c3, rt1.c3)) BETWEEN ((rt1.c3, rt1.c3, rt1.c3)) AND ((rt1.c2, '-1980297498', rt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (CAST((((rt1.c2, rt1.c3, rt1.c3)) BETWEEN ((rt1.c3, rt1.c3, rt1.c3)) AND ((rt1.c2, '-1980297498', rt0.c1))) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)|(rt0.c1))) IS FALSE)) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0xffffffffc419dfbb ELSE rt0.c0 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0Xffffffffc419dfbb ELSE rt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)|(rt0.c1))) IS FALSE)) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0xffffffffc419dfbb ELSE rt0.c0 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0Xffffffffc419dfbb ELSE rt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)|(rt0.c1))) IS FALSE)) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0xffffffffc419dfbb ELSE rt0.c0 END) IS FALSE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN (vt0.c0)))||((rt0.c0 IN (vt0.c0))))) ORDER BY LIKE((vt0.c0 IN (rt0.c1)), ((rt0.c0)-(vt0.c0))) ASC, CAST(((0.5426770106737807) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (vt0.c0)))||((rt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKE((vt0.c0 IN (rt0.c1)), ((rt0.c0)-(vt0.c0))) ASC, CAST(((0.5426770106737807) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN (vt0.c0)))||((rt0.c0 IN (vt0.c0))))) ORDER BY LIKE((vt0.c0 IN (rt0.c1)), ((rt0.c0)-(vt0.c0))) ASC, CAST(((0.5426770106737807) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (vt0.c0)))||((rt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKE((vt0.c0 IN (rt0.c1)), ((rt0.c0)-(vt0.c0))) ASC, CAST(((0.5426770106737807) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN (vt0.c0)))||((rt0.c0 IN (vt0.c0))))) ORDER BY LIKE((vt0.c0 IN (rt0.c1)), ((rt0.c0)-(vt0.c0))) ASC, CAST(((0.5426770106737807) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1713438323');
SELECT SUM(count) FROM (SELECT ALL (('-1713438323') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1713438323');
SELECT SUM(count) FROM (SELECT ALL (('-1713438323') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1713438323');
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) ISNULL)))>=((((rt0.c0)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) ISNULL)))>=((((rt0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) ISNULL)))>=((((rt0.c0)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) ISNULL)))>=((((rt0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) ISNULL)))>=((((rt0.c0)<(rt0.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c1)GLOB(rt1.c0)), ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt1.c1)GLOB(rt1.c0)), ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c1)GLOB(rt1.c0)), ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt1.c1)GLOB(rt1.c0)), ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c1)GLOB(rt1.c0)), ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((((rt0.c2))<=((rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<=((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((((rt0.c2))<=((rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<=((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((((rt0.c2))<=((rt0.c0))) AS NUMERIC));
SELECT * FROM rt0 NOT INDEXED WHERE (((rt0.c0)IS NOT(CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)IS NOT(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt0 NOT INDEXED WHERE (((rt0.c0)IS NOT(CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)IS NOT(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt0 NOT INDEXED WHERE (((rt0.c0)IS NOT(CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c2 ASC;
SELECT * FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c2);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE)LIKE(LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE)LIKE(LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE)LIKE(LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE)LIKE(LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE)LIKE(LOWER(DISTINCT rt0.c2))));
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((rt1.c3)<>('-1883652515')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((rt1.c3)<>('-1883652515')) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((rt1.c3)<>('-1883652515')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((rt1.c3)<>('-1883652515')) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((rt1.c3)<>('-1883652515')) END);
SELECT * FROM rt0 WHERE ((((((rt0.c0))<((rt0.c1)))) IS TRUE)) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=(((rt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<((rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<>(((rt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c0))<((rt0.c1)))) IS TRUE)) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=(((rt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<((rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<>(((rt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c0))<((rt0.c1)))) IS TRUE)) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=(((rt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN '-718966962' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) NOT NULL)))) ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)) THEN vt0.c0 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c1 AS INTEGER) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0)&(vt0.c0)) WHEN (~ ('')) THEN ((rt0.c2)%(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN '-718966962' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)) THEN vt0.c0 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c1 AS INTEGER) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0)&(vt0.c0)) WHEN (~ ('')) THEN ((rt0.c2)%(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, vt0.c0))) END ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN '-718966962' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) NOT NULL)))) ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)) THEN vt0.c0 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c1 AS INTEGER) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0)&(vt0.c0)) WHEN (~ ('')) THEN ((rt0.c2)%(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN '-718966962' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)) THEN vt0.c0 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c1 AS INTEGER) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0)&(vt0.c0)) WHEN (~ ('')) THEN ((rt0.c2)%(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, vt0.c0))) END ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN '-718966962' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) NOT NULL)))) ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)) THEN vt0.c0 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c1 AS INTEGER) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0)&(vt0.c0)) WHEN (~ ('')) THEN ((rt0.c2)%(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, vt0.c0))) END ASC;
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE ((((((((((('-31305924') IS FALSE))OR(((rt1.c3)<(rt1.c1)))))OR((rt1.c3 IN ()))))AND(rt1.c0 COLLATE BINARY)))OR(rt1.c3))) ORDER BY CAST(((x'')<(rt1.c3)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((('-31305924') IS FALSE))OR(((rt1.c3)<(rt1.c1)))))OR((rt1.c3 IN ()))))AND(rt1.c0 COLLATE BINARY)))OR(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((x'')<(rt1.c3)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE ((((((((((('-31305924') IS FALSE))OR(((rt1.c3)<(rt1.c1)))))OR((rt1.c3 IN ()))))AND(rt1.c0 COLLATE BINARY)))OR(rt1.c3))) ORDER BY CAST(((x'')<(rt1.c3)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((('-31305924') IS FALSE))OR(((rt1.c3)<(rt1.c1)))))OR((rt1.c3 IN ()))))AND(rt1.c0 COLLATE BINARY)))OR(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((x'')<(rt1.c3)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE ((((((((((('-31305924') IS FALSE))OR(((rt1.c3)<(rt1.c1)))))OR((rt1.c3 IN ()))))AND(rt1.c0 COLLATE BINARY)))OR(rt1.c3))) ORDER BY CAST(((x'')<(rt1.c3)) AS TEXT)  NULLS FIRST;
SELECT * FROM rt1, rt0, vt0 WHERE (((((rt1.c2)>=(rt1.c2)))=(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)>=(rt1.c2)))==(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (((((rt1.c2)>=(rt1.c2)))=(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)>=(rt1.c2)))==(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (((((rt1.c2)>=(rt1.c2)))=(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c3 END)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))AND((- (rt1.c3)))))OR(rt1.c1)) WHERE ((NOT (((rt1.c2)<<(rt1.c2))))) ORDER BY ((((((((rt1.c2)AND(((rt1.c3)*(vt0.c0)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(((rt1.c1)>(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2)<<(rt1.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))AND((- (rt1.c3)))))OR(rt1.c1)) ORDER BY ((((((((rt1.c2)AND(((rt1.c3)*(vt0.c0)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(((rt1.c1)>(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))AND((- (rt1.c3)))))OR(rt1.c1)) WHERE ((NOT (((rt1.c2)<<(rt1.c2))))) ORDER BY ((((((((rt1.c2)AND(((rt1.c3)*(vt0.c0)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(((rt1.c1)>(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2)<<(rt1.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))AND((- (rt1.c3)))))OR(rt1.c1)) ORDER BY ((((((((rt1.c2)AND(((rt1.c3)*(vt0.c0)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(((rt1.c1)>(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))AND((- (rt1.c3)))))OR(rt1.c1)) WHERE ((NOT (((rt1.c2)<<(rt1.c2))))) ORDER BY ((((((((rt1.c2)AND(((rt1.c3)*(vt0.c0)))))AND(CAST(rt1.c1 AS INTEGER))))OR(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(((rt1.c1)>(rt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0)))));
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE (((((rt1.c3))==((rt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3))==((rt1.c2))) IN ())) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL);
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE (((((rt1.c3))==((rt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3))==((rt1.c2))) IN ())) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL);
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN vt0 ON NULL WHERE (((((rt1.c3))==((rt1.c2))) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0))IS NOT(IFNULL(DISTINCT rt0.c1, rt1.c1))) FULL OUTER JOIN rt1 ON rt0.c1 WHERE ((vt0.c0 IN (rt1.c0))) ORDER BY (((((('1848215714')OR(rt0.c0)))OR(rt1.c1)))<<((((x''))>((rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (rt1.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0))IS NOT(IFNULL(DISTINCT rt0.c1, rt1.c1))) FULL OUTER JOIN rt1 ON rt0.c1 ORDER BY (((((('1848215714')OR(rt0.c0)))OR(rt1.c1)))<<((((x''))>((rt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0))IS NOT(IFNULL(DISTINCT rt0.c1, rt1.c1))) FULL OUTER JOIN rt1 ON rt0.c1 WHERE ((vt0.c0 IN (rt1.c0))) ORDER BY (((((('1848215714')OR(rt0.c0)))OR(rt1.c1)))<<((((x''))>((rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (rt1.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((LIKELY(DISTINCT rt1.c0))IS NOT(IFNULL(DISTINCT rt0.c1, rt1.c1))) FULL OUTER JOIN rt1 ON rt0.c1 ORDER BY (((((('1848215714')OR(rt0.c0)))OR(rt1.c1)))<<((((x''))>((rt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 NATURAL JOIN rt0 WHERE (json((~ (rt0.c0)))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((json((~ (rt0.c0)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0 ORDER BY rt1.c1 ASC);
SELECT ALL * FROM rt1, vt0 NATURAL JOIN rt0 WHERE (json((~ (rt0.c0)))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((json((~ (rt0.c0)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0 ORDER BY rt1.c1 ASC);
SELECT ALL * FROM rt1, vt0 NATURAL JOIN rt0 WHERE (json((~ (rt0.c0)))) ORDER BY rt1.c1 ASC;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (-1696314602) ORDER BY (((('1751347401')||(rt1.c2)))AND(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1696314602) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((('1751347401')||(rt1.c2)))AND(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (-1696314602) ORDER BY (((('1751347401')||(rt1.c2)))AND(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1696314602) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((('1751347401')||(rt1.c2)))AND(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (-1696314602) ORDER BY (((('1751347401')||(rt1.c2)))AND(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT * FROM rt1 CROSS JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((((rt1.c2, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c3, NULL, rt1.c3))))) AND (((~ (rt1.c1))))) WHERE (CASE rt1.c0  WHEN '0.984760136702478' THEN rt1.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN '0.984760136702478' THEN rt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((((rt1.c2, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c3, NULL, rt1.c3))))) AND (((~ (rt1.c1))))));
SELECT * FROM rt1 CROSS JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((((rt1.c2, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c3, NULL, rt1.c3))))) AND (((~ (rt1.c1))))) WHERE (CASE rt1.c0  WHEN '0.984760136702478' THEN rt1.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN '0.984760136702478' THEN rt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((((rt1.c2, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c3, NULL, rt1.c3))))) AND (((~ (rt1.c1))))));
SELECT * FROM rt1 CROSS JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((((rt1.c2, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c3, NULL, rt1.c3))))) AND (((~ (rt1.c1))))) WHERE (CASE rt1.c0  WHEN '0.984760136702478' THEN rt1.c2 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, TYPEOF(DISTINCT x'')));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT vt0.c0, TYPEOF(DISTINCT x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, TYPEOF(DISTINCT x'')));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT vt0.c0, TYPEOF(DISTINCT x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, TYPEOF(DISTINCT x'')));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((rt0.c0, rt0.c0, vt0.c0))<>((vt0.c0, 0x7765a049, rt0.c0))))*(LAST_INSERT_ROWID())) FULL OUTER JOIN vt0 ON CASE WHEN (((0.015299981228060311)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (((rt1.c0, NULL, rt0.c1))<((rt1.c0, 'M|I,', vt0.c0))) ELSE (rt0.c2 IN (rt1.c1)) END WHERE (DATETIME((((rt1.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, 1425266218)) AND ((-1152768526, rt1.c2, rt1.c2))), rt1.c3, ((((rt0.c1)AND(vt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((((rt1.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, 1425266218)) AND ((-1152768526, rt1.c2, rt1.c2))), rt1.c3, ((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt0.c0, rt0.c0, vt0.c0))<>((vt0.c0, 0x7765a049, rt0.c0))))*(LAST_INSERT_ROWID())) FULL OUTER JOIN vt0 ON CASE WHEN (((0.015299981228060311)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (((rt1.c0, NULL, rt0.c1))<((rt1.c0, 'M|I,', vt0.c0))) ELSE (rt0.c2 IN (rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((rt0.c0, rt0.c0, vt0.c0))<>((vt0.c0, 0x7765a049, rt0.c0))))*(LAST_INSERT_ROWID())) FULL OUTER JOIN vt0 ON CASE WHEN (((0.015299981228060311)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (((rt1.c0, NULL, rt0.c1))<((rt1.c0, 'M|I,', vt0.c0))) ELSE (rt0.c2 IN (rt1.c1)) END WHERE (DATETIME((((rt1.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, 1425266218)) AND ((-1152768526, rt1.c2, rt1.c2))), rt1.c3, ((((rt0.c1)AND(vt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((((rt1.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, 1425266218)) AND ((-1152768526, rt1.c2, rt1.c2))), rt1.c3, ((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt0.c0, rt0.c0, vt0.c0))<>((vt0.c0, 0x7765a049, rt0.c0))))*(LAST_INSERT_ROWID())) FULL OUTER JOIN vt0 ON CASE WHEN (((0.015299981228060311)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (((rt1.c0, NULL, rt0.c1))<((rt1.c0, 'M|I,', vt0.c0))) ELSE (rt0.c2 IN (rt1.c1)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))AND((- (vt0.c0)))))AND(((rt0.c0)AND(rt0.c1)))))OR(((rt0.c2)LIKE(vt0.c0)))))OR(0.8138143322729924)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))AND((- (vt0.c0)))))AND(((rt0.c0)AND(rt0.c1)))))OR(((rt0.c2)LIKE(vt0.c0)))))OR(0.8138143322729924)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))AND((- (vt0.c0)))))AND(((rt0.c0)AND(rt0.c1)))))OR(((rt0.c2)LIKE(vt0.c0)))))OR(0.8138143322729924)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))AND((- (vt0.c0)))))AND(((rt0.c0)AND(rt0.c1)))))OR(((rt0.c2)LIKE(vt0.c0)))))OR(0.8138143322729924)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))AND((- (vt0.c0)))))AND(((rt0.c0)AND(rt0.c1)))))OR(((rt0.c2)LIKE(vt0.c0)))))OR(0.8138143322729924)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT * FROM vt0, rt1, rt0 WHERE (UNLIKELY((+ (rt0.c2)))) ORDER BY CASE WHEN ((rt1.c3)IS NOT(vt0.c0)) THEN CAST(rt1.c1 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((+ (rt0.c2)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN ((rt1.c3)IS NOT(vt0.c0)) THEN CAST(rt1.c1 AS TEXT) END ASC);
SELECT * FROM vt0, rt1, rt0 WHERE (UNLIKELY((+ (rt0.c2)))) ORDER BY CASE WHEN ((rt1.c3)IS NOT(vt0.c0)) THEN CAST(rt1.c1 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((+ (rt0.c2)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN ((rt1.c3)IS NOT(vt0.c0)) THEN CAST(rt1.c1 AS TEXT) END ASC);
SELECT * FROM vt0, rt1, rt0 WHERE (UNLIKELY((+ (rt0.c2)))) ORDER BY CASE WHEN ((rt1.c3)IS NOT(vt0.c0)) THEN CAST(rt1.c1 AS TEXT) END ASC;
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c3)IS(rt1.c2)))LIKE('-941398893'))) ORDER BY ((+ (NULL)) IN (CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)IS(rt1.c2)))LIKE('-941398893'))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((+ (NULL)) IN (CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c3)IS(rt1.c2)))LIKE('-941398893'))) ORDER BY ((+ (NULL)) IN (CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)IS(rt1.c2)))LIKE('-941398893'))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((+ (NULL)) IN (CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c3)IS(rt1.c2)))LIKE('-941398893'))) ORDER BY ((+ (NULL)) IN (CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((rt1.c1 IN ())) ORDER BY 0.42563252780533967 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.42563252780533967 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((rt1.c1 IN ())) ORDER BY 0.42563252780533967 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.42563252780533967 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((rt1.c1 IN ())) ORDER BY 0.42563252780533967 COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt1 WHERE ((((~ (rt1.c2))) IS TRUE)) ORDER BY ((CAST(rt1.c3 AS REAL)) NOT BETWEEN ((rt1.c2 IN ())) AND (rt1.c1 COLLATE BINARY)) ASC, CASE WHEN ((rt1.c0)<<(rt1.c1)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)) ELSE CASE rt1.c0  WHEN -1.06328491E9 THEN rt1.c3 ELSE rt1.c2 END END ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS REAL)) NOT BETWEEN ((rt1.c2 IN ())) AND (rt1.c1 COLLATE BINARY)) ASC, CASE WHEN ((rt1.c0)<<(rt1.c1)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)) ELSE CASE rt1.c0  WHEN -1.06328491E9 THEN rt1.c3 ELSE rt1.c2 END END ASC  NULLS LAST, NULL  NULLS LAST);
SELECT * FROM rt1 WHERE ((((~ (rt1.c2))) IS TRUE)) ORDER BY ((CAST(rt1.c3 AS REAL)) NOT BETWEEN ((rt1.c2 IN ())) AND (rt1.c1 COLLATE BINARY)) ASC, CASE WHEN ((rt1.c0)<<(rt1.c1)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)) ELSE CASE rt1.c0  WHEN -1.06328491E9 THEN rt1.c3 ELSE rt1.c2 END END ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS REAL)) NOT BETWEEN ((rt1.c2 IN ())) AND (rt1.c1 COLLATE BINARY)) ASC, CASE WHEN ((rt1.c0)<<(rt1.c1)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)) ELSE CASE rt1.c0  WHEN -1.06328491E9 THEN rt1.c3 ELSE rt1.c2 END END ASC  NULLS LAST, NULL  NULLS LAST);
SELECT * FROM rt1 WHERE ((((~ (rt1.c2))) IS TRUE)) ORDER BY ((CAST(rt1.c3 AS REAL)) NOT BETWEEN ((rt1.c2 IN ())) AND (rt1.c1 COLLATE BINARY)) ASC, CASE WHEN ((rt1.c0)<<(rt1.c1)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)) ELSE CASE rt1.c0  WHEN -1.06328491E9 THEN rt1.c3 ELSE rt1.c2 END END ASC  NULLS LAST, NULL  NULLS LAST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((IFNULL(DISTINCT rt0.c2, rt0.c1))OR((- (rt1.c0)))))OR(((rt0.c1)IS NOT(rt0.c2)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN ()) WHERE ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((IFNULL(DISTINCT rt0.c2, rt0.c1))OR((- (rt1.c0)))))OR(((rt0.c1)IS NOT(rt0.c2)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((IFNULL(DISTINCT rt0.c2, rt0.c1))OR((- (rt1.c0)))))OR(((rt0.c1)IS NOT(rt0.c2)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN ()) WHERE ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((IFNULL(DISTINCT rt0.c2, rt0.c1))OR((- (rt1.c0)))))OR(((rt0.c1)IS NOT(rt0.c2)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((IFNULL(DISTINCT rt0.c2, rt0.c1))OR((- (rt1.c0)))))OR(((rt0.c1)IS NOT(rt0.c2)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN ()) WHERE ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((((rt1.c0)OR(rt0.c1)))AND(rt1.c0)))||(vt0.c0 COLLATE BINARY))) ORDER BY LIKELY(CASE WHEN '' THEN vt0.c0 ELSE rt1.c0 END), ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt0.c1)))AND(rt1.c0)))||(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY LIKELY(CASE WHEN '' THEN vt0.c0 ELSE rt1.c0 END), ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((((rt1.c0)OR(rt0.c1)))AND(rt1.c0)))||(vt0.c0 COLLATE BINARY))) ORDER BY LIKELY(CASE WHEN '' THEN vt0.c0 ELSE rt1.c0 END), ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt0.c1)))AND(rt1.c0)))||(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY LIKELY(CASE WHEN '' THEN vt0.c0 ELSE rt1.c0 END), ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((((rt1.c0)OR(rt0.c1)))AND(rt1.c0)))||(vt0.c0 COLLATE BINARY))) ORDER BY LIKELY(CASE WHEN '' THEN vt0.c0 ELSE rt1.c0 END), ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (rt1.c1) ORDER BY ((NULL) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((NULL) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (rt1.c1) ORDER BY ((NULL) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((NULL) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (rt1.c1) ORDER BY ((NULL) NOTNULL)  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((TRIM(1490193135)))<=(((rt1.c2 IN ())))) LEFT OUTER JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((LIKELIHOOD(DISTINCT rt1.c0, 0.05652309109420639)))) WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((TRIM(1490193135)))<=(((rt1.c2 IN ())))) LEFT OUTER JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((LIKELIHOOD(DISTINCT rt1.c0, 0.05652309109420639)))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((TRIM(1490193135)))<=(((rt1.c2 IN ())))) LEFT OUTER JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((LIKELIHOOD(DISTINCT rt1.c0, 0.05652309109420639)))) WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((TRIM(1490193135)))<=(((rt1.c2 IN ())))) LEFT OUTER JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((LIKELIHOOD(DISTINCT rt1.c0, 0.05652309109420639)))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((TRIM(1490193135)))<=(((rt1.c2 IN ())))) LEFT OUTER JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((LIKELIHOOD(DISTINCT rt1.c0, 0.05652309109420639)))) WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)=(rt1.c1)))-(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))OR(0X30111532)))OR(rt1.c1))))) ORDER BY LIKE(rt1.c3, rt1.c3, 'M') COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)==(rt1.c1)))-(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))OR(0X30111532)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY LIKE(rt1.c3, rt1.c3, 'M') COLLATE NOCASE ASC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)=(rt1.c1)))-(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))OR(0X30111532)))OR(rt1.c1))))) ORDER BY LIKE(rt1.c3, rt1.c3, 'M') COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)==(rt1.c1)))-(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))OR(0X30111532)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY LIKE(rt1.c3, rt1.c3, 'M') COLLATE NOCASE ASC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)=(rt1.c1)))-(((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))OR(0X30111532)))OR(rt1.c1))))) ORDER BY LIKE(rt1.c3, rt1.c3, 'M') COLLATE NOCASE ASC;
