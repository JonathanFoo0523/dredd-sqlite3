-- Time: 2024/06/09 20:20:44
-- Database: database24
-- Database version: 3.40.0
-- seed value: 2404518224
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 2ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.09272710840590592 WHERE ((((x'5289')%(vt0.c0))) BETWEEN ((('261284471')%(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1968234297'); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4632'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=('261284471'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE 0.6613326654243614; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '51446'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1407163665);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 261284471);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1170554551); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE (CAST(vt0.c0 AS BLOB) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.834033568663968 WHERE ((((CAST(vt0.c0 AS BLOB))AND((vt0.c0 IN ()))))AND((((vt0.c0))<((vt0.c0))))); -- 1ms;
UPDATE OR FAIL vt0 SET c0=0.4625608430044448, c0=NULL; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE main; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((x'')||(-851612109))); -- 0ms;
UPDATE vt0 SET c0='1968234297', c0=NULL, c0=0.16728232137407395; -- 0ms;
ANALYZE temp; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 1ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1.968234297E9); -- 0ms;
PRAGMA main.mmap_size = -1967009396334367275; -- 0ms;
ANALYZE vt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='' WHERE (- (CASE WHEN vt0.c0 THEN '0.4625608430044448' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1968234297' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
ANALYZE vt0; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=644401582, c0=x'', c0=x'3c34'; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(1407163665, x'', '644401582'); -- 1ms;
PRAGMA main.secure_delete = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-403785536', c0=0.834033568663968 WHERE (NOT (vt0.c0)); -- 0ms;
PRAGMA cache_size = 1455508675738643342; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64543'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(0.19720136278291778) WHERE ((vt0.c0 COLLATE RTRIM)&((vt0.c0 IN ()))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((((NULL)OR(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((((vt0.c0)=(vt0.c0))) IS FALSE); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2039164280); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(1833362637, x'f355') WHERE (((vt0.c0 IN ())) NOTNULL); -- 1ms;
VACUUM main; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'283677a8'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=1550776925, c0=0.040008496687441; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33412'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 792117174); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1338571537') WHERE (((vt0.c0) NOTNULL) IN ()); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 1ms;
PRAGMA foreign_keys; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0X6d46e4cd) WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('1394734550', NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(1407163665, '') WHERE vt0.c0; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1901607815' WHERE CASE WHEN vt0.c0 THEN 0.2855105241984275 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
PRAGMA temp.cell_size_check = false; -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
SELECT ALL * FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN x'da5f' THEN NULL ELSE v0.c0 END)))OR(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ROUND((+ (v0.c0)), ((v0.c0)OR(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN x'da5f' THEN NULL ELSE v0.c0 END)))OR(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ROUND((+ (v0.c0)), ((v0.c0)OR(v0.c0)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN x'da5f' THEN NULL ELSE v0.c0 END)))OR(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ROUND((+ (v0.c0)), ((v0.c0)OR(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN x'da5f' THEN NULL ELSE v0.c0 END)))OR(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ROUND((+ (v0.c0)), ((v0.c0)OR(v0.c0)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN x'da5f' THEN NULL ELSE v0.c0 END)))OR(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ROUND((+ (v0.c0)), ((v0.c0)OR(v0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (HEX((+ (t0.c0)))) ORDER BY ((NULL) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((+ (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) NOT NULL) ASC);
SELECT COUNT(*) FROM t0 WHERE (HEX((+ (t0.c0)))) ORDER BY ((NULL) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((+ (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) NOT NULL) ASC);
SELECT COUNT(*) FROM t0 WHERE (HEX((+ (t0.c0)))) ORDER BY ((NULL) NOT NULL) ASC;
SELECT ALL * FROM v0, t0, vt0 WHERE ((((vt0.c0) BETWEEN (x'') AND (v0.c0)) IN ())) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (x'') AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((vt0.c0) BETWEEN (x'') AND (v0.c0)) IN ())) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (x'') AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((vt0.c0) BETWEEN (x'') AND (v0.c0)) IN ())) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL))))) ORDER BY ((((+ (v0.c0))))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((+ (v0.c0))))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL))))) ORDER BY ((((+ (v0.c0))))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((+ (v0.c0))))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL))))) ORDER BY ((((+ (v0.c0))))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE (((((v0.c0) BETWEEN (x'7fc8bb24') AND (t0.c0)))<((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (x'7fc8bb24') AND (t0.c0)))<((+ (v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((v0.c0) BETWEEN (x'7fc8bb24') AND (t0.c0)))<((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (x'7fc8bb24') AND (t0.c0)))<((+ (v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((v0.c0) BETWEEN (x'7fc8bb24') AND (t0.c0)))<((+ (v0.c0)))));
SELECT ALL * FROM t0, v0, vt0 WHERE (((HEX(v0.c0))==(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(v0.c0))=(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((HEX(v0.c0))==(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(v0.c0))=(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((HEX(v0.c0))==(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON ((t0.c0) IS TRUE) WHERE (((((t0.c0))>((0X6d46e4cd))) IN ())) ORDER BY ((~ (t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0))>((0x6d46e4cd))) IN ())) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON ((t0.c0) IS TRUE) ORDER BY ((~ (t0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON ((t0.c0) IS TRUE) WHERE (((((t0.c0))>((0X6d46e4cd))) IN ())) ORDER BY ((~ (t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0))>((0x6d46e4cd))) IN ())) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON ((t0.c0) IS TRUE) ORDER BY ((~ (t0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON ((t0.c0) IS TRUE) WHERE (((((t0.c0))>((0X6d46e4cd))) IN ())) ORDER BY ((~ (t0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)=(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)==(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)=(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)==(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)=(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((NULL, v0.c0, '-713436968'))<(('-403785536', t0.c0, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL, v0.c0, '-713436968'))<(('-403785536', t0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((NULL, v0.c0, '-713436968'))<(('-403785536', t0.c0, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL, v0.c0, '-713436968'))<(('-403785536', t0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((NULL, v0.c0, '-713436968'))<(('-403785536', t0.c0, v0.c0))) IN ()));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)IS(vt0.c0))  WHEN ((vt0.c0)OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS(vt0.c0))  WHEN ((vt0.c0)OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)IS(vt0.c0))  WHEN ((vt0.c0)OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS(vt0.c0))  WHEN ((vt0.c0)OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)IS(vt0.c0))  WHEN ((vt0.c0)OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END END);
SELECT * FROM vt0 WHERE (LIKELY((+ (vt0.c0)))) ORDER BY load_extension(vt0.c0) COLLATE RTRIM  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))&((- (vt0.c0))))  NULLS FIRST, (~ ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY((+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(vt0.c0) COLLATE RTRIM  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))&((- (vt0.c0))))  NULLS FIRST, (~ ((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (LIKELY((+ (vt0.c0)))) ORDER BY load_extension(vt0.c0) COLLATE RTRIM  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))&((- (vt0.c0))))  NULLS FIRST, (~ ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY((+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(vt0.c0) COLLATE RTRIM  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))&((- (vt0.c0))))  NULLS FIRST, (~ ((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'')OR(((v0.c0)OR(v0.c0)))))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((v0.c0)OR(v0.c0)))))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'')OR(((v0.c0)OR(v0.c0)))))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((v0.c0)OR(v0.c0)))))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'')OR(((v0.c0)OR(v0.c0)))))AND(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN 0.18883802018756157 WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END THEN ((vt0.c0)>(t0.c0)) ELSE ('126584884' IN ()) END) ORDER BY ((UNICODE(t0.c0))LIKE(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN 0.18883802018756157 WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END THEN ((vt0.c0)>(t0.c0)) ELSE ('126584884' IN ()) END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((UNICODE(t0.c0))LIKE(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN 0.18883802018756157 WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END THEN ((vt0.c0)>(t0.c0)) ELSE ('126584884' IN ()) END) ORDER BY ((UNICODE(t0.c0))LIKE(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN 0.18883802018756157 WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END THEN ((vt0.c0)>(t0.c0)) ELSE ('126584884' IN ()) END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((UNICODE(t0.c0))LIKE(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN 0.18883802018756157 WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END THEN ((vt0.c0)>(t0.c0)) ELSE ('126584884' IN ()) END) ORDER BY ((UNICODE(t0.c0))LIKE(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN (v0.c0))))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((NULL)IS NOT(v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (NULL)) END;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((NULL)IS NOT(v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (NULL)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN (v0.c0))))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((NULL)IS NOT(v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (NULL)) END;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((NULL)IS NOT(v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (NULL)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN (v0.c0))))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((NULL)IS NOT(v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (NULL)) END;
SELECT * FROM t0, v0 WHERE ((((v0.c0, 0.19720136278291778, v0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(v0.c0)), ((t0.c0)AND(t0.c0)), TRIM(t0.c0, t0.c0))) AND (((x'e783' IN (t0.c0, t0.c0)), CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE x'' END, t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, 0.19720136278291778, v0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(v0.c0)), ((t0.c0)AND(t0.c0)), TRIM(t0.c0, t0.c0))) AND (((x'e783' IN (t0.c0, t0.c0)), CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE x'' END, t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((v0.c0, 0.19720136278291778, v0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(v0.c0)), ((t0.c0)AND(t0.c0)), TRIM(t0.c0, t0.c0))) AND (((x'e783' IN (t0.c0, t0.c0)), CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE x'' END, t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, 0.19720136278291778, v0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(v0.c0)), ((t0.c0)AND(t0.c0)), TRIM(t0.c0, t0.c0))) AND (((x'e783' IN (t0.c0, t0.c0)), CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE x'' END, t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((v0.c0, 0.19720136278291778, v0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(v0.c0)), ((t0.c0)AND(t0.c0)), TRIM(t0.c0, t0.c0))) AND (((x'e783' IN (t0.c0, t0.c0)), CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE x'' END, t0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((x'')GLOB(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((x'')GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((x'')GLOB(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((x'')GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((x'')GLOB(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)<<(v0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))==((NOT (t0.c0)))) WHERE (CAST(NULL AS REAL)) ORDER BY ((0.7938408288001553 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)<<(v0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))=((NOT (t0.c0)))) ORDER BY ((0.7938408288001553 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)<<(v0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))==((NOT (t0.c0)))) WHERE (CAST(NULL AS REAL)) ORDER BY ((0.7938408288001553 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)<<(v0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))=((NOT (t0.c0)))) ORDER BY ((0.7938408288001553 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)<<(v0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))==((NOT (t0.c0)))) WHERE (CAST(NULL AS REAL)) ORDER BY ((0.7938408288001553 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) IS FALSE)));
SELECT * FROM t0, vt0 WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY (((~ (vt0.c0)))>=((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.c0)))>=((t0.c0 IN ()))));
SELECT * FROM t0, vt0 WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY (((~ (vt0.c0)))>=((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.c0)))>=((t0.c0 IN ()))));
SELECT * FROM t0, vt0 WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY (((~ (vt0.c0)))>=((t0.c0 IN ())));
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOTNULL)) AND ((((t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY CASE ((0Xffffffffcd3d6e33) NOT BETWEEN (0.8558452524682764) AND (t0.c0))  WHEN UPPER(t0.c0) THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END  NULLS LAST, ((((t0.c0)<>(t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOTNULL)) AND ((((t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((0xffffffffcd3d6e33) NOT BETWEEN (0.8558452524682764) AND (t0.c0))  WHEN UPPER(t0.c0) THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END  NULLS LAST, ((((t0.c0)<>(t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOTNULL)) AND ((((t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY CASE ((0Xffffffffcd3d6e33) NOT BETWEEN (0.8558452524682764) AND (t0.c0))  WHEN UPPER(t0.c0) THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END  NULLS LAST, ((((t0.c0)<>(t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOTNULL)) AND ((((t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((0xffffffffcd3d6e33) NOT BETWEEN (0.8558452524682764) AND (t0.c0))  WHEN UPPER(t0.c0) THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END  NULLS LAST, ((((t0.c0)<>(t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOTNULL)) AND ((((t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY CASE ((0Xffffffffcd3d6e33) NOT BETWEEN (0.8558452524682764) AND (t0.c0))  WHEN UPPER(t0.c0) THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END  NULLS LAST, ((((t0.c0)<>(t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT TYPEOF(v0.c0), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT TYPEOF(v0.c0), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT TYPEOF(v0.c0), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT TYPEOF(v0.c0), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT TYPEOF(v0.c0), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT COUNT(*) FROM vt0 WHERE (((('1177805079', vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), ((('9L*S5', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('9L*S5', vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (0.984754077857352) AND (vt0.c0)))) AND (((~ (vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0)), CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((('1177805079', vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), ((('9L*S5', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('9L*S5', vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (0.984754077857352) AND (vt0.c0)))) AND (((~ (vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0)), CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((('1177805079', vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), ((('9L*S5', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('9L*S5', vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (0.984754077857352) AND (vt0.c0)))) AND (((~ (vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0)), CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((('1177805079', vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), ((('9L*S5', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('9L*S5', vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (0.984754077857352) AND (vt0.c0)))) AND (((~ (vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0)), CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((('1177805079', vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), ((('9L*S5', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('9L*S5', vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (0.984754077857352) AND (vt0.c0)))) AND (((~ (vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0)), CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(HEX(t0.c0) AS TEXT)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(t0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0))))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(HEX(t0.c0) AS TEXT)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(t0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0))))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(HEX(t0.c0) AS TEXT)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(vt0.c0) COLLATE RTRIM COLLATE BINARY) ORDER BY CASE WHEN 0.7818588988720306 THEN vt0.c0 COLLATE NOCASE ELSE JULIANDAY(vt0.c0, vt0.c0, vt0.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt0.c0) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0.7818588988720306 THEN vt0.c0 COLLATE NOCASE ELSE JULIANDAY(vt0.c0, vt0.c0, vt0.c0) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(vt0.c0) COLLATE RTRIM COLLATE BINARY) ORDER BY CASE WHEN 0.7818588988720306 THEN vt0.c0 COLLATE NOCASE ELSE JULIANDAY(vt0.c0, vt0.c0, vt0.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt0.c0) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0.7818588988720306 THEN vt0.c0 COLLATE NOCASE ELSE JULIANDAY(vt0.c0, vt0.c0, vt0.c0) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(vt0.c0) COLLATE RTRIM COLLATE BINARY) ORDER BY CASE WHEN 0.7818588988720306 THEN vt0.c0 COLLATE NOCASE ELSE JULIANDAY(vt0.c0, vt0.c0, vt0.c0) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c0)OR(x'')))AND(t0.c0)) COLLATE BINARY) ORDER BY UPPER(DISTINCT CASE vt0.c0  WHEN '&' THEN t0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(x'')))AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(DISTINCT CASE vt0.c0  WHEN '&' THEN t0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c0)OR(x'')))AND(t0.c0)) COLLATE BINARY) ORDER BY UPPER(DISTINCT CASE vt0.c0  WHEN '&' THEN t0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(x'')))AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(DISTINCT CASE vt0.c0  WHEN '&' THEN t0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c0)OR(x'')))AND(t0.c0)) COLLATE BINARY) ORDER BY UPPER(DISTINCT CASE vt0.c0  WHEN '&' THEN t0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST, CAST(vt0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN t0.c0 WHEN '261284471' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE x'18ac' END THEN '_' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c0 THEN t0.c0 WHEN '261284471' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE x'18ac' END THEN '_' END) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN t0.c0 WHEN '261284471' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE x'18ac' END THEN '_' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c0 THEN t0.c0 WHEN '261284471' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE x'18ac' END THEN '_' END) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN t0.c0 WHEN '261284471' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE x'18ac' END THEN '_' END);
SELECT * FROM vt0, v0, t0 WHERE ((~ ((+ (vt0.c0))))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(CAST(t0.c0 AS BLOB) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE ((~ ((+ (vt0.c0))))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(CAST(t0.c0 AS BLOB) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE ((~ ((+ (vt0.c0))))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((~ (vt0.c0))))<>((((v0.c0)+(vt0.c0)))))) ORDER BY CASE WHEN ((((vt0.c0)AND(v0.c0)))AND(-1.7976931348623157E308)) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)==(v0.c0)) THEN (- (vt0.c0)) END ASC  NULLS FIRST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((NULL)!=(NULL)), ((v0.c0)=(vt0.c0)), (+ (vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)||(v0.c0))))) DESC, (((vt0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c0))))!=((((v0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((vt0.c0)AND(v0.c0)))AND(-1.7976931348623157E308)) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)=(v0.c0)) THEN (- (vt0.c0)) END ASC  NULLS FIRST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((NULL)<>(NULL)), ((v0.c0)==(vt0.c0)), (+ (vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)||(v0.c0))))) DESC, (((vt0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((~ (vt0.c0))))<>((((v0.c0)+(vt0.c0)))))) ORDER BY CASE WHEN ((((vt0.c0)AND(v0.c0)))AND(-1.7976931348623157E308)) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)==(v0.c0)) THEN (- (vt0.c0)) END ASC  NULLS FIRST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((NULL)!=(NULL)), ((v0.c0)=(vt0.c0)), (+ (vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)||(v0.c0))))) DESC, (((vt0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c0))))!=((((v0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((vt0.c0)AND(v0.c0)))AND(-1.7976931348623157E308)) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)=(v0.c0)) THEN (- (vt0.c0)) END ASC  NULLS FIRST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((NULL)<>(NULL)), ((v0.c0)==(vt0.c0)), (+ (vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)||(v0.c0))))) DESC, (((vt0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((~ (vt0.c0))))<>((((v0.c0)+(vt0.c0)))))) ORDER BY CASE WHEN ((((vt0.c0)AND(v0.c0)))AND(-1.7976931348623157E308)) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)==(v0.c0)) THEN (- (vt0.c0)) END ASC  NULLS FIRST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((NULL)!=(NULL)), ((v0.c0)=(vt0.c0)), (+ (vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)||(v0.c0))))) DESC, (((vt0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS FIRST;
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)GLOB(NULL))) IS FALSE)) ORDER BY ((((v0.c0)<(v0.c0)))IS((+ (v0.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)GLOB(NULL))) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0)<(v0.c0)))IS((+ (v0.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB)) NOT NULL));
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)GLOB(NULL))) IS FALSE)) ORDER BY ((((v0.c0)<(v0.c0)))IS((+ (v0.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)GLOB(NULL))) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0)<(v0.c0)))IS((+ (v0.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB)) NOT NULL));
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)GLOB(NULL))) IS FALSE)) ORDER BY ((((v0.c0)<(v0.c0)))IS((+ (v0.c0)))) DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB)) NOT NULL);
SELECT ALL * FROM t0, v0 WHERE (66040776);
SELECT SUM(count) FROM (SELECT ALL ((66040776) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (66040776);
SELECT SUM(count) FROM (SELECT ALL ((66040776) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (66040776);
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(JULIANDAY(t0.c0, t0.c0, t0.c0, '', t0.c0, t0.c0, t0.c0), 0Xffffffffbf740e99, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ORDER BY (((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0, t0.c0)))) AND ((t0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ((DATE(JULIANDAY(t0.c0, t0.c0, t0.c0, '', t0.c0, t0.c0, t0.c0), 0Xffffffffbf740e99, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0, t0.c0)))) AND ((t0.c0 COLLATE BINARY))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(JULIANDAY(t0.c0, t0.c0, t0.c0, '', t0.c0, t0.c0, t0.c0), 0Xffffffffbf740e99, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ORDER BY (((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0, t0.c0)))) AND ((t0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ((DATE(JULIANDAY(t0.c0, t0.c0, t0.c0, '', t0.c0, t0.c0, t0.c0), 0Xffffffffbf740e99, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0, t0.c0)))) AND ((t0.c0 COLLATE BINARY))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(JULIANDAY(t0.c0, t0.c0, t0.c0, '', t0.c0, t0.c0, t0.c0), 0Xffffffffbf740e99, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ORDER BY (((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0, t0.c0)))) AND ((t0.c0 COLLATE BINARY))) DESC;
SELECT * FROM vt0, v0, t0 WHERE (((LOWER(v0.c0)) ISNULL)) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(v0.c0)) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, t0 ORDER BY x'' ASC);
SELECT * FROM vt0, v0, t0 WHERE (((LOWER(v0.c0)) ISNULL)) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(v0.c0)) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, t0 ORDER BY x'' ASC);
SELECT * FROM vt0, v0, t0 WHERE (((LOWER(v0.c0)) ISNULL)) ORDER BY x'' ASC;
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(((t0.c0)+(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)+(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(((t0.c0)+(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)+(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(((t0.c0)+(v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c0)))IS(COALESCE(DISTINCT t0.c0, vt0.c0, vt0.c0, x'')))) ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0)OR(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))IS(COALESCE(DISTINCT t0.c0, vt0.c0, vt0.c0, x'')))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0)OR(t0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c0)))IS(COALESCE(DISTINCT t0.c0, vt0.c0, vt0.c0, x'')))) ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0)OR(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))IS(COALESCE(DISTINCT t0.c0, vt0.c0, vt0.c0, x'')))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0)OR(t0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c0)))IS(COALESCE(DISTINCT t0.c0, vt0.c0, vt0.c0, x'')))) ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0)OR(t0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((CAST(x'0e75' AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(x'0e75' AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((CAST(x'0e75' AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(x'0e75' AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((CAST(x'0e75' AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(x'' AS REAL) COLLATE RTRIM) ORDER BY CASE WHEN load_extension(0.8531246565286841, v0.c0) THEN (((1177805079)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST, ((TYPEOF(v0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN load_extension(0.8531246565286841, v0.c0) THEN (((1177805079)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST, ((TYPEOF(v0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(x'' AS REAL) COLLATE RTRIM) ORDER BY CASE WHEN load_extension(0.8531246565286841, v0.c0) THEN (((1177805079)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST, ((TYPEOF(v0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN load_extension(0.8531246565286841, v0.c0) THEN (((1177805079)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST, ((TYPEOF(v0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE ((t0.c0)OR(t0.c0))  WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY END) ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()) ASC, 168367961 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)OR(t0.c0))  WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()) ASC, 168367961 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE ((t0.c0)OR(t0.c0))  WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY END) ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()) ASC, 168367961 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)OR(t0.c0))  WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()) ASC, 168367961 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ('1229660108') ORDER BY CASE MIN(vt0.c0, t0.c0)  WHEN (((t0.c0, 0.834033568663968, t0.c0))>((vt0.c0, vt0.c0, t0.c0))) THEN ABS(v0.c0) END, ((((((v0.c0)GLOB(vt0.c0)))OR(vt0.c0)))AND(CAST(v0.c0 AS REAL))) ASC  NULLS LAST, CAST(NULL AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1229660108') IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE MIN(vt0.c0, t0.c0)  WHEN (((t0.c0, 0.834033568663968, t0.c0))>((vt0.c0, vt0.c0, t0.c0))) THEN ABS(v0.c0) END, ((((((v0.c0)GLOB(vt0.c0)))OR(vt0.c0)))AND(CAST(v0.c0 AS REAL))) ASC  NULLS LAST, CAST(NULL AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ('1229660108') ORDER BY CASE MIN(vt0.c0, t0.c0)  WHEN (((t0.c0, 0.834033568663968, t0.c0))>((vt0.c0, vt0.c0, t0.c0))) THEN ABS(v0.c0) END, ((((((v0.c0)GLOB(vt0.c0)))OR(vt0.c0)))AND(CAST(v0.c0 AS REAL))) ASC  NULLS LAST, CAST(NULL AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1229660108') IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE MIN(vt0.c0, t0.c0)  WHEN (((t0.c0, 0.834033568663968, t0.c0))>((vt0.c0, vt0.c0, t0.c0))) THEN ABS(v0.c0) END, ((((((v0.c0)GLOB(vt0.c0)))OR(vt0.c0)))AND(CAST(v0.c0 AS REAL))) ASC  NULLS LAST, CAST(NULL AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ('1229660108') ORDER BY CASE MIN(vt0.c0, t0.c0)  WHEN (((t0.c0, 0.834033568663968, t0.c0))>((vt0.c0, vt0.c0, t0.c0))) THEN ABS(v0.c0) END, ((((((v0.c0)GLOB(vt0.c0)))OR(vt0.c0)))AND(CAST(v0.c0 AS REAL))) ASC  NULLS LAST, CAST(NULL AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, vt0.c0, t0.c0)) AND ((1.338571537E9, t0.c0, vt0.c0)))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))) WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)<(v0.c0))))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, vt0.c0, t0.c0)) AND ((1.338571537E9, t0.c0, vt0.c0)))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, vt0.c0, t0.c0)) AND ((1.338571537E9, t0.c0, vt0.c0)))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))) WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)<(v0.c0))))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, vt0.c0, t0.c0)) AND ((1.338571537E9, t0.c0, vt0.c0)))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, vt0.c0, t0.c0)) AND ((1.338571537E9, t0.c0, vt0.c0)))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))) WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)<(v0.c0)))));
SELECT * FROM t0 WHERE ((((t0.c0, 886643039, t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0, 886643039, t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, 886643039, t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0, 886643039, t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, 886643039, t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, NULL)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY json_quote(((NULL)<<(vt0.c0))), (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0) AND (489465376))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY json_quote(((NULL)<<(vt0.c0))), (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0) AND (489465376))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY json_quote(((NULL)<<(vt0.c0))), (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0) AND (489465376))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY json_quote(((NULL)<<(vt0.c0))), (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0) AND (489465376))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY json_quote(((NULL)<<(vt0.c0))), (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0) AND (489465376))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), CASE WHEN t0.c0 THEN v0.c0 END))<=((((v0.c0) NOT NULL), ((v0.c0) NOT NULL), v0.c0 COLLATE NOCASE))) WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), CASE WHEN t0.c0 THEN v0.c0 END))<=((((v0.c0) NOT NULL), ((v0.c0) NOT NULL), v0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), CASE WHEN t0.c0 THEN v0.c0 END))<=((((v0.c0) NOT NULL), ((v0.c0) NOT NULL), v0.c0 COLLATE NOCASE))) WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), CASE WHEN t0.c0 THEN v0.c0 END))<=((((v0.c0) NOT NULL), ((v0.c0) NOT NULL), v0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), CASE WHEN t0.c0 THEN v0.c0 END))<=((((v0.c0) NOT NULL), ((v0.c0) NOT NULL), v0.c0 COLLATE NOCASE))) WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (CAST(json_extract(t0.c0, t0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(json_extract(t0.c0, t0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(json_extract(t0.c0, t0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(json_extract(t0.c0, t0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(json_extract(t0.c0, t0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0);
SELECT ALL * FROM vt0, t0 WHERE (COALESCE(IFNULL(t0.c0, vt0.c0), x'87513f5e'));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(IFNULL(t0.c0, vt0.c0), x'87513f5e')) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (COALESCE(IFNULL(t0.c0, vt0.c0), x'87513f5e'));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(IFNULL(t0.c0, vt0.c0), x'87513f5e')) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (COALESCE(IFNULL(t0.c0, vt0.c0), x'87513f5e'));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((v0.c0)==(t0.c0)))%(((t0.c0) NOTNULL)))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(t0.c0)))%(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((v0.c0)==(t0.c0)))%(((t0.c0) NOTNULL)))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(t0.c0)))%(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((v0.c0)==(t0.c0)))%(((t0.c0) NOTNULL)))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(((v0.c0)LIKE(0.7194792886285071)), 0.3894927895568723) WHERE (CASE WHEN TYPEOF(t0.c0) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ROUND(v0.c0, t0.c0) THEN vt0.c0 ELSE NULL END) ORDER BY IFNULL(DISTINCT ((v0.c0)OR(t0.c0)), HEX(DISTINCT t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(t0.c0) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ROUND(v0.c0, t0.c0) THEN vt0.c0 ELSE NULL END) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(((v0.c0)LIKE(0.7194792886285071)), 0.3894927895568723) ORDER BY IFNULL(DISTINCT ((v0.c0)OR(t0.c0)), HEX(DISTINCT t0.c0))  NULLS LAST);
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(((v0.c0)LIKE(0.7194792886285071)), 0.3894927895568723) WHERE (CASE WHEN TYPEOF(t0.c0) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ROUND(v0.c0, t0.c0) THEN vt0.c0 ELSE NULL END) ORDER BY IFNULL(DISTINCT ((v0.c0)OR(t0.c0)), HEX(DISTINCT t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(t0.c0) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ROUND(v0.c0, t0.c0) THEN vt0.c0 ELSE NULL END) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(((v0.c0)LIKE(0.7194792886285071)), 0.3894927895568723) ORDER BY IFNULL(DISTINCT ((v0.c0)OR(t0.c0)), HEX(DISTINCT t0.c0))  NULLS LAST);
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(((v0.c0)LIKE(0.7194792886285071)), 0.3894927895568723) WHERE (CASE WHEN TYPEOF(t0.c0) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ROUND(v0.c0, t0.c0) THEN vt0.c0 ELSE NULL END) ORDER BY IFNULL(DISTINCT ((v0.c0)OR(t0.c0)), HEX(DISTINCT t0.c0))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) IN (vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((NULL)OR(vt0.c0)))))AND((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((NULL)OR(vt0.c0)))))AND((t0.c0 IN ()))) ASC);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) IN (vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((NULL)OR(vt0.c0)))))AND((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((NULL)OR(vt0.c0)))))AND((t0.c0 IN ()))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT ALL * FROM vt0, v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT ALL * FROM vt0, v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0))<>((v0.c0))), t0.c0)) AND ((v0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))), (NULL IN (((vt0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0))<>((v0.c0))), t0.c0)) AND ((v0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))), (NULL IN (((vt0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0))<>((v0.c0))), t0.c0)) AND ((v0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))), (NULL IN (((vt0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0))<>((v0.c0))), t0.c0)) AND ((v0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))), (NULL IN (((vt0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0))<>((v0.c0))), t0.c0)) AND ((v0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM))), (NULL IN (((vt0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))!=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))<>((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))!=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))<>((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((((v0.c0))!=((v0.c0)))))));
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0, vt0.c0, 4.24933245E8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<=(NULL)) END) ORDER BY ((CAST(vt0.c0 AS BLOB))*(((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0, vt0.c0, 4.24933245E8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<=(NULL)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))*(((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0, vt0.c0, 4.24933245E8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<=(NULL)) END) ORDER BY ((CAST(vt0.c0 AS BLOB))*(((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0, vt0.c0, 4.24933245E8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<=(NULL)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))*(((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0, vt0.c0, 4.24933245E8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<=(NULL)) END) ORDER BY ((CAST(vt0.c0 AS BLOB))*(((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT * FROM t0, v0 WHERE (TYPEOF(CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (TYPEOF(CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (TYPEOF(CAST(t0.c0 AS TEXT)));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((t0.c0)LIKE(NULL))) NOT BETWEEN (0Xffffffff88c45e90) AND (((v0.c0)=(v0.c0)))) WHERE ((((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((~ (v0.c0)))))) ORDER BY NULL DESC, x'b2b5';
SELECT SUM(count) FROM (SELECT (((((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((~ (v0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((t0.c0)LIKE(NULL))) NOT BETWEEN (0xffffffff88c45e90) AND (((v0.c0)==(v0.c0)))) ORDER BY NULL DESC, x'b2b5');
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((t0.c0)LIKE(NULL))) NOT BETWEEN (0Xffffffff88c45e90) AND (((v0.c0)=(v0.c0)))) WHERE ((((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((~ (v0.c0)))))) ORDER BY NULL DESC, x'b2b5';
SELECT SUM(count) FROM (SELECT (((((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((~ (v0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((t0.c0)LIKE(NULL))) NOT BETWEEN (0xffffffff88c45e90) AND (((v0.c0)==(v0.c0)))) ORDER BY NULL DESC, x'b2b5');
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((t0.c0)LIKE(NULL))) NOT BETWEEN (0Xffffffff88c45e90) AND (((v0.c0)=(v0.c0)))) WHERE ((((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((~ (v0.c0)))))) ORDER BY NULL DESC, x'b2b5';
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)OR(t0.c0)))OR(v0.c0)))OR(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 END)))OR((v0.c0 IN (v0.c0)))))OR(v0.c0)) WHERE (((((vt0.c0)==(vt0.c0))) IS FALSE)) ORDER BY LIKE(NULL, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ']') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)OR(t0.c0)))OR(v0.c0)))OR(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 END)))OR((v0.c0 IN (v0.c0)))))OR(v0.c0)) ORDER BY LIKE(NULL, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ']') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)OR(t0.c0)))OR(v0.c0)))OR(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 END)))OR((v0.c0 IN (v0.c0)))))OR(v0.c0)) WHERE (((((vt0.c0)==(vt0.c0))) IS FALSE)) ORDER BY LIKE(NULL, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ']') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)OR(t0.c0)))OR(v0.c0)))OR(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 END)))OR((v0.c0 IN (v0.c0)))))OR(v0.c0)) ORDER BY LIKE(NULL, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ']') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c0)OR(t0.c0)))OR(v0.c0)))OR(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 END)))OR((v0.c0 IN (v0.c0)))))OR(v0.c0)) WHERE (((((vt0.c0)==(vt0.c0))) IS FALSE)) ORDER BY LIKE(NULL, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ']') DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c0  WHEN '2105010174' THEN vt0.c0 ELSE vt0.c0 END)>(((v0.c0)&(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN '2105010174' THEN vt0.c0 ELSE vt0.c0 END)>(((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c0  WHEN '2105010174' THEN vt0.c0 ELSE vt0.c0 END)>(((v0.c0)&(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN '2105010174' THEN vt0.c0 ELSE vt0.c0 END)>(((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c0  WHEN '2105010174' THEN vt0.c0 ELSE vt0.c0 END)>(((v0.c0)&(v0.c0)))));
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) ORDER BY HEX(DISTINCT t0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY HEX(DISTINCT t0.c0 COLLATE NOCASE) ASC);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) ORDER BY HEX(DISTINCT t0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY HEX(DISTINCT t0.c0 COLLATE NOCASE) ASC);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) ORDER BY HEX(DISTINCT t0.c0 COLLATE NOCASE) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ('') ORDER BY (((~ (t0.c0)))<<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0)))<<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ('') ORDER BY (((~ (t0.c0)))<<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0)))<<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ('') ORDER BY (((~ (t0.c0)))<<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))))AND(CAST(v0.c0 AS REAL))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))))AND(CAST(v0.c0 AS REAL))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))))AND(CAST(v0.c0 AS REAL))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))))AND(CAST(v0.c0 AS REAL))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))))AND(CAST(v0.c0 AS REAL))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), ((vt0.c0)>>(vt0.c0))), TRIM(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), ((vt0.c0)>>(vt0.c0))), TRIM(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), ((vt0.c0)>>(vt0.c0))), TRIM(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), ((vt0.c0)>>(vt0.c0))), TRIM(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), ((vt0.c0)>>(vt0.c0))), TRIM(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC;
SELECT * FROM v0, t0 INNER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND ('.')))LIKE(x'' COLLATE RTRIM)) WHERE ((((('-1345963815')OR(((vt0.c0)+(v0.c0)))))OR(((((v0.c0)OR(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('-1345963815')OR(((vt0.c0)+(v0.c0)))))OR(((((v0.c0)OR(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND ('.')))LIKE(x'' COLLATE RTRIM)));
SELECT * FROM v0, t0 INNER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND ('.')))LIKE(x'' COLLATE RTRIM)) WHERE ((((('-1345963815')OR(((vt0.c0)+(v0.c0)))))OR(((((v0.c0)OR(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('-1345963815')OR(((vt0.c0)+(v0.c0)))))OR(((((v0.c0)OR(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND ('.')))LIKE(x'' COLLATE RTRIM)));
SELECT * FROM v0, t0 INNER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND ('.')))LIKE(x'' COLLATE RTRIM)) WHERE ((((('-1345963815')OR(((vt0.c0)+(v0.c0)))))OR(((((v0.c0)OR(vt0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c0)IS NOT((('') BETWEEN ('1128865872') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT((('') BETWEEN ('1128865872') AND (v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c0)IS NOT((('') BETWEEN ('1128865872') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT((('') BETWEEN ('1128865872') AND (v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c0)IS NOT((('') BETWEEN ('1128865872') AND (v0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (t0.c0 COLLATE NOCASE)) WHERE ((((t0.c0 IN ()))|((NULL IN (vt0.c0))))) ORDER BY ((0.7504795957754273)%(STRFTIME(vt0.c0, vt0.c0, t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))|((NULL IN (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (t0.c0 COLLATE NOCASE)) ORDER BY ((0.7504795957754273)%(STRFTIME(vt0.c0, vt0.c0, t0.c0))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (t0.c0 COLLATE NOCASE)) WHERE ((((t0.c0 IN ()))|((NULL IN (vt0.c0))))) ORDER BY ((0.7504795957754273)%(STRFTIME(vt0.c0, vt0.c0, t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))|((NULL IN (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (t0.c0 COLLATE NOCASE)) ORDER BY ((0.7504795957754273)%(STRFTIME(vt0.c0, vt0.c0, t0.c0))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (t0.c0 COLLATE NOCASE)) WHERE ((((t0.c0 IN ()))|((NULL IN (vt0.c0))))) ORDER BY ((0.7504795957754273)%(STRFTIME(vt0.c0, vt0.c0, t0.c0))) DESC;
SELECT ALL * FROM t0, v0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY LIKELIHOOD(((((v0.c0)OR(t0.c0)))OR(t0.c0)), 0.9931087639965303)  NULLS LAST, CAST(NULLIF(vt0.c0, vt0.c0) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY LIKELIHOOD(((((v0.c0)OR(t0.c0)))OR(t0.c0)), 0.9931087639965303)  NULLS LAST, CAST(NULLIF(vt0.c0, vt0.c0) AS TEXT) DESC);
SELECT ALL * FROM t0, v0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY LIKELIHOOD(((((v0.c0)OR(t0.c0)))OR(t0.c0)), 0.9931087639965303)  NULLS LAST, CAST(NULLIF(vt0.c0, vt0.c0) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY LIKELIHOOD(((((v0.c0)OR(t0.c0)))OR(t0.c0)), 0.9931087639965303)  NULLS LAST, CAST(NULLIF(vt0.c0, vt0.c0) AS TEXT) DESC);
SELECT ALL * FROM t0, v0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY LIKELIHOOD(((((v0.c0)OR(t0.c0)))OR(t0.c0)), 0.9931087639965303)  NULLS LAST, CAST(NULLIF(vt0.c0, vt0.c0) AS TEXT) DESC;
SELECT * FROM vt0 WHERE (CASE TRIM(vt0.c0, vt0.c0)  WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) ELSE 0.834033568663968 END) ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) ASC, CAST((~ (vt0.c0)) AS INTEGER), (CAST(NULL AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(vt0.c0, vt0.c0)  WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) ELSE 0.834033568663968 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) ASC, CAST((~ (vt0.c0)) AS INTEGER), (CAST(NULL AS BLOB) IN ()) ASC);
SELECT * FROM vt0 WHERE (CASE TRIM(vt0.c0, vt0.c0)  WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) ELSE 0.834033568663968 END) ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) ASC, CAST((~ (vt0.c0)) AS INTEGER), (CAST(NULL AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(vt0.c0, vt0.c0)  WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) ELSE 0.834033568663968 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) ASC, CAST((~ (vt0.c0)) AS INTEGER), (CAST(NULL AS BLOB) IN ()) ASC);
SELECT * FROM vt0 WHERE (CASE TRIM(vt0.c0, vt0.c0)  WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) ELSE 0.834033568663968 END) ORDER BY ((((vt0.c0) NOTNULL)) ISNULL) ASC, CAST((~ (vt0.c0)) AS INTEGER), (CAST(NULL AS BLOB) IN ()) ASC;
SELECT ALL * FROM v0, vt0 WHERE ((((((((((~ (vt0.c0)))AND(((NULL) NOT NULL))))AND(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))OR(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (vt0.c0)))AND(((NULL) NOT NULL))))AND(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))OR(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((((~ (vt0.c0)))AND(((NULL) NOT NULL))))AND(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))OR(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (vt0.c0)))AND(((NULL) NOT NULL))))AND(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))OR(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((((~ (vt0.c0)))AND(((NULL) NOT NULL))))AND(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))OR(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN ()))) AND (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((t0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN ()))) AND (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN ()))) AND (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((t0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN ()))) AND (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN ()))) AND (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((t0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT * FROM vt0, t0, v0 WHERE ((((v0.c0)>=(vt0.c0)) IN (((((t0.c0)AND(vt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)>=(vt0.c0)) IN (((((t0.c0)AND(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((((v0.c0)>=(vt0.c0)) IN (((((t0.c0)AND(vt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)>=(vt0.c0)) IN (((((t0.c0)AND(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((((v0.c0)>=(vt0.c0)) IN (((((t0.c0)AND(vt0.c0)))AND(v0.c0)))));
SELECT * FROM t0, vt0 WHERE (0.5856578164959422);
SELECT SUM(count) FROM (SELECT ((0.5856578164959422) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (0.5856578164959422);
SELECT SUM(count) FROM (SELECT ((0.5856578164959422) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (0.5856578164959422);
SELECT * FROM v0, vt0 WHERE (highlight(CASE WHEN v0.c0 THEN vt0.c0 END, NULL, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ((highlight(CASE WHEN v0.c0 THEN vt0.c0 END, NULL, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB));
SELECT * FROM v0, vt0 WHERE (highlight(CASE WHEN v0.c0 THEN vt0.c0 END, NULL, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ((highlight(CASE WHEN v0.c0 THEN vt0.c0 END, NULL, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB));
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(-7.13436968E8))) ORDER BY ((v0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(-7.13436968E8))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(-7.13436968E8))) ORDER BY ((v0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(-7.13436968E8))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(-7.13436968E8))) ORDER BY ((v0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (((v0.c0, v0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)OR(vt0.c0)))AND(v0.c0))))>=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)), ((v0.c0)<=(v0.c0)), v0.c0 COLLATE NOCASE, ((vt0.c0) NOT NULL)))) WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (((v0.c0, v0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)OR(vt0.c0)))AND(v0.c0))))>=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)), ((v0.c0)<=(v0.c0)), v0.c0 COLLATE NOCASE, ((vt0.c0) NOT NULL)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (((v0.c0, v0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)OR(vt0.c0)))AND(v0.c0))))>=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)), ((v0.c0)<=(v0.c0)), v0.c0 COLLATE NOCASE, ((vt0.c0) NOT NULL)))) WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (((v0.c0, v0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)OR(vt0.c0)))AND(v0.c0))))>=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)), ((v0.c0)<=(v0.c0)), v0.c0 COLLATE NOCASE, ((vt0.c0) NOT NULL)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (((v0.c0, v0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))), ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)), ((((v0.c0)OR(vt0.c0)))AND(v0.c0))))>=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (- (v0.c0)), ((v0.c0)<=(v0.c0)), v0.c0 COLLATE NOCASE, ((vt0.c0) NOT NULL)))) WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((t0.c0 COLLATE NOCASE)GLOB(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)GLOB(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((t0.c0 COLLATE NOCASE)GLOB(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)GLOB(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((t0.c0 COLLATE NOCASE)GLOB(((t0.c0) NOT NULL))));
SELECT ALL * FROM vt0, v0 WHERE ((((- (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((((- (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((((- (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT ALL * FROM v0, vt0 INNER JOIN t0 ON (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)IS(v0.c0)))) WHERE ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END, CAST(v0.c0 AS NUMERIC)))<((((vt0.c0)IS NOT(vt0.c0)), ((t0.c0) IS TRUE), LIKELIHOOD(v0.c0, 0.5384248776645348), CAST(0X21a53ef2 AS BLOB), ((t0.c0) NOT NULL))))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=('2115065078' COLLATE BINARY)) ASC, ((vt0.c0)>>(((vt0.c0) ISNULL))), 1887967837;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END, CAST(v0.c0 AS NUMERIC)))<((((vt0.c0)IS NOT(vt0.c0)), ((t0.c0) IS TRUE), LIKELIHOOD(v0.c0, 0.5384248776645348), CAST(0X21a53ef2 AS BLOB), ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)IS(v0.c0)))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=('2115065078' COLLATE BINARY)) ASC, ((vt0.c0)>>(((vt0.c0) ISNULL))), 1887967837);
SELECT ALL * FROM v0, vt0 INNER JOIN t0 ON (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)IS(v0.c0)))) WHERE ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END, CAST(v0.c0 AS NUMERIC)))<((((vt0.c0)IS NOT(vt0.c0)), ((t0.c0) IS TRUE), LIKELIHOOD(v0.c0, 0.5384248776645348), CAST(0X21a53ef2 AS BLOB), ((t0.c0) NOT NULL))))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=('2115065078' COLLATE BINARY)) ASC, ((vt0.c0)>>(((vt0.c0) ISNULL))), 1887967837;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END, CAST(v0.c0 AS NUMERIC)))<((((vt0.c0)IS NOT(vt0.c0)), ((t0.c0) IS TRUE), LIKELIHOOD(v0.c0, 0.5384248776645348), CAST(0X21a53ef2 AS BLOB), ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)IS(v0.c0)))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=('2115065078' COLLATE BINARY)) ASC, ((vt0.c0)>>(((vt0.c0) ISNULL))), 1887967837);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN 0.12648228117265914 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)%(0X7d77e7fe)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt0.c0 THEN 0.12648228117265914 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)%(0x7d77e7fe))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN 0.12648228117265914 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)%(0X7d77e7fe)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt0.c0 THEN 0.12648228117265914 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)%(0x7d77e7fe))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN 0.12648228117265914 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)%(0X7d77e7fe)));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT))&(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))&(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT))&(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))&(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT))&(((vt0.c0)>=(vt0.c0)))));
SELECT ALL * FROM vt0, t0, v0 WHERE (x'') ORDER BY (~ (x'')) DESC, ((COALESCE(DISTINCT t0.c0, v0.c0, t0.c0, vt0.c0)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (~ (x'')) DESC, ((COALESCE(DISTINCT t0.c0, v0.c0, t0.c0, vt0.c0)) NOT NULL) ASC);
SELECT ALL * FROM vt0, t0, v0 WHERE (x'') ORDER BY (~ (x'')) DESC, ((COALESCE(DISTINCT t0.c0, v0.c0, t0.c0, vt0.c0)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (~ (x'')) DESC, ((COALESCE(DISTINCT t0.c0, v0.c0, t0.c0, vt0.c0)) NOT NULL) ASC);
SELECT ALL * FROM vt0, t0, v0 WHERE (x'') ORDER BY (~ (x'')) DESC, ((COALESCE(DISTINCT t0.c0, v0.c0, t0.c0, vt0.c0)) NOT NULL) ASC;
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (x'');
SELECT * FROM vt0, v0, t0 WHERE ('gd');
SELECT SUM(count) FROM (SELECT (('gd') IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ('gd');
SELECT SUM(count) FROM (SELECT (('gd') IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ('gd');
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY ((((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>((((v0.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>((((v0.c0)IS NOT(v0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY ((((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>((((v0.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>((((v0.c0)IS NOT(v0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY ((((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>((((v0.c0)IS NOT(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0 IN ()))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '261284471' ELSE 0.9967604181141724 END)))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '261284471' ELSE 0.9967604181141724 END)))AND(x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0 IN ()))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '261284471' ELSE 0.9967604181141724 END)))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '261284471' ELSE 0.9967604181141724 END)))AND(x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0 IN ()))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '261284471' ELSE 0.9967604181141724 END)))AND(x''))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('1514352192')) AND ((vt0.c0))))*((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN (('1514352192')) AND ((vt0.c0))))*((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('1514352192')) AND ((vt0.c0))))*((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN (('1514352192')) AND ((vt0.c0))))*((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('1514352192')) AND ((vt0.c0))))*((((vt0.c0))==((vt0.c0))))));
SELECT * FROM vt0 CROSS JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (IFNULL(v0.c0, vt0.c0)) AND (((vt0.c0) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() WHERE (((((t0.c0)IS NOT(vt0.c0)))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(vt0.c0)))||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (IFNULL(v0.c0, vt0.c0)) AND (((vt0.c0) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION());
SELECT * FROM vt0 CROSS JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (IFNULL(v0.c0, vt0.c0)) AND (((vt0.c0) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() WHERE (((((t0.c0)IS NOT(vt0.c0)))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(vt0.c0)))||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (IFNULL(v0.c0, vt0.c0)) AND (((vt0.c0) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION());
SELECT * FROM vt0 CROSS JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (IFNULL(v0.c0, vt0.c0)) AND (((vt0.c0) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() WHERE (((((t0.c0)IS NOT(vt0.c0)))||((vt0.c0 IN ()))));
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))OR(JULIANDAY(t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN TRIM(DISTINCT t0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, t0.c0 DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((x'' IN ()))) AND ((CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))OR(JULIANDAY(t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0))))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN TRIM(DISTINCT t0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, t0.c0 DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((x'' IN ()))) AND ((CAST(t0.c0 AS INTEGER)))));
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))OR(JULIANDAY(t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN TRIM(DISTINCT t0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, t0.c0 DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((x'' IN ()))) AND ((CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))OR(JULIANDAY(t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0))))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN TRIM(DISTINCT t0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, t0.c0 DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((x'' IN ()))) AND ((CAST(t0.c0 AS INTEGER)))));
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))OR(JULIANDAY(t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN TRIM(DISTINCT t0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, t0.c0 DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((x'' IN ()))) AND ((CAST(t0.c0 AS INTEGER))));
SELECT * FROM v0, vt0, t0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((- (x'')));
SELECT * FROM t0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((UPPER(DISTINCT v0.c0))))) ORDER BY CASE NULL  WHEN ((t0.c0)>=(t0.c0)) THEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN CAST(x'a235' AS TEXT) WHEN ((t0.c0)<>(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) IS TRUE) THEN CAST(v0.c0 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((UPPER(DISTINCT v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE NULL  WHEN ((t0.c0)>=(t0.c0)) THEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN CAST(x'a235' AS TEXT) WHEN ((t0.c0)!=(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) IS TRUE) THEN CAST(v0.c0 AS NUMERIC) END);
SELECT * FROM t0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((UPPER(DISTINCT v0.c0))))) ORDER BY CASE NULL  WHEN ((t0.c0)>=(t0.c0)) THEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN CAST(x'a235' AS TEXT) WHEN ((t0.c0)<>(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) IS TRUE) THEN CAST(v0.c0 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((UPPER(DISTINCT v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE NULL  WHEN ((t0.c0)>=(t0.c0)) THEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN CAST(x'a235' AS TEXT) WHEN ((t0.c0)!=(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) IS TRUE) THEN CAST(v0.c0 AS NUMERIC) END);
SELECT * FROM t0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((UPPER(DISTINCT v0.c0))))) ORDER BY CASE NULL  WHEN ((t0.c0)>=(t0.c0)) THEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN CAST(x'a235' AS TEXT) WHEN ((t0.c0)<>(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) IS TRUE) THEN CAST(v0.c0 AS NUMERIC) END;
SELECT ALL * FROM vt0, t0 WHERE (COALESCE(DISTINCT vt0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), x'', (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), x'', (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (COALESCE(DISTINCT vt0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), x'', (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), x'', (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (COALESCE(DISTINCT vt0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), x'', (NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CASE LOWER(x'')  WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c0 END END) ORDER BY (((vt0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, vt0.c0))<((t0.c0, v0.c0, vt0.c0))))) AND ((((((v0.c0)OR(vt0.c0)))OR(t0.c0)))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(x'')  WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, vt0.c0))<((t0.c0, v0.c0, vt0.c0))))) AND ((((((v0.c0)OR(vt0.c0)))OR(t0.c0)))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c0 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CASE LOWER(x'')  WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c0 END END) ORDER BY (((vt0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, vt0.c0))<((t0.c0, v0.c0, vt0.c0))))) AND ((((((v0.c0)OR(vt0.c0)))OR(t0.c0)))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(x'')  WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, vt0.c0))<((t0.c0, v0.c0, vt0.c0))))) AND ((((((v0.c0)OR(vt0.c0)))OR(t0.c0)))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c0 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CASE LOWER(x'')  WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c0 END END) ORDER BY (((vt0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, vt0.c0))<((t0.c0, v0.c0, vt0.c0))))) AND ((((((v0.c0)OR(vt0.c0)))OR(t0.c0)))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c0 IN ())))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((('-723542557') BETWEEN (t0.c0) AND (vt0.c0)))/((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-723542557') BETWEEN (t0.c0) AND (vt0.c0)))/((~ (vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((('-723542557') BETWEEN (t0.c0) AND (vt0.c0)))/((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-723542557') BETWEEN (t0.c0) AND (vt0.c0)))/((~ (vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((('-723542557') BETWEEN (t0.c0) AND (vt0.c0)))/((~ (vt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))>>((NOT (vt0.c0)))) WHERE (0.9222453622408782) ORDER BY (('_') IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9222453622408782) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))>>((NOT (vt0.c0)))) ORDER BY (('_') IS TRUE)  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))>>((NOT (vt0.c0)))) WHERE (0.9222453622408782) ORDER BY (('_') IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9222453622408782) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))>>((NOT (vt0.c0)))) ORDER BY (('_') IS TRUE)  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB))>>((NOT (vt0.c0)))) WHERE (0.9222453622408782) ORDER BY (('_') IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((((NULL)OR(STRFTIME(t0.c0, t0.c0, v0.c0))))AND((- (vt0.c0)))))OR(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(STRFTIME(t0.c0, t0.c0, v0.c0))))AND((- (vt0.c0)))))OR(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((((NULL)OR(STRFTIME(t0.c0, t0.c0, v0.c0))))AND((- (vt0.c0)))))OR(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(STRFTIME(t0.c0, t0.c0, v0.c0))))AND((- (vt0.c0)))))OR(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((((NULL)OR(STRFTIME(t0.c0, t0.c0, v0.c0))))AND((- (vt0.c0)))))OR(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(x'')))OR(UPPER(t0.c0))))OR(v0.c0)))OR(CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE BINARY)OR(x'')))OR(UPPER(t0.c0))))OR(v0.c0)))OR(CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(x'')))OR(UPPER(t0.c0))))OR(v0.c0)))OR(CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE BINARY)OR(x'')))OR(UPPER(t0.c0))))OR(v0.c0)))OR(CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(x'')))OR(UPPER(t0.c0))))OR(v0.c0)))OR(CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt0.c0) NOT NULL)))) WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((((v0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(((t0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt0.c0) NOT NULL)))) ORDER BY ((((((v0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(((t0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt0.c0) NOT NULL)))) WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((((v0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(((t0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt0.c0) NOT NULL)))) ORDER BY ((((((v0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(((t0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))))>=(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))))>=(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON vt0.c0);
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))))>=(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))))>=(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON vt0.c0);
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))))>=(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM v0, t0 WHERE (IFNULL(CAST(t0.c0 AS TEXT), '424933245')) ORDER BY (((+ (v0.c0))) NOT NULL) DESC  NULLS LAST, (~ ((~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(t0.c0 AS TEXT), '424933245')) IS TRUE)  as count FROM v0, t0 ORDER BY (((+ (v0.c0))) NOT NULL) DESC  NULLS LAST, (~ ((~ (t0.c0)))));
SELECT ALL * FROM v0, t0 WHERE (IFNULL(CAST(t0.c0 AS TEXT), '424933245')) ORDER BY (((+ (v0.c0))) NOT NULL) DESC  NULLS LAST, (~ ((~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(t0.c0 AS TEXT), '424933245')) IS TRUE)  as count FROM v0, t0 ORDER BY (((+ (v0.c0))) NOT NULL) DESC  NULLS LAST, (~ ((~ (t0.c0)))));
SELECT ALL * FROM v0, t0 WHERE (IFNULL(CAST(t0.c0 AS TEXT), '424933245')) ORDER BY (((+ (v0.c0))) NOT NULL) DESC  NULLS LAST, (~ ((~ (t0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(TRIM(DISTINCT vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(TRIM(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(TRIM(DISTINCT vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(TRIM(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(TRIM(DISTINCT vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT ((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT ((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT ((v0.c0 IN (v0.c0)))));
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) ISNULL));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (v0.c0) ORDER BY (((((t0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((t0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (v0.c0) ORDER BY (((((t0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((t0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (v0.c0) ORDER BY (((((t0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())  NULLS FIRST;
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c0 IN ()), ((v0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=((CASE v0.c0  WHEN x'' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 END, vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), ((v0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=((CASE v0.c0  WHEN x'' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 END, vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c0 IN ()), ((v0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=((CASE v0.c0  WHEN x'' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 END, vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), ((v0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=((CASE v0.c0  WHEN x'' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 END, vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c0 IN ()), ((v0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=((CASE v0.c0  WHEN x'' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 END, vt0.c0 COLLATE RTRIM))));
SELECT * FROM vt0, t0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT * FROM vt0, t0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT * FROM vt0, t0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)));
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END ASC);
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END ASC);
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((- ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, x'edf6')) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, x'edf6')) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, x'edf6')) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, x'edf6')) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, x'edf6')) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE ((v0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(x'f2a5')))AND(v0.c0)))AND(vt0.c0)) END WHERE (((vt0.c0)>(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE ((v0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(x'f2a5')))AND(v0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE ((v0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(x'f2a5')))AND(v0.c0)))AND(vt0.c0)) END WHERE (((vt0.c0)>(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE ((v0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(x'f2a5')))AND(v0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE ((v0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(x'f2a5')))AND(v0.c0)))AND(vt0.c0)) END WHERE (((vt0.c0)>(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((x'') BETWEEN (vt0.c0) AND (((((t0.c0)AND(-1945540589)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (vt0.c0) AND (((((t0.c0)AND(-1945540589)))AND(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((x'') BETWEEN (vt0.c0) AND (((((t0.c0)AND(-1945540589)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (vt0.c0) AND (((((t0.c0)AND(-1945540589)))AND(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((x'') BETWEEN (vt0.c0) AND (((((t0.c0)AND(-1945540589)))AND(v0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL)) BETWEEN (((('-974376825'))=((vt0.c0)))) AND (((vt0.c0)GLOB(vt0.c0)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL)) BETWEEN (((('-974376825'))=((vt0.c0)))) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL)) BETWEEN (((('-974376825'))=((vt0.c0)))) AND (((vt0.c0)GLOB(vt0.c0)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL)) BETWEEN (((('-974376825'))=((vt0.c0)))) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL)) BETWEEN (((('-974376825'))=((vt0.c0)))) AND (((vt0.c0)GLOB(vt0.c0)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON 'wjVA6⁀e梭' INNER JOIN t0 ON x'93f0' WHERE (v0.c0) ORDER BY (((+ (t0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON 'wjVA6⁀e梭' INNER JOIN t0 ON x'93f0' ORDER BY (((+ (t0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON 'wjVA6⁀e梭' INNER JOIN t0 ON x'93f0' WHERE (v0.c0) ORDER BY (((+ (t0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON 'wjVA6⁀e梭' INNER JOIN t0 ON x'93f0' ORDER BY (((+ (t0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON 'wjVA6⁀e梭' INNER JOIN t0 ON x'93f0' WHERE (v0.c0) ORDER BY (((+ (t0.c0))) IS TRUE) ASC;
SELECT ALL * FROM v0, t0 WHERE (((((NOT (0X34f90dd5))))==((((v0.c0)!=(0.8160870267062666)))))) ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)OR(v0.c0)), v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (0X34f90dd5))))=((((v0.c0)!=(0.8160870267062666)))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)OR(v0.c0)), v0.c0)) DESC);
SELECT ALL * FROM v0, t0 WHERE (((((NOT (0X34f90dd5))))==((((v0.c0)!=(0.8160870267062666)))))) ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)OR(v0.c0)), v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (0X34f90dd5))))=((((v0.c0)!=(0.8160870267062666)))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)OR(v0.c0)), v0.c0)) DESC);
SELECT ALL * FROM v0, t0 WHERE (((((NOT (0X34f90dd5))))==((((v0.c0)!=(0.8160870267062666)))))) ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)OR(v0.c0)), v0.c0)) DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0 IN ())))==((CAST(x'' AS TEXT))))) ORDER BY (((((v0.c0))<=((t0.c0))))>=(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN ())))==((CAST(x'' AS TEXT))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((((v0.c0))<=((t0.c0))))>=(NULL)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0 IN ())))==((CAST(x'' AS TEXT))))) ORDER BY (((((v0.c0))<=((t0.c0))))>=(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN ())))==((CAST(x'' AS TEXT))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((((v0.c0))<=((t0.c0))))>=(NULL)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0 IN ())))==((CAST(x'' AS TEXT))))) ORDER BY (((((v0.c0))<=((t0.c0))))>=(NULL));
SELECT ALL * FROM v0 WHERE ((NOT ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT ((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY TYPEOF(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY TYPEOF(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY TYPEOF(DISTINCT ((vt0.c0)<<(vt0.c0))) ASC;
SELECT * FROM v0, t0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY '' ASC);
SELECT * FROM v0, t0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY '' ASC);
SELECT * FROM v0, t0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY '' ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ('L[3(n]') AND (((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ('L[3(n]') AND (((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ('L[3(n]') AND (((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ('L[3(n]') AND (((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ('L[3(n]') AND (((vt0.c0)IS NOT(vt0.c0)))));
SELECT * FROM v0, vt0, t0 WHERE ((('602102036') NOT BETWEEN ((~ (v0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((('602102036') NOT BETWEEN ((~ (v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((('602102036') NOT BETWEEN ((~ (v0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((('602102036') NOT BETWEEN ((~ (v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((('602102036') NOT BETWEEN ((~ (v0.c0))) AND (v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.43330569697752797)) AND (SUBSTR(v0.c0, v0.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN 0.31880879056690425 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE)  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (0.6840599575073679))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.43330569697752797)) AND (SUBSTR(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN 0.31880879056690425 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE)  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (0.6840599575073679)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.43330569697752797)) AND (SUBSTR(v0.c0, v0.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN 0.31880879056690425 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE)  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (0.6840599575073679))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.43330569697752797)) AND (SUBSTR(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN 0.31880879056690425 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE)  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (0.6840599575073679)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.43330569697752797)) AND (SUBSTR(v0.c0, v0.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN 0.31880879056690425 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE)  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (0.6840599575073679))));
SELECT ALL * FROM t0, vt0 WHERE (UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (-1666982101) AND (vt0.c0)))) ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (-1666982101) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (-1666982101) AND (vt0.c0)))) ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (-1666982101) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (-1666982101) AND (vt0.c0)))) ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((+ (t0.c0)) COLLATE RTRIM) ORDER BY DATE(((((t0.c0)OR(t0.c0)))AND(t0.c0)), LIKELY(t0.c0), CAST(t0.c0 AS TEXT), t0.c0, ((t0.c0) ISNULL), ((t0.c0)<=(t0.c0)), t0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY DATE(((((t0.c0)OR(t0.c0)))AND(t0.c0)), LIKELY(t0.c0), CAST(t0.c0 AS TEXT), t0.c0, ((t0.c0) ISNULL), ((t0.c0)<=(t0.c0)), t0.c0 COLLATE NOCASE)  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (t0.c0)) COLLATE RTRIM) ORDER BY DATE(((((t0.c0)OR(t0.c0)))AND(t0.c0)), LIKELY(t0.c0), CAST(t0.c0 AS TEXT), t0.c0, ((t0.c0) ISNULL), ((t0.c0)<=(t0.c0)), t0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY DATE(((((t0.c0)OR(t0.c0)))AND(t0.c0)), LIKELY(t0.c0), CAST(t0.c0 AS TEXT), t0.c0, ((t0.c0) ISNULL), ((t0.c0)<=(t0.c0)), t0.c0 COLLATE NOCASE)  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (t0.c0)) COLLATE RTRIM) ORDER BY DATE(((((t0.c0)OR(t0.c0)))AND(t0.c0)), LIKELY(t0.c0), CAST(t0.c0 AS TEXT), t0.c0, ((t0.c0) ISNULL), ((t0.c0)<=(t0.c0)), t0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0, vt0.c0, '1567045288')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) ISNULL)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST, ((x'') BETWEEN ((v0.c0 IN (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, '1567045288')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST, ((x'') BETWEEN ((v0.c0 IN (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0, vt0.c0, '1567045288')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) ISNULL)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST, ((x'') BETWEEN ((v0.c0 IN (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, '1567045288')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST, ((x'') BETWEEN ((v0.c0 IN (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0, vt0.c0, '1567045288')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) ISNULL)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST, ((x'') BETWEEN ((v0.c0 IN (v0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB)) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB)) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB)) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY CASE WHEN (+ (t0.c0)) THEN (- (t0.c0)) WHEN t0.c0 THEN (((t0.c0)) BETWEEN ((0.273472823443492)) AND ((v0.c0))) WHEN TYPEOF(v0.c0) THEN (t0.c0 IN ()) ELSE (v0.c0 IN ()) END ASC  NULLS FIRST, (+ (v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, v0 ORDER BY CASE WHEN (+ (t0.c0)) THEN (- (t0.c0)) WHEN t0.c0 THEN (((t0.c0)) BETWEEN ((0.273472823443492)) AND ((v0.c0))) WHEN TYPEOF(v0.c0) THEN (t0.c0 IN ()) ELSE (v0.c0 IN ()) END ASC  NULLS FIRST, (+ (v0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY CASE WHEN (+ (t0.c0)) THEN (- (t0.c0)) WHEN t0.c0 THEN (((t0.c0)) BETWEEN ((0.273472823443492)) AND ((v0.c0))) WHEN TYPEOF(v0.c0) THEN (t0.c0 IN ()) ELSE (v0.c0 IN ()) END ASC  NULLS FIRST, (+ (v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, v0 ORDER BY CASE WHEN (+ (t0.c0)) THEN (- (t0.c0)) WHEN t0.c0 THEN (((t0.c0)) BETWEEN ((0.273472823443492)) AND ((v0.c0))) WHEN TYPEOF(v0.c0) THEN (t0.c0 IN ()) ELSE (v0.c0 IN ()) END ASC  NULLS FIRST, (+ (v0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY CASE WHEN (+ (t0.c0)) THEN (- (t0.c0)) WHEN t0.c0 THEN (((t0.c0)) BETWEEN ((0.273472823443492)) AND ((v0.c0))) WHEN TYPEOF(v0.c0) THEN (t0.c0 IN ()) ELSE (v0.c0 IN ()) END ASC  NULLS FIRST, (+ (v0.c0)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((TRIM(v0.c0))*(vt0.c0 COLLATE NOCASE)) WHERE (0.8864593932547125);
SELECT SUM(count) FROM (SELECT ((0.8864593932547125) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((TRIM(v0.c0))*(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((TRIM(v0.c0))*(vt0.c0 COLLATE NOCASE)) WHERE (0.8864593932547125);
SELECT SUM(count) FROM (SELECT ((0.8864593932547125) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((TRIM(v0.c0))*(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((TRIM(v0.c0))*(vt0.c0 COLLATE NOCASE)) WHERE (0.8864593932547125);
SELECT ALL * FROM vt0, t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (vt0.c0) ORDER BY (((- (v0.c0))) NOT BETWEEN (((x'') NOT BETWEEN (t0.c0) AND (v0.c0))) AND (x'')) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)IS(v0.c0))) AND (((((t0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((- (v0.c0))) NOT BETWEEN (((x'') NOT BETWEEN (t0.c0) AND (v0.c0))) AND (x'')) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)IS(v0.c0))) AND (((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (vt0.c0) ORDER BY (((- (v0.c0))) NOT BETWEEN (((x'') NOT BETWEEN (t0.c0) AND (v0.c0))) AND (x'')) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)IS(v0.c0))) AND (((((t0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((- (v0.c0))) NOT BETWEEN (((x'') NOT BETWEEN (t0.c0) AND (v0.c0))) AND (x'')) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)IS(v0.c0))) AND (((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (vt0.c0) ORDER BY (((- (v0.c0))) NOT BETWEEN (((x'') NOT BETWEEN (t0.c0) AND (v0.c0))) AND (x'')) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)IS(v0.c0))) AND (((((t0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(vt0.c0)) CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS INTEGER))AND(CAST(t0.c0 AS INTEGER))))OR('-1509201747')))AND(((((t0.c0)AND(vt0.c0)))OR(v0.c0)))))OR(((v0.c0) IS TRUE))) WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL)) ORDER BY (((~ (vt0.c0))) BETWEEN (t0.c0 COLLATE RTRIM) AND (t0.c0 COLLATE RTRIM)), ((((x'') NOTNULL))!=(t0.c0));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(vt0.c0)) CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS INTEGER))AND(CAST(t0.c0 AS INTEGER))))OR('-1509201747')))AND(((((t0.c0)AND(vt0.c0)))OR(v0.c0)))))OR(((v0.c0) IS TRUE))) ORDER BY (((~ (vt0.c0))) BETWEEN (t0.c0 COLLATE RTRIM) AND (t0.c0 COLLATE RTRIM)), ((((x'') NOTNULL))<>(t0.c0)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(vt0.c0)) CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS INTEGER))AND(CAST(t0.c0 AS INTEGER))))OR('-1509201747')))AND(((((t0.c0)AND(vt0.c0)))OR(v0.c0)))))OR(((v0.c0) IS TRUE))) WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL)) ORDER BY (((~ (vt0.c0))) BETWEEN (t0.c0 COLLATE RTRIM) AND (t0.c0 COLLATE RTRIM)), ((((x'') NOTNULL))!=(t0.c0));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(vt0.c0)) CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS INTEGER))AND(CAST(t0.c0 AS INTEGER))))OR('-1509201747')))AND(((((t0.c0)AND(vt0.c0)))OR(v0.c0)))))OR(((v0.c0) IS TRUE))) ORDER BY (((~ (vt0.c0))) BETWEEN (t0.c0 COLLATE RTRIM) AND (t0.c0 COLLATE RTRIM)), ((((x'') NOTNULL))<>(t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), SQLITE_SOURCE_ID(), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((t0.c0 COLLATE NOCASE, (((t0.c0))>=((t0.c0))), (((t0.c0))<=((t0.c0))))))) ORDER BY (((t0.c0))==((CASE WHEN t0.c0 THEN t0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), SQLITE_SOURCE_ID(), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((t0.c0 COLLATE NOCASE, (((t0.c0))>=((t0.c0))), (((t0.c0))<=((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0))=((CASE WHEN t0.c0 THEN t0.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), SQLITE_SOURCE_ID(), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((t0.c0 COLLATE NOCASE, (((t0.c0))>=((t0.c0))), (((t0.c0))<=((t0.c0))))))) ORDER BY (((t0.c0))==((CASE WHEN t0.c0 THEN t0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), SQLITE_SOURCE_ID(), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((t0.c0 COLLATE NOCASE, (((t0.c0))>=((t0.c0))), (((t0.c0))<=((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0))=((CASE WHEN t0.c0 THEN t0.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), SQLITE_SOURCE_ID(), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((t0.c0 COLLATE NOCASE, (((t0.c0))>=((t0.c0))), (((t0.c0))<=((t0.c0))))))) ORDER BY (((t0.c0))==((CASE WHEN t0.c0 THEN t0.c0 END))) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, v0 WHERE (((v0.c0)LIKE(t0.c0))) ORDER BY TYPEOF(DISTINCT load_extension(t0.c0, v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)LIKE(t0.c0))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY TYPEOF(DISTINCT load_extension(t0.c0, v0.c0))  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE (((v0.c0)LIKE(t0.c0))) ORDER BY TYPEOF(DISTINCT load_extension(t0.c0, v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)LIKE(t0.c0))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY TYPEOF(DISTINCT load_extension(t0.c0, v0.c0))  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE (((v0.c0)LIKE(t0.c0))) ORDER BY TYPEOF(DISTINCT load_extension(t0.c0, v0.c0))  NULLS FIRST;
SELECT * FROM t0 INNER JOIN vt0 ON (0.02695960680677245 IN (NULL)) COLLATE RTRIM WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (0.02695960680677245 IN (NULL)) COLLATE RTRIM);
SELECT * FROM t0 INNER JOIN vt0 ON (0.02695960680677245 IN (NULL)) COLLATE RTRIM WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (0.02695960680677245 IN (NULL)) COLLATE RTRIM);
SELECT * FROM t0 INNER JOIN vt0 ON (0.02695960680677245 IN (NULL)) COLLATE RTRIM WHERE (t0.c0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (t0.c0, '0ee皹	{'))) ORDER BY ((t0.c0)IS NOT('1898045765')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE RTRIM IN (t0.c0, '0ee皹	{'))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)IS NOT('1898045765')) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (t0.c0, '0ee皹	{'))) ORDER BY ((t0.c0)IS NOT('1898045765')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE RTRIM IN (t0.c0, '0ee皹	{'))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)IS NOT('1898045765')) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (t0.c0, '0ee皹	{'))) ORDER BY ((t0.c0)IS NOT('1898045765')) COLLATE BINARY;
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)AND(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)AND(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)AND(((t0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE ('-1345963815');
SELECT SUM(count) FROM (SELECT ALL (('-1345963815') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-1345963815');
SELECT SUM(count) FROM (SELECT ALL (('-1345963815') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-1345963815');
SELECT ALL * FROM t0 WHERE (((1.898045765E9) IS TRUE)) ORDER BY ((((t0.c0) IS TRUE))==(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((1.898045765E9) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE))=(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((1.898045765E9) IS TRUE)) ORDER BY ((((t0.c0) IS TRUE))==(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((1.898045765E9) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE))=(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((1.898045765E9) IS TRUE)) ORDER BY ((((t0.c0) IS TRUE))==(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(((v0.c0)!=(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((v0.c0)!=(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(((v0.c0)!=(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((v0.c0)!=(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(((v0.c0)!=(v0.c0))));
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR(vt0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0))) ASC  NULLS LAST, ((ROUND(vt0.c0, vt0.c0)) NOT NULL) DESC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0))) ASC  NULLS LAST, ((ROUND(vt0.c0, vt0.c0)) NOT NULL) DESC, vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR(vt0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0))) ASC  NULLS LAST, ((ROUND(vt0.c0, vt0.c0)) NOT NULL) DESC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0))) ASC  NULLS LAST, ((ROUND(vt0.c0, vt0.c0)) NOT NULL) DESC, vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR(vt0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0))) ASC  NULLS LAST, ((ROUND(vt0.c0, vt0.c0)) NOT NULL) DESC, vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) IS FALSE))<=((~ ('778283685')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))<=((~ ('778283685'))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) IS FALSE))<=((~ ('778283685')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))<=((~ ('778283685'))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) IS FALSE))<=((~ ('778283685')))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON UNLIKELY('v+<b') WHERE ((((((v0.c0) ISNULL)))<>(((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) ISNULL)))<>(((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON UNLIKELY('v+<b'));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON UNLIKELY('v+<b') WHERE ((((((v0.c0) ISNULL)))<>(((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) ISNULL)))<>(((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON UNLIKELY('v+<b'));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON UNLIKELY('v+<b') WHERE ((((((v0.c0) ISNULL)))<>(((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (NOT (CAST(vt0.c0 AS BLOB))), ((vt0.c0) BETWEEN (vt0.c0) AND ('9l*s5')) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (NOT (CAST(vt0.c0 AS BLOB))), ((vt0.c0) BETWEEN (vt0.c0) AND ('9l*s5')) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (NOT (CAST(vt0.c0 AS BLOB))), ((vt0.c0) BETWEEN (vt0.c0) AND ('9l*s5')) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (NOT (CAST(vt0.c0 AS BLOB))), ((vt0.c0) BETWEEN (vt0.c0) AND ('9l*s5')) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (NOT (CAST(vt0.c0 AS BLOB))), ((vt0.c0) BETWEEN (vt0.c0) AND ('9l*s5')) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((((CAST(v0.c0 AS REAL))OR(v0.c0)))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))OR((('1932448410')+(0.2883023066367546)))))OR(((((((((t0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS REAL))OR(v0.c0)))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))OR((('1932448410')+(0.2883023066367546)))))OR(((((((((t0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((((CAST(v0.c0 AS REAL))OR(v0.c0)))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))OR((('1932448410')+(0.2883023066367546)))))OR(((((((((t0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS REAL))OR(v0.c0)))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))OR((('1932448410')+(0.2883023066367546)))))OR(((((((((t0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((((CAST(v0.c0 AS REAL))OR(v0.c0)))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))OR((('1932448410')+(0.2883023066367546)))))OR(((((((((t0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((0.2033460473077664)) AND ((vt0.c0)))  WHEN (((vt0.c0, vt0.c0, ''))<((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) END) ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((0.2033460473077664)) AND ((vt0.c0)))  WHEN (((vt0.c0, vt0.c0, ''))<((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((0.2033460473077664)) AND ((vt0.c0)))  WHEN (((vt0.c0, vt0.c0, ''))<((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) END) ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((0.2033460473077664)) AND ((vt0.c0)))  WHEN (((vt0.c0, vt0.c0, ''))<((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((0.2033460473077664)) AND ((vt0.c0)))  WHEN (((vt0.c0, vt0.c0, ''))<((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) END) ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY UPPER(DISTINCT ((vt0.c0) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT ((vt0.c0) IS TRUE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY UPPER(DISTINCT ((vt0.c0) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT ((vt0.c0) IS TRUE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY UPPER(DISTINCT ((vt0.c0) IS TRUE))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY t0.c0 DESC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY t0.c0 DESC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY t0.c0 DESC, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS REAL)  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))||('0.18883802018756157'))) ORDER BY ((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))||('0.18883802018756157'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))||('0.18883802018756157'))) ORDER BY ((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))||('0.18883802018756157'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))||('0.18883802018756157'))) ORDER BY ((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (vt0.c0)))) DESC;
SELECT ALL * FROM v0 CROSS JOIN t0 ON v0.c0 WHERE ((((((v0.c0 IN ()))AND(CAST(v0.c0 AS INTEGER))))AND(CASE WHEN x'' THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(CAST(v0.c0 AS INTEGER))))AND(CASE WHEN x'' THEN t0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON v0.c0);
SELECT ALL * FROM v0 CROSS JOIN t0 ON v0.c0 WHERE ((((((v0.c0 IN ()))AND(CAST(v0.c0 AS INTEGER))))AND(CASE WHEN x'' THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(CAST(v0.c0 AS INTEGER))))AND(CASE WHEN x'' THEN t0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON v0.c0);
SELECT ALL * FROM v0 CROSS JOIN t0 ON v0.c0 WHERE ((((((v0.c0 IN ()))AND(CAST(v0.c0 AS INTEGER))))AND(CASE WHEN x'' THEN t0.c0 END)));
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(CAST(0xffffffff8a7f8c88 AS TEXT))))OR(('*D᝙ꪥ\)sLo' IN ()))))AND(((t0.c0)LIKE(t0.c0)))))OR(CAST(t0.c0 AS REAL))) ASC, ((CAST(t0.c0 AS REAL))IS(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(CAST(0xffffffff8a7f8c88 AS TEXT))))OR(('*D᝙ꪥ\)sLo' IN ()))))AND(((t0.c0)LIKE(t0.c0)))))OR(CAST(t0.c0 AS REAL))) ASC, ((CAST(t0.c0 AS REAL))IS(((t0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(CAST(0xffffffff8a7f8c88 AS TEXT))))OR(('*D᝙ꪥ\)sLo' IN ()))))AND(((t0.c0)LIKE(t0.c0)))))OR(CAST(t0.c0 AS REAL))) ASC, ((CAST(t0.c0 AS REAL))IS(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(CAST(0xffffffff8a7f8c88 AS TEXT))))OR(('*D᝙ꪥ\)sLo' IN ()))))AND(((t0.c0)LIKE(t0.c0)))))OR(CAST(t0.c0 AS REAL))) ASC, ((CAST(t0.c0 AS REAL))IS(((t0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(CAST(0xffffffff8a7f8c88 AS TEXT))))OR(('*D᝙ꪥ\)sLo' IN ()))))AND(((t0.c0)LIKE(t0.c0)))))OR(CAST(t0.c0 AS REAL))) ASC, ((CAST(t0.c0 AS REAL))IS(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT * FROM v0, t0 WHERE ((((t0.c0, t0.c0, v0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c0)=(t0.c0)), CASE WHEN x'827d' THEN t0.c0 END)) AND ((((NULL)!=(t0.c0)), ((t0.c0) NOT NULL), v0.c0)))) ORDER BY '168367961';
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, v0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c0)=(t0.c0)), CASE WHEN x'827d' THEN t0.c0 END)) AND ((((NULL)<>(t0.c0)), ((t0.c0) NOT NULL), v0.c0)))) IS TRUE)  as count FROM v0, t0 ORDER BY '168367961');
SELECT * FROM v0, t0 WHERE ((((t0.c0, t0.c0, v0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c0)=(t0.c0)), CASE WHEN x'827d' THEN t0.c0 END)) AND ((((NULL)!=(t0.c0)), ((t0.c0) NOT NULL), v0.c0)))) ORDER BY '168367961';
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, v0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c0)=(t0.c0)), CASE WHEN x'827d' THEN t0.c0 END)) AND ((((NULL)<>(t0.c0)), ((t0.c0) NOT NULL), v0.c0)))) IS TRUE)  as count FROM v0, t0 ORDER BY '168367961');
SELECT * FROM v0, t0 WHERE ((((t0.c0, t0.c0, v0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c0)=(t0.c0)), CASE WHEN x'827d' THEN t0.c0 END)) AND ((((NULL)!=(t0.c0)), ((t0.c0) NOT NULL), v0.c0)))) ORDER BY '168367961';
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) IS TRUE)) ORDER BY UPPER(CAST(v0.c0 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, t0 ORDER BY UPPER(CAST(v0.c0 AS BLOB))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) IS TRUE)) ORDER BY UPPER(CAST(v0.c0 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, t0 ORDER BY UPPER(CAST(v0.c0 AS BLOB))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) IS TRUE)) ORDER BY UPPER(CAST(v0.c0 AS BLOB))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)<=(NULL)))) AND ((((t0.c0)>(t0.c0)))))) ORDER BY (((t0.c0)AND(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((t0.c0)<=(NULL)))) AND ((((t0.c0)>(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)AND(t0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)<=(NULL)))) AND ((((t0.c0)>(t0.c0)))))) ORDER BY (((t0.c0)AND(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((t0.c0)<=(NULL)))) AND ((((t0.c0)>(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)AND(t0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)<=(NULL)))) AND ((((t0.c0)>(t0.c0)))))) ORDER BY (((t0.c0)AND(t0.c0)) IN ()) ASC;
SELECT * FROM v0, t0 WHERE (HEX(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (HEX(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (HEX(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE) WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0, t0 WHERE (UNLIKELY(v0.c0) COLLATE BINARY) ORDER BY x''  NULLS FIRST, ((((v0.c0)LIKE(v0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY x''  NULLS FIRST, ((((v0.c0)LIKE(v0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (UNLIKELY(v0.c0) COLLATE BINARY) ORDER BY x''  NULLS FIRST, ((((v0.c0)LIKE(v0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY x''  NULLS FIRST, ((((v0.c0)LIKE(v0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (UNLIKELY(v0.c0) COLLATE BINARY) ORDER BY x''  NULLS FIRST, ((((v0.c0)LIKE(v0.c0))) IS TRUE) ASC;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((('_')AND(vt0.c0)))OR(((x'78fa')>>(v0.c0))))) ORDER BY CAST(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('_')AND(vt0.c0)))OR(((x'78fa')>>(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((('_')AND(vt0.c0)))OR(((x'78fa')>>(v0.c0))))) ORDER BY CAST(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('_')AND(vt0.c0)))OR(((x'78fa')>>(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((('_')AND(vt0.c0)))OR(((x'78fa')>>(v0.c0))))) ORDER BY CAST(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt0, t0, v0 WHERE (((((t0.c0)AND(v0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, 5.64477682E8)))) AND ((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) DESC  NULLS LAST, CAST(((0.8531246565286841) IS TRUE) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(v0.c0)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((t0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, 5.64477682E8)))) AND ((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) DESC  NULLS LAST, CAST(((0.8531246565286841) IS TRUE) AS BLOB));
SELECT ALL * FROM vt0, t0, v0 WHERE (((((t0.c0)AND(v0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, 5.64477682E8)))) AND ((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) DESC  NULLS LAST, CAST(((0.8531246565286841) IS TRUE) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(v0.c0)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((t0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, 5.64477682E8)))) AND ((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) DESC  NULLS LAST, CAST(((0.8531246565286841) IS TRUE) AS BLOB));
SELECT ALL * FROM vt0, t0, v0 WHERE (((((t0.c0)AND(v0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, 5.64477682E8)))) AND ((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) DESC  NULLS LAST, CAST(((0.8531246565286841) IS TRUE) AS BLOB);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT * FROM v0 CROSS JOIN t0 ON (((- (t0.c0)))<(((v0.c0)>>(t0.c0)))) FULL OUTER JOIN vt0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c0)+(0.2855105241984275)) ELSE ((vt0.c0)=(vt0.c0)) END WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)%(((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 END)%(((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((- (t0.c0)))<(((v0.c0)>>(t0.c0)))) FULL OUTER JOIN vt0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c0)+(0.2855105241984275)) ELSE ((vt0.c0)=(vt0.c0)) END);
SELECT * FROM v0 CROSS JOIN t0 ON (((- (t0.c0)))<(((v0.c0)>>(t0.c0)))) FULL OUTER JOIN vt0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c0)+(0.2855105241984275)) ELSE ((vt0.c0)=(vt0.c0)) END WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)%(((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 END)%(((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((- (t0.c0)))<(((v0.c0)>>(t0.c0)))) FULL OUTER JOIN vt0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c0)+(0.2855105241984275)) ELSE ((vt0.c0)=(vt0.c0)) END);
SELECT * FROM v0 CROSS JOIN t0 ON (((- (t0.c0)))<(((v0.c0)>>(t0.c0)))) FULL OUTER JOIN vt0 ON CASE CAST(v0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c0)+(0.2855105241984275)) ELSE ((vt0.c0)=(vt0.c0)) END WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)%(((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (TRIM(x''));
SELECT SUM(count) FROM (SELECT ((TRIM(x'')) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (TRIM(x''));
SELECT SUM(count) FROM (SELECT ((TRIM(x'')) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (TRIM(x''));
SELECT * FROM v0, vt0 INNER JOIN t0 ON (((v0.c0, v0.c0, 0x1, x'', vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN '-2125552809' ELSE vt0.c0 END, ((v0.c0)<<(t0.c0)), CAST(t0.c0 AS NUMERIC), (((t0.c0))>((v0.c0))), CAST(t0.c0 AS REAL))) AND ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c0 THEN vt0.c0 END, LIKE(vt0.c0, v0.c0), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), ((v0.c0)*(v0.c0))))) WHERE (CAST(((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (((v0.c0, v0.c0, 0X1, x'', vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN '-2125552809' ELSE vt0.c0 END, ((v0.c0)<<(t0.c0)), CAST(t0.c0 AS NUMERIC), (((t0.c0))>((v0.c0))), CAST(t0.c0 AS REAL))) AND ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c0 THEN vt0.c0 END, LIKE(vt0.c0, v0.c0), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), ((v0.c0)*(v0.c0))))));
SELECT * FROM v0, vt0 INNER JOIN t0 ON (((v0.c0, v0.c0, 0x1, x'', vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN '-2125552809' ELSE vt0.c0 END, ((v0.c0)<<(t0.c0)), CAST(t0.c0 AS NUMERIC), (((t0.c0))>((v0.c0))), CAST(t0.c0 AS REAL))) AND ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c0 THEN vt0.c0 END, LIKE(vt0.c0, v0.c0), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), ((v0.c0)*(v0.c0))))) WHERE (CAST(((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (((v0.c0, v0.c0, 0X1, x'', vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN '-2125552809' ELSE vt0.c0 END, ((v0.c0)<<(t0.c0)), CAST(t0.c0 AS NUMERIC), (((t0.c0))>((v0.c0))), CAST(t0.c0 AS REAL))) AND ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c0 THEN vt0.c0 END, LIKE(vt0.c0, v0.c0), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), ((v0.c0)*(v0.c0))))));
SELECT * FROM v0, vt0 INNER JOIN t0 ON (((v0.c0, v0.c0, 0x1, x'', vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN '-2125552809' ELSE vt0.c0 END, ((v0.c0)<<(t0.c0)), CAST(t0.c0 AS NUMERIC), (((t0.c0))>((v0.c0))), CAST(t0.c0 AS REAL))) AND ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c0 THEN vt0.c0 END, LIKE(vt0.c0, v0.c0), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), ((v0.c0)*(v0.c0))))) WHERE (CAST(((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.4232382036984421)))AND(t0.c0))) IS TRUE)) ORDER BY CASE t0.c0  WHEN t0.c0 THEN 0.040008496687441 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.4232382036984421)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN t0.c0 THEN 0.040008496687441 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.4232382036984421)))AND(t0.c0))) IS TRUE)) ORDER BY CASE t0.c0  WHEN t0.c0 THEN 0.040008496687441 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.4232382036984421)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN t0.c0 THEN 0.040008496687441 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.4232382036984421)))AND(t0.c0))) IS TRUE)) ORDER BY CASE t0.c0  WHEN t0.c0 THEN 0.040008496687441 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE (+ (t0.c0))  WHEN ((((x'')AND(t0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE RTRIM THEN TRIM(v0.c0, t0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (('110984545')>=(t0.c0)) END) ORDER BY CASE ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND('')))AND(v0.c0))  WHEN ((0.6613326654243614) NOT BETWEEN (v0.c0) AND (0.6613326654243614)) THEN vt0.c0 ELSE (- (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (t0.c0))  WHEN ((((x'')AND(t0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE RTRIM THEN TRIM(v0.c0, t0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (('110984545')>=(t0.c0)) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND('')))AND(v0.c0))  WHEN ((0.6613326654243614) NOT BETWEEN (v0.c0) AND (0.6613326654243614)) THEN vt0.c0 ELSE (- (v0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE (+ (t0.c0))  WHEN ((((x'')AND(t0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE RTRIM THEN TRIM(v0.c0, t0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (('110984545')>=(t0.c0)) END) ORDER BY CASE ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND('')))AND(v0.c0))  WHEN ((0.6613326654243614) NOT BETWEEN (v0.c0) AND (0.6613326654243614)) THEN vt0.c0 ELSE (- (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (t0.c0))  WHEN ((((x'')AND(t0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE RTRIM THEN TRIM(v0.c0, t0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (('110984545')>=(t0.c0)) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND('')))AND(v0.c0))  WHEN ((0.6613326654243614) NOT BETWEEN (v0.c0) AND (0.6613326654243614)) THEN vt0.c0 ELSE (- (v0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE (+ (t0.c0))  WHEN ((((x'')AND(t0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE RTRIM THEN TRIM(v0.c0, t0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (('110984545')>=(t0.c0)) END) ORDER BY CASE ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND('')))AND(v0.c0))  WHEN ((0.6613326654243614) NOT BETWEEN (v0.c0) AND (0.6613326654243614)) THEN vt0.c0 ELSE (- (v0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (NULL))) ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (0.21679140356471027) AND (IFNULL(v0.c0, v0.c0))) ASC, (((v0.c0 IN (v0.c0))) IS FALSE), (((((((v0.c0))!=((v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS INTEGER)) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (NULL))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (0.21679140356471027) AND (IFNULL(v0.c0, v0.c0))) ASC, (((v0.c0 IN (v0.c0))) IS FALSE), (((((((v0.c0))<>((v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (NULL))) ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (0.21679140356471027) AND (IFNULL(v0.c0, v0.c0))) ASC, (((v0.c0 IN (v0.c0))) IS FALSE), (((((((v0.c0))!=((v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS INTEGER)) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (NULL))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (0.21679140356471027) AND (IFNULL(v0.c0, v0.c0))) ASC, (((v0.c0 IN (v0.c0))) IS FALSE), (((((((v0.c0))<>((v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (NULL))) ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (0.21679140356471027) AND (IFNULL(v0.c0, v0.c0))) ASC, (((v0.c0 IN (v0.c0))) IS FALSE), (((((((v0.c0))!=((v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT NULLIF(t0.c0, t0.c0), 0.3579042350751037) DESC  NULLS FIRST, t0.c0, JULIANDAY(NULLIF(DISTINCT vt0.c0, t0.c0), (0.9839357039370975 IN ()), ((((v0.c0)AND(v0.c0)))OR(v0.c0))), (((t0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY LIKELIHOOD(DISTINCT NULLIF(t0.c0, t0.c0), 0.3579042350751037) DESC  NULLS FIRST, t0.c0, JULIANDAY(NULLIF(DISTINCT vt0.c0, t0.c0), (0.9839357039370975 IN ()), ((((v0.c0)AND(v0.c0)))OR(v0.c0))), (((t0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0))))));
SELECT ALL * FROM vt0, v0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT NULLIF(t0.c0, t0.c0), 0.3579042350751037) DESC  NULLS FIRST, t0.c0, JULIANDAY(NULLIF(DISTINCT vt0.c0, t0.c0), (0.9839357039370975 IN ()), ((((v0.c0)AND(v0.c0)))OR(v0.c0))), (((t0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY LIKELIHOOD(DISTINCT NULLIF(t0.c0, t0.c0), 0.3579042350751037) DESC  NULLS FIRST, t0.c0, JULIANDAY(NULLIF(DISTINCT vt0.c0, t0.c0), (0.9839357039370975 IN ()), ((((v0.c0)AND(v0.c0)))OR(v0.c0))), (((t0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0))))));
SELECT ALL * FROM vt0, v0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT NULLIF(t0.c0, t0.c0), 0.3579042350751037) DESC  NULLS FIRST, t0.c0, JULIANDAY(NULLIF(DISTINCT vt0.c0, t0.c0), (0.9839357039370975 IN ()), ((((v0.c0)AND(v0.c0)))OR(v0.c0))), (((t0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0 IN (t0.c0)))AND(((t0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (t0.c0)))AND(((t0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0 IN (t0.c0)))AND(((t0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (t0.c0)))AND(((t0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0 IN (t0.c0)))AND(((t0.c0)OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c0))<>((((t0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0))<>((((t0.c0) IS TRUE))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c0))<>((((t0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0))<>((((t0.c0) IS TRUE))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c0))<>((((t0.c0) IS TRUE)))));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)>=(t0.c0)))LIKE(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR('-440152199')))GLOB(CASE WHEN vt0.c0 THEN NULL END)) DESC, ((vt0.c0 COLLATE NOCASE)|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(t0.c0)))LIKE(vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR('-440152199')))GLOB(CASE WHEN vt0.c0 THEN NULL END)) DESC, ((vt0.c0 COLLATE NOCASE)|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)>=(t0.c0)))LIKE(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR('-440152199')))GLOB(CASE WHEN vt0.c0 THEN NULL END)) DESC, ((vt0.c0 COLLATE NOCASE)|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(t0.c0)))LIKE(vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR('-440152199')))GLOB(CASE WHEN vt0.c0 THEN NULL END)) DESC, ((vt0.c0 COLLATE NOCASE)|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)>=(t0.c0)))LIKE(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR('-440152199')))GLOB(CASE WHEN vt0.c0 THEN NULL END)) DESC, ((vt0.c0 COLLATE NOCASE)|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0, t0, v0 WHERE (CASE CAST('' AS TEXT)  WHEN CASE WHEN '.Lgc룀D﬑T' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END THEN (((v0.c0))<=((vt0.c0))) END) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST('' AS TEXT)  WHEN CASE WHEN '.Lgc룀D﬑T' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END THEN (((v0.c0))<=((vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM vt0, t0, v0 WHERE (CASE CAST('' AS TEXT)  WHEN CASE WHEN '.Lgc룀D﬑T' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END THEN (((v0.c0))<=((vt0.c0))) END) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST('' AS TEXT)  WHEN CASE WHEN '.Lgc룀D﬑T' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END THEN (((v0.c0))<=((vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM vt0, t0, v0 WHERE (CASE CAST('' AS TEXT)  WHEN CASE WHEN '.Lgc룀D﬑T' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END THEN (((v0.c0))<=((vt0.c0))) END) ORDER BY v0.c0 ASC;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (vt0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE FULL OUTER JOIN v0 ON (((v0.c0)GLOB(v0.c0)) IN ()) WHERE (((((vt0.c0))<((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<((t0.c0))) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (vt0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE FULL OUTER JOIN v0 ON (((v0.c0)GLOB(v0.c0)) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (vt0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE FULL OUTER JOIN v0 ON (((v0.c0)GLOB(v0.c0)) IN ()) WHERE (((((vt0.c0))<((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<((t0.c0))) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (vt0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE FULL OUTER JOIN v0 ON (((v0.c0)GLOB(v0.c0)) IN ()));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)=('')) THEN (~ (v0.c0)) ELSE LOWER(NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)==('')) THEN (~ (v0.c0)) ELSE LOWER(NULL) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)=('')) THEN (~ (v0.c0)) ELSE LOWER(NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)==('')) THEN (~ (v0.c0)) ELSE LOWER(NULL) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)=('')) THEN (~ (v0.c0)) ELSE LOWER(NULL) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(0X7550df39)))AND(((v0.c0)>(v0.c0)))))AND(v0.c0)))AND(LIKE(0Xf92e277, v0.c0, '1'))) ASC  NULLS FIRST, '-2071519168' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(0X7550df39)))AND(((v0.c0)>(v0.c0)))))AND(v0.c0)))AND(LIKE(0xf92e277, v0.c0, '1'))) ASC  NULLS FIRST, '-2071519168' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(0X7550df39)))AND(((v0.c0)>(v0.c0)))))AND(v0.c0)))AND(LIKE(0Xf92e277, v0.c0, '1'))) ASC  NULLS FIRST, '-2071519168' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(0X7550df39)))AND(((v0.c0)>(v0.c0)))))AND(v0.c0)))AND(LIKE(0xf92e277, v0.c0, '1'))) ASC  NULLS FIRST, '-2071519168' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(0X7550df39)))AND(((v0.c0)>(v0.c0)))))AND(v0.c0)))AND(LIKE(0Xf92e277, v0.c0, '1'))) ASC  NULLS FIRST, '-2071519168' ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (('' IN (((vt0.c0)+(v0.c0)), SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT SUM(count) FROM (SELECT ((('' IN (((vt0.c0)+(v0.c0)), SQLITE_COMPILEOPTION_GET(t0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (('' IN (((vt0.c0)+(v0.c0)), SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT SUM(count) FROM (SELECT ((('' IN (((vt0.c0)+(v0.c0)), SQLITE_COMPILEOPTION_GET(t0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (('' IN (((vt0.c0)+(v0.c0)), SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0) ISNULL)) BETWEEN ((~ (t0.c0))) AND (x'783e' COLLATE BINARY))) ORDER BY 0.972612235882738;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL)) BETWEEN ((~ (t0.c0))) AND (x'783e' COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.972612235882738);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0) ISNULL)) BETWEEN ((~ (t0.c0))) AND (x'783e' COLLATE BINARY))) ORDER BY 0.972612235882738;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL)) BETWEEN ((~ (t0.c0))) AND (x'783e' COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.972612235882738);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0) ISNULL)) BETWEEN ((~ (t0.c0))) AND (x'783e' COLLATE BINARY))) ORDER BY 0.972612235882738;
SELECT * FROM vt0, v0, t0 WHERE (CASE ((t0.c0)<(t0.c0))  WHEN ((((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN '-1509201747' COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c0)) THEN (((v0.c0))!=((v0.c0))) END) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((v0.c0)*(v0.c0)))))  NULLS FIRST, (((((t0.c0 IN (vt0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)<(t0.c0))  WHEN ((((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN '-1509201747' COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c0)) THEN (((v0.c0))<>((v0.c0))) END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((v0.c0)*(v0.c0)))))  NULLS FIRST, (((((t0.c0 IN (vt0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(((t0.c0) ISNULL))));
SELECT * FROM vt0, v0, t0 WHERE (CASE ((t0.c0)<(t0.c0))  WHEN ((((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN '-1509201747' COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c0)) THEN (((v0.c0))!=((v0.c0))) END) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((v0.c0)*(v0.c0)))))  NULLS FIRST, (((((t0.c0 IN (vt0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)<(t0.c0))  WHEN ((((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN '-1509201747' COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c0)) THEN (((v0.c0))<>((v0.c0))) END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((v0.c0)*(v0.c0)))))  NULLS FIRST, (((((t0.c0 IN (vt0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(((t0.c0) ISNULL))));
SELECT * FROM vt0, v0, t0 WHERE (CASE ((t0.c0)<(t0.c0))  WHEN ((((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN '-1509201747' COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c0)) THEN (((v0.c0))!=((v0.c0))) END) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((v0.c0)*(v0.c0)))))  NULLS FIRST, (((((t0.c0 IN (vt0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(((t0.c0) ISNULL)));
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0);
SELECT * FROM t0 WHERE (((((t0.c0)-('.F9RoE&'))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY UPPER(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)-('.F9RoE&'))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0)-('.F9RoE&'))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY UPPER(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)-('.F9RoE&'))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0)-('.F9RoE&'))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY UPPER(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 INNER JOIN v0 ON NULL WHERE ((((((vt0.c0, v0.c0, t0.c0))>=((v0.c0, vt0.c0, vt0.c0))))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND ('')))|((vt0.c0 IN (t0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((v0.c0)OR(v0.c0))) AND ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, t0.c0))>=((v0.c0, vt0.c0, vt0.c0))))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 INNER JOIN v0 ON NULL ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND ('')))|((vt0.c0 IN (t0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((v0.c0)OR(v0.c0))) AND ((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 INNER JOIN v0 ON NULL WHERE ((((((vt0.c0, v0.c0, t0.c0))>=((v0.c0, vt0.c0, vt0.c0))))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND ('')))|((vt0.c0 IN (t0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((v0.c0)OR(v0.c0))) AND ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, t0.c0))>=((v0.c0, vt0.c0, vt0.c0))))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 INNER JOIN v0 ON NULL ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND ('')))|((vt0.c0 IN (t0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((v0.c0)OR(v0.c0))) AND ((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 INNER JOIN v0 ON NULL WHERE ((((((vt0.c0, v0.c0, t0.c0))>=((v0.c0, vt0.c0, vt0.c0))))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (v0.c0) AND ('')))|((vt0.c0 IN (t0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((v0.c0)OR(v0.c0))) AND ((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('Ḩ>y(|lBy')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY CAST(((v0.c0)|(v0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((('Ḩ>y(|lBy')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((v0.c0)|(v0.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('Ḩ>y(|lBy')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY CAST(((v0.c0)|(v0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((('Ḩ>y(|lBy')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((v0.c0)|(v0.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('Ḩ>y(|lBy')) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY CAST(((v0.c0)|(v0.c0)) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((HEX(x''))OR((+ (vt0.c0)))))AND((((vt0.c0))<=((x'')))))) ORDER BY '9lょDg''8'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(x''))OR((+ (vt0.c0)))))AND((((vt0.c0))<=((x'')))))) IS TRUE)  as count FROM vt0 ORDER BY '9lょDg''8'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((HEX(x''))OR((+ (vt0.c0)))))AND((((vt0.c0))<=((x'')))))) ORDER BY '9lょDg''8'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(x''))OR((+ (vt0.c0)))))AND((((vt0.c0))<=((x'')))))) IS TRUE)  as count FROM vt0 ORDER BY '9lょDg''8'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((HEX(x''))OR((+ (vt0.c0)))))AND((((vt0.c0))<=((x'')))))) ORDER BY '9lょDg''8'  NULLS LAST;
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0, t0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY v0.c0, CASE (((vt0.c0))==((t0.c0)))  WHEN ((vt0.c0)-(v0.c0)) THEN ((t0.c0) NOTNULL) ELSE t0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY v0.c0, CASE (((vt0.c0))=((t0.c0)))  WHEN ((vt0.c0)-(v0.c0)) THEN ((t0.c0) NOTNULL) ELSE t0.c0 END ASC);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0, t0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY v0.c0, CASE (((vt0.c0))==((t0.c0)))  WHEN ((vt0.c0)-(v0.c0)) THEN ((t0.c0) NOTNULL) ELSE t0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY v0.c0, CASE (((vt0.c0))=((t0.c0)))  WHEN ((vt0.c0)-(v0.c0)) THEN ((t0.c0) NOTNULL) ELSE t0.c0 END ASC);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0, t0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY v0.c0, CASE (((vt0.c0))==((t0.c0)))  WHEN ((vt0.c0)-(v0.c0)) THEN ((t0.c0) NOTNULL) ELSE t0.c0 END ASC;
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON UNLIKELY(UPPER(DISTINCT t0.c0)) WHERE ((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN ((~ (v0.c0))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON UNLIKELY(UPPER(DISTINCT t0.c0)));
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON UNLIKELY(UPPER(DISTINCT t0.c0)) WHERE ((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN ((~ (v0.c0))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON UNLIKELY(UPPER(DISTINCT t0.c0)));
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON UNLIKELY(UPPER(DISTINCT t0.c0)) WHERE ((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN ((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (UPPER(DISTINCT ((v0.c0)==('0.4625608430044448'))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((v0.c0)=('0.4625608430044448')))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (UPPER(DISTINCT ((v0.c0)==('0.4625608430044448'))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((v0.c0)=('0.4625608430044448')))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (UPPER(DISTINCT ((v0.c0)==('0.4625608430044448'))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t0.c0)))))) ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL) ASC, CASE WHEN ((v0.c0) NOT NULL) THEN (- (0.22475845829649743)) ELSE HEX(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL) ASC, CASE WHEN ((v0.c0) NOT NULL) THEN (- (0.22475845829649743)) ELSE HEX(vt0.c0) END);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t0.c0)))))) ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL) ASC, CASE WHEN ((v0.c0) NOT NULL) THEN (- (0.22475845829649743)) ELSE HEX(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL) ASC, CASE WHEN ((v0.c0) NOT NULL) THEN (- (0.22475845829649743)) ELSE HEX(vt0.c0) END);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t0.c0)))))) ORDER BY ((((((vt0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL) ASC, CASE WHEN ((v0.c0) NOT NULL) THEN (- (0.22475845829649743)) ELSE HEX(vt0.c0) END;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON x'' WHERE (((CAST('1514352192' AS BLOB))||((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ORDER BY (((((vt0.c0))!=((vt0.c0))))IS(ROUND(t0.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST('1514352192' AS BLOB))||((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON x'' ORDER BY (((((vt0.c0))<>((vt0.c0))))IS(ROUND(t0.c0, vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON x'' WHERE (((CAST('1514352192' AS BLOB))||((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ORDER BY (((((vt0.c0))!=((vt0.c0))))IS(ROUND(t0.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST('1514352192' AS BLOB))||((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON x'' ORDER BY (((((vt0.c0))<>((vt0.c0))))IS(ROUND(t0.c0, vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON x'' WHERE (((CAST('1514352192' AS BLOB))||((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ORDER BY (((((vt0.c0))!=((vt0.c0))))IS(ROUND(t0.c0, vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) ISNULL)))));
SELECT * FROM v0 WHERE (((((v0.c0)+(v0.c0)))*(CAST(v0.c0 AS REAL)))) ORDER BY (((- (v0.c0)))-(((v0.c0) NOT NULL))), (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0)))*(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))-(((v0.c0) NOT NULL))), (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC);
SELECT * FROM v0 WHERE (((((v0.c0)+(v0.c0)))*(CAST(v0.c0 AS REAL)))) ORDER BY (((- (v0.c0)))-(((v0.c0) NOT NULL))), (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0)))*(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))-(((v0.c0) NOT NULL))), (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC);
SELECT * FROM v0 WHERE (((((v0.c0)+(v0.c0)))*(CAST(v0.c0 AS REAL)))) ORDER BY (((- (v0.c0)))-(((v0.c0) NOT NULL))), (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC;
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT * FROM vt0, v0, t0 WHERE ((vt0.c0 IN (vt0.c0 COLLATE BINARY, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0 COLLATE BINARY, vt0.c0))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ((vt0.c0 IN (vt0.c0 COLLATE BINARY, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0 COLLATE BINARY, vt0.c0))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ((vt0.c0 IN (vt0.c0 COLLATE BINARY, vt0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN x'202f' WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((NOT (t0.c0)))))AND(((v0.c0)GLOB(t0.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) FULL OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY WHERE (CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN x'202f' WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((NOT (t0.c0)))))AND(((v0.c0)GLOB(t0.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) FULL OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN x'202f' WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((NOT (t0.c0)))))AND(((v0.c0)GLOB(t0.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) FULL OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY WHERE (CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN x'202f' WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((NOT (t0.c0)))))AND(((v0.c0)GLOB(t0.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) FULL OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT * FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN '>IR?ᑝ6)*E' END))) ORDER BY (~ (((t0.c0)<(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t0.c0 THEN '>IR?ᑝ6)*E' END))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0)<(NULL)))));
SELECT * FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN '>IR?ᑝ6)*E' END))) ORDER BY (~ (((t0.c0)<(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t0.c0 THEN '>IR?ᑝ6)*E' END))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0)<(NULL)))));
SELECT * FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN '>IR?ᑝ6)*E' END))) ORDER BY (~ (((t0.c0)<(NULL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((((v0.c0)/(v0.c0)))>(((vt0.c0) ISNULL))), (~ ((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)/(v0.c0)))>(((vt0.c0) ISNULL))), (~ ((+ (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((((v0.c0)/(v0.c0)))>(((vt0.c0) ISNULL))), (~ ((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)/(v0.c0)))>(((vt0.c0) ISNULL))), (~ ((+ (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((((v0.c0)/(v0.c0)))>(((vt0.c0) ISNULL))), (~ ((+ (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL)) IS TRUE) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL)) IS TRUE) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL)) IS TRUE) WHERE (x'');
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY ((LAST_INSERT_ROWID())-(CAST(v0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((LAST_INSERT_ROWID())-(CAST(v0.c0 AS BLOB))) DESC);
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY ((LAST_INSERT_ROWID())-(CAST(v0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((LAST_INSERT_ROWID())-(CAST(v0.c0 AS BLOB))) DESC);
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY ((LAST_INSERT_ROWID())-(CAST(v0.c0 AS BLOB))) DESC;
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c0)AND(vt0.c0)))OR(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(vt0.c0)))OR(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c0)AND(vt0.c0)))OR(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(vt0.c0)))OR(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c0)AND(vt0.c0)))OR(NULL)) COLLATE RTRIM);
SELECT * FROM t0 WHERE (((t0.c0)-(t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0) ISNULL)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) IS FALSE)  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0)-(t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0) ISNULL)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) IS FALSE)  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0)-(t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0) ISNULL)) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((+ (v0.c0)))GLOB(UPPER(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))GLOB(UPPER(t0.c0)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((+ (v0.c0)))GLOB(UPPER(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))GLOB(UPPER(t0.c0)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((+ (v0.c0)))GLOB(UPPER(t0.c0))));
SELECT * FROM v0, t0 WHERE (((((((t0.c0)<(v0.c0)))AND((t0.c0 IN ()))))AND(((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)<(v0.c0)))AND((t0.c0 IN ()))))AND(((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, t0);
SELECT * FROM v0, t0 WHERE (((((((t0.c0)<(v0.c0)))AND((t0.c0 IN ()))))AND(((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)<(v0.c0)))AND((t0.c0 IN ()))))AND(((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, t0);
SELECT * FROM v0, t0 WHERE (((((((t0.c0)<(v0.c0)))AND((t0.c0 IN ()))))AND(((v0.c0)|(v0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON ((((t0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))AND(((((v0.c0)AND(t0.c0)))AND(t0.c0)))) INNER JOIN t0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))||(load_extension(vt0.c0))) WHERE (((t0.c0)>>(vt0.c0)) COLLATE NOCASE) ORDER BY (((((v0.c0, 1328115372, t0.c0, v0.c0, t0.c0, vt0.c0, t0.c0))>((vt0.c0, v0.c0, t0.c0, t0.c0, t0.c0, v0.c0, t0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((v0.c0)) BETWEEN ((0.2713447828654586)) AND ((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((t0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))AND(((((v0.c0)AND(t0.c0)))AND(t0.c0)))) INNER JOIN t0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))||(load_extension(vt0.c0))) ORDER BY (((((v0.c0, 1328115372, t0.c0, v0.c0, t0.c0, vt0.c0, t0.c0))>((vt0.c0, v0.c0, t0.c0, t0.c0, t0.c0, v0.c0, t0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((v0.c0)) BETWEEN ((0.2713447828654586)) AND ((t0.c0))))) DESC);
SELECT * FROM vt0 INNER JOIN v0 ON ((((t0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))AND(((((v0.c0)AND(t0.c0)))AND(t0.c0)))) INNER JOIN t0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))||(load_extension(vt0.c0))) WHERE (((t0.c0)>>(vt0.c0)) COLLATE NOCASE) ORDER BY (((((v0.c0, 1328115372, t0.c0, v0.c0, t0.c0, vt0.c0, t0.c0))>((vt0.c0, v0.c0, t0.c0, t0.c0, t0.c0, v0.c0, t0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((v0.c0)) BETWEEN ((0.2713447828654586)) AND ((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((t0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))AND(((((v0.c0)AND(t0.c0)))AND(t0.c0)))) INNER JOIN t0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))||(load_extension(vt0.c0))) ORDER BY (((((v0.c0, 1328115372, t0.c0, v0.c0, t0.c0, vt0.c0, t0.c0))>((vt0.c0, v0.c0, t0.c0, t0.c0, t0.c0, v0.c0, t0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((v0.c0)) BETWEEN ((0.2713447828654586)) AND ((t0.c0))))) DESC);
SELECT * FROM vt0 INNER JOIN v0 ON ((((t0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))AND(((((v0.c0)AND(t0.c0)))AND(t0.c0)))) INNER JOIN t0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))||(load_extension(vt0.c0))) WHERE (((t0.c0)>>(vt0.c0)) COLLATE NOCASE) ORDER BY (((((v0.c0, 1328115372, t0.c0, v0.c0, t0.c0, vt0.c0, t0.c0))>((vt0.c0, v0.c0, t0.c0, t0.c0, t0.c0, v0.c0, t0.c0)))) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((v0.c0)) BETWEEN ((0.2713447828654586)) AND ((t0.c0))))) DESC;
SELECT * FROM v0, t0 INNER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE (((NULL) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(vt0.c0))) AND (((t0.c0)IS(v0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(vt0.c0))) AND (((t0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON SQLITE_SOURCE_ID() ORDER BY x'');
SELECT * FROM v0, t0 INNER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE (((NULL) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(vt0.c0))) AND (((t0.c0)IS(v0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(vt0.c0))) AND (((t0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON SQLITE_SOURCE_ID() ORDER BY x'');
SELECT * FROM v0, t0 INNER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE (((NULL) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(vt0.c0))) AND (((t0.c0)IS(v0.c0))))) ORDER BY x'';
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE ((NOT (TYPEOF(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE ((NOT (TYPEOF(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE ((NOT (TYPEOF(DISTINCT t0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (v0.c0) AND (x'')), ((vt0.c0)GLOB(vt0.c0)), LENGTH(v0.c0)))<(((v0.c0 IN (vt0.c0, '261284471')), '1387602332', (~ (4.89465376E8))))) WHERE (COALESCE(CAST(v0.c0 AS INTEGER), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(v0.c0 AS INTEGER), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (v0.c0) AND (x'')), ((vt0.c0)GLOB(vt0.c0)), LENGTH(v0.c0)))<(((v0.c0 IN (vt0.c0, '261284471')), '1387602332', (~ (4.89465376E8))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (v0.c0) AND (x'')), ((vt0.c0)GLOB(vt0.c0)), LENGTH(v0.c0)))<(((v0.c0 IN (vt0.c0, '261284471')), '1387602332', (~ (4.89465376E8))))) WHERE (COALESCE(CAST(v0.c0 AS INTEGER), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(v0.c0 AS INTEGER), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (v0.c0) AND (x'')), ((vt0.c0)GLOB(vt0.c0)), LENGTH(v0.c0)))<(((v0.c0 IN (vt0.c0, '261284471')), '1387602332', (~ (4.89465376E8))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) BETWEEN (v0.c0) AND (x'')), ((vt0.c0)GLOB(vt0.c0)), LENGTH(v0.c0)))<(((v0.c0 IN (vt0.c0, '261284471')), '1387602332', (~ (4.89465376E8))))) WHERE (COALESCE(CAST(v0.c0 AS INTEGER), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 2099426654)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY (((~ (t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 2099426654)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0))) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 2099426654)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY (((~ (t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 2099426654)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0))) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 2099426654)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY (((~ (t0.c0))) IS FALSE);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))IS((+ (t0.c0)))) RIGHT OUTER JOIN vt0 ON (((((((((('1165322451')OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(((vt0.c0)IS NOT(vt0.c0)))) WHERE ((((((t0.c0 IN ()))OR(UPPER(DISTINCT v0.c0))))AND((+ (v0.c0))))) ORDER BY ((~ (vt0.c0)) IN ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))OR(UPPER(DISTINCT v0.c0))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))IS((+ (t0.c0)))) RIGHT OUTER JOIN vt0 ON (((((((((('1165322451')OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((~ (vt0.c0)) IN ((- (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))IS((+ (t0.c0)))) RIGHT OUTER JOIN vt0 ON (((((((((('1165322451')OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(((vt0.c0)IS NOT(vt0.c0)))) WHERE ((((((t0.c0 IN ()))OR(UPPER(DISTINCT v0.c0))))AND((+ (v0.c0))))) ORDER BY ((~ (vt0.c0)) IN ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))OR(UPPER(DISTINCT v0.c0))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))IS((+ (t0.c0)))) RIGHT OUTER JOIN vt0 ON (((((((((('1165322451')OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((~ (vt0.c0)) IN ((- (vt0.c0))))  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN t0 WHERE (((NULLIF(v0.c0, t0.c0))AND(((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c0, t0.c0))AND(((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT * FROM v0 NATURAL JOIN t0 WHERE (((NULLIF(v0.c0, t0.c0))AND(((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c0, t0.c0))AND(((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT * FROM v0 NATURAL JOIN t0 WHERE (((NULLIF(v0.c0, t0.c0))AND(((((((((t0.c0)OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c0 IN ()), (((v0.c0))<=((v0.c0))), SQLITE_VERSION()))<=((CAST(v0.c0 AS BLOB), ((v0.c0)<(v0.c0)), ((((((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((vt0.c0 IN ()), (((v0.c0))<=((v0.c0))), SQLITE_VERSION()))<=((CAST(v0.c0 AS BLOB), ((v0.c0)<(v0.c0)), ((((((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c0 IN ()), (((v0.c0))<=((v0.c0))), SQLITE_VERSION()))<=((CAST(v0.c0 AS BLOB), ((v0.c0)<(v0.c0)), ((((((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((vt0.c0 IN ()), (((v0.c0))<=((v0.c0))), SQLITE_VERSION()))<=((CAST(v0.c0 AS BLOB), ((v0.c0)<(v0.c0)), ((((((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c0 IN ()), (((v0.c0))<=((v0.c0))), SQLITE_VERSION()))<=((CAST(v0.c0 AS BLOB), ((v0.c0)<(v0.c0)), ((((((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(vt0.c0))))) ASC;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) WHERE (x'') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) WHERE (x'') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) WHERE (x'') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) WHERE (CAST(json_extract(vt0.c0, v0.c0) AS NUMERIC)) ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((t0.c0, 0.1147654799064105, vt0.c0)) AND ((v0.c0, v0.c0, t0.c0))))LIKE((- (vt0.c0)))) DESC, (((((vt0.c0)>(0xffffffffe96c0a31))))<((COALESCE(vt0.c0, v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json_extract(vt0.c0, v0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((t0.c0, 0.1147654799064105, vt0.c0)) AND ((v0.c0, v0.c0, t0.c0))))LIKE((- (vt0.c0)))) DESC, (((((vt0.c0)>(0Xffffffffe96c0a31))))<((COALESCE(vt0.c0, v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) WHERE (CAST(json_extract(vt0.c0, v0.c0) AS NUMERIC)) ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((t0.c0, 0.1147654799064105, vt0.c0)) AND ((v0.c0, v0.c0, t0.c0))))LIKE((- (vt0.c0)))) DESC, (((((vt0.c0)>(0xffffffffe96c0a31))))<((COALESCE(vt0.c0, v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json_extract(vt0.c0, v0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((t0.c0, 0.1147654799064105, vt0.c0)) AND ((v0.c0, v0.c0, t0.c0))))LIKE((- (vt0.c0)))) DESC, (((((vt0.c0)>(0Xffffffffe96c0a31))))<((COALESCE(vt0.c0, v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) WHERE (CAST(json_extract(vt0.c0, v0.c0) AS NUMERIC)) ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((t0.c0, 0.1147654799064105, vt0.c0)) AND ((v0.c0, v0.c0, t0.c0))))LIKE((- (vt0.c0)))) DESC, (((((vt0.c0)>(0xffffffffe96c0a31))))<((COALESCE(vt0.c0, v0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))%((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY CASE CAST(v0.c0 AS INTEGER)  WHEN ('-1312844732' IN ()) THEN ((v0.c0)/(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN COALESCE(DISTINCT 0x52b5219c, v0.c0) WHEN 'Ak' THEN CASE WHEN NULL THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END DESC  NULLS LAST, LTRIM(v0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0)))%((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE CAST(v0.c0 AS INTEGER)  WHEN ('-1312844732' IN ()) THEN ((v0.c0)/(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN COALESCE(DISTINCT 0X52b5219c, v0.c0) WHEN 'Ak' THEN CASE WHEN NULL THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END DESC  NULLS LAST, LTRIM(v0.c0) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))%((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY CASE CAST(v0.c0 AS INTEGER)  WHEN ('-1312844732' IN ()) THEN ((v0.c0)/(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN COALESCE(DISTINCT 0x52b5219c, v0.c0) WHEN 'Ak' THEN CASE WHEN NULL THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END DESC  NULLS LAST, LTRIM(v0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0)))%((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE CAST(v0.c0 AS INTEGER)  WHEN ('-1312844732' IN ()) THEN ((v0.c0)/(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN COALESCE(DISTINCT 0X52b5219c, v0.c0) WHEN 'Ak' THEN CASE WHEN NULL THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END DESC  NULLS LAST, LTRIM(v0.c0) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))%((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY CASE CAST(v0.c0 AS INTEGER)  WHEN ('-1312844732' IN ()) THEN ((v0.c0)/(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN CAST(v0.c0 AS BLOB) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN COALESCE(DISTINCT 0x52b5219c, v0.c0) WHEN 'Ak' THEN CASE WHEN NULL THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END DESC  NULLS LAST, LTRIM(v0.c0) COLLATE NOCASE;
SELECT ALL * FROM t0, v0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (t0.c0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)OR(0.2354475918901462)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0.2354475918901462)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)OR(0.2354475918901462)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0.2354475918901462)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)OR(0.2354475918901462)))AND(vt0.c0))) NOTNULL));
SELECT ALL * FROM t0, v0 INNER JOIN vt0 ON (((('')AND(((v0.c0)||(vt0.c0)))))OR(v0.c0 COLLATE BINARY)) WHERE ((((NULL)<>(vt0.c0)) IN ())) ORDER BY (~ (CAST(t0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)!=(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON (((('')AND(((v0.c0)||(vt0.c0)))))OR(v0.c0 COLLATE BINARY)) ORDER BY (~ (CAST(t0.c0 AS NUMERIC))));
SELECT ALL * FROM t0, v0 INNER JOIN vt0 ON (((('')AND(((v0.c0)||(vt0.c0)))))OR(v0.c0 COLLATE BINARY)) WHERE ((((NULL)<>(vt0.c0)) IN ())) ORDER BY (~ (CAST(t0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)!=(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON (((('')AND(((v0.c0)||(vt0.c0)))))OR(v0.c0 COLLATE BINARY)) ORDER BY (~ (CAST(t0.c0 AS NUMERIC))));
SELECT ALL * FROM t0, v0 INNER JOIN vt0 ON (((('')AND(((v0.c0)||(vt0.c0)))))OR(v0.c0 COLLATE BINARY)) WHERE ((((NULL)<>(vt0.c0)) IN ())) ORDER BY (~ (CAST(t0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (0.03955416764067021) ORDER BY ((CAST(t0.c0 AS REAL))+(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((0.03955416764067021) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((CAST(t0.c0 AS REAL))+(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (0.03955416764067021) ORDER BY ((CAST(t0.c0 AS REAL))+(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((0.03955416764067021) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((CAST(t0.c0 AS REAL))+(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (0.03955416764067021) ORDER BY ((CAST(t0.c0 AS REAL))+(((v0.c0) IS TRUE)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY NULL, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, ((('ꍻ9n'))>=((v0.c0))), (0.14535135852784453 IN ()))) AND (((x'' IN ()), ((((NULL)AND(v0.c0)))AND(v0.c0)), v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY NULL, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, ((('ꍻ9n'))>=((v0.c0))), (0.14535135852784453 IN ()))) AND (((x'' IN ()), ((((NULL)AND(v0.c0)))AND(v0.c0)), v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY NULL, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, ((('ꍻ9n'))>=((v0.c0))), (0.14535135852784453 IN ()))) AND (((x'' IN ()), ((((NULL)AND(v0.c0)))AND(v0.c0)), v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY NULL, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, ((('ꍻ9n'))>=((v0.c0))), (0.14535135852784453 IN ()))) AND (((x'' IN ()), ((((NULL)AND(v0.c0)))AND(v0.c0)), v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY NULL, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, ((('ꍻ9n'))>=((v0.c0))), (0.14535135852784453 IN ()))) AND (((x'' IN ()), ((((NULL)AND(v0.c0)))AND(v0.c0)), v0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT NULL) WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<>((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT NULL) WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<>((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) NOT NULL) WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS NUMERIC));
SELECT ALL * FROM v0, t0, vt0 WHERE ((((v0.c0)*(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)*(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((v0.c0)*(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)*(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((v0.c0)*(v0.c0)) IN ()));
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (UNICODE(x'') COLLATE RTRIM) ORDER BY (((NOT (t0.c0)))+((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(x'') COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (t0.c0)))+((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (UNICODE(x'') COLLATE RTRIM) ORDER BY (((NOT (t0.c0)))+((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(x'') COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (t0.c0)))+((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (UNICODE(x'') COLLATE RTRIM) ORDER BY (((NOT (t0.c0)))+((+ (vt0.c0))));
SELECT * FROM t0, v0 WHERE (((CASE WHEN t0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END) NOT BETWEEN ((- (v0.c0))) AND (CASE WHEN t0.c0 THEN 0.38108169563286687 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END) NOT BETWEEN ((- (v0.c0))) AND (CASE WHEN t0.c0 THEN 0.38108169563286687 END))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((CASE WHEN t0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END) NOT BETWEEN ((- (v0.c0))) AND (CASE WHEN t0.c0 THEN 0.38108169563286687 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END) NOT BETWEEN ((- (v0.c0))) AND (CASE WHEN t0.c0 THEN 0.38108169563286687 END))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((CASE WHEN t0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END) NOT BETWEEN ((- (v0.c0))) AND (CASE WHEN t0.c0 THEN 0.38108169563286687 END)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM v0, t0, vt0 WHERE (json_object((+ (v0.c0)), CAST(v0.c0 AS BLOB))) ORDER BY (~ (t0.c0))  NULLS FIRST, (((((t0.c0, t0.c0, v0.c0))<((' VljSD', t0.c0, t0.c0))))GLOB('')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object((+ (v0.c0)), CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (~ (t0.c0))  NULLS FIRST, (((((t0.c0, t0.c0, v0.c0))<((' VljSD', t0.c0, t0.c0))))GLOB('')) ASC);
SELECT ALL * FROM v0, t0, vt0 WHERE (json_object((+ (v0.c0)), CAST(v0.c0 AS BLOB))) ORDER BY (~ (t0.c0))  NULLS FIRST, (((((t0.c0, t0.c0, v0.c0))<((' VljSD', t0.c0, t0.c0))))GLOB('')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object((+ (v0.c0)), CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (~ (t0.c0))  NULLS FIRST, (((((t0.c0, t0.c0, v0.c0))<((' VljSD', t0.c0, t0.c0))))GLOB('')) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN t0 ON '-2071519168' WHERE (((LIKELIHOOD('', 0.7151529050717603))LIKE(((vt0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD('', 0.7151529050717603))LIKE(((vt0.c0)<=(v0.c0))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON '-2071519168');
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN t0 ON '-2071519168' WHERE (((LIKELIHOOD('', 0.7151529050717603))LIKE(((vt0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD('', 0.7151529050717603))LIKE(((vt0.c0)<=(v0.c0))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON '-2071519168');
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN t0 ON '-2071519168' WHERE (((LIKELIHOOD('', 0.7151529050717603))LIKE(((vt0.c0)<=(v0.c0)))));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((v0.c0 COLLATE BINARY) NOTNULL)) ORDER BY 0.3134888691504929 COLLATE BINARY ASC  NULLS LAST, ((v0.c0 COLLATE BINARY)>((~ (t0.c0)))), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY 0.3134888691504929 COLLATE BINARY ASC  NULLS LAST, ((v0.c0 COLLATE BINARY)>((~ (t0.c0)))), vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((v0.c0 COLLATE BINARY) NOTNULL)) ORDER BY 0.3134888691504929 COLLATE BINARY ASC  NULLS LAST, ((v0.c0 COLLATE BINARY)>((~ (t0.c0)))), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY 0.3134888691504929 COLLATE BINARY ASC  NULLS LAST, ((v0.c0 COLLATE BINARY)>((~ (t0.c0)))), vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((v0.c0 COLLATE BINARY) NOTNULL)) ORDER BY 0.3134888691504929 COLLATE BINARY ASC  NULLS LAST, ((v0.c0 COLLATE BINARY)>((~ (t0.c0)))), vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE) WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY CAST(((v0.c0)<<(v0.c0)) AS REAL) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE) ORDER BY CAST(((v0.c0)<<(v0.c0)) AS REAL) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE) WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY CAST(((v0.c0)<<(v0.c0)) AS REAL) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE) ORDER BY CAST(((v0.c0)<<(v0.c0)) AS REAL) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE) WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY CAST(((v0.c0)<<(v0.c0)) AS REAL) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC);
SELECT * FROM vt0, t0 WHERE (CASE '^>'  WHEN ((t0.c0)==(vt0.c0)) THEN t0.c0 WHEN CAST(t0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (+ (t0.c0)) THEN LIKE(t0.c0, vt0.c0) ELSE ((0.5603549696686134)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE '^>'  WHEN ((t0.c0)==(vt0.c0)) THEN t0.c0 WHEN CAST(t0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (+ (t0.c0)) THEN LIKE(t0.c0, vt0.c0) ELSE ((0.5603549696686134)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE '^>'  WHEN ((t0.c0)==(vt0.c0)) THEN t0.c0 WHEN CAST(t0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (+ (t0.c0)) THEN LIKE(t0.c0, vt0.c0) ELSE ((0.5603549696686134)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE '^>'  WHEN ((t0.c0)==(vt0.c0)) THEN t0.c0 WHEN CAST(t0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (+ (t0.c0)) THEN LIKE(t0.c0, vt0.c0) ELSE ((0.5603549696686134)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE '^>'  WHEN ((t0.c0)==(vt0.c0)) THEN t0.c0 WHEN CAST(t0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (+ (t0.c0)) THEN LIKE(t0.c0, vt0.c0) ELSE ((0.5603549696686134)>=(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c0 COLLATE RTRIM);
SELECT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (~ (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (~ (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (~ (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (~ (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (~ (t0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((v0.c0) IS TRUE))))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((v0.c0) IS TRUE))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((v0.c0) IS TRUE))))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((v0.c0) IS TRUE))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((v0.c0) IS TRUE))))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(UPPER(DISTINCT t0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT t0.c0) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(UPPER(DISTINCT t0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT t0.c0) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(UPPER(DISTINCT t0.c0) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) NOT NULL))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT NULL))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) NOT NULL))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT NULL))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) NOT NULL))AND(((vt0.c0) IS FALSE))));
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)>(v0.c0)))));
SELECT * FROM t0, vt0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(t0.c0)))OR(t0.c0))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(t0.c0)))OR(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(t0.c0)))OR(t0.c0))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(t0.c0)))OR(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(t0.c0)))OR(t0.c0))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((NOT (0xa091759))) NOT BETWEEN (((0.6613326654243614)IS NOT(vt0.c0))) AND (vt0.c0))) ORDER BY ((((vt0.c0) IS FALSE)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (0xa091759))) NOT BETWEEN (((0.6613326654243614)IS NOT(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((NOT (0xa091759))) NOT BETWEEN (((0.6613326654243614)IS NOT(vt0.c0))) AND (vt0.c0))) ORDER BY ((((vt0.c0) IS FALSE)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (0xa091759))) NOT BETWEEN (((0.6613326654243614)IS NOT(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((NOT (0xa091759))) NOT BETWEEN (((0.6613326654243614)IS NOT(vt0.c0))) AND (vt0.c0))) ORDER BY ((((vt0.c0) IS FALSE)) ISNULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0)%(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0)%(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0)%(t0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE (((((t0.c0 COLLATE NOCASE)OR(vt0.c0)))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE NOCASE)OR(vt0.c0)))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE (((((t0.c0 COLLATE NOCASE)OR(vt0.c0)))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE NOCASE)OR(vt0.c0)))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE (((((t0.c0 COLLATE NOCASE)OR(vt0.c0)))OR(t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (LIKELY(((vt0.c0)LIKE(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0)LIKE(t0.c0)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (LIKELY(((vt0.c0)LIKE(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0)LIKE(t0.c0)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (LIKELY(((vt0.c0)LIKE(t0.c0))));
SELECT * FROM v0, vt0 WHERE (CAST((NOT (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST((NOT (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST((NOT (v0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULLIF(t0.c0, vt0.c0))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) ORDER BY ((((((((((((((((vt0.c0)OR(1901607815)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((t0.c0)=(t0.c0)))))OR(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c0, vt0.c0))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((((((((vt0.c0)OR(1901607815)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((t0.c0)=(t0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULLIF(t0.c0, vt0.c0))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) ORDER BY ((((((((((((((((vt0.c0)OR(1901607815)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((t0.c0)=(t0.c0)))))OR(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c0, vt0.c0))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((((((((vt0.c0)OR(1901607815)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((t0.c0)=(t0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULLIF(t0.c0, vt0.c0))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) ORDER BY ((((((((((((((((vt0.c0)OR(1901607815)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((t0.c0)=(t0.c0)))))OR(vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(v0.c0)), vt0.c0 COLLATE RTRIM, 0.15927510113452603)) AND ((t0.c0, ((vt0.c0)<<(x'')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) FULL OUTER JOIN v0 ON ((((((((v0.c0)AND(((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((v0.c0)|(NULL)))))AND(TRIM(DISTINCT v0.c0, vt0.c0))))OR(((t0.c0) ISNULL))) WHERE ((- (((t0.c0)AND(t0.c0))))) ORDER BY (((NULL)) BETWEEN (((NULL IN (v0.c0)))) AND ((v0.c0 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(v0.c0)), vt0.c0 COLLATE RTRIM, 0.15927510113452603)) AND ((t0.c0, ((vt0.c0)<<(x'')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) FULL OUTER JOIN v0 ON ((((((((v0.c0)AND(((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((v0.c0)|(NULL)))))AND(TRIM(DISTINCT v0.c0, vt0.c0))))OR(((t0.c0) ISNULL))) ORDER BY (((NULL)) BETWEEN (((NULL IN (v0.c0)))) AND ((v0.c0 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(v0.c0)), vt0.c0 COLLATE RTRIM, 0.15927510113452603)) AND ((t0.c0, ((vt0.c0)<<(x'')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) FULL OUTER JOIN v0 ON ((((((((v0.c0)AND(((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((v0.c0)|(NULL)))))AND(TRIM(DISTINCT v0.c0, vt0.c0))))OR(((t0.c0) ISNULL))) WHERE ((- (((t0.c0)AND(t0.c0))))) ORDER BY (((NULL)) BETWEEN (((NULL IN (v0.c0)))) AND ((v0.c0 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(v0.c0)), vt0.c0 COLLATE RTRIM, 0.15927510113452603)) AND ((t0.c0, ((vt0.c0)<<(x'')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) FULL OUTER JOIN v0 ON ((((((((v0.c0)AND(((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((v0.c0)|(NULL)))))AND(TRIM(DISTINCT v0.c0, vt0.c0))))OR(((t0.c0) ISNULL))) ORDER BY (((NULL)) BETWEEN (((NULL IN (v0.c0)))) AND ((v0.c0 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ('-1982984901') ORDER BY (- (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1982984901') IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0, t0 WHERE ('-1982984901') ORDER BY (- (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1982984901') IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0, t0 WHERE ('-1982984901') ORDER BY (- (((vt0.c0) IS TRUE))) ASC;
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) AS BLOB) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) AS BLOB) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(('403438893' IN ()), v0.c0)) ORDER BY (- (((v0.c0)<<(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(('403438893' IN ()), v0.c0)) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0)<<(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(('403438893' IN ()), v0.c0)) ORDER BY (- (((v0.c0)<<(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(('403438893' IN ()), v0.c0)) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0)<<(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(('403438893' IN ()), v0.c0)) ORDER BY (- (((v0.c0)<<(v0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 END) IS TRUE)) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((((t0.c0)AND(vt0.c0)))OR(NULL)) THEN ((v0.c0) NOTNULL) ELSE (x'' IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((((t0.c0)AND(vt0.c0)))OR(NULL)) THEN ((v0.c0) NOTNULL) ELSE (x'' IN ()) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 END) IS TRUE)) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((((t0.c0)AND(vt0.c0)))OR(NULL)) THEN ((v0.c0) NOTNULL) ELSE (x'' IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((((t0.c0)AND(vt0.c0)))OR(NULL)) THEN ((v0.c0) NOTNULL) ELSE (x'' IN ()) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 END) IS TRUE)) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((((t0.c0)AND(vt0.c0)))OR(NULL)) THEN ((v0.c0) NOTNULL) ELSE (x'' IN ()) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0, t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, (+ (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((((vt0.c0)OR(v0.c0)))AND(v0.c0)), (+ (v0.c0)))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (- (t0.c0)), LTRIM(t0.c0)))) RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)<<(t0.c0)))) WHERE (CASE ((vt0.c0)<<(v0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(t0.c0)) END) ORDER BY CAST(t0.c0 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<<(v0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(t0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0, t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, (+ (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((((vt0.c0)OR(v0.c0)))AND(v0.c0)), (+ (v0.c0)))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (- (t0.c0)), LTRIM(t0.c0)))) RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)<<(t0.c0)))) ORDER BY CAST(t0.c0 AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0, t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, (+ (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((((vt0.c0)OR(v0.c0)))AND(v0.c0)), (+ (v0.c0)))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (- (t0.c0)), LTRIM(t0.c0)))) RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)<<(t0.c0)))) WHERE (CASE ((vt0.c0)<<(v0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(t0.c0)) END) ORDER BY CAST(t0.c0 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<<(v0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(t0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((NULL, vt0.c0, t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, (+ (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((((vt0.c0)OR(v0.c0)))AND(v0.c0)), (+ (v0.c0)))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (- (t0.c0)), LTRIM(t0.c0)))) RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)<<(t0.c0)))) ORDER BY CAST(t0.c0 AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE ((~ ((t0.c0 IN (t0.c0))))) ORDER BY ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE ORDER BY ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE ((~ ((t0.c0 IN (t0.c0))))) ORDER BY ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE ORDER BY ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE ((~ ((t0.c0 IN (t0.c0))))) ORDER BY ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT ALL * FROM vt0 WHERE ((x'666c' IN ()));
SELECT SUM(count) FROM (SELECT (((x'666c' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((x'666c' IN ()));
SELECT SUM(count) FROM (SELECT (((x'666c' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((x'666c' IN ()));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)IS(TRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 END)IS(TRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)IS(TRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 END)IS(TRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)IS(TRIM(t0.c0))));
SELECT * FROM v0 WHERE (('-1170536084' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1170536084' IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (('-1170536084' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1170536084' IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (('-1170536084' IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT NULL)) ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT NULL)) ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT NULL)) ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((0xffffffffe72916da, v0.c0, '^>', v0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c0, v0.c0, t0.c0))) COLLATE NOCASE WHERE (((CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((v0.c0)<>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((v0.c0)<>(t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((0Xffffffffe72916da, v0.c0, '^>', v0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c0, v0.c0, t0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((0xffffffffe72916da, v0.c0, '^>', v0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c0, v0.c0, t0.c0))) COLLATE NOCASE WHERE (((CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((v0.c0)<>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((v0.c0)<>(t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((0Xffffffffe72916da, v0.c0, '^>', v0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c0, v0.c0, t0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((0xffffffffe72916da, v0.c0, '^>', v0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c0, v0.c0, t0.c0))) COLLATE NOCASE WHERE (((CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((v0.c0)<>(t0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT * FROM v0 WHERE ((((((((NULL)AND(v0.c0)))AND(v0.c0))))=(((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((NULL)AND(v0.c0)))AND(v0.c0))))==(((v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((NULL)AND(v0.c0)))AND(v0.c0))))=(((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((NULL)AND(v0.c0)))AND(v0.c0))))==(((v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((NULL)AND(v0.c0)))AND(v0.c0))))=(((v0.c0 IN ())))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON ROUND(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)OR(t0.c0))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON ROUND(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)OR(t0.c0))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON ROUND(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)OR(t0.c0))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON ROUND(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)OR(t0.c0))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON ROUND(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)OR(t0.c0))) WHERE (t0.c0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (LOWER(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY v0.c0, vt0.c0  NULLS LAST, (((886643039 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY v0.c0, vt0.c0  NULLS LAST, (((886643039 IN ())) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (LOWER(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY v0.c0, vt0.c0  NULLS LAST, (((886643039 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY v0.c0, vt0.c0  NULLS LAST, (((886643039 IN ())) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (LOWER(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY v0.c0, vt0.c0  NULLS LAST, (((886643039 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CASE ((v0.c0)OR(v0.c0))  WHEN x'31ea' THEN ((t0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)OR(v0.c0))  WHEN x'31ea' THEN ((t0.c0) IS TRUE) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CASE ((v0.c0)OR(v0.c0))  WHEN x'31ea' THEN ((t0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)OR(v0.c0))  WHEN x'31ea' THEN ((t0.c0) IS TRUE) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CASE ((v0.c0)OR(v0.c0))  WHEN x'31ea' THEN ((t0.c0) IS TRUE) END);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, t0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(t0.c0 AS TEXT) END) ORDER BY (- (((t0.c0)|(vt0.c0))))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST, CAST(((((v0.c0)OR(t0.c0)))OR(v0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT v0.c0, t0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (- (((t0.c0)|(vt0.c0))))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST, CAST(((((v0.c0)OR(t0.c0)))OR(v0.c0)) AS BLOB) ASC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, t0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(t0.c0 AS TEXT) END) ORDER BY (- (((t0.c0)|(vt0.c0))))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST, CAST(((((v0.c0)OR(t0.c0)))OR(v0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT v0.c0, t0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (- (((t0.c0)|(vt0.c0))))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST, CAST(((((v0.c0)OR(t0.c0)))OR(v0.c0)) AS BLOB) ASC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, t0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(t0.c0 AS TEXT) END) ORDER BY (- (((t0.c0)|(vt0.c0))))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST, CAST(((((v0.c0)OR(t0.c0)))OR(v0.c0)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)IS NOT('-2119386210'))) AND (((((t0.c0)AND(vt0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)IS NOT('-2119386210'))) AND (((((t0.c0)AND(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)IS NOT('-2119386210'))) AND (((((t0.c0)AND(vt0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)IS NOT('-2119386210'))) AND (((((t0.c0)AND(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)IS NOT('-2119386210'))) AND (((((t0.c0)AND(vt0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) NOT NULL)) ORDER BY (NOT ((- (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (NOT ((- (v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) NOT NULL)) ORDER BY (NOT ((- (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (NOT ((- (v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) NOT NULL)) ORDER BY (NOT ((- (v0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, t0 WHERE (TRIM('\rp8꘠E96hZ', (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM('\rp8꘠E96hZ', (t0.c0 IN ()))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (TRIM('\rp8꘠E96hZ', (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM('\rp8꘠E96hZ', (t0.c0 IN ()))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (TRIM('\rp8꘠E96hZ', (t0.c0 IN ())));
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'f502' WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((t0.c0)<=(t0.c0))) BETWEEN (LIKELY(v0.c0)) AND (((((t0.c0)OR(0X5d6736a8)))AND(vt0.c0))))  NULLS LAST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN t0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'f502' ORDER BY ((((t0.c0)<=(t0.c0))) BETWEEN (LIKELY(v0.c0)) AND (((((t0.c0)OR(0x5d6736a8)))AND(vt0.c0))))  NULLS LAST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN t0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'f502' WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((t0.c0)<=(t0.c0))) BETWEEN (LIKELY(v0.c0)) AND (((((t0.c0)OR(0X5d6736a8)))AND(vt0.c0))))  NULLS LAST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN t0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'f502' ORDER BY ((((t0.c0)<=(t0.c0))) BETWEEN (LIKELY(v0.c0)) AND (((((t0.c0)OR(0x5d6736a8)))AND(vt0.c0))))  NULLS LAST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN t0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'f502' WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((t0.c0)<=(t0.c0))) BETWEEN (LIKELY(v0.c0)) AND (((((t0.c0)OR(0X5d6736a8)))AND(vt0.c0))))  NULLS LAST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN t0.c0 COLLATE BINARY END;
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(json_insert(-1090368228, vt0.c0, t0.c0, '-408785077', t0.c0)))) ORDER BY '1901607815', CAST((t0.c0 IN (t0.c0)) AS TEXT)  NULLS LAST, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(json_insert(-1090368228, vt0.c0, t0.c0, '-408785077', t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY '1901607815', CAST((t0.c0 IN (t0.c0)) AS TEXT)  NULLS LAST, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(json_insert(-1090368228, vt0.c0, t0.c0, '-408785077', t0.c0)))) ORDER BY '1901607815', CAST((t0.c0 IN (t0.c0)) AS TEXT)  NULLS LAST, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(json_insert(-1090368228, vt0.c0, t0.c0, '-408785077', t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY '1901607815', CAST((t0.c0 IN (t0.c0)) AS TEXT)  NULLS LAST, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(json_insert(-1090368228, vt0.c0, t0.c0, '-408785077', t0.c0)))) ORDER BY '1901607815', CAST((t0.c0 IN (t0.c0)) AS TEXT)  NULLS LAST, CAST(((vt0.c0)-(vt0.c0)) AS INTEGER);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, t0.c0))!=(('\n>', t0.c0, vt0.c0))))<<(t0.c0))) ORDER BY ((((((((((vt0.c0)>=('1525059940')))OR(((vt0.c0)&(t0.c0)))))AND(((t0.c0)|(vt0.c0)))))AND(((vt0.c0)IS(t0.c0)))))AND(((1857952299) ISNULL)))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, t0.c0))!=(('\n>', t0.c0, vt0.c0))))<<(t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c0)>=('1525059940')))OR(((vt0.c0)&(t0.c0)))))AND(((t0.c0)|(vt0.c0)))))AND(((vt0.c0)IS(t0.c0)))))AND(((1857952299) ISNULL)))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, t0.c0))!=(('\n>', t0.c0, vt0.c0))))<<(t0.c0))) ORDER BY ((((((((((vt0.c0)>=('1525059940')))OR(((vt0.c0)&(t0.c0)))))AND(((t0.c0)|(vt0.c0)))))AND(((vt0.c0)IS(t0.c0)))))AND(((1857952299) ISNULL)))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, t0.c0))!=(('\n>', t0.c0, vt0.c0))))<<(t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c0)>=('1525059940')))OR(((vt0.c0)&(t0.c0)))))AND(((t0.c0)|(vt0.c0)))))AND(((vt0.c0)IS(t0.c0)))))AND(((1857952299) ISNULL)))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, t0.c0))!=(('\n>', t0.c0, vt0.c0))))<<(t0.c0))) ORDER BY ((((((((((vt0.c0)>=('1525059940')))OR(((vt0.c0)&(t0.c0)))))AND(((t0.c0)|(vt0.c0)))))AND(((vt0.c0)IS(t0.c0)))))AND(((1857952299) ISNULL)))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN v0.c0 THEN CAST(vt0.c0 AS REAL) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN v0.c0 THEN (((v0.c0, vt0.c0, x'88fe6ce29e4b')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((((v0.c0)>>(v0.c0))))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN CAST(vt0.c0 AS REAL) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN v0.c0 THEN (((v0.c0, vt0.c0, x'88fe6ce29e4b')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0)>>(v0.c0))))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN v0.c0 THEN CAST(vt0.c0 AS REAL) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN v0.c0 THEN (((v0.c0, vt0.c0, x'88fe6ce29e4b')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((((v0.c0)>>(v0.c0))))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN CAST(vt0.c0 AS REAL) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN v0.c0 THEN (((v0.c0, vt0.c0, x'88fe6ce29e4b')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0)>>(v0.c0))))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN v0.c0 THEN CAST(vt0.c0 AS REAL) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN v0.c0 THEN (((v0.c0, vt0.c0, x'88fe6ce29e4b')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((((v0.c0)>>(v0.c0))))<((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))) DESC;
SELECT ALL * FROM t0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN '-1162057169' END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN '-1162057169' END AS REAL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN '-1162057169' END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN '-1162057169' END AS REAL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN '-1162057169' END AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY (((RTRIM(vt0.c0), ((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE)))<((CAST(vt0.c0 AS TEXT), (NOT (vt0.c0)), (((vt0.c0))!=((vt0.c0)))))) ASC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((RTRIM(vt0.c0), ((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE)))<((CAST(vt0.c0 AS TEXT), (NOT (vt0.c0)), (((vt0.c0))<>((vt0.c0)))))) ASC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY (((RTRIM(vt0.c0), ((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE)))<((CAST(vt0.c0 AS TEXT), (NOT (vt0.c0)), (((vt0.c0))!=((vt0.c0)))))) ASC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((RTRIM(vt0.c0), ((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE)))<((CAST(vt0.c0 AS TEXT), (NOT (vt0.c0)), (((vt0.c0))<>((vt0.c0)))))) ASC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY (((RTRIM(vt0.c0), ((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE)))<((CAST(vt0.c0 AS TEXT), (NOT (vt0.c0)), (((vt0.c0))!=((vt0.c0)))))) ASC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c0 IN (vt0.c0)))AND(vt0.c0)))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN (vt0.c0)))AND(vt0.c0)))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' DESC);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c0 IN (vt0.c0)))AND(vt0.c0)))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN (vt0.c0)))AND(vt0.c0)))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' DESC);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c0 IN (vt0.c0)))AND(vt0.c0)))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY x'' DESC;
SELECT ALL * FROM v0, t0, vt0 WHERE ((json_patch(v0.c0, vt0.c0) IN ())) ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((json_patch(v0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((json_patch(v0.c0, vt0.c0) IN ())) ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((json_patch(v0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((json_patch(v0.c0, vt0.c0) IN ())) ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((((((((t0.c0) IS FALSE))AND(t0.c0 COLLATE RTRIM)))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0) IS FALSE))AND(t0.c0 COLLATE RTRIM)))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((((((((t0.c0) IS FALSE))AND(t0.c0 COLLATE RTRIM)))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0) IS FALSE))AND(t0.c0 COLLATE RTRIM)))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((((((((t0.c0) IS FALSE))AND(t0.c0 COLLATE RTRIM)))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE))) DESC;
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN LTRIM(vt0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE v0.c0 COLLATE NOCASE END WHERE (CAST((((0.6819298341428235))>((v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.6819298341428235))>((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN LTRIM(vt0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE v0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN LTRIM(vt0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE v0.c0 COLLATE NOCASE END WHERE (CAST((((0.6819298341428235))>((v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.6819298341428235))>((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN LTRIM(vt0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE v0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN LTRIM(vt0.c0, v0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE v0.c0 COLLATE NOCASE END WHERE (CAST((((0.6819298341428235))>((v0.c0))) AS NUMERIC));
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE WHEN 1315553578 COLLATE NOCASE THEN ((t0.c0)GLOB(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1315553578 COLLATE NOCASE THEN ((t0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE WHEN 1315553578 COLLATE NOCASE THEN ((t0.c0)GLOB(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1315553578 COLLATE NOCASE THEN ((t0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE WHEN 1315553578 COLLATE NOCASE THEN ((t0.c0)GLOB(v0.c0)) END);
SELECT COUNT(*) FROM t0, v0 WHERE (json_array_length((+ (v0.c0)))) ORDER BY ABS(DISTINCT ((v0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((+ (v0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY ABS(DISTINCT ((v0.c0) NOTNULL)) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (json_array_length((+ (v0.c0)))) ORDER BY ABS(DISTINCT ((v0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((+ (v0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY ABS(DISTINCT ((v0.c0) NOTNULL)) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (json_array_length((+ (v0.c0)))) ORDER BY ABS(DISTINCT ((v0.c0) NOTNULL)) DESC;
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN '0.09272710840590592' END IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN '0.09272710840590592' END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN '0.09272710840590592' END IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN '0.09272710840590592' END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN '0.09272710840590592' END IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4956465885344912 WHEN vt0.c0 THEN v0.c0 END)%(((0x71fa387f)>>('ZwvzLqt_'))))) ORDER BY TRIM(DISTINCT ((v0.c0) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4956465885344912 WHEN vt0.c0 THEN v0.c0 END)%(((0X71fa387f)>>('ZwvzLqt_'))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY TRIM(DISTINCT ((v0.c0) IS TRUE))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4956465885344912 WHEN vt0.c0 THEN v0.c0 END)%(((0x71fa387f)>>('ZwvzLqt_'))))) ORDER BY TRIM(DISTINCT ((v0.c0) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4956465885344912 WHEN vt0.c0 THEN v0.c0 END)%(((0X71fa387f)>>('ZwvzLqt_'))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY TRIM(DISTINCT ((v0.c0) IS TRUE))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4956465885344912 WHEN vt0.c0 THEN v0.c0 END)%(((0x71fa387f)>>('ZwvzLqt_'))))) ORDER BY TRIM(DISTINCT ((v0.c0) IS TRUE))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((CAST('-2000396656' AS INTEGER))>(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(((t0.c0) NOT NULL))))OR(CAST(0.6175768057616292 AS BLOB))) ASC  NULLS LAST, ((LIKELIHOOD(vt0.c0, 0.02347403553222971)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-2000396656' AS INTEGER))>(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(((t0.c0) NOT NULL))))OR(CAST(0.6175768057616292 AS BLOB))) ASC  NULLS LAST, ((LIKELIHOOD(vt0.c0, 0.02347403553222971)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((CAST('-2000396656' AS INTEGER))>(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(((t0.c0) NOT NULL))))OR(CAST(0.6175768057616292 AS BLOB))) ASC  NULLS LAST, ((LIKELIHOOD(vt0.c0, 0.02347403553222971)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-2000396656' AS INTEGER))>(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(((t0.c0) NOT NULL))))OR(CAST(0.6175768057616292 AS BLOB))) ASC  NULLS LAST, ((LIKELIHOOD(vt0.c0, 0.02347403553222971)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((CAST('-2000396656' AS INTEGER))>(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(((t0.c0) NOT NULL))))OR(CAST(0.6175768057616292 AS BLOB))) ASC  NULLS LAST, ((LIKELIHOOD(vt0.c0, 0.02347403553222971)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0, ((vt0.c0)>(x'38be')))) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))OR(LIKE(vt0.c0, vt0.c0, '0'))))OR((~ (1975138516)))) DESC, 'w?#,!g', ((((vt0.c0)/(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(vt0.c0, ((vt0.c0)>(x'38be')))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))OR(LIKE(vt0.c0, vt0.c0, '0'))))OR((~ (1975138516)))) DESC, 'w?#,!g', ((((vt0.c0)/(vt0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0, ((vt0.c0)>(x'38be')))) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))OR(LIKE(vt0.c0, vt0.c0, '0'))))OR((~ (1975138516)))) DESC, 'w?#,!g', ((((vt0.c0)/(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(vt0.c0, ((vt0.c0)>(x'38be')))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))OR(LIKE(vt0.c0, vt0.c0, '0'))))OR((~ (1975138516)))) DESC, 'w?#,!g', ((((vt0.c0)/(vt0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0, ((vt0.c0)>(x'38be')))) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))OR(LIKE(vt0.c0, vt0.c0, '0'))))OR((~ (1975138516)))) DESC, 'w?#,!g', ((((vt0.c0)/(vt0.c0))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c0)) IN ((NOT (vt0.c0)), CAST('X⥧72+渳wRk' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ((NOT (vt0.c0)), CAST('X⥧72+渳wRk' AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c0)) IN ((NOT (vt0.c0)), CAST('X⥧72+渳wRk' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ((NOT (vt0.c0)), CAST('X⥧72+渳wRk' AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c0)) IN ((NOT (vt0.c0)), CAST('X⥧72+渳wRk' AS NUMERIC))));
SELECT * FROM v0, t0 WHERE (((((UNLIKELY(t0.c0))AND(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(t0.c0))AND(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((UNLIKELY(t0.c0))AND(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(t0.c0))AND(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((UNLIKELY(t0.c0))AND(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(v0.c0 AS NUMERIC))));
SELECT ALL * FROM t0, vt0 NATURAL JOIN v0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT v0.c0, 0.6934303321446034) THEN ((t0.c0) NOT NULL) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN ((v0.c0)&(vt0.c0)) THEN x'e6186d50' END) ORDER BY json_patch(((t0.c0)LIKE(t0.c0)), (((t0.c0))>=((v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELIHOOD(DISTINCT v0.c0, 0.6934303321446034) THEN ((t0.c0) NOT NULL) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN ((v0.c0)&(vt0.c0)) THEN x'e6186d50' END) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0 ORDER BY json_patch(((t0.c0)LIKE(t0.c0)), (((t0.c0))>=((v0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 NATURAL JOIN v0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT v0.c0, 0.6934303321446034) THEN ((t0.c0) NOT NULL) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN ((v0.c0)&(vt0.c0)) THEN x'e6186d50' END) ORDER BY json_patch(((t0.c0)LIKE(t0.c0)), (((t0.c0))>=((v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELIHOOD(DISTINCT v0.c0, 0.6934303321446034) THEN ((t0.c0) NOT NULL) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN ((v0.c0)&(vt0.c0)) THEN x'e6186d50' END) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0 ORDER BY json_patch(((t0.c0)LIKE(t0.c0)), (((t0.c0))>=((v0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 NATURAL JOIN v0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT v0.c0, 0.6934303321446034) THEN ((t0.c0) NOT NULL) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN ((v0.c0)&(vt0.c0)) THEN x'e6186d50' END) ORDER BY json_patch(((t0.c0)LIKE(t0.c0)), (((t0.c0))>=((v0.c0))))  NULLS FIRST;
SELECT * FROM v0, t0, vt0 WHERE (CASE (t0.c0 IN ())  WHEN RTRIM(t0.c0) THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN ((v0.c0)>=(t0.c0)) WHEN UPPER(DISTINCT t0.c0) THEN (((v0.c0, vt0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) ELSE v0.c0 END) ORDER BY (~ (CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)) DESC, vt0.c0, CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN RTRIM(t0.c0) THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN ((v0.c0)>=(t0.c0)) WHEN UPPER(DISTINCT t0.c0) THEN (((v0.c0, vt0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) ELSE v0.c0 END) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (~ (CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)) DESC, vt0.c0, CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE (CASE (t0.c0 IN ())  WHEN RTRIM(t0.c0) THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN ((v0.c0)>=(t0.c0)) WHEN UPPER(DISTINCT t0.c0) THEN (((v0.c0, vt0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) ELSE v0.c0 END) ORDER BY (~ (CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)) DESC, vt0.c0, CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN RTRIM(t0.c0) THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN ((v0.c0)>=(t0.c0)) WHEN UPPER(DISTINCT t0.c0) THEN (((v0.c0, vt0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) ELSE v0.c0 END) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (~ (CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)) DESC, vt0.c0, CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE (CASE (t0.c0 IN ())  WHEN RTRIM(t0.c0) THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN ((v0.c0)>=(t0.c0)) WHEN UPPER(DISTINCT t0.c0) THEN (((v0.c0, vt0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) ELSE v0.c0 END) ORDER BY (~ (CASE v0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)) DESC, vt0.c0, CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((((CAST(vt0.c0 AS TEXT))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) BETWEEN ('0.8531246565286841') AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(((vt0.c0)+(vt0.c0)))))OR(((((((((4.24933245E8)AND(1910689270)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(vt0.c0 AS TEXT))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) BETWEEN ('0.8531246565286841') AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(((vt0.c0)+(vt0.c0)))))OR(((((((((4.24933245E8)AND(1910689270)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((CAST(vt0.c0 AS TEXT))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) BETWEEN ('0.8531246565286841') AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(((vt0.c0)+(vt0.c0)))))OR(((((((((4.24933245E8)AND(1910689270)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(vt0.c0 AS TEXT))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) BETWEEN ('0.8531246565286841') AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(((vt0.c0)+(vt0.c0)))))OR(((((((((4.24933245E8)AND(1910689270)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((CAST(vt0.c0 AS TEXT))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) BETWEEN ('0.8531246565286841') AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(((vt0.c0)+(vt0.c0)))))OR(((((((((4.24933245E8)AND(1910689270)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOTNULL))));
SELECT ALL * FROM v0, t0, vt0 WHERE (((CAST(v0.c0 AS TEXT))>=(x'1056')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))>=(x'1056'))) IS TRUE)  as count FROM v0 NOT INDEXED, t0, vt0 NOT INDEXED);
SELECT ALL * FROM v0, t0, vt0 WHERE (((CAST(v0.c0 AS TEXT))>=(x'1056')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))>=(x'1056'))) IS TRUE)  as count FROM v0 NOT INDEXED, t0, vt0 NOT INDEXED);
SELECT ALL * FROM v0, t0, vt0 WHERE (((CAST(v0.c0 AS TEXT))>=(x'1056')));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0))) ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) IS TRUE))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) IS TRUE))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0))) ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) IS TRUE))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) IS TRUE))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.12434253981764953) THEN (((v0.c0, t0.c0, vt0.c0))<((t0.c0, x'', v0.c0))) END CROSS JOIN t0 ON ((((v0.c0) NOT NULL))GLOB(((x'')IS NOT('1394734550')))) WHERE (CASE WHEN ((t0.c0)>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (~ (vt0.c0)) END) ORDER BY 0xffffffffb0246c47;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.12434253981764953) THEN (((v0.c0, t0.c0, vt0.c0))<((t0.c0, x'', v0.c0))) END CROSS JOIN t0 ON ((((v0.c0) NOT NULL))GLOB(((x'')IS NOT('1394734550')))) ORDER BY 0xffffffffb0246c47);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.12434253981764953) THEN (((v0.c0, t0.c0, vt0.c0))<((t0.c0, x'', v0.c0))) END CROSS JOIN t0 ON ((((v0.c0) NOT NULL))GLOB(((x'')IS NOT('1394734550')))) WHERE (CASE WHEN ((t0.c0)>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (~ (vt0.c0)) END) ORDER BY 0xffffffffb0246c47;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.12434253981764953) THEN (((v0.c0, t0.c0, vt0.c0))<((t0.c0, x'', v0.c0))) END CROSS JOIN t0 ON ((((v0.c0) NOT NULL))GLOB(((x'')IS NOT('1394734550')))) ORDER BY 0xffffffffb0246c47);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT(t0.c0))) ORDER BY t0.c0 DESC, t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)IS NOT(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, t0.c0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT(t0.c0))) ORDER BY t0.c0 DESC, t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)IS NOT(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, t0.c0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT(t0.c0))) ORDER BY t0.c0 DESC, t0.c0;
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (json_remove('', t0.c0)) AND ((((t0.c0))>((t0.c0)))))) ORDER BY (((NULL IN ())) BETWEEN (((('alHQ')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0) NOTNULL))), t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (json_remove('', t0.c0)) AND ((((t0.c0))>((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((NULL IN ())) BETWEEN (((('alHQ')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0) NOTNULL))), t0.c0 DESC);
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (json_remove('', t0.c0)) AND ((((t0.c0))>((t0.c0)))))) ORDER BY (((NULL IN ())) BETWEEN (((('alHQ')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0) NOTNULL))), t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (json_remove('', t0.c0)) AND ((((t0.c0))>((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((NULL IN ())) BETWEEN (((('alHQ')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0) NOTNULL))), t0.c0 DESC);
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (json_remove('', t0.c0)) AND ((((t0.c0))>((t0.c0)))))) ORDER BY (((NULL IN ())) BETWEEN (((('alHQ')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0) NOTNULL))), t0.c0 DESC;
SELECT * FROM v0, t0 WHERE ((((((t0.c0, v0.c0, t0.c0))<((t0.c0, t0.c0, v0.c0)))) BETWEEN (((v0.c0) NOT NULL)) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, v0.c0, t0.c0))<((t0.c0, t0.c0, v0.c0)))) BETWEEN (((v0.c0) NOT NULL)) AND (t0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((t0.c0, v0.c0, t0.c0))<((t0.c0, t0.c0, v0.c0)))) BETWEEN (((v0.c0) NOT NULL)) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, v0.c0, t0.c0))<((t0.c0, t0.c0, v0.c0)))) BETWEEN (((v0.c0) NOT NULL)) AND (t0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((t0.c0, v0.c0, t0.c0))<((t0.c0, t0.c0, v0.c0)))) BETWEEN (((v0.c0) NOT NULL)) AND (t0.c0)));
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT));
SELECT ALL * FROM v0, t0, vt0 WHERE (CAST(((NULL) BETWEEN (vt0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (((- (v0.c0)))IS(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) BETWEEN (vt0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((- (v0.c0)))IS(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ASC);
SELECT ALL * FROM v0, t0, vt0 WHERE (CAST(((NULL) BETWEEN (vt0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (((- (v0.c0)))IS(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) BETWEEN (vt0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((- (v0.c0)))IS(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ASC);
SELECT ALL * FROM v0, t0, vt0 WHERE (CAST(((NULL) BETWEEN (vt0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (((- (v0.c0)))IS(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ASC;
SELECT ALL * FROM v0, t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((~ (x'0e97')))) WHERE (((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))&((t0.c0 IN ())))) ORDER BY ((((t0.c0)<(v0.c0)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) ISNULL), 0.4597453964400763, v0.c0)) AND ((x'230d', (+ (t0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))&((t0.c0 IN ())))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((~ (x'0e97')))) ORDER BY ((((t0.c0)<(v0.c0)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) ISNULL), 0.4597453964400763, v0.c0)) AND ((x'230d', (+ (t0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM v0, t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((~ (x'0e97')))) WHERE (((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))&((t0.c0 IN ())))) ORDER BY ((((t0.c0)<(v0.c0)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) ISNULL), 0.4597453964400763, v0.c0)) AND ((x'230d', (+ (t0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))&((t0.c0 IN ())))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((~ (x'0e97')))) ORDER BY ((((t0.c0)<(v0.c0)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) ISNULL), 0.4597453964400763, v0.c0)) AND ((x'230d', (+ (t0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM v0, t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((~ (x'0e97')))) WHERE (((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))&((t0.c0 IN ())))) ORDER BY ((((t0.c0)<(v0.c0)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) ISNULL), 0.4597453964400763, v0.c0)) AND ((x'230d', (+ (t0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0, v0, t0 NOT INDEXED WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 NOT INDEXED WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 NOT INDEXED WHERE ((v0.c0 IN ()));
SELECT * FROM v0, t0 WHERE (COALESCE(((t0.c0)<(t0.c0)), (t0.c0 IN ()), (((t0.c0, 'v', t0.c0)) BETWEEN ((v0.c0, NULL, t0.c0)) AND ((t0.c0, v0.c0, v0.c0))), ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ORDER BY t0.c0 DESC  NULLS FIRST, ((((t0.c0)=(v0.c0)))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c0)<(t0.c0)), (t0.c0 IN ()), (((t0.c0, 'v', t0.c0)) BETWEEN ((v0.c0, NULL, t0.c0)) AND ((t0.c0, v0.c0, v0.c0))), ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0 DESC  NULLS FIRST, ((((t0.c0)==(v0.c0)))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC);
SELECT * FROM v0, t0 WHERE (COALESCE(((t0.c0)<(t0.c0)), (t0.c0 IN ()), (((t0.c0, 'v', t0.c0)) BETWEEN ((v0.c0, NULL, t0.c0)) AND ((t0.c0, v0.c0, v0.c0))), ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ORDER BY t0.c0 DESC  NULLS FIRST, ((((t0.c0)=(v0.c0)))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c0)<(t0.c0)), (t0.c0 IN ()), (((t0.c0, 'v', t0.c0)) BETWEEN ((v0.c0, NULL, t0.c0)) AND ((t0.c0, v0.c0, v0.c0))), ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0 DESC  NULLS FIRST, ((((t0.c0)==(v0.c0)))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC);
SELECT * FROM v0, t0 WHERE (COALESCE(((t0.c0)<(t0.c0)), (t0.c0 IN ()), (((t0.c0, 'v', t0.c0)) BETWEEN ((v0.c0, NULL, t0.c0)) AND ((t0.c0, v0.c0, v0.c0))), ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ORDER BY t0.c0 DESC  NULLS FIRST, ((((t0.c0)=(v0.c0)))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ('Pk3')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('Pk3'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ('Pk3')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('Pk3'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ('Pk3')));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0) IS FALSE) LEFT OUTER JOIN vt0 ON CAST((x'62f9' IN (v0.c0)) AS INTEGER) WHERE ((((((((((+ ('1335149228')))OR(CHAR(-869194814))))OR(NULL)))AND((((t0.c0))==((v0.c0))))))AND(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ ('1335149228')))OR(CHAR(-869194814))))OR(NULL)))AND((((t0.c0))=((v0.c0))))))AND(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0) IS FALSE) LEFT OUTER JOIN vt0 ON CAST((x'62f9' IN (v0.c0)) AS INTEGER));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0) IS FALSE) LEFT OUTER JOIN vt0 ON CAST((x'62f9' IN (v0.c0)) AS INTEGER) WHERE ((((((((((+ ('1335149228')))OR(CHAR(-869194814))))OR(NULL)))AND((((t0.c0))==((v0.c0))))))AND(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ ('1335149228')))OR(CHAR(-869194814))))OR(NULL)))AND((((t0.c0))=((v0.c0))))))AND(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0) IS FALSE) LEFT OUTER JOIN vt0 ON CAST((x'62f9' IN (v0.c0)) AS INTEGER));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0) IS FALSE) LEFT OUTER JOIN vt0 ON CAST((x'62f9' IN (v0.c0)) AS INTEGER) WHERE ((((((((((+ ('1335149228')))OR(CHAR(-869194814))))OR(NULL)))AND((((t0.c0))==((v0.c0))))))AND(CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((TRIM(t0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c0)) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((TRIM(t0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c0)) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((TRIM(t0.c0)) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c0)AND(t0.c0)))AND(v0.c0)))LIKE((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(v0.c0)))LIKE((NULL IN ())))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c0)AND(t0.c0)))AND(v0.c0)))LIKE((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(v0.c0)))LIKE((NULL IN ())))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c0)AND(t0.c0)))AND(v0.c0)))LIKE((NULL IN ()))));
SELECT * FROM v0 WHERE (((v0.c0)<(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)<(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)<(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)<(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)<(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE ((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) END WHERE (((CASE v0.c0  WHEN 0.903836564042682 THEN v0.c0 ELSE x'' END) NOT BETWEEN (((t0.c0)>(v0.c0))) AND (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN 0.903836564042682 THEN v0.c0 ELSE x'' END) NOT BETWEEN (((t0.c0)>(v0.c0))) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CASE ((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) END);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE ((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) END WHERE (((CASE v0.c0  WHEN 0.903836564042682 THEN v0.c0 ELSE x'' END) NOT BETWEEN (((t0.c0)>(v0.c0))) AND (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN 0.903836564042682 THEN v0.c0 ELSE x'' END) NOT BETWEEN (((t0.c0)>(v0.c0))) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CASE ((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) END);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE ((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) END WHERE (((CASE v0.c0  WHEN 0.903836564042682 THEN v0.c0 ELSE x'' END) NOT BETWEEN (((t0.c0)>(v0.c0))) AND (((t0.c0) IS FALSE))));
SELECT * FROM v0, vt0 WHERE (CASE -1.945540589E9 COLLATE NOCASE  WHEN TRIM(vt0.c0) THEN (('-869194814') IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY 1.177805079E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE -1.945540589E9 COLLATE NOCASE  WHEN TRIM(vt0.c0) THEN (('-869194814') IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM v0, vt0 ORDER BY 1.177805079E9 DESC);
SELECT * FROM v0, vt0 WHERE (CASE -1.945540589E9 COLLATE NOCASE  WHEN TRIM(vt0.c0) THEN (('-869194814') IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY 1.177805079E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE -1.945540589E9 COLLATE NOCASE  WHEN TRIM(vt0.c0) THEN (('-869194814') IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM v0, vt0 ORDER BY 1.177805079E9 DESC);
SELECT * FROM v0, vt0 WHERE (CASE -1.945540589E9 COLLATE NOCASE  WHEN TRIM(vt0.c0) THEN (('-869194814') IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)||(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY 1.177805079E9 DESC;
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))>=(v0.c0))) ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))>=(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST, v0.c0  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))>=(v0.c0))) ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))>=(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST, v0.c0  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))>=(v0.c0))) ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST, v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CAST('0.21679140356471027' AS BLOB)))) ORDER BY (NOT (0xffffffff90670621)) ASC, ((((t0.c0)/(x'8148'))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CAST('0.21679140356471027' AS BLOB)))) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (0Xffffffff90670621)) ASC, ((((t0.c0)/(x'8148'))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CAST('0.21679140356471027' AS BLOB)))) ORDER BY (NOT (0xffffffff90670621)) ASC, ((((t0.c0)/(x'8148'))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CAST('0.21679140356471027' AS BLOB)))) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (0Xffffffff90670621)) ASC, ((((t0.c0)/(x'8148'))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CAST('0.21679140356471027' AS BLOB)))) ORDER BY (NOT (0xffffffff90670621)) ASC, ((((t0.c0)/(x'8148'))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON (+ (CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON (+ (CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON (+ (CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON (+ (CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON (+ (CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)) WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((-2030034629) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((-2030034629) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((-2030034629) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((-2030034629) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((-2030034629) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT x'', ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) INNER JOIN v0 ON (((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(CASE WHEN v0.c0 THEN t0.c0 ELSE '697458456' END)))AND(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 END)) WHERE (((((((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)) COLLATE BINARY) ORDER BY (('tW35Q覔')<=(((vt0.c0)<>(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT x'', ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) INNER JOIN v0 ON (((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(CASE WHEN v0.c0 THEN t0.c0 ELSE '697458456' END)))AND(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 END)) ORDER BY (('tW35Q覔')<=(((vt0.c0)<>(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT x'', ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) INNER JOIN v0 ON (((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(CASE WHEN v0.c0 THEN t0.c0 ELSE '697458456' END)))AND(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 END)) WHERE (((((((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)) COLLATE BINARY) ORDER BY (('tW35Q覔')<=(((vt0.c0)<>(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT x'', ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) INNER JOIN v0 ON (((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(CASE WHEN v0.c0 THEN t0.c0 ELSE '697458456' END)))AND(CASE v0.c0  WHEN t0.c0 THEN vt0.c0 END)) ORDER BY (('tW35Q覔')<=(((vt0.c0)<>(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(x'91e4' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'91e4' AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(x'91e4' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'91e4' AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(x'91e4' AS NUMERIC));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (vt0.c0) ORDER BY (((+ (t0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((+ (t0.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (vt0.c0) ORDER BY (((+ (t0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((+ (t0.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (vt0.c0) ORDER BY (((+ (t0.c0))) IS FALSE) DESC;
SELECT * FROM t0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((((t0.c0)<=(x'aecb')), t0.c0, ((t0.c0)>(0.02695960680677245))))==((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOTNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0)))))) DESC  NULLS FIRST, ((x'')LIKE(((((t0.c0)OR(x'')))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)<=(x'aecb')), t0.c0, ((t0.c0)>(0.02695960680677245))))==((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOTNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0)))))) DESC  NULLS FIRST, ((x'')LIKE(((((t0.c0)OR(x'')))OR(t0.c0)))));
SELECT * FROM t0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((((t0.c0)<=(x'aecb')), t0.c0, ((t0.c0)>(0.02695960680677245))))==((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOTNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0)))))) DESC  NULLS FIRST, ((x'')LIKE(((((t0.c0)OR(x'')))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)<=(x'aecb')), t0.c0, ((t0.c0)>(0.02695960680677245))))==((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOTNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0)))))) DESC  NULLS FIRST, ((x'')LIKE(((((t0.c0)OR(x'')))OR(t0.c0)))));
SELECT * FROM t0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((((t0.c0)<=(x'aecb')), t0.c0, ((t0.c0)>(0.02695960680677245))))==((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOTNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0)))))) DESC  NULLS FIRST, ((x'')LIKE(((((t0.c0)OR(x'')))OR(t0.c0))));
SELECT ALL COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN (v0.c0 IN (t0.c0, t0.c0)) ELSE vt0.c0 END WHERE ((((x'ad54', '886643039', (t0.c0 IN ())))>((CAST(vt0.c0 AS TEXT), (~ (t0.c0)), t0.c0 COLLATE BINARY)))) ORDER BY ((((v0.c0) NOTNULL))+((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'ad54', '886643039', (t0.c0 IN ())))>((CAST(vt0.c0 AS TEXT), (~ (t0.c0)), t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN (v0.c0 IN (t0.c0, t0.c0)) ELSE vt0.c0 END ORDER BY ((((v0.c0) NOTNULL))+((v0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN (v0.c0 IN (t0.c0, t0.c0)) ELSE vt0.c0 END WHERE ((((x'ad54', '886643039', (t0.c0 IN ())))>((CAST(vt0.c0 AS TEXT), (~ (t0.c0)), t0.c0 COLLATE BINARY)))) ORDER BY ((((v0.c0) NOTNULL))+((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'ad54', '886643039', (t0.c0 IN ())))>((CAST(vt0.c0 AS TEXT), (~ (t0.c0)), t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN (v0.c0 IN (t0.c0, t0.c0)) ELSE vt0.c0 END ORDER BY ((((v0.c0) NOTNULL))+((v0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN (v0.c0 IN (t0.c0, t0.c0)) ELSE vt0.c0 END WHERE ((((x'ad54', '886643039', (t0.c0 IN ())))>((CAST(vt0.c0 AS TEXT), (~ (t0.c0)), t0.c0 COLLATE BINARY)))) ORDER BY ((((v0.c0) NOTNULL))+((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((NULL)OR(x'')))OR(v0.c0)), (v0.c0 IN ()), (+ (v0.c0))))<=((((((v0.c0)AND('()')))OR(v0.c0)), (((v0.c0))=((v0.c0))), ((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL)OR(x'')))OR(v0.c0)), (v0.c0 IN ()), (+ (v0.c0))))<=((((((v0.c0)AND('()')))OR(v0.c0)), (((v0.c0))==((v0.c0))), ((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((NULL)OR(x'')))OR(v0.c0)), (v0.c0 IN ()), (+ (v0.c0))))<=((((((v0.c0)AND('()')))OR(v0.c0)), (((v0.c0))=((v0.c0))), ((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL)OR(x'')))OR(v0.c0)), (v0.c0 IN ()), (+ (v0.c0))))<=((((((v0.c0)AND('()')))OR(v0.c0)), (((v0.c0))==((v0.c0))), ((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((NULL)OR(x'')))OR(v0.c0)), (v0.c0 IN ()), (+ (v0.c0))))<=((((((v0.c0)AND('()')))OR(v0.c0)), (((v0.c0))=((v0.c0))), ((v0.c0)|(v0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (0.09272710840590592 COLLATE RTRIM) ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c0)<>(t0.c0))) ASC, t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.09272710840590592 COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c0)<>(t0.c0))) ASC, t0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.09272710840590592 COLLATE RTRIM) ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c0)<>(t0.c0))) ASC, t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.09272710840590592 COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c0)<>(t0.c0))) ASC, t0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.09272710840590592 COLLATE RTRIM) ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c0)<>(t0.c0))) ASC, t0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE RTRIM))>((vt0.c0)))) ORDER BY ((((vt0.c0) NOTNULL))>>((vt0.c0 IN (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE RTRIM))>((vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOTNULL))>>((vt0.c0 IN (t0.c0))))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE RTRIM))>((vt0.c0)))) ORDER BY ((((vt0.c0) NOTNULL))>>((vt0.c0 IN (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE RTRIM))>((vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOTNULL))>>((vt0.c0 IN (t0.c0))))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE RTRIM))>((vt0.c0)))) ORDER BY ((((vt0.c0) NOTNULL))>>((vt0.c0 IN (t0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN t0 ON (((((vt0.c0)||(x''))))=(((- (vt0.c0))))) WHERE (((((vt0.c0) NOT NULL))<(NULL))) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(t0.c0)))GLOB(((v0.c0)*(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))<(NULL))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN t0 ON (((((vt0.c0)||(x''))))==(((- (vt0.c0))))) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(t0.c0)))GLOB(((v0.c0)*(v0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN t0 ON (((((vt0.c0)||(x''))))=(((- (vt0.c0))))) WHERE (((((vt0.c0) NOT NULL))<(NULL))) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(t0.c0)))GLOB(((v0.c0)*(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))<(NULL))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN t0 ON (((((vt0.c0)||(x''))))==(((- (vt0.c0))))) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(t0.c0)))GLOB(((v0.c0)*(v0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN t0 ON (((((vt0.c0)||(x''))))=(((- (vt0.c0))))) WHERE (((((vt0.c0) NOT NULL))<(NULL))) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(t0.c0)))GLOB(((v0.c0)*(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY WHERE ((((((v0.c0))>=((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY WHERE ((((((v0.c0))>=((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT NULL) COLLATE BINARY WHERE ((((((v0.c0))>=((t0.c0)))) NOT NULL));
SELECT * FROM t0, vt0, v0 WHERE (((((vt0.c0 IN (vt0.c0)), HEX(DISTINCT t0.c0), ((((v0.c0)OR(vt0.c0)))OR(t0.c0))))!=((((vt0.c0)+(t0.c0)), ((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)), (((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0)), HEX(DISTINCT t0.c0), ((((v0.c0)OR(vt0.c0)))OR(t0.c0))))!=((((vt0.c0)+(t0.c0)), ((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)), (((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, v0.c0))))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((((vt0.c0 IN (vt0.c0)), HEX(DISTINCT t0.c0), ((((v0.c0)OR(vt0.c0)))OR(t0.c0))))!=((((vt0.c0)+(t0.c0)), ((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)), (((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0)), HEX(DISTINCT t0.c0), ((((v0.c0)OR(vt0.c0)))OR(t0.c0))))!=((((vt0.c0)+(t0.c0)), ((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)), (((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, v0.c0))))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((((vt0.c0 IN (vt0.c0)), HEX(DISTINCT t0.c0), ((((v0.c0)OR(vt0.c0)))OR(t0.c0))))!=((((vt0.c0)+(t0.c0)), ((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)), (((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, v0.c0)))))));
SELECT ALL * FROM t0 WHERE ((t0.c0 IN (TRIM(t0.c0)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((x'7aba')))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (TRIM(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((x'7aba')))) IS FALSE) ASC);
SELECT ALL * FROM t0 WHERE ((t0.c0 IN (TRIM(t0.c0)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((x'7aba')))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (TRIM(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((x'7aba')))) IS FALSE) ASC);
SELECT ALL * FROM t0 WHERE ((t0.c0 IN (TRIM(t0.c0)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((x'7aba')))) IS FALSE) ASC;
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c0, 0.1065688721572764, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0, 0.1065688721572764, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c0, 0.1065688721572764, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0, 0.1065688721572764, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c0, 0.1065688721572764, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AS NUMERIC));
SELECT * FROM t0 WHERE (((t0.c0) ISNULL)) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT * FROM t0 WHERE (((t0.c0) ISNULL)) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT * FROM t0 WHERE (((t0.c0) ISNULL)) ORDER BY t0.c0;
SELECT * FROM t0, vt0, v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN UNICODE(v0.c0) END) ORDER BY (((v0.c0)) BETWEEN (((((1278911025)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) ISNULL) THEN UNICODE(v0.c0) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((v0.c0)) BETWEEN (((((1278911025)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC);
SELECT * FROM t0, vt0, v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN UNICODE(v0.c0) END) ORDER BY (((v0.c0)) BETWEEN (((((1278911025)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) ISNULL) THEN UNICODE(v0.c0) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((v0.c0)) BETWEEN (((((1278911025)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC);
SELECT * FROM t0, vt0, v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN UNICODE(v0.c0) END) ORDER BY (((v0.c0)) BETWEEN (((((1278911025)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)), -1315579021, ((v0.c0) BETWEEN ('-1170536084') AND (v0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, TRIM(v0.c0, '\n-e]8rg'), (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(v0.c0)), -1315579021, ((v0.c0) BETWEEN ('-1170536084') AND (v0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, TRIM(v0.c0, '\n-e]8rg'), (v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)), -1315579021, ((v0.c0) BETWEEN ('-1170536084') AND (v0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, TRIM(v0.c0, '\n-e]8rg'), (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(v0.c0)), -1315579021, ((v0.c0) BETWEEN ('-1170536084') AND (v0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, TRIM(v0.c0, '\n-e]8rg'), (v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)), -1315579021, ((v0.c0) BETWEEN ('-1170536084') AND (v0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, TRIM(v0.c0, '\n-e]8rg'), (v0.c0 IN ())))));
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)&(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)&(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)&(((vt0.c0)/(vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM v0, vt0, t0 WHERE (((NULL) NOT NULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY x'');
SELECT ALL * FROM v0, vt0, t0 WHERE (((NULL) NOT NULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY x'');
SELECT ALL * FROM v0, vt0, t0 WHERE (((NULL) NOT NULL)) ORDER BY x'';
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE (~ (v0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN v0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN '0.22475845829649743' END) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((CASE (~ (v0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN v0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN '0.22475845829649743' END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE (~ (v0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN v0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN '0.22475845829649743' END) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((CASE (~ (v0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN v0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN '0.22475845829649743' END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE (~ (v0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN v0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN '0.22475845829649743' END) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END;
SELECT * FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE)LIKE(((('b,'))<((vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN (NOT (t0.c0)) ELSE (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)LIKE(((('b,'))<((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN vt0.c0 THEN (NOT (t0.c0)) ELSE (vt0.c0 IN ()) END DESC);
SELECT * FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE)LIKE(((('b,'))<((vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN (NOT (t0.c0)) ELSE (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)LIKE(((('b,'))<((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN vt0.c0 THEN (NOT (t0.c0)) ELSE (vt0.c0 IN ()) END DESC);
SELECT * FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE)LIKE(((('b,'))<((vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN (NOT (t0.c0)) ELSE (vt0.c0 IN ()) END DESC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0) ORDER BY (NOT (t0.c0 COLLATE BINARY)), ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (NOT (t0.c0 COLLATE BINARY)), ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0) ORDER BY (NOT (t0.c0 COLLATE BINARY)), ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (NOT (t0.c0 COLLATE BINARY)), ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0) ORDER BY (NOT (t0.c0 COLLATE BINARY)), ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((t0.c0)-('zd'))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((t0.c0)-('zd'))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((t0.c0)-('zd'))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((t0.c0)-('zd'))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((t0.c0)-('zd'))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((((((vt0.c0, v0.c0, vt0.c0))<=((v0.c0, vt0.c0, t0.c0))))||(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0))<=((v0.c0, vt0.c0, t0.c0))))||(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((((((vt0.c0, v0.c0, vt0.c0))<=((v0.c0, vt0.c0, t0.c0))))||(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0))<=((v0.c0, vt0.c0, t0.c0))))||(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((((((vt0.c0, v0.c0, vt0.c0))<=((v0.c0, vt0.c0, t0.c0))))||(CAST(t0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c0)GLOB(0.09272710840590592))))) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)GLOB(0.09272710840590592))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c0)GLOB(0.09272710840590592))))) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)GLOB(0.09272710840590592))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c0)GLOB(0.09272710840590592))))) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN ());
SELECT * FROM t0 WHERE ((+ (((0.018524736103587736) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((0.018524736103587736) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((0.018524736103587736) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((0.018524736103587736) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((0.018524736103587736) IS TRUE))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((LIKELIHOOD(v0.c0, 0.042700273146095036)) BETWEEN (((t0.c0)!=(v0.c0))) AND (((t0.c0) BETWEEN (NULL) AND (vt0.c0)))) RIGHT OUTER JOIN v0 ON vt0.c0 WHERE (((v0.c0)IS(((((((((t0.c0)OR(vt0.c0)))AND(0X494b1fcc)))OR(t0.c0)))AND(v0.c0))))) ORDER BY (- (v0.c0 COLLATE NOCASE)), rtreenode((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST, t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS(((((((((t0.c0)OR(vt0.c0)))AND(0X494b1fcc)))OR(t0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((LIKELIHOOD(v0.c0, 0.042700273146095036)) BETWEEN (((t0.c0)!=(v0.c0))) AND (((t0.c0) BETWEEN (NULL) AND (vt0.c0)))) RIGHT OUTER JOIN v0 ON vt0.c0 ORDER BY (- (v0.c0 COLLATE NOCASE)), rtreenode((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST, t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((LIKELIHOOD(v0.c0, 0.042700273146095036)) BETWEEN (((t0.c0)!=(v0.c0))) AND (((t0.c0) BETWEEN (NULL) AND (vt0.c0)))) RIGHT OUTER JOIN v0 ON vt0.c0 WHERE (((v0.c0)IS(((((((((t0.c0)OR(vt0.c0)))AND(0X494b1fcc)))OR(t0.c0)))AND(v0.c0))))) ORDER BY (- (v0.c0 COLLATE NOCASE)), rtreenode((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST, t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS(((((((((t0.c0)OR(vt0.c0)))AND(0X494b1fcc)))OR(t0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((LIKELIHOOD(v0.c0, 0.042700273146095036)) BETWEEN (((t0.c0)!=(v0.c0))) AND (((t0.c0) BETWEEN (NULL) AND (vt0.c0)))) RIGHT OUTER JOIN v0 ON vt0.c0 ORDER BY (- (v0.c0 COLLATE NOCASE)), rtreenode((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST, t0.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 NOT INDEXED WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 NOT INDEXED WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 NOT INDEXED WHERE (v0.c0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))AND(CAST(t0.c0 AS INTEGER)))) ORDER BY INSTR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))AND(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY INSTR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), NULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))AND(CAST(t0.c0 AS INTEGER)))) ORDER BY INSTR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))AND(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY INSTR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), NULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))AND(CAST(t0.c0 AS INTEGER)))) ORDER BY INSTR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((0.10042518162164782)OR(((vt0.c0)>(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(((((0Xfffffffff1fdf58a)OR(vt0.c0)))AND(vt0.c0)))))AND(',T')) WHERE (((((0.6819298341428235)AND(-3.78795471E8)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((0.6819298341428235)AND(-3.78795471E8)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((0.10042518162164782)OR(((vt0.c0)>(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(((((0Xfffffffff1fdf58a)OR(vt0.c0)))AND(vt0.c0)))))AND(',T')));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((0.10042518162164782)OR(((vt0.c0)>(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(((((0Xfffffffff1fdf58a)OR(vt0.c0)))AND(vt0.c0)))))AND(',T')) WHERE (((((0.6819298341428235)AND(-3.78795471E8)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((0.6819298341428235)AND(-3.78795471E8)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((0.10042518162164782)OR(((vt0.c0)>(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(((((0Xfffffffff1fdf58a)OR(vt0.c0)))AND(vt0.c0)))))AND(',T')));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((0.10042518162164782)OR(((vt0.c0)>(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(((((0Xfffffffff1fdf58a)OR(vt0.c0)))AND(vt0.c0)))))AND(',T')) WHERE (((((0.6819298341428235)AND(-3.78795471E8)))AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((v0.c0 IN (t0.c0, t0.c0)) IN (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN v0 ON CASE ((vt0.c0)AND(t0.c0))  WHEN ((t0.c0)-(vt0.c0)) THEN QUOTE(vt0.c0) WHEN (vt0.c0 IN (vt0.c0, '-1494038844')) THEN (v0.c0 IN ()) WHEN t0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN x'' ELSE v0.c0 END ELSE CASE WHEN t0.c0 THEN v0.c0 END END WHERE (vt0.c0) ORDER BY '0.7818588988720306'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((v0.c0 IN (t0.c0, t0.c0)) IN (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN v0 ON CASE ((vt0.c0)AND(t0.c0))  WHEN ((t0.c0)-(vt0.c0)) THEN QUOTE(vt0.c0) WHEN (vt0.c0 IN (vt0.c0, '-1494038844')) THEN (v0.c0 IN ()) WHEN t0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN x'' ELSE v0.c0 END ELSE CASE WHEN t0.c0 THEN v0.c0 END END ORDER BY '0.7818588988720306'  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((v0.c0 IN (t0.c0, t0.c0)) IN (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN v0 ON CASE ((vt0.c0)AND(t0.c0))  WHEN ((t0.c0)-(vt0.c0)) THEN QUOTE(vt0.c0) WHEN (vt0.c0 IN (vt0.c0, '-1494038844')) THEN (v0.c0 IN ()) WHEN t0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN x'' ELSE v0.c0 END ELSE CASE WHEN t0.c0 THEN v0.c0 END END WHERE (vt0.c0) ORDER BY '0.7818588988720306'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((v0.c0 IN (t0.c0, t0.c0)) IN (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN v0 ON CASE ((vt0.c0)AND(t0.c0))  WHEN ((t0.c0)-(vt0.c0)) THEN QUOTE(vt0.c0) WHEN (vt0.c0 IN (vt0.c0, '-1494038844')) THEN (v0.c0 IN ()) WHEN t0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN x'' ELSE v0.c0 END ELSE CASE WHEN t0.c0 THEN v0.c0 END END ORDER BY '0.7818588988720306'  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (0.7120730515926517));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (0.7120730515926517)));
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (0.7120730515926517));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (0.7120730515926517)));
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (0.7120730515926517));
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(((v0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(((v0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(((v0.c0) IS FALSE) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON (json_patch(t0.c0, NULL) IN ()) WHERE (((((((((((((NULL)AND((((vt0.c0))>((t0.c0))))))AND(vt0.c0 COLLATE NOCASE)))AND((t0.c0 IN ()))))OR(CASE WHEN t0.c0 THEN v0.c0 END)))AND(0.4956465885344912 COLLATE RTRIM)))AND(((vt0.c0)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((NULL)AND((((vt0.c0))>((t0.c0))))))AND(vt0.c0 COLLATE NOCASE)))AND((t0.c0 IN ()))))OR(CASE WHEN t0.c0 THEN v0.c0 END)))AND(0.4956465885344912 COLLATE RTRIM)))AND(((vt0.c0)>=(t0.c0))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON (json_patch(t0.c0, NULL) IN ()));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON (json_patch(t0.c0, NULL) IN ()) WHERE (((((((((((((NULL)AND((((vt0.c0))>((t0.c0))))))AND(vt0.c0 COLLATE NOCASE)))AND((t0.c0 IN ()))))OR(CASE WHEN t0.c0 THEN v0.c0 END)))AND(0.4956465885344912 COLLATE RTRIM)))AND(((vt0.c0)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((NULL)AND((((vt0.c0))>((t0.c0))))))AND(vt0.c0 COLLATE NOCASE)))AND((t0.c0 IN ()))))OR(CASE WHEN t0.c0 THEN v0.c0 END)))AND(0.4956465885344912 COLLATE RTRIM)))AND(((vt0.c0)>=(t0.c0))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON (json_patch(t0.c0, NULL) IN ()));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON (json_patch(t0.c0, NULL) IN ()) WHERE (((((((((((((NULL)AND((((vt0.c0))>((t0.c0))))))AND(vt0.c0 COLLATE NOCASE)))AND((t0.c0 IN ()))))OR(CASE WHEN t0.c0 THEN v0.c0 END)))AND(0.4956465885344912 COLLATE RTRIM)))AND(((vt0.c0)>=(t0.c0)))));
SELECT ALL * FROM t0, vt0, v0 WHERE (((((NULL)<=(t0.c0))) NOTNULL)) ORDER BY ((((t0.c0) IS TRUE))IS(CASE WHEN x'' THEN v0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c0) IS TRUE))IS(CASE WHEN x'' THEN v0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END)) ASC);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((NULL)<=(t0.c0))) NOTNULL)) ORDER BY ((((t0.c0) IS TRUE))IS(CASE WHEN x'' THEN v0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c0) IS TRUE))IS(CASE WHEN x'' THEN v0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END)) ASC);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((NULL)<=(t0.c0))) NOTNULL)) ORDER BY ((((t0.c0) IS TRUE))IS(CASE WHEN x'' THEN v0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END)) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT t0.c0, 0.782696433017287) COLLATE RTRIM) ORDER BY CAST(JULIANDAY(vt0.c0, t0.c0, vt0.c0) AS NUMERIC) ASC  NULLS LAST, t0.c0, ((((t0.c0)OR(vt0.c0)))*(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT t0.c0, 0.782696433017287) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(JULIANDAY(vt0.c0, t0.c0, vt0.c0) AS NUMERIC) ASC  NULLS LAST, t0.c0, ((((t0.c0)OR(vt0.c0)))*(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT t0.c0, 0.782696433017287) COLLATE RTRIM) ORDER BY CAST(JULIANDAY(vt0.c0, t0.c0, vt0.c0) AS NUMERIC) ASC  NULLS LAST, t0.c0, ((((t0.c0)OR(vt0.c0)))*(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT t0.c0, 0.782696433017287) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(JULIANDAY(vt0.c0, t0.c0, vt0.c0) AS NUMERIC) ASC  NULLS LAST, t0.c0, ((((t0.c0)OR(vt0.c0)))*(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT t0.c0, 0.782696433017287) COLLATE RTRIM) ORDER BY CAST(JULIANDAY(vt0.c0, t0.c0, vt0.c0) AS NUMERIC) ASC  NULLS LAST, t0.c0, ((((t0.c0)OR(vt0.c0)))*(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c0))&((((-1.339790265E9)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c0))&((((-1.339790265E9)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c0))&((((-1.339790265E9)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c0))&((((-1.339790265E9)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c0))&((((-1.339790265E9)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE ((NOT (v0.c0)));
SELECT ALL * FROM vt0, v0, t0 WHERE (LIKELIHOOD(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), 0.1322505709172097)) ORDER BY v0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), 0.1322505709172097)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY v0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0, v0, t0 WHERE (LIKELIHOOD(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), 0.1322505709172097)) ORDER BY v0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), 0.1322505709172097)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY v0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0, v0, t0 WHERE (LIKELIHOOD(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), 0.1322505709172097)) ORDER BY v0.c0 COLLATE RTRIM;
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN ('-291250408') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN ('-291250408') AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN ('-291250408') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN ('-291250408') AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN ('-291250408') AND (t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c0))) AND ((t0.c0 IN ()))) CROSS JOIN t0 ON ((IFNULL(DISTINCT '602102036', t0.c0))AND(UNLIKELY(vt0.c0))) WHERE (LIKELY(DISTINCT ((t0.c0) IS FALSE))) ORDER BY (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND (((((('1177805079')AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST, (((0.9462386044511201)) NOT BETWEEN ((((t0.c0)=(t0.c0)))) AND ((((t0.c0)>(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c0) IS FALSE))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c0))) AND ((t0.c0 IN ()))) CROSS JOIN t0 ON ((IFNULL(DISTINCT '602102036', t0.c0))AND(UNLIKELY(vt0.c0))) ORDER BY (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND (((((('1177805079')AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST, (((0.9462386044511201)) NOT BETWEEN ((((t0.c0)=(t0.c0)))) AND ((((t0.c0)>(v0.c0))))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c0))) AND ((t0.c0 IN ()))) CROSS JOIN t0 ON ((IFNULL(DISTINCT '602102036', t0.c0))AND(UNLIKELY(vt0.c0))) WHERE (LIKELY(DISTINCT ((t0.c0) IS FALSE))) ORDER BY (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND (((((('1177805079')AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST, (((0.9462386044511201)) NOT BETWEEN ((((t0.c0)=(t0.c0)))) AND ((((t0.c0)>(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c0) IS FALSE))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c0))) AND ((t0.c0 IN ()))) CROSS JOIN t0 ON ((IFNULL(DISTINCT '602102036', t0.c0))AND(UNLIKELY(vt0.c0))) ORDER BY (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND (((((('1177805079')AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST, (((0.9462386044511201)) NOT BETWEEN ((((t0.c0)=(t0.c0)))) AND ((((t0.c0)>(v0.c0))))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c0))) AND ((t0.c0 IN ()))) CROSS JOIN t0 ON ((IFNULL(DISTINCT '602102036', t0.c0))AND(UNLIKELY(vt0.c0))) WHERE (LIKELY(DISTINCT ((t0.c0) IS FALSE))) ORDER BY (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND (((((('1177805079')AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST, (((0.9462386044511201)) NOT BETWEEN ((((t0.c0)=(t0.c0)))) AND ((((t0.c0)>(v0.c0))))) ASC;
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC;
SELECT * FROM vt0, t0 INNER JOIN v0 ON ((((vt0.c0)GLOB(vt0.c0))) NOTNULL) WHERE (LIKELY(DISTINCT 1901607815)) ORDER BY (((((+ (t0.c0)))OR(v0.c0 COLLATE NOCASE)))AND(((t0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT 1901607815)) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((((vt0.c0)GLOB(vt0.c0))) NOTNULL) ORDER BY (((((+ (t0.c0)))OR(v0.c0 COLLATE NOCASE)))AND(((t0.c0)>=(vt0.c0)))));
SELECT * FROM vt0, t0 INNER JOIN v0 ON ((((vt0.c0)GLOB(vt0.c0))) NOTNULL) WHERE (LIKELY(DISTINCT 1901607815)) ORDER BY (((((+ (t0.c0)))OR(v0.c0 COLLATE NOCASE)))AND(((t0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT 1901607815)) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((((vt0.c0)GLOB(vt0.c0))) NOTNULL) ORDER BY (((((+ (t0.c0)))OR(v0.c0 COLLATE NOCASE)))AND(((t0.c0)>=(vt0.c0)))));
SELECT * FROM vt0, t0 INNER JOIN v0 ON ((((vt0.c0)GLOB(vt0.c0))) NOTNULL) WHERE (LIKELY(DISTINCT 1901607815)) ORDER BY (((((+ (t0.c0)))OR(v0.c0 COLLATE NOCASE)))AND(((t0.c0)>=(vt0.c0))));
SELECT ALL * FROM t0, v0 WHERE (CASE ((((v0.c0)AND(t0.c0)))OR(t0.c0))  WHEN json_array_length('', v0.c0) THEN v0.c0 COLLATE BINARY ELSE CAST(t0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)AND(t0.c0)))OR(t0.c0))  WHEN json_array_length('', v0.c0) THEN v0.c0 COLLATE BINARY ELSE CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CASE ((((v0.c0)AND(t0.c0)))OR(t0.c0))  WHEN json_array_length('', v0.c0) THEN v0.c0 COLLATE BINARY ELSE CAST(t0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)AND(t0.c0)))OR(t0.c0))  WHEN json_array_length('', v0.c0) THEN v0.c0 COLLATE BINARY ELSE CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CASE ((((v0.c0)AND(t0.c0)))OR(t0.c0))  WHEN json_array_length('', v0.c0) THEN v0.c0 COLLATE BINARY ELSE CAST(t0.c0 AS INTEGER) END);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0)-(((((t0.c0)OR(t0.c0)))AND('#At皹탘\n&N'))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))/((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)-(((((t0.c0)OR(t0.c0)))AND('#At皹탘\n&N'))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))/((t0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0)-(((((t0.c0)OR(t0.c0)))AND('#At皹탘\n&N'))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))/((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)-(((((t0.c0)OR(t0.c0)))AND('#At皹탘\n&N'))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))/((t0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0)-(((((t0.c0)OR(t0.c0)))AND('#At皹탘\n&N'))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))/((t0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END)));
SELECT ALL * FROM vt0, t0 WHERE (((x'')IS(vt0.c0))) ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((NULL)<<(0.3533442755320322)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')IS(vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((NULL)<<(0.3533442755320322)))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((x'')IS(vt0.c0))) ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((NULL)<<(0.3533442755320322)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')IS(vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((NULL)<<(0.3533442755320322)))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((x'')IS(vt0.c0))) ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((NULL)<<(0.3533442755320322)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))<((t0.c0))) COLLATE NOCASE) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))<((t0.c0))) COLLATE NOCASE) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))<((t0.c0))) COLLATE NOCASE) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0)))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(NULL AS BLOB))%(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS BLOB))%(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(NULL AS BLOB))%(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS BLOB))%(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(NULL AS BLOB))%(((vt0.c0)GLOB(vt0.c0)))));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0X57632c10 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN 0x57632c10 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0X57632c10 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN 0x57632c10 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0X57632c10 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM);
SELECT * FROM v0, t0 WHERE (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.45480393600663904) AS NUMERIC)) ORDER BY ((v0.c0 COLLATE BINARY)>>(((v0.c0)<<(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT v0.c0, 0.45480393600663904) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c0 COLLATE BINARY)>>(((v0.c0)<<(t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.45480393600663904) AS NUMERIC)) ORDER BY ((v0.c0 COLLATE BINARY)>>(((v0.c0)<<(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT v0.c0, 0.45480393600663904) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c0 COLLATE BINARY)>>(((v0.c0)<<(t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.45480393600663904) AS NUMERIC)) ORDER BY ((v0.c0 COLLATE BINARY)>>(((v0.c0)<<(t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((+ (v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY, (NOT (((v0.c0) NOT NULL))) ASC  NULLS FIRST, ((((v0.c0)=(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS FIRST, ((0.41662755927505035)==(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY, (NOT (((v0.c0) NOT NULL))) ASC  NULLS FIRST, ((((v0.c0)==(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS FIRST, ((0.41662755927505035)==(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE ((+ (v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY, (NOT (((v0.c0) NOT NULL))) ASC  NULLS FIRST, ((((v0.c0)=(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS FIRST, ((0.41662755927505035)==(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY, (NOT (((v0.c0) NOT NULL))) ASC  NULLS FIRST, ((((v0.c0)==(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS FIRST, ((0.41662755927505035)==(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE ((+ (v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY, (NOT (((v0.c0) NOT NULL))) ASC  NULLS FIRST, ((((v0.c0)=(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))  NULLS FIRST, ((0.41662755927505035)==(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ('-1509201747') AND (((t0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN ('-1509201747') AND (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ('-1509201747') AND (((t0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN ('-1509201747') AND (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ('-1509201747') AND (((t0.c0)&(t0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (NULLIF(v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (NULLIF(v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (NULLIF(v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (NULLIF(v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (NULLIF(v0.c0, v0.c0)));
SELECT * FROM vt0, t0, v0 WHERE (ABS(DISTINCT (~ (vt0.c0)))) ORDER BY (~ (((vt0.c0)&('1912223871'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (~ (((vt0.c0)&('1912223871'))))  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (ABS(DISTINCT (~ (vt0.c0)))) ORDER BY (~ (((vt0.c0)&('1912223871'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (~ (((vt0.c0)&('1912223871'))))  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (ABS(DISTINCT (~ (vt0.c0)))) ORDER BY (~ (((vt0.c0)&('1912223871'))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (HEX(((vt0.c0)%(vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN LOWER(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN LOWER(vt0.c0) END);
SELECT COUNT(*) FROM vt0 WHERE (HEX(((vt0.c0)%(vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN LOWER(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN LOWER(vt0.c0) END);
SELECT COUNT(*) FROM vt0 WHERE (HEX(((vt0.c0)%(vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN LOWER(vt0.c0) END;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))==(SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(SQLITE_COMPILEOPTION_GET(t0.c0)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))==(SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(SQLITE_COMPILEOPTION_GET(t0.c0)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))==(SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (x'')));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))  WHEN TRIM(DISTINCT '0.4597453964400763') THEN (((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))) ELSE CAST(v0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))  WHEN TRIM(DISTINCT '0.4597453964400763') THEN (((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))) ELSE CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))  WHEN TRIM(DISTINCT '0.4597453964400763') THEN (((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))) ELSE CAST(v0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))  WHEN TRIM(DISTINCT '0.4597453964400763') THEN (((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))) ELSE CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))  WHEN TRIM(DISTINCT '0.4597453964400763') THEN (((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0))) ELSE CAST(v0.c0 AS NUMERIC) END);
SELECT ALL * FROM v0, vt0 WHERE (json_object(SQLITE_COMPILEOPTION_GET(v0.c0), (((v0.c0))<((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_object(SQLITE_COMPILEOPTION_GET(v0.c0), (((v0.c0))<((vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (json_object(SQLITE_COMPILEOPTION_GET(v0.c0), (((v0.c0))<((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_object(SQLITE_COMPILEOPTION_GET(v0.c0), (((v0.c0))<((vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (json_object(SQLITE_COMPILEOPTION_GET(v0.c0), (((v0.c0))<((vt0.c0)))));
SELECT * FROM v0, t0 WHERE (((('0.6819298341428235', ((((v0.c0)OR(v0.c0)))OR(t0.c0)), v0.c0))<((v0.c0 COLLATE BINARY, ((t0.c0) ISNULL), v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((('0.6819298341428235', ((((v0.c0)OR(v0.c0)))OR(t0.c0)), v0.c0))<((v0.c0 COLLATE BINARY, ((t0.c0) ISNULL), v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((('0.6819298341428235', ((((v0.c0)OR(v0.c0)))OR(t0.c0)), v0.c0))<((v0.c0 COLLATE BINARY, ((t0.c0) ISNULL), v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((('0.6819298341428235', ((((v0.c0)OR(v0.c0)))OR(t0.c0)), v0.c0))<((v0.c0 COLLATE BINARY, ((t0.c0) ISNULL), v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((('0.6819298341428235', ((((v0.c0)OR(v0.c0)))OR(t0.c0)), v0.c0))<((v0.c0 COLLATE BINARY, ((t0.c0) ISNULL), v0.c0 COLLATE NOCASE))));
SELECT * FROM v0, vt0, t0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (NOT ((NOT (v0.c0)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (NOT ((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (NOT ((NOT (v0.c0)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (NOT ((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (NOT ((NOT (v0.c0)))) WHERE (t0.c0);
SELECT * FROM vt0, v0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS BLOB)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)+(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS BLOB)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)+(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS BLOB)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(x'' AS REAL)) ORDER BY (- ((((1.912223871E9))==((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM t0, v0 ORDER BY (- ((((1.912223871E9))==((v0.c0))))));
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(x'' AS REAL)) ORDER BY (- ((((1.912223871E9))==((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM t0, v0 ORDER BY (- ((((1.912223871E9))==((v0.c0))))));
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(x'' AS REAL)) ORDER BY (- ((((1.912223871E9))==((v0.c0)))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0))) AND ((v0.c0 IN ())))) ORDER BY (NOT ((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NOT ((- (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0))) AND ((v0.c0 IN ())))) ORDER BY (NOT ((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NOT ((- (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0))) AND ((v0.c0 IN ())))) ORDER BY (NOT ((- (vt0.c0)))) DESC;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'25ba' ELSE v0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN x'25ba' ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'25ba' ELSE v0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN x'25ba' ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'25ba' ELSE v0.c0 END AS INTEGER));
SELECT COUNT(*) FROM v0, t0 WHERE (IFNULL((v0.c0 IN ()), (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((v0.c0 IN ()), (t0.c0 IN ()))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (IFNULL((v0.c0 IN ()), (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((v0.c0 IN ()), (t0.c0 IN ()))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (IFNULL((v0.c0 IN ()), (t0.c0 IN ())));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)LIKE('__(0*P')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)LIKE('__(0*P')) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)LIKE('__(0*P')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)LIKE('__(0*P')) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)LIKE('__(0*P')) AS TEXT));
SELECT * FROM v0, t0, vt0 WHERE ((((((((((vt0.c0)OR(v0.c0)))OR(t0.c0)))AND(v0.c0)))OR(vt0.c0)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN x'' THEN 0.872524237604254 ELSE vt0.c0 END)) AND ((((vt0.c0)>(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(v0.c0)))OR(t0.c0)))AND(v0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN x'' THEN 0.872524237604254 ELSE vt0.c0 END)) AND ((((vt0.c0)>(vt0.c0)))))  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE ((((((((((vt0.c0)OR(v0.c0)))OR(t0.c0)))AND(v0.c0)))OR(vt0.c0)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN x'' THEN 0.872524237604254 ELSE vt0.c0 END)) AND ((((vt0.c0)>(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(v0.c0)))OR(t0.c0)))AND(v0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN x'' THEN 0.872524237604254 ELSE vt0.c0 END)) AND ((((vt0.c0)>(vt0.c0)))))  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE ((((((((((vt0.c0)OR(v0.c0)))OR(t0.c0)))AND(v0.c0)))OR(vt0.c0)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN x'' THEN 0.872524237604254 ELSE vt0.c0 END)) AND ((((vt0.c0)>(vt0.c0)))))  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)==(vt0.c0)))))OR('Tꪥ䝐lt')));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)==(vt0.c0)))))OR('Tꪥ䝐lt'))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)==(vt0.c0)))))OR('Tꪥ䝐lt')));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)==(vt0.c0)))))OR('Tꪥ䝐lt'))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)==(vt0.c0)))))OR('Tꪥ䝐lt')));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((t0.c0))<=((v0.c0))), (((v0.c0))==((t0.c0))), ((v0.c0)%(v0.c0))))<>(((+ (t0.c0)), HEX(v0.c0), v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0))<=((v0.c0))), (((v0.c0))=((t0.c0))), ((v0.c0)%(v0.c0))))!=(((+ (t0.c0)), HEX(v0.c0), v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((t0.c0))<=((v0.c0))), (((v0.c0))==((t0.c0))), ((v0.c0)%(v0.c0))))<>(((+ (t0.c0)), HEX(v0.c0), v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0))<=((v0.c0))), (((v0.c0))=((t0.c0))), ((v0.c0)%(v0.c0))))!=(((+ (t0.c0)), HEX(v0.c0), v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((t0.c0))<=((v0.c0))), (((v0.c0))==((t0.c0))), ((v0.c0)%(v0.c0))))<>(((+ (t0.c0)), HEX(v0.c0), v0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LOWER(x''));
SELECT SUM(count) FROM (SELECT ((LOWER(x'')) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LOWER(x''));
SELECT SUM(count) FROM (SELECT ((LOWER(x'')) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LOWER(x''));
SELECT * FROM t0, vt0 WHERE (((vt0.c0)>(t0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(t0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)>(t0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(t0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)>(t0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM t0, vt0, v0 WHERE ((((NOT (v0.c0)))>(((t0.c0) IS FALSE)))) ORDER BY (((v0.c0))=((t0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))>(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((v0.c0))==((t0.c0))) COLLATE BINARY);
SELECT * FROM t0, vt0, v0 WHERE ((((NOT (v0.c0)))>(((t0.c0) IS FALSE)))) ORDER BY (((v0.c0))=((t0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))>(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((v0.c0))==((t0.c0))) COLLATE BINARY);
SELECT * FROM t0, vt0, v0 WHERE ((((NOT (v0.c0)))>(((t0.c0) IS FALSE)))) ORDER BY (((v0.c0))=((t0.c0))) COLLATE BINARY;
SELECT * FROM v0 WHERE ((((NOT ('-1860299683')))+((v0.c0 IN (NULL, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT ('-1860299683')))+((v0.c0 IN (NULL, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT ('-1860299683')))+((v0.c0 IN (NULL, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT ('-1860299683')))+((v0.c0 IN (NULL, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT ('-1860299683')))+((v0.c0 IN (NULL, v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- (vt0.c0)) COLLATE BINARY) ORDER BY (- ('h1'));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (- ('h1')));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- (vt0.c0)) COLLATE BINARY) ORDER BY (- ('h1'));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (- ('h1')));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- (vt0.c0)) COLLATE BINARY) ORDER BY (- ('h1'));
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN '1912223871' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN '1912223871' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN '1912223871' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN '1912223871' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN '1912223871' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS FALSE));
SELECT ALL * FROM v0 NOT INDEXED NATURAL JOIN t0 WHERE (CAST(((t0.c0)+(t0.c0)) AS TEXT)) ORDER BY ((CAST(v0.c0 AS REAL))>=(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)+(t0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY ((CAST(v0.c0 AS REAL))>=(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM v0 NOT INDEXED NATURAL JOIN t0 WHERE (CAST(((t0.c0)+(t0.c0)) AS TEXT)) ORDER BY ((CAST(v0.c0 AS REAL))>=(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)+(t0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY ((CAST(v0.c0 AS REAL))>=(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM v0 NOT INDEXED NATURAL JOIN t0 WHERE (CAST(((t0.c0)+(t0.c0)) AS TEXT)) ORDER BY ((CAST(v0.c0 AS REAL))>=(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT COUNT(*) FROM v0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)!=(CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)<>(CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)!=(CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)<>(CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)!=(CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)) DESC;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN (vt0.c0)))||(v0.c0 COLLATE BINARY)) FULL OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) WHERE (CAST(((((v0.c0)AND(vt0.c0)))AND(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(vt0.c0)))AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN (vt0.c0)))||(v0.c0 COLLATE BINARY)) FULL OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN (vt0.c0)))||(v0.c0 COLLATE BINARY)) FULL OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) WHERE (CAST(((((v0.c0)AND(vt0.c0)))AND(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(vt0.c0)))AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN (vt0.c0)))||(v0.c0 COLLATE BINARY)) FULL OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(((v0.c0)+(t0.c0)) AS TEXT)) ORDER BY COALESCE(DISTINCT COALESCE(t0.c0, t0.c0), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (NULL IN ()) ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)+(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, v0 ORDER BY COALESCE(DISTINCT COALESCE(t0.c0, t0.c0), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (NULL IN ()) ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(((v0.c0)+(t0.c0)) AS TEXT)) ORDER BY COALESCE(DISTINCT COALESCE(t0.c0, t0.c0), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (NULL IN ()) ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)+(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, v0 ORDER BY COALESCE(DISTINCT COALESCE(t0.c0, t0.c0), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (NULL IN ()) ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(((v0.c0)+(t0.c0)) AS TEXT)) ORDER BY COALESCE(DISTINCT COALESCE(t0.c0, t0.c0), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (NULL IN ()) ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))<=((v0.c0 IN ())))) ORDER BY ((v0.c0)>(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))<=((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)>(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0) IS TRUE))));
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))<=((v0.c0 IN ())))) ORDER BY ((v0.c0)>(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))<=((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)>(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0) IS TRUE))));
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))<=((v0.c0 IN ())))) ORDER BY ((v0.c0)>(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0) IS TRUE)));
SELECT * FROM v0, vt0, t0 WHERE (((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0)))|(t0.c0 COLLATE BINARY)) WHERE (CASE v0.c0  WHEN load_extension(vt0.c0, vt0.c0) THEN 2115327722 ELSE (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0))) END) ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN load_extension(vt0.c0, vt0.c0) THEN 2115327722 ELSE (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0))) END) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0)))|(t0.c0 COLLATE BINARY)) ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0)))|(t0.c0 COLLATE BINARY)) WHERE (CASE v0.c0  WHEN load_extension(vt0.c0, vt0.c0) THEN 2115327722 ELSE (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0))) END) ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN load_extension(vt0.c0, vt0.c0) THEN 2115327722 ELSE (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0))) END) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0)))|(t0.c0 COLLATE BINARY)) ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(vt0.c0)))|(t0.c0 COLLATE BINARY)) WHERE (CASE v0.c0  WHEN load_extension(vt0.c0, vt0.c0) THEN 2115327722 ELSE (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0))) END) ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((('m')<(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((('m')<(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((('m')<(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((('m')<(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((('m')<(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS FIRST, (((((v0.c0)LIKE(v0.c0))))>((((x'a829dad2')>(v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST, (((((v0.c0)LIKE(v0.c0))))>((((x'a829dad2')>(v0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS FIRST, (((((v0.c0)LIKE(v0.c0))))>((((x'a829dad2')>(v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST, (((((v0.c0)LIKE(v0.c0))))>((((x'a829dad2')>(v0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS FIRST, (((((v0.c0)LIKE(v0.c0))))>((((x'a829dad2')>(v0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON ((t0.c0)>(t0.c0)) COLLATE BINARY WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON ((t0.c0)>(t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON ((t0.c0)>(t0.c0)) COLLATE BINARY WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON ((t0.c0)>(t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON ((t0.c0)>(t0.c0)) COLLATE BINARY WHERE (x'');
SELECT ALL * FROM t0, v0 FULL OUTER JOIN vt0 ON ((v0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)GLOB(v0.c0)))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON ((v0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)GLOB(v0.c0)))));
SELECT ALL * FROM t0, v0 FULL OUTER JOIN vt0 ON ((v0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)GLOB(v0.c0)))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON ((v0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)GLOB(v0.c0)))));
SELECT ALL * FROM t0, v0 FULL OUTER JOIN vt0 ON ((v0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)GLOB(v0.c0)))) WHERE ((vt0.c0 IN ()));
SELECT * FROM vt0 WHERE (NULL) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM vt0 WHERE (NULL) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM vt0 WHERE (NULL) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE COLLATE NOCASE;
SELECT * FROM v0 CROSS JOIN t0 ON CAST(((x'')+(t0.c0)) AS TEXT) WHERE ('786542422') ORDER BY (((((v0.c0))>=((t0.c0))))AND(v0.c0));
SELECT SUM(count) FROM (SELECT (('786542422') IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(((x'')+(t0.c0)) AS TEXT) ORDER BY (((((v0.c0))>=((t0.c0))))AND(v0.c0)));
SELECT * FROM v0 CROSS JOIN t0 ON CAST(((x'')+(t0.c0)) AS TEXT) WHERE ('786542422') ORDER BY (((((v0.c0))>=((t0.c0))))AND(v0.c0));
SELECT SUM(count) FROM (SELECT (('786542422') IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(((x'')+(t0.c0)) AS TEXT) ORDER BY (((((v0.c0))>=((t0.c0))))AND(v0.c0)));
SELECT * FROM v0 CROSS JOIN t0 ON CAST(((x'')+(t0.c0)) AS TEXT) WHERE ('786542422') ORDER BY (((((v0.c0))>=((t0.c0))))AND(v0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST('1328239699' AS TEXT)) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1328239699' AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST('1328239699' AS TEXT)) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1328239699' AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST('1328239699' AS TEXT)) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((('912304646') IS FALSE))>=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('912304646') IS FALSE))>=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((('912304646') IS FALSE))>=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('912304646') IS FALSE))>=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((('912304646') IS FALSE))>=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(((t0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT ALL * FROM v0, t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (UPPER(DISTINCT t0.c0)) AND (((t0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (UPPER(DISTINCT t0.c0)) AND (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (UPPER(DISTINCT t0.c0)) AND (((t0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (UPPER(DISTINCT t0.c0)) AND (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (UPPER(DISTINCT t0.c0)) AND (((t0.c0)>(t0.c0)))));
SELECT ALL * FROM v0, t0, vt0 WHERE ((((NOT (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((NOT (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((NOT (vt0.c0))) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (LOWER(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -940918257 ELSE vt0.c0 END)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((((((((vt0.c0)AND(x'')))AND(v0.c0)))OR('p1')))AND(vt0.c0))) AND (json_extract(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -940918257 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((((((((vt0.c0)AND(x'')))AND(v0.c0)))OR('p1')))AND(vt0.c0))) AND (json_extract(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (LOWER(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -940918257 ELSE vt0.c0 END)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((((((((vt0.c0)AND(x'')))AND(v0.c0)))OR('p1')))AND(vt0.c0))) AND (json_extract(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -940918257 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((((((((vt0.c0)AND(x'')))AND(v0.c0)))OR('p1')))AND(vt0.c0))) AND (json_extract(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (LOWER(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -940918257 ELSE vt0.c0 END)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((((((((vt0.c0)AND(x'')))AND(v0.c0)))OR('p1')))AND(vt0.c0))) AND (json_extract(vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM((((t0.c0))<((NULL))), ((t0.c0)LIKE(t0.c0)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND ((NOT ('-1582495298')))) DESC  NULLS FIRST, ((((t0.c0)>>(t0.c0)))+((t0.c0 IN (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((((t0.c0))<((NULL))), ((t0.c0)LIKE(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND ((NOT ('-1582495298')))) DESC  NULLS FIRST, ((((t0.c0)>>(t0.c0)))+((t0.c0 IN (t0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM((((t0.c0))<((NULL))), ((t0.c0)LIKE(t0.c0)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND ((NOT ('-1582495298')))) DESC  NULLS FIRST, ((((t0.c0)>>(t0.c0)))+((t0.c0 IN (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((((t0.c0))<((NULL))), ((t0.c0)LIKE(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND ((NOT ('-1582495298')))) DESC  NULLS FIRST, ((((t0.c0)>>(t0.c0)))+((t0.c0 IN (t0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM((((t0.c0))<((NULL))), ((t0.c0)LIKE(t0.c0)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND ((NOT ('-1582495298')))) DESC  NULLS FIRST, ((((t0.c0)>>(t0.c0)))+((t0.c0 IN (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (CAST((((v0.c0, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS REAL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST((((v0.c0, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS REAL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST((((v0.c0, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS REAL));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (vt0.c0, vt0.c0)))) AND ((((t0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (((t0.c0 IN (vt0.c0, vt0.c0)))) AND ((((t0.c0) NOTNULL))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (vt0.c0, vt0.c0)))) AND ((((t0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (((t0.c0 IN (vt0.c0, vt0.c0)))) AND ((((t0.c0) NOTNULL))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (vt0.c0, vt0.c0)))) AND ((((t0.c0) NOTNULL)))));
SELECT COUNT(*) FROM t0 WHERE (((CAST(0.24657261368101324 AS BLOB))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.24657261368101324 AS BLOB))OR(t0.c0))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(0.24657261368101324 AS BLOB))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.24657261368101324 AS BLOB))OR(t0.c0))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(0.24657261368101324 AS BLOB))OR(t0.c0)));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END)<>(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END)!=(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END)<>(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END)!=(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END)<>(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN x'ad17' THEN vt0.c0 ELSE vt0.c0 END)IS(((0.4713471042686779)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN x'ad17' THEN vt0.c0 ELSE vt0.c0 END)IS(((0.4713471042686779)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN x'ad17' THEN vt0.c0 ELSE vt0.c0 END)IS(((0.4713471042686779)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN x'ad17' THEN vt0.c0 ELSE vt0.c0 END)IS(((0.4713471042686779)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN x'ad17' THEN vt0.c0 ELSE vt0.c0 END)IS(((0.4713471042686779)<=(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((UNLIKELY(v0.c0))LIKE((((v0.c0))<=((vt0.c0))))) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS BLOB) WHERE ((((+ (v0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((((t0.c0)>(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((UNLIKELY(v0.c0))LIKE((((v0.c0))<=((vt0.c0))))) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS BLOB) ORDER BY ((((((t0.c0)>(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END)) DESC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((UNLIKELY(v0.c0))LIKE((((v0.c0))<=((vt0.c0))))) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS BLOB) WHERE ((((+ (v0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((((t0.c0)>(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((UNLIKELY(v0.c0))LIKE((((v0.c0))<=((vt0.c0))))) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS BLOB) ORDER BY ((((((t0.c0)>(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END)) DESC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((UNLIKELY(v0.c0))LIKE((((v0.c0))<=((vt0.c0))))) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS BLOB) WHERE ((((+ (v0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((((t0.c0)>(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END)) DESC;
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY (((NOT (v0.c0)))<<(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))<<(v0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY (((NOT (v0.c0)))<<(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))<<(v0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY (((NOT (v0.c0)))<<(v0.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (t0.c0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) IS TRUE))<(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE))<(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) IS TRUE))<(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE))<(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) IS TRUE))<(CAST(vt0.c0 AS REAL))));
SELECT * FROM v0, t0, vt0 WHERE ((COALESCE(DISTINCT v0.c0, t0.c0, v0.c0, t0.c0) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((json_type(vt0.c0))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'909a')))OR(vt0.c0)))))  NULLS FIRST, ((((NULL)||(vt0.c0)))<<(((vt0.c0)||(vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>>(v0.c0)))IS NOT(((v0.c0)|('1276876911'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((COALESCE(DISTINCT v0.c0, t0.c0, v0.c0, t0.c0) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((json_type(vt0.c0))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'909a')))OR(vt0.c0)))))  NULLS FIRST, ((((NULL)||(vt0.c0)))<<(((vt0.c0)||(vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>>(v0.c0)))IS NOT(((v0.c0)|('1276876911'))))  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE ((COALESCE(DISTINCT v0.c0, t0.c0, v0.c0, t0.c0) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((json_type(vt0.c0))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'909a')))OR(vt0.c0)))))  NULLS FIRST, ((((NULL)||(vt0.c0)))<<(((vt0.c0)||(vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>>(v0.c0)))IS NOT(((v0.c0)|('1276876911'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((COALESCE(DISTINCT v0.c0, t0.c0, v0.c0, t0.c0) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((json_type(vt0.c0))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'909a')))OR(vt0.c0)))))  NULLS FIRST, ((((NULL)||(vt0.c0)))<<(((vt0.c0)||(vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>>(v0.c0)))IS NOT(((v0.c0)|('1276876911'))))  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE ((COALESCE(DISTINCT v0.c0, t0.c0, v0.c0, t0.c0) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((json_type(vt0.c0))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'909a')))OR(vt0.c0)))))  NULLS FIRST, ((((NULL)||(vt0.c0)))<<(((vt0.c0)||(vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>>(v0.c0)))IS NOT(((v0.c0)|('1276876911'))))  NULLS FIRST;
SELECT * FROM t0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((v0.c0 IN ()));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN 0Xffffffffe158614b THEN ((t0.c0) NOT NULL) WHEN ((vt0.c0)|(v0.c0)) THEN ABS(DISTINCT t0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN t0.c0 ELSE vt0.c0 END END WHERE (NULL) ORDER BY (((vt0.c0 IN ()))<=((t0.c0 IN (t0.c0)))), CASE WHEN v0.c0 THEN (NOT (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c0 END WHEN CASE 0.005778991456231286  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN (t0.c0 IN (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN 0xffffffffe158614b THEN ((t0.c0) NOT NULL) WHEN ((vt0.c0)|(v0.c0)) THEN ABS(DISTINCT t0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN t0.c0 ELSE vt0.c0 END END ORDER BY (((vt0.c0 IN ()))<=((t0.c0 IN (t0.c0)))), CASE WHEN v0.c0 THEN (NOT (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c0 END WHEN CASE 0.005778991456231286  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN (t0.c0 IN (vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN 0Xffffffffe158614b THEN ((t0.c0) NOT NULL) WHEN ((vt0.c0)|(v0.c0)) THEN ABS(DISTINCT t0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN t0.c0 ELSE vt0.c0 END END WHERE (NULL) ORDER BY (((vt0.c0 IN ()))<=((t0.c0 IN (t0.c0)))), CASE WHEN v0.c0 THEN (NOT (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c0 END WHEN CASE 0.005778991456231286  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN (t0.c0 IN (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN 0xffffffffe158614b THEN ((t0.c0) NOT NULL) WHEN ((vt0.c0)|(v0.c0)) THEN ABS(DISTINCT t0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN t0.c0 ELSE vt0.c0 END END ORDER BY (((vt0.c0 IN ()))<=((t0.c0 IN (t0.c0)))), CASE WHEN v0.c0 THEN (NOT (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c0 END WHEN CASE 0.005778991456231286  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN (t0.c0 IN (vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN 0Xffffffffe158614b THEN ((t0.c0) NOT NULL) WHEN ((vt0.c0)|(v0.c0)) THEN ABS(DISTINCT t0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN t0.c0 ELSE vt0.c0 END END WHERE (NULL) ORDER BY (((vt0.c0 IN ()))<=((t0.c0 IN (t0.c0)))), CASE WHEN v0.c0 THEN (NOT (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c0 END WHEN CASE 0.005778991456231286  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN (t0.c0 IN (vt0.c0)) END ASC;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ()))IS(x'')) FULL OUTER JOIN t0 ON CASE WHEN TRIM(t0.c0) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (+ (v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('')) ELSE v0.c0 COLLATE RTRIM END WHERE (((t0.c0) NOT BETWEEN (v0.c0) AND ('_')) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((((v0.c0))<>((vt0.c0))))IS NOT(TRIM(v0.c0))) ASC, ((((((v0.c0)OR(t0.c0)))AND(vt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (v0.c0) AND ('_')) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ()))IS(x'')) FULL OUTER JOIN t0 ON CASE WHEN TRIM(t0.c0) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (+ (v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('')) ELSE v0.c0 COLLATE RTRIM END ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((((v0.c0))!=((vt0.c0))))IS NOT(TRIM(v0.c0))) ASC, ((((((v0.c0)OR(t0.c0)))AND(vt0.c0))) ISNULL) ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ()))IS(x'')) FULL OUTER JOIN t0 ON CASE WHEN TRIM(t0.c0) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (+ (v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('')) ELSE v0.c0 COLLATE RTRIM END WHERE (((t0.c0) NOT BETWEEN (v0.c0) AND ('_')) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((((v0.c0))<>((vt0.c0))))IS NOT(TRIM(v0.c0))) ASC, ((((((v0.c0)OR(t0.c0)))AND(vt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (v0.c0) AND ('_')) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ()))IS(x'')) FULL OUTER JOIN t0 ON CASE WHEN TRIM(t0.c0) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (+ (v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('')) ELSE v0.c0 COLLATE RTRIM END ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((((v0.c0))!=((vt0.c0))))IS NOT(TRIM(v0.c0))) ASC, ((((((v0.c0)OR(t0.c0)))AND(vt0.c0))) ISNULL) ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ()))IS(x'')) FULL OUTER JOIN t0 ON CASE WHEN TRIM(t0.c0) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (+ (v0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('')) ELSE v0.c0 COLLATE RTRIM END WHERE (((t0.c0) NOT BETWEEN (v0.c0) AND ('_')) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((((v0.c0))<>((vt0.c0))))IS NOT(TRIM(v0.c0))) ASC, ((((((v0.c0)OR(t0.c0)))AND(vt0.c0))) ISNULL) ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (0.24657261368101324 IN ((~ (t0.c0)))) CROSS JOIN vt0 ON TRIM(NULL) WHERE (CAST(STRFTIME(vt0.c0, 0.7932457698983115, t0.c0) AS NUMERIC)) ORDER BY vt0.c0 COLLATE NOCASE, (ABS(vt0.c0) IN ()), CASE WHEN (t0.c0 IN ()) THEN vt0.c0 ELSE v0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(vt0.c0, 0.7932457698983115, t0.c0) AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (0.24657261368101324 IN ((~ (t0.c0)))) CROSS JOIN vt0 ON TRIM(NULL) ORDER BY vt0.c0 COLLATE NOCASE, (ABS(vt0.c0) IN ()), CASE WHEN (t0.c0 IN ()) THEN vt0.c0 ELSE v0.c0 END DESC);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (0.24657261368101324 IN ((~ (t0.c0)))) CROSS JOIN vt0 ON TRIM(NULL) WHERE (CAST(STRFTIME(vt0.c0, 0.7932457698983115, t0.c0) AS NUMERIC)) ORDER BY vt0.c0 COLLATE NOCASE, (ABS(vt0.c0) IN ()), CASE WHEN (t0.c0 IN ()) THEN vt0.c0 ELSE v0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(vt0.c0, 0.7932457698983115, t0.c0) AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (0.24657261368101324 IN ((~ (t0.c0)))) CROSS JOIN vt0 ON TRIM(NULL) ORDER BY vt0.c0 COLLATE NOCASE, (ABS(vt0.c0) IN ()), CASE WHEN (t0.c0 IN ()) THEN vt0.c0 ELSE v0.c0 END DESC);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (0.24657261368101324 IN ((~ (t0.c0)))) CROSS JOIN vt0 ON TRIM(NULL) WHERE (CAST(STRFTIME(vt0.c0, 0.7932457698983115, t0.c0) AS NUMERIC)) ORDER BY vt0.c0 COLLATE NOCASE, (ABS(vt0.c0) IN ()), CASE WHEN (t0.c0 IN ()) THEN vt0.c0 ELSE v0.c0 END DESC;
SELECT COUNT(*) FROM t0 WHERE ((+ ((((t0.c0))<((t0.c0)))))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c0))<((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ ((((t0.c0))<((t0.c0)))))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c0))<((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ ((((t0.c0))<((t0.c0)))))) ORDER BY t0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0))<=((vt0.c0)))))<=((TOTAL_CHANGES())))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0))<=((vt0.c0)))))<=((TOTAL_CHANGES())))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0))<=((vt0.c0)))))<=((TOTAL_CHANGES())))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0))<=((vt0.c0)))))<=((TOTAL_CHANGES())))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0))<=((vt0.c0)))))<=((TOTAL_CHANGES())))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM FULL OUTER JOIN t0 ON (((((((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, t0.c0))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR('912304646' COLLATE BINARY)) WHERE (vt0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.1539951024569396))))OR(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM FULL OUTER JOIN t0 ON (((((((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, t0.c0))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR('912304646' COLLATE BINARY)) ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.1539951024569396))))OR(v0.c0)) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM FULL OUTER JOIN t0 ON (((((((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, t0.c0))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR('912304646' COLLATE BINARY)) WHERE (vt0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.1539951024569396))))OR(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM FULL OUTER JOIN t0 ON (((((((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, t0.c0))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR('912304646' COLLATE BINARY)) ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.1539951024569396))))OR(v0.c0)) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM FULL OUTER JOIN t0 ON (((((((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, t0.c0))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR('912304646' COLLATE BINARY)) WHERE (vt0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.1539951024569396))))OR(v0.c0)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), CASE WHEN 'Y{' THEN vt0.c0 END)) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), CASE WHEN 'Y{' THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), CASE WHEN 'Y{' THEN vt0.c0 END)) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), CASE WHEN 'Y{' THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), CASE WHEN 'Y{' THEN vt0.c0 END)) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (+ (((t0.c0)<<(t0.c0)))) WHERE (json_array_length(((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c0) IS TRUE))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (+ (((t0.c0)<<(t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (+ (((t0.c0)<<(t0.c0)))) WHERE (json_array_length(((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c0) IS TRUE))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (+ (((t0.c0)<<(t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (+ (((t0.c0)<<(t0.c0)))) WHERE (json_array_length(((t0.c0) IS TRUE)));
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0)>>(t0.c0))))<>((((t0.c0)AND(vt0.c0)))))) ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>>(t0.c0))))!=((((t0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0)>>(t0.c0))))<>((((t0.c0)AND(vt0.c0)))))) ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>>(t0.c0))))!=((((t0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0)>>(t0.c0))))<>((((t0.c0)AND(vt0.c0)))))) ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c0)%(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)%(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)%(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)%(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)%(v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) ISNULL)) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(v0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(v0.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) ISNULL)) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(v0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(v0.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) ISNULL)) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(v0.c0 AS BLOB))) DESC;
SELECT * FROM t0 WHERE (HEX(DISTINCT ((t0.c0) ISNULL))) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'LM' WHEN 0.273472823443492 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((t0.c0) ISNULL))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'LM' WHEN 0.273472823443492 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)))))  NULLS FIRST);
SELECT * FROM t0 WHERE (HEX(DISTINCT ((t0.c0) ISNULL))) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'LM' WHEN 0.273472823443492 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((t0.c0) ISNULL))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'LM' WHEN 0.273472823443492 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)))))  NULLS FIRST);
SELECT * FROM t0 WHERE (HEX(DISTINCT ((t0.c0) ISNULL))) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'LM' WHEN 0.273472823443492 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0))!=((vt0.c0)))))>=(((((vt0.c0))>((vt0.c0))), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 'O')));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0))<>((vt0.c0)))))>=(((((vt0.c0))>((vt0.c0))), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 'O'))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0))!=((vt0.c0)))))>=(((((vt0.c0))>((vt0.c0))), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 'O')));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0))<>((vt0.c0)))))>=(((((vt0.c0))>((vt0.c0))), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 'O'))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0))!=((vt0.c0)))))>=(((((vt0.c0))>((vt0.c0))), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 'O')));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD((((t0.c0))<((vt0.c0))), 0.5006627372374262)) ORDER BY ((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)AND(0.15193759690039443)))))OR(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((t0.c0))<((vt0.c0))), 0.5006627372374262)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)AND(0.15193759690039443)))))OR(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD((((t0.c0))<((vt0.c0))), 0.5006627372374262)) ORDER BY ((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)AND(0.15193759690039443)))))OR(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((t0.c0))<((vt0.c0))), 0.5006627372374262)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)AND(0.15193759690039443)))))OR(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD((((t0.c0))<((vt0.c0))), 0.5006627372374262)) ORDER BY ((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)AND(0.15193759690039443)))))OR(vt0.c0)) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (json_quote(((v0.c0) BETWEEN (1165322451) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((v0.c0) BETWEEN (1165322451) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_quote(((v0.c0) BETWEEN (1165322451) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((v0.c0) BETWEEN (1165322451) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_quote(((v0.c0) BETWEEN (1165322451) AND (v0.c0))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0) ORDER BY (~ ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (~ ((v0.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0) ORDER BY (~ ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (~ ((v0.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0) ORDER BY (~ ((v0.c0 IN ())));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON NULLIF((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), 0Xfffffffff1aca760) RIGHT OUTER JOIN vt0 ON ((TRIM(vt0.c0, vt0.c0))<<(x'')) WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(v0.c0)))OR(((((x'a5f4')OR(vt0.c0)))OR(t0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)OR(t0.c0)))AND(v0.c0)))OR(((((x'a5f4')OR(vt0.c0)))OR(t0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN t0 ON NULLIF((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), 0Xfffffffff1aca760) RIGHT OUTER JOIN vt0 ON ((TRIM(vt0.c0, vt0.c0))<<(x'')));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON NULLIF((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), 0Xfffffffff1aca760) RIGHT OUTER JOIN vt0 ON ((TRIM(vt0.c0, vt0.c0))<<(x'')) WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(v0.c0)))OR(((((x'a5f4')OR(vt0.c0)))OR(t0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)OR(t0.c0)))AND(v0.c0)))OR(((((x'a5f4')OR(vt0.c0)))OR(t0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN t0 ON NULLIF((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), 0Xfffffffff1aca760) RIGHT OUTER JOIN vt0 ON ((TRIM(vt0.c0, vt0.c0))<<(x'')));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON NULLIF((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))), 0Xfffffffff1aca760) RIGHT OUTER JOIN vt0 ON ((TRIM(vt0.c0, vt0.c0))<<(x'')) WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(v0.c0)))OR(((((x'a5f4')OR(vt0.c0)))OR(t0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ()))!=(0.44979237451570975)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<>(0.44979237451570975))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ()))!=(0.44979237451570975)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<>(0.44979237451570975))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ()))!=(0.44979237451570975)));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON LIKELIHOOD(((v0.c0)<(0.3134888691504929)), 0.6072723878481235) WHERE (((COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0 IN (vt0.c0))) AND (((vt0.c0)*(vt0.c0))))) ORDER BY ((((0.5603549696686134)OR(IFNULL(v0.c0, v0.c0))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0 IN (vt0.c0))) AND (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON LIKELIHOOD(((v0.c0)<(0.3134888691504929)), 0.6072723878481235) ORDER BY ((((0.5603549696686134)OR(IFNULL(v0.c0, v0.c0))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON LIKELIHOOD(((v0.c0)<(0.3134888691504929)), 0.6072723878481235) WHERE (((COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0 IN (vt0.c0))) AND (((vt0.c0)*(vt0.c0))))) ORDER BY ((((0.5603549696686134)OR(IFNULL(v0.c0, v0.c0))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0 IN (vt0.c0))) AND (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON LIKELIHOOD(((v0.c0)<(0.3134888691504929)), 0.6072723878481235) ORDER BY ((((0.5603549696686134)OR(IFNULL(v0.c0, v0.c0))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON LIKELIHOOD(((v0.c0)<(0.3134888691504929)), 0.6072723878481235) WHERE (((COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0 IN (vt0.c0))) AND (((vt0.c0)*(vt0.c0))))) ORDER BY ((((0.5603549696686134)OR(IFNULL(v0.c0, v0.c0))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (vt0.c0, t0.c0))) ISNULL)) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN ((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (((vt0.c0, vt0.c0, 0.016590605409837922))==((t0.c0, t0.c0, vt0.c0))) ELSE 0.14061309772023012 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN ((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (((vt0.c0, vt0.c0, 0.016590605409837922))==((t0.c0, t0.c0, vt0.c0))) ELSE 0.14061309772023012 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (vt0.c0, t0.c0))) ISNULL)) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN ((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (((vt0.c0, vt0.c0, 0.016590605409837922))==((t0.c0, t0.c0, vt0.c0))) ELSE 0.14061309772023012 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN ((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (((vt0.c0, vt0.c0, 0.016590605409837922))==((t0.c0, t0.c0, vt0.c0))) ELSE 0.14061309772023012 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (vt0.c0, t0.c0))) ISNULL)) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN ((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (((vt0.c0, vt0.c0, 0.016590605409837922))==((t0.c0, t0.c0, vt0.c0))) ELSE 0.14061309772023012 END DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON (~ ((vt0.c0 IN ()))) WHERE (TYPEOF(UPPER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(UPPER(DISTINCT v0.c0))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON (~ ((vt0.c0 IN ()))));
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON (~ ((vt0.c0 IN ()))) WHERE (TYPEOF(UPPER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(UPPER(DISTINCT v0.c0))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON (~ ((vt0.c0 IN ()))));
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON (~ ((vt0.c0 IN ()))) WHERE (TYPEOF(UPPER(DISTINCT v0.c0)));
SELECT * FROM v0 WHERE (0.35564724108297474) ORDER BY ((v0.c0) NOT NULL) DESC, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.35564724108297474) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT NULL) DESC, v0.c0 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (0.35564724108297474) ORDER BY ((v0.c0) NOT NULL) DESC, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.35564724108297474) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT NULL) DESC, v0.c0 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (0.35564724108297474) ORDER BY ((v0.c0) NOT NULL) DESC, v0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)*(UPPER(t0.c0))) CROSS JOIN t0 ON v0.c0 WHERE (vt0.c0) ORDER BY ((((t0.c0 COLLATE NOCASE)AND(((0xffffffffa8576f0a)>=(t0.c0)))))OR(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)*(UPPER(t0.c0))) CROSS JOIN t0 ON v0.c0 ORDER BY ((((t0.c0 COLLATE NOCASE)AND(((0xffffffffa8576f0a)>=(t0.c0)))))OR(v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)*(UPPER(t0.c0))) CROSS JOIN t0 ON v0.c0 WHERE (vt0.c0) ORDER BY ((((t0.c0 COLLATE NOCASE)AND(((0xffffffffa8576f0a)>=(t0.c0)))))OR(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)*(UPPER(t0.c0))) CROSS JOIN t0 ON v0.c0 ORDER BY ((((t0.c0 COLLATE NOCASE)AND(((0xffffffffa8576f0a)>=(t0.c0)))))OR(v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('1887967837')))OR(vt0.c0))) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('1887967837')))OR(vt0.c0))) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('1887967837')))OR(vt0.c0))) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('1887967837')))OR(vt0.c0))) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('1887967837')))OR(vt0.c0))) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ (vt0.c0));
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0)<=(v0.c0)))-((- (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((vt0.c0)<=(v0.c0)))-((- (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0)<=(v0.c0)))-((- (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((vt0.c0)<=(v0.c0)))-((- (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0)<=(v0.c0)))-((- (v0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN ('L9') AND (v0.c0)))OR((((v0.c0, v0.c0, vt0.c0))<>(('858336622', v0.c0, v0.c0))))))AND(vt0.c0))) ORDER BY CASE vt0.c0  WHEN MAX(vt0.c0, vt0.c0) THEN ((v0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT BETWEEN ('L9') AND (v0.c0)))OR((((v0.c0, v0.c0, vt0.c0))<>(('858336622', v0.c0, v0.c0))))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE vt0.c0  WHEN MAX(vt0.c0, vt0.c0) THEN ((v0.c0) IS TRUE) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN ('L9') AND (v0.c0)))OR((((v0.c0, v0.c0, vt0.c0))<>(('858336622', v0.c0, v0.c0))))))AND(vt0.c0))) ORDER BY CASE vt0.c0  WHEN MAX(vt0.c0, vt0.c0) THEN ((v0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT BETWEEN ('L9') AND (v0.c0)))OR((((v0.c0, v0.c0, vt0.c0))<>(('858336622', v0.c0, v0.c0))))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE vt0.c0  WHEN MAX(vt0.c0, vt0.c0) THEN ((v0.c0) IS TRUE) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN ('L9') AND (v0.c0)))OR((((v0.c0, v0.c0, vt0.c0))<>(('858336622', v0.c0, v0.c0))))))AND(vt0.c0))) ORDER BY CASE vt0.c0  WHEN MAX(vt0.c0, vt0.c0) THEN ((v0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (CAST('-1273313311' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1273313311' AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST('-1273313311' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1273313311' AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST('-1273313311' AS INTEGER));
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.5529153994126434) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((0.5529153994126434) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.5529153994126434) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((0.5529153994126434) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.5529153994126434) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((x'')*(vt0.c0))))) ORDER BY ((((vt0.c0)<<(v0.c0)))GLOB(CASE t0.c0  WHEN v0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'')*(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((vt0.c0)<<(v0.c0)))GLOB(CASE t0.c0  WHEN v0.c0 THEN t0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((x'')*(vt0.c0))))) ORDER BY ((((vt0.c0)<<(v0.c0)))GLOB(CASE t0.c0  WHEN v0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'')*(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((vt0.c0)<<(v0.c0)))GLOB(CASE t0.c0  WHEN v0.c0 THEN t0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((x'')*(vt0.c0))))) ORDER BY ((((vt0.c0)<<(v0.c0)))GLOB(CASE t0.c0  WHEN v0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)%(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)%(NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)%(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)%(NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)%(NULL)))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ('-1213252658') ORDER BY ((t0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1213252658') IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((t0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ('-1213252658') ORDER BY ((t0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1213252658') IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((t0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ('-1213252658') ORDER BY ((t0.c0)>>(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) IS TRUE));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON TIME(((t0.c0) ISNULL), vt0.c0, (v0.c0 IN ())) INNER JOIN v0 ON ((v0.c0)+(vt0.c0)) COLLATE NOCASE WHERE (((CAST('-1356602437' AS NUMERIC)) BETWEEN (CAST(x'ffb4' AS TEXT)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST('-1356602437' AS NUMERIC)) BETWEEN (CAST(x'ffb4' AS TEXT)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON TIME(((t0.c0) ISNULL), vt0.c0, (v0.c0 IN ())) INNER JOIN v0 ON ((v0.c0)+(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON TIME(((t0.c0) ISNULL), vt0.c0, (v0.c0 IN ())) INNER JOIN v0 ON ((v0.c0)+(vt0.c0)) COLLATE NOCASE WHERE (((CAST('-1356602437' AS NUMERIC)) BETWEEN (CAST(x'ffb4' AS TEXT)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST('-1356602437' AS NUMERIC)) BETWEEN (CAST(x'ffb4' AS TEXT)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON TIME(((t0.c0) ISNULL), vt0.c0, (v0.c0 IN ())) INNER JOIN v0 ON ((v0.c0)+(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON TIME(((t0.c0) ISNULL), vt0.c0, (v0.c0 IN ())) INNER JOIN v0 ON ((v0.c0)+(vt0.c0)) COLLATE NOCASE WHERE (((CAST('-1356602437' AS NUMERIC)) BETWEEN (CAST(x'ffb4' AS TEXT)) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'')IS(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'')IS(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'')IS(v0.c0)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ('' IN ()) WHERE ((((((t0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (x'4526559f' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (x'4526559f' COLLATE NOCASE))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ('' IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ('' IN ()) WHERE ((((((t0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (x'4526559f' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (x'4526559f' COLLATE NOCASE))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ('' IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ('' IN ()) WHERE ((((((t0.c0, v0.c0, t0.c0))>=((v0.c0, v0.c0, t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (x'4526559f' COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN '202732931' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=(x''))) ORDER BY HEX(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN '202732931' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=(x''))) IS TRUE)  as count FROM v0 ORDER BY HEX(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END) ASC  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN '202732931' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=(x''))) ORDER BY HEX(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN '202732931' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=(x''))) IS TRUE)  as count FROM v0 ORDER BY HEX(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END) ASC  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN '202732931' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=(x''))) ORDER BY HEX(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((0X359a46d)>((((0.2855105241984275, v0.c0, v0.c0, v0.c0, '50845127')) BETWEEN ((v0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)))))) ORDER BY ((((((vt0.c0) IS TRUE))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0x359a46d)>((((0.2855105241984275, v0.c0, v0.c0, v0.c0, '50845127')) BETWEEN ((v0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0) IS TRUE))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((0X359a46d)>((((0.2855105241984275, v0.c0, v0.c0, v0.c0, '50845127')) BETWEEN ((v0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)))))) ORDER BY ((((((vt0.c0) IS TRUE))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0x359a46d)>((((0.2855105241984275, v0.c0, v0.c0, v0.c0, '50845127')) BETWEEN ((v0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0) IS TRUE))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((0X359a46d)>((((0.2855105241984275, v0.c0, v0.c0, v0.c0, '50845127')) BETWEEN ((v0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)))))) ORDER BY ((((((vt0.c0) IS TRUE))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(NULL)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((json_array_length(t0.c0, t0.c0)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((json_array_length(t0.c0, t0.c0)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((json_array_length(t0.c0, t0.c0)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((json_array_length(t0.c0, t0.c0)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((json_array_length(t0.c0, t0.c0)) NOTNULL) DESC;
SELECT * FROM t0, v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN -1414390498 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)!=(v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN -1414390498 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<>(v0.c0)) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN -1414390498 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)!=(v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN -1414390498 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<>(v0.c0)) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN -1414390498 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)!=(v0.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (v0.c0) ORDER BY (((NOT (t0.c0))) NOT NULL) ASC, (NOT (((vt0.c0) IS TRUE)))  NULLS LAST, UNLIKELY(DISTINCT CAST(t0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((NOT (t0.c0))) NOT NULL) ASC, (NOT (((vt0.c0) IS TRUE)))  NULLS LAST, UNLIKELY(DISTINCT CAST(t0.c0 AS REAL)));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (v0.c0) ORDER BY (((NOT (t0.c0))) NOT NULL) ASC, (NOT (((vt0.c0) IS TRUE)))  NULLS LAST, UNLIKELY(DISTINCT CAST(t0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((NOT (t0.c0))) NOT NULL) ASC, (NOT (((vt0.c0) IS TRUE)))  NULLS LAST, UNLIKELY(DISTINCT CAST(t0.c0 AS REAL)));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (v0.c0) ORDER BY (((NOT (t0.c0))) NOT NULL) ASC, (NOT (((vt0.c0) IS TRUE)))  NULLS LAST, UNLIKELY(DISTINCT CAST(t0.c0 AS REAL));
SELECT * FROM t0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(vt0.c0 AS REAL))) WHERE ((((vt0.c0 IN (v0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((((x'7ee3')AND(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (v0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((((x'7ee3')AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(vt0.c0 AS REAL))));
SELECT * FROM t0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(vt0.c0 AS REAL))) WHERE ((((vt0.c0 IN (v0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((((x'7ee3')AND(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (v0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((((x'7ee3')AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(vt0.c0 AS REAL))));
SELECT * FROM t0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(vt0.c0 AS REAL))) WHERE ((((vt0.c0 IN (v0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((((x'7ee3')AND(v0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM v0, vt0 NOT INDEXED, t0 WHERE (((((((((vt0.c0)OR(((v0.c0)<<(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))AND((+ (0.3722224922789833)))))AND(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(((v0.c0)<<(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))AND((+ (0.3722224922789833)))))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0 NOT INDEXED, t0 WHERE (((((((((vt0.c0)OR(((v0.c0)<<(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))AND((+ (0.3722224922789833)))))AND(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(((v0.c0)<<(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))AND((+ (0.3722224922789833)))))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0 NOT INDEXED, t0 WHERE (((((((((vt0.c0)OR(((v0.c0)<<(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))AND((+ (0.3722224922789833)))))AND(((v0.c0) IS FALSE))));
SELECT COUNT(*) FROM v0 WHERE ((('489465376') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('489465376') IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('489465376') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('489465376') IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('489465376') IS TRUE));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (((-2.35014774E8) ISNULL)) AND (((v0.c0)>>(t0.c0))))) ORDER BY INSTR((t0.c0 IN ()), ((v0.c0) NOT NULL)) DESC, ((0.18883802018756157)||(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT BETWEEN (((-2.35014774E8) ISNULL)) AND (((v0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY INSTR((t0.c0 IN ()), ((v0.c0) NOT NULL)) DESC, ((0.18883802018756157)||(((v0.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (((-2.35014774E8) ISNULL)) AND (((v0.c0)>>(t0.c0))))) ORDER BY INSTR((t0.c0 IN ()), ((v0.c0) NOT NULL)) DESC, ((0.18883802018756157)||(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT BETWEEN (((-2.35014774E8) ISNULL)) AND (((v0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY INSTR((t0.c0 IN ()), ((v0.c0) NOT NULL)) DESC, ((0.18883802018756157)||(((v0.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (((-2.35014774E8) ISNULL)) AND (((v0.c0)>>(t0.c0))))) ORDER BY INSTR((t0.c0 IN ()), ((v0.c0) NOT NULL)) DESC, ((0.18883802018756157)||(((v0.c0) IS FALSE))) ASC;
SELECT ALL * FROM vt0 WHERE (('0.5603549696686134' IN ()));
SELECT SUM(count) FROM (SELECT ((('0.5603549696686134' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('0.5603549696686134' IN ()));
SELECT SUM(count) FROM (SELECT ((('0.5603549696686134' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('0.5603549696686134' IN ()));
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((MIN(t0.c0, v0.c0), (- (t0.c0)), (- (v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) IS TRUE), ((((((((v0.c0)AND(0.8821692419901608)))OR(v0.c0)))OR('1567045288')))AND(t0.c0)))))) ORDER BY (+ (0X494b1fcc)) DESC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)IS NOT((v0.c0 IN ()))) ASC, DATE(LTRIM(v0.c0, t0.c0), t0.c0 COLLATE RTRIM, (t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((MIN(t0.c0, v0.c0), (- (t0.c0)), (- (v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) IS TRUE), ((((((((v0.c0)AND(0.8821692419901608)))OR(v0.c0)))OR('1567045288')))AND(t0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY (+ (0X494b1fcc)) DESC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)IS NOT((v0.c0 IN ()))) ASC, DATE(LTRIM(v0.c0, t0.c0), t0.c0 COLLATE RTRIM, (t0.c0 IN ())));
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((MIN(t0.c0, v0.c0), (- (t0.c0)), (- (v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) IS TRUE), ((((((((v0.c0)AND(0.8821692419901608)))OR(v0.c0)))OR('1567045288')))AND(t0.c0)))))) ORDER BY (+ (0X494b1fcc)) DESC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)IS NOT((v0.c0 IN ()))) ASC, DATE(LTRIM(v0.c0, t0.c0), t0.c0 COLLATE RTRIM, (t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, t0.c0, v0.c0)) NOT BETWEEN ((MIN(t0.c0, v0.c0), (- (t0.c0)), (- (v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) IS TRUE), ((((((((v0.c0)AND(0.8821692419901608)))OR(v0.c0)))OR('1567045288')))AND(t0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY (+ (0X494b1fcc)) DESC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)IS NOT((v0.c0 IN ()))) ASC, DATE(LTRIM(v0.c0, t0.c0), t0.c0 COLLATE RTRIM, (t0.c0 IN ())));
SELECT ALL * FROM vt0 WHERE ((((TRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((TRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((TRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNICODE(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNICODE(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNICODE(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN UPPER(vt0.c0) THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN UPPER(vt0.c0) THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN UPPER(vt0.c0) THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN UPPER(vt0.c0) THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN UPPER(vt0.c0) THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (('')) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (('')) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (('')) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (('')) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (('')) AND ((v0.c0))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((+ (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((+ (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((+ (t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL) WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY UNLIKELY(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) ASC, RTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL) ORDER BY UNLIKELY(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) ASC, RTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL) WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY UNLIKELY(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) ASC, RTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL) ORDER BY UNLIKELY(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) ASC, RTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL) WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY UNLIKELY(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) ASC, RTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c0) ISNULL))) WHERE (((((('1514352192')>(v0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), (t0.c0 IN ())))>((LOWER(DISTINCT '916904339'), x'', (((vt0.c0))<((vt0.c0))))))) ORDER BY (((((v0.c0))!=((v0.c0))))/(((t0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('1514352192')>(v0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), (t0.c0 IN ())))>((LOWER(DISTINCT '916904339'), x'', (((vt0.c0))<((vt0.c0))))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c0) ISNULL))) ORDER BY (((((v0.c0))<>((v0.c0))))/(((t0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c0) ISNULL))) WHERE (((((('1514352192')>(v0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), (t0.c0 IN ())))>((LOWER(DISTINCT '916904339'), x'', (((vt0.c0))<((vt0.c0))))))) ORDER BY (((((v0.c0))!=((v0.c0))))/(((t0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('1514352192')>(v0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), (t0.c0 IN ())))>((LOWER(DISTINCT '916904339'), x'', (((vt0.c0))<((vt0.c0))))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c0) ISNULL))) ORDER BY (((((v0.c0))<>((v0.c0))))/(((t0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c0) ISNULL))) WHERE (((((('1514352192')>(v0.c0)), ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), (t0.c0 IN ())))>((LOWER(DISTINCT '916904339'), x'', (((vt0.c0))<((vt0.c0))))))) ORDER BY (((((v0.c0))!=((v0.c0))))/(((t0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON t0.c0 WHERE ((((((((v0.c0, vt0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))OR((- (t0.c0)))))OR(((t0.c0)LIKE(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, vt0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))OR((- (t0.c0)))))OR(((t0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON t0.c0);
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON t0.c0 WHERE ((((((((v0.c0, vt0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))OR((- (t0.c0)))))OR(((t0.c0)LIKE(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, vt0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))OR((- (t0.c0)))))OR(((t0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON t0.c0);
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON t0.c0 WHERE ((((((((v0.c0, vt0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))OR((- (t0.c0)))))OR(((t0.c0)LIKE(v0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((v0.c0)=(t0.c0))))<((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.6613326654243614' WHEN t0.c0 THEN vt0.c0 END))) LEFT OUTER JOIN v0 ON (('-1230272066') NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) WHERE ((- (v0.c0))) ORDER BY ((CAST('jx' AS NUMERIC)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((v0.c0)=(t0.c0))))<((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.6613326654243614' WHEN t0.c0 THEN vt0.c0 END))) LEFT OUTER JOIN v0 ON (('-1230272066') NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) ORDER BY ((CAST('jx' AS NUMERIC)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((v0.c0)=(t0.c0))))<((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.6613326654243614' WHEN t0.c0 THEN vt0.c0 END))) LEFT OUTER JOIN v0 ON (('-1230272066') NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) WHERE ((- (v0.c0))) ORDER BY ((CAST('jx' AS NUMERIC)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((v0.c0)=(t0.c0))))<((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.6613326654243614' WHEN t0.c0 THEN vt0.c0 END))) LEFT OUTER JOIN v0 ON (('-1230272066') NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) ORDER BY ((CAST('jx' AS NUMERIC)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((v0.c0)=(t0.c0))))<((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.6613326654243614' WHEN t0.c0 THEN vt0.c0 END))) LEFT OUTER JOIN v0 ON (('-1230272066') NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) WHERE ((- (v0.c0))) ORDER BY ((CAST('jx' AS NUMERIC)) IS FALSE)  NULLS FIRST;
SELECT * FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN ('Rf') AND (json_array(v0.c0, t0.c0, v0.c0, t0.c0))) WHERE ((((('9梭')|(v0.c0)))>((((t0.c0)) NOT BETWEEN ((1.328239699E9)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((('9梭')|(v0.c0)))>((((t0.c0)) NOT BETWEEN ((1.328239699E9)) AND ((v0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN ('Rf') AND (json_array(v0.c0, t0.c0, v0.c0, t0.c0))));
SELECT * FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN ('Rf') AND (json_array(v0.c0, t0.c0, v0.c0, t0.c0))) WHERE ((((('9梭')|(v0.c0)))>((((t0.c0)) NOT BETWEEN ((1.328239699E9)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((('9梭')|(v0.c0)))>((((t0.c0)) NOT BETWEEN ((1.328239699E9)) AND ((v0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN ('Rf') AND (json_array(v0.c0, t0.c0, v0.c0, t0.c0))));
SELECT * FROM t0 INNER JOIN v0 ON ((v0.c0) BETWEEN ('Rf') AND (json_array(v0.c0, t0.c0, v0.c0, t0.c0))) WHERE ((((('9梭')|(v0.c0)))>((((t0.c0)) NOT BETWEEN ((1.328239699E9)) AND ((v0.c0))))));
SELECT ALL * FROM v0, vt0, t0 NOT INDEXED WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN t0.c0 END)OR(((v0.c0) IS TRUE))))AND(('FALSE' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN v0.c0 THEN t0.c0 END)OR(((v0.c0) IS TRUE))))AND(('FALSE' IN ())))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 NOT INDEXED WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN t0.c0 END)OR(((v0.c0) IS TRUE))))AND(('FALSE' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN v0.c0 THEN t0.c0 END)OR(((v0.c0) IS TRUE))))AND(('FALSE' IN ())))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 NOT INDEXED WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN t0.c0 END)OR(((v0.c0) IS TRUE))))AND(('FALSE' IN ()))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS(vt0.c0)))OR(((v0.c0)GLOB('866514394')))))AND(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS(vt0.c0)))OR(((v0.c0)GLOB('866514394')))))AND(((v0.c0) BETWEEN (vt0.c0) AND (x'')))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS(vt0.c0)))OR(((v0.c0)GLOB('866514394')))))AND(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS(vt0.c0)))OR(((v0.c0)GLOB('866514394')))))AND(((v0.c0) BETWEEN (vt0.c0) AND (x'')))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS(vt0.c0)))OR(((v0.c0)GLOB('866514394')))))AND(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0, t0, v0 WHERE (UNLIKELY((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (UNLIKELY((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (UNLIKELY((v0.c0 IN ())));
SELECT * FROM v0, vt0, t0 WHERE ('Ak') ORDER BY x'' DESC, (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (('Ak') IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0 ORDER BY x'' DESC, (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ()));
SELECT * FROM v0, vt0, t0 WHERE ('Ak') ORDER BY x'' DESC, (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (('Ak') IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0 ORDER BY x'' DESC, (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ()));
SELECT * FROM v0, vt0, t0 WHERE ('Ak') ORDER BY x'' DESC, (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ());
SELECT ALL COUNT(*) FROM t0 WHERE ('-291250408') ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN '-1774488705' ELSE 'V0滴}b' END  NULLS LAST, LIKELIHOOD(CAST(t0.c0 AS BLOB), 0.014913607945512997), (((t0.c0)) NOT BETWEEN (((~ (x'fec4')))) AND (((t0.c0 IN (t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-291250408') IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN '-1774488705' ELSE 'V0滴}b' END  NULLS LAST, LIKELIHOOD(CAST(t0.c0 AS BLOB), 0.014913607945512997), (((t0.c0)) NOT BETWEEN (((~ (x'fec4')))) AND (((t0.c0 IN (t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ('-291250408') ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN '-1774488705' ELSE 'V0滴}b' END  NULLS LAST, LIKELIHOOD(CAST(t0.c0 AS BLOB), 0.014913607945512997), (((t0.c0)) NOT BETWEEN (((~ (x'fec4')))) AND (((t0.c0 IN (t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-291250408') IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN '-1774488705' ELSE 'V0滴}b' END  NULLS LAST, LIKELIHOOD(CAST(t0.c0 AS BLOB), 0.014913607945512997), (((t0.c0)) NOT BETWEEN (((~ (x'fec4')))) AND (((t0.c0 IN (t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ('-291250408') ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN '-1774488705' ELSE 'V0滴}b' END  NULLS LAST, LIKELIHOOD(CAST(t0.c0 AS BLOB), 0.014913607945512997), (((t0.c0)) NOT BETWEEN (((~ (x'fec4')))) AND (((t0.c0 IN (t0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c0))) IS FALSE) LEFT OUTER JOIN v0 ON json_type(v0.c0) WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c0))) IS FALSE) LEFT OUTER JOIN v0 ON json_type(v0.c0));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c0))) IS FALSE) LEFT OUTER JOIN v0 ON json_type(v0.c0) WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c0))) IS FALSE) LEFT OUTER JOIN v0 ON json_type(v0.c0));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0))<>((0.8351851690113886)))))) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0))!=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0))<>((0.8351851690113886)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0))<>((vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0))<>((0.8351851690113886)))))) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0))!=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0))<>((0.8351851690113886)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0))<>((vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0))<>((0.8351851690113886)))))) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0))!=((vt0.c0)))))  NULLS FIRST;
SELECT * FROM t0 INNER JOIN v0 ON (~ ('-1362561141')) WHERE ((- (NULLIF(t0.c0, t0.c0)))) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((v0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0)OR(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULLIF(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (~ ('-1362561141')) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((v0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0)OR(v0.c0)) END  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON (~ ('-1362561141')) WHERE ((- (NULLIF(t0.c0, t0.c0)))) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((v0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0)OR(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULLIF(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (~ ('-1362561141')) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((v0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0)OR(v0.c0)) END  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON (~ ('-1362561141')) WHERE ((- (NULLIF(t0.c0, t0.c0)))) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((v0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0)OR(v0.c0)) END  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN vt0 ON CAST(highlight(v0.c0, v0.c0, v0.c0, vt0.c0) AS NUMERIC) WHERE ((vt0.c0 IN ())) ORDER BY ((((v0.c0)||(v0.c0)))=(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(highlight(v0.c0, v0.c0, v0.c0, vt0.c0) AS NUMERIC) ORDER BY ((((v0.c0)||(v0.c0)))=(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON CAST(highlight(v0.c0, v0.c0, v0.c0, vt0.c0) AS NUMERIC) WHERE ((vt0.c0 IN ())) ORDER BY ((((v0.c0)||(v0.c0)))=(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(highlight(v0.c0, v0.c0, v0.c0, vt0.c0) AS NUMERIC) ORDER BY ((((v0.c0)||(v0.c0)))=(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(((t0.c0)>(t0.c0)), 0.18200815693799732) LEFT OUTER JOIN vt0 ON '' WHERE (((((v0.c0)=(v0.c0)))>=(((vt0.c0)>>(v0.c0))))) ORDER BY (((TYPEOF(DISTINCT vt0.c0)))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(v0.c0)))>=(((vt0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(((t0.c0)>(t0.c0)), 0.18200815693799732) LEFT OUTER JOIN vt0 ON '' ORDER BY (((TYPEOF(DISTINCT vt0.c0)))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ASC  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(((t0.c0)>(t0.c0)), 0.18200815693799732) LEFT OUTER JOIN vt0 ON '' WHERE (((((v0.c0)=(v0.c0)))>=(((vt0.c0)>>(v0.c0))))) ORDER BY (((TYPEOF(DISTINCT vt0.c0)))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(v0.c0)))>=(((vt0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(((t0.c0)>(t0.c0)), 0.18200815693799732) LEFT OUTER JOIN vt0 ON '' ORDER BY (((TYPEOF(DISTINCT vt0.c0)))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ASC  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(((t0.c0)>(t0.c0)), 0.18200815693799732) LEFT OUTER JOIN vt0 ON '' WHERE (((((v0.c0)=(v0.c0)))>=(((vt0.c0)>>(v0.c0))))) ORDER BY (((TYPEOF(DISTINCT vt0.c0)))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN t0 ON (vt0.c0 COLLATE RTRIM IN ((vt0.c0 IN ()))) WHERE (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)-(vt0.c0)) ELSE (+ (vt0.c0)) END) ORDER BY CASE WHEN NULL THEN t0.c0 COLLATE BINARY ELSE ((v0.c0)||(x'')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c0)) THEN ((t0.c0)-(vt0.c0)) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON (vt0.c0 COLLATE RTRIM IN ((vt0.c0 IN ()))) ORDER BY CASE WHEN NULL THEN t0.c0 COLLATE BINARY ELSE ((v0.c0)||(x'')) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN t0 ON (vt0.c0 COLLATE RTRIM IN ((vt0.c0 IN ()))) WHERE (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)-(vt0.c0)) ELSE (+ (vt0.c0)) END) ORDER BY CASE WHEN NULL THEN t0.c0 COLLATE BINARY ELSE ((v0.c0)||(x'')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c0)) THEN ((t0.c0)-(vt0.c0)) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON (vt0.c0 COLLATE RTRIM IN ((vt0.c0 IN ()))) ORDER BY CASE WHEN NULL THEN t0.c0 COLLATE BINARY ELSE ((v0.c0)||(x'')) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN t0 ON (vt0.c0 COLLATE RTRIM IN ((vt0.c0 IN ()))) WHERE (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)-(vt0.c0)) ELSE (+ (vt0.c0)) END) ORDER BY CASE WHEN NULL THEN t0.c0 COLLATE BINARY ELSE ((v0.c0)||(x'')) END  NULLS FIRST;
SELECT * FROM v0 WHERE ((+ ((- (v0.c0))))) ORDER BY (((v0.c0)=(v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)==(v0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((+ ((- (v0.c0))))) ORDER BY (((v0.c0)=(v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)==(v0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((+ ((- (v0.c0))))) ORDER BY (((v0.c0)=(v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE ((((((t0.c0) IS TRUE)))<((CAST(t0.c0 AS TEXT))))) ORDER BY CASE WHEN LOWER(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN t0.c0 END ELSE (NULL IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS TRUE)))<((CAST(t0.c0 AS TEXT))))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN LOWER(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN t0.c0 END ELSE (NULL IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((t0.c0) IS TRUE)))<((CAST(t0.c0 AS TEXT))))) ORDER BY CASE WHEN LOWER(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN t0.c0 END ELSE (NULL IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS TRUE)))<((CAST(t0.c0 AS TEXT))))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN LOWER(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN t0.c0 END ELSE (NULL IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((t0.c0) IS TRUE)))<((CAST(t0.c0 AS TEXT))))) ORDER BY CASE WHEN LOWER(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN t0.c0 END ELSE (NULL IN ()) END DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(((v0.c0) IS FALSE))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(((v0.c0) IS FALSE))))OR(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(((v0.c0) IS FALSE))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(((v0.c0) IS FALSE))))OR(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(((v0.c0) IS FALSE))))OR(v0.c0)));
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) WHERE (((NULL)>=(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((t0.c0) ISNULL)) NOT NULL) ASC, CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) ORDER BY ((((t0.c0) ISNULL)) NOT NULL) ASC, CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) WHERE (((NULL)>=(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((t0.c0) ISNULL)) NOT NULL) ASC, CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) ORDER BY ((((t0.c0) ISNULL)) NOT NULL) ASC, CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) WHERE (((NULL)>=(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((t0.c0) ISNULL)) NOT NULL) ASC, CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('-1625872078') ORDER BY (((t0.c0) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1625872078') IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c0) IS FALSE) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('-1625872078') ORDER BY (((t0.c0) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1625872078') IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c0) IS FALSE) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('-1625872078') ORDER BY (((t0.c0) IS FALSE) IN ()) DESC;
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))*(((t0.c0)>=(v0.c0))))) ORDER BY ((t0.c0 COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))*(((t0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 COLLATE NOCASE) ISNULL) DESC);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))*(((t0.c0)>=(v0.c0))))) ORDER BY ((t0.c0 COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))*(((t0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 COLLATE NOCASE) ISNULL) DESC);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))*(((t0.c0)>=(v0.c0))))) ORDER BY ((t0.c0 COLLATE NOCASE) ISNULL) DESC;
SELECT * FROM t0 CROSS JOIN vt0 ON CAST((('2l]](') BETWEEN (x'8052') AND ('0.4232382036984421')) AS NUMERIC) WHERE ((((vt0.c0)<<(t0.c0)) IN ())) ORDER BY ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<<(t0.c0)) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST((('2l]](') BETWEEN (x'8052') AND ('0.4232382036984421')) AS NUMERIC) ORDER BY ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON CAST((('2l]](') BETWEEN (x'8052') AND ('0.4232382036984421')) AS NUMERIC) WHERE ((((vt0.c0)<<(t0.c0)) IN ())) ORDER BY ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<<(t0.c0)) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST((('2l]](') BETWEEN (x'8052') AND ('0.4232382036984421')) AS NUMERIC) ORDER BY ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON CAST((('2l]](') BETWEEN (x'8052') AND ('0.4232382036984421')) AS NUMERIC) WHERE ((((vt0.c0)<<(t0.c0)) IN ())) ORDER BY ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CAST(vt0.c0 AS BLOB), (- (vt0.c0)), x''))>=((((((t0.c0)AND(t0.c0)))OR(t0.c0)), x'', ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB), (- (vt0.c0)), x''))>=((((((t0.c0)AND(t0.c0)))OR(t0.c0)), x'', ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CAST(vt0.c0 AS BLOB), (- (vt0.c0)), x''))>=((((((t0.c0)AND(t0.c0)))OR(t0.c0)), x'', ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB), (- (vt0.c0)), x''))>=((((((t0.c0)AND(t0.c0)))OR(t0.c0)), x'', ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CAST(vt0.c0 AS BLOB), (- (vt0.c0)), x''))>=((((((t0.c0)AND(t0.c0)))OR(t0.c0)), x'', ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((+ (v0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)<(0.9350757264320727)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)<(0.9350757264320727)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((+ (v0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)<(0.9350757264320727)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)<(0.9350757264320727)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((+ (v0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)<(0.9350757264320727)) ASC  NULLS LAST;
SELECT * FROM v0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS TEXT)) ORDER BY LIKELIHOOD(DISTINCT ((t0.c0) IS FALSE), 0.6529026949383555);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM v0, t0 ORDER BY LIKELIHOOD(DISTINCT ((t0.c0) IS FALSE), 0.6529026949383555));
SELECT * FROM v0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS TEXT)) ORDER BY LIKELIHOOD(DISTINCT ((t0.c0) IS FALSE), 0.6529026949383555);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM v0, t0 ORDER BY LIKELIHOOD(DISTINCT ((t0.c0) IS FALSE), 0.6529026949383555));
SELECT * FROM v0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS TEXT)) ORDER BY LIKELIHOOD(DISTINCT ((t0.c0) IS FALSE), 0.6529026949383555);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))IS NOT((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0)))IS NOT((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))IS NOT((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0)))IS NOT((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))IS NOT((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((~ (v0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((~ (v0.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((~ (v0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((~ (v0.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((~ (v0.c0))) IS FALSE) DESC;
