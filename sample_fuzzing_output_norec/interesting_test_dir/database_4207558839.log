-- Time: 2024/06/09 23:54:48
-- Database: database39
-- Database version: 3.40.0
-- seed value: 4207558839
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 REAL ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (x'', 0.929720683448231); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR FAIL rt1 SET c1=-1250388407 WHERE ((((rt1.c1)LIKE(rt1.c2))) BETWEEN (rt1.c1) AND (rt1.c0 COLLATE BINARY)); -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(111714779); -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (x'', 0.9927739933228311, NULL); -- 0ms;
UPDATE OR REPLACE rt0 SET (c0)=('-254648891') WHERE ((((rt0.c1))<=((rt0.c3))) IN ()); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt2 USING rtree_i32(c0, c1, c2, +c3 BLOB ); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (x''), (''), (-2.54648891E8); -- 1ms;
UPDATE OR IGNORE rt2 SET c1=x'' WHERE (((rt2.c0) IS TRUE) IN ()); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 3ms;
COMMIT; -- 1ms;
VACUUM; -- 3ms;
UPDATE OR IGNORE rt0 SET c3=0.006840268857914222, c2=x'' WHERE NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1719576793', c0=0.42361237608584357 WHERE (((- (rt0.c3)))LIKE(IFNULL(DISTINCT rt0.c1, rt0.c0))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt2 SET c2=NULL, c3=0.5502121372377214 WHERE ((rt2.c1) NOT BETWEEN (CAST(rt2.c2 AS TEXT)) AND (LIKE(rt2.c1, rt2.c3))); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('|?U>^#', '443967451'); -- 0ms;
UPDATE OR ABORT rt2 SET (c2)=('-1324285214') WHERE ((((rt2.c0) BETWEEN (rt2.c0) AND (x'')))>(((rt2.c2) ISNULL))); -- 1ms;
UPDATE rt1 SET c0=x'a2e4', c1='0.929720683448231' WHERE (- (LIKE(rt1.c0, rt1.c0, '!'))); -- 5ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
CREATE TABLE t0 (c0 INT ); -- 8ms;
INSERT OR IGNORE INTO t0 VALUES ('WCEꇛW'); -- 16ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.7764640320796644 WHERE (((rt0.c2, rt0.c1, rt0.c3)) BETWEEN (((NOT (rt0.c0)), CASE WHEN rt0.c2 THEN 0.5328039399622296 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END, NULL)) AND ((((rt0.c3) NOTNULL), ((rt0.c0) NOTNULL), (('N뗜P\rK5T')LIKE(rt0.c2))))); -- 1ms;
UPDATE OR IGNORE rt1 SET c1=0Xffffffffe0c9ef36 WHERE ((CAST(rt1.c2 AS INTEGER))&((- (rt1.c0)))); -- 0ms;
REINDEX; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, 0.390469950512186, '*NbN'); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('', '0.006840268857914222') WHERE (((+ (vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)); -- 0ms;
ALTER TABLE t0 ADD COLUMN c33 BLOB; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (0.23770766635205298, '0.42361237608584357', -1250388407, ''), (x'', 0Xffffffffa866d5e6, x'f608', ''), ('-497593226', NULL, NULL, 'XY'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', 0.7764640320796644); -- 10ms;
INSERT OR ABORT INTO rt2 VALUES (0x13b43846, x'', 0.8292231376522591, x''); -- 0ms;
UPDATE rt0 SET c2=-1.324285214E9 WHERE ((((rt0.c1)<<(rt0.c3)))%(rt0.c1)); -- 5ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('(', ''); -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c80; -- 9ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c0, c1)=(NULL, 0.09771943044755116, NULL); -- 0ms;
UPDATE t0 SET (c80)=(NULL) WHERE ABS(DISTINCT t0.c80); -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (0X3cb98d1a, x'ca33'), (-91828880, NULL), ('-91828880', x''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c80 TO c24; -- 2ms;
UPDATE rt2 SET (c1, c0, c2)=(NULL, 0.09771943044755116, x'') WHERE (((rt2.c1)AND(rt2.c2)) IN ()); -- 1ms;
ROLLBACK TRANSACTION; -- 9ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0, rt2 WHERE (rt2.c2) ORDER BY (((rt0.c3 IN ()))||(NULL COLLATE NOCASE))  NULLS FIRST, json_insert(x'd10f', CASE rt2.c3  WHEN rt2.c2 THEN rt2.c3 END, (((rt0.c3, NULL, x'3353a217')) NOT BETWEEN ((rt2.c1, rt2.c3, rt0.c1)) AND ((rt0.c1, rt0.c0, rt2.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt2.c2) IS TRUE)  as count FROM rt0, rt2 ORDER BY (((rt0.c3 IN ()))||(NULL COLLATE NOCASE))  NULLS FIRST, json_insert(x'd10f', CASE rt2.c3  WHEN rt2.c2 THEN rt2.c3 END, (((rt0.c3, NULL, x'3353a217')) NOT BETWEEN ((rt2.c1, rt2.c3, rt0.c1)) AND ((rt0.c1, rt0.c0, rt2.c1)))) ASC);
SELECT ALL * FROM rt0, rt2 WHERE (rt2.c2) ORDER BY (((rt0.c3 IN ()))||(NULL COLLATE NOCASE))  NULLS FIRST, json_insert(x'd10f', CASE rt2.c3  WHEN rt2.c2 THEN rt2.c3 END, (((rt0.c3, NULL, x'3353a217')) NOT BETWEEN ((rt2.c1, rt2.c3, rt0.c1)) AND ((rt0.c1, rt0.c0, rt2.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt2.c2) IS TRUE)  as count FROM rt0, rt2 ORDER BY (((rt0.c3 IN ()))||(NULL COLLATE NOCASE))  NULLS FIRST, json_insert(x'd10f', CASE rt2.c3  WHEN rt2.c2 THEN rt2.c3 END, (((rt0.c3, NULL, x'3353a217')) NOT BETWEEN ((rt2.c1, rt2.c3, rt0.c1)) AND ((rt0.c1, rt0.c0, rt2.c1)))) ASC);
SELECT * FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE NOCASE WHEN ((0Xffffffff99815727)<<(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END END WHERE (((((QUOTE(vt0.c0))AND((rt0.c2 IN ()))))AND(CASE rt0.c2  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c0 END))) ORDER BY (- (0.06155179827781554)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((QUOTE(vt0.c0))AND((rt0.c2 IN ()))))AND(CASE rt0.c2  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE NOCASE WHEN ((0xffffffff99815727)<<(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END END ORDER BY (- (0.06155179827781554)) COLLATE RTRIM DESC);
SELECT * FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE NOCASE WHEN ((0Xffffffff99815727)<<(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END END WHERE (((((QUOTE(vt0.c0))AND((rt0.c2 IN ()))))AND(CASE rt0.c2  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c0 END))) ORDER BY (- (0.06155179827781554)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((QUOTE(vt0.c0))AND((rt0.c2 IN ()))))AND(CASE rt0.c2  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE NOCASE WHEN ((0xffffffff99815727)<<(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END END ORDER BY (- (0.06155179827781554)) COLLATE RTRIM DESC);
SELECT * FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE NOCASE WHEN ((0Xffffffff99815727)<<(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END END WHERE (((((QUOTE(vt0.c0))AND((rt0.c2 IN ()))))AND(CASE rt0.c2  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c0 END))) ORDER BY (- (0.06155179827781554)) COLLATE RTRIM DESC;
SELECT ALL * FROM vt0, t0 WHERE ((((((NULL, vt0.c0, vt0.c0, vt0.c0, t0.c33))<=((0.526037664628546, t0.c80, t0.c33, t0.c33, vt0.c0))))<(TRIM(t0.c80)))) ORDER BY t0.c80, CAST('x馼cK' AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL, vt0.c0, vt0.c0, vt0.c0, t0.c33))<=((0.526037664628546, t0.c80, t0.c33, t0.c33, vt0.c0))))<(TRIM(t0.c80)))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c80, CAST('x馼cK' AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((NULL, vt0.c0, vt0.c0, vt0.c0, t0.c33))<=((0.526037664628546, t0.c80, t0.c33, t0.c33, vt0.c0))))<(TRIM(t0.c80)))) ORDER BY t0.c80, CAST('x馼cK' AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL, vt0.c0, vt0.c0, vt0.c0, t0.c33))<=((0.526037664628546, t0.c80, t0.c33, t0.c33, vt0.c0))))<(TRIM(t0.c80)))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c80, CAST('x馼cK' AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((NULL, vt0.c0, vt0.c0, vt0.c0, t0.c33))<=((0.526037664628546, t0.c80, t0.c33, t0.c33, vt0.c0))))<(TRIM(t0.c80)))) ORDER BY t0.c80, CAST('x馼cK' AS BLOB) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((((NOT (t0.c33)))<<(t0.c80)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c33)))<<(t0.c80))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((NOT (t0.c33)))<<(t0.c80)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c33)))<<(t0.c80))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((NOT (t0.c33)))<<(t0.c80)));
SELECT ALL COUNT(*) FROM vt0, rt0, rt2, rt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, rt2, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, rt2, rt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, rt2, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, rt2, rt1, t0 WHERE (x'');
SELECT * FROM rt0, rt2, t0, vt0, rt1 WHERE (x'') ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt2, t0 NOT INDEXED, vt0, rt1 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT * FROM rt0, rt2, t0, vt0, rt1 WHERE (x'') ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt2, t0 NOT INDEXED, vt0, rt1 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT * FROM rt0, rt2, t0, vt0, rt1 WHERE (x'') ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((x'')/(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')/(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')/(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')/(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')/(vt0.c1)) COLLATE BINARY);
SELECT * FROM t0, rt1 WHERE (((((t0.c80) NOT NULL)) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c80) NOT NULL)) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((t0.c80) NOT NULL)) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c80) NOT NULL)) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((t0.c80) NOT NULL)) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) IS FALSE))));
SELECT * FROM rt0, vt0, rt2 WHERE (json_remove((((rt2.c0))==((rt0.c1))), ((rt0.c0)*(rt0.c2)), NULL, (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_remove((((rt2.c0))=((rt0.c1))), ((rt0.c0)*(rt0.c2)), NULL, (- (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, rt2);
SELECT * FROM rt0, vt0, rt2 WHERE (json_remove((((rt2.c0))==((rt0.c1))), ((rt0.c0)*(rt0.c2)), NULL, (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_remove((((rt2.c0))=((rt0.c1))), ((rt0.c0)*(rt0.c2)), NULL, (- (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, rt2);
SELECT COUNT(*) FROM rt0, rt2, rt1, vt0 WHERE (CASE (((rt0.c0, rt0.c0, rt2.c1))!=((rt2.c1, rt2.c0, vt0.c0)))  WHEN UNICODE(rt2.c0) THEN (NOT (vt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c3)) END) ORDER BY (rt2.c1 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0, rt0.c0, rt2.c1))!=((rt2.c1, rt2.c0, vt0.c0)))  WHEN UNICODE(rt2.c0) THEN (NOT (vt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c3)) END) IS TRUE)  as count FROM rt0, rt2, rt1, vt0 ORDER BY (rt2.c1 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt2, rt1, vt0 WHERE (CASE (((rt0.c0, rt0.c0, rt2.c1))!=((rt2.c1, rt2.c0, vt0.c0)))  WHEN UNICODE(rt2.c0) THEN (NOT (vt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c3)) END) ORDER BY (rt2.c1 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0, rt0.c0, rt2.c1))!=((rt2.c1, rt2.c0, vt0.c0)))  WHEN UNICODE(rt2.c0) THEN (NOT (vt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c3)) END) IS TRUE)  as count FROM rt0, rt2, rt1, vt0 ORDER BY (rt2.c1 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt2, rt1, vt0 WHERE (CASE (((rt0.c0, rt0.c0, rt2.c1))!=((rt2.c1, rt2.c0, vt0.c0)))  WHEN UNICODE(rt2.c0) THEN (NOT (vt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt2.c3)) END) ORDER BY (rt2.c1 IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (- (NULL)) COLLATE BINARY FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE BINARY)<=(LIKELIHOOD(vt0.c1, 0.2866222785388224))) LEFT OUTER JOIN rt2 ON NULL WHERE (((t0.c80)<<(rt2.c2)) COLLATE BINARY) ORDER BY (+ (CASE t0.c80  WHEN rt0.c2 THEN t0.c33 WHEN '0.006840268857914222' THEN '' WHEN t0.c80 THEN '-981075769' ELSE '330577990' END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c80)<<(rt2.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (- (NULL)) COLLATE BINARY FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE BINARY)<=(LIKELIHOOD(vt0.c1, 0.2866222785388224))) LEFT OUTER JOIN rt2 ON NULL ORDER BY (+ (CASE t0.c80  WHEN rt0.c2 THEN t0.c33 WHEN '0.006840268857914222' THEN '' WHEN t0.c80 THEN '-981075769' ELSE '330577990' END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (- (NULL)) COLLATE BINARY FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE BINARY)<=(LIKELIHOOD(vt0.c1, 0.2866222785388224))) LEFT OUTER JOIN rt2 ON NULL WHERE (((t0.c80)<<(rt2.c2)) COLLATE BINARY) ORDER BY (+ (CASE t0.c80  WHEN rt0.c2 THEN t0.c33 WHEN '0.006840268857914222' THEN '' WHEN t0.c80 THEN '-981075769' ELSE '330577990' END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c80)<<(rt2.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (- (NULL)) COLLATE BINARY FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE BINARY)<=(LIKELIHOOD(vt0.c1, 0.2866222785388224))) LEFT OUTER JOIN rt2 ON NULL ORDER BY (+ (CASE t0.c80  WHEN rt0.c2 THEN t0.c33 WHEN '0.006840268857914222' THEN '' WHEN t0.c80 THEN '-981075769' ELSE '330577990' END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (- (NULL)) COLLATE BINARY FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE BINARY)<=(LIKELIHOOD(vt0.c1, 0.2866222785388224))) LEFT OUTER JOIN rt2 ON NULL WHERE (((t0.c80)<<(rt2.c2)) COLLATE BINARY) ORDER BY (+ (CASE t0.c80  WHEN rt0.c2 THEN t0.c33 WHEN '0.006840268857914222' THEN '' WHEN t0.c80 THEN '-981075769' ELSE '330577990' END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt2, t0, rt1, rt0 WHERE (CASE WHEN ((rt2.c3) ISNULL) THEN (('')>(t0.c33)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c3) ISNULL) THEN (('')>(t0.c33)) END) IS TRUE)  as count FROM vt0, rt2, t0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt2, t0, rt1, rt0 WHERE (CASE WHEN ((rt2.c3) ISNULL) THEN (('')>(t0.c33)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c3) ISNULL) THEN (('')>(t0.c33)) END) IS TRUE)  as count FROM vt0, rt2, t0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt2, t0, rt1, rt0 WHERE (CASE WHEN ((rt2.c3) ISNULL) THEN (('')>(t0.c33)) END);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)<(rt0.c2)) AS TEXT)) ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)<(rt0.c2)) AS TEXT)) ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)<(rt0.c2)) AS TEXT)) ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (rt0.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((vt0.c0)&(rt0.c3))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((((NOT (vt0.c1))))<=((UNICODE(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)&(rt0.c3))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NOT (vt0.c1))))<=((UNICODE(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((vt0.c0)&(rt0.c3))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((((NOT (vt0.c1))))<=((UNICODE(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)&(rt0.c3))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NOT (vt0.c1))))<=((UNICODE(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((vt0.c0)&(rt0.c3))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((((NOT (vt0.c1))))<=((UNICODE(rt0.c3))));
SELECT COUNT(*) FROM vt0, rt1, rt0, rt2 WHERE ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) IN (NULL, CASE vt0.c0  WHEN rt2.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) IN (NULL, CASE vt0.c0  WHEN rt2.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, rt0, rt2);
SELECT COUNT(*) FROM vt0, rt1, rt0, rt2 WHERE ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) IN (NULL, CASE vt0.c0  WHEN rt2.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) IN (NULL, CASE vt0.c0  WHEN rt2.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, rt0, rt2);
SELECT COUNT(*) FROM vt0, rt1, rt0, rt2 WHERE ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) IN (NULL, CASE vt0.c0  WHEN rt2.c1 THEN rt1.c2 END)));
SELECT ALL * FROM rt0, rt1, vt0 CROSS JOIN rt2 ON ((CASE vt0.c0  WHEN rt0.c2 THEN rt2.c2 END)IS(rt2.c2)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1, vt0 CROSS JOIN rt2 ON ((CASE vt0.c0  WHEN rt0.c2 THEN rt2.c2 END)IS(rt2.c2)));
SELECT ALL * FROM rt0, rt1, vt0 CROSS JOIN rt2 ON ((CASE vt0.c0  WHEN rt0.c2 THEN rt2.c2 END)IS(rt2.c2)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1, vt0 CROSS JOIN rt2 ON ((CASE vt0.c0  WHEN rt0.c2 THEN rt2.c2 END)IS(rt2.c2)));
SELECT ALL * FROM rt0, rt1, vt0 CROSS JOIN rt2 ON ((CASE vt0.c0  WHEN rt0.c2 THEN rt2.c2 END)IS(rt2.c2)) WHERE (rt0.c1);
SELECT ALL * FROM rt0, rt2, vt0, rt1 WHERE (((((NULL) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, rt2, vt0, rt1);
SELECT ALL * FROM rt0, rt2, vt0, rt1 WHERE (((((NULL) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, rt2, vt0, rt1);
SELECT ALL * FROM rt0, rt2, vt0, rt1 WHERE (((((NULL) ISNULL)) IS FALSE));
SELECT * FROM rt2, rt0, t0, rt1 WHERE (((((rt2.c0)GLOB(rt2.c1)))|(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c0)GLOB(rt2.c1)))|(CASE WHEN rt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt2, rt0, t0, rt1);
SELECT * FROM rt2, rt0, t0, rt1 WHERE (((((rt2.c0)GLOB(rt2.c1)))|(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c0)GLOB(rt2.c1)))|(CASE WHEN rt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt2, rt0, t0, rt1);
SELECT * FROM rt2, rt0, t0, rt1 WHERE (((((rt2.c0)GLOB(rt2.c1)))|(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT ALL * FROM rt0, t0, rt1, rt2 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ((t0.c33) IS TRUE)  as count FROM rt0, t0, rt1, rt2);
SELECT ALL * FROM rt0, t0, rt1, rt2 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ((t0.c33) IS TRUE)  as count FROM rt0, t0, rt1, rt2);
SELECT ALL * FROM rt0, t0, rt1, rt2 WHERE (t0.c33);
SELECT ALL * FROM t0 NOT INDEXED, rt2 WHERE ((((((rt2.c3))>=((t0.c33))))LIKE(UNLIKELY(rt2.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c3))>=((t0.c33))))LIKE(UNLIKELY(rt2.c2)))) IS TRUE)  as count FROM t0, rt2);
SELECT ALL * FROM t0 NOT INDEXED, rt2 WHERE ((((((rt2.c3))>=((t0.c33))))LIKE(UNLIKELY(rt2.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c3))>=((t0.c33))))LIKE(UNLIKELY(rt2.c2)))) IS TRUE)  as count FROM t0, rt2);
SELECT ALL * FROM t0 NOT INDEXED, rt2 WHERE ((((((rt2.c3))>=((t0.c33))))LIKE(UNLIKELY(rt2.c2))));
SELECT ALL * FROM rt2, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c1 END)+(',Lg6fh')) WHERE (0X2106f1a6);
SELECT SUM(count) FROM (SELECT ((0x2106f1a6) IS TRUE)  as count FROM rt2, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c1 END)+(',Lg6fh')));
SELECT ALL * FROM rt2, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c1 END)+(',Lg6fh')) WHERE (0X2106f1a6);
SELECT SUM(count) FROM (SELECT ((0x2106f1a6) IS TRUE)  as count FROM rt2, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c1 END)+(',Lg6fh')));
SELECT ALL * FROM rt2, rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c1 END)+(',Lg6fh')) WHERE (0X2106f1a6);
SELECT * FROM rt2, rt1, vt0, rt0 INNER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c3)&(rt0.c2)))) AND (((- (rt1.c0))))) WHERE ((~ (((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt2, rt1, vt0, rt0 INNER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c3)&(rt0.c2)))) AND (((- (rt1.c0))))));
SELECT * FROM rt2, rt1, vt0, rt0 INNER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c3)&(rt0.c2)))) AND (((- (rt1.c0))))) WHERE ((~ (((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt2, rt1, vt0, rt0 INNER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c3)&(rt0.c2)))) AND (((- (rt1.c0))))));
SELECT * FROM rt2, rt1, vt0, rt0 INNER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c3)&(rt0.c2)))) AND (((- (rt1.c0))))) WHERE ((~ (((rt1.c2) NOTNULL))));
SELECT ALL * FROM rt0 INNER JOIN rt2 ON ((('-n') IS TRUE) IN (((rt2.c1) NOT NULL))) WHERE (((rt2.c1 COLLATE RTRIM)IS(ABS(DISTINCT rt2.c1))));
SELECT SUM(count) FROM (SELECT ((((rt2.c1 COLLATE RTRIM)IS(ABS(DISTINCT rt2.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON ((('-n') IS TRUE) IN (((rt2.c1) NOT NULL))));
SELECT ALL * FROM rt0 INNER JOIN rt2 ON ((('-n') IS TRUE) IN (((rt2.c1) NOT NULL))) WHERE (((rt2.c1 COLLATE RTRIM)IS(ABS(DISTINCT rt2.c1))));
SELECT SUM(count) FROM (SELECT ((((rt2.c1 COLLATE RTRIM)IS(ABS(DISTINCT rt2.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON ((('-n') IS TRUE) IN (((rt2.c1) NOT NULL))));
SELECT ALL * FROM rt0 INNER JOIN rt2 ON ((('-n') IS TRUE) IN (((rt2.c1) NOT NULL))) WHERE (((rt2.c1 COLLATE RTRIM)IS(ABS(DISTINCT rt2.c1))));
SELECT ALL * FROM rt2 INNER JOIN rt0 ON x'' WHERE (((rt0.c0)IS(rt0.c3 COLLATE BINARY))) ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt2.c2 END  WHEN ((rt2.c1)>=(rt0.c3)) THEN (- (rt0.c0)) END, rt2.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)IS(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON x'' ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt2.c2 END  WHEN ((rt2.c1)>=(rt0.c3)) THEN (- (rt0.c0)) END, rt2.c1  NULLS LAST);
SELECT ALL * FROM rt2 INNER JOIN rt0 ON x'' WHERE (((rt0.c0)IS(rt0.c3 COLLATE BINARY))) ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt2.c2 END  WHEN ((rt2.c1)>=(rt0.c3)) THEN (- (rt0.c0)) END, rt2.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)IS(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON x'' ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt2.c2 END  WHEN ((rt2.c1)>=(rt0.c3)) THEN (- (rt0.c0)) END, rt2.c1  NULLS LAST);
SELECT ALL * FROM rt2 INNER JOIN rt0 ON x'' WHERE (((rt0.c0)IS(rt0.c3 COLLATE BINARY))) ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt2.c2 END  WHEN ((rt2.c1)>=(rt0.c3)) THEN (- (rt0.c0)) END, rt2.c1  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY ((((rt0.c0)GLOB(rt0.c0)))<=(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN '!n}9N}|I0' THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)GLOB(rt0.c0)))<=(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN '!n}9N}|I0' THEN rt0.c0 END)) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY ((((rt0.c0)GLOB(rt0.c0)))<=(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN '!n}9N}|I0' THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)GLOB(rt0.c0)))<=(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN '!n}9N}|I0' THEN rt0.c0 END)) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY ((((rt0.c0)GLOB(rt0.c0)))<=(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN '!n}9N}|I0' THEN rt0.c0 END)) DESC;
SELECT * FROM rt1, vt0, rt0 WHERE (((((vt0.c0) NOT NULL))LIKE(((rt0.c1)LIKE(rt1.c0))))) ORDER BY CAST(0x2106f1a6 AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))LIKE(((rt0.c1)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(0X2106f1a6 AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0, rt0 WHERE (((((vt0.c0) NOT NULL))LIKE(((rt0.c1)LIKE(rt1.c0))))) ORDER BY CAST(0x2106f1a6 AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))LIKE(((rt0.c1)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(0X2106f1a6 AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0, rt0 WHERE (((((vt0.c0) NOT NULL))LIKE(((rt0.c1)LIKE(rt1.c0))))) ORDER BY CAST(0x2106f1a6 AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt2, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt2, t0);
SELECT ALL * FROM rt0, rt2, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt2, t0);
SELECT ALL * FROM rt0, rt2, t0 WHERE (rt0.c0);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c0) NOT NULL)  WHEN highlight(x'', rt1.c2, rt1.c1, rt1.c0) THEN ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)) END) ORDER BY NULL  NULLS FIRST, (~ (((((rt1.c0)OR(-2050402932)))OR(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) NOT NULL)  WHEN highlight(x'', rt1.c2, rt1.c1, rt1.c0) THEN ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY NULL  NULLS FIRST, (~ (((((rt1.c0)OR(-2050402932)))OR(rt1.c0)))) ASC);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c0) NOT NULL)  WHEN highlight(x'', rt1.c2, rt1.c1, rt1.c0) THEN ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)) END) ORDER BY NULL  NULLS FIRST, (~ (((((rt1.c0)OR(-2050402932)))OR(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) NOT NULL)  WHEN highlight(x'', rt1.c2, rt1.c1, rt1.c0) THEN ((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY NULL  NULLS FIRST, (~ (((((rt1.c0)OR(-2050402932)))OR(rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN rt2 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((((((((((rt2.c0 IN ()))OR(rt2.c0 COLLATE RTRIM)))AND((rt0.c2 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(((rt0.c3) NOT BETWEEN (rt2.c3) AND (vt0.c0)))))AND(((rt2.c0) NOTNULL))))OR((+ (rt2.c1)))) WHERE ((((vt0.c1, rt2.c3, rt2.c1)) BETWEEN ((((t0.c33)IS NOT(rt0.c1)), CASE rt2.c1  WHEN vt0.c1 THEN NULL END, vt0.c1)) AND ((((((t0.c80)OR(rt2.c0)))AND(rt0.c1)), ABS(DISTINCT rt2.c1), (- (rt0.c1)))))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN rt2.c1 THEN t0.c80 COLLATE NOCASE ELSE '-254648891' END  NULLS LAST, ((CASE rt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt2.c2 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (rt2.c0) AND (rt2.c1))) AND (((vt0.c1)>=(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, rt2.c3, rt2.c1)) BETWEEN ((((t0.c33)IS NOT(rt0.c1)), CASE rt2.c1  WHEN vt0.c1 THEN NULL END, vt0.c1)) AND ((((((t0.c80)OR(rt2.c0)))AND(rt0.c1)), ABS(DISTINCT rt2.c1), (- (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt2 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((((((((((rt2.c0 IN ()))OR(rt2.c0 COLLATE RTRIM)))AND((rt0.c2 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(((rt0.c3) NOT BETWEEN (rt2.c3) AND (vt0.c0)))))AND(((rt2.c0) NOTNULL))))OR((+ (rt2.c1)))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN rt2.c1 THEN t0.c80 COLLATE NOCASE ELSE '-254648891' END  NULLS LAST, ((CASE rt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt2.c2 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (rt2.c0) AND (rt2.c1))) AND (((vt0.c1)>=(NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN rt2 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((((((((((rt2.c0 IN ()))OR(rt2.c0 COLLATE RTRIM)))AND((rt0.c2 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(((rt0.c3) NOT BETWEEN (rt2.c3) AND (vt0.c0)))))AND(((rt2.c0) NOTNULL))))OR((+ (rt2.c1)))) WHERE ((((vt0.c1, rt2.c3, rt2.c1)) BETWEEN ((((t0.c33)IS NOT(rt0.c1)), CASE rt2.c1  WHEN vt0.c1 THEN NULL END, vt0.c1)) AND ((((((t0.c80)OR(rt2.c0)))AND(rt0.c1)), ABS(DISTINCT rt2.c1), (- (rt0.c1)))))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN rt2.c1 THEN t0.c80 COLLATE NOCASE ELSE '-254648891' END  NULLS LAST, ((CASE rt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt2.c2 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (rt2.c0) AND (rt2.c1))) AND (((vt0.c1)>=(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, rt2.c3, rt2.c1)) BETWEEN ((((t0.c33)IS NOT(rt0.c1)), CASE rt2.c1  WHEN vt0.c1 THEN NULL END, vt0.c1)) AND ((((((t0.c80)OR(rt2.c0)))AND(rt0.c1)), ABS(DISTINCT rt2.c1), (- (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt2 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((((((((((rt2.c0 IN ()))OR(rt2.c0 COLLATE RTRIM)))AND((rt0.c2 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(((rt0.c3) NOT BETWEEN (rt2.c3) AND (vt0.c0)))))AND(((rt2.c0) NOTNULL))))OR((+ (rt2.c1)))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN rt2.c1 THEN t0.c80 COLLATE NOCASE ELSE '-254648891' END  NULLS LAST, ((CASE rt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt2.c2 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (rt2.c0) AND (rt2.c1))) AND (((vt0.c1)>=(NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN rt2 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((((((((((rt2.c0 IN ()))OR(rt2.c0 COLLATE RTRIM)))AND((rt0.c2 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(((rt0.c3) NOT BETWEEN (rt2.c3) AND (vt0.c0)))))AND(((rt2.c0) NOTNULL))))OR((+ (rt2.c1)))) WHERE ((((vt0.c1, rt2.c3, rt2.c1)) BETWEEN ((((t0.c33)IS NOT(rt0.c1)), CASE rt2.c1  WHEN vt0.c1 THEN NULL END, vt0.c1)) AND ((((((t0.c80)OR(rt2.c0)))AND(rt0.c1)), ABS(DISTINCT rt2.c1), (- (rt0.c1)))))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN rt2.c1 THEN t0.c80 COLLATE NOCASE ELSE '-254648891' END  NULLS LAST, ((CASE rt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt2.c2 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (rt2.c0) AND (rt2.c1))) AND (((vt0.c1)>=(NULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt2, rt1 WHERE ((((((+ (rt0.c2)))AND(NULL)))AND(((rt2.c2) BETWEEN (t0.c33) AND (rt1.c0))))) ORDER BY (+ (LAST_INSERT_ROWID())) DESC, (- ((((t0.c33, '', x'5bc4')) BETWEEN ((t0.c33, rt2.c0, rt0.c3)) AND ((rt2.c2, rt0.c1, t0.c80))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (rt0.c2)))AND(NULL)))AND(((rt2.c2) BETWEEN (t0.c33) AND (rt1.c0))))) IS TRUE)  as count FROM t0, rt0, vt0, rt2, rt1 ORDER BY (+ (LAST_INSERT_ROWID())) DESC, (- ((((t0.c33, '', x'5bc4')) BETWEEN ((t0.c33, rt2.c0, rt0.c3)) AND ((rt2.c2, rt0.c1, t0.c80))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt2, rt1 WHERE ((((((+ (rt0.c2)))AND(NULL)))AND(((rt2.c2) BETWEEN (t0.c33) AND (rt1.c0))))) ORDER BY (+ (LAST_INSERT_ROWID())) DESC, (- ((((t0.c33, '', x'5bc4')) BETWEEN ((t0.c33, rt2.c0, rt0.c3)) AND ((rt2.c2, rt0.c1, t0.c80))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (rt0.c2)))AND(NULL)))AND(((rt2.c2) BETWEEN (t0.c33) AND (rt1.c0))))) IS TRUE)  as count FROM t0, rt0, vt0, rt2, rt1 ORDER BY (+ (LAST_INSERT_ROWID())) DESC, (- ((((t0.c33, '', x'5bc4')) BETWEEN ((t0.c33, rt2.c0, rt0.c3)) AND ((rt2.c2, rt0.c1, t0.c80))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt2, rt1 WHERE ((((((+ (rt0.c2)))AND(NULL)))AND(((rt2.c2) BETWEEN (t0.c33) AND (rt1.c0))))) ORDER BY (+ (LAST_INSERT_ROWID())) DESC, (- ((((t0.c33, '', x'5bc4')) BETWEEN ((t0.c33, rt2.c0, rt0.c3)) AND ((rt2.c2, rt0.c1, t0.c80))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt2 NATURAL JOIN rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c3)))AND(rt1.c1)))AND(((rt1.c2)&(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c3)))AND(rt1.c1)))AND(((rt1.c2)&(rt2.c0))))) IS TRUE)  as count FROM rt2 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt2 NATURAL JOIN rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c3)))AND(rt1.c1)))AND(((rt1.c2)&(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c3)))AND(rt1.c1)))AND(((rt1.c2)&(rt2.c0))))) IS TRUE)  as count FROM rt2 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt2 NATURAL JOIN rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt2.c3)))AND(rt1.c1)))AND(((rt1.c2)&(rt2.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((0x0)OR((((rt2.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))))OR(rt1.c2)))OR(((rt2.c3)IS NOT(x'')))))OR((rt1.c0 IN (rt0.c3, rt0.c3)))) INNER JOIN rt2 ON ((((rt2.c2) IS FALSE)) BETWEEN (((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt2.c3))) AND (((rt1.c0)&(rt0.c2)))) WHERE (((CAST(rt2.c3 AS BLOB)) NOT BETWEEN ((+ (rt0.c1))) AND ((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) ORDER BY MAX((rt2.c0 IN (rt2.c0)), rt2.c3 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt2.c3 AS BLOB)) NOT BETWEEN ((+ (rt0.c1))) AND ((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((0X0)OR((((rt2.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))))OR(rt1.c2)))OR(((rt2.c3)IS NOT(x'')))))OR((rt1.c0 IN (rt0.c3, rt0.c3)))) INNER JOIN rt2 ON ((((rt2.c2) IS FALSE)) BETWEEN (((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt2.c3))) AND (((rt1.c0)&(rt0.c2)))) ORDER BY MAX((rt2.c0 IN (rt2.c0)), rt2.c3 COLLATE BINARY) ASC);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((0x0)OR((((rt2.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))))OR(rt1.c2)))OR(((rt2.c3)IS NOT(x'')))))OR((rt1.c0 IN (rt0.c3, rt0.c3)))) INNER JOIN rt2 ON ((((rt2.c2) IS FALSE)) BETWEEN (((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt2.c3))) AND (((rt1.c0)&(rt0.c2)))) WHERE (((CAST(rt2.c3 AS BLOB)) NOT BETWEEN ((+ (rt0.c1))) AND ((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) ORDER BY MAX((rt2.c0 IN (rt2.c0)), rt2.c3 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt2.c3 AS BLOB)) NOT BETWEEN ((+ (rt0.c1))) AND ((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((0X0)OR((((rt2.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))))OR(rt1.c2)))OR(((rt2.c3)IS NOT(x'')))))OR((rt1.c0 IN (rt0.c3, rt0.c3)))) INNER JOIN rt2 ON ((((rt2.c2) IS FALSE)) BETWEEN (((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt2.c3))) AND (((rt1.c0)&(rt0.c2)))) ORDER BY MAX((rt2.c0 IN (rt2.c0)), rt2.c3 COLLATE BINARY) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, 0Xffffffff9f725b0f, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, 0Xffffffff9f725b0f, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, 0Xffffffff9f725b0f, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, 0Xffffffff9f725b0f, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, 0Xffffffff9f725b0f, vt0.c1))))));
SELECT ALL * FROM rt2, rt0, rt1, vt0 WHERE (((((((((((rt1.c1) NOTNULL))OR(((((rt2.c2)AND(rt2.c2)))OR(rt2.c3)))))AND(rt2.c0)))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c3))))) ORDER BY ((+ (x'')) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1) NOTNULL))OR(((((rt2.c2)AND(rt2.c2)))OR(rt2.c3)))))AND(rt2.c0)))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt2, rt0, rt1, vt0 ORDER BY ((+ (x'')) IN ()) ASC);
SELECT ALL * FROM rt2, rt0, rt1, vt0 WHERE (((((((((((rt1.c1) NOTNULL))OR(((((rt2.c2)AND(rt2.c2)))OR(rt2.c3)))))AND(rt2.c0)))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c3))))) ORDER BY ((+ (x'')) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1) NOTNULL))OR(((((rt2.c2)AND(rt2.c2)))OR(rt2.c3)))))AND(rt2.c0)))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt2, rt0, rt1, vt0 ORDER BY ((+ (x'')) IN ()) ASC);
SELECT ALL * FROM rt2, rt0, rt1, vt0 WHERE (((((((((((rt1.c1) NOTNULL))OR(((((rt2.c2)AND(rt2.c2)))OR(rt2.c3)))))AND(rt2.c0)))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c3))))) ORDER BY ((+ (x'')) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt1 RIGHT OUTER JOIN rt2 ON '-186789852' WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, t0, rt0, rt1 NOT INDEXED RIGHT OUTER JOIN rt2 ON '-186789852');
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt1 RIGHT OUTER JOIN rt2 ON '-186789852' WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, t0, rt0, rt1 NOT INDEXED RIGHT OUTER JOIN rt2 ON '-186789852');
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt1 RIGHT OUTER JOIN rt2 ON '-186789852' WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((NULL) IS TRUE))OR((((vt0.c0))==((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL) IS TRUE))OR((((vt0.c0))=((vt0.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((NULL) IS TRUE))OR((((vt0.c0))==((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL) IS TRUE))OR((((vt0.c0))=((vt0.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((NULL) IS TRUE))OR((((vt0.c0))==((vt0.c1))))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0, t0, rt2, rt1 WHERE (CASE WHEN ((rt2.c3)+(rt2.c1)) THEN ((rt1.c0) NOT NULL) ELSE ((rt1.c1)>=(NULL)) END) ORDER BY (((0.06155179827781554)) BETWEEN ((rt2.c1)) AND ((((rt1.c2) BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c3)+(rt2.c1)) THEN ((rt1.c0) NOT NULL) ELSE ((rt1.c1)>=(NULL)) END) IS TRUE)  as count FROM vt0, rt0, t0, rt2, rt1 ORDER BY (((0.06155179827781554)) BETWEEN ((rt2.c1)) AND ((((rt1.c2) BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0, rt0, t0, rt2, rt1 WHERE (CASE WHEN ((rt2.c3)+(rt2.c1)) THEN ((rt1.c0) NOT NULL) ELSE ((rt1.c1)>=(NULL)) END) ORDER BY (((0.06155179827781554)) BETWEEN ((rt2.c1)) AND ((((rt1.c2) BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c3)+(rt2.c1)) THEN ((rt1.c0) NOT NULL) ELSE ((rt1.c1)>=(NULL)) END) IS TRUE)  as count FROM vt0, rt0, t0, rt2, rt1 ORDER BY (((0.06155179827781554)) BETWEEN ((rt2.c1)) AND ((((rt1.c2) BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0, rt0, t0, rt2, rt1 WHERE (CASE WHEN ((rt2.c3)+(rt2.c1)) THEN ((rt1.c0) NOT NULL) ELSE ((rt1.c1)>=(NULL)) END) ORDER BY (((0.06155179827781554)) BETWEEN ((rt2.c1)) AND ((((rt1.c2) BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (0.6828796955429784) ORDER BY 0.006840268857914222  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6828796955429784) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY 0.006840268857914222  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (0.6828796955429784) ORDER BY 0.006840268857914222  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6828796955429784) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY 0.006840268857914222  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (0.6828796955429784) ORDER BY 0.006840268857914222  NULLS LAST;
SELECT ALL * FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE ((((~ (rt1.c2)))AND(((((rt1.c1)OR(rt1.c0)))AND(3.3057799E8))))) ORDER BY (- (rt0.c3 COLLATE NOCASE)) DESC, UNLIKELY(DISTINCT ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c80))), CAST(((((((((rt0.c0)AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c0)))AND(t0.c33)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))AND(((((rt1.c1)OR(rt1.c0)))AND(3.3057799E8))))) IS TRUE)  as count FROM rt1, vt0, t0 NATURAL JOIN rt0 ORDER BY (- (rt0.c3 COLLATE NOCASE)) DESC, UNLIKELY(DISTINCT ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c80))), CAST(((((((((rt0.c0)AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c0)))AND(t0.c33)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE ((((~ (rt1.c2)))AND(((((rt1.c1)OR(rt1.c0)))AND(3.3057799E8))))) ORDER BY (- (rt0.c3 COLLATE NOCASE)) DESC, UNLIKELY(DISTINCT ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c80))), CAST(((((((((rt0.c0)AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c0)))AND(t0.c33)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))AND(((((rt1.c1)OR(rt1.c0)))AND(3.3057799E8))))) IS TRUE)  as count FROM rt1, vt0, t0 NATURAL JOIN rt0 ORDER BY (- (rt0.c3 COLLATE NOCASE)) DESC, UNLIKELY(DISTINCT ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c80))), CAST(((((((((rt0.c0)AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c0)))AND(t0.c33)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE ((((~ (rt1.c2)))AND(((((rt1.c1)OR(rt1.c0)))AND(3.3057799E8))))) ORDER BY (- (rt0.c3 COLLATE NOCASE)) DESC, UNLIKELY(DISTINCT ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c80))), CAST(((((((((rt0.c0)AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c0)))AND(t0.c33)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CAST('0.390469950512186' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.390469950512186' AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CAST('0.390469950512186' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.390469950512186' AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CAST('0.390469950512186' AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC;
SELECT * FROM rt0 CROSS JOIN rt2 ON ((rt2.c0 IN ()) IN ((rt2.c3 IN (rt2.c3)))) WHERE (TRIM(DISTINCT ((0.12400241269054535) ISNULL), (rt2.c0 IN ()))) ORDER BY ((((rt0.c0)OR(rt0.c2)))%(rt2.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((0.12400241269054535) ISNULL), (rt2.c0 IN ()))) IS TRUE)  as count FROM rt0 CROSS JOIN rt2 ON ((rt2.c0 IN ()) IN ((rt2.c3 IN (rt2.c3)))) ORDER BY ((((rt0.c0)OR(rt0.c2)))%(rt2.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN rt2 ON ((rt2.c0 IN ()) IN ((rt2.c3 IN (rt2.c3)))) WHERE (TRIM(DISTINCT ((0.12400241269054535) ISNULL), (rt2.c0 IN ()))) ORDER BY ((((rt0.c0)OR(rt0.c2)))%(rt2.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((0.12400241269054535) ISNULL), (rt2.c0 IN ()))) IS TRUE)  as count FROM rt0 CROSS JOIN rt2 ON ((rt2.c0 IN ()) IN ((rt2.c3 IN (rt2.c3)))) ORDER BY ((((rt0.c0)OR(rt0.c2)))%(rt2.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN rt2 ON ((rt2.c0 IN ()) IN ((rt2.c3 IN (rt2.c3)))) WHERE (TRIM(DISTINCT ((0.12400241269054535) ISNULL), (rt2.c0 IN ()))) ORDER BY ((((rt0.c0)OR(rt0.c2)))%(rt2.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM rt2, rt1, rt0, vt0 WHERE (CAST(rt0.c3 AS BLOB)) ORDER BY ((rt0.c3 IN (rt0.c3, 'q馽鳺,↽[')) IN (((rt2.c3) NOT BETWEEN (rt1.c0) AND (rt2.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS BLOB)) IS TRUE)  as count FROM rt2, rt1, rt0, vt0 ORDER BY ((rt0.c3 IN (rt0.c3, 'q馽鳺,↽[')) IN (((rt2.c3) NOT BETWEEN (rt1.c0) AND (rt2.c1))))  NULLS LAST);
SELECT ALL * FROM rt2, rt1, rt0, vt0 WHERE (CAST(rt0.c3 AS BLOB)) ORDER BY ((rt0.c3 IN (rt0.c3, 'q馽鳺,↽[')) IN (((rt2.c3) NOT BETWEEN (rt1.c0) AND (rt2.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS BLOB)) IS TRUE)  as count FROM rt2, rt1, rt0, vt0 ORDER BY ((rt0.c3 IN (rt0.c3, 'q馽鳺,↽[')) IN (((rt2.c3) NOT BETWEEN (rt1.c0) AND (rt2.c1))))  NULLS LAST);
SELECT ALL * FROM rt2, rt1, rt0, vt0 WHERE (CAST(rt0.c3 AS BLOB)) ORDER BY ((rt0.c3 IN (rt0.c3, 'q馽鳺,↽[')) IN (((rt2.c3) NOT BETWEEN (rt1.c0) AND (rt2.c1))))  NULLS LAST;
SELECT ALL * FROM rt2, rt1 WHERE (((((rt1.c1)|(rt2.c3)))-(rt2.c1 COLLATE NOCASE))) ORDER BY CAST(CASE rt2.c0  WHEN rt1.c1 THEN rt1.c0 END AS NUMERIC) ASC, (NOT (((rt1.c2)-(rt2.c3)))) DESC  NULLS FIRST, ((1.7976931348623157E308)>>((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)|(rt2.c3)))-(rt2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CAST(CASE rt2.c0  WHEN rt1.c1 THEN rt1.c0 END AS NUMERIC) ASC, (NOT (((rt1.c2)-(rt2.c3)))) DESC  NULLS FIRST, ((1.7976931348623157E308)>>((rt1.c1 IN ()))));
SELECT ALL * FROM rt2, rt1 WHERE (((((rt1.c1)|(rt2.c3)))-(rt2.c1 COLLATE NOCASE))) ORDER BY CAST(CASE rt2.c0  WHEN rt1.c1 THEN rt1.c0 END AS NUMERIC) ASC, (NOT (((rt1.c2)-(rt2.c3)))) DESC  NULLS FIRST, ((1.7976931348623157E308)>>((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)|(rt2.c3)))-(rt2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CAST(CASE rt2.c0  WHEN rt1.c1 THEN rt1.c0 END AS NUMERIC) ASC, (NOT (((rt1.c2)-(rt2.c3)))) DESC  NULLS FIRST, ((1.7976931348623157E308)>>((rt1.c1 IN ()))));
SELECT ALL * FROM rt2, rt1 WHERE (((((rt1.c1)|(rt2.c3)))-(rt2.c1 COLLATE NOCASE))) ORDER BY CAST(CASE rt2.c0  WHEN rt1.c1 THEN rt1.c0 END AS NUMERIC) ASC, (NOT (((rt1.c2)-(rt2.c3)))) DESC  NULLS FIRST, ((1.7976931348623157E308)>>((rt1.c1 IN ())));
SELECT COUNT(*) FROM rt2 INNER JOIN vt0 ON (((rt2.c3))!=(((rt2.c0 IN ())))) RIGHT OUTER JOIN t0 ON (~ (((rt2.c0)|(vt0.c0)))) WHERE ((((vt0.c0)&(vt0.c0)) IN (CASE WHEN vt0.c0 THEN rt2.c2 ELSE rt2.c2 END))) ORDER BY ((((((((((rt2.c2)>=(t0.c33)))AND((((t0.c80, rt2.c0, rt2.c3)) NOT BETWEEN ((rt2.c3, rt2.c1, rt2.c2)) AND ((rt2.c3, rt2.c1, vt0.c1))))))OR(x'')))AND(CASE WHEN rt2.c0 THEN rt2.c2 ELSE t0.c33 END)))OR((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)&(vt0.c0)) IN (CASE WHEN vt0.c0 THEN rt2.c2 ELSE rt2.c2 END))) IS TRUE)  as count FROM rt2 INNER JOIN vt0 ON (((rt2.c3))<>(((rt2.c0 IN ())))) RIGHT OUTER JOIN t0 ON (~ (((rt2.c0)|(vt0.c0)))) ORDER BY ((((((((((rt2.c2)>=(t0.c33)))AND((((t0.c80, rt2.c0, rt2.c3)) NOT BETWEEN ((rt2.c3, rt2.c1, rt2.c2)) AND ((rt2.c3, rt2.c1, vt0.c1))))))OR(x'')))AND(CASE WHEN rt2.c0 THEN rt2.c2 ELSE t0.c33 END)))OR((NULL IN ()))));
SELECT COUNT(*) FROM rt2 INNER JOIN vt0 ON (((rt2.c3))!=(((rt2.c0 IN ())))) RIGHT OUTER JOIN t0 ON (~ (((rt2.c0)|(vt0.c0)))) WHERE ((((vt0.c0)&(vt0.c0)) IN (CASE WHEN vt0.c0 THEN rt2.c2 ELSE rt2.c2 END))) ORDER BY ((((((((((rt2.c2)>=(t0.c33)))AND((((t0.c80, rt2.c0, rt2.c3)) NOT BETWEEN ((rt2.c3, rt2.c1, rt2.c2)) AND ((rt2.c3, rt2.c1, vt0.c1))))))OR(x'')))AND(CASE WHEN rt2.c0 THEN rt2.c2 ELSE t0.c33 END)))OR((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)&(vt0.c0)) IN (CASE WHEN vt0.c0 THEN rt2.c2 ELSE rt2.c2 END))) IS TRUE)  as count FROM rt2 INNER JOIN vt0 ON (((rt2.c3))<>(((rt2.c0 IN ())))) RIGHT OUTER JOIN t0 ON (~ (((rt2.c0)|(vt0.c0)))) ORDER BY ((((((((((rt2.c2)>=(t0.c33)))AND((((t0.c80, rt2.c0, rt2.c3)) NOT BETWEEN ((rt2.c3, rt2.c1, rt2.c2)) AND ((rt2.c3, rt2.c1, vt0.c1))))))OR(x'')))AND(CASE WHEN rt2.c0 THEN rt2.c2 ELSE t0.c33 END)))OR((NULL IN ()))));
SELECT COUNT(*) FROM rt2 INNER JOIN vt0 ON (((rt2.c3))!=(((rt2.c0 IN ())))) RIGHT OUTER JOIN t0 ON (~ (((rt2.c0)|(vt0.c0)))) WHERE ((((vt0.c0)&(vt0.c0)) IN (CASE WHEN vt0.c0 THEN rt2.c2 ELSE rt2.c2 END))) ORDER BY ((((((((((rt2.c2)>=(t0.c33)))AND((((t0.c80, rt2.c0, rt2.c3)) NOT BETWEEN ((rt2.c3, rt2.c1, rt2.c2)) AND ((rt2.c3, rt2.c1, vt0.c1))))))OR(x'')))AND(CASE WHEN rt2.c0 THEN rt2.c2 ELSE t0.c33 END)))OR((NULL IN ())));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (HEX(((rt0.c2)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c2)>(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (HEX(((rt0.c2)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c2)>(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (HEX(((rt0.c2)>(rt0.c1))));
SELECT * FROM t0, rt2, rt0 WHERE (((((0X4a79b549)IS(rt0.c3)))IS(((t0.c33)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0x4a79b549)IS(rt0.c3)))IS(((t0.c33)=(rt0.c0))))) IS TRUE)  as count FROM t0, rt2, rt0);
SELECT * FROM t0, rt2, rt0 WHERE (((((0X4a79b549)IS(rt0.c3)))IS(((t0.c33)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0x4a79b549)IS(rt0.c3)))IS(((t0.c33)=(rt0.c0))))) IS TRUE)  as count FROM t0, rt2, rt0);
SELECT * FROM t0, rt2, rt0 WHERE (((((0X4a79b549)IS(rt0.c3)))IS(((t0.c33)==(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN ('|0馽e') AND (rt1.c2))  NULLS LAST, CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN ('|0馽e') AND (rt1.c2))  NULLS LAST, CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN ('|0馽e') AND (rt1.c2))  NULLS LAST, CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN ('|0馽e') AND (rt1.c2))  NULLS LAST, CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN ('|0馽e') AND (rt1.c2))  NULLS LAST, CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT * FROM t0, vt0, rt2 NOT INDEXED, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (NULL) AND ((- (t0.c80)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (NULL) AND ((- (t0.c80))))) IS TRUE)  as count FROM t0, vt0, rt2, rt1);
SELECT * FROM t0, vt0, rt2 NOT INDEXED, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (NULL) AND ((- (t0.c80)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (NULL) AND ((- (t0.c80))))) IS TRUE)  as count FROM t0, vt0, rt2, rt1);
SELECT * FROM t0, vt0, rt2 NOT INDEXED, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (NULL) AND ((- (t0.c80)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt1 WHERE ('-575590807');
SELECT SUM(count) FROM (SELECT ALL (('-575590807') IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt1 WHERE ('-575590807');
SELECT SUM(count) FROM (SELECT ALL (('-575590807') IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt1 WHERE ('-575590807');
SELECT ALL * FROM rt2, rt0, vt0, t0 WHERE (((-168322627)<(CASE WHEN t0.c80 THEN rt2.c0 ELSE t0.c33 END))) ORDER BY 0.8498841999914484  NULLS FIRST, CAST(((rt0.c2)AND(rt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-168322627)<(CASE WHEN t0.c80 THEN rt2.c0 ELSE t0.c33 END))) IS TRUE)  as count FROM rt2, rt0, vt0, t0 ORDER BY 0.8498841999914484  NULLS FIRST, CAST(((rt0.c2)AND(rt0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt2, rt0, vt0, t0 WHERE (((-168322627)<(CASE WHEN t0.c80 THEN rt2.c0 ELSE t0.c33 END))) ORDER BY 0.8498841999914484  NULLS FIRST, CAST(((rt0.c2)AND(rt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-168322627)<(CASE WHEN t0.c80 THEN rt2.c0 ELSE t0.c33 END))) IS TRUE)  as count FROM rt2, rt0, vt0, t0 ORDER BY 0.8498841999914484  NULLS FIRST, CAST(((rt0.c2)AND(rt0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt2, rt0, vt0, t0 WHERE (((-168322627)<(CASE WHEN t0.c80 THEN rt2.c0 ELSE t0.c33 END))) ORDER BY 0.8498841999914484  NULLS FIRST, CAST(((rt0.c2)AND(rt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c80)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c80)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c80)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c80)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c80)) AS INTEGER));
SELECT COUNT(*) FROM rt2, rt1 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((CASE t0.c33  WHEN rt2.c0 THEN rt1.c1 ELSE t0.c33 END)>>(rt2.c3)) WHERE ((((vt0.c1)+(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)+(rt1.c0)) IN ())) IS TRUE)  as count FROM rt2, rt1 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((CASE t0.c33  WHEN rt2.c0 THEN rt1.c1 ELSE t0.c33 END)>>(rt2.c3)));
SELECT COUNT(*) FROM rt2, rt1 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((CASE t0.c33  WHEN rt2.c0 THEN rt1.c1 ELSE t0.c33 END)>>(rt2.c3)) WHERE ((((vt0.c1)+(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)+(rt1.c0)) IN ())) IS TRUE)  as count FROM rt2, rt1 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((CASE t0.c33  WHEN rt2.c0 THEN rt1.c1 ELSE t0.c33 END)>>(rt2.c3)));
SELECT COUNT(*) FROM rt2, rt1 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((CASE t0.c33  WHEN rt2.c0 THEN rt1.c1 ELSE t0.c33 END)>>(rt2.c3)) WHERE ((((vt0.c1)+(rt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(vt0.c1 AS TEXT))||(CAST(t0.c80 AS NUMERIC)))) ORDER BY CAST((+ ('2114646180')) AS REAL) ASC, (((t0.c33)) NOT BETWEEN (((- (t0.c33)))) AND ((((rt0.c1)|(vt0.c1))))), (((vt0.c0)<<(rt0.c0)) IN ()) ASC  NULLS LAST, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))||(CAST(t0.c80 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST((+ ('2114646180')) AS REAL) ASC, (((t0.c33)) NOT BETWEEN (((- (t0.c33)))) AND ((((rt0.c1)|(vt0.c1))))), (((vt0.c0)<<(rt0.c0)) IN ()) ASC  NULLS LAST, rt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(vt0.c1 AS TEXT))||(CAST(t0.c80 AS NUMERIC)))) ORDER BY CAST((+ ('2114646180')) AS REAL) ASC, (((t0.c33)) NOT BETWEEN (((- (t0.c33)))) AND ((((rt0.c1)|(vt0.c1))))), (((vt0.c0)<<(rt0.c0)) IN ()) ASC  NULLS LAST, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))||(CAST(t0.c80 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST((+ ('2114646180')) AS REAL) ASC, (((t0.c33)) NOT BETWEEN (((- (t0.c33)))) AND ((((rt0.c1)|(vt0.c1))))), (((vt0.c0)<<(rt0.c0)) IN ()) ASC  NULLS LAST, rt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(vt0.c1 AS TEXT))||(CAST(t0.c80 AS NUMERIC)))) ORDER BY CAST((+ ('2114646180')) AS REAL) ASC, (((t0.c33)) NOT BETWEEN (((- (t0.c33)))) AND ((((rt0.c1)|(vt0.c1))))), (((vt0.c0)<<(rt0.c0)) IN ()) ASC  NULLS LAST, rt0.c1;
SELECT ALL COUNT(*) FROM rt0, t0, rt1, rt2 WHERE (((t0.c33) NOT BETWEEN (CASE rt2.c2  WHEN t0.c80 THEN rt0.c2 END) AND (((rt2.c3)|(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c33) NOT BETWEEN (CASE rt2.c2  WHEN t0.c80 THEN rt0.c2 END) AND (((rt2.c3)|(rt1.c0))))) IS TRUE)  as count FROM rt0, t0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, rt2 WHERE (((t0.c33) NOT BETWEEN (CASE rt2.c2  WHEN t0.c80 THEN rt0.c2 END) AND (((rt2.c3)|(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c33) NOT BETWEEN (CASE rt2.c2  WHEN t0.c80 THEN rt0.c2 END) AND (((rt2.c3)|(rt1.c0))))) IS TRUE)  as count FROM rt0, t0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, rt2 WHERE (((t0.c33) NOT BETWEEN (CASE rt2.c2  WHEN t0.c80 THEN rt0.c2 END) AND (((rt2.c3)|(rt1.c0)))));
SELECT ALL COUNT(*) FROM t0, rt1, vt0 CROSS JOIN rt2 ON x'' CROSS JOIN rt0 ON ((((rt2.c1) BETWEEN (rt1.c0) AND (t0.c80)))<=(((rt2.c2)-(rt0.c3)))) WHERE ((((t0.c80)|(rt2.c0)) IN ())) ORDER BY LOWER((+ (rt2.c3))) DESC  NULLS FIRST, ((((((rt1.c2) NOTNULL))OR((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((t0.c80))))))AND(rt0.c3))  NULLS FIRST, CAST((0.23770766635205298 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c80)|(rt2.c0)) IN ())) IS TRUE)  as count FROM t0, rt1, vt0 CROSS JOIN rt2 ON x'' CROSS JOIN rt0 ON ((((rt2.c1) BETWEEN (rt1.c0) AND (t0.c80)))<=(((rt2.c2)-(rt0.c3)))) ORDER BY LOWER((+ (rt2.c3))) DESC  NULLS FIRST, ((((((rt1.c2) NOTNULL))OR((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((t0.c80))))))AND(rt0.c3))  NULLS FIRST, CAST((0.23770766635205298 IN ()) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 CROSS JOIN rt2 ON x'' CROSS JOIN rt0 ON ((((rt2.c1) BETWEEN (rt1.c0) AND (t0.c80)))<=(((rt2.c2)-(rt0.c3)))) WHERE ((((t0.c80)|(rt2.c0)) IN ())) ORDER BY LOWER((+ (rt2.c3))) DESC  NULLS FIRST, ((((((rt1.c2) NOTNULL))OR((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((t0.c80))))))AND(rt0.c3))  NULLS FIRST, CAST((0.23770766635205298 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c80)|(rt2.c0)) IN ())) IS TRUE)  as count FROM t0, rt1, vt0 CROSS JOIN rt2 ON x'' CROSS JOIN rt0 ON ((((rt2.c1) BETWEEN (rt1.c0) AND (t0.c80)))<=(((rt2.c2)-(rt0.c3)))) ORDER BY LOWER((+ (rt2.c3))) DESC  NULLS FIRST, ((((((rt1.c2) NOTNULL))OR((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((t0.c80))))))AND(rt0.c3))  NULLS FIRST, CAST((0.23770766635205298 IN ()) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 CROSS JOIN rt2 ON x'' CROSS JOIN rt0 ON ((((rt2.c1) BETWEEN (rt1.c0) AND (t0.c80)))<=(((rt2.c2)-(rt0.c3)))) WHERE ((((t0.c80)|(rt2.c0)) IN ())) ORDER BY LOWER((+ (rt2.c3))) DESC  NULLS FIRST, ((((((rt1.c2) NOTNULL))OR((((rt2.c2)) NOT BETWEEN ((rt2.c1)) AND ((t0.c80))))))AND(rt0.c3))  NULLS FIRST, CAST((0.23770766635205298 IN ()) AS INTEGER) ASC;
SELECT ALL * FROM vt0, rt0, t0, rt1, rt2 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0, rt0, t0, rt1, rt2);
SELECT ALL * FROM vt0, rt0, t0, rt1, rt2 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0, rt0, t0, rt1, rt2);
SELECT ALL * FROM vt0, rt0, t0, rt1, rt2 WHERE ((+ (vt0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c80))!=(((- (t0.c80))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c80))<>(((- (t0.c80)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c80))!=(((- (t0.c80))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c80))<>(((- (t0.c80)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c80))!=(((- (t0.c80))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c3) IS FALSE)) ORDER BY (~ ('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (~ ('')) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c3) IS FALSE)) ORDER BY (~ ('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (~ ('')) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c3) IS FALSE)) ORDER BY (~ ('')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1, rt2, vt0 WHERE ((rt1.c1 IN ()) COLLATE BINARY) ORDER BY CASE rt0.c2  WHEN rt1.c0 THEN 0.47933626148159314 END COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, rt1, rt2, vt0 ORDER BY CASE rt0.c2  WHEN rt1.c0 THEN 0.47933626148159314 END COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, rt2, vt0 WHERE ((rt1.c1 IN ()) COLLATE BINARY) ORDER BY CASE rt0.c2  WHEN rt1.c0 THEN 0.47933626148159314 END COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, rt1, rt2, vt0 ORDER BY CASE rt0.c2  WHEN rt1.c0 THEN 0.47933626148159314 END COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, rt2, vt0 WHERE ((rt1.c1 IN ()) COLLATE BINARY) ORDER BY CASE rt0.c2  WHEN rt1.c0 THEN 0.47933626148159314 END COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((rt0.c2 COLLATE NOCASE IN (((rt0.c1)+(rt2.c2))))) ORDER BY (+ ((((rt0.c3))<((NULL))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN (((rt0.c1)+(rt2.c2))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY (+ ((((rt0.c3))<((NULL))))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((rt0.c2 COLLATE NOCASE IN (((rt0.c1)+(rt2.c2))))) ORDER BY (+ ((((rt0.c3))<((NULL))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN (((rt0.c1)+(rt2.c2))))) IS TRUE)  as count FROM rt0, rt2 ORDER BY (+ ((((rt0.c3))<((NULL))))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((rt0.c2 COLLATE NOCASE IN (((rt0.c1)+(rt2.c2))))) ORDER BY (+ ((((rt0.c3))<((NULL))))) ASC;
SELECT ALL * FROM vt0, rt1, rt2, t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<>(CASE WHEN vt0.c1 THEN 0Xffffffff91320af6 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))!=(CASE WHEN vt0.c1 THEN 0Xffffffff91320af6 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1, rt2, t0, rt0);
SELECT ALL * FROM vt0, rt1, rt2, t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<>(CASE WHEN vt0.c1 THEN 0Xffffffff91320af6 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))!=(CASE WHEN vt0.c1 THEN 0Xffffffff91320af6 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1, rt2, t0, rt0);
SELECT ALL * FROM vt0, rt1, rt2, t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<>(CASE WHEN vt0.c1 THEN 0Xffffffff91320af6 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c80)-(t0.c33))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c80)-(t0.c33))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c80)-(t0.c33))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c80)-(t0.c33))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c80)-(t0.c33))) NOT NULL));
SELECT COUNT(*) FROM rt1, t0, vt0, rt2, rt0 WHERE (((((((((((((((((((((rt0.c3)OR(rt2.c1)))AND(rt0.c3)))OR(rt0.c2)))OR(rt2.c0)))OR(rt0.c2)))OR('0.6828796955429784')))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c1)))AND(CAST(rt2.c1 AS NUMERIC)))) ORDER BY (+ ((- (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((rt0.c3)OR(rt2.c1)))AND(rt0.c3)))OR(rt0.c2)))OR(rt2.c0)))OR(rt0.c2)))OR('0.6828796955429784')))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c1)))AND(CAST(rt2.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, t0, vt0, rt2, rt0 ORDER BY (+ ((- (rt1.c2)))));
SELECT COUNT(*) FROM rt1, t0, vt0, rt2, rt0 WHERE (((((((((((((((((((((rt0.c3)OR(rt2.c1)))AND(rt0.c3)))OR(rt0.c2)))OR(rt2.c0)))OR(rt0.c2)))OR('0.6828796955429784')))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c1)))AND(CAST(rt2.c1 AS NUMERIC)))) ORDER BY (+ ((- (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((rt0.c3)OR(rt2.c1)))AND(rt0.c3)))OR(rt0.c2)))OR(rt2.c0)))OR(rt0.c2)))OR('0.6828796955429784')))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c1)))AND(CAST(rt2.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, t0, vt0, rt2, rt0 ORDER BY (+ ((- (rt1.c2)))));
SELECT COUNT(*) FROM rt1, t0, vt0, rt2, rt0 WHERE (((((((((((((((((((((rt0.c3)OR(rt2.c1)))AND(rt0.c3)))OR(rt0.c2)))OR(rt2.c0)))OR(rt0.c2)))OR('0.6828796955429784')))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c1)))AND(CAST(rt2.c1 AS NUMERIC)))) ORDER BY (+ ((- (rt1.c2))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('');
SELECT ALL * FROM rt0, t0, vt0, rt1, rt2 WHERE (((((((((((((((((rt0.c0)AND(rt1.c0)))AND(rt2.c0)))OR(CASE WHEN rt1.c0 THEN rt2.c2 END)))OR(rt2.c3 COLLATE NOCASE)))AND(CAST(rt2.c2 AS INTEGER))))AND(NULL)))OR(((rt2.c3) BETWEEN (NULL) AND (rt2.c1)))))AND('111714779')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND(rt1.c0)))AND(rt2.c0)))OR(CASE WHEN rt1.c0 THEN rt2.c2 END)))OR(rt2.c3 COLLATE NOCASE)))AND(CAST(rt2.c2 AS INTEGER))))AND(NULL)))OR(((rt2.c3) BETWEEN (NULL) AND (rt2.c1)))))AND('111714779'))) IS TRUE)  as count FROM rt0, t0, vt0, rt1, rt2);
SELECT ALL * FROM rt0, t0, vt0, rt1, rt2 WHERE (((((((((((((((((rt0.c0)AND(rt1.c0)))AND(rt2.c0)))OR(CASE WHEN rt1.c0 THEN rt2.c2 END)))OR(rt2.c3 COLLATE NOCASE)))AND(CAST(rt2.c2 AS INTEGER))))AND(NULL)))OR(((rt2.c3) BETWEEN (NULL) AND (rt2.c1)))))AND('111714779')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND(rt1.c0)))AND(rt2.c0)))OR(CASE WHEN rt1.c0 THEN rt2.c2 END)))OR(rt2.c3 COLLATE NOCASE)))AND(CAST(rt2.c2 AS INTEGER))))AND(NULL)))OR(((rt2.c3) BETWEEN (NULL) AND (rt2.c1)))))AND('111714779'))) IS TRUE)  as count FROM rt0, t0, vt0, rt1, rt2);
SELECT ALL * FROM rt0, t0, vt0, rt1, rt2 WHERE (((((((((((((((((rt0.c0)AND(rt1.c0)))AND(rt2.c0)))OR(CASE WHEN rt1.c0 THEN rt2.c2 END)))OR(rt2.c3 COLLATE NOCASE)))AND(CAST(rt2.c2 AS INTEGER))))AND(NULL)))OR(((rt2.c3) BETWEEN (NULL) AND (rt2.c1)))))AND('111714779')));
SELECT * FROM t0 WHERE (((t0.c80 COLLATE RTRIM)&(((t0.c80)|(t0.c33))))) ORDER BY (NOT (t0.c80 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c80 COLLATE RTRIM)&(((t0.c80)|(t0.c33))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c80 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c80 COLLATE RTRIM)&(((t0.c80)|(t0.c33))))) ORDER BY (NOT (t0.c80 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c80 COLLATE RTRIM)&(((t0.c80)|(t0.c33))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c80 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c80 COLLATE RTRIM)&(((t0.c80)|(t0.c33))))) ORDER BY (NOT (t0.c80 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt1, rt0, rt2 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c1)GLOB(t0.c80)))) AND ((((((((((t0.c33)AND(rt1.c2)))OR(rt0.c1)))AND(rt2.c1)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((rt0.c1)GLOB(t0.c80)))) AND ((((((((((t0.c33)AND(rt1.c2)))OR(rt0.c1)))AND(rt2.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt1, rt0, rt2);
SELECT COUNT(*) FROM t0, vt0, rt1, rt0, rt2 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c1)GLOB(t0.c80)))) AND ((((((((((t0.c33)AND(rt1.c2)))OR(rt0.c1)))AND(rt2.c1)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((rt0.c1)GLOB(t0.c80)))) AND ((((((((((t0.c33)AND(rt1.c2)))OR(rt0.c1)))AND(rt2.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt1, rt0, rt2);
SELECT COUNT(*) FROM t0, vt0, rt1, rt0, rt2 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c1)GLOB(t0.c80)))) AND ((((((((((t0.c33)AND(rt1.c2)))OR(rt0.c1)))AND(rt2.c1)))OR(vt0.c0))))));
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((((((((rt2.c3)AND(rt1.c2)))AND(NULL)))OR(-1776061709)))OR(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt2.c3)AND(rt1.c2)))AND(NULL)))OR(-1776061709)))OR(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, rt2);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((((((((rt2.c3)AND(rt1.c2)))AND(NULL)))OR(-1776061709)))OR(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt2.c3)AND(rt1.c2)))AND(NULL)))OR(-1776061709)))OR(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, rt2);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((((((((rt2.c3)AND(rt1.c2)))AND(NULL)))OR(-1776061709)))OR(rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1, rt2, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)AND(CAST('-1619895537' AS INTEGER))))OR((((rt2.c3))>((rt1.c2))))) INNER JOIN rt0 ON CAST(((rt2.c2)>=(t0.c80)) AS BLOB) WHERE (CASE ((vt0.c1)>=(vt0.c1))  WHEN (((rt1.c2, t0.c33, rt1.c1, rt1.c2, '0.006840268857914222')) BETWEEN ((rt0.c1, rt2.c0, rt1.c0, '1177663058', rt0.c0)) AND ((rt2.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c0))) THEN '1018793242' ELSE ((((((((rt2.c3)OR(x'')))OR(rt2.c3)))AND(rt0.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)>=(vt0.c1))  WHEN (((rt1.c2, t0.c33, rt1.c1, rt1.c2, '0.006840268857914222')) BETWEEN ((rt0.c1, rt2.c0, rt1.c0, '1177663058', rt0.c0)) AND ((rt2.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c0))) THEN '1018793242' ELSE ((((((((rt2.c3)OR(x'')))OR(rt2.c3)))AND(rt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM rt1, rt2, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)AND(CAST('-1619895537' AS INTEGER))))OR((((rt2.c3))>((rt1.c2))))) INNER JOIN rt0 ON CAST(((rt2.c2)>=(t0.c80)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, rt2, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)AND(CAST('-1619895537' AS INTEGER))))OR((((rt2.c3))>((rt1.c2))))) INNER JOIN rt0 ON CAST(((rt2.c2)>=(t0.c80)) AS BLOB) WHERE (CASE ((vt0.c1)>=(vt0.c1))  WHEN (((rt1.c2, t0.c33, rt1.c1, rt1.c2, '0.006840268857914222')) BETWEEN ((rt0.c1, rt2.c0, rt1.c0, '1177663058', rt0.c0)) AND ((rt2.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c0))) THEN '1018793242' ELSE ((((((((rt2.c3)OR(x'')))OR(rt2.c3)))AND(rt0.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)>=(vt0.c1))  WHEN (((rt1.c2, t0.c33, rt1.c1, rt1.c2, '0.006840268857914222')) BETWEEN ((rt0.c1, rt2.c0, rt1.c0, '1177663058', rt0.c0)) AND ((rt2.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c0))) THEN '1018793242' ELSE ((((((((rt2.c3)OR(x'')))OR(rt2.c3)))AND(rt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM rt1, rt2, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)AND(CAST('-1619895537' AS INTEGER))))OR((((rt2.c3))>((rt1.c2))))) INNER JOIN rt0 ON CAST(((rt2.c2)>=(t0.c80)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF((vt0.c1 IN ()), vt0.c0)) ORDER BY '|0馽e';
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c1 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY '|0馽e');
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF((vt0.c1 IN ()), vt0.c0)) ORDER BY '|0馽e';
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c1 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY '|0馽e');
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF((vt0.c1 IN ()), vt0.c0)) ORDER BY '|0馽e';
SELECT * FROM rt1, rt2, rt0 WHERE (CAST(rt0.c3 AS REAL)) ORDER BY 'o{E]' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS REAL)) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY 'o{E]' ASC);
SELECT * FROM rt1, rt2, rt0 WHERE (CAST(rt0.c3 AS REAL)) ORDER BY 'o{E]' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS REAL)) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY 'o{E]' ASC);
SELECT * FROM rt1, rt2, rt0 WHERE (CAST(rt0.c3 AS REAL)) ORDER BY 'o{E]' ASC;
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c2))  WHEN NULL THEN (rt1.c1 IN ()) WHEN NULL THEN ((rt1.c0)<=(rt1.c0)) WHEN ((rt1.c1)|(NULL)) THEN x'' WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (~ (rt1.c0)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '1' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c2))  WHEN NULL THEN (rt1.c1 IN ()) WHEN NULL THEN ((rt1.c0)<=(rt1.c0)) WHEN ((rt1.c1)|(NULL)) THEN x'' WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (~ (rt1.c0)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '1' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c2))  WHEN NULL THEN (rt1.c1 IN ()) WHEN NULL THEN ((rt1.c0)<=(rt1.c0)) WHEN ((rt1.c1)|(NULL)) THEN x'' WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (~ (rt1.c0)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '1' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c2))  WHEN NULL THEN (rt1.c1 IN ()) WHEN NULL THEN ((rt1.c0)<=(rt1.c0)) WHEN ((rt1.c1)|(NULL)) THEN x'' WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (~ (rt1.c0)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '1' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c2))  WHEN NULL THEN (rt1.c1 IN ()) WHEN NULL THEN ((rt1.c0)<=(rt1.c0)) WHEN ((rt1.c1)|(NULL)) THEN x'' WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (~ (rt1.c0)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '1' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN (rt1.c1 IN ()) END);
SELECT COUNT(*) FROM rt1, rt2, t0, rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt1.c0)) THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)>=(rt1.c0)) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1, rt2, t0, rt0);
SELECT COUNT(*) FROM rt1, rt2, t0, rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt1.c0)) THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)>=(rt1.c0)) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1, rt2, t0, rt0);
SELECT COUNT(*) FROM rt1, rt2, t0, rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt1.c0)) THEN (rt1.c2 IN ()) END);
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)), 0.1423847292113931));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)), 0.1423847292113931)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)), 0.1423847292113931));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)), 0.1423847292113931)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)), 0.1423847292113931));
SELECT ALL * FROM rt0, rt2, rt1, t0, vt0 WHERE (((json_insert(vt0.c0, t0.c80, vt0.c0))>=(t0.c33)));
SELECT SUM(count) FROM (SELECT ((((json_insert(vt0.c0, t0.c80, vt0.c0))>=(t0.c33))) IS TRUE)  as count FROM rt0, rt2, rt1, t0, vt0);
SELECT ALL * FROM rt0, rt2, rt1, t0, vt0 WHERE (((json_insert(vt0.c0, t0.c80, vt0.c0))>=(t0.c33)));
SELECT SUM(count) FROM (SELECT ((((json_insert(vt0.c0, t0.c80, vt0.c0))>=(t0.c33))) IS TRUE)  as count FROM rt0, rt2, rt1, t0, vt0);
SELECT COUNT(*) FROM t0, rt2, rt1, rt0 WHERE (json_extract(rt0.c3, NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((json_extract(rt0.c3, NULL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt2, rt1, rt0);
SELECT COUNT(*) FROM t0, rt2, rt1, rt0 WHERE (json_extract(rt0.c3, NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((json_extract(rt0.c3, NULL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt2, rt1, rt0);
SELECT COUNT(*) FROM t0, rt2, rt1, rt0 WHERE (json_extract(rt0.c3, NULL) COLLATE BINARY);
SELECT * FROM rt1, t0, rt2 WHERE ((((((',LG6FH')) BETWEEN ((t0.c80)) AND ((t0.c80)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((',LG6FH')) BETWEEN ((t0.c80)) AND ((t0.c80)))) IS FALSE)) IS TRUE)  as count FROM rt1, t0, rt2);
SELECT * FROM rt1, t0, rt2 WHERE ((((((',LG6FH')) BETWEEN ((t0.c80)) AND ((t0.c80)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((',LG6FH')) BETWEEN ((t0.c80)) AND ((t0.c80)))) IS FALSE)) IS TRUE)  as count FROM rt1, t0, rt2);
SELECT * FROM rt1, t0, rt2 WHERE ((((((',LG6FH')) BETWEEN ((t0.c80)) AND ((t0.c80)))) IS FALSE));
SELECT * FROM rt2 LEFT OUTER JOIN rt0 ON (IFNULL(DISTINCT rt0.c2, NULL) IN ()) FULL OUTER JOIN vt0 ON ((((t0.c33)LIKE(vt0.c1))) NOT BETWEEN (((rt1.c0)GLOB(''))) AND ((rt0.c0 IN (t0.c33)))) RIGHT OUTER JOIN t0 ON ('뙒 /v呴U	R' IN ()) INNER JOIN rt1 ON ((((rt2.c1) BETWEEN (rt0.c1) AND (t0.c80)))*(((rt2.c3)==(rt0.c0)))) WHERE (((rt2.c0 COLLATE NOCASE)<=((- (rt0.c3))))) ORDER BY (- (CAST(rt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt2.c0 COLLATE NOCASE)<=((- (rt0.c3))))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt0 ON (IFNULL(DISTINCT rt0.c2, NULL) IN ()) FULL OUTER JOIN vt0 ON ((((t0.c33)LIKE(vt0.c1))) NOT BETWEEN (((rt1.c0)GLOB(''))) AND ((rt0.c0 IN (t0.c33)))) RIGHT OUTER JOIN t0 ON ('뙒 /v呴U	R' IN ()) INNER JOIN rt1 ON ((((rt2.c1) BETWEEN (rt0.c1) AND (t0.c80)))*(((rt2.c3)=(rt0.c0)))) ORDER BY (- (CAST(rt0.c0 AS REAL))) DESC);
SELECT * FROM rt2 LEFT OUTER JOIN rt0 ON (IFNULL(DISTINCT rt0.c2, NULL) IN ()) FULL OUTER JOIN vt0 ON ((((t0.c33)LIKE(vt0.c1))) NOT BETWEEN (((rt1.c0)GLOB(''))) AND ((rt0.c0 IN (t0.c33)))) RIGHT OUTER JOIN t0 ON ('뙒 /v呴U	R' IN ()) INNER JOIN rt1 ON ((((rt2.c1) BETWEEN (rt0.c1) AND (t0.c80)))*(((rt2.c3)==(rt0.c0)))) WHERE (((rt2.c0 COLLATE NOCASE)<=((- (rt0.c3))))) ORDER BY (- (CAST(rt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt2.c0 COLLATE NOCASE)<=((- (rt0.c3))))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt0 ON (IFNULL(DISTINCT rt0.c2, NULL) IN ()) FULL OUTER JOIN vt0 ON ((((t0.c33)LIKE(vt0.c1))) NOT BETWEEN (((rt1.c0)GLOB(''))) AND ((rt0.c0 IN (t0.c33)))) RIGHT OUTER JOIN t0 ON ('뙒 /v呴U	R' IN ()) INNER JOIN rt1 ON ((((rt2.c1) BETWEEN (rt0.c1) AND (t0.c80)))*(((rt2.c3)=(rt0.c0)))) ORDER BY (- (CAST(rt0.c0 AS REAL))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c80))>((rt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c80))>((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c80))>((rt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c80))>((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c80))>((rt0.c1))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((rt1.c0)AND(rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)AND(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt2);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((rt1.c0)AND(rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)AND(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt2);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((rt1.c0)AND(rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0, rt1, rt2 WHERE (((((rt2.c0) IS FALSE)) NOT BETWEEN (TRIM(vt0.c1, rt1.c2)) AND (t0.c80 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c0) IS FALSE)) NOT BETWEEN (TRIM(vt0.c1, rt1.c2)) AND (t0.c80 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, rt1, rt2);
SELECT ALL COUNT(*) FROM vt0, t0, rt1, rt2 WHERE (((((rt2.c0) IS FALSE)) NOT BETWEEN (TRIM(vt0.c1, rt1.c2)) AND (t0.c80 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c0) IS FALSE)) NOT BETWEEN (TRIM(vt0.c1, rt1.c2)) AND (t0.c80 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, rt1, rt2);
SELECT ALL COUNT(*) FROM vt0, t0, rt1, rt2 WHERE (((((rt2.c0) IS FALSE)) NOT BETWEEN (TRIM(vt0.c1, rt1.c2)) AND (t0.c80 COLLATE NOCASE)));
SELECT ALL * FROM rt2 INNER JOIN rt1 ON ((((((rt0.c1))<=((0.17127518400200004)))))>=(((~ (rt1.c0))))) FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((QUOTE(rt2.c0)))) LEFT OUTER JOIN t0 ON (- ((rt0.c2 IN ()))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON ((((((rt0.c1))<=((0.17127518400200004)))))>=(((~ (rt1.c0))))) FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((QUOTE(rt2.c0)))) LEFT OUTER JOIN t0 ON (- ((rt0.c2 IN ()))));
SELECT ALL * FROM rt2 INNER JOIN rt1 ON ((((((rt0.c1))<=((0.17127518400200004)))))>=(((~ (rt1.c0))))) FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((QUOTE(rt2.c0)))) LEFT OUTER JOIN t0 ON (- ((rt0.c2 IN ()))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON ((((((rt0.c1))<=((0.17127518400200004)))))>=(((~ (rt1.c0))))) FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((QUOTE(rt2.c0)))) LEFT OUTER JOIN t0 ON (- ((rt0.c2 IN ()))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON CASE ((((rt2.c1)OR(rt0.c2)))OR(rt2.c2))  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END FULL OUTER JOIN rt2 ON (((rt1.c0 IN ('-1619895537'))) IS TRUE) FULL OUTER JOIN vt0 ON (((+ (t0.c33)))*(UNICODE(rt0.c1))) FULL OUTER JOIN t0 ON rt0.c1 WHERE ((((rt2.c2)*(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt2.c2)*(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CASE ((((rt2.c1)OR(rt0.c2)))OR(rt2.c2))  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END FULL OUTER JOIN rt2 ON (((rt1.c0 IN ('-1619895537'))) IS TRUE) FULL OUTER JOIN vt0 ON (((+ (t0.c33)))*(UNICODE(rt0.c1))) FULL OUTER JOIN t0 ON rt0.c1);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON CASE ((((rt2.c1)OR(rt0.c2)))OR(rt2.c2))  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END FULL OUTER JOIN rt2 ON (((rt1.c0 IN ('-1619895537'))) IS TRUE) FULL OUTER JOIN vt0 ON (((+ (t0.c33)))*(UNICODE(rt0.c1))) FULL OUTER JOIN t0 ON rt0.c1 WHERE ((((rt2.c2)*(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt2.c2)*(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CASE ((((rt2.c1)OR(rt0.c2)))OR(rt2.c2))  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END FULL OUTER JOIN rt2 ON (((rt1.c0 IN ('-1619895537'))) IS TRUE) FULL OUTER JOIN vt0 ON (((+ (t0.c33)))*(UNICODE(rt0.c1))) FULL OUTER JOIN t0 ON rt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 CROSS JOIN rt2 ON (((t0.c80)OR(rt2.c1)) IN ()) WHERE (NULLIF(t0.c80, rt2.c1) COLLATE BINARY) ORDER BY ((((rt2.c0) NOT NULL))GLOB('pU')) DESC, ((((rt1.c1)/(rt1.c2)))*(IFNULL(rt2.c0, rt1.c2))) DESC, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c80, rt2.c1) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt1 CROSS JOIN rt2 ON (((t0.c80)OR(rt2.c1)) IN ()) ORDER BY ((((rt2.c0) NOT NULL))GLOB('pU')) DESC, ((((rt1.c1)/(rt1.c2)))*(IFNULL(rt2.c0, rt1.c2))) DESC, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 CROSS JOIN rt2 ON (((t0.c80)OR(rt2.c1)) IN ()) WHERE (NULLIF(t0.c80, rt2.c1) COLLATE BINARY) ORDER BY ((((rt2.c0) NOT NULL))GLOB('pU')) DESC, ((((rt1.c1)/(rt1.c2)))*(IFNULL(rt2.c0, rt1.c2))) DESC, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c80, rt2.c1) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt1 CROSS JOIN rt2 ON (((t0.c80)OR(rt2.c1)) IN ()) ORDER BY ((((rt2.c0) NOT NULL))GLOB('pU')) DESC, ((((rt1.c1)/(rt1.c2)))*(IFNULL(rt2.c0, rt1.c2))) DESC, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 CROSS JOIN rt2 ON (((t0.c80)OR(rt2.c1)) IN ()) WHERE (NULLIF(t0.c80, rt2.c1) COLLATE BINARY) ORDER BY ((((rt2.c0) NOT NULL))GLOB('pU')) DESC, ((((rt1.c1)/(rt1.c2)))*(IFNULL(rt2.c0, rt1.c2))) DESC, vt0.c0  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE ((rt0.c2 IN (t0.c80)) COLLATE BINARY) ORDER BY '0.12400241269054535'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (t0.c80)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0, rt1 ORDER BY '0.12400241269054535'  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE ((rt0.c2 IN (t0.c80)) COLLATE BINARY) ORDER BY '0.12400241269054535'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (t0.c80)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0, rt1 ORDER BY '0.12400241269054535'  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE ((rt0.c2 IN (t0.c80)) COLLATE BINARY) ORDER BY '0.12400241269054535'  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt2 WHERE (((vt0.c0)AND(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, rt2);
SELECT COUNT(*) FROM vt0, rt2 WHERE (((vt0.c0)AND(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, rt2);
SELECT COUNT(*) FROM vt0, rt2 WHERE (((vt0.c0)AND(LOWER(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((('-1176611114')<<(x'')))AND(((rt0.c1) IS TRUE))))AND(((rt0.c3) ISNULL))))AND((((rt0.c1, rt0.c1, rt0.c2, 0Xfffffffff5f799bd, rt0.c0))==((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c3))))))OR(((rt0.c3)OR(rt0.c0))))) ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS FIRST, (- (((rt0.c1)>=(rt0.c2))))  NULLS LAST, CASE (~ (rt0.c0))  WHEN (rt0.c1 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((((((((('-1176611114')<<(x'')))AND(((rt0.c1) IS TRUE))))AND(((rt0.c3) ISNULL))))AND((((rt0.c1, rt0.c1, rt0.c2, 0Xfffffffff5f799bd, rt0.c0))==((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c3))))))OR(((rt0.c3)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS FIRST, (- (((rt0.c1)>=(rt0.c2))))  NULLS LAST, CASE (~ (rt0.c0))  WHEN (rt0.c1 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((('-1176611114')<<(x'')))AND(((rt0.c1) IS TRUE))))AND(((rt0.c3) ISNULL))))AND((((rt0.c1, rt0.c1, rt0.c2, 0Xfffffffff5f799bd, rt0.c0))==((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c3))))))OR(((rt0.c3)OR(rt0.c0))))) ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS FIRST, (- (((rt0.c1)>=(rt0.c2))))  NULLS LAST, CASE (~ (rt0.c0))  WHEN (rt0.c1 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((((((((('-1176611114')<<(x'')))AND(((rt0.c1) IS TRUE))))AND(((rt0.c3) ISNULL))))AND((((rt0.c1, rt0.c1, rt0.c2, 0Xfffffffff5f799bd, rt0.c0))==((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c3))))))OR(((rt0.c3)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS FIRST, (- (((rt0.c1)>=(rt0.c2))))  NULLS LAST, CASE (~ (rt0.c0))  WHEN (rt0.c1 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((('-1176611114')<<(x'')))AND(((rt0.c1) IS TRUE))))AND(((rt0.c3) ISNULL))))AND((((rt0.c1, rt0.c1, rt0.c2, 0Xfffffffff5f799bd, rt0.c0))==((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c3))))))OR(((rt0.c3)OR(rt0.c0))))) ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS FIRST, (- (((rt0.c1)>=(rt0.c2))))  NULLS LAST, CASE (~ (rt0.c0))  WHEN (rt0.c1 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END;
SELECT ALL * FROM vt0, rt1, t0, rt0, rt2 WHERE ((((rt2.c3, rt0.c2, rt1.c2)) BETWEEN ((((vt0.c1)AND(vt0.c0)), CAST('-2071659631' AS BLOB), ((0.8292231376522591) BETWEEN (rt1.c0) AND (vt0.c1)))) AND ((CAST(t0.c80 AS REAL), (+ (NULL)), CAST(t0.c80 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c3, rt0.c2, rt1.c2)) BETWEEN ((((vt0.c1)AND(vt0.c0)), CAST('-2071659631' AS BLOB), ((0.8292231376522591) BETWEEN (rt1.c0) AND (vt0.c1)))) AND ((CAST(t0.c80 AS REAL), (+ (NULL)), CAST(t0.c80 AS NUMERIC))))) IS TRUE)  as count FROM vt0, rt1, t0, rt0, rt2);
SELECT ALL * FROM vt0, rt1, t0, rt0, rt2 WHERE ((((rt2.c3, rt0.c2, rt1.c2)) BETWEEN ((((vt0.c1)AND(vt0.c0)), CAST('-2071659631' AS BLOB), ((0.8292231376522591) BETWEEN (rt1.c0) AND (vt0.c1)))) AND ((CAST(t0.c80 AS REAL), (+ (NULL)), CAST(t0.c80 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c3, rt0.c2, rt1.c2)) BETWEEN ((((vt0.c1)AND(vt0.c0)), CAST('-2071659631' AS BLOB), ((0.8292231376522591) BETWEEN (rt1.c0) AND (vt0.c1)))) AND ((CAST(t0.c80 AS REAL), (+ (NULL)), CAST(t0.c80 AS NUMERIC))))) IS TRUE)  as count FROM vt0, rt1, t0, rt0, rt2);
SELECT ALL * FROM vt0, rt1, t0, rt0, rt2 WHERE ((((rt2.c3, rt0.c2, rt1.c2)) BETWEEN ((((vt0.c1)AND(vt0.c0)), CAST('-2071659631' AS BLOB), ((0.8292231376522591) BETWEEN (rt1.c0) AND (vt0.c1)))) AND ((CAST(t0.c80 AS REAL), (+ (NULL)), CAST(t0.c80 AS NUMERIC)))));
SELECT * FROM rt1, rt0, vt0 WHERE ((((vt0.c1, rt1.c2, rt0.c3)) BETWEEN ((0.5850928959610268, ((rt0.c0)==(rt0.c1)), 0.5187069929426803)) AND ((CAST(vt0.c0 AS NUMERIC), (vt0.c1 IN (vt0.c0)), CAST('' AS INTEGER))))) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()), (((rt0.c0)==(rt1.c2)) IN (LOWER(vt0.c0), LIKELIHOOD(rt0.c0, 0.7992829777788436))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, rt1.c2, rt0.c3)) BETWEEN ((0.5850928959610268, ((rt0.c0)==(rt0.c1)), 0.5187069929426803)) AND ((CAST(vt0.c0 AS NUMERIC), (vt0.c1 IN (vt0.c0)), CAST('' AS INTEGER))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()), (((rt0.c0)=(rt1.c2)) IN (LOWER(vt0.c0), LIKELIHOOD(rt0.c0, 0.7992829777788436))) ASC);
SELECT * FROM rt1, rt0, vt0 WHERE ((((vt0.c1, rt1.c2, rt0.c3)) BETWEEN ((0.5850928959610268, ((rt0.c0)==(rt0.c1)), 0.5187069929426803)) AND ((CAST(vt0.c0 AS NUMERIC), (vt0.c1 IN (vt0.c0)), CAST('' AS INTEGER))))) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()), (((rt0.c0)==(rt1.c2)) IN (LOWER(vt0.c0), LIKELIHOOD(rt0.c0, 0.7992829777788436))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, rt1.c2, rt0.c3)) BETWEEN ((0.5850928959610268, ((rt0.c0)==(rt0.c1)), 0.5187069929426803)) AND ((CAST(vt0.c0 AS NUMERIC), (vt0.c1 IN (vt0.c0)), CAST('' AS INTEGER))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()), (((rt0.c0)=(rt1.c2)) IN (LOWER(vt0.c0), LIKELIHOOD(rt0.c0, 0.7992829777788436))) ASC);
SELECT * FROM rt1, rt0, vt0 WHERE ((((vt0.c1, rt1.c2, rt0.c3)) BETWEEN ((0.5850928959610268, ((rt0.c0)==(rt0.c1)), 0.5187069929426803)) AND ((CAST(vt0.c0 AS NUMERIC), (vt0.c1 IN (vt0.c0)), CAST('' AS INTEGER))))) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()), (((rt0.c0)==(rt1.c2)) IN (LOWER(vt0.c0), LIKELIHOOD(rt0.c0, 0.7992829777788436))) ASC;
SELECT ALL COUNT(*) FROM rt2 WHERE (json_type(rt2.c2) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((json_type(rt2.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (json_type(rt2.c2) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((json_type(rt2.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (json_type(rt2.c2) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt2, rt0, t0, vt0, rt1 WHERE (CASE WHEN ((rt1.c2)>=(rt0.c2)) THEN (rt0.c0 IN ()) END) ORDER BY UPPER((((rt1.c2, t0.c80, x'dca047a1')) BETWEEN ((rt1.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt1.c1, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)>=(rt0.c2)) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt2, rt0, t0, vt0, rt1 ORDER BY UPPER((((rt1.c2, t0.c80, x'dca047a1')) BETWEEN ((rt1.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt1.c1, rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt0, t0, vt0, rt1 WHERE (CASE WHEN ((rt1.c2)>=(rt0.c2)) THEN (rt0.c0 IN ()) END) ORDER BY UPPER((((rt1.c2, t0.c80, x'dca047a1')) BETWEEN ((rt1.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt1.c1, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)>=(rt0.c2)) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt2, rt0, t0, vt0, rt1 ORDER BY UPPER((((rt1.c2, t0.c80, x'dca047a1')) BETWEEN ((rt1.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt1.c1, rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt0, t0, vt0, rt1 WHERE (CASE WHEN ((rt1.c2)>=(rt0.c2)) THEN (rt0.c0 IN ()) END) ORDER BY UPPER((((rt1.c2, t0.c80, x'dca047a1')) BETWEEN ((rt1.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt1.c1, rt0.c2))))  NULLS LAST;
SELECT * FROM rt1, t0, rt0, rt2 WHERE (PRINTF(((rt2.c1) BETWEEN (rt0.c0) AND (t0.c33))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((rt2.c1) BETWEEN (rt0.c0) AND (t0.c33)))) IS TRUE)  as count FROM rt1, t0, rt0, rt2);
SELECT * FROM rt1, t0, rt0, rt2 WHERE (PRINTF(((rt2.c1) BETWEEN (rt0.c0) AND (t0.c33))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((rt2.c1) BETWEEN (rt0.c0) AND (t0.c33)))) IS TRUE)  as count FROM rt1, t0, rt0, rt2);
SELECT * FROM rt1, t0, rt0, rt2 WHERE (PRINTF(((rt2.c1) BETWEEN (rt0.c0) AND (t0.c33))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON -1.776061709E9 COLLATE BINARY FULL OUTER JOIN t0 ON ((((PRINTF(rt0.c0))OR(ABS(rt0.c3))))OR(rt1.c1)) INNER JOIN rt0 ON CAST(CASE WHEN t0.c33 THEN -523636938 ELSE rt0.c1 END AS REAL) WHERE ((((rt1.c1 IN ()))LIKE((((NULL))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))LIKE((((NULL))<=((rt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON -1.776061709E9 COLLATE BINARY FULL OUTER JOIN t0 ON ((((PRINTF(rt0.c0))OR(ABS(rt0.c3))))OR(rt1.c1)) INNER JOIN rt0 ON CAST(CASE WHEN t0.c33 THEN -523636938 ELSE rt0.c1 END AS REAL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON -1.776061709E9 COLLATE BINARY FULL OUTER JOIN t0 ON ((((PRINTF(rt0.c0))OR(ABS(rt0.c3))))OR(rt1.c1)) INNER JOIN rt0 ON CAST(CASE WHEN t0.c33 THEN -523636938 ELSE rt0.c1 END AS REAL) WHERE ((((rt1.c1 IN ()))LIKE((((NULL))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))LIKE((((NULL))<=((rt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON -1.776061709E9 COLLATE BINARY FULL OUTER JOIN t0 ON ((((PRINTF(rt0.c0))OR(ABS(rt0.c3))))OR(rt1.c1)) INNER JOIN rt0 ON CAST(CASE WHEN t0.c33 THEN -523636938 ELSE rt0.c1 END AS REAL));
SELECT COUNT(*) FROM t0, vt0, rt2 NATURAL JOIN rt1 WHERE (((NULL)>=(((rt1.c1)AND(t0.c33)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(((rt1.c1)AND(t0.c33))))) IS TRUE)  as count FROM t0, vt0, rt2 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0, vt0, rt2 NATURAL JOIN rt1 WHERE (((NULL)>=(((rt1.c1)AND(t0.c33)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(((rt1.c1)AND(t0.c33))))) IS TRUE)  as count FROM t0, vt0, rt2 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0, vt0, rt2 NATURAL JOIN rt1 WHERE (((NULL)>=(((rt1.c1)AND(t0.c33)))));
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN CAST(rt2.c0 AS TEXT) THEN rt2.c0 COLLATE NOCASE WHEN ((((rt2.c1)OR(rt2.c0)))AND(rt2.c1)) THEN ((((rt2.c2)AND(rt2.c3)))AND(rt2.c2)) WHEN rt2.c0 THEN ((rt2.c3) IS FALSE) END) ORDER BY ((((rt2.c3) NOTNULL))<=(CASE rt2.c1  WHEN x'' THEN rt2.c3 ELSE rt2.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt2.c0 AS TEXT) THEN rt2.c0 COLLATE NOCASE WHEN ((((rt2.c1)OR(rt2.c0)))AND(rt2.c1)) THEN ((((rt2.c2)AND(rt2.c3)))AND(rt2.c2)) WHEN rt2.c0 THEN ((rt2.c3) IS FALSE) END) IS TRUE)  as count FROM rt2 ORDER BY ((((rt2.c3) NOTNULL))<=(CASE rt2.c1  WHEN x'' THEN rt2.c3 ELSE rt2.c2 END)) DESC);
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN CAST(rt2.c0 AS TEXT) THEN rt2.c0 COLLATE NOCASE WHEN ((((rt2.c1)OR(rt2.c0)))AND(rt2.c1)) THEN ((((rt2.c2)AND(rt2.c3)))AND(rt2.c2)) WHEN rt2.c0 THEN ((rt2.c3) IS FALSE) END) ORDER BY ((((rt2.c3) NOTNULL))<=(CASE rt2.c1  WHEN x'' THEN rt2.c3 ELSE rt2.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt2.c0 AS TEXT) THEN rt2.c0 COLLATE NOCASE WHEN ((((rt2.c1)OR(rt2.c0)))AND(rt2.c1)) THEN ((((rt2.c2)AND(rt2.c3)))AND(rt2.c2)) WHEN rt2.c0 THEN ((rt2.c3) IS FALSE) END) IS TRUE)  as count FROM rt2 ORDER BY ((((rt2.c3) NOTNULL))<=(CASE rt2.c1  WHEN x'' THEN rt2.c3 ELSE rt2.c2 END)) DESC);
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN CAST(rt2.c0 AS TEXT) THEN rt2.c0 COLLATE NOCASE WHEN ((((rt2.c1)OR(rt2.c0)))AND(rt2.c1)) THEN ((((rt2.c2)AND(rt2.c3)))AND(rt2.c2)) WHEN rt2.c0 THEN ((rt2.c3) IS FALSE) END) ORDER BY ((((rt2.c3) NOTNULL))<=(CASE rt2.c1  WHEN x'' THEN rt2.c3 ELSE rt2.c2 END)) DESC;
SELECT COUNT(*) FROM vt0, rt1, rt0, rt2 WHERE ((((((vt0.c1, rt2.c1, rt1.c0)) BETWEEN ((NULL, rt1.c0, rt0.c1)) AND ((rt1.c2, rt1.c0, vt0.c1)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt1.c1))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, rt2.c1, rt1.c0)) BETWEEN ((NULL, rt1.c0, rt0.c1)) AND ((rt1.c2, rt1.c0, vt0.c1)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt1.c1))) IS TRUE)  as count FROM vt0, rt1, rt0, rt2 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM vt0, rt1, rt0, rt2 WHERE ((((((vt0.c1, rt2.c1, rt1.c0)) BETWEEN ((NULL, rt1.c0, rt0.c1)) AND ((rt1.c2, rt1.c0, vt0.c1)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt1.c1))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, rt2.c1, rt1.c0)) BETWEEN ((NULL, rt1.c0, rt0.c1)) AND ((rt1.c2, rt1.c0, vt0.c1)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt1.c1))) IS TRUE)  as count FROM vt0, rt1, rt0, rt2 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM vt0, rt1, rt0, rt2 WHERE ((((((vt0.c1, rt2.c1, rt1.c0)) BETWEEN ((NULL, rt1.c0, rt0.c1)) AND ((rt1.c2, rt1.c0, vt0.c1)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt1.c1))) ORDER BY rt0.c1 ASC;
SELECT * FROM rt1 NOT INDEXED, t0, rt2, vt0 WHERE (CASE ((rt2.c0)GLOB(vt0.c0))  WHEN NULL THEN ((rt2.c2)/(rt2.c3)) WHEN ((rt1.c2)>=(vt0.c0)) THEN ((((t0.c33)OR(rt1.c0)))OR(t0.c80)) WHEN ((rt2.c3) NOT BETWEEN (rt2.c2) AND (rt2.c0)) THEN (+ (vt0.c0)) END) ORDER BY (('얩m')>>(rt2.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt2.c0)GLOB(vt0.c0))  WHEN NULL THEN ((rt2.c2)/(rt2.c3)) WHEN ((rt1.c2)>=(vt0.c0)) THEN ((((t0.c33)OR(rt1.c0)))OR(t0.c80)) WHEN ((rt2.c3) NOT BETWEEN (rt2.c2) AND (rt2.c0)) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM rt1, t0, rt2, vt0 ORDER BY (('얩m')>>(rt2.c0)));
SELECT * FROM rt1 NOT INDEXED, t0, rt2, vt0 WHERE (CASE ((rt2.c0)GLOB(vt0.c0))  WHEN NULL THEN ((rt2.c2)/(rt2.c3)) WHEN ((rt1.c2)>=(vt0.c0)) THEN ((((t0.c33)OR(rt1.c0)))OR(t0.c80)) WHEN ((rt2.c3) NOT BETWEEN (rt2.c2) AND (rt2.c0)) THEN (+ (vt0.c0)) END) ORDER BY (('얩m')>>(rt2.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt2.c0)GLOB(vt0.c0))  WHEN NULL THEN ((rt2.c2)/(rt2.c3)) WHEN ((rt1.c2)>=(vt0.c0)) THEN ((((t0.c33)OR(rt1.c0)))OR(t0.c80)) WHEN ((rt2.c3) NOT BETWEEN (rt2.c2) AND (rt2.c0)) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM rt1, t0, rt2, vt0 ORDER BY (('얩m')>>(rt2.c0)));
SELECT * FROM rt1 NOT INDEXED, t0, rt2, vt0 WHERE (CASE ((rt2.c0)GLOB(vt0.c0))  WHEN NULL THEN ((rt2.c2)/(rt2.c3)) WHEN ((rt1.c2)>=(vt0.c0)) THEN ((((t0.c33)OR(rt1.c0)))OR(t0.c80)) WHEN ((rt2.c3) NOT BETWEEN (rt2.c2) AND (rt2.c0)) THEN (+ (vt0.c0)) END) ORDER BY (('얩m')>>(rt2.c0));
SELECT COUNT(*) FROM rt0, vt0, rt1 CROSS JOIN t0 ON ((((rt1.c1) NOTNULL))LIKE((((t0.c33))<=((t0.c80))))) WHERE (CASE WHEN load_extension(rt0.c3) THEN CASE WHEN t0.c33 THEN rt0.c1 WHEN rt1.c2 THEN 0.10729479683476972 WHEN rt1.c2 THEN rt1.c0 ELSE x'' END ELSE '59APVqB<' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN load_extension(rt0.c3) THEN CASE WHEN t0.c33 THEN rt0.c1 WHEN rt1.c2 THEN 0.10729479683476972 WHEN rt1.c2 THEN rt1.c0 ELSE x'' END ELSE '59APVqB<' END) IS TRUE)  as count FROM rt0, vt0, rt1 CROSS JOIN t0 ON ((((rt1.c1) NOTNULL))LIKE((((t0.c33))<=((t0.c80))))));
SELECT COUNT(*) FROM rt0, vt0, rt1 CROSS JOIN t0 ON ((((rt1.c1) NOTNULL))LIKE((((t0.c33))<=((t0.c80))))) WHERE (CASE WHEN load_extension(rt0.c3) THEN CASE WHEN t0.c33 THEN rt0.c1 WHEN rt1.c2 THEN 0.10729479683476972 WHEN rt1.c2 THEN rt1.c0 ELSE x'' END ELSE '59APVqB<' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN load_extension(rt0.c3) THEN CASE WHEN t0.c33 THEN rt0.c1 WHEN rt1.c2 THEN 0.10729479683476972 WHEN rt1.c2 THEN rt1.c0 ELSE x'' END ELSE '59APVqB<' END) IS TRUE)  as count FROM rt0, vt0, rt1 CROSS JOIN t0 ON ((((rt1.c1) NOTNULL))LIKE((((t0.c33))<=((t0.c80))))));
SELECT ALL * FROM rt2 WHERE (((rt2.c0)<(NULL)) COLLATE BINARY) ORDER BY ((rt2.c3)|(rt2.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt2.c0)<(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c3)|(rt2.c3)) COLLATE RTRIM);
SELECT ALL * FROM rt2 WHERE (((rt2.c0)<(NULL)) COLLATE BINARY) ORDER BY ((rt2.c3)|(rt2.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt2.c0)<(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c3)|(rt2.c3)) COLLATE RTRIM);
SELECT ALL * FROM rt2 WHERE (((rt2.c0)<(NULL)) COLLATE BINARY) ORDER BY ((rt2.c3)|(rt2.c3)) COLLATE RTRIM;
SELECT COUNT(*) FROM t0, rt1, rt2 WHERE (((((rt1.c1) ISNULL)) NOT BETWEEN (((((x'c9091fee')AND(t0.c80)))AND(rt1.c1))) AND (((t0.c33)||(rt2.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) NOT BETWEEN (((((x'c9091fee')AND(t0.c80)))AND(rt1.c1))) AND (((t0.c33)||(rt2.c3))))) IS TRUE)  as count FROM t0, rt1, rt2);
SELECT COUNT(*) FROM t0, rt1, rt2 WHERE (((((rt1.c1) ISNULL)) NOT BETWEEN (((((x'c9091fee')AND(t0.c80)))AND(rt1.c1))) AND (((t0.c33)||(rt2.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) NOT BETWEEN (((((x'c9091fee')AND(t0.c80)))AND(rt1.c1))) AND (((t0.c33)||(rt2.c3))))) IS TRUE)  as count FROM t0, rt1, rt2);
SELECT COUNT(*) FROM t0, rt1, rt2 WHERE (((((rt1.c1) ISNULL)) NOT BETWEEN (((((x'c9091fee')AND(t0.c80)))AND(rt1.c1))) AND (((t0.c33)||(rt2.c3)))));
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR(CAST(rt1.c2 AS INTEGER))))OR('' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c2 AS NUMERIC))OR(CAST(rt1.c2 AS INTEGER))))OR('' COLLATE RTRIM))) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR(CAST(rt1.c2 AS INTEGER))))OR('' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c2 AS NUMERIC))OR(CAST(rt1.c2 AS INTEGER))))OR('' COLLATE RTRIM))) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR(CAST(rt1.c2 AS INTEGER))))OR('' COLLATE RTRIM)));
SELECT ALL * FROM rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((t0.c80)<=(t0.c33))) AND (CASE rt1.c0  WHEN t0.c80 THEN t0.c80 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((t0.c80)<=(t0.c33))) AND (CASE rt1.c0  WHEN t0.c80 THEN t0.c80 END))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((t0.c80)<=(t0.c33))) AND (CASE rt1.c0  WHEN t0.c80 THEN t0.c80 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((t0.c80)<=(t0.c33))) AND (CASE rt1.c0  WHEN t0.c80 THEN t0.c80 END))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((t0.c80)<=(t0.c33))) AND (CASE rt1.c0  WHEN t0.c80 THEN t0.c80 END)));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((-575590807) BETWEEN (((((rt1.c1)OR(t0.c80)))OR(t0.c80))) AND ((~ (t0.c80)))) WHERE ((('r*')GLOB(t0.c33)));
SELECT SUM(count) FROM (SELECT (((('r*')GLOB(t0.c33))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((-575590807) BETWEEN (((((rt1.c1)OR(t0.c80)))OR(t0.c80))) AND ((~ (t0.c80)))));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((-575590807) BETWEEN (((((rt1.c1)OR(t0.c80)))OR(t0.c80))) AND ((~ (t0.c80)))) WHERE ((('r*')GLOB(t0.c33)));
SELECT SUM(count) FROM (SELECT (((('r*')GLOB(t0.c33))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((-575590807) BETWEEN (((((rt1.c1)OR(t0.c80)))OR(t0.c80))) AND ((~ (t0.c80)))));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((-575590807) BETWEEN (((((rt1.c1)OR(t0.c80)))OR(t0.c80))) AND ((~ (t0.c80)))) WHERE ((('r*')GLOB(t0.c33)));
SELECT * FROM rt1, vt0, rt0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((NULL) IS FALSE));
SELECT COUNT(*) FROM t0, rt0, vt0, rt2 WHERE (((rt2.c0) BETWEEN (((vt0.c0) BETWEEN (rt2.c3) AND (rt0.c3))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (- (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c0) BETWEEN (((vt0.c0) BETWEEN (rt2.c3) AND (rt0.c3))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM t0, rt0, vt0, rt2 ORDER BY (- (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0, rt2 WHERE (((rt2.c0) BETWEEN (((vt0.c0) BETWEEN (rt2.c3) AND (rt0.c3))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (- (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c0) BETWEEN (((vt0.c0) BETWEEN (rt2.c3) AND (rt0.c3))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM t0, rt0, vt0, rt2 ORDER BY (- (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0, rt2 WHERE (((rt2.c0) BETWEEN (((vt0.c0) BETWEEN (rt2.c3) AND (rt0.c3))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (- (vt0.c0))  NULLS LAST;
SELECT ALL * FROM vt0, rt2, rt0, rt1 WHERE ((('1576949197')==(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((('1576949197')=(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, rt2, rt0, rt1);
SELECT ALL * FROM vt0, rt2, rt0, rt1 WHERE ((('1576949197')==(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((('1576949197')=(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, rt2, rt0, rt1);
SELECT ALL * FROM vt0, rt2, rt0, rt1 WHERE ((('1576949197')==(CAST(vt0.c1 AS TEXT))));
SELECT COUNT(*) FROM rt2, vt0, rt0, t0 WHERE ((((((t0.c33) NOT BETWEEN (rt2.c1) AND (1376494064)), ((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)), NULL))>((CASE WHEN t0.c33 THEN rt0.c3 END, ((rt2.c2) BETWEEN (rt2.c0) AND (vt0.c1)), ((rt0.c3)|(rt2.c3)))))) ORDER BY (((rt0.c1 IN ())) BETWEEN (((rt0.c3)IS(rt2.c2))) AND ('sc-tQ▹a'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c33) NOT BETWEEN (rt2.c1) AND (1376494064)), ((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)), NULL))>((CASE WHEN t0.c33 THEN rt0.c3 END, ((rt2.c2) BETWEEN (rt2.c0) AND (vt0.c1)), ((rt0.c3)|(rt2.c3)))))) IS TRUE)  as count FROM rt2, vt0, rt0, t0 ORDER BY (((rt0.c1 IN ())) BETWEEN (((rt0.c3)IS(rt2.c2))) AND ('sc-tQ▹a'))  NULLS FIRST);
SELECT COUNT(*) FROM rt2, vt0, rt0, t0 WHERE ((((((t0.c33) NOT BETWEEN (rt2.c1) AND (1376494064)), ((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)), NULL))>((CASE WHEN t0.c33 THEN rt0.c3 END, ((rt2.c2) BETWEEN (rt2.c0) AND (vt0.c1)), ((rt0.c3)|(rt2.c3)))))) ORDER BY (((rt0.c1 IN ())) BETWEEN (((rt0.c3)IS(rt2.c2))) AND ('sc-tQ▹a'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c33) NOT BETWEEN (rt2.c1) AND (1376494064)), ((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)), NULL))>((CASE WHEN t0.c33 THEN rt0.c3 END, ((rt2.c2) BETWEEN (rt2.c0) AND (vt0.c1)), ((rt0.c3)|(rt2.c3)))))) IS TRUE)  as count FROM rt2, vt0, rt0, t0 ORDER BY (((rt0.c1 IN ())) BETWEEN (((rt0.c3)IS(rt2.c2))) AND ('sc-tQ▹a'))  NULLS FIRST);
SELECT COUNT(*) FROM rt2, vt0, rt0, t0 WHERE ((((((t0.c33) NOT BETWEEN (rt2.c1) AND (1376494064)), ((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)), NULL))>((CASE WHEN t0.c33 THEN rt0.c3 END, ((rt2.c2) BETWEEN (rt2.c0) AND (vt0.c1)), ((rt0.c3)|(rt2.c3)))))) ORDER BY (((rt0.c1 IN ())) BETWEEN (((rt0.c3)IS(rt2.c2))) AND ('sc-tQ▹a'))  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE ((rt1.c2) IS FALSE)  WHEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c2)))OR(0.6334811672840421)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) IS FALSE)  WHEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c2)))OR(0.6334811672840421)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c2) IS FALSE)  WHEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c2)))OR(0.6334811672840421)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) IS FALSE)  WHEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c2)))OR(0.6334811672840421)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c2) IS FALSE)  WHEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c2)))OR(0.6334811672840421)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END);
SELECT COUNT(*) FROM rt2, rt0 WHERE ((+ ((rt2.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt2.c1 IN ())))) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE ((+ ((rt2.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt2.c1 IN ())))) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE ((+ ((rt2.c1 IN ()))));
SELECT ALL * FROM t0, vt0, rt2, rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c0) NOTNULL) WHERE (((x'96b7' COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'96b7' COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt2, rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c0) NOTNULL));
SELECT ALL * FROM t0, vt0, rt2, rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c0) NOTNULL) WHERE (((x'96b7' COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'96b7' COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt2, rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c0) NOTNULL));
SELECT ALL * FROM t0, vt0, rt2, rt0 RIGHT OUTER JOIN rt1 ON ((rt0.c0) NOTNULL) WHERE (((x'96b7' COLLATE RTRIM) ISNULL));
SELECT * FROM rt2 WHERE (rt2.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c1);
SELECT COUNT(*) FROM rt2 FULL OUTER JOIN t0 ON ((((CAST(rt2.c0 AS INTEGER))AND(5.46806204E8)))AND((~ (rt1.c0)))) LEFT OUTER JOIN rt0 ON vt0.c1 CROSS JOIN vt0 ON ((590906016) BETWEEN (((((rt0.c2)AND('')))AND(rt0.c0))) AND (((rt2.c2)>(t0.c80)))) LEFT OUTER JOIN rt1 ON CAST(((rt0.c3) BETWEEN (rt2.c1) AND (rt2.c1)) AS INTEGER) WHERE (rt2.c0);
SELECT SUM(count) FROM (SELECT ((rt2.c0) IS TRUE)  as count FROM rt2 FULL OUTER JOIN t0 ON ((((CAST(rt2.c0 AS INTEGER))AND(5.46806204E8)))AND((~ (rt1.c0)))) LEFT OUTER JOIN rt0 ON vt0.c1 CROSS JOIN vt0 ON ((590906016) BETWEEN (((((rt0.c2)AND('')))AND(rt0.c0))) AND (((rt2.c2)>(t0.c80)))) LEFT OUTER JOIN rt1 ON CAST(((rt0.c3) BETWEEN (rt2.c1) AND (rt2.c1)) AS INTEGER));
SELECT COUNT(*) FROM rt2 FULL OUTER JOIN t0 ON ((((CAST(rt2.c0 AS INTEGER))AND(5.46806204E8)))AND((~ (rt1.c0)))) LEFT OUTER JOIN rt0 ON vt0.c1 CROSS JOIN vt0 ON ((590906016) BETWEEN (((((rt0.c2)AND('')))AND(rt0.c0))) AND (((rt2.c2)>(t0.c80)))) LEFT OUTER JOIN rt1 ON CAST(((rt0.c3) BETWEEN (rt2.c1) AND (rt2.c1)) AS INTEGER) WHERE (rt2.c0);
SELECT SUM(count) FROM (SELECT ((rt2.c0) IS TRUE)  as count FROM rt2 FULL OUTER JOIN t0 ON ((((CAST(rt2.c0 AS INTEGER))AND(5.46806204E8)))AND((~ (rt1.c0)))) LEFT OUTER JOIN rt0 ON vt0.c1 CROSS JOIN vt0 ON ((590906016) BETWEEN (((((rt0.c2)AND('')))AND(rt0.c0))) AND (((rt2.c2)>(t0.c80)))) LEFT OUTER JOIN rt1 ON CAST(((rt0.c3) BETWEEN (rt2.c1) AND (rt2.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c1 DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt2 WHERE ((('-1139055754') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('-1139055754') NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt2);
SELECT ALL COUNT(*) FROM t0, vt0, rt2 WHERE ((('-1139055754') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('-1139055754') NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt2);
SELECT ALL COUNT(*) FROM t0, vt0, rt2 WHERE ((('-1139055754') NOT NULL));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt1 ON CAST(rt2.c1 AS REAL) WHERE ((((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c2)) IN (rt1.c1))) ORDER BY (((x'c4b0987b')) NOT BETWEEN (((('-1139055754')OR(rt2.c1)))) AND ((x''))) ASC  NULLS LAST, ((rt2.c0) ISNULL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c2)) IN (rt1.c1))) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON CAST(rt2.c1 AS REAL) ORDER BY (((x'c4b0987b')) NOT BETWEEN (((('-1139055754')OR(rt2.c1)))) AND ((x''))) ASC  NULLS LAST, ((rt2.c0) ISNULL) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt1 ON CAST(rt2.c1 AS REAL) WHERE ((((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c2)) IN (rt1.c1))) ORDER BY (((x'c4b0987b')) NOT BETWEEN (((('-1139055754')OR(rt2.c1)))) AND ((x''))) ASC  NULLS LAST, ((rt2.c0) ISNULL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c2)) IN (rt1.c1))) IS TRUE)  as count FROM rt2 INNER JOIN rt1 ON CAST(rt2.c1 AS REAL) ORDER BY (((x'c4b0987b')) NOT BETWEEN (((('-1139055754')OR(rt2.c1)))) AND ((x''))) ASC  NULLS LAST, ((rt2.c0) ISNULL) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 INNER JOIN rt1 ON CAST(rt2.c1 AS REAL) WHERE ((((rt1.c0) BETWEEN (rt2.c0) AND (rt1.c2)) IN (rt1.c1))) ORDER BY (((x'c4b0987b')) NOT BETWEEN (((('-1139055754')OR(rt2.c1)))) AND ((x''))) ASC  NULLS LAST, ((rt2.c0) ISNULL) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c80);
SELECT SUM(count) FROM (SELECT ALL ((t0.c80) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c80);
SELECT SUM(count) FROM (SELECT ALL ((t0.c80) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c80);
SELECT COUNT(*) FROM rt2, vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((rt2.c2)OR(rt1.c0)))AND(vt0.c1)) AS INTEGER) INNER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND ((~ (rt0.c1)))) WHERE ((NOT (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt2, vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((rt2.c2)OR(rt1.c0)))AND(vt0.c1)) AS INTEGER) INNER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND ((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt2, vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((rt2.c2)OR(rt1.c0)))AND(vt0.c1)) AS INTEGER) INNER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND ((~ (rt0.c1)))) WHERE ((NOT (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt2, vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((rt2.c2)OR(rt1.c0)))AND(vt0.c1)) AS INTEGER) INNER JOIN rt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND ((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c0)AND(rt2.c0)))-(((rt2.c0)<<(rt2.c3))))) ORDER BY ((rt2.c0 COLLATE RTRIM) NOTNULL) ASC, ((((((rt2.c1) IS TRUE))AND(((NULL) NOT BETWEEN (rt2.c3) AND (rt2.c2)))))AND(((x'')>>(rt2.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0)AND(rt2.c0)))-(((rt2.c0)<<(rt2.c3))))) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c0 COLLATE RTRIM) NOTNULL) ASC, ((((((rt2.c1) IS TRUE))AND(((NULL) NOT BETWEEN (rt2.c3) AND (rt2.c2)))))AND(((x'')>>(rt2.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c0)AND(rt2.c0)))-(((rt2.c0)<<(rt2.c3))))) ORDER BY ((rt2.c0 COLLATE RTRIM) NOTNULL) ASC, ((((((rt2.c1) IS TRUE))AND(((NULL) NOT BETWEEN (rt2.c3) AND (rt2.c2)))))AND(((x'')>>(rt2.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0)AND(rt2.c0)))-(((rt2.c0)<<(rt2.c3))))) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c0 COLLATE RTRIM) NOTNULL) ASC, ((((((rt2.c1) IS TRUE))AND(((NULL) NOT BETWEEN (rt2.c3) AND (rt2.c2)))))AND(((x'')>>(rt2.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (((((rt2.c0)AND(rt2.c0)))-(((rt2.c0)<<(rt2.c3))))) ORDER BY ((rt2.c0 COLLATE RTRIM) NOTNULL) ASC, ((((((rt2.c1) IS TRUE))AND(((NULL) NOT BETWEEN (rt2.c3) AND (rt2.c2)))))AND(((x'')>>(rt2.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt2, rt0, rt1, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CASE rt2.c1  WHEN '-1848777804' THEN rt1.c1 END ELSE ((t0.c80)>>(rt0.c3)) END) ORDER BY ((((t0.c33) ISNULL)) NOT BETWEEN (rt1.c1) AND (NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN CASE rt2.c1  WHEN '-1848777804' THEN rt1.c1 END ELSE ((t0.c80)>>(rt0.c3)) END) IS TRUE)  as count FROM t0, rt2, rt0, rt1, vt0 ORDER BY ((((t0.c33) ISNULL)) NOT BETWEEN (rt1.c1) AND (NULL COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, rt2, rt0, rt1, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CASE rt2.c1  WHEN '-1848777804' THEN rt1.c1 END ELSE ((t0.c80)>>(rt0.c3)) END) ORDER BY ((((t0.c33) ISNULL)) NOT BETWEEN (rt1.c1) AND (NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN CASE rt2.c1  WHEN '-1848777804' THEN rt1.c1 END ELSE ((t0.c80)>>(rt0.c3)) END) IS TRUE)  as count FROM t0, rt2, rt0, rt1, vt0 ORDER BY ((((t0.c33) ISNULL)) NOT BETWEEN (rt1.c1) AND (NULL COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, rt2, rt0, rt1, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CASE rt2.c1  WHEN '-1848777804' THEN rt1.c1 END ELSE ((t0.c80)>>(rt0.c3)) END) ORDER BY ((((t0.c33) ISNULL)) NOT BETWEEN (rt1.c1) AND (NULL COLLATE RTRIM));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt2 ON (((t0.c33, rt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)>>(rt1.c1)), ((rt2.c2)/(x'')), ((((rt2.c3)AND(rt2.c3)))AND(rt1.c0)))) AND (((t0.c80 IN (0.17127518400200004, rt1.c0)), (rt2.c3 IN ()), ((rt1.c0)<=(rt1.c1))))) FULL OUTER JOIN rt1 ON ((((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c3))) ISNULL) WHERE (rt2.c3 COLLATE BINARY) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((rt2.c3 COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt2 ON (((t0.c33, rt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)>>(rt1.c1)), ((rt2.c2)/(x'')), ((((rt2.c3)AND(rt2.c3)))AND(rt1.c0)))) AND (((t0.c80 IN (0.17127518400200004, rt1.c0)), (rt2.c3 IN ()), ((rt1.c0)<=(rt1.c1))))) FULL OUTER JOIN rt1 ON ((((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c3))) ISNULL) ORDER BY x'');
SELECT ALL * FROM t0 LEFT OUTER JOIN rt2 ON (((t0.c33, rt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)>>(rt1.c1)), ((rt2.c2)/(x'')), ((((rt2.c3)AND(rt2.c3)))AND(rt1.c0)))) AND (((t0.c80 IN (0.17127518400200004, rt1.c0)), (rt2.c3 IN ()), ((rt1.c0)<=(rt1.c1))))) FULL OUTER JOIN rt1 ON ((((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c3))) ISNULL) WHERE (rt2.c3 COLLATE BINARY) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((rt2.c3 COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt2 ON (((t0.c33, rt1.c1, rt1.c2)) BETWEEN ((((rt1.c1)>>(rt1.c1)), ((rt2.c2)/(x'')), ((((rt2.c3)AND(rt2.c3)))AND(rt1.c0)))) AND (((t0.c80 IN (0.17127518400200004, rt1.c0)), (rt2.c3 IN ()), ((rt1.c0)<=(rt1.c1))))) FULL OUTER JOIN rt1 ON ((((rt2.c0) NOT BETWEEN (rt2.c0) AND (rt2.c3))) ISNULL) ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0, vt0, t0, rt2 WHERE (rt0.c0) ORDER BY rt2.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t0, rt2 NOT INDEXED ORDER BY rt2.c3 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, rt2 WHERE (rt0.c0) ORDER BY rt2.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t0, rt2 NOT INDEXED ORDER BY rt2.c3 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, rt2 WHERE (rt0.c0) ORDER BY rt2.c3 ASC  NULLS LAST;
SELECT * FROM rt1, vt0, rt2 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c3  WHEN rt1.c0 THEN rt0.c3 ELSE rt1.c2 END THEN COALESCE(rt0.c1, NULL) ELSE vt0.c1 END INNER JOIN t0 ON rt1.c0 WHERE (((((((((((vt0.c1) NOTNULL))OR((rt2.c1 IN ()))))OR('265128111')))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c1) NOT NULL)))) ORDER BY (- (rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOTNULL))OR((rt2.c1 IN ()))))OR('265128111')))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0, rt2 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c3  WHEN rt1.c0 THEN rt0.c3 ELSE rt1.c2 END THEN COALESCE(rt0.c1, NULL) ELSE vt0.c1 END INNER JOIN t0 ON rt1.c0 ORDER BY (- (rt1.c1))  NULLS LAST);
SELECT * FROM rt1, vt0, rt2 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c3  WHEN rt1.c0 THEN rt0.c3 ELSE rt1.c2 END THEN COALESCE(rt0.c1, NULL) ELSE vt0.c1 END INNER JOIN t0 ON rt1.c0 WHERE (((((((((((vt0.c1) NOTNULL))OR((rt2.c1 IN ()))))OR('265128111')))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c1) NOT NULL)))) ORDER BY (- (rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOTNULL))OR((rt2.c1 IN ()))))OR('265128111')))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0, rt2 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c3  WHEN rt1.c0 THEN rt0.c3 ELSE rt1.c2 END THEN COALESCE(rt0.c1, NULL) ELSE vt0.c1 END INNER JOIN t0 ON rt1.c0 ORDER BY (- (rt1.c1))  NULLS LAST);
SELECT * FROM rt1, vt0, rt2 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c3  WHEN rt1.c0 THEN rt0.c3 ELSE rt1.c2 END THEN COALESCE(rt0.c1, NULL) ELSE vt0.c1 END INNER JOIN t0 ON rt1.c0 WHERE (((((((((((vt0.c1) NOTNULL))OR((rt2.c1 IN ()))))OR('265128111')))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c1) NOT NULL)))) ORDER BY (- (rt1.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))))AND(rt0.c1 COLLATE BINARY)))AND((((0Xffffffffb945fb8d))<((rt0.c3))))))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY INSTR(rt0.c1, '') COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS INTEGER))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))))AND(rt0.c1 COLLATE BINARY)))AND((((0Xffffffffb945fb8d))<((rt0.c3))))))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY INSTR(rt0.c1, '') COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))))AND(rt0.c1 COLLATE BINARY)))AND((((0Xffffffffb945fb8d))<((rt0.c3))))))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY INSTR(rt0.c1, '') COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS INTEGER))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))))AND(rt0.c1 COLLATE BINARY)))AND((((0Xffffffffb945fb8d))<((rt0.c3))))))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY INSTR(rt0.c1, '') COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))))AND(rt0.c1 COLLATE BINARY)))AND((((0Xffffffffb945fb8d))<((rt0.c3))))))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY INSTR(rt0.c1, '') COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, rt2 RIGHT OUTER JOIN vt0 ON (((((((rt2.c2, t0.c33, rt2.c3))=((vt0.c1, rt2.c0, vt0.c1))))OR(CAST(rt2.c1 AS NUMERIC))))OR(rt1.c1)) INNER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt2.c3) AND (rt0.c3)))&(rt1.c2)) RIGHT OUTER JOIN t0 ON (((t0.c33, t0.c33, rt2.c1)) BETWEEN ((CASE rt1.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0) NOT BETWEEN (rt2.c2) AND (rt0.c0)), ((((rt2.c3)OR('-764004878')))AND(vt0.c0)))) AND ((((rt0.c3) BETWEEN (t0.c33) AND (vt0.c0)), rt2.c0, ((((t0.c33)AND(rt0.c2)))OR(rt1.c1))))) WHERE (rtreenode(CAST(2.072846781E9 AS TEXT), (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((rtreenode(CAST(2.072846781E9 AS TEXT), (- (vt0.c0)))) IS TRUE)  as count FROM rt0, rt2 RIGHT OUTER JOIN vt0 ON (((((((rt2.c2, t0.c33, rt2.c3))==((vt0.c1, rt2.c0, vt0.c1))))OR(CAST(rt2.c1 AS NUMERIC))))OR(rt1.c1)) INNER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt2.c3) AND (rt0.c3)))&(rt1.c2)) RIGHT OUTER JOIN t0 ON (((t0.c33, t0.c33, rt2.c1)) BETWEEN ((CASE rt1.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0) NOT BETWEEN (rt2.c2) AND (rt0.c0)), ((((rt2.c3)OR('-764004878')))AND(vt0.c0)))) AND ((((rt0.c3) BETWEEN (t0.c33) AND (vt0.c0)), rt2.c0, ((((t0.c33)AND(rt0.c2)))OR(rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0, rt2 RIGHT OUTER JOIN vt0 ON (((((((rt2.c2, t0.c33, rt2.c3))=((vt0.c1, rt2.c0, vt0.c1))))OR(CAST(rt2.c1 AS NUMERIC))))OR(rt1.c1)) INNER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt2.c3) AND (rt0.c3)))&(rt1.c2)) RIGHT OUTER JOIN t0 ON (((t0.c33, t0.c33, rt2.c1)) BETWEEN ((CASE rt1.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0) NOT BETWEEN (rt2.c2) AND (rt0.c0)), ((((rt2.c3)OR('-764004878')))AND(vt0.c0)))) AND ((((rt0.c3) BETWEEN (t0.c33) AND (vt0.c0)), rt2.c0, ((((t0.c33)AND(rt0.c2)))OR(rt1.c1))))) WHERE (rtreenode(CAST(2.072846781E9 AS TEXT), (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((rtreenode(CAST(2.072846781E9 AS TEXT), (- (vt0.c0)))) IS TRUE)  as count FROM rt0, rt2 RIGHT OUTER JOIN vt0 ON (((((((rt2.c2, t0.c33, rt2.c3))==((vt0.c1, rt2.c0, vt0.c1))))OR(CAST(rt2.c1 AS NUMERIC))))OR(rt1.c1)) INNER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt2.c3) AND (rt0.c3)))&(rt1.c2)) RIGHT OUTER JOIN t0 ON (((t0.c33, t0.c33, rt2.c1)) BETWEEN ((CASE rt1.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0) NOT BETWEEN (rt2.c2) AND (rt0.c0)), ((((rt2.c3)OR('-764004878')))AND(vt0.c0)))) AND ((((rt0.c3) BETWEEN (t0.c33) AND (vt0.c0)), rt2.c0, ((((t0.c33)AND(rt0.c2)))OR(rt1.c1))))));
SELECT ALL * FROM rt1, vt0, t0, rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE (vt0.c1 IN (t0.c80))  WHEN (rt1.c1 IN (vt0.c0)) THEN NULL COLLATE BINARY WHEN CAST(rt0.c0 AS REAL) THEN (rt1.c0 IN (rt0.c1, rt1.c1)) WHEN LOWER(DISTINCT rt0.c3) THEN (NOT (NULL)) ELSE (((rt1.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c2, x'', rt0.c3))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt1, vt0, t0, rt0 ORDER BY CASE (vt0.c1 IN (t0.c80))  WHEN (rt1.c1 IN (vt0.c0)) THEN NULL COLLATE BINARY WHEN CAST(rt0.c0 AS REAL) THEN (rt1.c0 IN (rt0.c1, rt1.c1)) WHEN LOWER(DISTINCT rt0.c3) THEN (NOT (NULL)) ELSE (((rt1.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c2, x'', rt0.c3))) END DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, t0, rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE (vt0.c1 IN (t0.c80))  WHEN (rt1.c1 IN (vt0.c0)) THEN NULL COLLATE BINARY WHEN CAST(rt0.c0 AS REAL) THEN (rt1.c0 IN (rt0.c1, rt1.c1)) WHEN LOWER(DISTINCT rt0.c3) THEN (NOT (NULL)) ELSE (((rt1.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c2, x'', rt0.c3))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt1, vt0, t0, rt0 ORDER BY CASE (vt0.c1 IN (t0.c80))  WHEN (rt1.c1 IN (vt0.c0)) THEN NULL COLLATE BINARY WHEN CAST(rt0.c0 AS REAL) THEN (rt1.c0 IN (rt0.c1, rt1.c1)) WHEN LOWER(DISTINCT rt0.c3) THEN (NOT (NULL)) ELSE (((rt1.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c2, x'', rt0.c3))) END DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, t0, rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE (vt0.c1 IN (t0.c80))  WHEN (rt1.c1 IN (vt0.c0)) THEN NULL COLLATE BINARY WHEN CAST(rt0.c0 AS REAL) THEN (rt1.c0 IN (rt0.c1, rt1.c1)) WHEN LOWER(DISTINCT rt0.c3) THEN (NOT (NULL)) ELSE (((rt1.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c2, x'', rt0.c3))) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (- (((-1.469655578E9) BETWEEN (rt1.c1) AND (rt0.c2)))) WHERE (CASE ((rt1.c1)=(rt1.c2))  WHEN (x'318a' IN ()) THEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)) ELSE (~ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)==(rt1.c2))  WHEN (x'318a' IN ()) THEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)) ELSE (~ (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (- (((-1.469655578E9) BETWEEN (rt1.c1) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (- (((-1.469655578E9) BETWEEN (rt1.c1) AND (rt0.c2)))) WHERE (CASE ((rt1.c1)=(rt1.c2))  WHEN (x'318a' IN ()) THEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)) ELSE (~ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)==(rt1.c2))  WHEN (x'318a' IN ()) THEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)) ELSE (~ (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (- (((-1.469655578E9) BETWEEN (rt1.c1) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN rt1 ON (- (((-1.469655578E9) BETWEEN (rt1.c1) AND (rt0.c2)))) WHERE (CASE ((rt1.c1)=(rt1.c2))  WHEN (x'318a' IN ()) THEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)) ELSE (~ (rt1.c1)) END);
SELECT * FROM rt1, rt2 WHERE (CAST(((((rt1.c2)OR(rt2.c1)))AND(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c2)OR(rt2.c1)))AND(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (CAST(((((rt1.c2)OR(rt2.c1)))AND(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c2)OR(rt2.c1)))AND(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, rt2);
SELECT * FROM rt1, rt2 WHERE (CAST(((((rt1.c2)OR(rt2.c1)))AND(rt1.c2)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN rt2 ON rt0.c1 INNER JOIN vt0 ON ((((rt0.c1) IS TRUE))|(TRIM(vt0.c1, x''))) WHERE (((TYPEOF(rt1.c2)) NOT BETWEEN (UPPER(rt1.c2)) AND ((((rt2.c3)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) ORDER BY (((((rt0.c0 IN ()))OR((+ (rt0.c2)))))OR(LOWER(rt0.c3))) ASC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt1.c2)) NOT BETWEEN (UPPER(rt1.c2)) AND ((((rt2.c3)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED CROSS JOIN rt2 ON rt0.c1 INNER JOIN vt0 ON ((((rt0.c1) IS TRUE))|(TRIM(vt0.c1, x''))) ORDER BY (((((rt0.c0 IN ()))OR((+ (rt0.c2)))))OR(LOWER(rt0.c3))) ASC  NULLS FIRST, NULL);
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN rt2 ON rt0.c1 INNER JOIN vt0 ON ((((rt0.c1) IS TRUE))|(TRIM(vt0.c1, x''))) WHERE (((TYPEOF(rt1.c2)) NOT BETWEEN (UPPER(rt1.c2)) AND ((((rt2.c3)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) ORDER BY (((((rt0.c0 IN ()))OR((+ (rt0.c2)))))OR(LOWER(rt0.c3))) ASC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt1.c2)) NOT BETWEEN (UPPER(rt1.c2)) AND ((((rt2.c3)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED CROSS JOIN rt2 ON rt0.c1 INNER JOIN vt0 ON ((((rt0.c1) IS TRUE))|(TRIM(vt0.c1, x''))) ORDER BY (((((rt0.c0 IN ()))OR((+ (rt0.c2)))))OR(LOWER(rt0.c3))) ASC  NULLS FIRST, NULL);
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN rt2 ON rt0.c1 INNER JOIN vt0 ON ((((rt0.c1) IS TRUE))|(TRIM(vt0.c1, x''))) WHERE (((TYPEOF(rt1.c2)) NOT BETWEEN (UPPER(rt1.c2)) AND ((((rt2.c3)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) ORDER BY (((((rt0.c0 IN ()))OR((+ (rt0.c2)))))OR(LOWER(rt0.c3))) ASC  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND('764952697'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND('764952697'))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND('764952697'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND('764952697'))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND('764952697'))) IS TRUE));
SELECT ALL * FROM vt0, rt2 WHERE (CASE vt0.c0  WHEN rt2.c3 THEN rt2.c1 WHEN rt2.c2 THEN '1580451949' WHEN rt2.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0, (NULL IN (rt2.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN rt2.c3 THEN rt2.c1 WHEN rt2.c2 THEN '1580451949' WHEN rt2.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt2 ORDER BY vt0.c0, (NULL IN (rt2.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, rt2 WHERE (CASE vt0.c0  WHEN rt2.c3 THEN rt2.c1 WHEN rt2.c2 THEN '1580451949' WHEN rt2.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0, (NULL IN (rt2.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN rt2.c3 THEN rt2.c1 WHEN rt2.c2 THEN '1580451949' WHEN rt2.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt2 ORDER BY vt0.c0, (NULL IN (rt2.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, rt2 WHERE (CASE vt0.c0  WHEN rt2.c3 THEN rt2.c1 WHEN rt2.c2 THEN '1580451949' WHEN rt2.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0, (NULL IN (rt2.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((rt2.c0) IS TRUE))>=((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0) IS TRUE))>=((~ (rt1.c0))))) IS TRUE)  as count FROM rt2, rt1);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((rt2.c0) IS TRUE))>=((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0) IS TRUE))>=((~ (rt1.c0))))) IS TRUE)  as count FROM rt2, rt1);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((rt2.c0) IS TRUE))>=((~ (rt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(x'', vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((SUBSTR(x'', vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(x'', vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((SUBSTR(x'', vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(x'', vt0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM rt0 WHERE (CAST(json_quote(0.11886208740285087) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_quote(0.11886208740285087) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(json_quote(0.11886208740285087) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_quote(0.11886208740285087) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(json_quote(0.11886208740285087) AS REAL));
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((((t0.c80) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND ((((rt1.c0))<((''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c80) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND ((((rt1.c0))<(('')))))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((((t0.c80) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND ((((rt1.c0))<((''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c80) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND ((((rt1.c0))<(('')))))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((((t0.c80) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND ((((rt1.c0))<((''))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE NULL  WHEN rt1.c0 COLLATE BINARY THEN x'6f4a' ELSE ((((((((rt1.c2)OR(rt1.c0)))OR('+_')))OR(rt1.c1)))AND(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN rt1.c0 COLLATE BINARY THEN x'6f4a' ELSE ((((((((rt1.c2)OR(rt1.c0)))OR('+_')))OR(rt1.c1)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE NULL  WHEN rt1.c0 COLLATE BINARY THEN x'6f4a' ELSE ((((((((rt1.c2)OR(rt1.c0)))OR('+_')))OR(rt1.c1)))AND(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN rt1.c0 COLLATE BINARY THEN x'6f4a' ELSE ((((((((rt1.c2)OR(rt1.c0)))OR('+_')))OR(rt1.c1)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE NULL  WHEN rt1.c0 COLLATE BINARY THEN x'6f4a' ELSE ((((((((rt1.c2)OR(rt1.c0)))OR('+_')))OR(rt1.c1)))AND(rt1.c2)) END);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NOT INDEXED, rt2 WHERE (((rt2.c2)/(rt1.c1)) COLLATE BINARY) ORDER BY STRFTIME((~ (rt1.c2)), t0.c33, CASE rt2.c2  WHEN rt2.c2 THEN t0.c33 ELSE vt0.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2)/(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, t0, rt2 ORDER BY STRFTIME((~ (rt1.c2)), t0.c33, CASE rt2.c2  WHEN rt2.c2 THEN t0.c33 ELSE vt0.c1 END) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NOT INDEXED, rt2 WHERE (((rt2.c2)/(rt1.c1)) COLLATE BINARY) ORDER BY STRFTIME((~ (rt1.c2)), t0.c33, CASE rt2.c2  WHEN rt2.c2 THEN t0.c33 ELSE vt0.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2)/(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, t0, rt2 ORDER BY STRFTIME((~ (rt1.c2)), t0.c33, CASE rt2.c2  WHEN rt2.c2 THEN t0.c33 ELSE vt0.c1 END) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NOT INDEXED, rt2 WHERE (((rt2.c2)/(rt1.c1)) COLLATE BINARY) ORDER BY STRFTIME((~ (rt1.c2)), t0.c33, CASE rt2.c2  WHEN rt2.c2 THEN t0.c33 ELSE vt0.c1 END) DESC  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) IS FALSE) WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) IS FALSE));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) IS FALSE) WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) IS FALSE));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) IS FALSE) WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0, vt0, t0 WHERE ((((rt0.c3, 0.7462508549098151, t0.c80)) BETWEEN ((CAST(t0.c33 AS INTEGER), ((rt0.c2) IS FALSE), t0.c80 COLLATE RTRIM)) AND (((((rt1.c2, t0.c33, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c0, vt0.c0)) AND ((rt1.c2, '554103206', rt0.c3))), (vt0.c0 IN ()), ((((((((rt0.c0)OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c2)))))) ORDER BY CASE WHEN CASE WHEN t0.c33 THEN rt1.c1 ELSE rt1.c0 END THEN rt0.c1 COLLATE NOCASE ELSE (NOT (rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, 0.7462508549098151, t0.c80)) BETWEEN ((CAST(t0.c33 AS INTEGER), ((rt0.c2) IS FALSE), t0.c80 COLLATE RTRIM)) AND (((((rt1.c2, t0.c33, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c0, vt0.c0)) AND ((rt1.c2, '554103206', rt0.c3))), (vt0.c0 IN ()), ((((((((rt0.c0)OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY CASE WHEN CASE WHEN t0.c33 THEN rt1.c1 ELSE rt1.c0 END THEN rt0.c1 COLLATE NOCASE ELSE (NOT (rt0.c3)) END);
SELECT COUNT(*) FROM rt1, rt0, vt0, t0 WHERE ((((rt0.c3, 0.7462508549098151, t0.c80)) BETWEEN ((CAST(t0.c33 AS INTEGER), ((rt0.c2) IS FALSE), t0.c80 COLLATE RTRIM)) AND (((((rt1.c2, t0.c33, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c0, vt0.c0)) AND ((rt1.c2, '554103206', rt0.c3))), (vt0.c0 IN ()), ((((((((rt0.c0)OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c2)))))) ORDER BY CASE WHEN CASE WHEN t0.c33 THEN rt1.c1 ELSE rt1.c0 END THEN rt0.c1 COLLATE NOCASE ELSE (NOT (rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, 0.7462508549098151, t0.c80)) BETWEEN ((CAST(t0.c33 AS INTEGER), ((rt0.c2) IS FALSE), t0.c80 COLLATE RTRIM)) AND (((((rt1.c2, t0.c33, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c0, vt0.c0)) AND ((rt1.c2, '554103206', rt0.c3))), (vt0.c0 IN ()), ((((((((rt0.c0)OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY CASE WHEN CASE WHEN t0.c33 THEN rt1.c1 ELSE rt1.c0 END THEN rt0.c1 COLLATE NOCASE ELSE (NOT (rt0.c3)) END);
SELECT COUNT(*) FROM rt1, rt0, vt0, t0 WHERE ((((rt0.c3, 0.7462508549098151, t0.c80)) BETWEEN ((CAST(t0.c33 AS INTEGER), ((rt0.c2) IS FALSE), t0.c80 COLLATE RTRIM)) AND (((((rt1.c2, t0.c33, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c0, vt0.c0)) AND ((rt1.c2, '554103206', rt0.c3))), (vt0.c0 IN ()), ((((((((rt0.c0)OR(rt0.c1)))AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c2)))))) ORDER BY CASE WHEN CASE WHEN t0.c33 THEN rt1.c1 ELSE rt1.c0 END THEN rt0.c1 COLLATE NOCASE ELSE (NOT (rt0.c3)) END;
SELECT * FROM rt1 INNER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN rt2 ON ((((((rt0.c3)OR(rt1.c2)))AND(rt0.c1))) NOT NULL) RIGHT OUTER JOIN rt0 ON vt0.c1 FULL OUTER JOIN t0 ON (((NOT (rt2.c3)))%((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) WHERE (((x'')>>((((rt2.c1))<((rt1.c0)))))) ORDER BY rt2.c1 DESC, ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))%(((rt0.c3)GLOB(rt2.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>((((rt2.c1))<((rt1.c0)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN rt2 ON ((((((rt0.c3)OR(rt1.c2)))AND(rt0.c1))) NOT NULL) RIGHT OUTER JOIN rt0 ON vt0.c1 FULL OUTER JOIN t0 ON (((NOT (rt2.c3)))%((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ORDER BY rt2.c1 DESC, ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))%(((rt0.c3)GLOB(rt2.c1)))) DESC  NULLS LAST);
SELECT * FROM rt1 INNER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN rt2 ON ((((((rt0.c3)OR(rt1.c2)))AND(rt0.c1))) NOT NULL) RIGHT OUTER JOIN rt0 ON vt0.c1 FULL OUTER JOIN t0 ON (((NOT (rt2.c3)))%((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) WHERE (((x'')>>((((rt2.c1))<((rt1.c0)))))) ORDER BY rt2.c1 DESC, ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))%(((rt0.c3)GLOB(rt2.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>((((rt2.c1))<((rt1.c0)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN rt2 ON ((((((rt0.c3)OR(rt1.c2)))AND(rt0.c1))) NOT NULL) RIGHT OUTER JOIN rt0 ON vt0.c1 FULL OUTER JOIN t0 ON (((NOT (rt2.c3)))%((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ORDER BY rt2.c1 DESC, ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))%(((rt0.c3)GLOB(rt2.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((~ (t0.c80)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE ((vt0.c1)GLOB(t0.c33))  WHEN CAST(t0.c80 AS NUMERIC) THEN vt0.c0 COLLATE BINARY WHEN (((t0.c33, vt0.c0, t0.c80)) NOT BETWEEN ((vt0.c0, '0.006840268857914222', vt0.c1)) AND ((vt0.c0, t0.c33, t0.c33))) THEN CAST(t0.c33 AS NUMERIC) WHEN t0.c33 THEN (~ (vt0.c1)) ELSE ((t0.c33) IS FALSE) END, ((NOT (vt0.c0)) IN (((t0.c33)&(t0.c80)), ((vt0.c0)>=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c80)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((vt0.c1)GLOB(t0.c33))  WHEN CAST(t0.c80 AS NUMERIC) THEN vt0.c0 COLLATE BINARY WHEN (((t0.c33, vt0.c0, t0.c80)) NOT BETWEEN ((vt0.c0, '0.006840268857914222', vt0.c1)) AND ((vt0.c0, t0.c33, t0.c33))) THEN CAST(t0.c33 AS NUMERIC) WHEN t0.c33 THEN (~ (vt0.c1)) ELSE ((t0.c33) IS FALSE) END, ((NOT (vt0.c0)) IN (((t0.c33)&(t0.c80)), ((vt0.c0)>=(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((~ (t0.c80)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE ((vt0.c1)GLOB(t0.c33))  WHEN CAST(t0.c80 AS NUMERIC) THEN vt0.c0 COLLATE BINARY WHEN (((t0.c33, vt0.c0, t0.c80)) NOT BETWEEN ((vt0.c0, '0.006840268857914222', vt0.c1)) AND ((vt0.c0, t0.c33, t0.c33))) THEN CAST(t0.c33 AS NUMERIC) WHEN t0.c33 THEN (~ (vt0.c1)) ELSE ((t0.c33) IS FALSE) END, ((NOT (vt0.c0)) IN (((t0.c33)&(t0.c80)), ((vt0.c0)>=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c80)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((vt0.c1)GLOB(t0.c33))  WHEN CAST(t0.c80 AS NUMERIC) THEN vt0.c0 COLLATE BINARY WHEN (((t0.c33, vt0.c0, t0.c80)) NOT BETWEEN ((vt0.c0, '0.006840268857914222', vt0.c1)) AND ((vt0.c0, t0.c33, t0.c33))) THEN CAST(t0.c33 AS NUMERIC) WHEN t0.c33 THEN (~ (vt0.c1)) ELSE ((t0.c33) IS FALSE) END, ((NOT (vt0.c0)) IN (((t0.c33)&(t0.c80)), ((vt0.c0)>=(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((~ (t0.c80)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE ((vt0.c1)GLOB(t0.c33))  WHEN CAST(t0.c80 AS NUMERIC) THEN vt0.c0 COLLATE BINARY WHEN (((t0.c33, vt0.c0, t0.c80)) NOT BETWEEN ((vt0.c0, '0.006840268857914222', vt0.c1)) AND ((vt0.c0, t0.c33, t0.c33))) THEN CAST(t0.c33 AS NUMERIC) WHEN t0.c33 THEN (~ (vt0.c1)) ELSE ((t0.c33) IS FALSE) END, ((NOT (vt0.c0)) IN (((t0.c33)&(t0.c80)), ((vt0.c0)>=(vt0.c0)))) DESC;
SELECT ALL * FROM rt2 FULL OUTER JOIN rt1 ON ((((((vt0.c1)IS NOT(vt0.c0)))OR(((rt0.c0) NOTNULL))))OR(UNLIKELY(vt0.c0))) RIGHT OUTER JOIN vt0 ON t0.c80 RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ()))%(rt0.c0)) CROSS JOIN rt0 ON ((rt2.c3)|(rt1.c0)) COLLATE RTRIM WHERE (((rt2.c3) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt2.c3) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON ((((((vt0.c1)IS NOT(vt0.c0)))OR(((rt0.c0) NOTNULL))))OR(UNLIKELY(vt0.c0))) RIGHT OUTER JOIN vt0 ON t0.c80 RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ()))%(rt0.c0)) CROSS JOIN rt0 ON ((rt2.c3)|(rt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt2 FULL OUTER JOIN rt1 ON ((((((vt0.c1)IS NOT(vt0.c0)))OR(((rt0.c0) NOTNULL))))OR(UNLIKELY(vt0.c0))) RIGHT OUTER JOIN vt0 ON t0.c80 RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ()))%(rt0.c0)) CROSS JOIN rt0 ON ((rt2.c3)|(rt1.c0)) COLLATE RTRIM WHERE (((rt2.c3) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt2.c3) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON ((((((vt0.c1)IS NOT(vt0.c0)))OR(((rt0.c0) NOTNULL))))OR(UNLIKELY(vt0.c0))) RIGHT OUTER JOIN vt0 ON t0.c80 RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ()))%(rt0.c0)) CROSS JOIN rt0 ON ((rt2.c3)|(rt1.c0)) COLLATE RTRIM);
SELECT * FROM rt2, vt0, rt1, t0, rt0 WHERE (-2106745606);
SELECT SUM(count) FROM (SELECT ALL ((-2106745606) IS TRUE)  as count FROM rt2, vt0, rt1, t0, rt0);
SELECT * FROM rt2, vt0, rt1, t0, rt0 WHERE (-2106745606);
SELECT SUM(count) FROM (SELECT ALL ((-2106745606) IS TRUE)  as count FROM rt2, vt0, rt1, t0, rt0);
SELECT * FROM rt2, vt0, rt1, t0, rt0 WHERE (-2106745606);
SELECT COUNT(*) FROM t0 WHERE (t0.c80) ORDER BY (((HEX(DISTINCT t0.c80), (NOT (t0.c33)), (- (t0.c80))))>(('}/', CAST(t0.c33 AS NUMERIC), ((NULL)>(t0.c80))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c80) IS TRUE)  as count FROM t0 ORDER BY (((HEX(DISTINCT t0.c80), (NOT (t0.c33)), (- (t0.c80))))>(('}/', CAST(t0.c33 AS NUMERIC), ((NULL)>(t0.c80))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c80) ORDER BY (((HEX(DISTINCT t0.c80), (NOT (t0.c33)), (- (t0.c80))))>(('}/', CAST(t0.c33 AS NUMERIC), ((NULL)>(t0.c80))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c80) IS TRUE)  as count FROM t0 ORDER BY (((HEX(DISTINCT t0.c80), (NOT (t0.c33)), (- (t0.c80))))>(('}/', CAST(t0.c33 AS NUMERIC), ((NULL)>(t0.c80))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c80) ORDER BY (((HEX(DISTINCT t0.c80), (NOT (t0.c33)), (- (t0.c80))))>(('}/', CAST(t0.c33 AS NUMERIC), ((NULL)>(t0.c80))))) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)IS(CAST(t0.c33 AS TEXT))) RIGHT OUTER JOIN vt0 ON x'' LEFT OUTER JOIN rt2 ON ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(CASE WHEN rt0.c0 THEN rt2.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c33 WHEN rt1.c1 THEN rt0.c2 ELSE rt2.c2 END)))AND((+ (rt2.c0)))) INNER JOIN rt1 ON ((LOWER('-2050402932'))AND(((t0.c80)==(rt0.c2)))) WHERE ((NOT ((((vt0.c1, rt1.c2, vt0.c1)) BETWEEN (('0.42361237608584357', vt0.c0, rt0.c3)) AND ((rt1.c2, rt0.c0, 265128111)))))) ORDER BY (NOT (rt2.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c1, rt1.c2, vt0.c1)) BETWEEN (('0.42361237608584357', vt0.c0, rt0.c3)) AND ((rt1.c2, rt0.c0, 265128111)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)IS(CAST(t0.c33 AS TEXT))) RIGHT OUTER JOIN vt0 ON x'' LEFT OUTER JOIN rt2 ON ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(CASE WHEN rt0.c0 THEN rt2.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c33 WHEN rt1.c1 THEN rt0.c2 ELSE rt2.c2 END)))AND((+ (rt2.c0)))) INNER JOIN rt1 ON ((LOWER('-2050402932'))AND(((t0.c80)=(rt0.c2)))) ORDER BY (NOT (rt2.c2)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)IS(CAST(t0.c33 AS TEXT))) RIGHT OUTER JOIN vt0 ON x'' LEFT OUTER JOIN rt2 ON ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(CASE WHEN rt0.c0 THEN rt2.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c33 WHEN rt1.c1 THEN rt0.c2 ELSE rt2.c2 END)))AND((+ (rt2.c0)))) INNER JOIN rt1 ON ((LOWER('-2050402932'))AND(((t0.c80)==(rt0.c2)))) WHERE ((NOT ((((vt0.c1, rt1.c2, vt0.c1)) BETWEEN (('0.42361237608584357', vt0.c0, rt0.c3)) AND ((rt1.c2, rt0.c0, 265128111)))))) ORDER BY (NOT (rt2.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c1, rt1.c2, vt0.c1)) BETWEEN (('0.42361237608584357', vt0.c0, rt0.c3)) AND ((rt1.c2, rt0.c0, 265128111)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)IS(CAST(t0.c33 AS TEXT))) RIGHT OUTER JOIN vt0 ON x'' LEFT OUTER JOIN rt2 ON ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(CASE WHEN rt0.c0 THEN rt2.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c33 WHEN rt1.c1 THEN rt0.c2 ELSE rt2.c2 END)))AND((+ (rt2.c0)))) INNER JOIN rt1 ON ((LOWER('-2050402932'))AND(((t0.c80)=(rt0.c2)))) ORDER BY (NOT (rt2.c2)) COLLATE BINARY DESC);
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c33 AS BLOB))AND(((t0.c80) NOT NULL))))AND(((t0.c33) NOTNULL)))) ORDER BY (((t0.c33 IN ())) NOT BETWEEN (((((t0.c33)OR(t0.c33)))AND(t0.c80))) AND ((t0.c80 IN ()))) DESC  NULLS LAST, (((((+ (0.10525224958344048)))AND((((t0.c80, t0.c80, t0.c80)) BETWEEN ((x'1c60b594', t0.c80, t0.c33)) AND ((t0.c80, t0.c80, t0.c33))))))AND((+ (t0.c33)))), (((+ (t0.c80))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c33 AS BLOB))AND(((t0.c80) NOT NULL))))AND(((t0.c33) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c33 IN ())) NOT BETWEEN (((((t0.c33)OR(t0.c33)))AND(t0.c80))) AND ((t0.c80 IN ()))) DESC  NULLS LAST, (((((+ (0.10525224958344048)))AND((((t0.c80, t0.c80, t0.c80)) BETWEEN ((x'1c60b594', t0.c80, t0.c33)) AND ((t0.c80, t0.c80, t0.c33))))))AND((+ (t0.c33)))), (((+ (t0.c80))) IS FALSE));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c33 AS BLOB))AND(((t0.c80) NOT NULL))))AND(((t0.c33) NOTNULL)))) ORDER BY (((t0.c33 IN ())) NOT BETWEEN (((((t0.c33)OR(t0.c33)))AND(t0.c80))) AND ((t0.c80 IN ()))) DESC  NULLS LAST, (((((+ (0.10525224958344048)))AND((((t0.c80, t0.c80, t0.c80)) BETWEEN ((x'1c60b594', t0.c80, t0.c33)) AND ((t0.c80, t0.c80, t0.c33))))))AND((+ (t0.c33)))), (((+ (t0.c80))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c33 AS BLOB))AND(((t0.c80) NOT NULL))))AND(((t0.c33) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c33 IN ())) NOT BETWEEN (((((t0.c33)OR(t0.c33)))AND(t0.c80))) AND ((t0.c80 IN ()))) DESC  NULLS LAST, (((((+ (0.10525224958344048)))AND((((t0.c80, t0.c80, t0.c80)) BETWEEN ((x'1c60b594', t0.c80, t0.c33)) AND ((t0.c80, t0.c80, t0.c33))))))AND((+ (t0.c33)))), (((+ (t0.c80))) IS FALSE));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c33 AS BLOB))AND(((t0.c80) NOT NULL))))AND(((t0.c33) NOTNULL)))) ORDER BY (((t0.c33 IN ())) NOT BETWEEN (((((t0.c33)OR(t0.c33)))AND(t0.c80))) AND ((t0.c80 IN ()))) DESC  NULLS LAST, (((((+ (0.10525224958344048)))AND((((t0.c80, t0.c80, t0.c80)) BETWEEN ((x'1c60b594', t0.c80, t0.c33)) AND ((t0.c80, t0.c80, t0.c33))))))AND((+ (t0.c33)))), (((+ (t0.c80))) IS FALSE);
SELECT * FROM rt0 RIGHT OUTER JOIN rt2 ON -5.75590807E8 RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS INTEGER))>(json_remove(rt1.c1, rt1.c1))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))==(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) WHERE (((CAST(rt2.c0 AS REAL))IS(((vt0.c0) NOT BETWEEN (rt2.c3) AND (rt0.c1))))) ORDER BY rt2.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt2.c0 AS REAL))IS(((vt0.c0) NOT BETWEEN (rt2.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON -5.75590807E8 RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS INTEGER))>(json_remove(rt1.c1, rt1.c1))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))=(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ORDER BY rt2.c0 COLLATE RTRIM ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN rt2 ON -5.75590807E8 RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS INTEGER))>(json_remove(rt1.c1, rt1.c1))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))==(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) WHERE (((CAST(rt2.c0 AS REAL))IS(((vt0.c0) NOT BETWEEN (rt2.c3) AND (rt0.c1))))) ORDER BY rt2.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt2.c0 AS REAL))IS(((vt0.c0) NOT BETWEEN (rt2.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON -5.75590807E8 RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS INTEGER))>(json_remove(rt1.c1, rt1.c1))) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))=(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ORDER BY rt2.c0 COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, vt0, rt2, t0 WHERE (((((x'') BETWEEN (t0.c33) AND (t0.c33))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (t0.c33) AND (t0.c33))) ISNULL)) IS TRUE)  as count FROM rt0, vt0, rt2, t0);
SELECT COUNT(*) FROM rt0, vt0, rt2, t0 WHERE (((((x'') BETWEEN (t0.c33) AND (t0.c33))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (t0.c33) AND (t0.c33))) ISNULL)) IS TRUE)  as count FROM rt0, vt0, rt2, t0);
SELECT COUNT(*) FROM rt0, vt0, rt2, t0 WHERE (((((x'') BETWEEN (t0.c33) AND (t0.c33))) ISNULL));
SELECT * FROM rt1, rt2, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY ((((((rt1.c0)AND(rt0.c1)))AND(rt2.c1))) NOT BETWEEN (CASE rt2.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt2.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt2.c2 END) AND ((rt0.c2 IN ()))) ASC  NULLS FIRST, LTRIM(((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY ((((((rt1.c0)AND(rt0.c1)))AND(rt2.c1))) NOT BETWEEN (CASE rt2.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt2.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt2.c2 END) AND ((rt0.c2 IN ()))) ASC  NULLS FIRST, LTRIM(((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt2, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY ((((((rt1.c0)AND(rt0.c1)))AND(rt2.c1))) NOT BETWEEN (CASE rt2.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt2.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt2.c2 END) AND ((rt0.c2 IN ()))) ASC  NULLS FIRST, LTRIM(((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY ((((((rt1.c0)AND(rt0.c1)))AND(rt2.c1))) NOT BETWEEN (CASE rt2.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt2.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt2.c2 END) AND ((rt0.c2 IN ()))) ASC  NULLS FIRST, LTRIM(((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt2, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY ((((((rt1.c0)AND(rt0.c1)))AND(rt2.c1))) NOT BETWEEN (CASE rt2.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt2.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt2.c2 END) AND ((rt0.c2 IN ()))) ASC  NULLS FIRST, LTRIM(((((rt1.c0)OR(rt0.c0)))OR(rt0.c3))) ASC  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN t0 ON ((CASE WHEN NULL THEN rt2.c3 END) BETWEEN (((rt0.c0)*(rt0.c2))) AND (rt0.c3)) INNER JOIN rt0 ON rt0.c2 FULL OUTER JOIN vt0 ON ((((((rt2.c2) IS FALSE))OR(((rt1.c2) BETWEEN (rt2.c1) AND (rt2.c3)))))AND(CASE t0.c33  WHEN rt1.c0 THEN rt2.c1 END)) LEFT OUTER JOIN rt2 ON (~ (((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((CASE WHEN NULL THEN rt2.c3 END) BETWEEN (((rt0.c0)*(rt0.c2))) AND (rt0.c3)) INNER JOIN rt0 ON rt0.c2 FULL OUTER JOIN vt0 ON ((((((rt2.c2) IS FALSE))OR(((rt1.c2) BETWEEN (rt2.c1) AND (rt2.c3)))))AND(CASE t0.c33  WHEN rt1.c0 THEN rt2.c1 END)) LEFT OUTER JOIN rt2 ON (~ (((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)))));
SELECT * FROM rt1 CROSS JOIN t0 ON ((CASE WHEN NULL THEN rt2.c3 END) BETWEEN (((rt0.c0)*(rt0.c2))) AND (rt0.c3)) INNER JOIN rt0 ON rt0.c2 FULL OUTER JOIN vt0 ON ((((((rt2.c2) IS FALSE))OR(((rt1.c2) BETWEEN (rt2.c1) AND (rt2.c3)))))AND(CASE t0.c33  WHEN rt1.c0 THEN rt2.c1 END)) LEFT OUTER JOIN rt2 ON (~ (((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((CASE WHEN NULL THEN rt2.c3 END) BETWEEN (((rt0.c0)*(rt0.c2))) AND (rt0.c3)) INNER JOIN rt0 ON rt0.c2 FULL OUTER JOIN vt0 ON ((((((rt2.c2) IS FALSE))OR(((rt1.c2) BETWEEN (rt2.c1) AND (rt2.c3)))))AND(CASE t0.c33  WHEN rt1.c0 THEN rt2.c1 END)) LEFT OUTER JOIN rt2 ON (~ (((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt1.c0 IN (rt2.c2))) IS FALSE)) ORDER BY UNLIKELY(CAST(rt2.c3 AS TEXT)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt2.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, rt2 ORDER BY UNLIKELY(CAST(rt2.c3 AS TEXT)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt1.c0 IN (rt2.c2))) IS FALSE)) ORDER BY UNLIKELY(CAST(rt2.c3 AS TEXT)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt2.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, rt2 ORDER BY UNLIKELY(CAST(rt2.c3 AS TEXT)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt1.c0 IN (rt2.c2))) IS FALSE)) ORDER BY UNLIKELY(CAST(rt2.c3 AS TEXT)) DESC  NULLS FIRST;
SELECT * FROM rt2, rt0, vt0, rt1 WHERE (((((vt0.c1 COLLATE BINARY)AND(((('q㗲^'))<((vt0.c1))))))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)AND(((('q㗲^'))<((vt0.c1))))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt2, rt0, vt0, rt1);
SELECT * FROM rt2, rt0, vt0, rt1 WHERE (((((vt0.c1 COLLATE BINARY)AND(((('q㗲^'))<((vt0.c1))))))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)AND(((('q㗲^'))<((vt0.c1))))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt2, rt0, vt0, rt1);
SELECT * FROM rt2, rt0, vt0, rt1 WHERE (((((vt0.c1 COLLATE BINARY)AND(((('q㗲^'))<((vt0.c1))))))AND((rt0.c2 IN ()))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(x'47ed')))|(((rt0.c0) IS FALSE)))) ORDER BY ((((((((HEX(rt0.c2))OR(CAST(rt0.c0 AS BLOB))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END)))AND((~ (rt0.c0)))))OR((NOT (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c0)))AND(x'47ed')))|(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((HEX(rt0.c2))OR(CAST(rt0.c0 AS BLOB))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END)))AND((~ (rt0.c0)))))OR((NOT (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(x'47ed')))|(((rt0.c0) IS FALSE)))) ORDER BY ((((((((HEX(rt0.c2))OR(CAST(rt0.c0 AS BLOB))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END)))AND((~ (rt0.c0)))))OR((NOT (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c0)))AND(x'47ed')))|(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((HEX(rt0.c2))OR(CAST(rt0.c0 AS BLOB))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END)))AND((~ (rt0.c0)))))OR((NOT (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(x'47ed')))|(((rt0.c0) IS FALSE)))) ORDER BY ((((((((HEX(rt0.c2))OR(CAST(rt0.c0 AS BLOB))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END)))AND((~ (rt0.c0)))))OR((NOT (rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN t0 ON rt0.c1 WHERE (x'a3c4') ORDER BY ((((rt0.c3 COLLATE RTRIM)AND((NOT (t0.c80)))))AND(CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST, t0.c33, (~ (x'72d2'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'a3c4') IS TRUE)  as count FROM rt0 INNER JOIN t0 ON rt0.c1 ORDER BY ((((rt0.c3 COLLATE RTRIM)AND((NOT (t0.c80)))))AND(CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST, t0.c33, (~ (x'72d2'))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON rt0.c1 WHERE (x'a3c4') ORDER BY ((((rt0.c3 COLLATE RTRIM)AND((NOT (t0.c80)))))AND(CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST, t0.c33, (~ (x'72d2'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'a3c4') IS TRUE)  as count FROM rt0 INNER JOIN t0 ON rt0.c1 ORDER BY ((((rt0.c3 COLLATE RTRIM)AND((NOT (t0.c80)))))AND(CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST, t0.c33, (~ (x'72d2'))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON rt0.c1 WHERE (x'a3c4') ORDER BY ((((rt0.c3 COLLATE RTRIM)AND((NOT (t0.c80)))))AND(CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST, t0.c33, (~ (x'72d2'))  NULLS LAST;
SELECT * FROM rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SQLITE_VERSION());
SELECT * FROM vt0, t0, rt1, rt2 WHERE ((LOWER(DISTINCT rt1.c0) IN ((vt0.c0 IN ())))) ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN rt2.c2 END THEN t0.c33 COLLATE BINARY WHEN ((rt2.c3)IS NOT(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt2.c3) AND ('-1228104383')) WHEN CAST(rt2.c0 AS REAL) THEN (((('')AND(rt2.c1)))AND(rt2.c3)) END, (((t0.c80, rt1.c0, rt1.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL), (vt0.c1 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))))) AND (((('&Kx') IS TRUE), (rt2.c3 IN (vt0.c1)), (t0.c80 IN (vt0.c1)))))  NULLS FIRST, ((CAST(rt2.c2 AS REAL))IS(((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(DISTINCT rt1.c0) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, rt1, rt2 ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN rt2.c2 END THEN t0.c33 COLLATE BINARY WHEN ((rt2.c3)IS NOT(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt2.c3) AND ('-1228104383')) WHEN CAST(rt2.c0 AS REAL) THEN (((('')AND(rt2.c1)))AND(rt2.c3)) END, (((t0.c80, rt1.c0, rt1.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL), (vt0.c1 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))))) AND (((('&Kx') IS TRUE), (rt2.c3 IN (vt0.c1)), (t0.c80 IN (vt0.c1)))))  NULLS FIRST, ((CAST(rt2.c2 AS REAL))IS(((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)))) ASC);
SELECT * FROM vt0, t0, rt1, rt2 WHERE ((LOWER(DISTINCT rt1.c0) IN ((vt0.c0 IN ())))) ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN rt2.c2 END THEN t0.c33 COLLATE BINARY WHEN ((rt2.c3)IS NOT(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt2.c3) AND ('-1228104383')) WHEN CAST(rt2.c0 AS REAL) THEN (((('')AND(rt2.c1)))AND(rt2.c3)) END, (((t0.c80, rt1.c0, rt1.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL), (vt0.c1 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))))) AND (((('&Kx') IS TRUE), (rt2.c3 IN (vt0.c1)), (t0.c80 IN (vt0.c1)))))  NULLS FIRST, ((CAST(rt2.c2 AS REAL))IS(((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(DISTINCT rt1.c0) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, rt1, rt2 ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN rt2.c2 END THEN t0.c33 COLLATE BINARY WHEN ((rt2.c3)IS NOT(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt2.c3) AND ('-1228104383')) WHEN CAST(rt2.c0 AS REAL) THEN (((('')AND(rt2.c1)))AND(rt2.c3)) END, (((t0.c80, rt1.c0, rt1.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL), (vt0.c1 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))))) AND (((('&Kx') IS TRUE), (rt2.c3 IN (vt0.c1)), (t0.c80 IN (vt0.c1)))))  NULLS FIRST, ((CAST(rt2.c2 AS REAL))IS(((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)))) ASC);
SELECT * FROM vt0, t0, rt1, rt2 WHERE ((LOWER(DISTINCT rt1.c0) IN ((vt0.c0 IN ())))) ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN rt2.c2 END THEN t0.c33 COLLATE BINARY WHEN ((rt2.c3)IS NOT(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt2.c3) AND ('-1228104383')) WHEN CAST(rt2.c0 AS REAL) THEN (((('')AND(rt2.c1)))AND(rt2.c3)) END, (((t0.c80, rt1.c0, rt1.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL), (vt0.c1 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))))) AND (((('&Kx') IS TRUE), (rt2.c3 IN (vt0.c1)), (t0.c80 IN (vt0.c1)))))  NULLS FIRST, ((CAST(rt2.c2 AS REAL))IS(((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)))) ASC;
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c3 END)AND(CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN 0.11709830028151658 ELSE rt1.c2 END)))OR(0.6683067314008168)))OR((- (rt0.c2)))))OR(((((rt1.c1)AND(rt0.c1)))OR(x'')))) WHERE (rt0.c1) ORDER BY (TOTAL_CHANGES() IN (DATE(rt1.c1, x'f8ca', NULL, rt0.c0, rt0.c1))), (NOT (((rt0.c3)<(rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c3 END)AND(CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN 0.11709830028151658 ELSE rt1.c2 END)))OR(0.6683067314008168)))OR((- (rt0.c2)))))OR(((((rt1.c1)AND(rt0.c1)))OR(x'')))) ORDER BY (TOTAL_CHANGES() IN (DATE(rt1.c1, x'f8ca', NULL, rt0.c0, rt0.c1))), (NOT (((rt0.c3)<(rt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c3 END)AND(CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN 0.11709830028151658 ELSE rt1.c2 END)))OR(0.6683067314008168)))OR((- (rt0.c2)))))OR(((((rt1.c1)AND(rt0.c1)))OR(x'')))) WHERE (rt0.c1) ORDER BY (TOTAL_CHANGES() IN (DATE(rt1.c1, x'f8ca', NULL, rt0.c0, rt0.c1))), (NOT (((rt0.c3)<(rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c3 END)AND(CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN 0.11709830028151658 ELSE rt1.c2 END)))OR(0.6683067314008168)))OR((- (rt0.c2)))))OR(((((rt1.c1)AND(rt0.c1)))OR(x'')))) ORDER BY (TOTAL_CHANGES() IN (DATE(rt1.c1, x'f8ca', NULL, rt0.c0, rt0.c1))), (NOT (((rt0.c3)<(rt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c3 END)AND(CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN 0.11709830028151658 ELSE rt1.c2 END)))OR(0.6683067314008168)))OR((- (rt0.c2)))))OR(((((rt1.c1)AND(rt0.c1)))OR(x'')))) WHERE (rt0.c1) ORDER BY (TOTAL_CHANGES() IN (DATE(rt1.c1, x'f8ca', NULL, rt0.c0, rt0.c1))), (NOT (((rt0.c3)<(rt1.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, rt2, vt0 WHERE (CAST(vt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, rt2, vt0);
SELECT COUNT(*) FROM t0, rt1, rt2, vt0 WHERE (CAST(vt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, rt2, vt0);
SELECT COUNT(*) FROM t0, rt1, rt2, vt0 WHERE (CAST(vt0.c1 AS NUMERIC));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((CAST(t0.c33 AS REAL) IN ())) ORDER BY (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (t0.c80))))<((((rt0.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c33 AS REAL) IN ())) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (t0.c80))))<((((rt0.c0) IS TRUE)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((CAST(t0.c33 AS REAL) IN ())) ORDER BY (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (t0.c80))))<((((rt0.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c33 AS REAL) IN ())) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (t0.c80))))<((((rt0.c0) IS TRUE)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((CAST(t0.c33 AS REAL) IN ())) ORDER BY (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (t0.c80))))<((((rt0.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN rt2 ON (((((t0.c33 IN ()))AND(t0.c80 COLLATE BINARY)))OR(((((t0.c33)AND(rt2.c0)))AND(t0.c33)))) WHERE (((((rt2.c3) BETWEEN (rt2.c1) AND (rt2.c1))) BETWEEN ((NOT (t0.c33))) AND (((((t0.c80)AND(rt2.c2)))OR(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3) BETWEEN (rt2.c1) AND (rt2.c1))) BETWEEN ((NOT (t0.c33))) AND (((((t0.c80)AND(rt2.c2)))OR(rt2.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt2 ON (((((t0.c33 IN ()))AND(t0.c80 COLLATE BINARY)))OR(((((t0.c33)AND(rt2.c0)))AND(t0.c33)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt2 ON (((((t0.c33 IN ()))AND(t0.c80 COLLATE BINARY)))OR(((((t0.c33)AND(rt2.c0)))AND(t0.c33)))) WHERE (((((rt2.c3) BETWEEN (rt2.c1) AND (rt2.c1))) BETWEEN ((NOT (t0.c33))) AND (((((t0.c80)AND(rt2.c2)))OR(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3) BETWEEN (rt2.c1) AND (rt2.c1))) BETWEEN ((NOT (t0.c33))) AND (((((t0.c80)AND(rt2.c2)))OR(rt2.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt2 ON (((((t0.c33 IN ()))AND(t0.c80 COLLATE BINARY)))OR(((((t0.c33)AND(rt2.c0)))AND(t0.c33)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt2 ON (((((t0.c33 IN ()))AND(t0.c80 COLLATE BINARY)))OR(((((t0.c33)AND(rt2.c0)))AND(t0.c33)))) WHERE (((((rt2.c3) BETWEEN (rt2.c1) AND (rt2.c1))) BETWEEN ((NOT (t0.c33))) AND (((((t0.c80)AND(rt2.c2)))OR(rt2.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)/(vt0.c0)))OR(LIKELY(x'bed7'))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)/(vt0.c0)))OR(LIKELY(x'bed7'))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)/(vt0.c0)))OR(LIKELY(x'bed7'))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)/(vt0.c0)))OR(LIKELY(x'bed7'))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)/(vt0.c0)))OR(LIKELY(x'bed7'))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0, rt1, rt2, t0, vt0 WHERE (CAST(CAST(t0.c80 AS INTEGER) AS INTEGER)) ORDER BY (((rt0.c0)+(rt2.c0)) IN ())  NULLS LAST, CASE load_extension(rt2.c1, vt0.c1)  WHEN ((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt2.c0 END WHEN ((t0.c80)+(rt1.c1)) THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN (rt1.c1)) THEN rt1.c1 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c80 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, rt2, t0, vt0 ORDER BY (((rt0.c0)+(rt2.c0)) IN ())  NULLS LAST, CASE load_extension(rt2.c1, vt0.c1)  WHEN ((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt2.c0 END WHEN ((t0.c80)+(rt1.c1)) THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN (rt1.c1)) THEN rt1.c1 COLLATE BINARY END ASC);
SELECT COUNT(*) FROM rt0, rt1, rt2, t0, vt0 WHERE (CAST(CAST(t0.c80 AS INTEGER) AS INTEGER)) ORDER BY (((rt0.c0)+(rt2.c0)) IN ())  NULLS LAST, CASE load_extension(rt2.c1, vt0.c1)  WHEN ((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt2.c0 END WHEN ((t0.c80)+(rt1.c1)) THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN (rt1.c1)) THEN rt1.c1 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c80 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, rt2, t0, vt0 ORDER BY (((rt0.c0)+(rt2.c0)) IN ())  NULLS LAST, CASE load_extension(rt2.c1, vt0.c1)  WHEN ((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt2.c0 END WHEN ((t0.c80)+(rt1.c1)) THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN (rt1.c1)) THEN rt1.c1 COLLATE BINARY END ASC);
SELECT * FROM rt2, t0, vt0, rt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))&(rt2.c2))) ORDER BY json_remove((~ (t0.c33)), (NOT (rt1.c0)), CAST(rt2.c3 AS REAL), ((NULL)/(t0.c33))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))&(rt2.c2))) IS TRUE)  as count FROM rt2, t0, vt0, rt1, rt0 ORDER BY json_remove((~ (t0.c33)), (NOT (rt1.c0)), CAST(rt2.c3 AS REAL), ((NULL)/(t0.c33))) DESC  NULLS LAST);
SELECT * FROM rt2, t0, vt0, rt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))&(rt2.c2))) ORDER BY json_remove((~ (t0.c33)), (NOT (rt1.c0)), CAST(rt2.c3 AS REAL), ((NULL)/(t0.c33))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))&(rt2.c2))) IS TRUE)  as count FROM rt2, t0, vt0, rt1, rt0 ORDER BY json_remove((~ (t0.c33)), (NOT (rt1.c0)), CAST(rt2.c3 AS REAL), ((NULL)/(t0.c33))) DESC  NULLS LAST);
SELECT * FROM rt2, t0, vt0, rt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))&(rt2.c2))) ORDER BY json_remove((~ (t0.c33)), (NOT (rt1.c0)), CAST(rt2.c3 AS REAL), ((NULL)/(t0.c33))) DESC  NULLS LAST;
SELECT * FROM rt1, rt0, rt2 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (((((((((rt0.c0)AND(rt2.c2)))OR(rt0.c3)))AND(rt1.c2)))AND(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (((((((((rt0.c0)AND(rt2.c2)))OR(rt0.c3)))AND(rt1.c2)))AND(rt2.c0))))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (((((((((rt0.c0)AND(rt2.c2)))OR(rt0.c3)))AND(rt1.c2)))AND(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (((((((((rt0.c0)AND(rt2.c2)))OR(rt0.c3)))AND(rt1.c2)))AND(rt2.c0))))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (((((((((rt0.c0)AND(rt2.c2)))OR(rt0.c3)))AND(rt1.c2)))AND(rt2.c0)))));
SELECT COUNT(*) FROM rt2, rt1, rt0, t0 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN '?YW~v' WHEN ((((rt2.c1)AND(rt2.c0)))AND(rt0.c1)) THEN CAST(t0.c33 AS NUMERIC) WHEN (~ (rt2.c2)) THEN json_insert(vt0.c1, rt1.c1, vt0.c1) WHEN (rt0.c2 IN ()) THEN (- ('RB')) WHEN ((rt1.c2)|(rt2.c3)) THEN (+ (rt2.c2)) END) ORDER BY CAST((((t0.c80, x'', rt2.c1)) BETWEEN (('-2050402932', rt0.c2, rt2.c3)) AND ((rt0.c0, rt0.c2, rt1.c0))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN '?YW~v' WHEN ((((rt2.c1)AND(rt2.c0)))AND(rt0.c1)) THEN CAST(t0.c33 AS NUMERIC) WHEN (~ (rt2.c2)) THEN json_insert(vt0.c1, rt1.c1, vt0.c1) WHEN (rt0.c2 IN ()) THEN (- ('RB')) WHEN ((rt1.c2)|(rt2.c3)) THEN (+ (rt2.c2)) END) IS TRUE)  as count FROM rt2, rt1, rt0, t0 NATURAL JOIN vt0 ORDER BY CAST((((t0.c80, x'', rt2.c1)) BETWEEN (('-2050402932', rt0.c2, rt2.c3)) AND ((rt0.c0, rt0.c2, rt1.c0))) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt2, rt1, rt0, t0 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN '?YW~v' WHEN ((((rt2.c1)AND(rt2.c0)))AND(rt0.c1)) THEN CAST(t0.c33 AS NUMERIC) WHEN (~ (rt2.c2)) THEN json_insert(vt0.c1, rt1.c1, vt0.c1) WHEN (rt0.c2 IN ()) THEN (- ('RB')) WHEN ((rt1.c2)|(rt2.c3)) THEN (+ (rt2.c2)) END) ORDER BY CAST((((t0.c80, x'', rt2.c1)) BETWEEN (('-2050402932', rt0.c2, rt2.c3)) AND ((rt0.c0, rt0.c2, rt1.c0))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN '?YW~v' WHEN ((((rt2.c1)AND(rt2.c0)))AND(rt0.c1)) THEN CAST(t0.c33 AS NUMERIC) WHEN (~ (rt2.c2)) THEN json_insert(vt0.c1, rt1.c1, vt0.c1) WHEN (rt0.c2 IN ()) THEN (- ('RB')) WHEN ((rt1.c2)|(rt2.c3)) THEN (+ (rt2.c2)) END) IS TRUE)  as count FROM rt2, rt1, rt0, t0 NATURAL JOIN vt0 ORDER BY CAST((((t0.c80, x'', rt2.c1)) BETWEEN (('-2050402932', rt0.c2, rt2.c3)) AND ((rt0.c0, rt0.c2, rt1.c0))) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt2, rt1, rt0, t0 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN '?YW~v' WHEN ((((rt2.c1)AND(rt2.c0)))AND(rt0.c1)) THEN CAST(t0.c33 AS NUMERIC) WHEN (~ (rt2.c2)) THEN json_insert(vt0.c1, rt1.c1, vt0.c1) WHEN (rt0.c2 IN ()) THEN (- ('RB')) WHEN ((rt1.c2)|(rt2.c3)) THEN (+ (rt2.c2)) END) ORDER BY CAST((((t0.c80, x'', rt2.c1)) BETWEEN (('-2050402932', rt0.c2, rt2.c3)) AND ((rt0.c0, rt0.c2, rt1.c0))) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt0, rt2, vt0, rt1 FULL OUTER JOIN t0 ON 0.877570188562307 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM rt0, rt2, vt0, rt1 FULL OUTER JOIN t0 ON 0.877570188562307);
SELECT ALL * FROM rt0, rt2, vt0, rt1 FULL OUTER JOIN t0 ON 0.877570188562307 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM rt0, rt2, vt0, rt1 FULL OUTER JOIN t0 ON 0.877570188562307);
SELECT ALL * FROM rt0, rt2, vt0, rt1 FULL OUTER JOIN t0 ON 0.877570188562307 WHERE (((vt0.c0) IS TRUE));
SELECT ALL * FROM rt0, rt1, t0, rt2 WHERE (0x349617c6);
SELECT SUM(count) FROM (SELECT ((0x349617c6) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED, t0, rt2);
SELECT ALL * FROM rt0, rt1, t0, rt2 WHERE (0x349617c6);
SELECT SUM(count) FROM (SELECT ((0x349617c6) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED, t0, rt2);
SELECT ALL * FROM rt0, rt1, t0, rt2 WHERE (0x349617c6);
SELECT ALL * FROM rt2, vt0, rt0 INNER JOIN t0 ON UNLIKELY(((rt0.c3)+(rt0.c2))) WHERE (TRIM(CASE WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY rtreenode((NULL IN ()), '-497593226'), '-1719576793', ((rt0.c2 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN rt0.c3 THEN rt0.c2 END)) IS TRUE)  as count FROM rt2, vt0, rt0 INNER JOIN t0 ON UNLIKELY(((rt0.c3)+(rt0.c2))) ORDER BY rtreenode((NULL IN ()), '-497593226'), '-1719576793', ((rt0.c2 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt2, vt0, rt0 INNER JOIN t0 ON UNLIKELY(((rt0.c3)+(rt0.c2))) WHERE (TRIM(CASE WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY rtreenode((NULL IN ()), '-497593226'), '-1719576793', ((rt0.c2 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN rt0.c3 THEN rt0.c2 END)) IS TRUE)  as count FROM rt2, vt0, rt0 INNER JOIN t0 ON UNLIKELY(((rt0.c3)+(rt0.c2))) ORDER BY rtreenode((NULL IN ()), '-497593226'), '-1719576793', ((rt0.c2 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt2, vt0, rt0 INNER JOIN t0 ON UNLIKELY(((rt0.c3)+(rt0.c2))) WHERE (TRIM(CASE WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY rtreenode((NULL IN ()), '-497593226'), '-1719576793', ((rt0.c2 IN ()) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt2, rt1, rt0, vt0 WHERE (((((rt2.c3)OR((((0.3343654881609428)) NOT BETWEEN ((t0.c33)) AND ((rt2.c0))))))AND(CAST(rt2.c3 AS REAL)))) ORDER BY CASE WHEN ((((((((rt2.c3)AND(t0.c80)))OR(vt0.c1)))AND(rt0.c2)))AND('-673763584')) THEN ((((rt1.c2)OR(rt0.c2)))OR(vt0.c0)) ELSE ((rt0.c2)*(rt2.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3)OR((((0.3343654881609428)) NOT BETWEEN ((t0.c33)) AND ((rt2.c0))))))AND(CAST(rt2.c3 AS REAL)))) IS TRUE)  as count FROM t0, rt2, rt1, rt0, vt0 ORDER BY CASE WHEN ((((((((rt2.c3)AND(t0.c80)))OR(vt0.c1)))AND(rt0.c2)))AND('-673763584')) THEN ((((rt1.c2)OR(rt0.c2)))OR(vt0.c0)) ELSE ((rt0.c2)*(rt2.c1)) END DESC);
SELECT ALL * FROM t0, rt2, rt1, rt0, vt0 WHERE (((((rt2.c3)OR((((0.3343654881609428)) NOT BETWEEN ((t0.c33)) AND ((rt2.c0))))))AND(CAST(rt2.c3 AS REAL)))) ORDER BY CASE WHEN ((((((((rt2.c3)AND(t0.c80)))OR(vt0.c1)))AND(rt0.c2)))AND('-673763584')) THEN ((((rt1.c2)OR(rt0.c2)))OR(vt0.c0)) ELSE ((rt0.c2)*(rt2.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3)OR((((0.3343654881609428)) NOT BETWEEN ((t0.c33)) AND ((rt2.c0))))))AND(CAST(rt2.c3 AS REAL)))) IS TRUE)  as count FROM t0, rt2, rt1, rt0, vt0 ORDER BY CASE WHEN ((((((((rt2.c3)AND(t0.c80)))OR(vt0.c1)))AND(rt0.c2)))AND('-673763584')) THEN ((((rt1.c2)OR(rt0.c2)))OR(vt0.c0)) ELSE ((rt0.c2)*(rt2.c1)) END DESC);
SELECT ALL * FROM t0, rt2, rt1, rt0, vt0 WHERE (((((rt2.c3)OR((((0.3343654881609428)) NOT BETWEEN ((t0.c33)) AND ((rt2.c0))))))AND(CAST(rt2.c3 AS REAL)))) ORDER BY CASE WHEN ((((((((rt2.c3)AND(t0.c80)))OR(vt0.c1)))AND(rt0.c2)))AND('-673763584')) THEN ((((rt1.c2)OR(rt0.c2)))OR(vt0.c0)) ELSE ((rt0.c2)*(rt2.c1)) END DESC;
SELECT * FROM rt0 WHERE (0X72a027a2);
SELECT SUM(count) FROM (SELECT ALL ((0x72a027a2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0X72a027a2);
SELECT SUM(count) FROM (SELECT ALL ((0x72a027a2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0X72a027a2);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1) NOTNULL) IN ()));
SELECT COUNT(*) FROM vt0, t0, rt1, rt2 WHERE (((((CAST(rt2.c2 AS NUMERIC))OR(((((rt2.c3)AND(t0.c33)))AND(rt2.c2)))))OR(json(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt2.c2 AS NUMERIC))OR(((((rt2.c3)AND(t0.c33)))AND(rt2.c2)))))OR(json(rt1.c0)))) IS TRUE)  as count FROM vt0, t0, rt1, rt2);
SELECT COUNT(*) FROM vt0, t0, rt1, rt2 WHERE (((((CAST(rt2.c2 AS NUMERIC))OR(((((rt2.c3)AND(t0.c33)))AND(rt2.c2)))))OR(json(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt2.c2 AS NUMERIC))OR(((((rt2.c3)AND(t0.c33)))AND(rt2.c2)))))OR(json(rt1.c0)))) IS TRUE)  as count FROM vt0, t0, rt1, rt2);
SELECT COUNT(*) FROM vt0, t0, rt1, rt2 WHERE (((((CAST(rt2.c2 AS NUMERIC))OR(((((rt2.c3)AND(t0.c33)))AND(rt2.c2)))))OR(json(rt1.c0))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt2 ON '' RIGHT OUTER JOIN t0 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL) WHERE (((NOT (t0.c80)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c80)) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON '' RIGHT OUTER JOIN t0 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt2 ON '' RIGHT OUTER JOIN t0 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL) WHERE (((NOT (t0.c80)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c80)) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON '' RIGHT OUTER JOIN t0 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt2 ON '' RIGHT OUTER JOIN t0 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL) WHERE (((NOT (t0.c80)) IN ()));
SELECT ALL * FROM rt0 WHERE (LOWER(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))));
SELECT ALL * FROM rt1, t0 INNER JOIN rt2 ON (rt1.c2 IN (rt2.c1, rt1.c1)) COLLATE RTRIM WHERE ((((rt1.c2)) NOT BETWEEN ((t0.c33 COLLATE BINARY)) AND ((CAST(NULL AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((t0.c33 COLLATE BINARY)) AND ((CAST(NULL AS REAL))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt2 ON (rt1.c2 IN (rt2.c1, rt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt1, t0 INNER JOIN rt2 ON (rt1.c2 IN (rt2.c1, rt1.c1)) COLLATE RTRIM WHERE ((((rt1.c2)) NOT BETWEEN ((t0.c33 COLLATE BINARY)) AND ((CAST(NULL AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((t0.c33 COLLATE BINARY)) AND ((CAST(NULL AS REAL))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt2 ON (rt1.c2 IN (rt2.c1, rt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt1, t0 INNER JOIN rt2 ON (rt1.c2 IN (rt2.c1, rt1.c1)) COLLATE RTRIM WHERE ((((rt1.c2)) NOT BETWEEN ((t0.c33 COLLATE BINARY)) AND ((CAST(NULL AS REAL)))));
SELECT COUNT(*) FROM t0, rt2 WHERE (x'') ORDER BY 'Mc㗲V' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt2 ORDER BY 'Mc㗲V' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt2 WHERE (x'') ORDER BY 'Mc㗲V' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt2 ORDER BY 'Mc㗲V' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt2 WHERE (x'') ORDER BY 'Mc㗲V' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt2, rt1, t0, rt0 WHERE ((('-254648891')AND((rt0.c0 IN (t0.c80)))));
SELECT SUM(count) FROM (SELECT (((('-254648891')AND((rt0.c0 IN (t0.c80))))) IS TRUE)  as count FROM vt0, rt2, rt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt2, rt1, t0, rt0 WHERE ((('-254648891')AND((rt0.c0 IN (t0.c80)))));
SELECT SUM(count) FROM (SELECT (((('-254648891')AND((rt0.c0 IN (t0.c80))))) IS TRUE)  as count FROM vt0, rt2, rt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt2, rt1, t0, rt0 WHERE ((('-254648891')AND((rt0.c0 IN (t0.c80)))));
SELECT ALL * FROM rt2, t0, rt0, rt1, vt0 WHERE (((((((((t0.c33)OR(t0.c80)))AND(vt0.c1)))OR(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM) ORDER BY (~ ((((rt2.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c80))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c33)OR(t0.c80)))AND(vt0.c1)))OR(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt2, t0, rt0, rt1, vt0 ORDER BY (~ ((((rt2.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c80))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt2, t0, rt0, rt1, vt0 WHERE (((((((((t0.c33)OR(t0.c80)))AND(vt0.c1)))OR(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM) ORDER BY (~ ((((rt2.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c80))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c33)OR(t0.c80)))AND(vt0.c1)))OR(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt2, t0, rt0, rt1, vt0 ORDER BY (~ ((((rt2.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c80))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt2, t0, rt0, rt1, vt0 WHERE (((((((((t0.c33)OR(t0.c80)))AND(vt0.c1)))OR(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM) ORDER BY (~ ((((rt2.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c80))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt2, t0, rt0, rt1, vt0 WHERE (CASE WHEN CAST(t0.c33 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((x'')%(t0.c33)) END) ORDER BY CASE CASE WHEN rt1.c1 THEN rt0.c0 END  WHEN rt0.c1 THEN ((rt1.c1)<=(t0.c80)) WHEN ((NULL)>(rt1.c2)) THEN ((((rt2.c0)AND(0.10701518742170724)))AND(rt2.c0)) WHEN (((rt1.c0))<>((rt2.c0))) THEN x'' COLLATE BINARY ELSE ((rt0.c0)|(rt2.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c33 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((x'')%(t0.c33)) END) IS TRUE)  as count FROM rt2, t0, rt0, rt1, vt0 ORDER BY CASE CASE WHEN rt1.c1 THEN rt0.c0 END  WHEN rt0.c1 THEN ((rt1.c1)<=(t0.c80)) WHEN ((NULL)>(rt1.c2)) THEN ((((rt2.c0)AND(0.10701518742170724)))AND(rt2.c0)) WHEN (((rt1.c0))<>((rt2.c0))) THEN x'' COLLATE BINARY ELSE ((rt0.c0)|(rt2.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt2, t0, rt0, rt1, vt0 WHERE (CASE WHEN CAST(t0.c33 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((x'')%(t0.c33)) END) ORDER BY CASE CASE WHEN rt1.c1 THEN rt0.c0 END  WHEN rt0.c1 THEN ((rt1.c1)<=(t0.c80)) WHEN ((NULL)>(rt1.c2)) THEN ((((rt2.c0)AND(0.10701518742170724)))AND(rt2.c0)) WHEN (((rt1.c0))<>((rt2.c0))) THEN x'' COLLATE BINARY ELSE ((rt0.c0)|(rt2.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c33 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((x'')%(t0.c33)) END) IS TRUE)  as count FROM rt2, t0, rt0, rt1, vt0 ORDER BY CASE CASE WHEN rt1.c1 THEN rt0.c0 END  WHEN rt0.c1 THEN ((rt1.c1)<=(t0.c80)) WHEN ((NULL)>(rt1.c2)) THEN ((((rt2.c0)AND(0.10701518742170724)))AND(rt2.c0)) WHEN (((rt1.c0))<>((rt2.c0))) THEN x'' COLLATE BINARY ELSE ((rt0.c0)|(rt2.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt2, t0, rt0, rt1, vt0 WHERE (CASE WHEN CAST(t0.c33 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((x'')%(t0.c33)) END) ORDER BY CASE CASE WHEN rt1.c1 THEN rt0.c0 END  WHEN rt0.c1 THEN ((rt1.c1)<=(t0.c80)) WHEN ((NULL)>(rt1.c2)) THEN ((((rt2.c0)AND(0.10701518742170724)))AND(rt2.c0)) WHEN (((rt1.c0))<>((rt2.c0))) THEN x'' COLLATE BINARY ELSE ((rt0.c0)|(rt2.c2)) END DESC  NULLS FIRST;
SELECT * FROM rt1, rt2, vt0 WHERE (((MAX(rt2.c2, rt2.c3))=(((rt2.c2) NOT BETWEEN (NULL) AND (rt1.c1))))) ORDER BY CASE (rt2.c2 IN (vt0.c1, rt2.c0))  WHEN rt2.c0 COLLATE BINARY THEN ((rt2.c2) ISNULL) END, SQLITE_COMPILEOPTION_GET(GLOB(rt2.c1, rt2.c1));
SELECT SUM(count) FROM (SELECT ((((MAX(rt2.c2, rt2.c3))==(((rt2.c2) NOT BETWEEN (NULL) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt2, vt0 ORDER BY CASE (rt2.c2 IN (vt0.c1, rt2.c0))  WHEN rt2.c0 COLLATE BINARY THEN ((rt2.c2) ISNULL) END, SQLITE_COMPILEOPTION_GET(GLOB(rt2.c1, rt2.c1)));
SELECT * FROM rt1, rt2, vt0 WHERE (((MAX(rt2.c2, rt2.c3))=(((rt2.c2) NOT BETWEEN (NULL) AND (rt1.c1))))) ORDER BY CASE (rt2.c2 IN (vt0.c1, rt2.c0))  WHEN rt2.c0 COLLATE BINARY THEN ((rt2.c2) ISNULL) END, SQLITE_COMPILEOPTION_GET(GLOB(rt2.c1, rt2.c1));
SELECT SUM(count) FROM (SELECT ((((MAX(rt2.c2, rt2.c3))==(((rt2.c2) NOT BETWEEN (NULL) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt2, vt0 ORDER BY CASE (rt2.c2 IN (vt0.c1, rt2.c0))  WHEN rt2.c0 COLLATE BINARY THEN ((rt2.c2) ISNULL) END, SQLITE_COMPILEOPTION_GET(GLOB(rt2.c1, rt2.c1)));
SELECT * FROM rt1, rt2, vt0 WHERE (((MAX(rt2.c2, rt2.c3))=(((rt2.c2) NOT BETWEEN (NULL) AND (rt1.c1))))) ORDER BY CASE (rt2.c2 IN (vt0.c1, rt2.c0))  WHEN rt2.c0 COLLATE BINARY THEN ((rt2.c2) ISNULL) END, SQLITE_COMPILEOPTION_GET(GLOB(rt2.c1, rt2.c1));
SELECT * FROM rt2, rt0, rt1 WHERE (CASE WHEN ((((rt0.c2)OR(rt2.c3)))AND(rt2.c2)) THEN (rt1.c2 IN ()) ELSE ((rt2.c3)/(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt2.c3)))AND(rt2.c2)) THEN (rt1.c2 IN ()) ELSE ((rt2.c3)/(rt0.c1)) END) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0, rt1 WHERE (CASE WHEN ((((rt0.c2)OR(rt2.c3)))AND(rt2.c2)) THEN (rt1.c2 IN ()) ELSE ((rt2.c3)/(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt2.c3)))AND(rt2.c2)) THEN (rt1.c2 IN ()) ELSE ((rt2.c3)/(rt0.c1)) END) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT * FROM rt2, rt0, rt1 WHERE (CASE WHEN ((((rt0.c2)OR(rt2.c3)))AND(rt2.c2)) THEN (rt1.c2 IN ()) ELSE ((rt2.c3)/(rt0.c1)) END);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((((rt1.c1)!=(rt1.c0)))IS(NULL)), CAST((- (rt1.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)<>(rt1.c0)))IS(NULL)), CAST((- (rt1.c2)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((((rt1.c1)!=(rt1.c0)))IS(NULL)), CAST((- (rt1.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)<>(rt1.c0)))IS(NULL)), CAST((- (rt1.c2)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((((rt1.c1)!=(rt1.c0)))IS(NULL)), CAST((- (rt1.c2)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt2 WHERE (rt1.c0) ORDER BY ((((((rt2.c0)IS(rt2.c3)))OR((~ (rt1.c2)))))AND((((x'', rt2.c0, rt1.c2, rt1.c2, rt2.c0, rt2.c2, rt1.c1))==((rt2.c2, '', rt1.c2, rt1.c2, NULL, rt1.c2, rt2.c3))))) DESC  NULLS FIRST, ((((x'')>>(0.99823821923936)))>>((rt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((((rt2.c0)IS(rt2.c3)))OR((~ (rt1.c2)))))AND((((x'', rt2.c0, rt1.c2, rt1.c2, rt2.c0, rt2.c2, rt1.c1))==((rt2.c2, '', rt1.c2, rt1.c2, NULL, rt1.c2, rt2.c3))))) DESC  NULLS FIRST, ((((x'')>>(0.99823821923936)))>>((rt1.c1 IN ()))) DESC);
SELECT COUNT(*) FROM rt1, rt2 WHERE (rt1.c0) ORDER BY ((((((rt2.c0)IS(rt2.c3)))OR((~ (rt1.c2)))))AND((((x'', rt2.c0, rt1.c2, rt1.c2, rt2.c0, rt2.c2, rt1.c1))==((rt2.c2, '', rt1.c2, rt1.c2, NULL, rt1.c2, rt2.c3))))) DESC  NULLS FIRST, ((((x'')>>(0.99823821923936)))>>((rt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((((rt2.c0)IS(rt2.c3)))OR((~ (rt1.c2)))))AND((((x'', rt2.c0, rt1.c2, rt1.c2, rt2.c0, rt2.c2, rt1.c1))==((rt2.c2, '', rt1.c2, rt1.c2, NULL, rt1.c2, rt2.c3))))) DESC  NULLS FIRST, ((((x'')>>(0.99823821923936)))>>((rt1.c1 IN ()))) DESC);
SELECT COUNT(*) FROM rt1, rt2 WHERE (rt1.c0) ORDER BY ((((((rt2.c0)IS(rt2.c3)))OR((~ (rt1.c2)))))AND((((x'', rt2.c0, rt1.c2, rt1.c2, rt2.c0, rt2.c2, rt1.c1))==((rt2.c2, '', rt1.c2, rt1.c2, NULL, rt1.c2, rt2.c3))))) DESC  NULLS FIRST, ((((x'')>>(0.99823821923936)))>>((rt1.c1 IN ()))) DESC;
SELECT ALL * FROM t0, rt2, rt0 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c33  WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c0 END)OR(((NULL) NOTNULL))))AND(CAST(rt2.c0 AS NUMERIC))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt2.c2)))) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS TEXT))<=(HEX(rt2.c0))) WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt2, rt0 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c33  WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c0 END)OR(((NULL) NOTNULL))))AND(CAST(rt2.c0 AS NUMERIC))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt2.c2)))) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS TEXT))<=(HEX(rt2.c0))));
SELECT ALL * FROM t0, rt2, rt0 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c33  WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c0 END)OR(((NULL) NOTNULL))))AND(CAST(rt2.c0 AS NUMERIC))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt2.c2)))) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS TEXT))<=(HEX(rt2.c0))) WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt2, rt0 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c33  WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c0 END)OR(((NULL) NOTNULL))))AND(CAST(rt2.c0 AS NUMERIC))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt2.c2)))) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS TEXT))<=(HEX(rt2.c0))));
SELECT * FROM t0, rt0 FULL OUTER JOIN rt1 ON (((((t0.c33)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))&(rt1.c2 COLLATE BINARY)) INNER JOIN vt0 ON (((+ (rt0.c1)))<(CASE ''  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c80 THEN vt0.c1 WHEN t0.c33 THEN vt0.c0 END)) WHERE ((((t0.c80)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE rt1.c0  WHEN t0.c80 THEN rt0.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 ELSE rt0.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c80)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE rt1.c0  WHEN t0.c80 THEN rt0.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 ELSE rt0.c3 END)))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON (((((t0.c33)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))&(rt1.c2 COLLATE BINARY)) INNER JOIN vt0 ON (((+ (rt0.c1)))<(CASE ''  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c80 THEN vt0.c1 WHEN t0.c33 THEN vt0.c0 END)));
SELECT * FROM t0, rt0 FULL OUTER JOIN rt1 ON (((((t0.c33)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))&(rt1.c2 COLLATE BINARY)) INNER JOIN vt0 ON (((+ (rt0.c1)))<(CASE ''  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c80 THEN vt0.c1 WHEN t0.c33 THEN vt0.c0 END)) WHERE ((((t0.c80)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE rt1.c0  WHEN t0.c80 THEN rt0.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 ELSE rt0.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c80)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE rt1.c0  WHEN t0.c80 THEN rt0.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 ELSE rt0.c3 END)))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON (((((t0.c33)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))&(rt1.c2 COLLATE BINARY)) INNER JOIN vt0 ON (((+ (rt0.c1)))<(CASE ''  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c80 THEN vt0.c1 WHEN t0.c33 THEN vt0.c0 END)));
SELECT * FROM t0, rt0 FULL OUTER JOIN rt1 ON (((((t0.c33)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))&(rt1.c2 COLLATE BINARY)) INNER JOIN vt0 ON (((+ (rt0.c1)))<(CASE ''  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c80 THEN vt0.c1 WHEN t0.c33 THEN vt0.c0 END)) WHERE ((((t0.c80)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE rt1.c0  WHEN t0.c80 THEN rt0.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 ELSE rt0.c3 END))));
SELECT * FROM rt2, rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c3)+(rt2.c3)) AS INTEGER) WHERE (((((((rt0.c3) NOTNULL))OR(((((rt1.c1)AND(rt0.c1)))AND(rt2.c1)))))OR(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOTNULL))OR(((((rt1.c1)AND(rt0.c1)))AND(rt2.c1)))))OR(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c3)+(rt2.c3)) AS INTEGER));
SELECT * FROM rt2, rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c3)+(rt2.c3)) AS INTEGER) WHERE (((((((rt0.c3) NOTNULL))OR(((((rt1.c1)AND(rt0.c1)))AND(rt2.c1)))))OR(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOTNULL))OR(((((rt1.c1)AND(rt0.c1)))AND(rt2.c1)))))OR(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c3)+(rt2.c3)) AS INTEGER));
SELECT * FROM rt2, rt0 LEFT OUTER JOIN rt1 ON CAST(((rt0.c3)+(rt2.c3)) AS INTEGER) WHERE (((((((rt0.c3) NOTNULL))OR(((((rt1.c1)AND(rt0.c1)))AND(rt2.c1)))))OR(rt0.c3 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c33)))&((('0.23770766635205298') BETWEEN (vt0.c0) AND ('-2111011960')))) LEFT OUTER JOIN rt2 ON ((((((vt0.c1) IS FALSE))AND(rt2.c0)))AND(CASE WHEN rt2.c1 THEN rt2.c1 WHEN t0.c80 THEN t0.c33 WHEN rt2.c3 THEN vt0.c1 ELSE t0.c80 END)) WHERE (((((((vt0.c1) BETWEEN (rt2.c1) AND (rt2.c3)))OR(CAST('RC웽zs' AS TEXT))))OR(json(t0.c33)))) ORDER BY ((CAST(rt2.c1 AS TEXT))|(rt2.c1));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (rt2.c1) AND (rt2.c3)))OR(CAST('RC웽zs' AS TEXT))))OR(json(t0.c33)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c33)))&((('0.23770766635205298') BETWEEN (vt0.c0) AND ('-2111011960')))) LEFT OUTER JOIN rt2 ON ((((((vt0.c1) IS FALSE))AND(rt2.c0)))AND(CASE WHEN rt2.c1 THEN rt2.c1 WHEN t0.c80 THEN t0.c33 WHEN rt2.c3 THEN vt0.c1 ELSE t0.c80 END)) ORDER BY ((CAST(rt2.c1 AS TEXT))|(rt2.c1)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c33)))&((('0.23770766635205298') BETWEEN (vt0.c0) AND ('-2111011960')))) LEFT OUTER JOIN rt2 ON ((((((vt0.c1) IS FALSE))AND(rt2.c0)))AND(CASE WHEN rt2.c1 THEN rt2.c1 WHEN t0.c80 THEN t0.c33 WHEN rt2.c3 THEN vt0.c1 ELSE t0.c80 END)) WHERE (((((((vt0.c1) BETWEEN (rt2.c1) AND (rt2.c3)))OR(CAST('RC웽zs' AS TEXT))))OR(json(t0.c33)))) ORDER BY ((CAST(rt2.c1 AS TEXT))|(rt2.c1));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (rt2.c1) AND (rt2.c3)))OR(CAST('RC웽zs' AS TEXT))))OR(json(t0.c33)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c33)))&((('0.23770766635205298') BETWEEN (vt0.c0) AND ('-2111011960')))) LEFT OUTER JOIN rt2 ON ((((((vt0.c1) IS FALSE))AND(rt2.c0)))AND(CASE WHEN rt2.c1 THEN rt2.c1 WHEN t0.c80 THEN t0.c33 WHEN rt2.c3 THEN vt0.c1 ELSE t0.c80 END)) ORDER BY ((CAST(rt2.c1 AS TEXT))|(rt2.c1)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c33)))&((('0.23770766635205298') BETWEEN (vt0.c0) AND ('-2111011960')))) LEFT OUTER JOIN rt2 ON ((((((vt0.c1) IS FALSE))AND(rt2.c0)))AND(CASE WHEN rt2.c1 THEN rt2.c1 WHEN t0.c80 THEN t0.c33 WHEN rt2.c3 THEN vt0.c1 ELSE t0.c80 END)) WHERE (((((((vt0.c1) BETWEEN (rt2.c1) AND (rt2.c3)))OR(CAST('RC웽zs' AS TEXT))))OR(json(t0.c33)))) ORDER BY ((CAST(rt2.c1 AS TEXT))|(rt2.c1));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, rt2, t0 WHERE (((CASE WHEN '1923098530' THEN 230051454 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) IS TRUE)) ORDER BY CASE WHEN CASE rt1.c1  WHEN rt2.c2 THEN vt0.c1 END THEN ((rt2.c3) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '1923098530' THEN 230051454 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, rt1, rt2, t0 ORDER BY CASE WHEN CASE rt1.c1  WHEN rt2.c2 THEN vt0.c1 END THEN ((rt2.c3) ISNULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, rt2, t0 WHERE (((CASE WHEN '1923098530' THEN 230051454 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) IS TRUE)) ORDER BY CASE WHEN CASE rt1.c1  WHEN rt2.c2 THEN vt0.c1 END THEN ((rt2.c3) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '1923098530' THEN 230051454 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, rt1, rt2, t0 ORDER BY CASE WHEN CASE rt1.c1  WHEN rt2.c2 THEN vt0.c1 END THEN ((rt2.c3) ISNULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, rt2, t0 WHERE (((CASE WHEN '1923098530' THEN 230051454 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) IS TRUE)) ORDER BY CASE WHEN CASE rt1.c1  WHEN rt2.c2 THEN vt0.c1 END THEN ((rt2.c3) ISNULL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (0.2967029193894499) ORDER BY (((rt1.c0 IN ()))IS(t0.c33));
SELECT SUM(count) FROM (SELECT ALL ((0.2967029193894499) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c0 IN ()))IS(t0.c33)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (0.2967029193894499) ORDER BY (((rt1.c0 IN ()))IS(t0.c33));
SELECT SUM(count) FROM (SELECT ALL ((0.2967029193894499) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c0 IN ()))IS(t0.c33)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (0.2967029193894499) ORDER BY (((rt1.c0 IN ()))IS(t0.c33));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1))<((((rt0.c1)+(rt0.c2)))))) ORDER BY CASE vt0.c0  WHEN '' THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN TRIM(rt0.c3) WHEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 0.5502121372377214 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END THEN (NOT (NULL)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((vt0.c0)<(rt0.c0)) THEN (- (vt0.c1)) END DESC  NULLS FIRST, 0.47933626148159314;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<((((rt0.c1)+(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE vt0.c0  WHEN '' THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN TRIM(rt0.c3) WHEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 0.5502121372377214 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END THEN (NOT (NULL)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((vt0.c0)<(rt0.c0)) THEN (- (vt0.c1)) END DESC  NULLS FIRST, 0.47933626148159314);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1))<((((rt0.c1)+(rt0.c2)))))) ORDER BY CASE vt0.c0  WHEN '' THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN TRIM(rt0.c3) WHEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 0.5502121372377214 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END THEN (NOT (NULL)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((vt0.c0)<(rt0.c0)) THEN (- (vt0.c1)) END DESC  NULLS FIRST, 0.47933626148159314;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<((((rt0.c1)+(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE vt0.c0  WHEN '' THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN TRIM(rt0.c3) WHEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 0.5502121372377214 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END THEN (NOT (NULL)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((vt0.c0)<(rt0.c0)) THEN (- (vt0.c1)) END DESC  NULLS FIRST, 0.47933626148159314);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1))<((((rt0.c1)+(rt0.c2)))))) ORDER BY CASE vt0.c0  WHEN '' THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN TRIM(rt0.c3) WHEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 0.5502121372377214 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END THEN (NOT (NULL)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((vt0.c0)<(rt0.c0)) THEN (- (vt0.c1)) END DESC  NULLS FIRST, 0.47933626148159314;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON CASE ((rt1.c2)%(rt1.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c2) IS FALSE) WHEN ((t0.c33) BETWEEN (rt1.c0) AND (rt1.c2)) THEN t0.c80 WHEN (((t0.c80))<>((rt1.c1))) THEN ((rt1.c0)OR(rt1.c1)) END WHERE ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE ((rt1.c2)%(rt1.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c2) IS FALSE) WHEN ((t0.c33) BETWEEN (rt1.c0) AND (rt1.c2)) THEN t0.c80 WHEN (((t0.c80))<>((rt1.c1))) THEN ((rt1.c0)OR(rt1.c1)) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON CASE ((rt1.c2)%(rt1.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c2) IS FALSE) WHEN ((t0.c33) BETWEEN (rt1.c0) AND (rt1.c2)) THEN t0.c80 WHEN (((t0.c80))<>((rt1.c1))) THEN ((rt1.c0)OR(rt1.c1)) END WHERE ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE ((rt1.c2)%(rt1.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c2) IS FALSE) WHEN ((t0.c33) BETWEEN (rt1.c0) AND (rt1.c2)) THEN t0.c80 WHEN (((t0.c80))<>((rt1.c1))) THEN ((rt1.c0)OR(rt1.c1)) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON CASE ((rt1.c2)%(rt1.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c2) IS FALSE) WHEN ((t0.c33) BETWEEN (rt1.c0) AND (rt1.c2)) THEN t0.c80 WHEN (((t0.c80))<>((rt1.c1))) THEN ((rt1.c0)OR(rt1.c1)) END WHERE ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)) IN ()));
SELECT * FROM vt0, rt1, t0, rt2 WHERE ('897888205' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('897888205' COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, t0, rt2);
SELECT * FROM vt0, rt1, t0, rt2 WHERE ('897888205' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('897888205' COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, t0, rt2);
SELECT * FROM vt0, rt1, t0, rt2 WHERE ('897888205' COLLATE BINARY);
SELECT ALL * FROM rt1, rt2 WHERE (((((((((((((rt2.c3)AND(((rt2.c1)<(rt1.c0)))))AND(LTRIM(rt2.c2, rt2.c3))))AND((~ (rt2.c2)))))AND(CAST(rt2.c0 AS INTEGER))))AND((NOT (rt1.c1)))))AND(((rt2.c2) IS TRUE)))) ORDER BY (rt2.c2 IN (((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt2.c3)AND(((rt2.c1)<(rt1.c0)))))AND(LTRIM(rt2.c2, rt2.c3))))AND((~ (rt2.c2)))))AND(CAST(rt2.c0 AS INTEGER))))AND((NOT (rt1.c1)))))AND(((rt2.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY (rt2.c2 IN (((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt2.c0)))));
SELECT ALL * FROM rt1, rt2 WHERE (((((((((((((rt2.c3)AND(((rt2.c1)<(rt1.c0)))))AND(LTRIM(rt2.c2, rt2.c3))))AND((~ (rt2.c2)))))AND(CAST(rt2.c0 AS INTEGER))))AND((NOT (rt1.c1)))))AND(((rt2.c2) IS TRUE)))) ORDER BY (rt2.c2 IN (((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt2.c3)AND(((rt2.c1)<(rt1.c0)))))AND(LTRIM(rt2.c2, rt2.c3))))AND((~ (rt2.c2)))))AND(CAST(rt2.c0 AS INTEGER))))AND((NOT (rt1.c1)))))AND(((rt2.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY (rt2.c2 IN (((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt2.c0)))));
SELECT ALL * FROM rt1, rt2 WHERE (((((((((((((rt2.c3)AND(((rt2.c1)<(rt1.c0)))))AND(LTRIM(rt2.c2, rt2.c3))))AND((~ (rt2.c2)))))AND(CAST(rt2.c0 AS INTEGER))))AND((NOT (rt1.c1)))))AND(((rt2.c2) IS TRUE)))) ORDER BY (rt2.c2 IN (((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt2.c0))));
SELECT ALL COUNT(*) FROM vt0, rt1, t0, rt0, rt2 WHERE (((CASE t0.c33  WHEN rt1.c2 THEN vt0.c0 ELSE 0.6099919817430604 END) ISNULL)) ORDER BY (+ (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c33  WHEN rt1.c2 THEN vt0.c0 ELSE 0.6099919817430604 END) ISNULL)) IS TRUE)  as count FROM vt0, rt1, t0, rt0, rt2 ORDER BY (+ (rt1.c1)));
SELECT ALL COUNT(*) FROM vt0, rt1, t0, rt0, rt2 WHERE (((CASE t0.c33  WHEN rt1.c2 THEN vt0.c0 ELSE 0.6099919817430604 END) ISNULL)) ORDER BY (+ (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c33  WHEN rt1.c2 THEN vt0.c0 ELSE 0.6099919817430604 END) ISNULL)) IS TRUE)  as count FROM vt0, rt1, t0, rt0, rt2 ORDER BY (+ (rt1.c1)));
SELECT ALL COUNT(*) FROM vt0, rt1, t0, rt0, rt2 WHERE (((CASE t0.c33  WHEN rt1.c2 THEN vt0.c0 ELSE 0.6099919817430604 END) ISNULL)) ORDER BY (+ (rt1.c1));
SELECT ALL * FROM rt2 LEFT OUTER JOIN t0 ON ((((t0.c33)AND(rt2.c0)))<=(CAST(x'0d77' AS BLOB))) FULL OUTER JOIN vt0 ON (((t0.c33)) BETWEEN ((((NULL)OR(vt0.c0)))) AND ((((rt2.c3)IS NOT(vt0.c1))))) WHERE ((~ (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN t0 ON ((((t0.c33)AND(rt2.c0)))<=(CAST(x'0d77' AS BLOB))) FULL OUTER JOIN vt0 ON (((t0.c33)) BETWEEN ((((NULL)OR(vt0.c0)))) AND ((((rt2.c3)IS NOT(vt0.c1))))));
SELECT ALL * FROM rt2 LEFT OUTER JOIN t0 ON ((((t0.c33)AND(rt2.c0)))<=(CAST(x'0d77' AS BLOB))) FULL OUTER JOIN vt0 ON (((t0.c33)) BETWEEN ((((NULL)OR(vt0.c0)))) AND ((((rt2.c3)IS NOT(vt0.c1))))) WHERE ((~ (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN t0 ON ((((t0.c33)AND(rt2.c0)))<=(CAST(x'0d77' AS BLOB))) FULL OUTER JOIN vt0 ON (((t0.c33)) BETWEEN ((((NULL)OR(vt0.c0)))) AND ((((rt2.c3)IS NOT(vt0.c1))))));
SELECT ALL * FROM rt2 LEFT OUTER JOIN t0 ON ((((t0.c33)AND(rt2.c0)))<=(CAST(x'0d77' AS BLOB))) FULL OUTER JOIN vt0 ON (((t0.c33)) BETWEEN ((((NULL)OR(vt0.c0)))) AND ((((rt2.c3)IS NOT(vt0.c1))))) WHERE ((~ (CAST(vt0.c1 AS NUMERIC))));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON CAST((((rt1.c0)) BETWEEN ((t0.c80)) AND ((t0.c80))) AS BLOB) WHERE (json_remove('빉簱%#&diG', ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY t0.c80 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove('빉簱%#&diG', ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST((((rt1.c0)) BETWEEN ((t0.c80)) AND ((t0.c80))) AS BLOB) ORDER BY t0.c80 DESC  NULLS FIRST);
SELECT ALL * FROM rt1 CROSS JOIN t0 ON CAST((((rt1.c0)) BETWEEN ((t0.c80)) AND ((t0.c80))) AS BLOB) WHERE (json_remove('빉簱%#&diG', ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY t0.c80 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove('빉簱%#&diG', ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST((((rt1.c0)) BETWEEN ((t0.c80)) AND ((t0.c80))) AS BLOB) ORDER BY t0.c80 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 FULL OUTER JOIN rt1 ON CASE LOWER(t0.c80)  WHEN (('oWK!䘝-졭%')<(rt1.c0)) THEN (('') BETWEEN ('-254648891') AND ('K')) ELSE CASE '1590052625'  WHEN t0.c33 THEN rt2.c2 END END INNER JOIN rt2 ON rt1.c2 WHERE (rt0.c1) ORDER BY ((((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt1.c2)))>(NULL COLLATE RTRIM))  NULLS LAST, CAST(((rt1.c2)AND(rt2.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0 FULL OUTER JOIN rt1 ON CASE LOWER(t0.c80)  WHEN (('oWK!䘝-졭%')<(rt1.c0)) THEN (('') BETWEEN ('-254648891') AND ('K')) ELSE CASE '1590052625'  WHEN t0.c33 THEN rt2.c2 END END INNER JOIN rt2 ON rt1.c2 ORDER BY ((((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt1.c2)))>(NULL COLLATE RTRIM))  NULLS LAST, CAST(((rt1.c2)AND(rt2.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 FULL OUTER JOIN rt1 ON CASE LOWER(t0.c80)  WHEN (('oWK!䘝-졭%')<(rt1.c0)) THEN (('') BETWEEN ('-254648891') AND ('K')) ELSE CASE '1590052625'  WHEN t0.c33 THEN rt2.c2 END END INNER JOIN rt2 ON rt1.c2 WHERE (rt0.c1) ORDER BY ((((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt1.c2)))>(NULL COLLATE RTRIM))  NULLS LAST, CAST(((rt1.c2)AND(rt2.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0 FULL OUTER JOIN rt1 ON CASE LOWER(t0.c80)  WHEN (('oWK!䘝-졭%')<(rt1.c0)) THEN (('') BETWEEN ('-254648891') AND ('K')) ELSE CASE '1590052625'  WHEN t0.c33 THEN rt2.c2 END END INNER JOIN rt2 ON rt1.c2 ORDER BY ((((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt1.c2)))>(NULL COLLATE RTRIM))  NULLS LAST, CAST(((rt1.c2)AND(rt2.c2)) AS REAL));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2)!=(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)<>(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2)!=(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)<>(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2)!=(rt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (-950450659 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-950450659 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (-950450659 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-950450659 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (-950450659 COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((NOT (TRIM(rt2.c0, rt1.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(rt2.c0, rt1.c2)))) IS TRUE)  as count FROM rt1, rt2);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((NOT (TRIM(rt2.c0, rt1.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(rt2.c0, rt1.c2)))) IS TRUE)  as count FROM rt1, rt2);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((NOT (TRIM(rt2.c0, rt1.c2))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, rt2, t0 WHERE (CAST(t0.c33 AS TEXT) COLLATE RTRIM) ORDER BY (((rt2.c1 IN (rt1.c1, rt1.c2)))IS(((rt1.c0)=(t0.c33)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c33 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, rt2, t0 ORDER BY (((rt2.c1 IN (rt1.c1, rt1.c2)))IS(((rt1.c0)=(t0.c33)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2, t0 WHERE (CAST(t0.c33 AS TEXT) COLLATE RTRIM) ORDER BY (((rt2.c1 IN (rt1.c1, rt1.c2)))IS(((rt1.c0)=(t0.c33)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c33 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, rt2, t0 ORDER BY (((rt2.c1 IN (rt1.c1, rt1.c2)))IS(((rt1.c0)=(t0.c33)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2, t0 WHERE (CAST(t0.c33 AS TEXT) COLLATE RTRIM) ORDER BY (((rt2.c1 IN (rt1.c1, rt1.c2)))IS(((rt1.c0)=(t0.c33)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2, vt0 WHERE (((CAST(NULL AS BLOB))&(((rt2.c2) NOTNULL)))) ORDER BY (HEX(DISTINCT rt2.c2) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS BLOB))&(((rt2.c2) NOTNULL)))) IS TRUE)  as count FROM rt2, vt0 ORDER BY (HEX(DISTINCT rt2.c2) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, vt0 WHERE (((CAST(NULL AS BLOB))&(((rt2.c2) NOTNULL)))) ORDER BY (HEX(DISTINCT rt2.c2) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS BLOB))&(((rt2.c2) NOTNULL)))) IS TRUE)  as count FROM rt2, vt0 ORDER BY (HEX(DISTINCT rt2.c2) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, vt0 WHERE (((CAST(NULL AS BLOB))&(((rt2.c2) NOTNULL)))) ORDER BY (HEX(DISTINCT rt2.c2) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt2 ON (((((('0.42361237608584357')<=(rt2.c0)))OR(((rt2.c0)>(rt2.c2)))))OR(t0.c33 COLLATE NOCASE)) INNER JOIN rt0 ON (~ (rt2.c0 COLLATE NOCASE)) WHERE ((((-1775297495))<((((rt2.c3) NOT NULL))))) ORDER BY (((rt0.c2, (((t0.c33))>((rt2.c2))), ((t0.c33) BETWEEN (rt0.c0) AND (rt2.c0))))=((CASE rt0.c2  WHEN x'' THEN t0.c33 WHEN rt2.c3 THEN rt2.c1 WHEN t0.c80 THEN rt0.c2 ELSE t0.c80 END, LENGTH('*jI^'), ((rt0.c2) NOT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((-1775297495))<((((rt2.c3) NOT NULL))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt2 ON (((((('0.42361237608584357')<=(rt2.c0)))OR(((rt2.c0)>(rt2.c2)))))OR(t0.c33 COLLATE NOCASE)) INNER JOIN rt0 ON (~ (rt2.c0 COLLATE NOCASE)) ORDER BY (((rt0.c2, (((t0.c33))>((rt2.c2))), ((t0.c33) BETWEEN (rt0.c0) AND (rt2.c0))))==((CASE rt0.c2  WHEN x'' THEN t0.c33 WHEN rt2.c3 THEN rt2.c1 WHEN t0.c80 THEN rt0.c2 ELSE t0.c80 END, LENGTH('*jI^'), ((rt0.c2) NOT NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt2 ON (((((('0.42361237608584357')<=(rt2.c0)))OR(((rt2.c0)>(rt2.c2)))))OR(t0.c33 COLLATE NOCASE)) INNER JOIN rt0 ON (~ (rt2.c0 COLLATE NOCASE)) WHERE ((((-1775297495))<((((rt2.c3) NOT NULL))))) ORDER BY (((rt0.c2, (((t0.c33))>((rt2.c2))), ((t0.c33) BETWEEN (rt0.c0) AND (rt2.c0))))=((CASE rt0.c2  WHEN x'' THEN t0.c33 WHEN rt2.c3 THEN rt2.c1 WHEN t0.c80 THEN rt0.c2 ELSE t0.c80 END, LENGTH('*jI^'), ((rt0.c2) NOT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((-1775297495))<((((rt2.c3) NOT NULL))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt2 ON (((((('0.42361237608584357')<=(rt2.c0)))OR(((rt2.c0)>(rt2.c2)))))OR(t0.c33 COLLATE NOCASE)) INNER JOIN rt0 ON (~ (rt2.c0 COLLATE NOCASE)) ORDER BY (((rt0.c2, (((t0.c33))>((rt2.c2))), ((t0.c33) BETWEEN (rt0.c0) AND (rt2.c0))))==((CASE rt0.c2  WHEN x'' THEN t0.c33 WHEN rt2.c3 THEN rt2.c1 WHEN t0.c80 THEN rt0.c2 ELSE t0.c80 END, LENGTH('*jI^'), ((rt0.c2) NOT NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt2 ON (((((('0.42361237608584357')<=(rt2.c0)))OR(((rt2.c0)>(rt2.c2)))))OR(t0.c33 COLLATE NOCASE)) INNER JOIN rt0 ON (~ (rt2.c0 COLLATE NOCASE)) WHERE ((((-1775297495))<((((rt2.c3) NOT NULL))))) ORDER BY (((rt0.c2, (((t0.c33))>((rt2.c2))), ((t0.c33) BETWEEN (rt0.c0) AND (rt2.c0))))=((CASE rt0.c2  WHEN x'' THEN t0.c33 WHEN rt2.c3 THEN rt2.c1 WHEN t0.c80 THEN rt0.c2 ELSE t0.c80 END, LENGTH('*jI^'), ((rt0.c2) NOT NULL))))  NULLS LAST;
SELECT COUNT(*) FROM rt2, t0 WHERE (((((((((rt2.c3)OR(((rt2.c1)<(rt2.c3)))))AND('443967451')))AND(SQLITE_SOURCE_ID())))OR(t0.c33))) ORDER BY ((t0.c80)||(rt2.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt2.c3)OR(((rt2.c1)<(rt2.c3)))))AND('443967451')))AND(SQLITE_SOURCE_ID())))OR(t0.c33))) IS TRUE)  as count FROM rt2, t0 ORDER BY ((t0.c80)||(rt2.c1)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt2, t0 WHERE (((((((((rt2.c3)OR(((rt2.c1)<(rt2.c3)))))AND('443967451')))AND(SQLITE_SOURCE_ID())))OR(t0.c33))) ORDER BY ((t0.c80)||(rt2.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt2.c3)OR(((rt2.c1)<(rt2.c3)))))AND('443967451')))AND(SQLITE_SOURCE_ID())))OR(t0.c33))) IS TRUE)  as count FROM rt2, t0 ORDER BY ((t0.c80)||(rt2.c1)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt2, t0 WHERE (((((((((rt2.c3)OR(((rt2.c1)<(rt2.c3)))))AND('443967451')))AND(SQLITE_SOURCE_ID())))OR(t0.c33))) ORDER BY ((t0.c80)||(rt2.c1)) COLLATE NOCASE ASC;
SELECT ALL * FROM vt0 WHERE (((((NULL)AND((vt0.c0 IN ()))))OR((+ (vt0.c1))))) ORDER BY (((+ (vt0.c1))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c1, vt0.c0)))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((vt0.c0 IN ()))))OR((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c1))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c1, vt0.c0)))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((NULL)AND((vt0.c0 IN ()))))OR((+ (vt0.c1))))) ORDER BY (((+ (vt0.c1))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c1, vt0.c0)))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((vt0.c0 IN ()))))OR((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c1))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c1, vt0.c0)))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((NULL)AND((vt0.c0 IN ()))))OR((+ (vt0.c1))))) ORDER BY (((+ (vt0.c1))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c1, vt0.c0)))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST;
SELECT * FROM rt1 LEFT OUTER JOIN rt2 ON IFNULL(CAST(rt2.c0 AS TEXT), (NOT (rt2.c2))) WHERE ((((rt1.c1)) BETWEEN (((~ (rt1.c0)))) AND ((CASE WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((~ (rt1.c0)))) AND ((CASE WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt2 ON IFNULL(CAST(rt2.c0 AS TEXT), (NOT (rt2.c2))));
SELECT * FROM rt1 LEFT OUTER JOIN rt2 ON IFNULL(CAST(rt2.c0 AS TEXT), (NOT (rt2.c2))) WHERE ((((rt1.c1)) BETWEEN (((~ (rt1.c0)))) AND ((CASE WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((~ (rt1.c0)))) AND ((CASE WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt2 ON IFNULL(CAST(rt2.c0 AS TEXT), (NOT (rt2.c2))));
SELECT * FROM rt1 LEFT OUTER JOIN rt2 ON IFNULL(CAST(rt2.c0 AS TEXT), (NOT (rt2.c2))) WHERE ((((rt1.c1)) BETWEEN (((~ (rt1.c0)))) AND ((CASE WHEN rt1.c0 THEN rt2.c1 ELSE rt1.c1 END))));
SELECT * FROM rt2, rt1, rt0, vt0, t0 WHERE (((rt2.c3 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c3 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt2, rt1, rt0, vt0, t0);
SELECT * FROM rt2, rt1, rt0, vt0, t0 WHERE (((rt2.c3 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c3 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt2, rt1, rt0, vt0, t0);
SELECT * FROM rt2, rt1, rt0, vt0, t0 WHERE (((rt2.c3 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM t0, rt0 WHERE ((t0.c33 IN ()) COLLATE NOCASE) ORDER BY (t0.c80 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c33 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY (t0.c80 IN ()) ASC);
SELECT ALL * FROM t0, rt0 WHERE ((t0.c33 IN ()) COLLATE NOCASE) ORDER BY (t0.c80 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c33 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY (t0.c80 IN ()) ASC);
SELECT ALL * FROM t0, rt0 WHERE ((t0.c33 IN ()) COLLATE NOCASE) ORDER BY (t0.c80 IN ()) ASC;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((+ (t0.c80))) ISNULL) CROSS JOIN vt0 ON CAST(LOWER(DISTINCT rt0.c3) AS REAL) WHERE ((x'' IN ((- (vt0.c0))))) ORDER BY ((389040855) NOT NULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((- (vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((+ (t0.c80))) ISNULL) CROSS JOIN vt0 ON CAST(LOWER(DISTINCT rt0.c3) AS REAL) ORDER BY ((389040855) NOT NULL) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((+ (t0.c80))) ISNULL) CROSS JOIN vt0 ON CAST(LOWER(DISTINCT rt0.c3) AS REAL) WHERE ((x'' IN ((- (vt0.c0))))) ORDER BY ((389040855) NOT NULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((- (vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((+ (t0.c80))) ISNULL) CROSS JOIN vt0 ON CAST(LOWER(DISTINCT rt0.c3) AS REAL) ORDER BY ((389040855) NOT NULL) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((+ (t0.c80))) ISNULL) CROSS JOIN vt0 ON CAST(LOWER(DISTINCT rt0.c3) AS REAL) WHERE ((x'' IN ((- (vt0.c0))))) ORDER BY ((389040855) NOT NULL) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE (((((rt1.c1) NOTNULL))-((((vt0.c0))>((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL))-((((vt0.c0))>((NULL)))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE (((((rt1.c1) NOTNULL))-((((vt0.c0))>((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL))-((((vt0.c0))>((NULL)))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE (((((rt1.c1) NOTNULL))-((((vt0.c0))>((NULL))))));
SELECT * FROM rt2, rt1, t0 WHERE (((CAST(rt2.c1 AS INTEGER)) BETWEEN (rt1.c1 COLLATE BINARY) AND ((0Xfffffffffa86cd70 IN (rt1.c0))))) ORDER BY ((ABS(rt1.c2)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c1)))) AND (((rt2.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt2.c1 AS INTEGER)) BETWEEN (rt1.c1 COLLATE BINARY) AND ((0xfffffffffa86cd70 IN (rt1.c0))))) IS TRUE)  as count FROM rt2, rt1, t0 ORDER BY ((ABS(rt1.c2)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c1)))) AND (((rt2.c0) IS TRUE))) DESC);
SELECT * FROM rt2, rt1, t0 WHERE (((CAST(rt2.c1 AS INTEGER)) BETWEEN (rt1.c1 COLLATE BINARY) AND ((0Xfffffffffa86cd70 IN (rt1.c0))))) ORDER BY ((ABS(rt1.c2)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c1)))) AND (((rt2.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt2.c1 AS INTEGER)) BETWEEN (rt1.c1 COLLATE BINARY) AND ((0xfffffffffa86cd70 IN (rt1.c0))))) IS TRUE)  as count FROM rt2, rt1, t0 ORDER BY ((ABS(rt1.c2)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c1)))) AND (((rt2.c0) IS TRUE))) DESC);
SELECT * FROM rt2, rt1, t0 WHERE (((CAST(rt2.c1 AS INTEGER)) BETWEEN (rt1.c1 COLLATE BINARY) AND ((0Xfffffffffa86cd70 IN (rt1.c0))))) ORDER BY ((ABS(rt1.c2)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt2.c1)))) AND (((rt2.c0) IS TRUE))) DESC;
SELECT * FROM rt0, rt2, t0, vt0, rt1 WHERE ((((rt1.c0) NOT BETWEEN (t0.c80) AND (x'')) IN ())) ORDER BY (- ((NOT (rt2.c0)))) DESC  NULLS LAST, ((((CASE rt1.c2  WHEN rt0.c2 THEN rt2.c3 END)AND(((rt2.c3)/(rt1.c2)))))OR((((t0.c80))=((rt2.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (t0.c80) AND (x'')) IN ())) IS TRUE)  as count FROM rt0, rt2, t0, vt0, rt1 ORDER BY (- ((NOT (rt2.c0)))) DESC  NULLS LAST, ((((CASE rt1.c2  WHEN rt0.c2 THEN rt2.c3 END)AND(((rt2.c3)/(rt1.c2)))))OR((((t0.c80))==((rt2.c3))))) DESC);
SELECT * FROM rt0, rt2, t0, vt0, rt1 WHERE ((((rt1.c0) NOT BETWEEN (t0.c80) AND (x'')) IN ())) ORDER BY (- ((NOT (rt2.c0)))) DESC  NULLS LAST, ((((CASE rt1.c2  WHEN rt0.c2 THEN rt2.c3 END)AND(((rt2.c3)/(rt1.c2)))))OR((((t0.c80))=((rt2.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (t0.c80) AND (x'')) IN ())) IS TRUE)  as count FROM rt0, rt2, t0, vt0, rt1 ORDER BY (- ((NOT (rt2.c0)))) DESC  NULLS LAST, ((((CASE rt1.c2  WHEN rt0.c2 THEN rt2.c3 END)AND(((rt2.c3)/(rt1.c2)))))OR((((t0.c80))==((rt2.c3))))) DESC);
SELECT * FROM rt0, rt2, t0, vt0, rt1 WHERE ((((rt1.c0) NOT BETWEEN (t0.c80) AND (x'')) IN ())) ORDER BY (- ((NOT (rt2.c0)))) DESC  NULLS LAST, ((((CASE rt1.c2  WHEN rt0.c2 THEN rt2.c3 END)AND(((rt2.c3)/(rt1.c2)))))OR((((t0.c80))=((rt2.c3))))) DESC;
SELECT COUNT(*) FROM rt1, vt0, rt0, t0 WHERE (((CASE WHEN rt1.c0 THEN t0.c33 END)|(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN t0.c33 END)|(rt1.c1))) IS TRUE)  as count FROM rt1, vt0, rt0, t0);
SELECT COUNT(*) FROM rt1, vt0, rt0, t0 WHERE (((CASE WHEN rt1.c0 THEN t0.c33 END)|(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN t0.c33 END)|(rt1.c1))) IS TRUE)  as count FROM rt1, vt0, rt0, t0);
SELECT COUNT(*) FROM rt1, vt0, rt0, t0 WHERE (((CASE WHEN rt1.c0 THEN t0.c33 END)|(rt1.c1)));
SELECT ALL COUNT(*) FROM rt0, rt1, t0, vt0, rt2 WHERE (CASE WHEN ((rt0.c3)*(rt0.c3)) THEN rt1.c0 END) ORDER BY CASE WHEN ABS(vt0.c0) THEN ((rt2.c3) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)*(rt0.c3)) THEN rt1.c0 END) IS TRUE)  as count FROM rt0, rt1, t0, vt0, rt2 ORDER BY CASE WHEN ABS(vt0.c0) THEN ((rt2.c3) IS TRUE) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, vt0, rt2 WHERE (CASE WHEN ((rt0.c3)*(rt0.c3)) THEN rt1.c0 END) ORDER BY CASE WHEN ABS(vt0.c0) THEN ((rt2.c3) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)*(rt0.c3)) THEN rt1.c0 END) IS TRUE)  as count FROM rt0, rt1, t0, vt0, rt2 ORDER BY CASE WHEN ABS(vt0.c0) THEN ((rt2.c3) IS TRUE) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, vt0, rt2 WHERE (CASE WHEN ((rt0.c3)*(rt0.c3)) THEN rt1.c0 END) ORDER BY CASE WHEN ABS(vt0.c0) THEN ((rt2.c3) IS TRUE) END  NULLS LAST;
SELECT * FROM t0 CROSS JOIN vt0 ON (((('1576949197')OR((((rt0.c2, '-1244942086', rt1.c1))<((rt1.c2, rt0.c1, vt0.c1))))))AND(((rt1.c1) NOTNULL))) INNER JOIN rt0 ON ((x'')*((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))) CROSS JOIN rt1 ON ((((NULL) NOT NULL)) NOT BETWEEN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (CASE WHEN rt0.c0 THEN rt1.c0 END)) WHERE ('-1207255479' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('-1207255479' COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((('1576949197')OR((((rt0.c2, '-1244942086', rt1.c1))<((rt1.c2, rt0.c1, vt0.c1))))))AND(((rt1.c1) NOTNULL))) INNER JOIN rt0 ON ((x'')*((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))) CROSS JOIN rt1 ON ((((NULL) NOT NULL)) NOT BETWEEN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (CASE WHEN rt0.c0 THEN rt1.c0 END)));
SELECT * FROM t0 CROSS JOIN vt0 ON (((('1576949197')OR((((rt0.c2, '-1244942086', rt1.c1))<((rt1.c2, rt0.c1, vt0.c1))))))AND(((rt1.c1) NOTNULL))) INNER JOIN rt0 ON ((x'')*((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))) CROSS JOIN rt1 ON ((((NULL) NOT NULL)) NOT BETWEEN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (CASE WHEN rt0.c0 THEN rt1.c0 END)) WHERE ('-1207255479' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('-1207255479' COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((('1576949197')OR((((rt0.c2, '-1244942086', rt1.c1))<((rt1.c2, rt0.c1, vt0.c1))))))AND(((rt1.c1) NOTNULL))) INNER JOIN rt0 ON ((x'')*((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))) CROSS JOIN rt1 ON ((((NULL) NOT NULL)) NOT BETWEEN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (CASE WHEN rt0.c0 THEN rt1.c0 END)));
SELECT * FROM t0 CROSS JOIN vt0 ON (((('1576949197')OR((((rt0.c2, '-1244942086', rt1.c1))<((rt1.c2, rt0.c1, vt0.c1))))))AND(((rt1.c1) NOTNULL))) INNER JOIN rt0 ON ((x'')*((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))) CROSS JOIN rt1 ON ((((NULL) NOT NULL)) NOT BETWEEN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (CASE WHEN rt0.c0 THEN rt1.c0 END)) WHERE ('-1207255479' COLLATE BINARY);
SELECT * FROM t0, rt0, rt2 WHERE (((CAST(t0.c80 AS BLOB))*((((t0.c33)) NOT BETWEEN ((rt2.c3)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c80 AS BLOB))*((((t0.c33)) NOT BETWEEN ((rt2.c3)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, rt2);
SELECT * FROM t0, rt0, rt2 WHERE (((CAST(t0.c80 AS BLOB))*((((t0.c33)) NOT BETWEEN ((rt2.c3)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c80 AS BLOB))*((((t0.c33)) NOT BETWEEN ((rt2.c3)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, rt2);
SELECT * FROM t0, rt0, rt2 WHERE (((CAST(t0.c80 AS BLOB))*((((t0.c33)) NOT BETWEEN ((rt2.c3)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0, rt2, t0, rt0 WHERE (json_array(CAST(vt0.c1 AS INTEGER), (rt2.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_array(CAST(vt0.c1 AS INTEGER), (rt2.c3 IN ()))) IS TRUE)  as count FROM vt0, rt2, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt2, t0, rt0 WHERE (json_array(CAST(vt0.c1 AS INTEGER), (rt2.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_array(CAST(vt0.c1 AS INTEGER), (rt2.c3 IN ()))) IS TRUE)  as count FROM vt0, rt2, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt2, t0, rt0 WHERE (json_array(CAST(vt0.c1 AS INTEGER), (rt2.c3 IN ())));
SELECT * FROM t0, rt1, rt2 WHERE ((NOT (((rt2.c1) IS FALSE)))) ORDER BY (((((rt1.c2))<=((rt1.c1)))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt2.c1) IS FALSE)))) IS TRUE)  as count FROM t0, rt1, rt2 ORDER BY (((((rt1.c2))<=((rt1.c1)))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM t0, rt1, rt2 WHERE ((NOT (((rt2.c1) IS FALSE)))) ORDER BY (((((rt1.c2))<=((rt1.c1)))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt2.c1) IS FALSE)))) IS TRUE)  as count FROM t0, rt1, rt2 ORDER BY (((((rt1.c2))<=((rt1.c1)))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM t0, rt1, rt2 WHERE ((NOT (((rt2.c1) IS FALSE)))) ORDER BY (((((rt1.c2))<=((rt1.c1)))) ISNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c1)))OR(NULL)))IS NOT(((((((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(x'')))AND(rt0.c0)))) WHERE (((TRIM(rt0.c0))!=('443967451')));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c0))<>('443967451'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c1)))OR(NULL)))IS NOT(((((((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(x'')))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c1)))OR(NULL)))IS NOT(((((((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(x'')))AND(rt0.c0)))) WHERE (((TRIM(rt0.c0))!=('443967451')));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c0))<>('443967451'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c1)))OR(NULL)))IS NOT(((((((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(x'')))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c1)))OR(NULL)))IS NOT(((((((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(x'')))AND(rt0.c0)))) WHERE (((TRIM(rt0.c0))!=('443967451')));
SELECT ALL * FROM t0, rt0 WHERE (CASE CASE '2020443406'  WHEN rt0.c1 THEN rt0.c0 WHEN '-1619895537' THEN rt0.c0 WHEN t0.c80 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c80 THEN t0.c80 END  WHEN t0.c33 COLLATE RTRIM THEN x'' WHEN (t0.c33 IN ()) THEN (t0.c33 IN (rt0.c2, t0.c33)) WHEN (t0.c80 IN ()) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE CASE '2020443406'  WHEN rt0.c1 THEN rt0.c0 WHEN '-1619895537' THEN rt0.c0 WHEN t0.c80 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c80 THEN t0.c80 END  WHEN t0.c33 COLLATE RTRIM THEN x'' WHEN (t0.c33 IN ()) THEN (t0.c33 IN (rt0.c2, t0.c33)) WHEN (t0.c80 IN ()) THEN x'' END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE CASE '2020443406'  WHEN rt0.c1 THEN rt0.c0 WHEN '-1619895537' THEN rt0.c0 WHEN t0.c80 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c80 THEN t0.c80 END  WHEN t0.c33 COLLATE RTRIM THEN x'' WHEN (t0.c33 IN ()) THEN (t0.c33 IN (rt0.c2, t0.c33)) WHEN (t0.c80 IN ()) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE CASE '2020443406'  WHEN rt0.c1 THEN rt0.c0 WHEN '-1619895537' THEN rt0.c0 WHEN t0.c80 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c80 THEN t0.c80 END  WHEN t0.c33 COLLATE RTRIM THEN x'' WHEN (t0.c33 IN ()) THEN (t0.c33 IN (rt0.c2, t0.c33)) WHEN (t0.c80 IN ()) THEN x'' END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE CASE '2020443406'  WHEN rt0.c1 THEN rt0.c0 WHEN '-1619895537' THEN rt0.c0 WHEN t0.c80 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c80 THEN t0.c80 END  WHEN t0.c33 COLLATE RTRIM THEN x'' WHEN (t0.c33 IN ()) THEN (t0.c33 IN (rt0.c2, t0.c33)) WHEN (t0.c80 IN ()) THEN x'' END);
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((rt0.c3 IN (rt0.c2)))<((NULL IN ())))) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))<>(((rt2.c3)%(x'')))) ASC, ((0.7098253924549319)LIKE(-1244942086)), (((rt2.c1 IN ()))IS NOT(CASE rt2.c1  WHEN NULL THEN rt2.c3 END));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c2)))<((NULL IN ())))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))<>(((rt2.c3)%(x'')))) ASC, ((0.7098253924549319)LIKE(-1244942086)), (((rt2.c1 IN ()))IS NOT(CASE rt2.c1  WHEN NULL THEN rt2.c3 END)));
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((rt0.c3 IN (rt0.c2)))<((NULL IN ())))) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))<>(((rt2.c3)%(x'')))) ASC, ((0.7098253924549319)LIKE(-1244942086)), (((rt2.c1 IN ()))IS NOT(CASE rt2.c1  WHEN NULL THEN rt2.c3 END));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c2)))<((NULL IN ())))) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))<>(((rt2.c3)%(x'')))) ASC, ((0.7098253924549319)LIKE(-1244942086)), (((rt2.c1 IN ()))IS NOT(CASE rt2.c1  WHEN NULL THEN rt2.c3 END)));
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((rt0.c3 IN (rt0.c2)))<((NULL IN ())))) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))<>(((rt2.c3)%(x'')))) ASC, ((0.7098253924549319)LIKE(-1244942086)), (((rt2.c1 IN ()))IS NOT(CASE rt2.c1  WHEN NULL THEN rt2.c3 END));
SELECT ALL * FROM rt2, vt0, rt0, t0, rt1 WHERE (x'') ORDER BY LTRIM(((rt2.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt2, vt0, rt0, t0, rt1 ORDER BY LTRIM(((rt2.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt2, vt0, rt0, t0, rt1 WHERE (x'') ORDER BY LTRIM(((rt2.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt2, vt0, rt0, t0, rt1 ORDER BY LTRIM(((rt2.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt2, vt0, rt0, t0, rt1 WHERE (x'') ORDER BY LTRIM(((rt2.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, rt2 WHERE (((rt0.c3)-((+ (t0.c33)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)-((+ (t0.c33))))) IS TRUE)  as count FROM t0, rt0, rt2);
SELECT COUNT(*) FROM t0, rt0, rt2 WHERE (((rt0.c3)-((+ (t0.c33)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)-((+ (t0.c33))))) IS TRUE)  as count FROM t0, rt0, rt2);
SELECT COUNT(*) FROM t0, rt0, rt2 WHERE (((rt0.c3)-((+ (t0.c33)))));
SELECT ALL * FROM rt2, vt0, rt1, t0 WHERE (((((((t0.c33) IS FALSE))AND(CAST(rt2.c0 AS NUMERIC))))OR((((rt2.c1, '-1207255479', rt1.c2))<((rt1.c2, vt0.c1, rt2.c1)))))) ORDER BY json_remove(((((rt2.c1)AND(rt1.c0)))OR(rt2.c2)), ((rt2.c0) BETWEEN (rt2.c3) AND (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c33) IS FALSE))AND(CAST(rt2.c0 AS NUMERIC))))OR((((rt2.c1, '-1207255479', rt1.c2))<((rt1.c2, vt0.c1, rt2.c1)))))) IS TRUE)  as count FROM rt2, vt0, rt1, t0 ORDER BY json_remove(((((rt2.c1)AND(rt1.c0)))OR(rt2.c2)), ((rt2.c0) BETWEEN (rt2.c3) AND (vt0.c1))) DESC);
SELECT ALL * FROM rt2, vt0, rt1, t0 WHERE (((((((t0.c33) IS FALSE))AND(CAST(rt2.c0 AS NUMERIC))))OR((((rt2.c1, '-1207255479', rt1.c2))<((rt1.c2, vt0.c1, rt2.c1)))))) ORDER BY json_remove(((((rt2.c1)AND(rt1.c0)))OR(rt2.c2)), ((rt2.c0) BETWEEN (rt2.c3) AND (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c33) IS FALSE))AND(CAST(rt2.c0 AS NUMERIC))))OR((((rt2.c1, '-1207255479', rt1.c2))<((rt1.c2, vt0.c1, rt2.c1)))))) IS TRUE)  as count FROM rt2, vt0, rt1, t0 ORDER BY json_remove(((((rt2.c1)AND(rt1.c0)))OR(rt2.c2)), ((rt2.c0) BETWEEN (rt2.c3) AND (vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM rt2, vt0 FULL OUTER JOIN rt1 ON CASE WHEN ((rt2.c1)<<(0.7292855738728456)) THEN ((rt2.c3) BETWEEN (rt1.c0) AND (rt2.c0)) END WHERE ((((rt1.c2)) BETWEEN ((rt2.c0)) AND ((vt0.c0)))) ORDER BY CAST((rt2.c2 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((rt2.c0)) AND ((vt0.c0)))) IS TRUE)  as count FROM rt2, vt0 FULL OUTER JOIN rt1 ON CASE WHEN ((rt2.c1)<<(0.7292855738728456)) THEN ((rt2.c3) BETWEEN (rt1.c0) AND (rt2.c0)) END ORDER BY CAST((rt2.c2 IN ()) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM rt2, vt0 FULL OUTER JOIN rt1 ON CASE WHEN ((rt2.c1)<<(0.7292855738728456)) THEN ((rt2.c3) BETWEEN (rt1.c0) AND (rt2.c0)) END WHERE ((((rt1.c2)) BETWEEN ((rt2.c0)) AND ((vt0.c0)))) ORDER BY CAST((rt2.c2 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((rt2.c0)) AND ((vt0.c0)))) IS TRUE)  as count FROM rt2, vt0 FULL OUTER JOIN rt1 ON CASE WHEN ((rt2.c1)<<(0.7292855738728456)) THEN ((rt2.c3) BETWEEN (rt1.c0) AND (rt2.c0)) END ORDER BY CAST((rt2.c2 IN ()) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM rt2, vt0 FULL OUTER JOIN rt1 ON CASE WHEN ((rt2.c1)<<(0.7292855738728456)) THEN ((rt2.c3) BETWEEN (rt1.c0) AND (rt2.c0)) END WHERE ((((rt1.c2)) BETWEEN ((rt2.c0)) AND ((vt0.c0)))) ORDER BY CAST((rt2.c2 IN ()) AS NUMERIC) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (- ((((rt0.c0))!=((NULL))))) LEFT OUTER JOIN rt2 ON ((0.9381926141328546)AND(rt0.c1)) COLLATE RTRIM INNER JOIN rt1 ON highlight(CASE WHEN rt0.c0 THEN rt2.c2 ELSE 0.6903249299922228 END, (NULL IN ()), CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt2.c2 WHEN vt0.c1 THEN vt0.c1 ELSE rt1.c0 END, ((rt1.c1) ISNULL)) WHERE (CASE WHEN CAST(rt1.c1 AS INTEGER) THEN TYPEOF(vt0.c0) WHEN (((rt2.c0, rt2.c2, vt0.c0))>((vt0.c0, rt1.c1, rt0.c2))) THEN vt0.c0 COLLATE NOCASE WHEN ((rt2.c2)*(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt2.c1) AND (0.13270066780511658)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c1 AS INTEGER) THEN TYPEOF(vt0.c0) WHEN (((rt2.c0, rt2.c2, vt0.c0))>((vt0.c0, rt1.c1, rt0.c2))) THEN vt0.c0 COLLATE NOCASE WHEN ((rt2.c2)*(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt2.c1) AND (0.13270066780511658)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (- ((((rt0.c0))!=((NULL))))) LEFT OUTER JOIN rt2 ON ((0.9381926141328546)AND(rt0.c1)) COLLATE RTRIM INNER JOIN rt1 ON highlight(CASE WHEN rt0.c0 THEN rt2.c2 ELSE 0.6903249299922228 END, (NULL IN ()), CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt2.c2 WHEN vt0.c1 THEN vt0.c1 ELSE rt1.c0 END, ((rt1.c1) ISNULL)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (- ((((rt0.c0))!=((NULL))))) LEFT OUTER JOIN rt2 ON ((0.9381926141328546)AND(rt0.c1)) COLLATE RTRIM INNER JOIN rt1 ON highlight(CASE WHEN rt0.c0 THEN rt2.c2 ELSE 0.6903249299922228 END, (NULL IN ()), CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt2.c2 WHEN vt0.c1 THEN vt0.c1 ELSE rt1.c0 END, ((rt1.c1) ISNULL)) WHERE (CASE WHEN CAST(rt1.c1 AS INTEGER) THEN TYPEOF(vt0.c0) WHEN (((rt2.c0, rt2.c2, vt0.c0))>((vt0.c0, rt1.c1, rt0.c2))) THEN vt0.c0 COLLATE NOCASE WHEN ((rt2.c2)*(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt2.c1) AND (0.13270066780511658)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c1 AS INTEGER) THEN TYPEOF(vt0.c0) WHEN (((rt2.c0, rt2.c2, vt0.c0))>((vt0.c0, rt1.c1, rt0.c2))) THEN vt0.c0 COLLATE NOCASE WHEN ((rt2.c2)*(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt2.c1) AND (0.13270066780511658)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (- ((((rt0.c0))!=((NULL))))) LEFT OUTER JOIN rt2 ON ((0.9381926141328546)AND(rt0.c1)) COLLATE RTRIM INNER JOIN rt1 ON highlight(CASE WHEN rt0.c0 THEN rt2.c2 ELSE 0.6903249299922228 END, (NULL IN ()), CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt2.c2 WHEN vt0.c1 THEN vt0.c1 ELSE rt1.c0 END, ((rt1.c1) ISNULL)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY HEX(DISTINCT (((((((((((('')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(0X45df30b3))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT (((((((((((('')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(0X45df30b3))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY HEX(DISTINCT (((((((((((('')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(0X45df30b3))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT (((((((((((('')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(0X45df30b3))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY HEX(DISTINCT (((((((((((('')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(0X45df30b3))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END)) ASC;
SELECT COUNT(*) FROM vt0, rt0, t0, rt1, rt2 WHERE (((((rt0.c1) NOTNULL)) BETWEEN ((t0.c33 IN ())) AND (((rt2.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) BETWEEN ((t0.c33 IN ())) AND (((rt2.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, t0, rt1, rt2);
SELECT COUNT(*) FROM vt0, rt0, t0, rt1, rt2 WHERE (((((rt0.c1) NOTNULL)) BETWEEN ((t0.c33 IN ())) AND (((rt2.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) BETWEEN ((t0.c33 IN ())) AND (((rt2.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, t0, rt1, rt2);
SELECT COUNT(*) FROM vt0, rt0, t0, rt1, rt2 WHERE (((((rt0.c1) NOTNULL)) BETWEEN ((t0.c33 IN ())) AND (((rt2.c0) IS FALSE))));
SELECT COUNT(*) FROM rt2, vt0, t0, rt0, rt1 WHERE ((((rt1.c2, rt2.c0, rt1.c2)) NOT BETWEEN ((rt2.c1 COLLATE NOCASE, ((t0.c80) IS TRUE), ((rt2.c2) NOTNULL))) AND ((STRFTIME(t0.c80, rt0.c3, vt0.c0, rt1.c0, rt1.c0, rt1.c0, rt0.c1), rt2.c3 COLLATE BINARY, CASE rt1.c0  WHEN rt2.c3 THEN rt2.c3 ELSE rt1.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt2.c0, rt1.c2)) NOT BETWEEN ((rt2.c1 COLLATE NOCASE, ((t0.c80) IS TRUE), ((rt2.c2) NOTNULL))) AND ((STRFTIME(t0.c80, rt0.c3, vt0.c0, rt1.c0, rt1.c0, rt1.c0, rt0.c1), rt2.c3 COLLATE BINARY, CASE rt1.c0  WHEN rt2.c3 THEN rt2.c3 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt2, vt0, t0, rt0, rt1);
SELECT COUNT(*) FROM rt2, vt0, t0, rt0, rt1 WHERE ((((rt1.c2, rt2.c0, rt1.c2)) NOT BETWEEN ((rt2.c1 COLLATE NOCASE, ((t0.c80) IS TRUE), ((rt2.c2) NOTNULL))) AND ((STRFTIME(t0.c80, rt0.c3, vt0.c0, rt1.c0, rt1.c0, rt1.c0, rt0.c1), rt2.c3 COLLATE BINARY, CASE rt1.c0  WHEN rt2.c3 THEN rt2.c3 ELSE rt1.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt2.c0, rt1.c2)) NOT BETWEEN ((rt2.c1 COLLATE NOCASE, ((t0.c80) IS TRUE), ((rt2.c2) NOTNULL))) AND ((STRFTIME(t0.c80, rt0.c3, vt0.c0, rt1.c0, rt1.c0, rt1.c0, rt0.c1), rt2.c3 COLLATE BINARY, CASE rt1.c0  WHEN rt2.c3 THEN rt2.c3 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt2, vt0, t0, rt0, rt1);
SELECT COUNT(*) FROM rt2, vt0, t0, rt0, rt1 WHERE ((((rt1.c2, rt2.c0, rt1.c2)) NOT BETWEEN ((rt2.c1 COLLATE NOCASE, ((t0.c80) IS TRUE), ((rt2.c2) NOTNULL))) AND ((STRFTIME(t0.c80, rt0.c3, vt0.c0, rt1.c0, rt1.c0, rt1.c0, rt0.c1), rt2.c3 COLLATE BINARY, CASE rt1.c0  WHEN rt2.c3 THEN rt2.c3 ELSE rt1.c1 END))));
SELECT ALL COUNT(*) FROM t0, rt2 WHERE (((t0.c33) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c33) NOT NULL)) IS TRUE)  as count FROM t0 NOT INDEXED, rt2);
SELECT ALL COUNT(*) FROM t0, rt2 WHERE (((t0.c33) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c33) NOT NULL)) IS TRUE)  as count FROM t0 NOT INDEXED, rt2);
SELECT ALL COUNT(*) FROM t0, rt2 WHERE (((t0.c33) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0, rt2, rt1 WHERE ((- (((rt0.c0)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)/(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt2, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt2, rt1 WHERE ((- (((rt0.c0)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)/(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt2, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt2, rt1 WHERE ((- (((rt0.c0)/(rt0.c0)))));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt2 ON ((CASE rt2.c2  WHEN rt2.c1 THEN rt2.c0 END) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt2.c3)) CROSS JOIN vt0 ON rt2.c2 FULL OUTER JOIN rt0 ON UNLIKELY(NULL) WHERE (rt1.c0) ORDER BY rt2.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt2 ON ((CASE rt2.c2  WHEN rt2.c1 THEN rt2.c0 END) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt2.c3)) CROSS JOIN vt0 ON rt2.c2 FULL OUTER JOIN rt0 ON UNLIKELY(NULL) ORDER BY rt2.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt2 ON ((CASE rt2.c2  WHEN rt2.c1 THEN rt2.c0 END) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt2.c3)) CROSS JOIN vt0 ON rt2.c2 FULL OUTER JOIN rt0 ON UNLIKELY(NULL) WHERE (rt1.c0) ORDER BY rt2.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt2 ON ((CASE rt2.c2  WHEN rt2.c1 THEN rt2.c0 END) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (rt2.c3)) CROSS JOIN vt0 ON rt2.c2 FULL OUTER JOIN rt0 ON UNLIKELY(NULL) ORDER BY rt2.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2)) COLLATE NOCASE) ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN ((((rt1.c0)OR(rt1.c0)))AND(x'39f4')) THEN (- (rt1.c1)) ELSE rt1.c2 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN ((((rt1.c0)OR(rt1.c0)))AND(x'39f4')) THEN (- (rt1.c1)) ELSE rt1.c2 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2)) COLLATE NOCASE) ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN ((((rt1.c0)OR(rt1.c0)))AND(x'39f4')) THEN (- (rt1.c1)) ELSE rt1.c2 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN ((((rt1.c0)OR(rt1.c0)))AND(x'39f4')) THEN (- (rt1.c1)) ELSE rt1.c2 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2)) COLLATE NOCASE) ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN ((((rt1.c0)OR(rt1.c0)))AND(x'39f4')) THEN (- (rt1.c1)) ELSE rt1.c2 COLLATE RTRIM END;
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST((1018793242 IN (rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((1018793242 IN (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST((1018793242 IN (rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((1018793242 IN (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST((1018793242 IN (rt1.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (rt0.c3)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOTNULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c1) NOTNULL)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (rt0.c3)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOTNULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c1) NOTNULL)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (rt0.c3)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOTNULL)) ISNULL);
SELECT ALL * FROM rt2, t0, vt0, rt1 WHERE ((((- (rt1.c0)))==(((rt2.c2)IS(rt1.c2))))) ORDER BY CASE WHEN CAST(t0.c80 AS REAL) THEN ((rt1.c0) IS FALSE) WHEN '1263787809' THEN ((vt0.c1)IS NOT(rt1.c1)) WHEN NULL THEN ((rt1.c2) IS TRUE) END DESC  NULLS FIRST, (((rt2.c1 COLLATE BINARY))>((((rt2.c2)IS NOT(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))==(((rt2.c2)IS(rt1.c2))))) IS TRUE)  as count FROM rt2, t0, vt0, rt1 NOT INDEXED ORDER BY CASE WHEN CAST(t0.c80 AS REAL) THEN ((rt1.c0) IS FALSE) WHEN '1263787809' THEN ((vt0.c1)IS NOT(rt1.c1)) WHEN NULL THEN ((rt1.c2) IS TRUE) END DESC  NULLS FIRST, (((rt2.c1 COLLATE BINARY))>((((rt2.c2)IS NOT(rt1.c1))))));
SELECT ALL * FROM rt2, t0, vt0, rt1 WHERE ((((- (rt1.c0)))==(((rt2.c2)IS(rt1.c2))))) ORDER BY CASE WHEN CAST(t0.c80 AS REAL) THEN ((rt1.c0) IS FALSE) WHEN '1263787809' THEN ((vt0.c1)IS NOT(rt1.c1)) WHEN NULL THEN ((rt1.c2) IS TRUE) END DESC  NULLS FIRST, (((rt2.c1 COLLATE BINARY))>((((rt2.c2)IS NOT(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))==(((rt2.c2)IS(rt1.c2))))) IS TRUE)  as count FROM rt2, t0, vt0, rt1 NOT INDEXED ORDER BY CASE WHEN CAST(t0.c80 AS REAL) THEN ((rt1.c0) IS FALSE) WHEN '1263787809' THEN ((vt0.c1)IS NOT(rt1.c1)) WHEN NULL THEN ((rt1.c2) IS TRUE) END DESC  NULLS FIRST, (((rt2.c1 COLLATE BINARY))>((((rt2.c2)IS NOT(rt1.c1))))));
SELECT ALL * FROM rt2, t0, vt0, rt1 WHERE ((((- (rt1.c0)))==(((rt2.c2)IS(rt1.c2))))) ORDER BY CASE WHEN CAST(t0.c80 AS REAL) THEN ((rt1.c0) IS FALSE) WHEN '1263787809' THEN ((vt0.c1)IS NOT(rt1.c1)) WHEN NULL THEN ((rt1.c2) IS TRUE) END DESC  NULLS FIRST, (((rt2.c1 COLLATE BINARY))>((((rt2.c2)IS NOT(rt1.c1)))));
SELECT ALL * FROM rt1, rt2, t0, rt0, vt0 WHERE (((x'')<=(((rt2.c0)||(vt0.c0))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c80 THEN rt0.c3 ELSE vt0.c0 END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<=(((rt2.c0)||(vt0.c0))))) IS TRUE)  as count FROM rt1, rt2, t0, rt0, vt0 ORDER BY ((CASE WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c80 THEN rt0.c3 ELSE vt0.c0 END) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1, rt2, t0, rt0, vt0 WHERE (((x'')<=(((rt2.c0)||(vt0.c0))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c80 THEN rt0.c3 ELSE vt0.c0 END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<=(((rt2.c0)||(vt0.c0))))) IS TRUE)  as count FROM rt1, rt2, t0, rt0, vt0 ORDER BY ((CASE WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c80 THEN rt0.c3 ELSE vt0.c0 END) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1, rt2, t0, rt0, vt0 WHERE (((x'')<=(((rt2.c0)||(vt0.c0))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c80 THEN rt0.c3 ELSE vt0.c0 END) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN ()))) FULL OUTER JOIN rt2 ON CAST(rt1.c0 COLLATE BINARY AS NUMERIC) LEFT OUTER JOIN t0 ON (((rt2.c2)) BETWEEN ((((rt2.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND (((('Onm圧') BETWEEN (NULL) AND (rt2.c1))))) INNER JOIN rt1 ON CASE WHEN (NOT (t0.c33)) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 WHEN rt2.c3 THEN rt0.c2 END WHEN rt0.c1 THEN ((rt2.c3) NOT NULL) WHEN NULL THEN ((((((((rt2.c1)OR(rt2.c1)))AND(t0.c33)))AND(rt0.c0)))AND(rt2.c2)) END WHERE (((((((((((((vt0.c1)OR(rt2.c0)))OR(rt2.c1)))OR(rt1.c0)))OR(rt0.c3)))AND(t0.c33)))AND(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)OR(rt2.c0)))OR(rt2.c1)))OR(rt1.c0)))OR(rt0.c3)))AND(t0.c33)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN ()))) FULL OUTER JOIN rt2 ON CAST(rt1.c0 COLLATE BINARY AS NUMERIC) LEFT OUTER JOIN t0 ON (((rt2.c2)) BETWEEN ((((rt2.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND (((('Onm圧') BETWEEN (NULL) AND (rt2.c1))))) INNER JOIN rt1 ON CASE WHEN (NOT (t0.c33)) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 WHEN rt2.c3 THEN rt0.c2 END WHEN rt0.c1 THEN ((rt2.c3) NOT NULL) WHEN NULL THEN ((((((((rt2.c1)OR(rt2.c1)))AND(t0.c33)))AND(rt0.c0)))AND(rt2.c2)) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN ()))) FULL OUTER JOIN rt2 ON CAST(rt1.c0 COLLATE BINARY AS NUMERIC) LEFT OUTER JOIN t0 ON (((rt2.c2)) BETWEEN ((((rt2.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND (((('Onm圧') BETWEEN (NULL) AND (rt2.c1))))) INNER JOIN rt1 ON CASE WHEN (NOT (t0.c33)) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 WHEN rt2.c3 THEN rt0.c2 END WHEN rt0.c1 THEN ((rt2.c3) NOT NULL) WHEN NULL THEN ((((((((rt2.c1)OR(rt2.c1)))AND(t0.c33)))AND(rt0.c0)))AND(rt2.c2)) END WHERE (((((((((((((vt0.c1)OR(rt2.c0)))OR(rt2.c1)))OR(rt1.c0)))OR(rt0.c3)))AND(t0.c33)))AND(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)OR(rt2.c0)))OR(rt2.c1)))OR(rt1.c0)))OR(rt0.c3)))AND(t0.c33)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN ()))) FULL OUTER JOIN rt2 ON CAST(rt1.c0 COLLATE BINARY AS NUMERIC) LEFT OUTER JOIN t0 ON (((rt2.c2)) BETWEEN ((((rt2.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND (((('Onm圧') BETWEEN (NULL) AND (rt2.c1))))) INNER JOIN rt1 ON CASE WHEN (NOT (t0.c33)) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt1.c0 THEN t0.c33 WHEN rt2.c3 THEN rt0.c2 END WHEN rt0.c1 THEN ((rt2.c3) NOT NULL) WHEN NULL THEN ((((((((rt2.c1)OR(rt2.c1)))AND(t0.c33)))AND(rt0.c0)))AND(rt2.c2)) END);
SELECT COUNT(*) FROM rt2 WHERE (('R-' IN ()));
SELECT SUM(count) FROM (SELECT ((('R-' IN ())) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (('R-' IN ()));
SELECT SUM(count) FROM (SELECT ((('R-' IN ())) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (('R-' IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, rt0, rt1 WHERE ((((rt1.c2 IN (vt0.c1)))%(((vt0.c1) NOT BETWEEN (t0.c80) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (vt0.c1)))%(((vt0.c1) NOT BETWEEN (t0.c80) AND (rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, rt1 WHERE ((((rt1.c2 IN (vt0.c1)))%(((vt0.c1) NOT BETWEEN (t0.c80) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (vt0.c1)))%(((vt0.c1) NOT BETWEEN (t0.c80) AND (rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, rt1 WHERE ((((rt1.c2 IN (vt0.c1)))%(((vt0.c1) NOT BETWEEN (t0.c80) AND (rt0.c1)))));
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((((rt0.c1) NOT BETWEEN (rt2.c0) AND (rt1.c2))) NOT BETWEEN (('J_sG/!*' IN ())) AND ('-91828880' COLLATE RTRIM))) ORDER BY rt1.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt2.c0) AND (rt1.c2))) NOT BETWEEN (('J_sG/!*' IN ())) AND ('-91828880' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY rt1.c2 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((((rt0.c1) NOT BETWEEN (rt2.c0) AND (rt1.c2))) NOT BETWEEN (('J_sG/!*' IN ())) AND ('-91828880' COLLATE RTRIM))) ORDER BY rt1.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt2.c0) AND (rt1.c2))) NOT BETWEEN (('J_sG/!*' IN ())) AND ('-91828880' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1, rt2 ORDER BY rt1.c2 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((((rt0.c1) NOT BETWEEN (rt2.c0) AND (rt1.c2))) NOT BETWEEN (('J_sG/!*' IN ())) AND ('-91828880' COLLATE RTRIM))) ORDER BY rt1.c2 COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((- ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- ((+ (rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (NULL)));
SELECT COUNT(*) FROM rt0, rt2, t0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((rt0.c3) ISNULL) IN ((((vt0.c0, x'c868', vt0.c1)) NOT BETWEEN ((rt2.c3, rt0.c2, t0.c80)) AND ((t0.c80, vt0.c1, rt0.c1))), (((t0.c80, rt2.c2, rt2.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.1286192115630157)) AND ((rt0.c1, rt0.c0, rt2.c2)))))) ORDER BY ((rt0.c0)||(('1923098530' IN ()))) ASC  NULLS LAST, x'32dd' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3) ISNULL) IN ((((vt0.c0, x'c868', vt0.c1)) NOT BETWEEN ((rt2.c3, rt0.c2, t0.c80)) AND ((t0.c80, vt0.c1, rt0.c1))), (((t0.c80, rt2.c2, rt2.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.1286192115630157)) AND ((rt0.c1, rt0.c0, rt2.c2)))))) IS TRUE)  as count FROM rt0, rt2, t0 RIGHT OUTER JOIN vt0 ON NULL ORDER BY ((rt0.c0)||(('1923098530' IN ()))) ASC  NULLS LAST, x'32dd' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0, rt2, t0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((rt0.c3) ISNULL) IN ((((vt0.c0, x'c868', vt0.c1)) NOT BETWEEN ((rt2.c3, rt0.c2, t0.c80)) AND ((t0.c80, vt0.c1, rt0.c1))), (((t0.c80, rt2.c2, rt2.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.1286192115630157)) AND ((rt0.c1, rt0.c0, rt2.c2)))))) ORDER BY ((rt0.c0)||(('1923098530' IN ()))) ASC  NULLS LAST, x'32dd' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3) ISNULL) IN ((((vt0.c0, x'c868', vt0.c1)) NOT BETWEEN ((rt2.c3, rt0.c2, t0.c80)) AND ((t0.c80, vt0.c1, rt0.c1))), (((t0.c80, rt2.c2, rt2.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.1286192115630157)) AND ((rt0.c1, rt0.c0, rt2.c2)))))) IS TRUE)  as count FROM rt0, rt2, t0 RIGHT OUTER JOIN vt0 ON NULL ORDER BY ((rt0.c0)||(('1923098530' IN ()))) ASC  NULLS LAST, x'32dd' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0, rt2, t0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((rt0.c3) ISNULL) IN ((((vt0.c0, x'c868', vt0.c1)) NOT BETWEEN ((rt2.c3, rt0.c2, t0.c80)) AND ((t0.c80, vt0.c1, rt0.c1))), (((t0.c80, rt2.c2, rt2.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.1286192115630157)) AND ((rt0.c1, rt0.c0, rt2.c2)))))) ORDER BY ((rt0.c0)||(('1923098530' IN ()))) ASC  NULLS LAST, x'32dd' COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt2 ON ((rt2.c1)/(rt2.c3)) COLLATE BINARY FULL OUTER JOIN rt1 ON CAST(t0.c33 AS REAL) COLLATE NOCASE FULL OUTER JOIN t0 ON UPPER((+ (rt0.c1))) WHERE (((((rt1.c2)<=(rt0.c2))) IS TRUE)) ORDER BY CASE rt2.c2  WHEN rt0.c2 THEN rt1.c1 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON ((rt2.c1)/(rt2.c3)) COLLATE BINARY FULL OUTER JOIN rt1 ON CAST(t0.c33 AS REAL) COLLATE NOCASE FULL OUTER JOIN t0 ON UPPER((+ (rt0.c1))) ORDER BY CASE rt2.c2  WHEN rt0.c2 THEN rt1.c1 END COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt2 ON ((rt2.c1)/(rt2.c3)) COLLATE BINARY FULL OUTER JOIN rt1 ON CAST(t0.c33 AS REAL) COLLATE NOCASE FULL OUTER JOIN t0 ON UPPER((+ (rt0.c1))) WHERE (((((rt1.c2)<=(rt0.c2))) IS TRUE)) ORDER BY CASE rt2.c2  WHEN rt0.c2 THEN rt1.c1 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON ((rt2.c1)/(rt2.c3)) COLLATE BINARY FULL OUTER JOIN rt1 ON CAST(t0.c33 AS REAL) COLLATE NOCASE FULL OUTER JOIN t0 ON UPPER((+ (rt0.c1))) ORDER BY CASE rt2.c2  WHEN rt0.c2 THEN rt1.c1 END COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END) IS FALSE));
SELECT * FROM rt2 WHERE (TRIM(CAST(rt2.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt2.c1 AS REAL))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (TRIM(CAST(rt2.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt2.c1 AS REAL))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (TRIM(CAST(rt2.c1 AS REAL)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c33)OR(t0.c80)))OR(t0.c80)), ((x'')<('')), (+ (t0.c80))))<((((((t0.c33)AND(t0.c80)))AND(t0.c80)), ((t0.c33) NOTNULL), t0.c33 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c33)OR(t0.c80)))OR(t0.c80)), ((x'')<('')), (+ (t0.c80))))<((((((t0.c33)AND(t0.c80)))AND(t0.c80)), ((t0.c33) NOTNULL), t0.c33 COLLATE BINARY)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c33)OR(t0.c80)))OR(t0.c80)), ((x'')<('')), (+ (t0.c80))))<((((((t0.c33)AND(t0.c80)))AND(t0.c80)), ((t0.c33) NOTNULL), t0.c33 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c33)OR(t0.c80)))OR(t0.c80)), ((x'')<('')), (+ (t0.c80))))<((((((t0.c33)AND(t0.c80)))AND(t0.c80)), ((t0.c33) NOTNULL), t0.c33 COLLATE BINARY)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c33)OR(t0.c80)))OR(t0.c80)), ((x'')<('')), (+ (t0.c80))))<((((((t0.c33)AND(t0.c80)))AND(t0.c80)), ((t0.c33) NOTNULL), t0.c33 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt2 WHERE (NULL) ORDER BY ((((CAST(rt2.c3 AS NUMERIC))OR((rt2.c1 IN ()))))AND(rt2.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt2 ORDER BY ((((CAST(rt2.c3 AS NUMERIC))OR((rt2.c1 IN ()))))AND(rt2.c3))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 WHERE (NULL) ORDER BY ((((CAST(rt2.c3 AS NUMERIC))OR((rt2.c1 IN ()))))AND(rt2.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt2 ORDER BY ((((CAST(rt2.c3 AS NUMERIC))OR((rt2.c1 IN ()))))AND(rt2.c3))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 WHERE (NULL) ORDER BY ((((CAST(rt2.c3 AS NUMERIC))OR((rt2.c1 IN ()))))AND(rt2.c3))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, rt2, rt1, t0 WHERE (((((((t0.c80)<=(rt2.c3)))OR(((rt2.c3) NOT NULL))))AND(TRIM(rt0.c1)))) ORDER BY CAST(((rt2.c0)>>(rt2.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c80)<=(rt2.c3)))OR(((rt2.c3) NOT NULL))))AND(TRIM(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, rt2, rt1, t0 ORDER BY CAST(((rt2.c0)>>(rt2.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, rt2, rt1, t0 WHERE (((((((t0.c80)<=(rt2.c3)))OR(((rt2.c3) NOT NULL))))AND(TRIM(rt0.c1)))) ORDER BY CAST(((rt2.c0)>>(rt2.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c80)<=(rt2.c3)))OR(((rt2.c3) NOT NULL))))AND(TRIM(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, rt2, rt1, t0 ORDER BY CAST(((rt2.c0)>>(rt2.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, rt2, rt1, t0 WHERE (((((((t0.c80)<=(rt2.c3)))OR(((rt2.c3) NOT NULL))))AND(TRIM(rt0.c1)))) ORDER BY CAST(((rt2.c0)>>(rt2.c0)) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON NULL FULL OUTER JOIN vt0 ON CAST((rt2.c3 IN (vt0.c1)) AS INTEGER) WHERE (((((CASE WHEN '-1929744183' THEN rt2.c1 ELSE vt0.c1 END)AND((((rt2.c2, rt1.c1, rt2.c3)) BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((rt2.c1, rt2.c0, vt0.c1))))))OR(CASE rt1.c0  WHEN rt2.c1 THEN rt1.c1 END))) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN '-1929744183' THEN rt2.c1 ELSE vt0.c1 END)AND((((rt2.c2, rt1.c1, rt2.c3)) BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((rt2.c1, rt2.c0, vt0.c1))))))OR(CASE rt1.c0  WHEN rt2.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON NULL FULL OUTER JOIN vt0 ON CAST((rt2.c3 IN (vt0.c1)) AS INTEGER) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON NULL FULL OUTER JOIN vt0 ON CAST((rt2.c3 IN (vt0.c1)) AS INTEGER) WHERE (((((CASE WHEN '-1929744183' THEN rt2.c1 ELSE vt0.c1 END)AND((((rt2.c2, rt1.c1, rt2.c3)) BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((rt2.c1, rt2.c0, vt0.c1))))))OR(CASE rt1.c0  WHEN rt2.c1 THEN rt1.c1 END))) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN '-1929744183' THEN rt2.c1 ELSE vt0.c1 END)AND((((rt2.c2, rt1.c1, rt2.c3)) BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((rt2.c1, rt2.c0, vt0.c1))))))OR(CASE rt1.c0  WHEN rt2.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON NULL FULL OUTER JOIN vt0 ON CAST((rt2.c3 IN (vt0.c1)) AS INTEGER) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON NULL FULL OUTER JOIN vt0 ON CAST((rt2.c3 IN (vt0.c1)) AS INTEGER) WHERE (((((CASE WHEN '-1929744183' THEN rt2.c1 ELSE vt0.c1 END)AND((((rt2.c2, rt1.c1, rt2.c3)) BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((rt2.c1, rt2.c0, vt0.c1))))))OR(CASE rt1.c0  WHEN rt2.c1 THEN rt1.c1 END))) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS INTEGER);
SELECT * FROM t0 WHERE ((((NOT (t0.c33))) ISNULL)) ORDER BY -1.207255479E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c33))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY -1.207255479E9  NULLS FIRST);
SELECT * FROM t0 WHERE ((((NOT (t0.c33))) ISNULL)) ORDER BY -1.207255479E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c33))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY -1.207255479E9  NULLS FIRST);
SELECT * FROM t0 WHERE ((((NOT (t0.c33))) ISNULL)) ORDER BY -1.207255479E9  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LIKELIHOOD(rt0.c1, 0.3548544621759323));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt0.c1, 0.3548544621759323)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LIKELIHOOD(rt0.c1, 0.3548544621759323));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt0.c1, 0.3548544621759323)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LIKELIHOOD(rt0.c1, 0.3548544621759323));
SELECT ALL * FROM rt1, t0, rt0 INNER JOIN rt2 ON 0Xfffffffff1e7a0b5 WHERE (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'80e2'))) IN ())) ORDER BY CASE (((t0.c33, rt1.c0, rt2.c3)) NOT BETWEEN ((rt2.c1, rt1.c0, rt0.c1)) AND ((t0.c80, t0.c80, rt2.c3)))  WHEN DATE(NULL, rt0.c0, rt0.c0) THEN (- (rt2.c1)) ELSE (- (rt0.c3)) END  NULLS FIRST, CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)GLOB(rt1.c1)) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c3) BETWEEN (t0.c80) AND (rt2.c3))) AND (((rt1.c0)<(rt2.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'80e2'))) IN ())) IS TRUE)  as count FROM rt1, t0, rt0 INNER JOIN rt2 ON 0xfffffffff1e7a0b5 ORDER BY CASE (((t0.c33, rt1.c0, rt2.c3)) NOT BETWEEN ((rt2.c1, rt1.c0, rt0.c1)) AND ((t0.c80, t0.c80, rt2.c3)))  WHEN DATE(NULL, rt0.c0, rt0.c0) THEN (- (rt2.c1)) ELSE (- (rt0.c3)) END  NULLS FIRST, CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)GLOB(rt1.c1)) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c3) BETWEEN (t0.c80) AND (rt2.c3))) AND (((rt1.c0)<(rt2.c2)))));
SELECT ALL * FROM rt1, t0, rt0 INNER JOIN rt2 ON 0Xfffffffff1e7a0b5 WHERE (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'80e2'))) IN ())) ORDER BY CASE (((t0.c33, rt1.c0, rt2.c3)) NOT BETWEEN ((rt2.c1, rt1.c0, rt0.c1)) AND ((t0.c80, t0.c80, rt2.c3)))  WHEN DATE(NULL, rt0.c0, rt0.c0) THEN (- (rt2.c1)) ELSE (- (rt0.c3)) END  NULLS FIRST, CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)GLOB(rt1.c1)) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c3) BETWEEN (t0.c80) AND (rt2.c3))) AND (((rt1.c0)<(rt2.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'80e2'))) IN ())) IS TRUE)  as count FROM rt1, t0, rt0 INNER JOIN rt2 ON 0xfffffffff1e7a0b5 ORDER BY CASE (((t0.c33, rt1.c0, rt2.c3)) NOT BETWEEN ((rt2.c1, rt1.c0, rt0.c1)) AND ((t0.c80, t0.c80, rt2.c3)))  WHEN DATE(NULL, rt0.c0, rt0.c0) THEN (- (rt2.c1)) ELSE (- (rt0.c3)) END  NULLS FIRST, CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)GLOB(rt1.c1)) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c3) BETWEEN (t0.c80) AND (rt2.c3))) AND (((rt1.c0)<(rt2.c2)))));
SELECT ALL * FROM rt1, t0, rt0 INNER JOIN rt2 ON 0Xfffffffff1e7a0b5 WHERE (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'80e2'))) IN ())) ORDER BY CASE (((t0.c33, rt1.c0, rt2.c3)) NOT BETWEEN ((rt2.c1, rt1.c0, rt0.c1)) AND ((t0.c80, t0.c80, rt2.c3)))  WHEN DATE(NULL, rt0.c0, rt0.c0) THEN (- (rt2.c1)) ELSE (- (rt0.c3)) END  NULLS FIRST, CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)GLOB(rt1.c1)) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c3) BETWEEN (t0.c80) AND (rt2.c3))) AND (((rt1.c0)<(rt2.c2))));
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON (((((rt1.c0) NOT NULL)))=((CAST(rt1.c0 AS BLOB)))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN t0 ON ((TRIM(DISTINCT 0.14453495087173385, rt2.c0)) NOT BETWEEN (TRIM(rt0.c3)) AND (((rt2.c1) IS TRUE))) WHERE ('412731321');
SELECT SUM(count) FROM (SELECT (('412731321') IS TRUE)  as count FROM rt1, rt2 INNER JOIN rt0 ON (((((rt1.c0) NOT NULL)))=((CAST(rt1.c0 AS BLOB)))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN t0 ON ((TRIM(DISTINCT 0.14453495087173385, rt2.c0)) NOT BETWEEN (TRIM(rt0.c3)) AND (((rt2.c1) IS TRUE))));
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON (((((rt1.c0) NOT NULL)))=((CAST(rt1.c0 AS BLOB)))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN t0 ON ((TRIM(DISTINCT 0.14453495087173385, rt2.c0)) NOT BETWEEN (TRIM(rt0.c3)) AND (((rt2.c1) IS TRUE))) WHERE ('412731321');
SELECT SUM(count) FROM (SELECT (('412731321') IS TRUE)  as count FROM rt1, rt2 INNER JOIN rt0 ON (((((rt1.c0) NOT NULL)))=((CAST(rt1.c0 AS BLOB)))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN t0 ON ((TRIM(DISTINCT 0.14453495087173385, rt2.c0)) NOT BETWEEN (TRIM(rt0.c3)) AND (((rt2.c1) IS TRUE))));
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON (((((rt1.c0) NOT NULL)))=((CAST(rt1.c0 AS BLOB)))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN t0 ON ((TRIM(DISTINCT 0.14453495087173385, rt2.c0)) NOT BETWEEN (TRIM(rt0.c3)) AND (((rt2.c1) IS TRUE))) WHERE ('412731321');
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t0, rt2 WHERE (rt2.c2) ORDER BY '1177663058' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2) IS TRUE)  as count FROM rt1, rt0, vt0, t0, rt2 ORDER BY '1177663058' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t0, rt2 WHERE (rt2.c2) ORDER BY '1177663058' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2) IS TRUE)  as count FROM rt1, rt0, vt0, t0, rt2 ORDER BY '1177663058' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t0, rt2 WHERE (rt2.c2) ORDER BY '1177663058' ASC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c80)))IS(CASE t0.c80  WHEN rt1.c2 THEN t0.c80 ELSE t0.c80 END))) ORDER BY ((CAST(t0.c80 AS INTEGER)) BETWEEN (CAST(rt1.c0 AS REAL)) AND (0.06155179827781554)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c80)))IS(CASE t0.c80  WHEN rt1.c2 THEN t0.c80 ELSE t0.c80 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CAST(t0.c80 AS INTEGER)) BETWEEN (CAST(rt1.c0 AS REAL)) AND (0.06155179827781554)) ASC  NULLS LAST);
SELECT * FROM rt1, t0 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c80)))IS(CASE t0.c80  WHEN rt1.c2 THEN t0.c80 ELSE t0.c80 END))) ORDER BY ((CAST(t0.c80 AS INTEGER)) BETWEEN (CAST(rt1.c0 AS REAL)) AND (0.06155179827781554)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c80)))IS(CASE t0.c80  WHEN rt1.c2 THEN t0.c80 ELSE t0.c80 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CAST(t0.c80 AS INTEGER)) BETWEEN (CAST(rt1.c0 AS REAL)) AND (0.06155179827781554)) ASC  NULLS LAST);
SELECT * FROM rt1, t0 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c80)))IS(CASE t0.c80  WHEN rt1.c2 THEN t0.c80 ELSE t0.c80 END))) ORDER BY ((CAST(t0.c80 AS INTEGER)) BETWEEN (CAST(rt1.c0 AS REAL)) AND (0.06155179827781554)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, t0, vt0, rt2 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)))/(((rt2.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)))/(((rt2.c0)>=(vt0.c0))))) IS TRUE)  as count FROM rt1, rt0, t0, vt0, rt2);
SELECT COUNT(*) FROM rt1, rt0, t0, vt0, rt2 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)))/(((rt2.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)))/(((rt2.c0)>=(vt0.c0))))) IS TRUE)  as count FROM rt1, rt0, t0, vt0, rt2);
SELECT COUNT(*) FROM rt1, rt0, t0, vt0, rt2 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)))/(((rt2.c0)>=(vt0.c0)))));
SELECT * FROM vt0, rt0, rt1 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0)OR(rt0.c2)))) AND (((((rt0.c3))>((rt1.c0))))))) ORDER BY ((((rt0.c1) NOT BETWEEN (x'b63b') AND (rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c0)OR(rt0.c2)))) AND (((((rt0.c3))>((rt1.c0))))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((rt0.c1) NOT BETWEEN (x'b63b') AND (rt0.c2))) IS FALSE));
SELECT * FROM vt0, rt0, rt1 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0)OR(rt0.c2)))) AND (((((rt0.c3))>((rt1.c0))))))) ORDER BY ((((rt0.c1) NOT BETWEEN (x'b63b') AND (rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c0)OR(rt0.c2)))) AND (((((rt0.c3))>((rt1.c0))))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((rt0.c1) NOT BETWEEN (x'b63b') AND (rt0.c2))) IS FALSE));
SELECT * FROM vt0, rt0, rt1 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0)OR(rt0.c2)))) AND (((((rt0.c3))>((rt1.c0))))))) ORDER BY ((((rt0.c1) NOT BETWEEN (x'b63b') AND (rt0.c2))) IS FALSE);
SELECT ALL COUNT(*) FROM rt0, rt2, t0, rt1 WHERE (((highlight(rt2.c3, rt2.c2, rt0.c2, rt2.c1)) NOT BETWEEN (((rt1.c1)-(rt2.c2))) AND (((rt1.c0)-(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((highlight(rt2.c3, rt2.c2, rt0.c2, rt2.c1)) NOT BETWEEN (((rt1.c1)-(rt2.c2))) AND (((rt1.c0)-(rt1.c1))))) IS TRUE)  as count FROM rt0, rt2, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, t0, rt1 WHERE (((highlight(rt2.c3, rt2.c2, rt0.c2, rt2.c1)) NOT BETWEEN (((rt1.c1)-(rt2.c2))) AND (((rt1.c0)-(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((highlight(rt2.c3, rt2.c2, rt0.c2, rt2.c1)) NOT BETWEEN (((rt1.c1)-(rt2.c2))) AND (((rt1.c0)-(rt1.c1))))) IS TRUE)  as count FROM rt0, rt2, t0, rt1);
SELECT COUNT(*) FROM t0, rt1, vt0, rt2 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM t0, rt1, vt0, rt2);
SELECT COUNT(*) FROM t0, rt1, vt0, rt2 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM t0, rt1, vt0, rt2);
SELECT COUNT(*) FROM t0, rt1, vt0, rt2 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT * FROM rt2, vt0, rt0, t0, rt1 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c2 THEN 'W47U' WHEN 0.16482181018133657 THEN rt2.c0 END AS TEXT)) ORDER BY CASE WHEN ((rt0.c2)|(rt1.c1)) THEN ((rt0.c0) IS TRUE) WHEN (vt0.c1 IN ()) THEN NULL WHEN UNLIKELY(rt0.c1) THEN (+ (rt2.c3)) ELSE x'' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c2 THEN 'W47U' WHEN 0.16482181018133657 THEN rt2.c0 END AS TEXT)) IS TRUE)  as count FROM rt2, vt0, rt0 NOT INDEXED, t0, rt1 ORDER BY CASE WHEN ((rt0.c2)|(rt1.c1)) THEN ((rt0.c0) IS TRUE) WHEN (vt0.c1 IN ()) THEN NULL WHEN UNLIKELY(rt0.c1) THEN (+ (rt2.c3)) ELSE x'' END DESC);
SELECT * FROM rt2, vt0, rt0, t0, rt1 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c2 THEN 'W47U' WHEN 0.16482181018133657 THEN rt2.c0 END AS TEXT)) ORDER BY CASE WHEN ((rt0.c2)|(rt1.c1)) THEN ((rt0.c0) IS TRUE) WHEN (vt0.c1 IN ()) THEN NULL WHEN UNLIKELY(rt0.c1) THEN (+ (rt2.c3)) ELSE x'' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c2 THEN 'W47U' WHEN 0.16482181018133657 THEN rt2.c0 END AS TEXT)) IS TRUE)  as count FROM rt2, vt0, rt0 NOT INDEXED, t0, rt1 ORDER BY CASE WHEN ((rt0.c2)|(rt1.c1)) THEN ((rt0.c0) IS TRUE) WHEN (vt0.c1 IN ()) THEN NULL WHEN UNLIKELY(rt0.c1) THEN (+ (rt2.c3)) ELSE x'' END DESC);
SELECT * FROM rt2, vt0, rt0, t0, rt1 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c2 THEN 'W47U' WHEN 0.16482181018133657 THEN rt2.c0 END AS TEXT)) ORDER BY CASE WHEN ((rt0.c2)|(rt1.c1)) THEN ((rt0.c0) IS TRUE) WHEN (vt0.c1 IN ()) THEN NULL WHEN UNLIKELY(rt0.c1) THEN (+ (rt2.c3)) ELSE x'' END DESC;
SELECT * FROM t0, vt0, rt0, rt1 WHERE (rt1.c2) ORDER BY ((((t0.c80)%(t0.c33))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM t0, vt0, rt0, rt1 ORDER BY ((((t0.c80)%(t0.c33))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (rt1.c2) ORDER BY ((((t0.c80)%(t0.c33))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM t0, vt0, rt0, rt1 ORDER BY ((((t0.c80)%(t0.c33))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (rt1.c2) ORDER BY ((((t0.c80)%(t0.c33))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM t0, rt1, rt0, rt2 WHERE (CASE '0.5328039399622296'  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c3)IS(rt2.c2)) END) ORDER BY ((((IFNULL(DISTINCT 'VmS\}', rt0.c3))AND(t0.c80)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c33))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE '0.5328039399622296'  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c3)IS(rt2.c2)) END) IS TRUE)  as count FROM t0, rt1, rt0, rt2 ORDER BY ((((IFNULL(DISTINCT 'VmS\}', rt0.c3))AND(t0.c80)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c33))))  NULLS FIRST);
SELECT * FROM t0, rt1, rt0, rt2 WHERE (CASE '0.5328039399622296'  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c3)IS(rt2.c2)) END) ORDER BY ((((IFNULL(DISTINCT 'VmS\}', rt0.c3))AND(t0.c80)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c33))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE '0.5328039399622296'  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c3)IS(rt2.c2)) END) IS TRUE)  as count FROM t0, rt1, rt0, rt2 ORDER BY ((((IFNULL(DISTINCT 'VmS\}', rt0.c3))AND(t0.c80)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c33))))  NULLS FIRST);
SELECT * FROM t0, rt1, rt0, rt2 WHERE (CASE '0.5328039399622296'  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt2.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c3)IS(rt2.c2)) END) ORDER BY ((((IFNULL(DISTINCT 'VmS\}', rt0.c3))AND(t0.c80)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c33))))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))<((((vt0.c1) IS TRUE))))) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(vt0.c0)))<((((vt0.c1) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))<((((vt0.c1) IS TRUE))))) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(vt0.c0)))<((((vt0.c1) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))<((((vt0.c1) IS TRUE))))) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON (((rt2.c1)) NOT BETWEEN ((rt2.c0 COLLATE NOCASE)) AND (((t0.c80 IN ())))) LEFT OUTER JOIN t0 ON (NOT ((- (rt2.c2)))) WHERE (((((rt2.c3))>((t0.c80))) IN ())) ORDER BY (~ (UNLIKELY(DISTINCT rt2.c0))) DESC  NULLS LAST, ((UNLIKELY(t0.c80)) IS TRUE)  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c1))!=((rt2.c2, rt2.c3, 0.877570188562307)))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3))>((t0.c80))) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON (((rt2.c1)) NOT BETWEEN ((rt2.c0 COLLATE NOCASE)) AND (((t0.c80 IN ())))) LEFT OUTER JOIN t0 ON (NOT ((- (rt2.c2)))) ORDER BY (~ (UNLIKELY(DISTINCT rt2.c0))) DESC  NULLS LAST, ((UNLIKELY(t0.c80)) IS TRUE)  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c1))!=((rt2.c2, rt2.c3, 0.877570188562307)))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON (((rt2.c1)) NOT BETWEEN ((rt2.c0 COLLATE NOCASE)) AND (((t0.c80 IN ())))) LEFT OUTER JOIN t0 ON (NOT ((- (rt2.c2)))) WHERE (((((rt2.c3))>((t0.c80))) IN ())) ORDER BY (~ (UNLIKELY(DISTINCT rt2.c0))) DESC  NULLS LAST, ((UNLIKELY(t0.c80)) IS TRUE)  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c1))!=((rt2.c2, rt2.c3, 0.877570188562307)))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3))>((t0.c80))) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON (((rt2.c1)) NOT BETWEEN ((rt2.c0 COLLATE NOCASE)) AND (((t0.c80 IN ())))) LEFT OUTER JOIN t0 ON (NOT ((- (rt2.c2)))) ORDER BY (~ (UNLIKELY(DISTINCT rt2.c0))) DESC  NULLS LAST, ((UNLIKELY(t0.c80)) IS TRUE)  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c1))!=((rt2.c2, rt2.c3, 0.877570188562307)))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON (((rt2.c1)) NOT BETWEEN ((rt2.c0 COLLATE NOCASE)) AND (((t0.c80 IN ())))) LEFT OUTER JOIN t0 ON (NOT ((- (rt2.c2)))) WHERE (((((rt2.c3))>((t0.c80))) IN ())) ORDER BY (~ (UNLIKELY(DISTINCT rt2.c0))) DESC  NULLS LAST, ((UNLIKELY(t0.c80)) IS TRUE)  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c1))!=((rt2.c2, rt2.c3, 0.877570188562307)))) ISNULL) ASC  NULLS LAST;
SELECT * FROM t0, rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((t0.c33) NOT NULL)) AND (((vt0.c1)GLOB(vt0.c0))))) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c2)&(rt0.c1))) AND (TYPEOF(DISTINCT rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((t0.c33) NOT NULL)) AND (((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c2)&(rt0.c1))) AND (TYPEOF(DISTINCT rt0.c2))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((t0.c33) NOT NULL)) AND (((vt0.c1)GLOB(vt0.c0))))) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c2)&(rt0.c1))) AND (TYPEOF(DISTINCT rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((t0.c33) NOT NULL)) AND (((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c2)&(rt0.c1))) AND (TYPEOF(DISTINCT rt0.c2))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((t0.c33) NOT NULL)) AND (((vt0.c1)GLOB(vt0.c0))))) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c2)&(rt0.c1))) AND (TYPEOF(DISTINCT rt0.c2))) ASC;
SELECT ALL * FROM vt0, rt1, rt2, t0, rt0 WHERE (COALESCE(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (vt0.c0)), ((-1.228104383E9) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (vt0.c0)), ((-1.228104383E9) IS TRUE))) IS TRUE)  as count FROM vt0, rt1, rt2, t0, rt0);
SELECT ALL * FROM vt0, rt1, rt2, t0, rt0 WHERE (COALESCE(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (vt0.c0)), ((-1.228104383E9) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (vt0.c0)), ((-1.228104383E9) IS TRUE))) IS TRUE)  as count FROM vt0, rt1, rt2, t0, rt0);
SELECT ALL * FROM vt0, rt1, rt2, t0, rt0 WHERE (COALESCE(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (vt0.c0)), ((-1.228104383E9) IS TRUE)));
SELECT ALL * FROM rt2, vt0, t0, rt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(rt0.c0)))|(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(rt0.c0)))|(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt2, vt0, t0, rt0);
SELECT ALL * FROM rt2, vt0, t0, rt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(rt0.c0)))|(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(rt0.c0)))|(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt2, vt0, t0, rt0);
SELECT ALL * FROM rt2, vt0, t0, rt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(rt0.c0)))|(CAST(rt0.c1 AS NUMERIC))));
SELECT * FROM rt1 WHERE ((((rt1.c1, x'', rt1.c0 COLLATE BINARY))<((UNLIKELY(rt1.c1), ((('1923098530', rt1.c1, rt1.c2, rt1.c1, rt1.c2))<((rt1.c1, rt1.c0, rt1.c2, rt1.c2, rt1.c1))), rt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, x'', rt1.c0 COLLATE BINARY))<((UNLIKELY(rt1.c1), ((('1923098530', rt1.c1, rt1.c2, rt1.c1, rt1.c2))<((rt1.c1, rt1.c0, rt1.c2, rt1.c2, rt1.c1))), rt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1, x'', rt1.c0 COLLATE BINARY))<((UNLIKELY(rt1.c1), ((('1923098530', rt1.c1, rt1.c2, rt1.c1, rt1.c2))<((rt1.c1, rt1.c0, rt1.c2, rt1.c2, rt1.c1))), rt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, x'', rt1.c0 COLLATE BINARY))<((UNLIKELY(rt1.c1), ((('1923098530', rt1.c1, rt1.c2, rt1.c1, rt1.c2))<((rt1.c1, rt1.c0, rt1.c2, rt1.c2, rt1.c1))), rt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1, x'', rt1.c0 COLLATE BINARY))<((UNLIKELY(rt1.c1), ((('1923098530', rt1.c1, rt1.c2, rt1.c1, rt1.c2))<((rt1.c1, rt1.c0, rt1.c2, rt1.c2, rt1.c1))), rt1.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt2, t0, rt1, vt0 WHERE (CASE WHEN ((rt2.c2)=(t0.c80)) THEN ((rt1.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c2)==(t0.c80)) THEN ((rt1.c2) IS TRUE) END) IS TRUE)  as count FROM rt2, t0, rt1, vt0);
SELECT COUNT(*) FROM rt2, t0, rt1, vt0 WHERE (CASE WHEN ((rt2.c2)=(t0.c80)) THEN ((rt1.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c2)==(t0.c80)) THEN ((rt1.c2) IS TRUE) END) IS TRUE)  as count FROM rt2, t0, rt1, vt0);
SELECT COUNT(*) FROM rt2, t0, rt1, vt0 WHERE (CASE WHEN ((rt2.c2)=(t0.c80)) THEN ((rt1.c2) IS TRUE) END);
SELECT ALL * FROM rt1, t0, rt0, rt2 WHERE (ABS(DISTINCT ((0.04578259590073208) NOT NULL))) ORDER BY (CAST(rt2.c3 AS NUMERIC) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((0.04578259590073208) NOT NULL))) IS TRUE)  as count FROM rt1, t0, rt0, rt2 ORDER BY (CAST(rt2.c3 AS NUMERIC) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0, rt2 WHERE (ABS(DISTINCT ((0.04578259590073208) NOT NULL))) ORDER BY (CAST(rt2.c3 AS NUMERIC) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((0.04578259590073208) NOT NULL))) IS TRUE)  as count FROM rt1, t0, rt0, rt2 ORDER BY (CAST(rt2.c3 AS NUMERIC) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0, rt2 WHERE (ABS(DISTINCT ((0.04578259590073208) NOT NULL))) ORDER BY (CAST(rt2.c3 AS NUMERIC) IN ()) DESC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c3 THEN NULL END RIGHT OUTER JOIN rt1 ON (((+ (rt0.c2)))<((((rt0.c3))>=((rt0.c2))))) INNER JOIN rt0 ON ((rt0.c1)>>(-2021502350)) WHERE (((((rt1.c2)<<(rt0.c3)))<>(0.7072887698226943))) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<<(rt0.c3)))<>(0.7072887698226943))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c3 THEN NULL END RIGHT OUTER JOIN rt1 ON (((+ (rt0.c2)))<((((rt0.c3))>=((rt0.c2))))) INNER JOIN rt0 ON ((rt0.c1)>>(-2021502350)) ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c3 THEN NULL END RIGHT OUTER JOIN rt1 ON (((+ (rt0.c2)))<((((rt0.c3))>=((rt0.c2))))) INNER JOIN rt0 ON ((rt0.c1)>>(-2021502350)) WHERE (((((rt1.c2)<<(rt0.c3)))<>(0.7072887698226943))) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<<(rt0.c3)))<>(0.7072887698226943))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c3 THEN NULL END RIGHT OUTER JOIN rt1 ON (((+ (rt0.c2)))<((((rt0.c3))>=((rt0.c2))))) INNER JOIN rt0 ON ((rt0.c1)>>(-2021502350)) ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)%(vt0.c1))) IS TRUE)) ORDER BY (((vt0.c1 IN (vt0.c1, vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN (vt0.c1, vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)%(vt0.c1))) IS TRUE)) ORDER BY (((vt0.c1 IN (vt0.c1, vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN (vt0.c1, vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)%(vt0.c1))) IS TRUE)) ORDER BY (((vt0.c1 IN (vt0.c1, vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT * FROM vt0 WHERE ('6658262') ORDER BY vt0.c0 ASC  NULLS LAST, ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))), vt0.c0;
SELECT SUM(count) FROM (SELECT (('6658262') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))), vt0.c0);
SELECT * FROM vt0 WHERE ('6658262') ORDER BY vt0.c0 ASC  NULLS LAST, ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))), vt0.c0;
SELECT SUM(count) FROM (SELECT (('6658262') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))), vt0.c0);
SELECT * FROM vt0 WHERE ('6658262') ORDER BY vt0.c0 ASC  NULLS LAST, ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))), vt0.c0;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM COLLATE NOCASE) ORDER BY TYPEOF(x'') COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(x'') COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM COLLATE NOCASE) ORDER BY TYPEOF(x'') COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(x'') COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM COLLATE NOCASE) ORDER BY TYPEOF(x'') COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt2 WHERE ((((rt2.c1, rt2.c2, rt2.c2)) NOT BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c0, rt2.c2, rt2.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c1, rt2.c2, rt2.c2)) NOT BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c0, rt2.c2, rt2.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((((rt2.c1, rt2.c2, rt2.c2)) NOT BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c0, rt2.c2, rt2.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c1, rt2.c2, rt2.c2)) NOT BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c0, rt2.c2, rt2.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE ((((rt2.c1, rt2.c2, rt2.c2)) NOT BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c0, rt2.c2, rt2.c1))) COLLATE RTRIM);
SELECT * FROM t0, vt0, rt2 WHERE (((rt2.c0) NOTNULL)) ORDER BY (+ (((t0.c80) BETWEEN (rt2.c2) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt2.c0) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt2 ORDER BY (+ (((t0.c80) BETWEEN (rt2.c2) AND (vt0.c0)))) ASC);
SELECT * FROM t0, vt0, rt2 WHERE (((rt2.c0) NOTNULL)) ORDER BY (+ (((t0.c80) BETWEEN (rt2.c2) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt2.c0) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt2 ORDER BY (+ (((t0.c80) BETWEEN (rt2.c2) AND (vt0.c0)))) ASC);
SELECT * FROM t0, vt0, rt2 WHERE (((rt2.c0) NOTNULL)) ORDER BY (+ (((t0.c80) BETWEEN (rt2.c2) AND (vt0.c0)))) ASC;
SELECT ALL * FROM vt0, rt1, rt2, t0 WHERE (CAST((((0.5187069929426803))>=((vt0.c0))) AS NUMERIC)) ORDER BY CASE ((rt2.c1) NOT NULL)  WHEN CAST('뺣r' AS BLOB) THEN x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((0.5187069929426803))>=((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, rt2, t0 ORDER BY CASE ((rt2.c1) NOT NULL)  WHEN CAST('뺣r' AS BLOB) THEN x'' END  NULLS LAST);
SELECT ALL * FROM vt0, rt1, rt2, t0 WHERE (CAST((((0.5187069929426803))>=((vt0.c0))) AS NUMERIC)) ORDER BY CASE ((rt2.c1) NOT NULL)  WHEN CAST('뺣r' AS BLOB) THEN x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((0.5187069929426803))>=((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, rt2, t0 ORDER BY CASE ((rt2.c1) NOT NULL)  WHEN CAST('뺣r' AS BLOB) THEN x'' END  NULLS LAST);
SELECT ALL * FROM vt0, rt1, rt2, t0 WHERE (CAST((((0.5187069929426803))>=((vt0.c0))) AS NUMERIC)) ORDER BY CASE ((rt2.c1) NOT NULL)  WHEN CAST('뺣r' AS BLOB) THEN x'' END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(IFNULL(DISTINCT x'', rt0.c3) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT x'', rt0.c3) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(IFNULL(DISTINCT x'', rt0.c3) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT x'', rt0.c3) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(IFNULL(DISTINCT x'', rt0.c3) AS NUMERIC));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt2 ON (('-107138074') IS TRUE) CROSS JOIN rt0 ON ((((NOT ('wo꿍C{G}'))))>((x''))) WHERE (((SQLITE_VERSION())<<((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION())<<((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt2 ON (('-107138074') IS TRUE) CROSS JOIN rt0 ON ((((NOT ('wo꿍C{G}'))))>((x''))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt2 ON (('-107138074') IS TRUE) CROSS JOIN rt0 ON ((((NOT ('wo꿍C{G}'))))>((x''))) WHERE (((SQLITE_VERSION())<<((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION())<<((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt2 ON (('-107138074') IS TRUE) CROSS JOIN rt0 ON ((((NOT ('wo꿍C{G}'))))>((x''))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt2 ON (('-107138074') IS TRUE) CROSS JOIN rt0 ON ((((NOT ('wo꿍C{G}'))))>((x''))) WHERE (((SQLITE_VERSION())<<((rt0.c3 IN ()))));
SELECT COUNT(*) FROM t0, rt0, vt0 INNER JOIN rt1 ON (((rt0.c0, rt2.c3, rt0.c0))=((rt0.c3, rt1.c0, rt1.c1))) COLLATE RTRIM LEFT OUTER JOIN rt2 ON CAST((rt0.c2 IN ()) AS BLOB) WHERE (((rt2.c1)<>(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1)!=(NULL)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0 INNER JOIN rt1 ON (((rt0.c0, rt2.c3, rt0.c0))=((rt0.c3, rt1.c0, rt1.c1))) COLLATE RTRIM LEFT OUTER JOIN rt2 ON CAST((rt0.c2 IN ()) AS BLOB));
SELECT COUNT(*) FROM t0, rt0, vt0 INNER JOIN rt1 ON (((rt0.c0, rt2.c3, rt0.c0))=((rt0.c3, rt1.c0, rt1.c1))) COLLATE RTRIM LEFT OUTER JOIN rt2 ON CAST((rt0.c2 IN ()) AS BLOB) WHERE (((rt2.c1)<>(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1)!=(NULL)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0 INNER JOIN rt1 ON (((rt0.c0, rt2.c3, rt0.c0))=((rt0.c3, rt1.c0, rt1.c1))) COLLATE RTRIM LEFT OUTER JOIN rt2 ON CAST((rt0.c2 IN ()) AS BLOB));
SELECT COUNT(*) FROM t0, rt0, vt0 INNER JOIN rt1 ON (((rt0.c0, rt2.c3, rt0.c0))=((rt0.c3, rt1.c0, rt1.c1))) COLLATE RTRIM LEFT OUTER JOIN rt2 ON CAST((rt0.c2 IN ()) AS BLOB) WHERE (((rt2.c1)<>(NULL)) COLLATE BINARY);
SELECT COUNT(*) FROM rt2 WHERE ((- ((((rt2.c2)) BETWEEN ((rt2.c2)) AND ((rt2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt2.c2)) BETWEEN ((rt2.c2)) AND ((rt2.c0)))))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE ((- ((((rt2.c2)) BETWEEN ((rt2.c2)) AND ((rt2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt2.c2)) BETWEEN ((rt2.c2)) AND ((rt2.c0)))))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE ((- ((((rt2.c2)) BETWEEN ((rt2.c2)) AND ((rt2.c0))))));
SELECT ALL * FROM vt0, t0, rt0, rt1, rt2 WHERE (((((((t0.c80)IS NOT(t0.c33)))OR(CAST(rt0.c2 AS BLOB))))OR(TYPEOF(rt0.c3)))) ORDER BY CASE WHEN 'p<' THEN CAST(vt0.c0 AS TEXT) ELSE t0.c80 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c80)IS NOT(t0.c33)))OR(CAST(rt0.c2 AS BLOB))))OR(TYPEOF(rt0.c3)))) IS TRUE)  as count FROM vt0, t0, rt0, rt1, rt2 ORDER BY CASE WHEN 'p<' THEN CAST(vt0.c0 AS TEXT) ELSE t0.c80 COLLATE BINARY END DESC);
SELECT ALL * FROM vt0, t0, rt0, rt1, rt2 WHERE (((((((t0.c80)IS NOT(t0.c33)))OR(CAST(rt0.c2 AS BLOB))))OR(TYPEOF(rt0.c3)))) ORDER BY CASE WHEN 'p<' THEN CAST(vt0.c0 AS TEXT) ELSE t0.c80 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c80)IS NOT(t0.c33)))OR(CAST(rt0.c2 AS BLOB))))OR(TYPEOF(rt0.c3)))) IS TRUE)  as count FROM vt0, t0, rt0, rt1, rt2 ORDER BY CASE WHEN 'p<' THEN CAST(vt0.c0 AS TEXT) ELSE t0.c80 COLLATE BINARY END DESC);
SELECT ALL * FROM vt0, t0, rt0, rt1, rt2 WHERE (((((((t0.c80)IS NOT(t0.c33)))OR(CAST(rt0.c2 AS BLOB))))OR(TYPEOF(rt0.c3)))) ORDER BY CASE WHEN 'p<' THEN CAST(vt0.c0 AS TEXT) ELSE t0.c80 COLLATE BINARY END DESC;
SELECT ALL COUNT(*) FROM rt2 FULL OUTER JOIN t0 ON (((t0.c33)) BETWEEN ((((((rt2.c2)AND(t0.c80)))AND(rt2.c1)))) AND ((rt2.c1))) WHERE ('-1086743566') ORDER BY (rt2.c3 IN ()) ASC, t0.c80;
SELECT SUM(count) FROM (SELECT (('-1086743566') IS TRUE)  as count FROM rt2 FULL OUTER JOIN t0 ON (((t0.c33)) BETWEEN ((((((rt2.c2)AND(t0.c80)))AND(rt2.c1)))) AND ((rt2.c1))) ORDER BY (rt2.c3 IN ()) ASC, t0.c80);
SELECT ALL COUNT(*) FROM rt2 FULL OUTER JOIN t0 ON (((t0.c33)) BETWEEN ((((((rt2.c2)AND(t0.c80)))AND(rt2.c1)))) AND ((rt2.c1))) WHERE ('-1086743566') ORDER BY (rt2.c3 IN ()) ASC, t0.c80;
SELECT SUM(count) FROM (SELECT (('-1086743566') IS TRUE)  as count FROM rt2 FULL OUTER JOIN t0 ON (((t0.c33)) BETWEEN ((((((rt2.c2)AND(t0.c80)))AND(rt2.c1)))) AND ((rt2.c1))) ORDER BY (rt2.c3 IN ()) ASC, t0.c80);
SELECT ALL COUNT(*) FROM rt2 FULL OUTER JOIN t0 ON (((t0.c33)) BETWEEN ((((((rt2.c2)AND(t0.c80)))AND(rt2.c1)))) AND ((rt2.c1))) WHERE ('-1086743566') ORDER BY (rt2.c3 IN ()) ASC, t0.c80;
SELECT COUNT(*) FROM t0, rt1, rt0, vt0, rt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt1, rt0, vt0, rt2);
SELECT COUNT(*) FROM t0, rt1, rt0, vt0, rt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt1, rt0, vt0, rt2);
SELECT COUNT(*) FROM t0, rt1, rt0, vt0, rt2 WHERE (x'');
SELECT * FROM t0, rt1, vt0, rt0, rt2 WHERE ((rt1.c2 IN ((('-812923479') BETWEEN (rt2.c2) AND (rt1.c1))))) ORDER BY (((NULL)) NOT BETWEEN ((rt2.c3)) AND ((rt2.c2))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ((('-812923479') BETWEEN (rt2.c2) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, vt0, rt0, rt2 ORDER BY (((NULL)) NOT BETWEEN ((rt2.c3)) AND ((rt2.c2))) COLLATE RTRIM);
SELECT * FROM t0, rt1, vt0, rt0, rt2 WHERE ((rt1.c2 IN ((('-812923479') BETWEEN (rt2.c2) AND (rt1.c1))))) ORDER BY (((NULL)) NOT BETWEEN ((rt2.c3)) AND ((rt2.c2))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ((('-812923479') BETWEEN (rt2.c2) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, vt0, rt0, rt2 ORDER BY (((NULL)) NOT BETWEEN ((rt2.c3)) AND ((rt2.c2))) COLLATE RTRIM);
SELECT * FROM t0, rt1, vt0, rt0, rt2 WHERE ((rt1.c2 IN ((('-812923479') BETWEEN (rt2.c2) AND (rt1.c1))))) ORDER BY (((NULL)) NOT BETWEEN ((rt2.c3)) AND ((rt2.c2))) COLLATE RTRIM;
SELECT * FROM rt0, rt1, rt2, t0 FULL OUTER JOIN vt0 ON (((- (rt2.c3))) NOTNULL) WHERE (((((rt2.c3) IS FALSE))GLOB(rt2.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3) IS FALSE))GLOB(rt2.c1))) IS TRUE)  as count FROM rt0, rt1, rt2, t0 FULL OUTER JOIN vt0 ON (((- (rt2.c3))) NOTNULL));
SELECT * FROM rt0, rt1, rt2, t0 FULL OUTER JOIN vt0 ON (((- (rt2.c3))) NOTNULL) WHERE (((((rt2.c3) IS FALSE))GLOB(rt2.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3) IS FALSE))GLOB(rt2.c1))) IS TRUE)  as count FROM rt0, rt1, rt2, t0 FULL OUTER JOIN vt0 ON (((- (rt2.c3))) NOTNULL));
SELECT * FROM rt0, rt1, rt2, t0 FULL OUTER JOIN vt0 ON (((- (rt2.c3))) NOTNULL) WHERE (((((rt2.c3) IS FALSE))GLOB(rt2.c1)));
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON rt0.c1 WHERE (CASE ((t0.c80)GLOB(0.31533994196465964))  WHEN CASE t0.c33  WHEN t0.c80 THEN rt0.c0 END THEN ((t0.c80)<(t0.c80)) WHEN (((t0.c80))<((t0.c33))) THEN t0.c33 WHEN ((t0.c80) IS TRUE) THEN ((rt0.c2)>>(rt0.c2)) END) ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(QUOTE(t0.c33))))AND(t0.c80 COLLATE BINARY)))OR((- (rt0.c1)))))OR(rt0.c3));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c80)GLOB(0.31533994196465964))  WHEN CASE t0.c33  WHEN t0.c80 THEN rt0.c0 END THEN ((t0.c80)<(t0.c80)) WHEN (((t0.c80))<((t0.c33))) THEN t0.c33 WHEN ((t0.c80) IS TRUE) THEN ((rt0.c2)>>(rt0.c2)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(QUOTE(t0.c33))))AND(t0.c80 COLLATE BINARY)))OR((- (rt0.c1)))))OR(rt0.c3)));
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON rt0.c1 WHERE (CASE ((t0.c80)GLOB(0.31533994196465964))  WHEN CASE t0.c33  WHEN t0.c80 THEN rt0.c0 END THEN ((t0.c80)<(t0.c80)) WHEN (((t0.c80))<((t0.c33))) THEN t0.c33 WHEN ((t0.c80) IS TRUE) THEN ((rt0.c2)>>(rt0.c2)) END) ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(QUOTE(t0.c33))))AND(t0.c80 COLLATE BINARY)))OR((- (rt0.c1)))))OR(rt0.c3));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c80)GLOB(0.31533994196465964))  WHEN CASE t0.c33  WHEN t0.c80 THEN rt0.c0 END THEN ((t0.c80)<(t0.c80)) WHEN (((t0.c80))<((t0.c33))) THEN t0.c33 WHEN ((t0.c80) IS TRUE) THEN ((rt0.c2)>>(rt0.c2)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(QUOTE(t0.c33))))AND(t0.c80 COLLATE BINARY)))OR((- (rt0.c1)))))OR(rt0.c3)));
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON rt0.c1 WHERE (CASE ((t0.c80)GLOB(0.31533994196465964))  WHEN CASE t0.c33  WHEN t0.c80 THEN rt0.c0 END THEN ((t0.c80)<(t0.c80)) WHEN (((t0.c80))<((t0.c33))) THEN t0.c33 WHEN ((t0.c80) IS TRUE) THEN ((rt0.c2)>>(rt0.c2)) END) ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(QUOTE(t0.c33))))AND(t0.c80 COLLATE BINARY)))OR((- (rt0.c1)))))OR(rt0.c3));
SELECT ALL * FROM vt0, rt1, rt2, t0 WHERE ('-996072875') ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL (('-996072875') IS TRUE)  as count FROM vt0, rt1, rt2, t0 ORDER BY TOTAL_CHANGES());
SELECT ALL * FROM vt0, rt1, rt2, t0 WHERE ('-996072875') ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL (('-996072875') IS TRUE)  as count FROM vt0, rt1, rt2, t0 ORDER BY TOTAL_CHANGES());
SELECT ALL * FROM vt0, rt1, rt2, t0 WHERE ('-996072875') ORDER BY TOTAL_CHANGES();
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((rt2.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt2.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((rt2.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt2.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2 WHERE (((rt2.c2 IN ()) IN ()));
SELECT ALL * FROM rt1 WHERE (CASE (- (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN 0.3943760970913536 END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN 0.3943760970913536 END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (- (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN 0.3943760970913536 END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN 0.3943760970913536 END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (- (rt1.c1))  WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN 0.3943760970913536 END);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)=(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)==(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)=(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)==(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)=(rt1.c0)) IN ()));
SELECT * FROM rt2, rt1, rt0, t0, vt0 WHERE ((NOT (-8.12923479E8)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (-8.12923479E8))) IS TRUE)  as count FROM rt2, rt1, rt0, t0, vt0);
SELECT * FROM rt2, rt1, rt0, t0, vt0 WHERE ((NOT (-8.12923479E8)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (-8.12923479E8))) IS TRUE)  as count FROM rt2, rt1, rt0, t0, vt0);
SELECT * FROM rt2, rt1, rt0, t0, vt0 WHERE ((NOT (-8.12923479E8)));
SELECT ALL * FROM t0, rt0, rt2 WHERE ((((NULL IN ()))|((~ (rt2.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt2.c1)))=((~ (rt2.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))|((~ (rt2.c0))))) IS TRUE)  as count FROM t0, rt0, rt2 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt2.c1)))==((~ (rt2.c3)))) DESC);
SELECT ALL * FROM t0, rt0, rt2 WHERE ((((NULL IN ()))|((~ (rt2.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt2.c1)))=((~ (rt2.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))|((~ (rt2.c0))))) IS TRUE)  as count FROM t0, rt0, rt2 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt2.c1)))==((~ (rt2.c3)))) DESC);
SELECT ALL * FROM t0, rt0, rt2 WHERE ((((NULL IN ()))|((~ (rt2.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt2.c1)))=((~ (rt2.c3)))) DESC;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ()));
SELECT * FROM rt0, rt1 LEFT OUTER JOIN rt2 ON rt2.c3 RIGHT OUTER JOIN t0 ON ((((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(x'')))OR(t0.c80))) NOT BETWEEN (TYPEOF(DISTINCT -1829578279)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt2.c0)))) LEFT OUTER JOIN vt0 ON (((((rt2.c0, rt0.c2, rt0.c0, rt0.c2, rt2.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c1)) AND ((rt2.c2, vt0.c1, vt0.c0, t0.c33, rt0.c1)))) IS FALSE) WHERE (TYPEOF(rt0.c1) COLLATE RTRIM) ORDER BY (((((((((((('1973359386')AND(rt0.c0)))OR(rt0.c0)))AND((rt1.c0 IN ()))))OR(load_extension(rt2.c2))))OR((((rt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c80))))))AND((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN rt2 ON rt2.c3 RIGHT OUTER JOIN t0 ON ((((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(x'')))OR(t0.c80))) NOT BETWEEN (TYPEOF(DISTINCT -1829578279)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt2.c0)))) LEFT OUTER JOIN vt0 ON (((((rt2.c0, rt0.c2, rt0.c0, rt0.c2, rt2.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c1)) AND ((rt2.c2, vt0.c1, vt0.c0, t0.c33, rt0.c1)))) IS FALSE) ORDER BY (((((((((((('1973359386')AND(rt0.c0)))OR(rt0.c0)))AND((rt1.c0 IN ()))))OR(load_extension(rt2.c2))))OR((((rt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c80))))))AND((+ (rt0.c2)))));
SELECT * FROM rt0, rt1 LEFT OUTER JOIN rt2 ON rt2.c3 RIGHT OUTER JOIN t0 ON ((((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(x'')))OR(t0.c80))) NOT BETWEEN (TYPEOF(DISTINCT -1829578279)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt2.c0)))) LEFT OUTER JOIN vt0 ON (((((rt2.c0, rt0.c2, rt0.c0, rt0.c2, rt2.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c1)) AND ((rt2.c2, vt0.c1, vt0.c0, t0.c33, rt0.c1)))) IS FALSE) WHERE (TYPEOF(rt0.c1) COLLATE RTRIM) ORDER BY (((((((((((('1973359386')AND(rt0.c0)))OR(rt0.c0)))AND((rt1.c0 IN ()))))OR(load_extension(rt2.c2))))OR((((rt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c80))))))AND((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN rt2 ON rt2.c3 RIGHT OUTER JOIN t0 ON ((((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(x'')))OR(t0.c80))) NOT BETWEEN (TYPEOF(DISTINCT -1829578279)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt2.c0)))) LEFT OUTER JOIN vt0 ON (((((rt2.c0, rt0.c2, rt0.c0, rt0.c2, rt2.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c1)) AND ((rt2.c2, vt0.c1, vt0.c0, t0.c33, rt0.c1)))) IS FALSE) ORDER BY (((((((((((('1973359386')AND(rt0.c0)))OR(rt0.c0)))AND((rt1.c0 IN ()))))OR(load_extension(rt2.c2))))OR((((rt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c80))))))AND((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1, rt2 WHERE ((((rt0.c3, NULL, rt0.c2)) BETWEEN ((-1.929744183E9, ((rt2.c2)>(rt2.c0)), rt0.c0 COLLATE NOCASE)) AND (((rt2.c2 IN (rt0.c3, rt2.c0, rt0.c0)), ((((((((rt2.c3)AND(rt2.c3)))OR(t0.c80)))AND(t0.c33)))OR(rt1.c1)), TRIM(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, NULL, rt0.c2)) BETWEEN ((-1.929744183E9, ((rt2.c2)>(rt2.c0)), rt0.c0 COLLATE NOCASE)) AND (((rt2.c2 IN (rt0.c3, rt2.c0, rt0.c0)), ((((((((rt2.c3)AND(rt2.c3)))OR(t0.c80)))AND(t0.c33)))OR(rt1.c1)), TRIM(rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1, rt2 WHERE ((((rt0.c3, NULL, rt0.c2)) BETWEEN ((-1.929744183E9, ((rt2.c2)>(rt2.c0)), rt0.c0 COLLATE NOCASE)) AND (((rt2.c2 IN (rt0.c3, rt2.c0, rt0.c0)), ((((((((rt2.c3)AND(rt2.c3)))OR(t0.c80)))AND(t0.c33)))OR(rt1.c1)), TRIM(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, NULL, rt0.c2)) BETWEEN ((-1.929744183E9, ((rt2.c2)>(rt2.c0)), rt0.c0 COLLATE NOCASE)) AND (((rt2.c2 IN (rt0.c3, rt2.c0, rt0.c0)), ((((((((rt2.c3)AND(rt2.c3)))OR(t0.c80)))AND(t0.c33)))OR(rt1.c1)), TRIM(rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, rt1, rt2);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1, rt2 WHERE ((((rt0.c3, NULL, rt0.c2)) BETWEEN ((-1.929744183E9, ((rt2.c2)>(rt2.c0)), rt0.c0 COLLATE NOCASE)) AND (((rt2.c2 IN (rt0.c3, rt2.c0, rt0.c0)), ((((((((rt2.c3)AND(rt2.c3)))OR(t0.c80)))AND(t0.c33)))OR(rt1.c1)), TRIM(rt0.c0)))));
SELECT * FROM rt0, rt2, vt0 WHERE (((((NULL) BETWEEN (rt2.c3) AND (rt2.c2))) BETWEEN ('H#w') AND (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (rt2.c3) AND (rt2.c2))) BETWEEN ('H#w') AND (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, rt2, vt0);
SELECT * FROM rt0, rt2, vt0 WHERE (((((NULL) BETWEEN (rt2.c3) AND (rt2.c2))) BETWEEN ('H#w') AND (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (rt2.c3) AND (rt2.c2))) BETWEEN ('H#w') AND (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, rt2, vt0);
SELECT * FROM rt0, rt2, vt0 WHERE (((((NULL) BETWEEN (rt2.c3) AND (rt2.c2))) BETWEEN ('H#w') AND (CAST(NULL AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE '209753832'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END AS INTEGER)) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)>=((((rt0.c1))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE '209753832'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)>=((((rt0.c1))<=((rt0.c2))))) ASC);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE '209753832'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END AS INTEGER)) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)>=((((rt0.c1))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE '209753832'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)>=((((rt0.c1))<=((rt0.c2))))) ASC);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE '209753832'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END AS INTEGER)) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)>=((((rt0.c1))<=((rt0.c2))))) ASC;
SELECT * FROM vt0, rt2 INNER JOIN t0 ON ((((0.07176139545446236))>=((rt0.c2))) IN (((((rt2.c1)OR(rt2.c1)))OR(rt0.c2)))) LEFT OUTER JOIN rt0 ON json_insert(MIN(rt0.c2, rt2.c0, t0.c80, t0.c80), NULL, (((t0.c80)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) WHERE ((1.11714779E8 IN ())) ORDER BY TRIM(DISTINCT ((vt0.c1)>>(rt0.c0)), t0.c80) ASC;
SELECT SUM(count) FROM (SELECT ALL (((1.11714779E8 IN ())) IS TRUE)  as count FROM vt0, rt2 INNER JOIN t0 ON ((((0.07176139545446236))>=((rt0.c2))) IN (((((rt2.c1)OR(rt2.c1)))OR(rt0.c2)))) LEFT OUTER JOIN rt0 ON json_insert(MIN(rt0.c2, rt2.c0, t0.c80, t0.c80), NULL, (((t0.c80)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) ORDER BY TRIM(DISTINCT ((vt0.c1)>>(rt0.c0)), t0.c80) ASC);
SELECT * FROM vt0, rt2 INNER JOIN t0 ON ((((0.07176139545446236))>=((rt0.c2))) IN (((((rt2.c1)OR(rt2.c1)))OR(rt0.c2)))) LEFT OUTER JOIN rt0 ON json_insert(MIN(rt0.c2, rt2.c0, t0.c80, t0.c80), NULL, (((t0.c80)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) WHERE ((1.11714779E8 IN ())) ORDER BY TRIM(DISTINCT ((vt0.c1)>>(rt0.c0)), t0.c80) ASC;
SELECT SUM(count) FROM (SELECT ALL (((1.11714779E8 IN ())) IS TRUE)  as count FROM vt0, rt2 INNER JOIN t0 ON ((((0.07176139545446236))>=((rt0.c2))) IN (((((rt2.c1)OR(rt2.c1)))OR(rt0.c2)))) LEFT OUTER JOIN rt0 ON json_insert(MIN(rt0.c2, rt2.c0, t0.c80, t0.c80), NULL, (((t0.c80)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) ORDER BY TRIM(DISTINCT ((vt0.c1)>>(rt0.c0)), t0.c80) ASC);
SELECT * FROM vt0, rt2 INNER JOIN t0 ON ((((0.07176139545446236))>=((rt0.c2))) IN (((((rt2.c1)OR(rt2.c1)))OR(rt0.c2)))) LEFT OUTER JOIN rt0 ON json_insert(MIN(rt0.c2, rt2.c0, t0.c80, t0.c80), NULL, (((t0.c80)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) WHERE ((1.11714779E8 IN ())) ORDER BY TRIM(DISTINCT ((vt0.c1)>>(rt0.c0)), t0.c80) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((~ (rt0.c2))))>=((rt0.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2))))>=((rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((~ (rt0.c2))))>=((rt0.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2))))>=((rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((~ (rt0.c2))))>=((rt0.c3 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt2 WHERE (CAST(rt2.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt2.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (CAST(rt2.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt2.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (CAST(rt2.c0 AS REAL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (CAST(DATETIME(t0.c80, rt1.c0, rt1.c1) AS INTEGER)) ORDER BY (((-2.54648891E8))=((((t0.c33) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC, 0.1580811927271083 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(DATETIME(t0.c80, rt1.c0, rt1.c1) AS INTEGER)) IS TRUE)  as count FROM rt1 NATURAL JOIN t0 ORDER BY (((-2.54648891E8))=((((t0.c33) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC, 0.1580811927271083 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (CAST(DATETIME(t0.c80, rt1.c0, rt1.c1) AS INTEGER)) ORDER BY (((-2.54648891E8))=((((t0.c33) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC, 0.1580811927271083 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(DATETIME(t0.c80, rt1.c0, rt1.c1) AS INTEGER)) IS TRUE)  as count FROM rt1 NATURAL JOIN t0 ORDER BY (((-2.54648891E8))=((((t0.c33) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC, 0.1580811927271083 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (CAST(DATETIME(t0.c80, rt1.c0, rt1.c1) AS INTEGER)) ORDER BY (((-2.54648891E8))=((((t0.c33) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC, 0.1580811927271083 COLLATE BINARY  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((7.64952697E8))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((7.64952697E8)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((7.64952697E8))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((7.64952697E8)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((7.64952697E8))));
SELECT ALL * FROM t0, rt1 WHERE (((CAST(t0.c33 AS REAL))+((rt1.c0 IN ())))) ORDER BY CASE CAST(t0.c33 AS NUMERIC)  WHEN NULL COLLATE BINARY THEN (((rt1.c2, rt1.c2, rt1.c0)) BETWEEN ((1018793242, t0.c80, t0.c33)) AND ((t0.c33, rt1.c1, rt1.c0))) END DESC, rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c33 AS REAL))+((rt1.c0 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE CAST(t0.c33 AS NUMERIC)  WHEN NULL COLLATE BINARY THEN (((rt1.c2, rt1.c2, rt1.c0)) BETWEEN ((1018793242, t0.c80, t0.c33)) AND ((t0.c33, rt1.c1, rt1.c0))) END DESC, rt1.c1 ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (((CAST(t0.c33 AS REAL))+((rt1.c0 IN ())))) ORDER BY CASE CAST(t0.c33 AS NUMERIC)  WHEN NULL COLLATE BINARY THEN (((rt1.c2, rt1.c2, rt1.c0)) BETWEEN ((1018793242, t0.c80, t0.c33)) AND ((t0.c33, rt1.c1, rt1.c0))) END DESC, rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c33 AS REAL))+((rt1.c0 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE CAST(t0.c33 AS NUMERIC)  WHEN NULL COLLATE BINARY THEN (((rt1.c2, rt1.c2, rt1.c0)) BETWEEN ((1018793242, t0.c80, t0.c33)) AND ((t0.c33, rt1.c1, rt1.c0))) END DESC, rt1.c1 ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (((CAST(t0.c33 AS REAL))+((rt1.c0 IN ())))) ORDER BY CASE CAST(t0.c33 AS NUMERIC)  WHEN NULL COLLATE BINARY THEN (((rt1.c2, rt1.c2, rt1.c0)) BETWEEN ((1018793242, t0.c80, t0.c33)) AND ((t0.c33, rt1.c1, rt1.c0))) END DESC, rt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (t0.c80) ORDER BY ((((t0.c33)>>(t0.c33)))LIKE((+ (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c80) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c33)>>(t0.c33)))LIKE((+ (rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (t0.c80) ORDER BY ((((t0.c33)>>(t0.c33)))LIKE((+ (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c80) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c33)>>(t0.c33)))LIKE((+ (rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (t0.c80) ORDER BY ((((t0.c33)>>(t0.c33)))LIKE((+ (rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt2, rt0, vt0 NOT INDEXED CROSS JOIN t0 ON CAST(((t0.c33)||(0.7462508549098151)) AS REAL) WHERE (((CAST(vt0.c0 AS INTEGER))<(ABS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))<(ABS(rt0.c3)))) IS TRUE)  as count FROM rt2, rt0, vt0 CROSS JOIN t0 ON CAST(((t0.c33)||(0.7462508549098151)) AS REAL));
SELECT * FROM rt2, rt0, vt0 NOT INDEXED CROSS JOIN t0 ON CAST(((t0.c33)||(0.7462508549098151)) AS REAL) WHERE (((CAST(vt0.c0 AS INTEGER))<(ABS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))<(ABS(rt0.c3)))) IS TRUE)  as count FROM rt2, rt0, vt0 CROSS JOIN t0 ON CAST(((t0.c33)||(0.7462508549098151)) AS REAL));
SELECT * FROM rt2, rt0, vt0 NOT INDEXED CROSS JOIN t0 ON CAST(((t0.c33)||(0.7462508549098151)) AS REAL) WHERE (((CAST(vt0.c0 AS INTEGER))<(ABS(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(((x'') NOT BETWEEN (NULL) AND (t0.c80)) AS INTEGER) WHERE ((- (CAST(0.06155179827781554 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(0.06155179827781554 AS TEXT)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(((x'') NOT BETWEEN (NULL) AND (t0.c80)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(((x'') NOT BETWEEN (NULL) AND (t0.c80)) AS INTEGER) WHERE ((- (CAST(0.06155179827781554 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(0.06155179827781554 AS TEXT)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(((x'') NOT BETWEEN (NULL) AND (t0.c80)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(((x'') NOT BETWEEN (NULL) AND (t0.c80)) AS INTEGER) WHERE ((- (CAST(0.06155179827781554 AS TEXT))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT ALL * FROM rt2, rt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (rt1.c2);
SELECT ALL * FROM rt2, rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))LIKE(((rt2.c3) NOT NULL))) CROSS JOIN t0 ON rt1.c1 INNER JOIN rt1 ON ((((((((((((((((1354160352)AND(rt0.c3)))AND(t0.c33)))AND(rt1.c0)))OR(rt2.c2)))AND(t0.c80)))AND(rt2.c2)))AND((((t0.c80)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt2.c0 WHEN rt2.c3 THEN rt2.c2 END)) WHERE (CAST(((-497593226)*(rt2.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((-497593226)*(rt2.c1)) AS INTEGER)) IS TRUE)  as count FROM rt2, rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))LIKE(((rt2.c3) NOT NULL))) CROSS JOIN t0 ON rt1.c1 INNER JOIN rt1 ON ((((((((((((((((1354160352)AND(rt0.c3)))AND(t0.c33)))AND(rt1.c0)))OR(rt2.c2)))AND(t0.c80)))AND(rt2.c2)))AND((((t0.c80)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt2.c0 WHEN rt2.c3 THEN rt2.c2 END)));
SELECT ALL * FROM rt2, rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))LIKE(((rt2.c3) NOT NULL))) CROSS JOIN t0 ON rt1.c1 INNER JOIN rt1 ON ((((((((((((((((1354160352)AND(rt0.c3)))AND(t0.c33)))AND(rt1.c0)))OR(rt2.c2)))AND(t0.c80)))AND(rt2.c2)))AND((((t0.c80)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt2.c0 WHEN rt2.c3 THEN rt2.c2 END)) WHERE (CAST(((-497593226)*(rt2.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((-497593226)*(rt2.c1)) AS INTEGER)) IS TRUE)  as count FROM rt2, rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE))LIKE(((rt2.c3) NOT NULL))) CROSS JOIN t0 ON rt1.c1 INNER JOIN rt1 ON ((((((((((((((((1354160352)AND(rt0.c3)))AND(t0.c33)))AND(rt1.c0)))OR(rt2.c2)))AND(t0.c80)))AND(rt2.c2)))AND((((t0.c80)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt2.c0 WHEN rt2.c3 THEN rt2.c2 END)));
SELECT ALL * FROM rt0, vt0, t0, rt1, rt2 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, rt1, rt2);
SELECT ALL * FROM rt0, vt0, t0, rt1, rt2 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, rt1, rt2);
SELECT ALL * FROM rt0, vt0, t0, rt1, rt2 WHERE (((rt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, rt2, rt1 WHERE ((+ (CAST(rt2.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt2.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt2, rt1 WHERE ((+ (CAST(rt2.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt2.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt2, rt1 WHERE ((+ (CAST(rt2.c3 AS NUMERIC))));
SELECT * FROM rt1, rt2 FULL OUTER JOIN vt0 ON (rt2.c1 IN ()) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE (((NULL) BETWEEN ((vt0.c1 IN (''))) AND ((rt2.c0 IN (t0.c33))))) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN 0xffffffff841d0b0c END  NULLS LAST, '1973359386'  NULLS LAST, CASE WHEN rt2.c3 THEN ((((vt0.c0)AND(t0.c80)))OR(t0.c33)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((vt0.c1 IN (''))) AND ((rt2.c0 IN (t0.c33))))) IS TRUE)  as count FROM rt1, rt2 FULL OUTER JOIN vt0 ON (rt2.c1 IN ()) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (NOT (vt0.c1 COLLATE BINARY)) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN 0Xffffffff841d0b0c END  NULLS LAST, '1973359386'  NULLS LAST, CASE WHEN rt2.c3 THEN ((((vt0.c0)AND(t0.c80)))OR(t0.c33)) END DESC  NULLS FIRST);
SELECT * FROM rt1, rt2 FULL OUTER JOIN vt0 ON (rt2.c1 IN ()) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE (((NULL) BETWEEN ((vt0.c1 IN (''))) AND ((rt2.c0 IN (t0.c33))))) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN 0xffffffff841d0b0c END  NULLS LAST, '1973359386'  NULLS LAST, CASE WHEN rt2.c3 THEN ((((vt0.c0)AND(t0.c80)))OR(t0.c33)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((vt0.c1 IN (''))) AND ((rt2.c0 IN (t0.c33))))) IS TRUE)  as count FROM rt1, rt2 FULL OUTER JOIN vt0 ON (rt2.c1 IN ()) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (NOT (vt0.c1 COLLATE BINARY)) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN 0Xffffffff841d0b0c END  NULLS LAST, '1973359386'  NULLS LAST, CASE WHEN rt2.c3 THEN ((((vt0.c0)AND(t0.c80)))OR(t0.c33)) END DESC  NULLS FIRST);
SELECT * FROM rt1, rt2 FULL OUTER JOIN vt0 ON (rt2.c1 IN ()) COLLATE RTRIM RIGHT OUTER JOIN t0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE (((NULL) BETWEEN ((vt0.c1 IN (''))) AND ((rt2.c0 IN (t0.c33))))) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN 0xffffffff841d0b0c END  NULLS LAST, '1973359386'  NULLS LAST, CASE WHEN rt2.c3 THEN ((((vt0.c0)AND(t0.c80)))OR(t0.c33)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.6753660918760807);
SELECT SUM(count) FROM (SELECT ((0.6753660918760807) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.6753660918760807);
SELECT SUM(count) FROM (SELECT ((0.6753660918760807) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.6753660918760807);
SELECT COUNT(*) FROM t0, rt0, rt1, rt2 WHERE (((((rt1.c0)&(rt1.c2)))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)&(rt1.c2)))<=(NULL))) IS TRUE)  as count FROM t0, rt0, rt1, rt2);
SELECT COUNT(*) FROM t0, rt0, rt1, rt2 WHERE (((((rt1.c0)&(rt1.c2)))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)&(rt1.c2)))<=(NULL))) IS TRUE)  as count FROM t0, rt0, rt1, rt2);
SELECT COUNT(*) FROM t0, rt0, rt1, rt2 WHERE (((((rt1.c0)&(rt1.c2)))<=(NULL)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt2, rt1 WHERE (CASE ((rt1.c1)IS(rt1.c2))  WHEN NULL THEN NULL ELSE CAST(NULL AS BLOB) END) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2))&(((rt2.c3)GLOB(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)IS(rt1.c2))  WHEN NULL THEN NULL ELSE CAST(NULL AS BLOB) END) IS TRUE)  as count FROM t0, rt0, vt0, rt2, rt1 ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2))&(((rt2.c3)GLOB(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt2, rt1 WHERE (CASE ((rt1.c1)IS(rt1.c2))  WHEN NULL THEN NULL ELSE CAST(NULL AS BLOB) END) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2))&(((rt2.c3)GLOB(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)IS(rt1.c2))  WHEN NULL THEN NULL ELSE CAST(NULL AS BLOB) END) IS TRUE)  as count FROM t0, rt0, vt0, rt2, rt1 ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2))&(((rt2.c3)GLOB(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt2, rt1 WHERE (CASE ((rt1.c1)IS(rt1.c2))  WHEN NULL THEN NULL ELSE CAST(NULL AS BLOB) END) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2))&(((rt2.c3)GLOB(rt0.c1)))) DESC;
SELECT * FROM vt0, t0, rt2, rt1 WHERE (((((((t0.c33)AND(t0.c80)))AND(vt0.c1)))|((t0.c80 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c33)AND(t0.c80)))AND(vt0.c1)))|((t0.c80 IN ())))) IS TRUE)  as count FROM vt0, t0, rt2, rt1);
SELECT * FROM vt0, t0, rt2, rt1 WHERE (((((((t0.c33)AND(t0.c80)))AND(vt0.c1)))|((t0.c80 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c33)AND(t0.c80)))AND(vt0.c1)))|((t0.c80 IN ())))) IS TRUE)  as count FROM vt0, t0, rt2, rt1);
SELECT * FROM vt0, t0, rt2, rt1 WHERE (((((((t0.c33)AND(t0.c80)))AND(vt0.c1)))|((t0.c80 IN ()))));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN t0 ON ((('F&')) BETWEEN ((CASE rt2.c1  WHEN t0.c80 THEN rt1.c0 END)) AND ((((((((((rt1.c0)OR(NULL)))OR(rt2.c2)))OR(rt1.c0)))OR(t0.c80))))) FULL OUTER JOIN rt1 ON (((rt1.c1)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c0 END)) AND ((CAST(rt1.c1 AS BLOB)))) WHERE (LIKELY(DISTINCT ((rt2.c0)AND(rt2.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt2.c0)AND(rt2.c2)))) IS TRUE)  as count FROM rt2 INNER JOIN t0 ON ((('F&')) BETWEEN ((CASE rt2.c1  WHEN t0.c80 THEN rt1.c0 END)) AND ((((((((((rt1.c0)OR(NULL)))OR(rt2.c2)))OR(rt1.c0)))OR(t0.c80))))) FULL OUTER JOIN rt1 ON (((rt1.c1)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c0 END)) AND ((CAST(rt1.c1 AS BLOB)))));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN t0 ON ((('F&')) BETWEEN ((CASE rt2.c1  WHEN t0.c80 THEN rt1.c0 END)) AND ((((((((((rt1.c0)OR(NULL)))OR(rt2.c2)))OR(rt1.c0)))OR(t0.c80))))) FULL OUTER JOIN rt1 ON (((rt1.c1)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c0 END)) AND ((CAST(rt1.c1 AS BLOB)))) WHERE (LIKELY(DISTINCT ((rt2.c0)AND(rt2.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt2.c0)AND(rt2.c2)))) IS TRUE)  as count FROM rt2 INNER JOIN t0 ON ((('F&')) BETWEEN ((CASE rt2.c1  WHEN t0.c80 THEN rt1.c0 END)) AND ((((((((((rt1.c0)OR(NULL)))OR(rt2.c2)))OR(rt1.c0)))OR(t0.c80))))) FULL OUTER JOIN rt1 ON (((rt1.c1)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c0 END)) AND ((CAST(rt1.c1 AS BLOB)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt2 ON rt2.c3 WHERE (((((rt2.c1)IS NOT(rt2.c1)))<>(rt2.c3)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1)IS NOT(rt2.c1)))<>(rt2.c3))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt2 ON rt2.c3);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt2 ON rt2.c3 WHERE (((((rt2.c1)IS NOT(rt2.c1)))<>(rt2.c3)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1)IS NOT(rt2.c1)))<>(rt2.c3))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt2 ON rt2.c3);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt2 ON rt2.c3 WHERE (((((rt2.c1)IS NOT(rt2.c1)))<>(rt2.c3)));
SELECT COUNT(*) FROM rt0, vt0, rt2, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt2.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN rt1.c1 THEN 'O' WHEN t0.c80 THEN rt1.c1 WHEN rt2.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c80 END THEN (((rt0.c0))=((rt1.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt1.c1) AND (t0.c80)) END WHERE (CASE ((rt0.c1) NOT NULL)  WHEN (vt0.c1 IN (NULL, rt0.c3)) THEN rt2.c2 ELSE ((rt2.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT NULL)  WHEN (vt0.c1 IN (NULL, rt0.c3)) THEN rt2.c2 ELSE ((rt2.c3) ISNULL) END) IS TRUE)  as count FROM rt0, vt0, rt2, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt2.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN rt1.c1 THEN 'O' WHEN t0.c80 THEN rt1.c1 WHEN rt2.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c80 END THEN (((rt0.c0))==((rt1.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt1.c1) AND (t0.c80)) END);
SELECT COUNT(*) FROM rt0, vt0, rt2, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt2.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN rt1.c1 THEN 'O' WHEN t0.c80 THEN rt1.c1 WHEN rt2.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c80 END THEN (((rt0.c0))=((rt1.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt1.c1) AND (t0.c80)) END WHERE (CASE ((rt0.c1) NOT NULL)  WHEN (vt0.c1 IN (NULL, rt0.c3)) THEN rt2.c2 ELSE ((rt2.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT NULL)  WHEN (vt0.c1 IN (NULL, rt0.c3)) THEN rt2.c2 ELSE ((rt2.c3) ISNULL) END) IS TRUE)  as count FROM rt0, vt0, rt2, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt2.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN rt1.c1 THEN 'O' WHEN t0.c80 THEN rt1.c1 WHEN rt2.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c80 END THEN (((rt0.c0))==((rt1.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt1.c1) AND (t0.c80)) END);
SELECT COUNT(*) FROM rt0, vt0, rt2, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt2.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN rt1.c1 THEN 'O' WHEN t0.c80 THEN rt1.c1 WHEN rt2.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c80 END THEN (((rt0.c0))=((rt1.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt1.c1) AND (t0.c80)) END WHERE (CASE ((rt0.c1) NOT NULL)  WHEN (vt0.c1 IN (NULL, rt0.c3)) THEN rt2.c2 ELSE ((rt2.c3) ISNULL) END);
SELECT ALL * FROM vt0, rt1, t0, rt0, rt2 WHERE (((CASE rt2.c2  WHEN rt0.c3 THEN rt2.c3 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt2.c2  WHEN rt0.c3 THEN rt2.c3 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt1, t0, rt0, rt2);
SELECT ALL * FROM vt0, rt1, t0, rt0, rt2 WHERE (((CASE rt2.c2  WHEN rt0.c3 THEN rt2.c3 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt2.c2  WHEN rt0.c3 THEN rt2.c3 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt1, t0, rt0, rt2);
SELECT ALL * FROM vt0, rt1, t0, rt0, rt2 WHERE (((CASE rt2.c2  WHEN rt0.c3 THEN rt2.c3 END) NOT NULL));
SELECT * FROM rt1, t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, t0, rt0, vt0);
SELECT * FROM rt1, t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, t0, rt0, vt0);
SELECT * FROM rt1, t0, rt0, vt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((+ (rt1.c0)) AS NUMERIC)) ORDER BY ((((((0.5553914958449814)OR(rt1.c2)))OR(rt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((0.5553914958449814)OR(rt1.c2)))OR(rt1.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((+ (rt1.c0)) AS NUMERIC)) ORDER BY ((((((0.5553914958449814)OR(rt1.c2)))OR(rt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((0.5553914958449814)OR(rt1.c2)))OR(rt1.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((+ (rt1.c0)) AS NUMERIC)) ORDER BY ((((((0.5553914958449814)OR(rt1.c2)))OR(rt1.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM rt2 WHERE (0.38528277002706046) ORDER BY ((CAST(-1.929744183E9 AS INTEGER))!=(CHAR(rt2.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.38528277002706046) IS TRUE)  as count FROM rt2 ORDER BY ((CAST(-1.929744183E9 AS INTEGER))<>(CHAR(rt2.c0))) ASC);
SELECT ALL COUNT(*) FROM rt2 WHERE (0.38528277002706046) ORDER BY ((CAST(-1.929744183E9 AS INTEGER))!=(CHAR(rt2.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.38528277002706046) IS TRUE)  as count FROM rt2 ORDER BY ((CAST(-1.929744183E9 AS INTEGER))<>(CHAR(rt2.c0))) ASC);
SELECT ALL COUNT(*) FROM rt2 WHERE (0.38528277002706046) ORDER BY ((CAST(-1.929744183E9 AS INTEGER))!=(CHAR(rt2.c0))) ASC;
SELECT ALL * FROM rt1 WHERE (CAST((- (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST((- (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST((- (rt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c1)-(vt0.c1))))) ORDER BY (((vt0.c0 IN (vt0.c0, x''))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CASE vt0.c0  WHEN -1639661887 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, x''))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CASE vt0.c0  WHEN -1639661887 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c1)-(vt0.c1))))) ORDER BY (((vt0.c0 IN (vt0.c0, x''))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CASE vt0.c0  WHEN -1639661887 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, x''))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CASE vt0.c0  WHEN -1639661887 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c1)-(vt0.c1))))) ORDER BY (((vt0.c0 IN (vt0.c0, x''))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CASE vt0.c0  WHEN -1639661887 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((((t0.c80 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))OR(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c80 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((((t0.c80 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))OR(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c80 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (((((t0.c80 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))OR(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON '265128111' WHERE (((((rt0.c2)*(rt2.c0)))==(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt2.c0)))=(rt0.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt2 ON '265128111');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON '265128111' WHERE (((((rt0.c2)*(rt2.c0)))==(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt2.c0)))=(rt0.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt2 ON '265128111');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt2 ON '265128111' WHERE (((((rt0.c2)*(rt2.c0)))==(rt0.c0)));
SELECT ALL * FROM rt2, t0, rt1 WHERE (TRIM(DISTINCT ((t0.c33)IS NOT(NULL)))) ORDER BY (((rt1.c1 IN ())) NOT NULL) ASC, ((((CASE rt2.c1  WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c1 THEN rt1.c0 END)OR((rt1.c2 IN ()))))AND(((rt2.c1)&(rt2.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c33)IS NOT(NULL)))) IS TRUE)  as count FROM rt2, t0, rt1 ORDER BY (((rt1.c1 IN ())) NOT NULL) ASC, ((((CASE rt2.c1  WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c1 THEN rt1.c0 END)OR((rt1.c2 IN ()))))AND(((rt2.c1)&(rt2.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt2, t0, rt1 WHERE (TRIM(DISTINCT ((t0.c33)IS NOT(NULL)))) ORDER BY (((rt1.c1 IN ())) NOT NULL) ASC, ((((CASE rt2.c1  WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c1 THEN rt1.c0 END)OR((rt1.c2 IN ()))))AND(((rt2.c1)&(rt2.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c33)IS NOT(NULL)))) IS TRUE)  as count FROM rt2, t0, rt1 ORDER BY (((rt1.c1 IN ())) NOT NULL) ASC, ((((CASE rt2.c1  WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c1 THEN rt1.c0 END)OR((rt1.c2 IN ()))))AND(((rt2.c1)&(rt2.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt2, t0, rt1 WHERE (TRIM(DISTINCT ((t0.c33)IS NOT(NULL)))) ORDER BY (((rt1.c1 IN ())) NOT NULL) ASC, ((((CASE rt2.c1  WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 WHEN rt1.c1 THEN rt1.c0 END)OR((rt1.c2 IN ()))))AND(((rt2.c1)&(rt2.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (NULLIF((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))), ((rt1.c1)==(x'de4c'))));
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))), ((rt1.c1)==(x'de4c')))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULLIF((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))), ((rt1.c1)==(x'de4c'))));
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))), ((rt1.c1)==(x'de4c')))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULLIF((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))), ((rt1.c1)==(x'de4c'))));
SELECT ALL * FROM t0, rt0, vt0, rt1, rt2 WHERE (x'5f2f');
SELECT SUM(count) FROM (SELECT ((x'5f2f') IS TRUE)  as count FROM t0, rt0, vt0, rt1, rt2);
SELECT ALL * FROM t0, rt0, vt0, rt1, rt2 WHERE (x'5f2f');
SELECT SUM(count) FROM (SELECT ((x'5f2f') IS TRUE)  as count FROM t0, rt0, vt0, rt1, rt2);
SELECT ALL * FROM t0, rt0, vt0, rt1, rt2 WHERE (x'5f2f');
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt0.c2)>(rt2.c1))) AND (CAST(rt1.c0 AS TEXT)))) ORDER BY ((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt0.c2)>(rt2.c1))) AND (CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY ((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt0.c2)>(rt2.c1))) AND (CAST(rt1.c0 AS TEXT)))) ORDER BY ((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt0.c2)>(rt2.c1))) AND (CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY ((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt0.c2)>(rt2.c1))) AND (CAST(rt1.c0 AS TEXT)))) ORDER BY ((((rt2.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c33);
SELECT * FROM rt0, rt2, t0, vt0 WHERE (DATE(CASE vt0.c1  WHEN t0.c80 THEN rt2.c1 END, CAST(rt2.c0 AS INTEGER), ((rt2.c0) NOT BETWEEN (vt0.c1) AND (rt2.c3)))) ORDER BY ((((rt2.c1)-(t0.c33)))OR(rt2.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE vt0.c1  WHEN t0.c80 THEN rt2.c1 END, CAST(rt2.c0 AS INTEGER), ((rt2.c0) NOT BETWEEN (vt0.c1) AND (rt2.c3)))) IS TRUE)  as count FROM rt0, rt2, t0, vt0 ORDER BY ((((rt2.c1)-(t0.c33)))OR(rt2.c3))  NULLS LAST);
SELECT * FROM rt0, rt2, t0, vt0 WHERE (DATE(CASE vt0.c1  WHEN t0.c80 THEN rt2.c1 END, CAST(rt2.c0 AS INTEGER), ((rt2.c0) NOT BETWEEN (vt0.c1) AND (rt2.c3)))) ORDER BY ((((rt2.c1)-(t0.c33)))OR(rt2.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE vt0.c1  WHEN t0.c80 THEN rt2.c1 END, CAST(rt2.c0 AS INTEGER), ((rt2.c0) NOT BETWEEN (vt0.c1) AND (rt2.c3)))) IS TRUE)  as count FROM rt0, rt2, t0, vt0 ORDER BY ((((rt2.c1)-(t0.c33)))OR(rt2.c3))  NULLS LAST);
SELECT * FROM rt0, rt2, t0, vt0 WHERE (DATE(CASE vt0.c1  WHEN t0.c80 THEN rt2.c1 END, CAST(rt2.c0 AS INTEGER), ((rt2.c0) NOT BETWEEN (vt0.c1) AND (rt2.c3)))) ORDER BY ((((rt2.c1)-(t0.c33)))OR(rt2.c3))  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((((t0.c33)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c80 END)) AND ((((rt0.c3)-(NULL)))))) ORDER BY (((t0.c80)&('?1Y><AKI')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c33)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c80 END)) AND ((((rt0.c3)-(NULL)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c80)&('?1Y><AKI')) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((t0.c33)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c80 END)) AND ((((rt0.c3)-(NULL)))))) ORDER BY (((t0.c80)&('?1Y><AKI')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c33)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c80 END)) AND ((((rt0.c3)-(NULL)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c80)&('?1Y><AKI')) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((t0.c33)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c80 END)) AND ((((rt0.c3)-(NULL)))))) ORDER BY (((t0.c80)&('?1Y><AKI')) IN ()) DESC  NULLS LAST;
SELECT * FROM rt0 INNER JOIN rt2 ON LIKELY(((rt2.c3)+(rt0.c0))) WHERE (CAST((+ (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON LIKELY(((rt2.c3)+(rt0.c0))));
SELECT * FROM rt0 INNER JOIN rt2 ON LIKELY(((rt2.c3)+(rt0.c0))) WHERE (CAST((+ (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON LIKELY(((rt2.c3)+(rt0.c0))));
SELECT * FROM rt0 INNER JOIN rt2 ON LIKELY(((rt2.c3)+(rt0.c0))) WHERE (CAST((+ (rt0.c3)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON HEX(DISTINCT ((rt0.c3)/(rt0.c0))) WHERE (UPPER(DISTINCT CASE WHEN x'' THEN t0.c33 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN x'' THEN t0.c33 ELSE rt0.c1 END)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON HEX(DISTINCT ((rt0.c3)/(rt0.c0))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON HEX(DISTINCT ((rt0.c3)/(rt0.c0))) WHERE (UPPER(DISTINCT CASE WHEN x'' THEN t0.c33 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN x'' THEN t0.c33 ELSE rt0.c1 END)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON HEX(DISTINCT ((rt0.c3)/(rt0.c0))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON HEX(DISTINCT ((rt0.c3)/(rt0.c0))) WHERE (UPPER(DISTINCT CASE WHEN x'' THEN t0.c33 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((((((((((rt2.c3)OR(rt1.c1)))AND(rt1.c1)))AND(0.5369068267545025)))AND(rt2.c3)))IS(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt2.c3)OR(rt1.c1)))AND(rt1.c1)))AND(0.5369068267545025)))AND(rt2.c3)))IS(rt1.c1))) IS TRUE)  as count FROM rt1, rt2);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((((((((((rt2.c3)OR(rt1.c1)))AND(rt1.c1)))AND(0.5369068267545025)))AND(rt2.c3)))IS(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt2.c3)OR(rt1.c1)))AND(rt1.c1)))AND(0.5369068267545025)))AND(rt2.c3)))IS(rt1.c1))) IS TRUE)  as count FROM rt1, rt2);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (((((((((((rt2.c3)OR(rt1.c1)))AND(rt1.c1)))AND(0.5369068267545025)))AND(rt2.c3)))IS(rt1.c1)));
SELECT ALL * FROM rt2, rt1, rt0, t0, vt0 WHERE (((((((rt1.c0)OR(0.4538230629538067)))OR(NULL)))IS(TRIM(rt2.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(0.4538230629538067)))OR(NULL)))IS(TRIM(rt2.c0)))) IS TRUE)  as count FROM rt2, rt1, rt0, t0, vt0);
SELECT ALL * FROM rt2, rt1, rt0, t0, vt0 WHERE (((((((rt1.c0)OR(0.4538230629538067)))OR(NULL)))IS(TRIM(rt2.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(0.4538230629538067)))OR(NULL)))IS(TRIM(rt2.c0)))) IS TRUE)  as count FROM rt2, rt1, rt0, t0, vt0);
SELECT ALL * FROM rt2, rt1, rt0, t0, vt0 WHERE (((((((rt1.c0)OR(0.4538230629538067)))OR(NULL)))IS(TRIM(rt2.c0))));
SELECT * FROM rt2, vt0, t0, rt0 WHERE ((+ (((((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)))OR(rt0.c2)))AND(rt2.c3)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)))OR(rt0.c2)))AND(rt2.c3))))) IS TRUE)  as count FROM rt2, vt0, t0, rt0);
SELECT * FROM rt2, vt0, t0, rt0 WHERE ((+ (((((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)))OR(rt0.c2)))AND(rt2.c3)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)))OR(rt0.c2)))AND(rt2.c3))))) IS TRUE)  as count FROM rt2, vt0, t0, rt0);
SELECT * FROM rt2, vt0, t0, rt0 WHERE ((+ (((((((((rt2.c2)AND(rt0.c0)))AND(rt2.c2)))OR(rt0.c2)))AND(rt2.c3)))));
SELECT * FROM rt2, rt1, rt0, vt0 WHERE ((CASE rt1.c2  WHEN rt2.c3 THEN rt2.c0 ELSE rt0.c1 END IN ())) ORDER BY CAST(rt1.c2 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c2  WHEN rt2.c3 THEN rt2.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt2, rt1, rt0, vt0 ORDER BY CAST(rt1.c2 AS INTEGER) DESC);
SELECT * FROM rt2, rt1, rt0, vt0 WHERE ((CASE rt1.c2  WHEN rt2.c3 THEN rt2.c0 ELSE rt0.c1 END IN ())) ORDER BY CAST(rt1.c2 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c2  WHEN rt2.c3 THEN rt2.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt2, rt1, rt0, vt0 ORDER BY CAST(rt1.c2 AS INTEGER) DESC);
SELECT * FROM rt2, rt1, rt0, vt0 WHERE ((CASE rt1.c2  WHEN rt2.c3 THEN rt2.c0 ELSE rt0.c1 END IN ())) ORDER BY CAST(rt1.c2 AS INTEGER) DESC;
SELECT COUNT(*) FROM t0, vt0, rt0, rt1, rt2 WHERE (((((375857234)AND(rt0.c0)))AND(rt0.c3)) COLLATE RTRIM) ORDER BY UPPER(CAST(rt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((375857234)AND(rt0.c0)))AND(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0, rt1, rt2 ORDER BY UPPER(CAST(rt1.c0 AS INTEGER)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0, rt1, rt2 WHERE (((((375857234)AND(rt0.c0)))AND(rt0.c3)) COLLATE RTRIM) ORDER BY UPPER(CAST(rt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((375857234)AND(rt0.c0)))AND(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0, rt1, rt2 ORDER BY UPPER(CAST(rt1.c0 AS INTEGER)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0, rt1, rt2 WHERE (((((375857234)AND(rt0.c0)))AND(rt0.c3)) COLLATE RTRIM) ORDER BY UPPER(CAST(rt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0 INNER JOIN rt2 ON SQLITE_VERSION() WHERE (((((rt2.c2)>=(rt2.c0))) NOT NULL)) ORDER BY ((t0.c33)<(rt2.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)>=(rt2.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt2 ON SQLITE_VERSION() ORDER BY ((t0.c33)<(rt2.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, t0 INNER JOIN rt2 ON SQLITE_VERSION() WHERE (((((rt2.c2)>=(rt2.c0))) NOT NULL)) ORDER BY ((t0.c33)<(rt2.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)>=(rt2.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt2 ON SQLITE_VERSION() ORDER BY ((t0.c33)<(rt2.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, t0 INNER JOIN rt2 ON SQLITE_VERSION() WHERE (((((rt2.c2)>=(rt2.c0))) NOT NULL)) ORDER BY ((t0.c33)<(rt2.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, rt1, rt2 WHERE (((rt1.c0)<<(rt0.c2)) COLLATE NOCASE) ORDER BY (~ ((~ (rt2.c3)))), CAST((~ (t0.c80)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)<<(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, rt1, rt2 ORDER BY (~ ((~ (rt2.c3)))), CAST((~ (t0.c80)) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, t0, rt1, rt2 WHERE (((rt1.c0)<<(rt0.c2)) COLLATE NOCASE) ORDER BY (~ ((~ (rt2.c3)))), CAST((~ (t0.c80)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)<<(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, rt1, rt2 ORDER BY (~ ((~ (rt2.c3)))), CAST((~ (t0.c80)) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, t0, rt1, rt2 WHERE (((rt1.c0)<<(rt0.c2)) COLLATE NOCASE) ORDER BY (~ ((~ (rt2.c3)))), CAST((~ (t0.c80)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((((rt1.c0))>((t0.c80)))))=((LOWER(rt2.c2)))) INNER JOIN rt2 ON ((t0.c33) NOT BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((LIKELIHOOD(rt0.c0, 0.7197952766987209))IS((rt1.c2 IN ()))) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)*(SQLITE_COMPILEOPTION_GET(rt2.c0))) WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((((rt1.c0))>((t0.c80)))))==((LOWER(rt2.c2)))) INNER JOIN rt2 ON ((t0.c33) NOT BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((LIKELIHOOD(rt0.c0, 0.7197952766987209))IS((rt1.c2 IN ()))) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)*(SQLITE_COMPILEOPTION_GET(rt2.c0))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((((rt1.c0))>((t0.c80)))))=((LOWER(rt2.c2)))) INNER JOIN rt2 ON ((t0.c33) NOT BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((LIKELIHOOD(rt0.c0, 0.7197952766987209))IS((rt1.c2 IN ()))) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)*(SQLITE_COMPILEOPTION_GET(rt2.c0))) WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((((rt1.c0))>((t0.c80)))))==((LOWER(rt2.c2)))) INNER JOIN rt2 ON ((t0.c33) NOT BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((LIKELIHOOD(rt0.c0, 0.7197952766987209))IS((rt1.c2 IN ()))) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)*(SQLITE_COMPILEOPTION_GET(rt2.c0))));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (~ ('' COLLATE RTRIM)) WHERE (((((1997432590)>(rt0.c2)))GLOB(CASE x''  WHEN t0.c33 THEN t0.c33 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((1997432590)>(rt0.c2)))GLOB(CASE x''  WHEN t0.c33 THEN t0.c33 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (~ ('' COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (~ ('' COLLATE RTRIM)) WHERE (((((1997432590)>(rt0.c2)))GLOB(CASE x''  WHEN t0.c33 THEN t0.c33 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((1997432590)>(rt0.c2)))GLOB(CASE x''  WHEN t0.c33 THEN t0.c33 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (~ ('' COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (~ ('' COLLATE RTRIM)) WHERE (((((1997432590)>(rt0.c2)))GLOB(CASE x''  WHEN t0.c33 THEN t0.c33 ELSE vt0.c0 END)));
SELECT ALL * FROM rt0, vt0, rt2 NOT INDEXED, t0, rt1 WHERE ((((- (t0.c33)))OR(rt2.c0 COLLATE NOCASE))) ORDER BY ((((((rt0.c2) NOT NULL))AND(((t0.c33) BETWEEN (t0.c80) AND (vt0.c1)))))OR(CAST(rt2.c3 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c33)))OR(rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, rt2, t0, rt1 ORDER BY ((((((rt0.c2) NOT NULL))AND(((t0.c33) BETWEEN (t0.c80) AND (vt0.c1)))))OR(CAST(rt2.c3 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, rt2 NOT INDEXED, t0, rt1 WHERE ((((- (t0.c33)))OR(rt2.c0 COLLATE NOCASE))) ORDER BY ((((((rt0.c2) NOT NULL))AND(((t0.c33) BETWEEN (t0.c80) AND (vt0.c1)))))OR(CAST(rt2.c3 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c33)))OR(rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, rt2, t0, rt1 ORDER BY ((((((rt0.c2) NOT NULL))AND(((t0.c33) BETWEEN (t0.c80) AND (vt0.c1)))))OR(CAST(rt2.c3 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, rt2 NOT INDEXED, t0, rt1 WHERE ((((- (t0.c33)))OR(rt2.c0 COLLATE NOCASE))) ORDER BY ((((((rt0.c2) NOT NULL))AND(((t0.c33) BETWEEN (t0.c80) AND (vt0.c1)))))OR(CAST(rt2.c3 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((CASE t0.c80  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ']8' END) ORDER BY '-403114106' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN ']8' END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((CASE t0.c80  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) ORDER BY '-403114106' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((CASE t0.c80  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ']8' END) ORDER BY '-403114106' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN ']8' END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((CASE t0.c80  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) ORDER BY '-403114106' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((CASE t0.c80  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ']8' END) ORDER BY '-403114106' ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, vt0, rt0, rt2 WHERE (CASE WHEN (rt2.c3 IN ()) THEN ((t0.c80) NOT BETWEEN (vt0.c0) AND (rt2.c0)) ELSE ((rt0.c0) IS TRUE) END) ORDER BY ((CAST(rt0.c1 AS TEXT)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt2.c3 IN ()) THEN ((t0.c80) NOT BETWEEN (vt0.c0) AND (rt2.c0)) ELSE ((rt0.c0) IS TRUE) END) IS TRUE)  as count FROM t0, rt1, vt0, rt0, rt2 ORDER BY ((CAST(rt0.c1 AS TEXT)) IS FALSE));
SELECT COUNT(*) FROM t0, rt1, vt0, rt0, rt2 WHERE (CASE WHEN (rt2.c3 IN ()) THEN ((t0.c80) NOT BETWEEN (vt0.c0) AND (rt2.c0)) ELSE ((rt0.c0) IS TRUE) END) ORDER BY ((CAST(rt0.c1 AS TEXT)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt2.c3 IN ()) THEN ((t0.c80) NOT BETWEEN (vt0.c0) AND (rt2.c0)) ELSE ((rt0.c0) IS TRUE) END) IS TRUE)  as count FROM t0, rt1, vt0, rt0, rt2 ORDER BY ((CAST(rt0.c1 AS TEXT)) IS FALSE));
SELECT COUNT(*) FROM t0, rt1, vt0, rt0, rt2 WHERE (CASE WHEN (rt2.c3 IN ()) THEN ((t0.c80) NOT BETWEEN (vt0.c0) AND (rt2.c0)) ELSE ((rt0.c0) IS TRUE) END) ORDER BY ((CAST(rt0.c1 AS TEXT)) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, rt1 WHERE (((rt1.c0)||(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)||(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, rt1 WHERE (((rt1.c0)||(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)||(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, rt1 WHERE (((rt1.c0)||(rt1.c2)) COLLATE BINARY);
SELECT ALL * FROM t0, rt1, rt0, vt0 WHERE ((((~ (vt0.c1)))<=(ABS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))<=(ABS(vt0.c1)))) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT ALL * FROM t0, rt1, rt0, vt0 WHERE ((((~ (vt0.c1)))<=(ABS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))<=(ABS(vt0.c1)))) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT ALL * FROM t0, rt1, rt0, vt0 WHERE ((((~ (vt0.c1)))<=(ABS(vt0.c1))));
SELECT COUNT(*) FROM rt2, vt0 WHERE (rt2.c0) ORDER BY CAST(rt2.c0 COLLATE NOCASE AS TEXT) ASC, (((~ (vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((rt2.c0) IS TRUE)  as count FROM rt2, vt0 ORDER BY CAST(rt2.c0 COLLATE NOCASE AS TEXT) ASC, (((~ (vt0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt2, vt0 WHERE (rt2.c0) ORDER BY CAST(rt2.c0 COLLATE NOCASE AS TEXT) ASC, (((~ (vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((rt2.c0) IS TRUE)  as count FROM rt2, vt0 ORDER BY CAST(rt2.c0 COLLATE NOCASE AS TEXT) ASC, (((~ (vt0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt2, vt0 WHERE (rt2.c0) ORDER BY CAST(rt2.c0 COLLATE NOCASE AS TEXT) ASC, (((~ (vt0.c0))) IS TRUE) ASC;
SELECT ALL * FROM rt1, t0, rt0, vt0 LEFT OUTER JOIN rt2 ON ((TRIM(rt2.c0))*(((rt0.c3)IS(rt1.c1)))) WHERE (((((rt0.c0) NOT NULL)) BETWEEN (CASE WHEN rt1.c0 THEN rt2.c3 ELSE rt0.c3 END) AND (((vt0.c0)+(rt2.c3))))) ORDER BY (((((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c80))))>=(rt2.c2 COLLATE RTRIM)) DESC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(rt2.c0)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN (CASE WHEN rt1.c0 THEN rt2.c3 ELSE rt0.c3 END) AND (((vt0.c0)+(rt2.c3))))) IS TRUE)  as count FROM rt1, t0, rt0, vt0 LEFT OUTER JOIN rt2 ON ((TRIM(rt2.c0))*(((rt0.c3)IS(rt1.c1)))) ORDER BY (((((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c80))))>=(rt2.c2 COLLATE RTRIM)) DESC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(rt2.c0)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0, vt0 LEFT OUTER JOIN rt2 ON ((TRIM(rt2.c0))*(((rt0.c3)IS(rt1.c1)))) WHERE (((((rt0.c0) NOT NULL)) BETWEEN (CASE WHEN rt1.c0 THEN rt2.c3 ELSE rt0.c3 END) AND (((vt0.c0)+(rt2.c3))))) ORDER BY (((((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c80))))>=(rt2.c2 COLLATE RTRIM)) DESC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(rt2.c0)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN (CASE WHEN rt1.c0 THEN rt2.c3 ELSE rt0.c3 END) AND (((vt0.c0)+(rt2.c3))))) IS TRUE)  as count FROM rt1, t0, rt0, vt0 LEFT OUTER JOIN rt2 ON ((TRIM(rt2.c0))*(((rt0.c3)IS(rt1.c1)))) ORDER BY (((((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c80))))>=(rt2.c2 COLLATE RTRIM)) DESC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(rt2.c0)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0, vt0 LEFT OUTER JOIN rt2 ON ((TRIM(rt2.c0))*(((rt0.c3)IS(rt1.c1)))) WHERE (((((rt0.c0) NOT NULL)) BETWEEN (CASE WHEN rt1.c0 THEN rt2.c3 ELSE rt0.c3 END) AND (((vt0.c0)+(rt2.c3))))) ORDER BY (((((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c80))))>=(rt2.c2 COLLATE RTRIM)) DESC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(rt2.c0)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (x'') ORDER BY ((0.5137566928480414 COLLATE NOCASE)+(((rt1.c2) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((0.5137566928480414 COLLATE NOCASE)+(((rt1.c2) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (x'') ORDER BY ((0.5137566928480414 COLLATE NOCASE)+(((rt1.c2) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((0.5137566928480414 COLLATE NOCASE)+(((rt1.c2) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (x'') ORDER BY ((0.5137566928480414 COLLATE NOCASE)+(((rt1.c2) IS TRUE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 WHERE (0.38869484297459) ORDER BY (~ (((0x2dd07c33)IS(rt2.c0))));
SELECT SUM(count) FROM (SELECT ((0.38869484297459) IS TRUE)  as count FROM rt2 ORDER BY (~ (((0x2dd07c33)IS(rt2.c0)))));
SELECT ALL COUNT(*) FROM rt2 WHERE (0.38869484297459) ORDER BY (~ (((0x2dd07c33)IS(rt2.c0))));
SELECT SUM(count) FROM (SELECT ((0.38869484297459) IS TRUE)  as count FROM rt2 ORDER BY (~ (((0x2dd07c33)IS(rt2.c0)))));
SELECT ALL COUNT(*) FROM rt2 WHERE (0.38869484297459) ORDER BY (~ (((0x2dd07c33)IS(rt2.c0))));
SELECT * FROM rt1, rt0, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (LAST_INSERT_ROWID());
SELECT * FROM rt1 CROSS JOIN rt2 ON '-1139055754' WHERE (((((rt1.c0)+(x''))) NOT NULL)) ORDER BY ((((rt2.c1) BETWEEN (rt2.c1) AND ('e*(|OO')))-(CASE rt1.c0  WHEN rt2.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt2.c3 WHEN x'' THEN rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)+(x''))) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON '-1139055754' ORDER BY ((((rt2.c1) BETWEEN (rt2.c1) AND ('e*(|OO')))-(CASE rt1.c0  WHEN rt2.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt2.c3 WHEN x'' THEN rt1.c0 END)) DESC);
SELECT * FROM rt1 CROSS JOIN rt2 ON '-1139055754' WHERE (((((rt1.c0)+(x''))) NOT NULL)) ORDER BY ((((rt2.c1) BETWEEN (rt2.c1) AND ('e*(|OO')))-(CASE rt1.c0  WHEN rt2.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt2.c3 WHEN x'' THEN rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)+(x''))) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt2 ON '-1139055754' ORDER BY ((((rt2.c1) BETWEEN (rt2.c1) AND ('e*(|OO')))-(CASE rt1.c0  WHEN rt2.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt2.c3 WHEN x'' THEN rt1.c0 END)) DESC);
SELECT * FROM rt1 CROSS JOIN rt2 ON '-1139055754' WHERE (((((rt1.c0)+(x''))) NOT NULL)) ORDER BY ((((rt2.c1) BETWEEN (rt2.c1) AND ('e*(|OO')))-(CASE rt1.c0  WHEN rt2.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt2.c3 WHEN x'' THEN rt1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((rt0.c1)OR(vt0.c0)))OR(-1639661887)))OR(vt0.c1)))OR(rt0.c2)))-(rt0.c1 COLLATE NOCASE))) ORDER BY ((((((((((rt0.c3)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c80)))AND(NULL))) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c2, 0.32365171882130916)) AND (CAST(t0.c80 AS NUMERIC))), rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(vt0.c0)))OR(-1639661887)))OR(vt0.c1)))OR(rt0.c2)))-(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((((rt0.c3)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c80)))AND(NULL))) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c2, 0.32365171882130916)) AND (CAST(t0.c80 AS NUMERIC))), rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((rt0.c1)OR(vt0.c0)))OR(-1639661887)))OR(vt0.c1)))OR(rt0.c2)))-(rt0.c1 COLLATE NOCASE))) ORDER BY ((((((((((rt0.c3)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c80)))AND(NULL))) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c2, 0.32365171882130916)) AND (CAST(t0.c80 AS NUMERIC))), rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(vt0.c0)))OR(-1639661887)))OR(vt0.c1)))OR(rt0.c2)))-(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((((rt0.c3)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c80)))AND(NULL))) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c2, 0.32365171882130916)) AND (CAST(t0.c80 AS NUMERIC))), rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((rt0.c1)OR(vt0.c0)))OR(-1639661887)))OR(vt0.c1)))OR(rt0.c2)))-(rt0.c1 COLLATE NOCASE))) ORDER BY ((((((((((rt0.c3)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c80)))AND(NULL))) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c2, 0.32365171882130916)) AND (CAST(t0.c80 AS NUMERIC))), rt0.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN rt0 ON (((t0.c33 IN (rt2.c0))) NOT BETWEEN (DATE(rt2.c2, rt0.c0, rt2.c3, NULL, rt2.c0)) AND ((((rt0.c2, rt2.c1, vt0.c0)) BETWEEN ((t0.c33, t0.c33, rt0.c1)) AND ((t0.c80, rt0.c2, t0.c80))))) CROSS JOIN t0 ON rt2.c3 CROSS JOIN vt0 ON ((((((((rt2.c3)OR(t0.c80)))AND(t0.c80)))AND(((rt2.c0) IS TRUE))))AND(TOTAL_CHANGES())) WHERE (0.05524321272555932) ORDER BY rt0.c2, ((rt0.c0) NOT BETWEEN (((vt0.c1)LIKE(rt0.c0))) AND (((rt2.c0)||(x'')))) DESC  NULLS LAST, (((NOT (rt0.c3))) BETWEEN (rt2.c1) AND (CAST(x'' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.05524321272555932) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt0 ON (((t0.c33 IN (rt2.c0))) NOT BETWEEN (DATE(rt2.c2, rt0.c0, rt2.c3, NULL, rt2.c0)) AND ((((rt0.c2, rt2.c1, vt0.c0)) BETWEEN ((t0.c33, t0.c33, rt0.c1)) AND ((t0.c80, rt0.c2, t0.c80))))) CROSS JOIN t0 ON rt2.c3 CROSS JOIN vt0 ON ((((((((rt2.c3)OR(t0.c80)))AND(t0.c80)))AND(((rt2.c0) IS TRUE))))AND(TOTAL_CHANGES())) ORDER BY rt0.c2, ((rt0.c0) NOT BETWEEN (((vt0.c1)LIKE(rt0.c0))) AND (((rt2.c0)||(x'')))) DESC  NULLS LAST, (((NOT (rt0.c3))) BETWEEN (rt2.c1) AND (CAST(x'' AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN rt0 ON (((t0.c33 IN (rt2.c0))) NOT BETWEEN (DATE(rt2.c2, rt0.c0, rt2.c3, NULL, rt2.c0)) AND ((((rt0.c2, rt2.c1, vt0.c0)) BETWEEN ((t0.c33, t0.c33, rt0.c1)) AND ((t0.c80, rt0.c2, t0.c80))))) CROSS JOIN t0 ON rt2.c3 CROSS JOIN vt0 ON ((((((((rt2.c3)OR(t0.c80)))AND(t0.c80)))AND(((rt2.c0) IS TRUE))))AND(TOTAL_CHANGES())) WHERE (0.05524321272555932) ORDER BY rt0.c2, ((rt0.c0) NOT BETWEEN (((vt0.c1)LIKE(rt0.c0))) AND (((rt2.c0)||(x'')))) DESC  NULLS LAST, (((NOT (rt0.c3))) BETWEEN (rt2.c1) AND (CAST(x'' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.05524321272555932) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt0 ON (((t0.c33 IN (rt2.c0))) NOT BETWEEN (DATE(rt2.c2, rt0.c0, rt2.c3, NULL, rt2.c0)) AND ((((rt0.c2, rt2.c1, vt0.c0)) BETWEEN ((t0.c33, t0.c33, rt0.c1)) AND ((t0.c80, rt0.c2, t0.c80))))) CROSS JOIN t0 ON rt2.c3 CROSS JOIN vt0 ON ((((((((rt2.c3)OR(t0.c80)))AND(t0.c80)))AND(((rt2.c0) IS TRUE))))AND(TOTAL_CHANGES())) ORDER BY rt0.c2, ((rt0.c0) NOT BETWEEN (((vt0.c1)LIKE(rt0.c0))) AND (((rt2.c0)||(x'')))) DESC  NULLS LAST, (((NOT (rt0.c3))) BETWEEN (rt2.c1) AND (CAST(x'' AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt2, rt1 WHERE (((((((NULL)OR(0.6828796955429784)))OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(0.6828796955429784)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt2, rt1);
SELECT COUNT(*) FROM vt0, rt2, rt1 WHERE (((((((NULL)OR(0.6828796955429784)))OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(0.6828796955429784)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt2, rt1);
SELECT COUNT(*) FROM vt0, rt2, rt1 WHERE (((((((NULL)OR(0.6828796955429784)))OR(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(IFNULL(rt0.c2, t0.c33) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(rt0.c2, t0.c33) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(IFNULL(rt0.c2, t0.c33) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(rt0.c2, t0.c33) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(IFNULL(rt0.c2, t0.c33) AS REAL));
SELECT * FROM rt1, t0 WHERE (((('-1949194194')) BETWEEN ((((((rt1.c2)OR(rt1.c0)))AND(t0.c33)))) AND ((''))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1949194194')) BETWEEN ((((((rt1.c2)OR(rt1.c0)))AND(t0.c33)))) AND (('')))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((('-1949194194')) BETWEEN ((((((rt1.c2)OR(rt1.c0)))AND(t0.c33)))) AND ((''))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1949194194')) BETWEEN ((((((rt1.c2)OR(rt1.c0)))AND(t0.c33)))) AND (('')))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((('-1949194194')) BETWEEN ((((((rt1.c2)OR(rt1.c0)))AND(t0.c33)))) AND ((''))));
SELECT ALL COUNT(*) FROM rt0, rt2 LEFT OUTER JOIN vt0 ON CASE ((((-1.469655578E9)OR(rt0.c1)))OR(rt2.c1))  WHEN (('601445492') ISNULL) THEN ((t0.c80) BETWEEN (t0.c80) AND (rt1.c2)) END INNER JOIN t0 ON ((t0.c80) NOT BETWEEN (NULL) AND (rt2.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON ((((LIKELIHOOD(rt0.c2, 0.6064756369751293))OR((~ (rt0.c0)))))AND((((rt2.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) WHERE (0.7005347495644916);
SELECT SUM(count) FROM (SELECT ((0.7005347495644916) IS TRUE)  as count FROM rt0, rt2 LEFT OUTER JOIN vt0 ON CASE ((((-1.469655578E9)OR(rt0.c1)))OR(rt2.c1))  WHEN (('601445492') ISNULL) THEN ((t0.c80) BETWEEN (t0.c80) AND (rt1.c2)) END INNER JOIN t0 ON ((t0.c80) NOT BETWEEN (NULL) AND (rt2.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON ((((LIKELIHOOD(rt0.c2, 0.6064756369751293))OR((~ (rt0.c0)))))AND((((rt2.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))));
SELECT ALL COUNT(*) FROM rt0, rt2 LEFT OUTER JOIN vt0 ON CASE ((((-1.469655578E9)OR(rt0.c1)))OR(rt2.c1))  WHEN (('601445492') ISNULL) THEN ((t0.c80) BETWEEN (t0.c80) AND (rt1.c2)) END INNER JOIN t0 ON ((t0.c80) NOT BETWEEN (NULL) AND (rt2.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON ((((LIKELIHOOD(rt0.c2, 0.6064756369751293))OR((~ (rt0.c0)))))AND((((rt2.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) WHERE (0.7005347495644916);
SELECT SUM(count) FROM (SELECT ((0.7005347495644916) IS TRUE)  as count FROM rt0, rt2 LEFT OUTER JOIN vt0 ON CASE ((((-1.469655578E9)OR(rt0.c1)))OR(rt2.c1))  WHEN (('601445492') ISNULL) THEN ((t0.c80) BETWEEN (t0.c80) AND (rt1.c2)) END INNER JOIN t0 ON ((t0.c80) NOT BETWEEN (NULL) AND (rt2.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON ((((LIKELIHOOD(rt0.c2, 0.6064756369751293))OR((~ (rt0.c0)))))AND((((rt2.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))));
SELECT COUNT(*) FROM t0, rt0, rt2, vt0, rt1 WHERE ((NOT (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, rt2, vt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt2, vt0, rt1 WHERE ((NOT (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, rt2, vt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt2, vt0, rt1 WHERE ((NOT (((rt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt2 WHERE (((((rt2.c0, 0.8670635584804374, rt0.c0))>=((t0.c33, vt0.c0, vt0.c1))) IN (((rt2.c0) BETWEEN (rt0.c3) AND (0.9503517678660465))))) ORDER BY ((((((((t0.c33)AND(rt0.c0)))OR(rt2.c2)))OR(((t0.c80) IS FALSE))))OR(LIKELIHOOD(vt0.c0, 0.5347431772816682)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0, 0.8670635584804374, rt0.c0))>=((t0.c33, vt0.c0, vt0.c1))) IN (((rt2.c0) BETWEEN (rt0.c3) AND (0.9503517678660465))))) IS TRUE)  as count FROM vt0, t0, rt0, rt2 ORDER BY ((((((((t0.c33)AND(rt0.c0)))OR(rt2.c2)))OR(((t0.c80) IS FALSE))))OR(LIKELIHOOD(vt0.c0, 0.5347431772816682))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt2 WHERE (((((rt2.c0, 0.8670635584804374, rt0.c0))>=((t0.c33, vt0.c0, vt0.c1))) IN (((rt2.c0) BETWEEN (rt0.c3) AND (0.9503517678660465))))) ORDER BY ((((((((t0.c33)AND(rt0.c0)))OR(rt2.c2)))OR(((t0.c80) IS FALSE))))OR(LIKELIHOOD(vt0.c0, 0.5347431772816682)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0, 0.8670635584804374, rt0.c0))>=((t0.c33, vt0.c0, vt0.c1))) IN (((rt2.c0) BETWEEN (rt0.c3) AND (0.9503517678660465))))) IS TRUE)  as count FROM vt0, t0, rt0, rt2 ORDER BY ((((((((t0.c33)AND(rt0.c0)))OR(rt2.c2)))OR(((t0.c80) IS FALSE))))OR(LIKELIHOOD(vt0.c0, 0.5347431772816682))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt2 WHERE (((((rt2.c0, 0.8670635584804374, rt0.c0))>=((t0.c33, vt0.c0, vt0.c1))) IN (((rt2.c0) BETWEEN (rt0.c3) AND (0.9503517678660465))))) ORDER BY ((((((((t0.c33)AND(rt0.c0)))OR(rt2.c2)))OR(((t0.c80) IS FALSE))))OR(LIKELIHOOD(vt0.c0, 0.5347431772816682)));
SELECT ALL * FROM t0, rt0, vt0, rt2 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c3 THEN rt2.c0 ELSE 0xd067184 END) BETWEEN (rt2.c2 COLLATE RTRIM) AND ((rt1.c0 IN (rt0.c0)))) WHERE ((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0, ((rt2.c1) NOT NULL))) AND ((((((((((rt1.c2)AND(vt0.c0)))AND(rt0.c0)))OR(rt2.c2)))AND(rt0.c1)), t0.c33 COLLATE NOCASE, rt0.c2 COLLATE BINARY)))) ORDER BY CAST((((rt0.c1, rt2.c1, rt2.c3)) NOT BETWEEN ((vt0.c1, rt2.c3, x'9368')) AND ((rt1.c0, 'Kj1	R(%[', rt0.c0))) AS INTEGER) DESC, ((rt0.c2)<=(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, ((((t0.c33)+(rt2.c1)))GLOB(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0, ((rt2.c1) NOT NULL))) AND ((((((((((rt1.c2)AND(vt0.c0)))AND(rt0.c0)))OR(rt2.c2)))AND(rt0.c1)), t0.c33 COLLATE NOCASE, rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt0, vt0, rt2 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c3 THEN rt2.c0 ELSE 0xd067184 END) BETWEEN (rt2.c2 COLLATE RTRIM) AND ((rt1.c0 IN (rt0.c0)))) ORDER BY CAST((((rt0.c1, rt2.c1, rt2.c3)) NOT BETWEEN ((vt0.c1, rt2.c3, x'9368')) AND ((rt1.c0, 'Kj1	R(%[', rt0.c0))) AS INTEGER) DESC, ((rt0.c2)<=(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, ((((t0.c33)+(rt2.c1)))GLOB(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0, rt2 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c3 THEN rt2.c0 ELSE 0xd067184 END) BETWEEN (rt2.c2 COLLATE RTRIM) AND ((rt1.c0 IN (rt0.c0)))) WHERE ((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0, ((rt2.c1) NOT NULL))) AND ((((((((((rt1.c2)AND(vt0.c0)))AND(rt0.c0)))OR(rt2.c2)))AND(rt0.c1)), t0.c33 COLLATE NOCASE, rt0.c2 COLLATE BINARY)))) ORDER BY CAST((((rt0.c1, rt2.c1, rt2.c3)) NOT BETWEEN ((vt0.c1, rt2.c3, x'9368')) AND ((rt1.c0, 'Kj1	R(%[', rt0.c0))) AS INTEGER) DESC, ((rt0.c2)<=(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, ((((t0.c33)+(rt2.c1)))GLOB(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0, ((rt2.c1) NOT NULL))) AND ((((((((((rt1.c2)AND(vt0.c0)))AND(rt0.c0)))OR(rt2.c2)))AND(rt0.c1)), t0.c33 COLLATE NOCASE, rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt0, vt0, rt2 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c3 THEN rt2.c0 ELSE 0xd067184 END) BETWEEN (rt2.c2 COLLATE RTRIM) AND ((rt1.c0 IN (rt0.c0)))) ORDER BY CAST((((rt0.c1, rt2.c1, rt2.c3)) NOT BETWEEN ((vt0.c1, rt2.c3, x'9368')) AND ((rt1.c0, 'Kj1	R(%[', rt0.c0))) AS INTEGER) DESC, ((rt0.c2)<=(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, ((((t0.c33)+(rt2.c1)))GLOB(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0, rt2 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c3 THEN rt2.c0 ELSE 0xd067184 END) BETWEEN (rt2.c2 COLLATE RTRIM) AND ((rt1.c0 IN (rt0.c0)))) WHERE ((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0, ((rt2.c1) NOT NULL))) AND ((((((((((rt1.c2)AND(vt0.c0)))AND(rt0.c0)))OR(rt2.c2)))AND(rt0.c1)), t0.c33 COLLATE NOCASE, rt0.c2 COLLATE BINARY)))) ORDER BY CAST((((rt0.c1, rt2.c1, rt2.c3)) NOT BETWEEN ((vt0.c1, rt2.c3, x'9368')) AND ((rt1.c0, 'Kj1	R(%[', rt0.c0))) AS INTEGER) DESC, ((rt0.c2)<=(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, ((((t0.c33)+(rt2.c1)))GLOB(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt2 WHERE (((CASE WHEN 0.3170147247263152 THEN t0.c80 ELSE t0.c80 END) NOT BETWEEN ((((rt2.c3))<=((rt2.c3)))) AND (CAST(t0.c33 AS NUMERIC)))) ORDER BY rt2.c1 ASC, CAST(((rt2.c0)*(t0.c80)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.3170147247263152 THEN t0.c80 ELSE t0.c80 END) NOT BETWEEN ((((rt2.c3))<=((rt2.c3)))) AND (CAST(t0.c33 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt2 ORDER BY rt2.c1 ASC, CAST(((rt2.c0)*(t0.c80)) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt2 WHERE (((CASE WHEN 0.3170147247263152 THEN t0.c80 ELSE t0.c80 END) NOT BETWEEN ((((rt2.c3))<=((rt2.c3)))) AND (CAST(t0.c33 AS NUMERIC)))) ORDER BY rt2.c1 ASC, CAST(((rt2.c0)*(t0.c80)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.3170147247263152 THEN t0.c80 ELSE t0.c80 END) NOT BETWEEN ((((rt2.c3))<=((rt2.c3)))) AND (CAST(t0.c33 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt2 ORDER BY rt2.c1 ASC, CAST(((rt2.c0)*(t0.c80)) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt2 WHERE (((CASE WHEN 0.3170147247263152 THEN t0.c80 ELSE t0.c80 END) NOT BETWEEN ((((rt2.c3))<=((rt2.c3)))) AND (CAST(t0.c33 AS NUMERIC)))) ORDER BY rt2.c1 ASC, CAST(((rt2.c0)*(t0.c80)) AS TEXT);
SELECT * FROM rt2, rt0 CROSS JOIN vt0 ON ((((rt0.c3)OR(rt0.c2)))AND(rt2.c0)) COLLATE RTRIM CROSS JOIN t0 ON rt0.c1 CROSS JOIN rt1 ON ((((rt0.c3, rt2.c3, vt0.c1)) NOT BETWEEN ((rt2.c2, rt1.c2, x'')) AND ((rt0.c3, rt2.c0, rt2.c2))) IN (((rt2.c0)>>(rt1.c1)), ((vt0.c0) IS FALSE))) WHERE (CASE ((rt2.c0) IS FALSE)  WHEN (((rt0.c2)) BETWEEN ((t0.c80)) AND ((rt2.c3))) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN rt2.c1 THEN rt0.c3 END) AND ((((rt2.c2)) NOT BETWEEN ((t0.c80)) AND ((t0.c80)))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt2.c0) IS FALSE)  WHEN (((rt0.c2)) BETWEEN ((t0.c80)) AND ((rt2.c3))) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt2, rt0 CROSS JOIN vt0 ON ((((rt0.c3)OR(rt0.c2)))AND(rt2.c0)) COLLATE RTRIM CROSS JOIN t0 ON rt0.c1 CROSS JOIN rt1 ON ((((rt0.c3, rt2.c3, vt0.c1)) NOT BETWEEN ((rt2.c2, rt1.c2, x'')) AND ((rt0.c3, rt2.c0, rt2.c2))) IN (((rt2.c0)>>(rt1.c1)), ((vt0.c0) IS FALSE))) ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN rt2.c1 THEN rt0.c3 END) AND ((((rt2.c2)) NOT BETWEEN ((t0.c80)) AND ((t0.c80))))));
SELECT * FROM rt2, rt0 CROSS JOIN vt0 ON ((((rt0.c3)OR(rt0.c2)))AND(rt2.c0)) COLLATE RTRIM CROSS JOIN t0 ON rt0.c1 CROSS JOIN rt1 ON ((((rt0.c3, rt2.c3, vt0.c1)) NOT BETWEEN ((rt2.c2, rt1.c2, x'')) AND ((rt0.c3, rt2.c0, rt2.c2))) IN (((rt2.c0)>>(rt1.c1)), ((vt0.c0) IS FALSE))) WHERE (CASE ((rt2.c0) IS FALSE)  WHEN (((rt0.c2)) BETWEEN ((t0.c80)) AND ((rt2.c3))) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN rt2.c1 THEN rt0.c3 END) AND ((((rt2.c2)) NOT BETWEEN ((t0.c80)) AND ((t0.c80)))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt2.c0) IS FALSE)  WHEN (((rt0.c2)) BETWEEN ((t0.c80)) AND ((rt2.c3))) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt2, rt0 CROSS JOIN vt0 ON ((((rt0.c3)OR(rt0.c2)))AND(rt2.c0)) COLLATE RTRIM CROSS JOIN t0 ON rt0.c1 CROSS JOIN rt1 ON ((((rt0.c3, rt2.c3, vt0.c1)) NOT BETWEEN ((rt2.c2, rt1.c2, x'')) AND ((rt0.c3, rt2.c0, rt2.c2))) IN (((rt2.c0)>>(rt1.c1)), ((vt0.c0) IS FALSE))) ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN rt2.c1 THEN rt0.c3 END) AND ((((rt2.c2)) NOT BETWEEN ((t0.c80)) AND ((t0.c80))))));
SELECT * FROM rt2, rt0 CROSS JOIN vt0 ON ((((rt0.c3)OR(rt0.c2)))AND(rt2.c0)) COLLATE RTRIM CROSS JOIN t0 ON rt0.c1 CROSS JOIN rt1 ON ((((rt0.c3, rt2.c3, vt0.c1)) NOT BETWEEN ((rt2.c2, rt1.c2, x'')) AND ((rt0.c3, rt2.c0, rt2.c2))) IN (((rt2.c0)>>(rt1.c1)), ((vt0.c0) IS FALSE))) WHERE (CASE ((rt2.c0) IS FALSE)  WHEN (((rt0.c2)) BETWEEN ((t0.c80)) AND ((rt2.c3))) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN rt2.c1 THEN rt0.c3 END) AND ((((rt2.c2)) NOT BETWEEN ((t0.c80)) AND ((t0.c80)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c80 AS INTEGER)) BETWEEN (((t0.c33)<=(']m8'))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((t0.c33)AND(rt0.c2)))>>(((t0.c33)&(t0.c80)))), ((((((((((((t0.c80)AND(t0.c33)))OR(rt0.c1)))AND((((rt0.c1, rt0.c0, t0.c80))=((t0.c33, rt0.c1, rt0.c3))))))OR(((rt0.c0)GLOB(rt0.c3)))))AND(IFNULL(rt0.c3, rt0.c3))))OR((+ (t0.c80)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c80 AS INTEGER)) BETWEEN (((t0.c33)<=(']m8'))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c33)AND(rt0.c2)))>>(((t0.c33)&(t0.c80)))), ((((((((((((t0.c80)AND(t0.c33)))OR(rt0.c1)))AND((((rt0.c1, rt0.c0, t0.c80))==((t0.c33, rt0.c1, rt0.c3))))))OR(((rt0.c0)GLOB(rt0.c3)))))AND(IFNULL(rt0.c3, rt0.c3))))OR((+ (t0.c80)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c80 AS INTEGER)) BETWEEN (((t0.c33)<=(']m8'))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((t0.c33)AND(rt0.c2)))>>(((t0.c33)&(t0.c80)))), ((((((((((((t0.c80)AND(t0.c33)))OR(rt0.c1)))AND((((rt0.c1, rt0.c0, t0.c80))=((t0.c33, rt0.c1, rt0.c3))))))OR(((rt0.c0)GLOB(rt0.c3)))))AND(IFNULL(rt0.c3, rt0.c3))))OR((+ (t0.c80)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c80 AS INTEGER)) BETWEEN (((t0.c33)<=(']m8'))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c33)AND(rt0.c2)))>>(((t0.c33)&(t0.c80)))), ((((((((((((t0.c80)AND(t0.c33)))OR(rt0.c1)))AND((((rt0.c1, rt0.c0, t0.c80))==((t0.c33, rt0.c1, rt0.c3))))))OR(((rt0.c0)GLOB(rt0.c3)))))AND(IFNULL(rt0.c3, rt0.c3))))OR((+ (t0.c80)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c80 AS INTEGER)) BETWEEN (((t0.c33)<=(']m8'))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((t0.c33)AND(rt0.c2)))>>(((t0.c33)&(t0.c80)))), ((((((((((((t0.c80)AND(t0.c33)))OR(rt0.c1)))AND((((rt0.c1, rt0.c0, t0.c80))=((t0.c33, rt0.c1, rt0.c3))))))OR(((rt0.c0)GLOB(rt0.c3)))))AND(IFNULL(rt0.c3, rt0.c3))))OR((+ (t0.c80)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((+ (vt0.c1)))||(CAST(rt1.c1 AS REAL)))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))||(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY rt1.c1  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((+ (vt0.c1)))||(CAST(rt1.c1 AS REAL)))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))||(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY rt1.c1  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((+ (vt0.c1)))||(CAST(rt1.c1 AS REAL)))) ORDER BY rt1.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2, rt0, rt1, t0 WHERE (((((((t0.c33)OR(t0.c80)))AND(rt0.c0)))OR(((rt0.c0)*(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c33)OR(t0.c80)))AND(rt0.c0)))OR(((rt0.c0)*(rt1.c2))))) IS TRUE)  as count FROM rt2, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1, t0 WHERE (((((((t0.c33)OR(t0.c80)))AND(rt0.c0)))OR(((rt0.c0)*(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c33)OR(t0.c80)))AND(rt0.c0)))OR(((rt0.c0)*(rt1.c2))))) IS TRUE)  as count FROM rt2, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1, t0 WHERE (((((((t0.c33)OR(t0.c80)))AND(rt0.c0)))OR(((rt0.c0)*(rt1.c2)))));
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c2)-('1590052625')), (t0.c33 IN (t0.c80)), (~ (rt0.c2))))>(((((vt0.c0))<>((rt0.c2))), (NOT (rt0.c2)), ((t0.c33)LIKE(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)-('1590052625')), (t0.c33 IN (t0.c80)), (~ (rt0.c2))))>(((((vt0.c0))!=((rt0.c2))), (NOT (rt0.c2)), ((t0.c33)LIKE(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c2)-('1590052625')), (t0.c33 IN (t0.c80)), (~ (rt0.c2))))>(((((vt0.c0))<>((rt0.c2))), (NOT (rt0.c2)), ((t0.c33)LIKE(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)-('1590052625')), (t0.c33 IN (t0.c80)), (~ (rt0.c2))))>(((((vt0.c0))!=((rt0.c2))), (NOT (rt0.c2)), ((t0.c33)LIKE(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c2)-('1590052625')), (t0.c33 IN (t0.c80)), (~ (rt0.c2))))>(((((vt0.c0))<>((rt0.c2))), (NOT (rt0.c2)), ((t0.c33)LIKE(rt0.c2))))));
SELECT COUNT(*) FROM rt0, t0, rt1, rt2 WHERE ((('!!pTV') NOT BETWEEN (NULL) AND (x'468bcd5d')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('!!pTV') NOT BETWEEN (NULL) AND (x'468bcd5d')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, rt1, rt2);
SELECT COUNT(*) FROM rt0, t0, rt1, rt2 WHERE ((('!!pTV') NOT BETWEEN (NULL) AND (x'468bcd5d')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('!!pTV') NOT BETWEEN (NULL) AND (x'468bcd5d')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, rt1, rt2);
SELECT COUNT(*) FROM rt0, t0, rt1, rt2 WHERE ((('!!pTV') NOT BETWEEN (NULL) AND (x'468bcd5d')) COLLATE RTRIM);
SELECT * FROM vt0, rt0, rt1, t0, rt2 WHERE (((CASE ''  WHEN rt0.c2 THEN rt1.c0 WHEN NULL THEN rt0.c2 WHEN rt2.c3 THEN 'ri' END)>(CAST(0.9272662089171684 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE ''  WHEN rt0.c2 THEN rt1.c0 WHEN NULL THEN rt0.c2 WHEN rt2.c3 THEN 'ri' END)>(CAST(0.9272662089171684 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, rt1, t0, rt2);
SELECT * FROM vt0, rt0, rt1, t0, rt2 WHERE (((CASE ''  WHEN rt0.c2 THEN rt1.c0 WHEN NULL THEN rt0.c2 WHEN rt2.c3 THEN 'ri' END)>(CAST(0.9272662089171684 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE ''  WHEN rt0.c2 THEN rt1.c0 WHEN NULL THEN rt0.c2 WHEN rt2.c3 THEN 'ri' END)>(CAST(0.9272662089171684 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, rt1, t0, rt2);
SELECT * FROM vt0, rt0, rt1, t0, rt2 WHERE (((CASE ''  WHEN rt0.c2 THEN rt1.c0 WHEN NULL THEN rt0.c2 WHEN rt2.c3 THEN 'ri' END)>(CAST(0.9272662089171684 AS REAL))));
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((x'' IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) IS TRUE)) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((x'' IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) IS TRUE)) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE ((((x'' IN ())) IS TRUE));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt2 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt2.c1 END THEN (~ (rt2.c0)) WHEN ((rt0.c0) ISNULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt2.c1)) WHEN CAST(rt2.c2 AS BLOB) THEN 0.6393049198789461 ELSE LOWER(rt0.c1) END) ORDER BY CASE LAST_INSERT_ROWID()  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (rt2.c0) AND (rt0.c3)) ELSE (((rt2.c0))==((rt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt2.c1 END THEN (~ (rt2.c0)) WHEN ((rt0.c0) ISNULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt2.c1)) WHEN CAST(rt2.c2 AS BLOB) THEN 0.6393049198789461 ELSE LOWER(rt0.c1) END) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt2 ORDER BY CASE LAST_INSERT_ROWID()  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (rt2.c0) AND (rt0.c3)) ELSE (((rt2.c0))==((rt0.c0))) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt2 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt2.c1 END THEN (~ (rt2.c0)) WHEN ((rt0.c0) ISNULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt2.c1)) WHEN CAST(rt2.c2 AS BLOB) THEN 0.6393049198789461 ELSE LOWER(rt0.c1) END) ORDER BY CASE LAST_INSERT_ROWID()  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (rt2.c0) AND (rt0.c3)) ELSE (((rt2.c0))==((rt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt2.c1 END THEN (~ (rt2.c0)) WHEN ((rt0.c0) ISNULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt2.c1)) WHEN CAST(rt2.c2 AS BLOB) THEN 0.6393049198789461 ELSE LOWER(rt0.c1) END) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt2 ORDER BY CASE LAST_INSERT_ROWID()  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (rt2.c0) AND (rt0.c3)) ELSE (((rt2.c0))==((rt0.c0))) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt2 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt2.c1 END THEN (~ (rt2.c0)) WHEN ((rt0.c0) ISNULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt2.c1)) WHEN CAST(rt2.c2 AS BLOB) THEN 0.6393049198789461 ELSE LOWER(rt0.c1) END) ORDER BY CASE LAST_INSERT_ROWID()  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (rt2.c0) AND (rt0.c3)) ELSE (((rt2.c0))==((rt0.c0))) END ASC  NULLS FIRST;
SELECT * FROM rt2, t0 WHERE (((CAST(t0.c80 AS NUMERIC))<=(((t0.c80)=(rt2.c3))))) ORDER BY ((492057536)||((NOT (rt2.c3))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c80 AS NUMERIC))<=(((t0.c80)=(rt2.c3))))) IS TRUE)  as count FROM rt2, t0 ORDER BY ((492057536)||((NOT (rt2.c3)))));
SELECT * FROM rt2, t0 WHERE (((CAST(t0.c80 AS NUMERIC))<=(((t0.c80)=(rt2.c3))))) ORDER BY ((492057536)||((NOT (rt2.c3))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c80 AS NUMERIC))<=(((t0.c80)=(rt2.c3))))) IS TRUE)  as count FROM rt2, t0 ORDER BY ((492057536)||((NOT (rt2.c3)))));
SELECT * FROM rt2, t0 WHERE (((CAST(t0.c80 AS NUMERIC))<=(((t0.c80)=(rt2.c3))))) ORDER BY ((492057536)||((NOT (rt2.c3))));
SELECT * FROM t0 WHERE (CAST(HEX(DISTINCT t0.c80) AS INTEGER)) ORDER BY ((((t0.c33)*(t0.c33)))OR(t0.c80))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT t0.c80) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c33)*(t0.c33)))OR(t0.c80))  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(HEX(DISTINCT t0.c80) AS INTEGER)) ORDER BY ((((t0.c33)*(t0.c33)))OR(t0.c80))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT t0.c80) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c33)*(t0.c33)))OR(t0.c80))  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(HEX(DISTINCT t0.c80) AS INTEGER)) ORDER BY ((((t0.c33)*(t0.c33)))OR(t0.c80))  NULLS LAST;
SELECT * FROM vt0, rt2, rt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt2, rt0, rt1);
SELECT * FROM vt0, rt2, rt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt2, rt0, rt1);
SELECT * FROM vt0, rt2, rt0, rt1 WHERE (x'');
SELECT ALL * FROM vt0, rt2 INNER JOIN t0 ON ((((IFNULL(rt2.c0, vt0.c1))AND(rt2.c3)))AND((vt0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)<(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt2.c1)) ELSE ((((((((((((((((rt0.c1)AND(rt2.c2)))OR(rt2.c0)))AND(rt0.c1)))OR(rt2.c3)))AND(rt2.c2)))OR(vt0.c0)))AND(t0.c33)))OR(vt0.c0)) END WHERE (((((vt0.c0)OR(rt0.c1)))AND(((t0.c80) IS TRUE)))) ORDER BY t0.c80  NULLS FIRST, ((rt2.c0) NOT BETWEEN (CASE rt2.c2  WHEN t0.c33 THEN rt0.c0 END) AND (CASE -1250388407  WHEN rt0.c2 THEN t0.c80 WHEN rt0.c0 THEN rt0.c1 WHEN -4.03114106E8 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c1)))AND(((t0.c80) IS TRUE)))) IS TRUE)  as count FROM vt0, rt2 INNER JOIN t0 ON ((((IFNULL(rt2.c0, vt0.c1))AND(rt2.c3)))AND((vt0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)<(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt2.c1)) ELSE ((((((((((((((((rt0.c1)AND(rt2.c2)))OR(rt2.c0)))AND(rt0.c1)))OR(rt2.c3)))AND(rt2.c2)))OR(vt0.c0)))AND(t0.c33)))OR(vt0.c0)) END ORDER BY t0.c80  NULLS FIRST, ((rt2.c0) NOT BETWEEN (CASE rt2.c2  WHEN t0.c33 THEN rt0.c0 END) AND (CASE -1250388407  WHEN rt0.c2 THEN t0.c80 WHEN rt0.c0 THEN rt0.c1 WHEN -4.03114106E8 THEN vt0.c0 END)) ASC);
SELECT ALL * FROM vt0, rt2 INNER JOIN t0 ON ((((IFNULL(rt2.c0, vt0.c1))AND(rt2.c3)))AND((vt0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)<(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt2.c1)) ELSE ((((((((((((((((rt0.c1)AND(rt2.c2)))OR(rt2.c0)))AND(rt0.c1)))OR(rt2.c3)))AND(rt2.c2)))OR(vt0.c0)))AND(t0.c33)))OR(vt0.c0)) END WHERE (((((vt0.c0)OR(rt0.c1)))AND(((t0.c80) IS TRUE)))) ORDER BY t0.c80  NULLS FIRST, ((rt2.c0) NOT BETWEEN (CASE rt2.c2  WHEN t0.c33 THEN rt0.c0 END) AND (CASE -1250388407  WHEN rt0.c2 THEN t0.c80 WHEN rt0.c0 THEN rt0.c1 WHEN -4.03114106E8 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c1)))AND(((t0.c80) IS TRUE)))) IS TRUE)  as count FROM vt0, rt2 INNER JOIN t0 ON ((((IFNULL(rt2.c0, vt0.c1))AND(rt2.c3)))AND((vt0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)<(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt2.c1)) ELSE ((((((((((((((((rt0.c1)AND(rt2.c2)))OR(rt2.c0)))AND(rt0.c1)))OR(rt2.c3)))AND(rt2.c2)))OR(vt0.c0)))AND(t0.c33)))OR(vt0.c0)) END ORDER BY t0.c80  NULLS FIRST, ((rt2.c0) NOT BETWEEN (CASE rt2.c2  WHEN t0.c33 THEN rt0.c0 END) AND (CASE -1250388407  WHEN rt0.c2 THEN t0.c80 WHEN rt0.c0 THEN rt0.c1 WHEN -4.03114106E8 THEN vt0.c0 END)) ASC);
SELECT ALL * FROM vt0, rt2 INNER JOIN t0 ON ((((IFNULL(rt2.c0, vt0.c1))AND(rt2.c3)))AND((vt0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)<(vt0.c1)) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt2.c1)) ELSE ((((((((((((((((rt0.c1)AND(rt2.c2)))OR(rt2.c0)))AND(rt0.c1)))OR(rt2.c3)))AND(rt2.c2)))OR(vt0.c0)))AND(t0.c33)))OR(vt0.c0)) END WHERE (((((vt0.c0)OR(rt0.c1)))AND(((t0.c80) IS TRUE)))) ORDER BY t0.c80  NULLS FIRST, ((rt2.c0) NOT BETWEEN (CASE rt2.c2  WHEN t0.c33 THEN rt0.c0 END) AND (CASE -1250388407  WHEN rt0.c2 THEN t0.c80 WHEN rt0.c0 THEN rt0.c1 WHEN -4.03114106E8 THEN vt0.c0 END)) ASC;
SELECT ALL * FROM rt1, t0, vt0, rt2 WHERE (CASE rt2.c0 COLLATE BINARY  WHEN ((((((((rt1.c1)AND(t0.c33)))AND(rt2.c0)))AND(rt2.c3)))OR(rt1.c1)) THEN CAST(rt2.c0 AS TEXT) WHEN rt1.c1 THEN rt1.c1 WHEN ((rt2.c1)<=('U&G_')) THEN x'' ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt2.c0 COLLATE BINARY  WHEN ((((((((rt1.c1)AND(t0.c33)))AND(rt2.c0)))AND(rt2.c3)))OR(rt1.c1)) THEN CAST(rt2.c0 AS TEXT) WHEN rt1.c1 THEN rt1.c1 WHEN ((rt2.c1)<=('U&G_')) THEN x'' ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM rt1, t0, vt0, rt2);
SELECT ALL * FROM rt1, t0, vt0, rt2 WHERE (CASE rt2.c0 COLLATE BINARY  WHEN ((((((((rt1.c1)AND(t0.c33)))AND(rt2.c0)))AND(rt2.c3)))OR(rt1.c1)) THEN CAST(rt2.c0 AS TEXT) WHEN rt1.c1 THEN rt1.c1 WHEN ((rt2.c1)<=('U&G_')) THEN x'' ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt2.c0 COLLATE BINARY  WHEN ((((((((rt1.c1)AND(t0.c33)))AND(rt2.c0)))AND(rt2.c3)))OR(rt1.c1)) THEN CAST(rt2.c0 AS TEXT) WHEN rt1.c1 THEN rt1.c1 WHEN ((rt2.c1)<=('U&G_')) THEN x'' ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM rt1, t0, vt0, rt2);
SELECT ALL * FROM rt1, t0, vt0, rt2 WHERE (CASE rt2.c0 COLLATE BINARY  WHEN ((((((((rt1.c1)AND(t0.c33)))AND(rt2.c0)))AND(rt2.c3)))OR(rt1.c1)) THEN CAST(rt2.c0 AS TEXT) WHEN rt1.c1 THEN rt1.c1 WHEN ((rt2.c1)<=('U&G_')) THEN x'' ELSE (vt0.c1 IN ()) END);
SELECT * FROM rt2, rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER)) ORDER BY ((rt2.c0) NOT NULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((rt2.c0) NOT NULL) COLLATE NOCASE ASC);
SELECT * FROM rt2, rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER)) ORDER BY ((rt2.c0) NOT NULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt2, rt1 ORDER BY ((rt2.c0) NOT NULL) COLLATE NOCASE ASC);
SELECT * FROM rt2, rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER)) ORDER BY ((rt2.c0) NOT NULL) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM rt0, t0, rt2, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, t0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt2, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, t0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt2, rt1 WHERE (rt1.c2);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (('-1250388407' COLLATE BINARY) NOT BETWEEN (((rt1.c2) BETWEEN (t0.c80) AND (rt1.c1))) AND ((('230051454')>(t0.c80)))) INNER JOIN rt1 ON (((vt0.c1)IS NOT(rt1.c1)) IN ()) WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (('-1250388407' COLLATE BINARY) NOT BETWEEN (((rt1.c2) BETWEEN (t0.c80) AND (rt1.c1))) AND ((('230051454')>(t0.c80)))) INNER JOIN rt1 ON (((vt0.c1)IS NOT(rt1.c1)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (('-1250388407' COLLATE BINARY) NOT BETWEEN (((rt1.c2) BETWEEN (t0.c80) AND (rt1.c1))) AND ((('230051454')>(t0.c80)))) INNER JOIN rt1 ON (((vt0.c1)IS NOT(rt1.c1)) IN ()) WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (('-1250388407' COLLATE BINARY) NOT BETWEEN (((rt1.c2) BETWEEN (t0.c80) AND (rt1.c1))) AND ((('230051454')>(t0.c80)))) INNER JOIN rt1 ON (((vt0.c1)IS NOT(rt1.c1)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (('-1250388407' COLLATE BINARY) NOT BETWEEN (((rt1.c2) BETWEEN (t0.c80) AND (rt1.c1))) AND ((('230051454')>(t0.c80)))) INNER JOIN rt1 ON (((vt0.c1)IS NOT(rt1.c1)) IN ()) WHERE (((NULL) ISNULL));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt0.c1)))AND(x'')))OR('-410612407')))OR(rt0.c2)) COLLATE NOCASE WHERE (((((rt0.c0)IS NOT(vt0.c1)))IS(IFNULL(vt0.c0, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS NOT(vt0.c1)))IS(IFNULL(vt0.c0, rt0.c3)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt0.c1)))AND(x'')))OR('-410612407')))OR(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt0.c1)))AND(x'')))OR('-410612407')))OR(rt0.c2)) COLLATE NOCASE WHERE (((((rt0.c0)IS NOT(vt0.c1)))IS(IFNULL(vt0.c0, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS NOT(vt0.c1)))IS(IFNULL(vt0.c0, rt0.c3)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt0.c1)))AND(x'')))OR('-410612407')))OR(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt0.c1)))AND(x'')))OR('-410612407')))OR(rt0.c2)) COLLATE NOCASE WHERE (((((rt0.c0)IS NOT(vt0.c1)))IS(IFNULL(vt0.c0, rt0.c3))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((((x'')OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c2) IS TRUE))AND((rt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c2) IS TRUE))AND((rt1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((((x'')OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c2) IS TRUE))AND((rt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c2) IS TRUE))AND((rt1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (0X7cf95adf);
SELECT SUM(count) FROM (SELECT ALL ((0x7cf95adf) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (0X7cf95adf);
SELECT SUM(count) FROM (SELECT ALL ((0x7cf95adf) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (0X7cf95adf);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOTNULL)))!=((CAST(rt0.c2 AS BLOB))))) ORDER BY (((((((((rt0.c2 IN ()))OR((rt0.c0 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c3))))))AND(((rt0.c3) ISNULL))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOTNULL)))!=((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2 IN ()))OR((rt0.c0 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c3))))))AND(((rt0.c3) ISNULL))))OR(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOTNULL)))!=((CAST(rt0.c2 AS BLOB))))) ORDER BY (((((((((rt0.c2 IN ()))OR((rt0.c0 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c3))))))AND(((rt0.c3) ISNULL))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOTNULL)))!=((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2 IN ()))OR((rt0.c0 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c3))))))AND(((rt0.c3) ISNULL))))OR(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOTNULL)))!=((CAST(rt0.c2 AS BLOB))))) ORDER BY (((((((((rt0.c2 IN ()))OR((rt0.c0 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c3))))))AND(((rt0.c3) ISNULL))))OR(NULL))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))>=(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c0))>=(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))>=(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c0))>=(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))>=(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0, rt0 WHERE (((SUBSTR(vt0.c1, rt0.c3))<>(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY ((vt0.c0 COLLATE NOCASE)<=((NOT (rt0.c0)))) ASC, (((NOT (rt0.c2)))-(((rt0.c0) IS TRUE))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c1, rt0.c3))!=(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<=((NOT (rt0.c0)))) ASC, (((NOT (rt0.c2)))-(((rt0.c0) IS TRUE))), NULL DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((SUBSTR(vt0.c1, rt0.c3))<>(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY ((vt0.c0 COLLATE NOCASE)<=((NOT (rt0.c0)))) ASC, (((NOT (rt0.c2)))-(((rt0.c0) IS TRUE))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c1, rt0.c3))!=(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<=((NOT (rt0.c0)))) ASC, (((NOT (rt0.c2)))-(((rt0.c0) IS TRUE))), NULL DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((SUBSTR(vt0.c1, rt0.c3))<>(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY ((vt0.c0 COLLATE NOCASE)<=((NOT (rt0.c0)))) ASC, (((NOT (rt0.c2)))-(((rt0.c0) IS TRUE))), NULL DESC  NULLS LAST;
SELECT * FROM rt2 CROSS JOIN rt0 ON (((((((rt0.c3, rt2.c0, rt0.c1))>=((rt0.c2, t0.c80, rt2.c1))))OR(((rt2.c3)AND(rt0.c0)))))OR((rt0.c3 IN ()))) FULL OUTER JOIN t0 ON ((((((t0.c80) ISNULL))OR(((rt0.c2)OR(t0.c80)))))OR(((NULL)>=(rt0.c3)))) WHERE ((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c3)))OR(rt2.c1)), rt2.c2 COLLATE RTRIM, ((t0.c33) BETWEEN (rt2.c3) AND (rt2.c1)))) AND ((((((rt0.c0)OR(t0.c33)))AND(x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)), CAST(rt2.c3 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c3)))OR(rt2.c1)), rt2.c2 COLLATE RTRIM, ((t0.c33) BETWEEN (rt2.c3) AND (rt2.c1)))) AND ((((((rt0.c0)OR(t0.c33)))AND(x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)), CAST(rt2.c3 AS INTEGER))))) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON (((((((rt0.c3, rt2.c0, rt0.c1))>=((rt0.c2, t0.c80, rt2.c1))))OR(((rt2.c3)AND(rt0.c0)))))OR((rt0.c3 IN ()))) FULL OUTER JOIN t0 ON ((((((t0.c80) ISNULL))OR(((rt0.c2)OR(t0.c80)))))OR(((NULL)>=(rt0.c3)))));
SELECT * FROM rt2 CROSS JOIN rt0 ON (((((((rt0.c3, rt2.c0, rt0.c1))>=((rt0.c2, t0.c80, rt2.c1))))OR(((rt2.c3)AND(rt0.c0)))))OR((rt0.c3 IN ()))) FULL OUTER JOIN t0 ON ((((((t0.c80) ISNULL))OR(((rt0.c2)OR(t0.c80)))))OR(((NULL)>=(rt0.c3)))) WHERE ((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c3)))OR(rt2.c1)), rt2.c2 COLLATE RTRIM, ((t0.c33) BETWEEN (rt2.c3) AND (rt2.c1)))) AND ((((((rt0.c0)OR(t0.c33)))AND(x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)), CAST(rt2.c3 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c3)))OR(rt2.c1)), rt2.c2 COLLATE RTRIM, ((t0.c33) BETWEEN (rt2.c3) AND (rt2.c1)))) AND ((((((rt0.c0)OR(t0.c33)))AND(x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)), CAST(rt2.c3 AS INTEGER))))) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON (((((((rt0.c3, rt2.c0, rt0.c1))>=((rt0.c2, t0.c80, rt2.c1))))OR(((rt2.c3)AND(rt0.c0)))))OR((rt0.c3 IN ()))) FULL OUTER JOIN t0 ON ((((((t0.c80) ISNULL))OR(((rt0.c2)OR(t0.c80)))))OR(((NULL)>=(rt0.c3)))));
SELECT * FROM rt0, vt0, rt2, rt1, t0 WHERE (UPPER(DISTINCT STRFTIME(rt2.c3, vt0.c0, rt1.c2))) ORDER BY (NOT ((((t0.c33, rt2.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, 0.36729940730214017, rt1.c2)) AND ((rt2.c3, rt0.c1, rt2.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT STRFTIME(rt2.c3, vt0.c0, rt1.c2))) IS TRUE)  as count FROM rt0, vt0, rt2, rt1, t0 ORDER BY (NOT ((((t0.c33, rt2.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, 0.36729940730214017, rt1.c2)) AND ((rt2.c3, rt0.c1, rt2.c2))))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, rt2, rt1, t0 WHERE (UPPER(DISTINCT STRFTIME(rt2.c3, vt0.c0, rt1.c2))) ORDER BY (NOT ((((t0.c33, rt2.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, 0.36729940730214017, rt1.c2)) AND ((rt2.c3, rt0.c1, rt2.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT STRFTIME(rt2.c3, vt0.c0, rt1.c2))) IS TRUE)  as count FROM rt0, vt0, rt2, rt1, t0 ORDER BY (NOT ((((t0.c33, rt2.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, 0.36729940730214017, rt1.c2)) AND ((rt2.c3, rt0.c1, rt2.c2))))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, rt2, rt1, t0 WHERE (UPPER(DISTINCT STRFTIME(rt2.c3, vt0.c0, rt1.c2))) ORDER BY (NOT ((((t0.c33, rt2.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, 0.36729940730214017, rt1.c2)) AND ((rt2.c3, rt0.c1, rt2.c2))))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY LOWER(DISTINCT x'48fd')  NULLS FIRST, (- (rt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY LOWER(DISTINCT x'48fd')  NULLS FIRST, (- (rt1.c0 COLLATE BINARY)));
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY LOWER(DISTINCT x'48fd')  NULLS FIRST, (- (rt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY LOWER(DISTINCT x'48fd')  NULLS FIRST, (- (rt1.c0 COLLATE BINARY)));
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY LOWER(DISTINCT x'48fd')  NULLS FIRST, (- (rt1.c0 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((0.4161424018393297)) BETWEEN ((rt0.c3)) AND ((rt1.c1))))%(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.4161424018393297)) BETWEEN ((rt0.c3)) AND ((rt1.c1))))%(rt1.c2))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((0.4161424018393297)) BETWEEN ((rt0.c3)) AND ((rt1.c1))))%(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.4161424018393297)) BETWEEN ((rt0.c3)) AND ((rt1.c1))))%(rt1.c2))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((0.4161424018393297)) BETWEEN ((rt0.c3)) AND ((rt1.c1))))%(rt1.c2)));
SELECT ALL * FROM rt1, t0, rt2 WHERE (rtreenode(((rt2.c3) BETWEEN ('d*|nXG~') AND (rt2.c2)), (((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c2)))));
SELECT SUM(count) FROM (SELECT ((rtreenode(((rt2.c3) BETWEEN ('d*|nXG~') AND (rt2.c2)), (((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c2))))) IS TRUE)  as count FROM rt1, t0, rt2);
SELECT ALL * FROM rt1, t0, rt2 WHERE (rtreenode(((rt2.c3) BETWEEN ('d*|nXG~') AND (rt2.c2)), (((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c2)))));
SELECT SUM(count) FROM (SELECT ((rtreenode(((rt2.c3) BETWEEN ('d*|nXG~') AND (rt2.c2)), (((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c2))))) IS TRUE)  as count FROM rt1, t0, rt2);
SELECT ALL * FROM rt1, t0, rt2 WHERE (rtreenode(((rt2.c3) BETWEEN ('d*|nXG~') AND (rt2.c2)), (((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c2)))));
SELECT * FROM rt2, vt0, t0 LEFT OUTER JOIN rt0 ON (('H2X{w!')<(vt0.c0 COLLATE NOCASE)) INNER JOIN rt1 ON (- (((rt0.c1)&(rt1.c1)))) WHERE (((((((rt2.c3)OR(rt0.c3)))AND(t0.c33))) NOT BETWEEN ((+ (rt0.c3))) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY NULLIF(DISTINCT ((vt0.c1)*(rt0.c0)), (('403536855')*(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt2.c3)OR(rt0.c3)))AND(t0.c33))) NOT BETWEEN ((+ (rt0.c3))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt2, vt0, t0 LEFT OUTER JOIN rt0 ON (('H2X{w!')<(vt0.c0 COLLATE NOCASE)) INNER JOIN rt1 ON (- (((rt0.c1)&(rt1.c1)))) ORDER BY NULLIF(DISTINCT ((vt0.c1)*(rt0.c0)), (('403536855')*(rt0.c3))) DESC);
SELECT * FROM rt2, vt0, t0 LEFT OUTER JOIN rt0 ON (('H2X{w!')<(vt0.c0 COLLATE NOCASE)) INNER JOIN rt1 ON (- (((rt0.c1)&(rt1.c1)))) WHERE (((((((rt2.c3)OR(rt0.c3)))AND(t0.c33))) NOT BETWEEN ((+ (rt0.c3))) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY NULLIF(DISTINCT ((vt0.c1)*(rt0.c0)), (('403536855')*(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt2.c3)OR(rt0.c3)))AND(t0.c33))) NOT BETWEEN ((+ (rt0.c3))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt2, vt0, t0 LEFT OUTER JOIN rt0 ON (('H2X{w!')<(vt0.c0 COLLATE NOCASE)) INNER JOIN rt1 ON (- (((rt0.c1)&(rt1.c1)))) ORDER BY NULLIF(DISTINCT ((vt0.c1)*(rt0.c0)), (('403536855')*(rt0.c3))) DESC);
SELECT * FROM rt2, vt0, t0 LEFT OUTER JOIN rt0 ON (('H2X{w!')<(vt0.c0 COLLATE NOCASE)) INNER JOIN rt1 ON (- (((rt0.c1)&(rt1.c1)))) WHERE (((((((rt2.c3)OR(rt0.c3)))AND(t0.c33))) NOT BETWEEN ((+ (rt0.c3))) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY NULLIF(DISTINCT ((vt0.c1)*(rt0.c0)), (('403536855')*(rt0.c3))) DESC;
SELECT ALL * FROM rt1, rt0 INNER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c33)), ((rt0.c3) IS FALSE), ((rt1.c1)>>(rt1.c1))))==(((t0.c80 IN ()), (rt0.c2 IN ()), ((t0.c33) BETWEEN (rt1.c2) AND (rt1.c0))))) WHERE ('-254648891') ORDER BY IFNULL(DISTINCT CAST(t0.c80 AS NUMERIC), (((rt0.c1))<>((rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('-254648891') IS TRUE)  as count FROM rt1, rt0 INNER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c33)), ((rt0.c3) IS FALSE), ((rt1.c1)>>(rt1.c1))))==(((t0.c80 IN ()), (rt0.c2 IN ()), ((t0.c33) BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY IFNULL(DISTINCT CAST(t0.c80 AS NUMERIC), (((rt0.c1))<>((rt0.c0)))));
SELECT ALL * FROM rt1, rt0 INNER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c33)), ((rt0.c3) IS FALSE), ((rt1.c1)>>(rt1.c1))))==(((t0.c80 IN ()), (rt0.c2 IN ()), ((t0.c33) BETWEEN (rt1.c2) AND (rt1.c0))))) WHERE ('-254648891') ORDER BY IFNULL(DISTINCT CAST(t0.c80 AS NUMERIC), (((rt0.c1))<>((rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('-254648891') IS TRUE)  as count FROM rt1, rt0 INNER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c33)), ((rt0.c3) IS FALSE), ((rt1.c1)>>(rt1.c1))))==(((t0.c80 IN ()), (rt0.c2 IN ()), ((t0.c33) BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY IFNULL(DISTINCT CAST(t0.c80 AS NUMERIC), (((rt0.c1))<>((rt0.c0)))));
SELECT ALL * FROM rt1, rt0 INNER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c33)), ((rt0.c3) IS FALSE), ((rt1.c1)>>(rt1.c1))))==(((t0.c80 IN ()), (rt0.c2 IN ()), ((t0.c33) BETWEEN (rt1.c2) AND (rt1.c0))))) WHERE ('-254648891') ORDER BY IFNULL(DISTINCT CAST(t0.c80 AS NUMERIC), (((rt0.c1))<>((rt0.c0))));
SELECT ALL COUNT(*) FROM rt2 WHERE ((rt2.c3 COLLATE BINARY IN ())) ORDER BY (x'' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt2.c3 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt2 ORDER BY (x'' IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 WHERE ((rt2.c3 COLLATE BINARY IN ())) ORDER BY (x'' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt2.c3 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt2 ORDER BY (x'' IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 WHERE ((rt2.c3 COLLATE BINARY IN ())) ORDER BY (x'' IN ()) ASC  NULLS FIRST;
SELECT * FROM rt1, t0, rt2 WHERE ((((((rt2.c3))<((t0.c80)))) BETWEEN (((rt2.c0) ISNULL)) AND (rt2.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt2.c3))<((t0.c80)))) BETWEEN (((rt2.c0) ISNULL)) AND (rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, rt2);
SELECT * FROM rt1, t0, rt2 WHERE ((((((rt2.c3))<((t0.c80)))) BETWEEN (((rt2.c0) ISNULL)) AND (rt2.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt2.c3))<((t0.c80)))) BETWEEN (((rt2.c0) ISNULL)) AND (rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, t0, rt2);
SELECT * FROM rt1, t0, rt2 WHERE ((((((rt2.c3))<((t0.c80)))) BETWEEN (((rt2.c0) ISNULL)) AND (rt2.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, rt1 WHERE (CAST((((t0.c33)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) AS NUMERIC)) ORDER BY ((((rt1.c2)AND(t0.c80)))OR(rt1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c33)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c2)AND(t0.c80)))OR(rt1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CAST((((t0.c33)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) AS NUMERIC)) ORDER BY ((((rt1.c2)AND(t0.c80)))OR(rt1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c33)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c2)AND(t0.c80)))OR(rt1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CAST((((t0.c33)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) AS NUMERIC)) ORDER BY ((((rt1.c2)AND(t0.c80)))OR(rt1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CHANGES() INNER JOIN rt1 ON ((((vt0.c1) ISNULL))+(((t0.c80) NOTNULL))) LEFT OUTER JOIN rt2 ON (((rt0.c2)) BETWEEN (((('-341959374') BETWEEN (vt0.c0) AND (rt2.c1)))) AND ((LOWER(vt0.c0)))) CROSS JOIN vt0 ON CAST(rt2.c2 COLLATE RTRIM AS BLOB) WHERE ((((rt1.c0)) BETWEEN (((rt1.c1 IN ('-1931719661')))) AND ((t0.c33))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((rt1.c1 IN ('-1931719661')))) AND ((t0.c33)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CHANGES() INNER JOIN rt1 ON ((((vt0.c1) ISNULL))+(((t0.c80) NOTNULL))) LEFT OUTER JOIN rt2 ON (((rt0.c2)) BETWEEN (((('-341959374') BETWEEN (vt0.c0) AND (rt2.c1)))) AND ((LOWER(vt0.c0)))) CROSS JOIN vt0 ON CAST(rt2.c2 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CHANGES() INNER JOIN rt1 ON ((((vt0.c1) ISNULL))+(((t0.c80) NOTNULL))) LEFT OUTER JOIN rt2 ON (((rt0.c2)) BETWEEN (((('-341959374') BETWEEN (vt0.c0) AND (rt2.c1)))) AND ((LOWER(vt0.c0)))) CROSS JOIN vt0 ON CAST(rt2.c2 COLLATE RTRIM AS BLOB) WHERE ((((rt1.c0)) BETWEEN (((rt1.c1 IN ('-1931719661')))) AND ((t0.c33))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((rt1.c1 IN ('-1931719661')))) AND ((t0.c33)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CHANGES() INNER JOIN rt1 ON ((((vt0.c1) ISNULL))+(((t0.c80) NOTNULL))) LEFT OUTER JOIN rt2 ON (((rt0.c2)) BETWEEN (((('-341959374') BETWEEN (vt0.c0) AND (rt2.c1)))) AND ((LOWER(vt0.c0)))) CROSS JOIN vt0 ON CAST(rt2.c2 COLLATE RTRIM AS BLOB));
SELECT * FROM rt1, t0, vt0 CROSS JOIN rt2 ON (- ((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))) WHERE (rt1.c2) ORDER BY ((DATETIME(rt2.c0, t0.c33, t0.c33))<>(rt2.c3))  NULLS LAST, (((NOT (rt1.c1))) BETWEEN (((rt2.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN rt2.c1 THEN NULL ELSE rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, t0, vt0 CROSS JOIN rt2 ON (- ((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))) ORDER BY ((DATETIME(rt2.c0, t0.c33, t0.c33))!=(rt2.c3))  NULLS LAST, (((NOT (rt1.c1))) BETWEEN (((rt2.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN rt2.c1 THEN NULL ELSE rt1.c2 END)) DESC);
SELECT * FROM rt1, t0, vt0 CROSS JOIN rt2 ON (- ((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))) WHERE (rt1.c2) ORDER BY ((DATETIME(rt2.c0, t0.c33, t0.c33))<>(rt2.c3))  NULLS LAST, (((NOT (rt1.c1))) BETWEEN (((rt2.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN rt2.c1 THEN NULL ELSE rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, t0, vt0 CROSS JOIN rt2 ON (- ((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))) ORDER BY ((DATETIME(rt2.c0, t0.c33, t0.c33))!=(rt2.c3))  NULLS LAST, (((NOT (rt1.c1))) BETWEEN (((rt2.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN rt2.c1 THEN NULL ELSE rt1.c2 END)) DESC);
SELECT * FROM rt1, t0, vt0 CROSS JOIN rt2 ON (- ((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))) WHERE (rt1.c2) ORDER BY ((DATETIME(rt2.c0, t0.c33, t0.c33))<>(rt2.c3))  NULLS LAST, (((NOT (rt1.c1))) BETWEEN (((rt2.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN rt2.c1 THEN NULL ELSE rt1.c2 END)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'778a' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'778a' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'778a' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'778a' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'778a' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) END;
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c80 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c80 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c80 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c80 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c80 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt2.c2 END THEN ((rt0.c3) IS FALSE) WHEN NULLIF(DISTINCT 'F&', rt2.c0) THEN (~ (rt2.c2)) WHEN CASE rt2.c1  WHEN rt0.c0 THEN rt2.c3 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN NULL END THEN CAST(rt1.c0 AS BLOB) ELSE ((((rt0.c0)AND(rt2.c2)))OR(rt1.c1)) END WHERE (((TRIM(rt0.c3, rt1.c1))>(CASE WHEN rt0.c2 THEN 0.9394834356357779 ELSE rt0.c0 END))) ORDER BY (((rt0.c3)>=(rt0.c3)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c3, rt1.c1))>(CASE WHEN rt0.c2 THEN 0.9394834356357779 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt2.c2 END THEN ((rt0.c3) IS FALSE) WHEN NULLIF(DISTINCT 'F&', rt2.c0) THEN (~ (rt2.c2)) WHEN CASE rt2.c1  WHEN rt0.c0 THEN rt2.c3 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN NULL END THEN CAST(rt1.c0 AS BLOB) ELSE ((((rt0.c0)AND(rt2.c2)))OR(rt1.c1)) END ORDER BY (((rt0.c3)>=(rt0.c3)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt2.c2 END THEN ((rt0.c3) IS FALSE) WHEN NULLIF(DISTINCT 'F&', rt2.c0) THEN (~ (rt2.c2)) WHEN CASE rt2.c1  WHEN rt0.c0 THEN rt2.c3 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN NULL END THEN CAST(rt1.c0 AS BLOB) ELSE ((((rt0.c0)AND(rt2.c2)))OR(rt1.c1)) END WHERE (((TRIM(rt0.c3, rt1.c1))>(CASE WHEN rt0.c2 THEN 0.9394834356357779 ELSE rt0.c0 END))) ORDER BY (((rt0.c3)>=(rt0.c3)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c3, rt1.c1))>(CASE WHEN rt0.c2 THEN 0.9394834356357779 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt2.c2 END THEN ((rt0.c3) IS FALSE) WHEN NULLIF(DISTINCT 'F&', rt2.c0) THEN (~ (rt2.c2)) WHEN CASE rt2.c1  WHEN rt0.c0 THEN rt2.c3 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN NULL END THEN CAST(rt1.c0 AS BLOB) ELSE ((((rt0.c0)AND(rt2.c2)))OR(rt1.c1)) END ORDER BY (((rt0.c3)>=(rt0.c3)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt2.c2 END THEN ((rt0.c3) IS FALSE) WHEN NULLIF(DISTINCT 'F&', rt2.c0) THEN (~ (rt2.c2)) WHEN CASE rt2.c1  WHEN rt0.c0 THEN rt2.c3 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN NULL END THEN CAST(rt1.c0 AS BLOB) ELSE ((((rt0.c0)AND(rt2.c2)))OR(rt1.c1)) END WHERE (((TRIM(rt0.c3, rt1.c1))>(CASE WHEN rt0.c2 THEN 0.9394834356357779 ELSE rt0.c0 END))) ORDER BY (((rt0.c3)>=(rt0.c3)) IN ()) ASC;
SELECT COUNT(*) FROM rt2, rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt2.c1 ELSE rt0.c1 END)OR(((rt2.c0)<<(rt0.c2)))))OR(rt2.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c3 THEN rt2.c1 ELSE rt0.c1 END)OR(((rt2.c0)<<(rt0.c2)))))OR(rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt2.c1 ELSE rt0.c1 END)OR(((rt2.c0)<<(rt0.c2)))))OR(rt2.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c3 THEN rt2.c1 ELSE rt0.c1 END)OR(((rt2.c0)<<(rt0.c2)))))OR(rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt2.c1 ELSE rt0.c1 END)OR(((rt2.c0)<<(rt0.c2)))))OR(rt2.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))AND((((vt0.c0, t0.c80, t0.c33, vt0.c0, vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, 0.4047315947712782, vt0.c1, vt0.c1)) AND ((0Xfffffffff12b63d9, vt0.c0, vt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)GLOB(t0.c33)))) RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((0.929914591468645)AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((0.929914591468645)AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))AND((((vt0.c0, t0.c80, t0.c33, vt0.c0, vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, 0.4047315947712782, vt0.c1, vt0.c1)) AND ((0Xfffffffff12b63d9, vt0.c0, vt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)GLOB(t0.c33)))) RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON rt1.c0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))AND((((vt0.c0, t0.c80, t0.c33, vt0.c0, vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, 0.4047315947712782, vt0.c1, vt0.c1)) AND ((0Xfffffffff12b63d9, vt0.c0, vt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)GLOB(t0.c33)))) RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((0.929914591468645)AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((0.929914591468645)AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))AND((((vt0.c0, t0.c80, t0.c33, vt0.c0, vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, 0.4047315947712782, vt0.c1, vt0.c1)) AND ((0Xfffffffff12b63d9, vt0.c0, vt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)GLOB(t0.c33)))) RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON rt1.c0);
SELECT * FROM rt0, rt2, rt1 WHERE ((((rt2.c2, rt1.c1, rt1.c0)) BETWEEN ((rt2.c0, HEX(DISTINCT rt1.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c0) BETWEEN (rt2.c2) AND (rt0.c1)), TRIM(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2, rt1.c1, rt1.c0)) BETWEEN ((rt2.c0, HEX(DISTINCT rt1.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c0) BETWEEN (rt2.c2) AND (rt0.c1)), TRIM(rt0.c3))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT * FROM rt0, rt2, rt1 WHERE ((((rt2.c2, rt1.c1, rt1.c0)) BETWEEN ((rt2.c0, HEX(DISTINCT rt1.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c0) BETWEEN (rt2.c2) AND (rt0.c1)), TRIM(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2, rt1.c1, rt1.c0)) BETWEEN ((rt2.c0, HEX(DISTINCT rt1.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c0) BETWEEN (rt2.c2) AND (rt0.c1)), TRIM(rt0.c3))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT * FROM rt0, rt2, rt1 WHERE ((((rt2.c2, rt1.c1, rt1.c0)) BETWEEN ((rt2.c0, HEX(DISTINCT rt1.c0), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c0) BETWEEN (rt2.c2) AND (rt0.c1)), TRIM(rt0.c3)))));
SELECT COUNT(*) FROM rt2 NATURAL JOIN rt1 WHERE (((rt1.c0)||(((rt1.c2)>=(rt1.c2))))) ORDER BY (((+ (rt2.c3)))GLOB(CAST(rt2.c3 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)||(((rt1.c2)>=(rt1.c2))))) IS TRUE)  as count FROM rt2 NATURAL JOIN rt1 ORDER BY (((+ (rt2.c3)))GLOB(CAST(rt2.c3 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt2 NATURAL JOIN rt1 WHERE (((rt1.c0)||(((rt1.c2)>=(rt1.c2))))) ORDER BY (((+ (rt2.c3)))GLOB(CAST(rt2.c3 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)||(((rt1.c2)>=(rt1.c2))))) IS TRUE)  as count FROM rt2 NATURAL JOIN rt1 ORDER BY (((+ (rt2.c3)))GLOB(CAST(rt2.c3 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt2 NATURAL JOIN rt1 WHERE (((rt1.c0)||(((rt1.c2)>=(rt1.c2))))) ORDER BY (((+ (rt2.c3)))GLOB(CAST(rt2.c3 AS BLOB))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt2, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, rt2, rt0);
SELECT COUNT(*) FROM t0, rt2, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, rt2, rt0);
SELECT COUNT(*) FROM t0, rt2, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL * FROM rt2, rt1, rt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt2, rt1, rt0, t0);
SELECT ALL * FROM rt2, rt1, rt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt2, rt1, rt0, t0);
SELECT ALL * FROM rt2, rt1, rt0, t0 WHERE (rt0.c2);
SELECT COUNT(*) FROM t0, rt2, rt1, rt0 WHERE (((CASE rt0.c0  WHEN rt2.c2 THEN rt0.c3 ELSE t0.c80 END) NOT BETWEEN (CASE rt0.c1  WHEN rt2.c0 THEN rt1.c1 END) AND (CASE '1548976489'  WHEN 971380546 THEN rt0.c2 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt2.c2 THEN rt0.c3 ELSE t0.c80 END) NOT BETWEEN (CASE rt0.c1  WHEN rt2.c0 THEN rt1.c1 END) AND (CASE '1548976489'  WHEN 971380546 THEN rt0.c2 ELSE rt1.c1 END))) IS TRUE)  as count FROM t0, rt2, rt1, rt0);
SELECT COUNT(*) FROM t0, rt2, rt1, rt0 WHERE (((CASE rt0.c0  WHEN rt2.c2 THEN rt0.c3 ELSE t0.c80 END) NOT BETWEEN (CASE rt0.c1  WHEN rt2.c0 THEN rt1.c1 END) AND (CASE '1548976489'  WHEN 971380546 THEN rt0.c2 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt2.c2 THEN rt0.c3 ELSE t0.c80 END) NOT BETWEEN (CASE rt0.c1  WHEN rt2.c0 THEN rt1.c1 END) AND (CASE '1548976489'  WHEN 971380546 THEN rt0.c2 ELSE rt1.c1 END))) IS TRUE)  as count FROM t0, rt2, rt1, rt0);
SELECT COUNT(*) FROM t0, rt2, rt1, rt0 WHERE (((CASE rt0.c0  WHEN rt2.c2 THEN rt0.c3 ELSE t0.c80 END) NOT BETWEEN (CASE rt0.c1  WHEN rt2.c0 THEN rt1.c1 END) AND (CASE '1548976489'  WHEN 971380546 THEN rt0.c2 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM t0, vt0, rt1, rt2 WHERE ((((((rt2.c1) IS TRUE)))>=((((rt2.c2) NOT BETWEEN (vt0.c0) AND (rt2.c1)))))) ORDER BY (((rt2.c0)) BETWEEN ((((rt1.c2) ISNULL))) AND ((((vt0.c1)>=(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt2.c1) IS TRUE)))>=((((rt2.c2) NOT BETWEEN (vt0.c0) AND (rt2.c1)))))) IS TRUE)  as count FROM t0, vt0, rt1, rt2 ORDER BY (((rt2.c0)) BETWEEN ((((rt1.c2) ISNULL))) AND ((((vt0.c1)>=(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt1, rt2 WHERE ((((((rt2.c1) IS TRUE)))>=((((rt2.c2) NOT BETWEEN (vt0.c0) AND (rt2.c1)))))) ORDER BY (((rt2.c0)) BETWEEN ((((rt1.c2) ISNULL))) AND ((((vt0.c1)>=(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt2.c1) IS TRUE)))>=((((rt2.c2) NOT BETWEEN (vt0.c0) AND (rt2.c1)))))) IS TRUE)  as count FROM t0, vt0, rt1, rt2 ORDER BY (((rt2.c0)) BETWEEN ((((rt1.c2) ISNULL))) AND ((((vt0.c1)>=(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt1, rt2 WHERE ((((((rt2.c1) IS TRUE)))>=((((rt2.c2) NOT BETWEEN (vt0.c0) AND (rt2.c1)))))) ORDER BY (((rt2.c0)) BETWEEN ((((rt1.c2) ISNULL))) AND ((((vt0.c1)>=(vt0.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN '209753832' WHEN vt0.c0 THEN '-1018081114' END) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (+ (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN '209753832' WHEN vt0.c0 THEN '-1018081114' END) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) IS TRUE))));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN '209753832' WHEN vt0.c0 THEN '-1018081114' END) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (+ (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN '209753832' WHEN vt0.c0 THEN '-1018081114' END) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) IS TRUE))));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN '209753832' WHEN vt0.c0 THEN '-1018081114' END) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (+ (((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(t0.c80)))OR(t0.c80)) THEN rt0.c3 END) ORDER BY (rt0.c1 IN (((rt1.c2)AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c0)AND(t0.c80)))OR(t0.c80)) THEN rt0.c3 END) IS TRUE)  as count FROM t0, rt0, vt0, rt1 ORDER BY (rt0.c1 IN (((rt1.c2)AND(rt1.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(t0.c80)))OR(t0.c80)) THEN rt0.c3 END) ORDER BY (rt0.c1 IN (((rt1.c2)AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c0)AND(t0.c80)))OR(t0.c80)) THEN rt0.c3 END) IS TRUE)  as count FROM t0, rt0, vt0, rt1 ORDER BY (rt0.c1 IN (((rt1.c2)AND(rt1.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(t0.c80)))OR(t0.c80)) THEN rt0.c3 END) ORDER BY (rt0.c1 IN (((rt1.c2)AND(rt1.c0))));
SELECT COUNT(*) FROM rt2, rt0, t0, vt0, rt1 WHERE (rt2.c3);
SELECT SUM(count) FROM (SELECT ((rt2.c3) IS TRUE)  as count FROM rt2, rt0, t0, vt0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM rt2, rt0, t0, vt0, rt1 WHERE (rt2.c3);
SELECT SUM(count) FROM (SELECT ((rt2.c3) IS TRUE)  as count FROM rt2, rt0, t0, vt0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM rt2, rt0, t0, vt0, rt1 WHERE (rt2.c3);
SELECT * FROM rt1 WHERE ('0.10729479683476972');
SELECT SUM(count) FROM (SELECT ALL (('0.10729479683476972') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('0.10729479683476972');
SELECT SUM(count) FROM (SELECT ALL (('0.10729479683476972') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('0.10729479683476972');
SELECT COUNT(*) FROM rt1, t0, rt2, vt0, rt0 WHERE (CAST(('-673763584' IN ()) AS INTEGER)) ORDER BY LIKELIHOOD(DISTINCT (rt1.c1 IN ()), 0.670931267596785)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-673763584' IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1, t0, rt2, vt0, rt0 ORDER BY LIKELIHOOD(DISTINCT (rt1.c1 IN ()), 0.670931267596785)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt2, vt0, rt0 WHERE (CAST(('-673763584' IN ()) AS INTEGER)) ORDER BY LIKELIHOOD(DISTINCT (rt1.c1 IN ()), 0.670931267596785)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-673763584' IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1, t0, rt2, vt0, rt0 ORDER BY LIKELIHOOD(DISTINCT (rt1.c1 IN ()), 0.670931267596785)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt2, vt0, rt0 WHERE (CAST(('-673763584' IN ()) AS INTEGER)) ORDER BY LIKELIHOOD(DISTINCT (rt1.c1 IN ()), 0.670931267596785)  NULLS FIRST;
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE) ORDER BY CASE WHEN 1826636532 THEN '	gg-' WHEN 897888205 COLLATE RTRIM THEN ((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c3)))OR(rt1.c2)))OR(rt1.c1)) WHEN (rt0.c0 IN ()) THEN ((rt0.c3)>('!n}9N}|I0')) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY CASE WHEN 1826636532 THEN '	gg-' WHEN 897888205 COLLATE RTRIM THEN ((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c3)))OR(rt1.c2)))OR(rt1.c1)) WHEN (rt0.c0 IN ()) THEN ((rt0.c3)>('!n}9N}|I0')) END);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE) ORDER BY CASE WHEN 1826636532 THEN '	gg-' WHEN 897888205 COLLATE RTRIM THEN ((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c3)))OR(rt1.c2)))OR(rt1.c1)) WHEN (rt0.c0 IN ()) THEN ((rt0.c3)>('!n}9N}|I0')) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY CASE WHEN 1826636532 THEN '	gg-' WHEN 897888205 COLLATE RTRIM THEN ((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c3)))OR(rt1.c2)))OR(rt1.c1)) WHEN (rt0.c0 IN ()) THEN ((rt0.c3)>('!n}9N}|I0')) END);
SELECT COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE) ORDER BY CASE WHEN 1826636532 THEN '	gg-' WHEN 897888205 COLLATE RTRIM THEN ((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c3)))OR(rt1.c2)))OR(rt1.c1)) WHEN (rt0.c0 IN ()) THEN ((rt0.c3)>('!n}9N}|I0')) END;
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON CASE ((vt0.c0) IS FALSE)  WHEN CASE WHEN rt0.c3 THEN rt1.c0 END THEN vt0.c1 END LEFT OUTER JOIN rt2 ON (((rt0.c1)) NOT BETWEEN ((((rt1.c0)&(vt0.c1)))) AND ((((((rt2.c2)AND(NULL)))AND(rt2.c0))))) CROSS JOIN rt1 ON (((rt0.c0)%(rt2.c3)) IN (CASE WHEN 0.9875442716777189 THEN '1018793242' END)) WHERE ((((rt0.c2))>((((rt2.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2))>((((rt2.c2) ISNULL))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON CASE ((vt0.c0) IS FALSE)  WHEN CASE WHEN rt0.c3 THEN rt1.c0 END THEN vt0.c1 END LEFT OUTER JOIN rt2 ON (((rt0.c1)) NOT BETWEEN ((((rt1.c0)&(vt0.c1)))) AND ((((((rt2.c2)AND(NULL)))AND(rt2.c0))))) CROSS JOIN rt1 ON (((rt0.c0)%(rt2.c3)) IN (CASE WHEN 0.9875442716777189 THEN '1018793242' END)));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON CASE ((vt0.c0) IS FALSE)  WHEN CASE WHEN rt0.c3 THEN rt1.c0 END THEN vt0.c1 END LEFT OUTER JOIN rt2 ON (((rt0.c1)) NOT BETWEEN ((((rt1.c0)&(vt0.c1)))) AND ((((((rt2.c2)AND(NULL)))AND(rt2.c0))))) CROSS JOIN rt1 ON (((rt0.c0)%(rt2.c3)) IN (CASE WHEN 0.9875442716777189 THEN '1018793242' END)) WHERE ((((rt0.c2))>((((rt2.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2))>((((rt2.c2) ISNULL))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON CASE ((vt0.c0) IS FALSE)  WHEN CASE WHEN rt0.c3 THEN rt1.c0 END THEN vt0.c1 END LEFT OUTER JOIN rt2 ON (((rt0.c1)) NOT BETWEEN ((((rt1.c0)&(vt0.c1)))) AND ((((((rt2.c2)AND(NULL)))AND(rt2.c0))))) CROSS JOIN rt1 ON (((rt0.c0)%(rt2.c3)) IN (CASE WHEN 0.9875442716777189 THEN '1018793242' END)));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON CASE ((vt0.c0) IS FALSE)  WHEN CASE WHEN rt0.c3 THEN rt1.c0 END THEN vt0.c1 END LEFT OUTER JOIN rt2 ON (((rt0.c1)) NOT BETWEEN ((((rt1.c0)&(vt0.c1)))) AND ((((((rt2.c2)AND(NULL)))AND(rt2.c0))))) CROSS JOIN rt1 ON (((rt0.c0)%(rt2.c3)) IN (CASE WHEN 0.9875442716777189 THEN '1018793242' END)) WHERE ((((rt0.c2))>((((rt2.c2) ISNULL)))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE(rt2.c3)) COLLATE NOCASE INNER JOIN rt2 ON rt1.c2 WHERE (rt0.c1) ORDER BY (NOT (((((rt1.c1)OR(rt0.c0)))AND(rt1.c1))))  NULLS LAST, (((((rt1.c2))>=((rt2.c3))))/(NULL)), ((('1263787809'))=((((rt0.c1) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE(rt2.c3)) COLLATE NOCASE INNER JOIN rt2 ON rt1.c2 ORDER BY (NOT (((((rt1.c1)OR(rt0.c0)))AND(rt1.c1))))  NULLS LAST, (((((rt1.c2))>=((rt2.c3))))/(NULL)), ((('1263787809'))=((((rt0.c1) ISNULL)))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE(rt2.c3)) COLLATE NOCASE INNER JOIN rt2 ON rt1.c2 WHERE (rt0.c1) ORDER BY (NOT (((((rt1.c1)OR(rt0.c0)))AND(rt1.c1))))  NULLS LAST, (((((rt1.c2))>=((rt2.c3))))/(NULL)), ((('1263787809'))=((((rt0.c1) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE(rt2.c3)) COLLATE NOCASE INNER JOIN rt2 ON rt1.c2 ORDER BY (NOT (((((rt1.c1)OR(rt0.c0)))AND(rt1.c1))))  NULLS LAST, (((((rt1.c2))>=((rt2.c3))))/(NULL)), ((('1263787809'))=((((rt0.c1) ISNULL)))) ASC);
SELECT ALL * FROM t0 WHERE (CASE t0.c33  WHEN ((NULL) NOTNULL) THEN ((((((((t0.c80)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)) WHEN NULLIF(t0.c33, t0.c80) THEN ((((NULL)AND(t0.c33)))OR(t0.c33)) WHEN x'' THEN x'' ELSE CASE WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c80 ELSE t0.c33 END END) ORDER BY (+ (CAST(t0.c33 AS INTEGER))) ASC  NULLS FIRST, t0.c80;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c33  WHEN ((NULL) NOTNULL) THEN ((((((((t0.c80)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)) WHEN NULLIF(t0.c33, t0.c80) THEN ((((NULL)AND(t0.c33)))OR(t0.c33)) WHEN x'' THEN x'' ELSE CASE WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c80 ELSE t0.c33 END END) IS TRUE)  as count FROM t0 ORDER BY (+ (CAST(t0.c33 AS INTEGER))) ASC  NULLS FIRST, t0.c80);
SELECT ALL * FROM t0 WHERE (CASE t0.c33  WHEN ((NULL) NOTNULL) THEN ((((((((t0.c80)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)) WHEN NULLIF(t0.c33, t0.c80) THEN ((((NULL)AND(t0.c33)))OR(t0.c33)) WHEN x'' THEN x'' ELSE CASE WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c80 ELSE t0.c33 END END) ORDER BY (+ (CAST(t0.c33 AS INTEGER))) ASC  NULLS FIRST, t0.c80;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c33  WHEN ((NULL) NOTNULL) THEN ((((((((t0.c80)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)) WHEN NULLIF(t0.c33, t0.c80) THEN ((((NULL)AND(t0.c33)))OR(t0.c33)) WHEN x'' THEN x'' ELSE CASE WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c80 ELSE t0.c33 END END) IS TRUE)  as count FROM t0 ORDER BY (+ (CAST(t0.c33 AS INTEGER))) ASC  NULLS FIRST, t0.c80);
SELECT ALL * FROM t0 WHERE (CASE t0.c33  WHEN ((NULL) NOTNULL) THEN ((((((((t0.c80)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)) WHEN NULLIF(t0.c33, t0.c80) THEN ((((NULL)AND(t0.c33)))OR(t0.c33)) WHEN x'' THEN x'' ELSE CASE WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c33 WHEN t0.c80 THEN t0.c80 ELSE t0.c33 END END) ORDER BY (+ (CAST(t0.c33 AS INTEGER))) ASC  NULLS FIRST, t0.c80;
SELECT ALL * FROM t0, rt2, rt0, vt0, rt1 WHERE (CASE ((t0.c80) NOTNULL)  WHEN SQLITE_COMPILEOPTION_GET(t0.c33) THEN ((vt0.c1)>>(rt0.c0)) END) ORDER BY ((CAST(rt0.c0 AS REAL))OR(((rt1.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c80) NOTNULL)  WHEN SQLITE_COMPILEOPTION_GET(t0.c33) THEN ((vt0.c1)>>(rt0.c0)) END) IS TRUE)  as count FROM t0, rt2, rt0, vt0, rt1 ORDER BY ((CAST(rt0.c0 AS REAL))OR(((rt1.c1) NOTNULL))) DESC);
SELECT ALL * FROM t0, rt2, rt0, vt0, rt1 WHERE (CASE ((t0.c80) NOTNULL)  WHEN SQLITE_COMPILEOPTION_GET(t0.c33) THEN ((vt0.c1)>>(rt0.c0)) END) ORDER BY ((CAST(rt0.c0 AS REAL))OR(((rt1.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c80) NOTNULL)  WHEN SQLITE_COMPILEOPTION_GET(t0.c33) THEN ((vt0.c1)>>(rt0.c0)) END) IS TRUE)  as count FROM t0, rt2, rt0, vt0, rt1 ORDER BY ((CAST(rt0.c0 AS REAL))OR(((rt1.c1) NOTNULL))) DESC);
SELECT ALL * FROM t0, rt2, rt0, vt0, rt1 WHERE (CASE ((t0.c80) NOTNULL)  WHEN SQLITE_COMPILEOPTION_GET(t0.c33) THEN ((vt0.c1)>>(rt0.c0)) END) ORDER BY ((CAST(rt0.c0 AS REAL))OR(((rt1.c1) NOTNULL))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((NULL)AND(rt0.c3)))AND(t0.c80)))AND(rt0.c1)))AND(NULL)))<<(((rt0.c2)&(rt0.c3))))) ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(t0.c80)))AND(rt0.c0))))  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)AND(rt0.c3)))AND(t0.c80)))AND(rt0.c1)))AND(NULL)))<<(((rt0.c2)&(rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(t0.c80)))AND(rt0.c0))))  NULLS LAST, NULL);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((NULL)AND(rt0.c3)))AND(t0.c80)))AND(rt0.c1)))AND(NULL)))<<(((rt0.c2)&(rt0.c3))))) ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(t0.c80)))AND(rt0.c0))))  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)AND(rt0.c3)))AND(t0.c80)))AND(rt0.c1)))AND(NULL)))<<(((rt0.c2)&(rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(t0.c80)))AND(rt0.c0))))  NULLS LAST, NULL);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((NULL)AND(rt0.c3)))AND(t0.c80)))AND(rt0.c1)))AND(NULL)))<<(((rt0.c2)&(rt0.c3))))) ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(t0.c80)))AND(rt0.c0))))  NULLS LAST, NULL;
SELECT * FROM t0, rt2, rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)AND(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, rt2, rt0);
SELECT * FROM t0, rt2, rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)AND(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, rt2, rt0);
SELECT * FROM t0, rt2, rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))));
SELECT ALL * FROM t0, rt1, rt2 WHERE (((rt1.c1)IS(((rt1.c0)>(t0.c80))))) ORDER BY CASE CASE rt2.c3  WHEN rt1.c0 THEN 0.9394834356357779 END  WHEN (t0.c80 IN (t0.c33)) THEN (+ (t0.c80)) ELSE '1183546316' END, 768638003 ASC, CASE (((rt2.c3, t0.c33, NULL)) BETWEEN ((rt2.c1, rt1.c2, rt2.c2)) AND ((rt2.c1, rt2.c3, rt1.c1)))  WHEN CAST(rt1.c2 AS REAL) THEN json_insert(rt2.c0, rt1.c1, rt2.c2) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)IS(((rt1.c0)>(t0.c80))))) IS TRUE)  as count FROM t0, rt1, rt2 ORDER BY CASE CASE rt2.c3  WHEN rt1.c0 THEN 0.9394834356357779 END  WHEN (t0.c80 IN (t0.c33)) THEN (+ (t0.c80)) ELSE '1183546316' END, 768638003 ASC, CASE (((rt2.c3, t0.c33, NULL)) BETWEEN ((rt2.c1, rt1.c2, rt2.c2)) AND ((rt2.c1, rt2.c3, rt1.c1)))  WHEN CAST(rt1.c2 AS REAL) THEN json_insert(rt2.c0, rt1.c1, rt2.c2) END ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt2 WHERE (((rt1.c1)IS(((rt1.c0)>(t0.c80))))) ORDER BY CASE CASE rt2.c3  WHEN rt1.c0 THEN 0.9394834356357779 END  WHEN (t0.c80 IN (t0.c33)) THEN (+ (t0.c80)) ELSE '1183546316' END, 768638003 ASC, CASE (((rt2.c3, t0.c33, NULL)) BETWEEN ((rt2.c1, rt1.c2, rt2.c2)) AND ((rt2.c1, rt2.c3, rt1.c1)))  WHEN CAST(rt1.c2 AS REAL) THEN json_insert(rt2.c0, rt1.c1, rt2.c2) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)IS(((rt1.c0)>(t0.c80))))) IS TRUE)  as count FROM t0, rt1, rt2 ORDER BY CASE CASE rt2.c3  WHEN rt1.c0 THEN 0.9394834356357779 END  WHEN (t0.c80 IN (t0.c33)) THEN (+ (t0.c80)) ELSE '1183546316' END, 768638003 ASC, CASE (((rt2.c3, t0.c33, NULL)) BETWEEN ((rt2.c1, rt1.c2, rt2.c2)) AND ((rt2.c1, rt2.c3, rt1.c1)))  WHEN CAST(rt1.c2 AS REAL) THEN json_insert(rt2.c0, rt1.c1, rt2.c2) END ASC  NULLS FIRST);
SELECT * FROM rt1, rt2, t0 WHERE ((((((0.9394834356357779 IN ()))AND((+ (rt2.c0)))))AND('')));
SELECT SUM(count) FROM (SELECT (((((((0.9394834356357779 IN ()))AND((+ (rt2.c0)))))AND(''))) IS TRUE)  as count FROM rt1, rt2, t0);
SELECT * FROM rt1, rt2, t0 WHERE ((((((0.9394834356357779 IN ()))AND((+ (rt2.c0)))))AND('')));
SELECT SUM(count) FROM (SELECT (((((((0.9394834356357779 IN ()))AND((+ (rt2.c0)))))AND(''))) IS TRUE)  as count FROM rt1, rt2, t0);
SELECT * FROM rt1, rt2, t0 WHERE ((((((0.9394834356357779 IN ()))AND((+ (rt2.c0)))))AND('')));
SELECT * FROM rt0, rt2 WHERE (((((rt2.c3)OR(rt2.c3)))OR(rt2.c0)) COLLATE NOCASE) ORDER BY (((rt0.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3)OR(rt2.c3)))OR(rt2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt2 ORDER BY (((rt0.c0) ISNULL) IN ()));
SELECT * FROM rt0, rt2 WHERE (((((rt2.c3)OR(rt2.c3)))OR(rt2.c0)) COLLATE NOCASE) ORDER BY (((rt0.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3)OR(rt2.c3)))OR(rt2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt2 ORDER BY (((rt0.c0) ISNULL) IN ()));
SELECT * FROM rt0, rt2 WHERE (((((rt2.c3)OR(rt2.c3)))OR(rt2.c0)) COLLATE NOCASE) ORDER BY (((rt0.c0) ISNULL) IN ());
SELECT COUNT(*) FROM t0, rt2, vt0, rt0 WHERE (((((rt2.c2)IS NOT(t0.c80)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c2)IS NOT(t0.c80)))OR(rt0.c1))) IS TRUE)  as count FROM t0, rt2, vt0, rt0);
SELECT COUNT(*) FROM t0, rt2, vt0, rt0 WHERE (((((rt2.c2)IS NOT(t0.c80)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c2)IS NOT(t0.c80)))OR(rt0.c1))) IS TRUE)  as count FROM t0, rt2, vt0, rt0);
SELECT COUNT(*) FROM t0, rt2, vt0, rt0 WHERE (((((rt2.c2)IS NOT(t0.c80)))OR(rt0.c1)));
SELECT * FROM rt1, rt2, t0, rt0 WHERE ((((- ('15373361')))IS(((rt0.c0)OR(rt2.c1))))) ORDER BY ((rt1.c1) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- ('15373361')))IS(((rt0.c0)OR(rt2.c1))))) IS TRUE)  as count FROM rt1, rt2, t0, rt0 ORDER BY ((rt1.c1) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM rt1, rt2, t0, rt0 WHERE ((((- ('15373361')))IS(((rt0.c0)OR(rt2.c1))))) ORDER BY ((rt1.c1) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- ('15373361')))IS(((rt0.c0)OR(rt2.c1))))) IS TRUE)  as count FROM rt1, rt2, t0, rt0 ORDER BY ((rt1.c1) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM rt1, rt2, t0, rt0 WHERE ((((- ('15373361')))IS(((rt0.c0)OR(rt2.c1))))) ORDER BY ((rt1.c1) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0, t0, rt0 WHERE (CAST(UNICODE(rt0.c1) AS INTEGER)) ORDER BY (((((rt0.c2))>=((rt1.c1)))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(rt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, t0, rt0 ORDER BY (((((rt0.c2))>=((rt1.c1)))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (vt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, rt0 WHERE (CAST(UNICODE(rt0.c1) AS INTEGER)) ORDER BY (((((rt0.c2))>=((rt1.c1)))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(rt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, t0, rt0 ORDER BY (((((rt0.c2))>=((rt1.c1)))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (vt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, rt0 WHERE (CAST(UNICODE(rt0.c1) AS INTEGER)) ORDER BY (((((rt0.c2))>=((rt1.c1)))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (vt0.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT ((((rt2.c1)) BETWEEN ((rt2.c2)) AND ((-1556741617)))))) ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c0))IS NOT((rt2.c3 IN (rt2.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt2.c1)) BETWEEN ((rt2.c2)) AND ((-1556741617)))))) IS TRUE)  as count FROM rt2 ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c0))IS NOT((rt2.c3 IN (rt2.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT ((((rt2.c1)) BETWEEN ((rt2.c2)) AND ((-1556741617)))))) ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c0))IS NOT((rt2.c3 IN (rt2.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt2.c1)) BETWEEN ((rt2.c2)) AND ((-1556741617)))))) IS TRUE)  as count FROM rt2 ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c0))IS NOT((rt2.c3 IN (rt2.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2 WHERE ((NOT ((((rt2.c1)) BETWEEN ((rt2.c2)) AND ((-1556741617)))))) ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c0))IS NOT((rt2.c3 IN (rt2.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN (NULL)));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS INTEGER) IN (NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN (NULL)));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS INTEGER) IN (NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN (NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)/(rt0.c0)) IN ())) ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)/(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)/(rt0.c0)) IN ())) ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)/(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)/(rt0.c0)) IN ())) ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c0))));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c33) BETWEEN (t0.c80) AND (t0.c33))  WHEN LIKELY(t0.c80) THEN ((t0.c80)==(t0.c33)) END) ORDER BY (((('-1322674251')AND(0.6828796955429784)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c33) BETWEEN (t0.c80) AND (t0.c33))  WHEN LIKELY(t0.c80) THEN ((t0.c80)=(t0.c33)) END) IS TRUE)  as count FROM t0 ORDER BY (((('-1322674251')AND(0.6828796955429784)))OR(NULL)) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c33) BETWEEN (t0.c80) AND (t0.c33))  WHEN LIKELY(t0.c80) THEN ((t0.c80)==(t0.c33)) END) ORDER BY (((('-1322674251')AND(0.6828796955429784)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c33) BETWEEN (t0.c80) AND (t0.c33))  WHEN LIKELY(t0.c80) THEN ((t0.c80)=(t0.c33)) END) IS TRUE)  as count FROM t0 ORDER BY (((('-1322674251')AND(0.6828796955429784)))OR(NULL)) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c33) BETWEEN (t0.c80) AND (t0.c33))  WHEN LIKELY(t0.c80) THEN ((t0.c80)==(t0.c33)) END) ORDER BY (((('-1322674251')AND(0.6828796955429784)))OR(NULL)) DESC;
SELECT COUNT(*) FROM t0, rt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 NOT INDEXED, rt2);
SELECT COUNT(*) FROM t0, rt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 NOT INDEXED, rt2);
SELECT COUNT(*) FROM t0, rt2 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c3  WHEN t0.c33 THEN rt1.c2 WHEN rt0.c1 THEN t0.c33 WHEN rt0.c2 THEN rt1.c0 END THEN CAST(rt0.c2 AS INTEGER) END WHERE (load_extension(NULL, LIKELIHOOD(t0.c33, 0.6339387682724469))) ORDER BY TRIM(((rt0.c3)IS NOT(rt0.c2)), ((rt0.c1)IS NOT(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(NULL, LIKELIHOOD(t0.c33, 0.6339387682724469))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c3  WHEN t0.c33 THEN rt1.c2 WHEN rt0.c1 THEN t0.c33 WHEN rt0.c2 THEN rt1.c0 END THEN CAST(rt0.c2 AS INTEGER) END ORDER BY TRIM(((rt0.c3)IS NOT(rt0.c2)), ((rt0.c1)IS NOT(rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c3  WHEN t0.c33 THEN rt1.c2 WHEN rt0.c1 THEN t0.c33 WHEN rt0.c2 THEN rt1.c0 END THEN CAST(rt0.c2 AS INTEGER) END WHERE (load_extension(NULL, LIKELIHOOD(t0.c33, 0.6339387682724469))) ORDER BY TRIM(((rt0.c3)IS NOT(rt0.c2)), ((rt0.c1)IS NOT(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(NULL, LIKELIHOOD(t0.c33, 0.6339387682724469))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CASE rt0.c3  WHEN t0.c33 THEN rt1.c2 WHEN rt0.c1 THEN t0.c33 WHEN rt0.c2 THEN rt1.c0 END THEN CAST(rt0.c2 AS INTEGER) END ORDER BY TRIM(((rt0.c3)IS NOT(rt0.c2)), ((rt0.c1)IS NOT(rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, t0, rt1, vt0 WHERE ((LIKELIHOOD(rt1.c0, 0.010844220288445006) IN ())) ORDER BY (NOT (0.5553914958449814)) DESC;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(rt1.c0, 0.010844220288445006) IN ())) IS TRUE)  as count FROM rt2, t0, rt1, vt0 ORDER BY (NOT (0.5553914958449814)) DESC);
SELECT ALL COUNT(*) FROM rt2, t0, rt1, vt0 WHERE ((LIKELIHOOD(rt1.c0, 0.010844220288445006) IN ())) ORDER BY (NOT (0.5553914958449814)) DESC;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(rt1.c0, 0.010844220288445006) IN ())) IS TRUE)  as count FROM rt2, t0, rt1, vt0 ORDER BY (NOT (0.5553914958449814)) DESC);
SELECT ALL COUNT(*) FROM rt2, t0, rt1, vt0 WHERE ((LIKELIHOOD(rt1.c0, 0.010844220288445006) IN ())) ORDER BY (NOT (0.5553914958449814)) DESC;
SELECT ALL * FROM t0, rt0, rt1, rt2, vt0 WHERE ((((vt0.c0)OR(rt2.c0)) IN ())) ORDER BY ((CASE rt2.c0  WHEN rt2.c0 THEN rt0.c0 WHEN t0.c80 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)OR(((rt2.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)OR(rt2.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, rt1, rt2, vt0 ORDER BY ((CASE rt2.c0  WHEN rt2.c0 THEN rt0.c0 WHEN t0.c80 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)OR(((rt2.c1) IS TRUE))));
SELECT ALL * FROM t0, rt0, rt1, rt2, vt0 WHERE ((((vt0.c0)OR(rt2.c0)) IN ())) ORDER BY ((CASE rt2.c0  WHEN rt2.c0 THEN rt0.c0 WHEN t0.c80 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)OR(((rt2.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)OR(rt2.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, rt1, rt2, vt0 ORDER BY ((CASE rt2.c0  WHEN rt2.c0 THEN rt0.c0 WHEN t0.c80 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)OR(((rt2.c1) IS TRUE))));
SELECT ALL * FROM t0, rt0, rt1, rt2, vt0 WHERE ((((vt0.c0)OR(rt2.c0)) IN ())) ORDER BY ((CASE rt2.c0  WHEN rt2.c0 THEN rt0.c0 WHEN t0.c80 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)OR(((rt2.c1) IS TRUE)));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c1 COLLATE RTRIM WHEN CAST(rt1.c1 AS BLOB) THEN (+ (rt1.c2)) WHEN ((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c0)IS(0.2569985181829617)) WHEN ((rt1.c2)+(rt1.c0)) THEN CASE WHEN x'4e7e7db2' THEN rt1.c0 END WHEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) THEN ((rt1.c0)&(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN rt1.c1 COLLATE RTRIM WHEN CAST(rt1.c1 AS BLOB) THEN (+ (rt1.c2)) WHEN ((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c0)IS(0.2569985181829617)) WHEN ((rt1.c2)+(rt1.c0)) THEN CASE WHEN x'4e7e7db2' THEN rt1.c0 END WHEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) THEN ((rt1.c0)&(rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c1 COLLATE RTRIM WHEN CAST(rt1.c1 AS BLOB) THEN (+ (rt1.c2)) WHEN ((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c0)IS(0.2569985181829617)) WHEN ((rt1.c2)+(rt1.c0)) THEN CASE WHEN x'4e7e7db2' THEN rt1.c0 END WHEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) THEN ((rt1.c0)&(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN rt1.c1 COLLATE RTRIM WHEN CAST(rt1.c1 AS BLOB) THEN (+ (rt1.c2)) WHEN ((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c0)IS(0.2569985181829617)) WHEN ((rt1.c2)+(rt1.c0)) THEN CASE WHEN x'4e7e7db2' THEN rt1.c0 END WHEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) THEN ((rt1.c0)&(rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c1 COLLATE RTRIM WHEN CAST(rt1.c1 AS BLOB) THEN (+ (rt1.c2)) WHEN ((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c0)IS(0.2569985181829617)) WHEN ((rt1.c2)+(rt1.c0)) THEN CASE WHEN x'4e7e7db2' THEN rt1.c0 END WHEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) THEN ((rt1.c0)&(rt1.c0)) END);
SELECT * FROM vt0, t0 WHERE (((((((NULL)OR(vt0.c0)))AND(vt0.c0)))==(t0.c33 COLLATE NOCASE))) ORDER BY 126340236 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(vt0.c0)))AND(vt0.c0)))=(t0.c33 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY 126340236 DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((NULL)OR(vt0.c0)))AND(vt0.c0)))==(t0.c33 COLLATE NOCASE))) ORDER BY 126340236 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(vt0.c0)))AND(vt0.c0)))=(t0.c33 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY 126340236 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, rt2 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, rt2 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0, rt2 WHERE ((((((vt0.c0)&(vt0.c0))))!=(((((vt0.c0))!=((vt0.c1))))))) ORDER BY CAST((NOT (vt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)&(vt0.c0))))<>(((((vt0.c0))!=((vt0.c1))))))) IS TRUE)  as count FROM vt0, rt2 ORDER BY CAST((NOT (vt0.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt2 WHERE ((((((vt0.c0)&(vt0.c0))))!=(((((vt0.c0))!=((vt0.c1))))))) ORDER BY CAST((NOT (vt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)&(vt0.c0))))<>(((((vt0.c0))!=((vt0.c1))))))) IS TRUE)  as count FROM vt0, rt2 ORDER BY CAST((NOT (vt0.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt2 WHERE ((((((vt0.c0)&(vt0.c0))))!=(((((vt0.c0))!=((vt0.c1))))))) ORDER BY CAST((NOT (vt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (IFNULL(rt0.c3, rt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c3, rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(rt0.c3, rt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c3, rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(rt0.c3, rt0.c0) COLLATE BINARY);
SELECT * FROM t0 WHERE (((((((t0.c80) BETWEEN (t0.c80) AND (t0.c33)))AND(((((((((t0.c33)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)))))OR(((t0.c33)IS(t0.c80)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c80) BETWEEN (t0.c80) AND (t0.c33)))AND(((((((((t0.c33)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)))))OR(((t0.c33)IS(t0.c80))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c80) BETWEEN (t0.c80) AND (t0.c33)))AND(((((((((t0.c33)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)))))OR(((t0.c33)IS(t0.c80)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c80) BETWEEN (t0.c80) AND (t0.c33)))AND(((((((((t0.c33)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)))))OR(((t0.c33)IS(t0.c80))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c80) BETWEEN (t0.c80) AND (t0.c33)))AND(((((((((t0.c33)AND(t0.c33)))OR(t0.c33)))OR(t0.c80)))OR(t0.c33)))))OR(((t0.c33)IS(t0.c80)))));
SELECT ALL * FROM vt0, rt1, rt2 WHERE (((vt0.c0)GLOB(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, rt2);
SELECT ALL * FROM vt0, rt1, rt2 WHERE (((vt0.c0)GLOB(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, rt2);
SELECT ALL * FROM vt0, rt1, rt2 WHERE (((vt0.c0)GLOB(vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, rt2, t0 WHERE (((((rt0.c0)&(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt2, t0);
SELECT COUNT(*) FROM rt0, rt2, t0 WHERE (((((rt0.c0)&(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt2, t0);
SELECT COUNT(*) FROM rt0, rt2, t0 WHERE (((((rt0.c0)&(rt0.c1))) NOT NULL));
SELECT ALL * FROM rt2, rt1, vt0, t0, rt0 WHERE ((+ (rt2.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt2.c1) IS FALSE))OR(((((((((rt0.c3)OR(rt2.c3)))OR(rt2.c3)))AND(rt2.c2)))AND(rt0.c3)))))AND(((rt0.c2) BETWEEN (t0.c33) AND (rt2.c0)))))OR(((rt0.c2)<=(rt1.c1)))))OR(0.623165429904984))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, vt0, t0, rt0 ORDER BY ((((((((((rt2.c1) IS FALSE))OR(((((((((rt0.c3)OR(rt2.c3)))OR(rt2.c3)))AND(rt2.c2)))AND(rt0.c3)))))AND(((rt0.c2) BETWEEN (t0.c33) AND (rt2.c0)))))OR(((rt0.c2)<=(rt1.c1)))))OR(0.623165429904984))  NULLS LAST);
SELECT ALL * FROM rt2, rt1, vt0, t0, rt0 WHERE ((+ (rt2.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt2.c1) IS FALSE))OR(((((((((rt0.c3)OR(rt2.c3)))OR(rt2.c3)))AND(rt2.c2)))AND(rt0.c3)))))AND(((rt0.c2) BETWEEN (t0.c33) AND (rt2.c0)))))OR(((rt0.c2)<=(rt1.c1)))))OR(0.623165429904984))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, vt0, t0, rt0 ORDER BY ((((((((((rt2.c1) IS FALSE))OR(((((((((rt0.c3)OR(rt2.c3)))OR(rt2.c3)))AND(rt2.c2)))AND(rt0.c3)))))AND(((rt0.c2) BETWEEN (t0.c33) AND (rt2.c0)))))OR(((rt0.c2)<=(rt1.c1)))))OR(0.623165429904984))  NULLS LAST);
SELECT ALL * FROM rt2, rt1, vt0, t0, rt0 WHERE ((+ (rt2.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt2.c1) IS FALSE))OR(((((((((rt0.c3)OR(rt2.c3)))OR(rt2.c3)))AND(rt2.c2)))AND(rt0.c3)))))AND(((rt0.c2) BETWEEN (t0.c33) AND (rt2.c0)))))OR(((rt0.c2)<=(rt1.c1)))))OR(0.623165429904984))  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, rt2, t0, vt0 WHERE ((~ (CAST(rt2.c3 AS NUMERIC)))) ORDER BY '(N' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt2.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, rt2, t0, vt0 ORDER BY '(N' DESC);
SELECT COUNT(*) FROM rt0, rt1, rt2, t0, vt0 WHERE ((~ (CAST(rt2.c3 AS NUMERIC)))) ORDER BY '(N' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt2.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, rt2, t0, vt0 ORDER BY '(N' DESC);
SELECT COUNT(*) FROM rt0, rt1, rt2, t0, vt0 WHERE ((~ (CAST(rt2.c3 AS NUMERIC)))) ORDER BY '(N' DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))<<(TYPEOF(rt1.c0)))) ORDER BY (((rt1.c2))<>((rt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))<<(TYPEOF(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2))!=((rt1.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))<<(TYPEOF(rt1.c0)))) ORDER BY (((rt1.c2))<>((rt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))<<(TYPEOF(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2))!=((rt1.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))<<(TYPEOF(rt1.c0)))) ORDER BY (((rt1.c2))<>((rt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(t0.c33 COLLATE NOCASE)) ORDER BY (t0.c80 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(t0.c33 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY (t0.c80 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(t0.c33 COLLATE NOCASE)) ORDER BY (t0.c80 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(t0.c33 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY (t0.c80 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(t0.c33 COLLATE NOCASE)) ORDER BY (t0.c80 IN ()) COLLATE BINARY DESC;
SELECT ALL * FROM rt2 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE ((+ (NULL)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM rt2, rt0, t0, vt0, rt1 WHERE (0x5ec64711) ORDER BY (((((rt1.c2, t0.c80, rt2.c2))<=((rt1.c2, rt2.c3, vt0.c1)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((0x5ec64711) IS TRUE)  as count FROM rt2, rt0, t0, vt0, rt1 ORDER BY (((((rt1.c2, t0.c80, rt2.c2))<=((rt1.c2, rt2.c3, vt0.c1)))) NOT NULL));
SELECT ALL * FROM rt2, rt0, t0, vt0, rt1 WHERE (0x5ec64711) ORDER BY (((((rt1.c2, t0.c80, rt2.c2))<=((rt1.c2, rt2.c3, vt0.c1)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((0x5ec64711) IS TRUE)  as count FROM rt2, rt0, t0, vt0, rt1 ORDER BY (((((rt1.c2, t0.c80, rt2.c2))<=((rt1.c2, rt2.c3, vt0.c1)))) NOT NULL));
SELECT ALL * FROM rt2, rt0, t0, vt0, rt1 WHERE (0x5ec64711) ORDER BY (((((rt1.c2, t0.c80, rt2.c2))<=((rt1.c2, rt2.c3, vt0.c1)))) NOT NULL);
SELECT * FROM rt1, rt0 WHERE (NULL) ORDER BY (+ ((rt0.c0 IN (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ ((rt0.c0 IN (rt0.c1))))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (NULL) ORDER BY (+ ((rt0.c0 IN (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ ((rt0.c0 IN (rt0.c1))))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (NULL) ORDER BY (+ ((rt0.c0 IN (rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((rt1.c1)IS NOT(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)IS NOT(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((rt1.c1)IS NOT(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)IS NOT(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((rt1.c1)IS NOT(((rt1.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt1, t0, rt2, rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt1, t0, rt2, rt0);
SELECT COUNT(*) FROM vt0, rt1, t0, rt2, rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt1, t0, rt2, rt0);
SELECT COUNT(*) FROM vt0, rt1, t0, rt2, rt0 WHERE (CHANGES());
SELECT * FROM rt2, rt1, t0 WHERE (500007049) ORDER BY ((((rt1.c0) ISNULL))LIKE(CASE 0.9482663462255456  WHEN rt2.c3 THEN t0.c33 WHEN rt2.c0 THEN rt1.c2 WHEN NULL THEN rt2.c0 ELSE rt1.c0 END))  NULLS FIRST, '435106013' ASC, ((QUOTE(rt1.c2)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((500007049) IS TRUE)  as count FROM rt2, rt1, t0 NOT INDEXED ORDER BY ((((rt1.c0) ISNULL))LIKE(CASE 0.9482663462255456  WHEN rt2.c3 THEN t0.c33 WHEN rt2.c0 THEN rt1.c2 WHEN NULL THEN rt2.c0 ELSE rt1.c0 END))  NULLS FIRST, '435106013' ASC, ((QUOTE(rt1.c2)) ISNULL) ASC  NULLS LAST);
SELECT * FROM rt2, rt1, t0 WHERE (500007049) ORDER BY ((((rt1.c0) ISNULL))LIKE(CASE 0.9482663462255456  WHEN rt2.c3 THEN t0.c33 WHEN rt2.c0 THEN rt1.c2 WHEN NULL THEN rt2.c0 ELSE rt1.c0 END))  NULLS FIRST, '435106013' ASC, ((QUOTE(rt1.c2)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((500007049) IS TRUE)  as count FROM rt2, rt1, t0 NOT INDEXED ORDER BY ((((rt1.c0) ISNULL))LIKE(CASE 0.9482663462255456  WHEN rt2.c3 THEN t0.c33 WHEN rt2.c0 THEN rt1.c2 WHEN NULL THEN rt2.c0 ELSE rt1.c0 END))  NULLS FIRST, '435106013' ASC, ((QUOTE(rt1.c2)) ISNULL) ASC  NULLS LAST);
SELECT * FROM rt2, rt1, t0 WHERE (500007049) ORDER BY ((((rt1.c0) ISNULL))LIKE(CASE 0.9482663462255456  WHEN rt2.c3 THEN t0.c33 WHEN rt2.c0 THEN rt1.c2 WHEN NULL THEN rt2.c0 ELSE rt1.c0 END))  NULLS FIRST, '435106013' ASC, ((QUOTE(rt1.c2)) ISNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN rt1.c0 THEN vt0.c1 ELSE rt2.c3 END AS INTEGER) RIGHT OUTER JOIN rt2 ON CASE rt1.c0 COLLATE RTRIM  WHEN (((rt1.c0))>=((vt0.c1))) THEN CAST(rt1.c1 AS REAL) END LEFT OUTER JOIN rt1 ON '-236478283' WHERE ('601445492');
SELECT SUM(count) FROM (SELECT (('601445492') IS TRUE)  as count FROM t0, vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN rt1.c0 THEN vt0.c1 ELSE rt2.c3 END AS INTEGER) RIGHT OUTER JOIN rt2 ON CASE rt1.c0 COLLATE RTRIM  WHEN (((rt1.c0))>=((vt0.c1))) THEN CAST(rt1.c1 AS REAL) END LEFT OUTER JOIN rt1 ON '-236478283');
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN rt1.c0 THEN vt0.c1 ELSE rt2.c3 END AS INTEGER) RIGHT OUTER JOIN rt2 ON CASE rt1.c0 COLLATE RTRIM  WHEN (((rt1.c0))>=((vt0.c1))) THEN CAST(rt1.c1 AS REAL) END LEFT OUTER JOIN rt1 ON '-236478283' WHERE ('601445492');
SELECT SUM(count) FROM (SELECT (('601445492') IS TRUE)  as count FROM t0, vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN rt1.c0 THEN vt0.c1 ELSE rt2.c3 END AS INTEGER) RIGHT OUTER JOIN rt2 ON CASE rt1.c0 COLLATE RTRIM  WHEN (((rt1.c0))>=((vt0.c1))) THEN CAST(rt1.c1 AS REAL) END LEFT OUTER JOIN rt1 ON '-236478283');
SELECT ALL * FROM rt2, t0, rt0 WHERE (((((rt2.c2)<>(rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)!=(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt2, t0, rt0);
SELECT ALL * FROM rt2, t0, rt0 WHERE (((((rt2.c2)<>(rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)!=(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt2, t0, rt0);
SELECT ALL * FROM rt2, t0, rt0 WHERE (((((rt2.c2)<>(rt0.c3))) NOT NULL));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON LIKELY(CAST(rt0.c0 AS NUMERIC)) INNER JOIN t0 ON x'' WHERE ((+ ((((t0.c80, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c80, rt0.c3)) AND ((t0.c80, vt0.c0, rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c80, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c80, rt0.c3)) AND ((t0.c80, vt0.c0, rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON LIKELY(CAST(rt0.c0 AS NUMERIC)) INNER JOIN t0 ON x'');
SELECT * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON LIKELY(CAST(rt0.c0 AS NUMERIC)) INNER JOIN t0 ON x'' WHERE ((+ ((((t0.c80, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c80, rt0.c3)) AND ((t0.c80, vt0.c0, rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c80, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c80, rt0.c3)) AND ((t0.c80, vt0.c0, rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON LIKELY(CAST(rt0.c0 AS NUMERIC)) INNER JOIN t0 ON x'');
SELECT * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON LIKELY(CAST(rt0.c0 AS NUMERIC)) INNER JOIN t0 ON x'' WHERE ((+ ((((t0.c80, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c80, rt0.c3)) AND ((t0.c80, vt0.c0, rt0.c3))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN rt0.c3 THEN ((((rt0.c0)AND(vt0.c1)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c3 THEN ((((rt0.c0)AND(vt0.c1)))OR(NULL)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN rt0.c3 THEN ((((rt0.c0)AND(vt0.c1)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c3 THEN ((((rt0.c0)AND(vt0.c1)))OR(NULL)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN rt0.c3 THEN ((((rt0.c0)AND(vt0.c1)))OR(NULL)) END);
SELECT ALL * FROM vt0, t0, rt0 NATURAL JOIN rt2 WHERE (rt2.c3) ORDER BY ((CAST(rt2.c2 AS INTEGER))>=((NOT (rt2.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt2.c3) IS TRUE)  as count FROM vt0, t0, rt0 NATURAL JOIN rt2 ORDER BY ((CAST(rt2.c2 AS INTEGER))>=((NOT (rt2.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 NATURAL JOIN rt2 WHERE (rt2.c3) ORDER BY ((CAST(rt2.c2 AS INTEGER))>=((NOT (rt2.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt2.c3) IS TRUE)  as count FROM vt0, t0, rt0 NATURAL JOIN rt2 ORDER BY ((CAST(rt2.c2 AS INTEGER))>=((NOT (rt2.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 NATURAL JOIN rt2 WHERE (rt2.c3) ORDER BY ((CAST(rt2.c2 AS INTEGER))>=((NOT (rt2.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt2, vt0, rt1 WHERE ((((vt0.c1)) BETWEEN ((rt1.c0 COLLATE NOCASE)) AND ((((NULL)GLOB(rt2.c3)))))) ORDER BY ((((((vt0.c0)>=(NULL)))OR(((rt1.c1) IS TRUE))))AND((NOT (rt2.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((rt1.c0 COLLATE NOCASE)) AND ((((NULL)GLOB(rt2.c3)))))) IS TRUE)  as count FROM rt2, vt0, rt1 ORDER BY ((((((vt0.c0)>=(NULL)))OR(((rt1.c1) IS TRUE))))AND((NOT (rt2.c0)))) ASC);
SELECT COUNT(*) FROM rt2, vt0, rt1 WHERE ((((vt0.c1)) BETWEEN ((rt1.c0 COLLATE NOCASE)) AND ((((NULL)GLOB(rt2.c3)))))) ORDER BY ((((((vt0.c0)>=(NULL)))OR(((rt1.c1) IS TRUE))))AND((NOT (rt2.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((rt1.c0 COLLATE NOCASE)) AND ((((NULL)GLOB(rt2.c3)))))) IS TRUE)  as count FROM rt2, vt0, rt1 ORDER BY ((((((vt0.c0)>=(NULL)))OR(((rt1.c1) IS TRUE))))AND((NOT (rt2.c0)))) ASC);
SELECT COUNT(*) FROM rt2, vt0, rt1 WHERE ((((vt0.c1)) BETWEEN ((rt1.c0 COLLATE NOCASE)) AND ((((NULL)GLOB(rt2.c3)))))) ORDER BY ((((((vt0.c0)>=(NULL)))OR(((rt1.c1) IS TRUE))))AND((NOT (rt2.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((CAST(vt0.c1 AS REAL))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((CAST(vt0.c1 AS REAL))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((CAST(vt0.c1 AS REAL))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, rt2, vt0 WHERE (CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))) THEN NULL END) IS TRUE)  as count FROM rt1, rt2, vt0);
SELECT ALL COUNT(*) FROM rt1, rt2, vt0 WHERE (CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))) THEN NULL END) IS TRUE)  as count FROM rt1, rt2, vt0);
SELECT ALL COUNT(*) FROM rt1, rt2, vt0 WHERE (CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c1))) THEN NULL END);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt2 ON (~ (CASE WHEN rt2.c0 THEN t0.c80 WHEN rt1.c2 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c0 ELSE rt2.c3 END)) CROSS JOIN t0 ON ((((rt2.c0)%(rt1.c2)))>=((rt2.c3 IN ()))) WHERE (((CAST('-1183012482' AS INTEGER)) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (t0.c80 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-1183012482' AS INTEGER)) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (t0.c80 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON (~ (CASE WHEN rt2.c0 THEN t0.c80 WHEN rt1.c2 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c0 ELSE rt2.c3 END)) CROSS JOIN t0 ON ((((rt2.c0)%(rt1.c2)))>=((rt2.c3 IN ()))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt2 ON (~ (CASE WHEN rt2.c0 THEN t0.c80 WHEN rt1.c2 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c0 ELSE rt2.c3 END)) CROSS JOIN t0 ON ((((rt2.c0)%(rt1.c2)))>=((rt2.c3 IN ()))) WHERE (((CAST('-1183012482' AS INTEGER)) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (t0.c80 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-1183012482' AS INTEGER)) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (t0.c80 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON (~ (CASE WHEN rt2.c0 THEN t0.c80 WHEN rt1.c2 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c0 ELSE rt2.c3 END)) CROSS JOIN t0 ON ((((rt2.c0)%(rt1.c2)))>=((rt2.c3 IN ()))));
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE (LIKELY(((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE (LIKELY(((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0, rt2, rt1 WHERE (LIKELY(((rt2.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY rt0.c2 DESC;
SELECT * FROM rt1, t0, rt2 WHERE ((((((rt2.c3, rt2.c0, rt2.c2)) BETWEEN ((t0.c33, rt2.c3, t0.c80)) AND ((rt2.c0, t0.c33, rt2.c1)))) IS FALSE)) ORDER BY ((json_array(t0.c80, rt1.c0)) BETWEEN (CASE rt1.c2  WHEN rt2.c0 THEN t0.c33 WHEN rt2.c3 THEN t0.c80 WHEN '}/' THEN rt1.c1 END) AND (((((t0.c33)AND(rt2.c1)))OR(rt2.c3))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c3, rt2.c0, rt2.c2)) BETWEEN ((t0.c33, rt2.c3, t0.c80)) AND ((rt2.c0, t0.c33, rt2.c1)))) IS FALSE)) IS TRUE)  as count FROM rt1, t0, rt2 ORDER BY ((json_array(t0.c80, rt1.c0)) BETWEEN (CASE rt1.c2  WHEN rt2.c0 THEN t0.c33 WHEN rt2.c3 THEN t0.c80 WHEN '}/' THEN rt1.c1 END) AND (((((t0.c33)AND(rt2.c1)))OR(rt2.c3)))));
SELECT * FROM rt1, t0, rt2 WHERE ((((((rt2.c3, rt2.c0, rt2.c2)) BETWEEN ((t0.c33, rt2.c3, t0.c80)) AND ((rt2.c0, t0.c33, rt2.c1)))) IS FALSE)) ORDER BY ((json_array(t0.c80, rt1.c0)) BETWEEN (CASE rt1.c2  WHEN rt2.c0 THEN t0.c33 WHEN rt2.c3 THEN t0.c80 WHEN '}/' THEN rt1.c1 END) AND (((((t0.c33)AND(rt2.c1)))OR(rt2.c3))));
SELECT SUM(count) FROM (SELECT (((((((rt2.c3, rt2.c0, rt2.c2)) BETWEEN ((t0.c33, rt2.c3, t0.c80)) AND ((rt2.c0, t0.c33, rt2.c1)))) IS FALSE)) IS TRUE)  as count FROM rt1, t0, rt2 ORDER BY ((json_array(t0.c80, rt1.c0)) BETWEEN (CASE rt1.c2  WHEN rt2.c0 THEN t0.c33 WHEN rt2.c3 THEN t0.c80 WHEN '}/' THEN rt1.c1 END) AND (((((t0.c33)AND(rt2.c1)))OR(rt2.c3)))));
SELECT * FROM rt1, t0, rt2 WHERE ((((((rt2.c3, rt2.c0, rt2.c2)) BETWEEN ((t0.c33, rt2.c3, t0.c80)) AND ((rt2.c0, t0.c33, rt2.c1)))) IS FALSE)) ORDER BY ((json_array(t0.c80, rt1.c0)) BETWEEN (CASE rt1.c2  WHEN rt2.c0 THEN t0.c33 WHEN rt2.c3 THEN t0.c80 WHEN '}/' THEN rt1.c1 END) AND (((((t0.c33)AND(rt2.c1)))OR(rt2.c3))));
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c1) NOT BETWEEN (t0.c33) AND (rt1.c2)))<(load_extension(rt1.c1, t0.c80))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (t0.c33) AND (rt1.c2)))<(load_extension(rt1.c1, t0.c80)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c1) NOT BETWEEN (t0.c33) AND (rt1.c2)))<(load_extension(rt1.c1, t0.c80))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (t0.c33) AND (rt1.c2)))<(load_extension(rt1.c1, t0.c80)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM t0, rt2, vt0, rt1, rt0 WHERE (x'') ORDER BY ((HEX(rt2.c2)) BETWEEN ((~ (rt0.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST, ((CAST(rt2.c2 AS NUMERIC)) NOTNULL), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt2, vt0, rt1, rt0 ORDER BY ((HEX(rt2.c2)) BETWEEN ((~ (rt0.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST, ((CAST(rt2.c2 AS NUMERIC)) NOTNULL), vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt2, vt0, rt1, rt0 WHERE (x'') ORDER BY ((HEX(rt2.c2)) BETWEEN ((~ (rt0.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST, ((CAST(rt2.c2 AS NUMERIC)) NOTNULL), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt2, vt0, rt1, rt0 ORDER BY ((HEX(rt2.c2)) BETWEEN ((~ (rt0.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST, ((CAST(rt2.c2 AS NUMERIC)) NOTNULL), vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt2, vt0, rt1, rt0 WHERE (x'') ORDER BY ((HEX(rt2.c2)) BETWEEN ((~ (rt0.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST, ((CAST(rt2.c2 AS NUMERIC)) NOTNULL), vt0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((~ (t0.c80)))&((((t0.c33))>((t0.c80))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c80)))&((((t0.c33))>((t0.c80)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c80)))&((((t0.c33))>((t0.c80))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c80)))&((((t0.c33))>((t0.c80)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c80)))&((((t0.c33))>((t0.c80))))));
SELECT ALL * FROM t0, vt0, rt2, rt0 WHERE (CAST(((0.20432888053722453)<<(0X166cbe9e)) AS NUMERIC)) ORDER BY ((((rt2.c2)>=(vt0.c1)))AND(CHAR(rt0.c1, t0.c33, rt0.c1)))  NULLS LAST, ((rt0.c3)*(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((0.20432888053722453)<<(0X166cbe9e)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt2, rt0 ORDER BY ((((rt2.c2)>=(vt0.c1)))AND(CHAR(rt0.c1, t0.c33, rt0.c1)))  NULLS LAST, ((rt0.c3)*(((rt0.c0) NOTNULL))));
SELECT ALL * FROM t0, vt0, rt2, rt0 WHERE (CAST(((0.20432888053722453)<<(0X166cbe9e)) AS NUMERIC)) ORDER BY ((((rt2.c2)>=(vt0.c1)))AND(CHAR(rt0.c1, t0.c33, rt0.c1)))  NULLS LAST, ((rt0.c3)*(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((0.20432888053722453)<<(0X166cbe9e)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt2, rt0 ORDER BY ((((rt2.c2)>=(vt0.c1)))AND(CHAR(rt0.c1, t0.c33, rt0.c1)))  NULLS LAST, ((rt0.c3)*(((rt0.c0) NOTNULL))));
SELECT ALL * FROM t0, vt0, rt2, rt0 WHERE (CAST(((0.20432888053722453)<<(0X166cbe9e)) AS NUMERIC)) ORDER BY ((((rt2.c2)>=(vt0.c1)))AND(CHAR(rt0.c1, t0.c33, rt0.c1)))  NULLS LAST, ((rt0.c3)*(((rt0.c0) NOTNULL)));
SELECT ALL * FROM rt2, vt0, rt0, rt1 WHERE ((((vt0.c1 IN (rt1.c2)))GLOB(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (rt1.c2)))GLOB(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, vt0, rt0, rt1);
SELECT ALL * FROM rt2, vt0, rt0, rt1 WHERE ((((vt0.c1 IN (rt1.c2)))GLOB(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (rt1.c2)))GLOB(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt2, vt0, rt0, rt1);
SELECT ALL * FROM rt2, vt0, rt0, rt1 WHERE ((((vt0.c1 IN (rt1.c2)))GLOB(vt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt2, rt1 WHERE (-1619895537);
SELECT SUM(count) FROM (SELECT ((-1619895537) IS TRUE)  as count FROM rt2, rt1);
SELECT COUNT(*) FROM rt2, rt1 WHERE (-1619895537);
SELECT SUM(count) FROM (SELECT ((-1619895537) IS TRUE)  as count FROM rt2, rt1);
SELECT COUNT(*) FROM rt2, rt1 WHERE (-1619895537);
SELECT * FROM rt2, rt1, t0, vt0 WHERE (((((rt2.c0 IN ())))>((((((rt2.c3)AND(vt0.c0)))OR(rt2.c2)))))) ORDER BY NULL DESC  NULLS FIRST, UNLIKELY(((t0.c80)<<(rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0 IN ())))>((((((rt2.c3)AND(vt0.c0)))OR(rt2.c2)))))) IS TRUE)  as count FROM rt2, rt1, t0, vt0 ORDER BY NULL DESC  NULLS FIRST, UNLIKELY(((t0.c80)<<(rt1.c1))) ASC);
SELECT * FROM rt2, rt1, t0, vt0 WHERE (((((rt2.c0 IN ())))>((((((rt2.c3)AND(vt0.c0)))OR(rt2.c2)))))) ORDER BY NULL DESC  NULLS FIRST, UNLIKELY(((t0.c80)<<(rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0 IN ())))>((((((rt2.c3)AND(vt0.c0)))OR(rt2.c2)))))) IS TRUE)  as count FROM rt2, rt1, t0, vt0 ORDER BY NULL DESC  NULLS FIRST, UNLIKELY(((t0.c80)<<(rt1.c1))) ASC);
SELECT * FROM rt2, rt1, t0, vt0 WHERE (((((rt2.c0 IN ())))>((((((rt2.c3)AND(vt0.c0)))OR(rt2.c2)))))) ORDER BY NULL DESC  NULLS FIRST, UNLIKELY(((t0.c80)<<(rt1.c1))) ASC;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON vt0.c1 RIGHT OUTER JOIN vt0 ON ((((((((CAST(rt1.c2 AS NUMERIC))AND(((((rt1.c0)OR(rt0.c3)))AND(0.42508760779726495)))))AND(json_array_length(rt1.c1))))AND(((rt1.c1)||(0Xfffffffff186087b)))))AND(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) LEFT OUTER JOIN rt0 ON CAST('2101197836' AS INTEGER) WHERE ((((t0.c80))<((t0.c80))) COLLATE RTRIM) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c33) AND (rt0.c2)))||(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c80))<((t0.c80))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON vt0.c1 RIGHT OUTER JOIN vt0 ON ((((((((CAST(rt1.c2 AS NUMERIC))AND(((((rt1.c0)OR(rt0.c3)))AND(0.42508760779726495)))))AND(json_array_length(rt1.c1))))AND(((rt1.c1)||(0xfffffffff186087b)))))AND(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) LEFT OUTER JOIN rt0 ON CAST('2101197836' AS INTEGER) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c33) AND (rt0.c2)))||(vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON vt0.c1 RIGHT OUTER JOIN vt0 ON ((((((((CAST(rt1.c2 AS NUMERIC))AND(((((rt1.c0)OR(rt0.c3)))AND(0.42508760779726495)))))AND(json_array_length(rt1.c1))))AND(((rt1.c1)||(0Xfffffffff186087b)))))AND(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) LEFT OUTER JOIN rt0 ON CAST('2101197836' AS INTEGER) WHERE ((((t0.c80))<((t0.c80))) COLLATE RTRIM) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c33) AND (rt0.c2)))||(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c80))<((t0.c80))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON vt0.c1 RIGHT OUTER JOIN vt0 ON ((((((((CAST(rt1.c2 AS NUMERIC))AND(((((rt1.c0)OR(rt0.c3)))AND(0.42508760779726495)))))AND(json_array_length(rt1.c1))))AND(((rt1.c1)||(0xfffffffff186087b)))))AND(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) LEFT OUTER JOIN rt0 ON CAST('2101197836' AS INTEGER) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c33) AND (rt0.c2)))||(vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE BINARY THEN (((rt1.c1, rt1.c0, rt1.c2))<((rt1.c2, rt1.c2, rt1.c1))) ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 COLLATE BINARY THEN (((rt1.c1, rt1.c0, rt1.c2))<((rt1.c2, rt1.c2, rt1.c1))) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE BINARY THEN (((rt1.c1, rt1.c0, rt1.c2))<((rt1.c2, rt1.c2, rt1.c1))) ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 COLLATE BINARY THEN (((rt1.c1, rt1.c0, rt1.c2))<((rt1.c2, rt1.c2, rt1.c1))) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE BINARY THEN (((rt1.c1, rt1.c0, rt1.c2))<((rt1.c2, rt1.c2, rt1.c1))) ELSE (rt1.c1 IN ()) END);
SELECT ALL * FROM rt0, rt1, rt2, vt0, t0 WHERE (rt2.c0) ORDER BY CASE '0.7098253924549319'  WHEN ((rt1.c2)!=(rt0.c0)) THEN rt1.c2 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt2.c0) IS TRUE)  as count FROM rt0, rt1, rt2, vt0, t0 ORDER BY CASE '0.7098253924549319'  WHEN ((rt1.c2)<>(rt0.c0)) THEN rt1.c2 END  NULLS LAST);
SELECT ALL * FROM rt0, rt1, rt2, vt0, t0 WHERE (rt2.c0) ORDER BY CASE '0.7098253924549319'  WHEN ((rt1.c2)!=(rt0.c0)) THEN rt1.c2 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt2.c0) IS TRUE)  as count FROM rt0, rt1, rt2, vt0, t0 ORDER BY CASE '0.7098253924549319'  WHEN ((rt1.c2)<>(rt0.c0)) THEN rt1.c2 END  NULLS LAST);
SELECT ALL * FROM rt0, rt1, rt2, vt0, t0 WHERE (rt2.c0) ORDER BY CASE '0.7098253924549319'  WHEN ((rt1.c2)!=(rt0.c0)) THEN rt1.c2 END  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON CAST(LIKELY(rt1.c1) AS INTEGER) WHERE (t0.c80);
SELECT SUM(count) FROM (SELECT ((t0.c80) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON CAST(LIKELY(rt1.c1) AS INTEGER));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON CAST(LIKELY(rt1.c1) AS INTEGER) WHERE (t0.c80);
SELECT SUM(count) FROM (SELECT ((t0.c80) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON CAST(LIKELY(rt1.c1) AS INTEGER));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON CAST(LIKELY(rt1.c1) AS INTEGER) WHERE (t0.c80);
SELECT COUNT(*) FROM rt2, rt0, rt1, vt0 RIGHT OUTER JOIN t0 ON (((rt1.c1)) BETWEEN ((rt2.c0)) AND (((((rt0.c2, t0.c80, rt0.c0)) NOT BETWEEN ((t0.c80, rt2.c2, vt0.c1)) AND ((t0.c80, rt1.c1, -1619895537)))))) WHERE ((((rt1.c0, t0.c33, vt0.c1)) BETWEEN ((((t0.c33)GLOB(rt1.c0)), ((((vt0.c0)AND(rt1.c0)))OR(t0.c33)), ((rt0.c0)AND(rt2.c3)))) AND ((t0.c33, ((t0.c33)<=('''㏀XEr5>{꾺')), (NOT (rt2.c0)))))) ORDER BY (((((rt0.c2)<(rt2.c0)), 0.1096041326644428, rt2.c2))<((((rt2.c3)|(vt0.c0)), (NOT (rt0.c2)), DATE(vt0.c0, '02', '2114646180', rt2.c0, NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, t0.c33, vt0.c1)) BETWEEN ((((t0.c33)GLOB(rt1.c0)), ((((vt0.c0)AND(rt1.c0)))OR(t0.c33)), ((rt0.c0)AND(rt2.c3)))) AND ((t0.c33, ((t0.c33)<=('''㏀XEr5>{꾺')), (NOT (rt2.c0)))))) IS TRUE)  as count FROM rt2, rt0, rt1, vt0 RIGHT OUTER JOIN t0 ON (((rt1.c1)) BETWEEN ((rt2.c0)) AND (((((rt0.c2, t0.c80, rt0.c0)) NOT BETWEEN ((t0.c80, rt2.c2, vt0.c1)) AND ((t0.c80, rt1.c1, -1619895537)))))) ORDER BY (((((rt0.c2)<(rt2.c0)), 0.1096041326644428, rt2.c2))<((((rt2.c3)|(vt0.c0)), (NOT (rt0.c2)), DATE(vt0.c0, '02', '2114646180', rt2.c0, NULL)))) DESC);
SELECT COUNT(*) FROM rt2, rt0, rt1, vt0 RIGHT OUTER JOIN t0 ON (((rt1.c1)) BETWEEN ((rt2.c0)) AND (((((rt0.c2, t0.c80, rt0.c0)) NOT BETWEEN ((t0.c80, rt2.c2, vt0.c1)) AND ((t0.c80, rt1.c1, -1619895537)))))) WHERE ((((rt1.c0, t0.c33, vt0.c1)) BETWEEN ((((t0.c33)GLOB(rt1.c0)), ((((vt0.c0)AND(rt1.c0)))OR(t0.c33)), ((rt0.c0)AND(rt2.c3)))) AND ((t0.c33, ((t0.c33)<=('''㏀XEr5>{꾺')), (NOT (rt2.c0)))))) ORDER BY (((((rt0.c2)<(rt2.c0)), 0.1096041326644428, rt2.c2))<((((rt2.c3)|(vt0.c0)), (NOT (rt0.c2)), DATE(vt0.c0, '02', '2114646180', rt2.c0, NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, t0.c33, vt0.c1)) BETWEEN ((((t0.c33)GLOB(rt1.c0)), ((((vt0.c0)AND(rt1.c0)))OR(t0.c33)), ((rt0.c0)AND(rt2.c3)))) AND ((t0.c33, ((t0.c33)<=('''㏀XEr5>{꾺')), (NOT (rt2.c0)))))) IS TRUE)  as count FROM rt2, rt0, rt1, vt0 RIGHT OUTER JOIN t0 ON (((rt1.c1)) BETWEEN ((rt2.c0)) AND (((((rt0.c2, t0.c80, rt0.c0)) NOT BETWEEN ((t0.c80, rt2.c2, vt0.c1)) AND ((t0.c80, rt1.c1, -1619895537)))))) ORDER BY (((((rt0.c2)<(rt2.c0)), 0.1096041326644428, rt2.c2))<((((rt2.c3)|(vt0.c0)), (NOT (rt0.c2)), DATE(vt0.c0, '02', '2114646180', rt2.c0, NULL)))) DESC);
SELECT COUNT(*) FROM rt2, rt0, rt1, vt0 RIGHT OUTER JOIN t0 ON (((rt1.c1)) BETWEEN ((rt2.c0)) AND (((((rt0.c2, t0.c80, rt0.c0)) NOT BETWEEN ((t0.c80, rt2.c2, vt0.c1)) AND ((t0.c80, rt1.c1, -1619895537)))))) WHERE ((((rt1.c0, t0.c33, vt0.c1)) BETWEEN ((((t0.c33)GLOB(rt1.c0)), ((((vt0.c0)AND(rt1.c0)))OR(t0.c33)), ((rt0.c0)AND(rt2.c3)))) AND ((t0.c33, ((t0.c33)<=('''㏀XEr5>{꾺')), (NOT (rt2.c0)))))) ORDER BY (((((rt0.c2)<(rt2.c0)), 0.1096041326644428, rt2.c2))<((((rt2.c3)|(vt0.c0)), (NOT (rt0.c2)), DATE(vt0.c0, '02', '2114646180', rt2.c0, NULL)))) DESC;
SELECT COUNT(*) FROM rt1, rt2, t0, vt0 WHERE (((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c80 END) BETWEEN (((((rt2.c3)OR(rt2.c0)))OR(t0.c33))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt2.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c80 END) BETWEEN (((((rt2.c3)OR(rt2.c0)))OR(t0.c33))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt2.c3))))) IS TRUE)  as count FROM rt1, rt2, t0, vt0);
SELECT COUNT(*) FROM rt1, rt2, t0, vt0 WHERE (((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c80 END) BETWEEN (((((rt2.c3)OR(rt2.c0)))OR(t0.c33))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt2.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c80 END) BETWEEN (((((rt2.c3)OR(rt2.c0)))OR(t0.c33))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt2.c3))))) IS TRUE)  as count FROM rt1, rt2, t0, vt0);
SELECT COUNT(*) FROM rt1, rt2, t0, vt0 WHERE (((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c80 END) BETWEEN (((((rt2.c3)OR(rt2.c0)))OR(t0.c33))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt2.c3)))));
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(rt0.c0 COLLATE NOCASE, ((rt0.c3) NOTNULL))) ORDER BY json_array(TRIM(DISTINCT rt0.c1, rt0.c0), ((rt0.c2) ISNULL))  NULLS FIRST, (((((rt0.c2, rt0.c3, NULL))>=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c3)|(rt0.c3)))) ASC  NULLS LAST, ((rt0.c3 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c0 COLLATE NOCASE, ((rt0.c3) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY json_array(TRIM(DISTINCT rt0.c1, rt0.c0), ((rt0.c2) ISNULL))  NULLS FIRST, (((((rt0.c2, rt0.c3, NULL))>=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c3)|(rt0.c3)))) ASC  NULLS LAST, ((rt0.c3 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(rt0.c0 COLLATE NOCASE, ((rt0.c3) NOTNULL))) ORDER BY json_array(TRIM(DISTINCT rt0.c1, rt0.c0), ((rt0.c2) ISNULL))  NULLS FIRST, (((((rt0.c2, rt0.c3, NULL))>=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c3)|(rt0.c3)))) ASC  NULLS LAST, ((rt0.c3 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c0 COLLATE NOCASE, ((rt0.c3) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY json_array(TRIM(DISTINCT rt0.c1, rt0.c0), ((rt0.c2) ISNULL))  NULLS FIRST, (((((rt0.c2, rt0.c3, NULL))>=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c3)|(rt0.c3)))) ASC  NULLS LAST, ((rt0.c3 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(rt0.c0 COLLATE NOCASE, ((rt0.c3) NOTNULL))) ORDER BY json_array(TRIM(DISTINCT rt0.c1, rt0.c0), ((rt0.c2) ISNULL))  NULLS FIRST, (((((rt0.c2, rt0.c3, NULL))>=((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c3)|(rt0.c3)))) ASC  NULLS LAST, ((rt0.c3 IN ()) IN ())  NULLS FIRST;
SELECT * FROM t0, rt0, vt0, rt1, rt2 WHERE (t0.c80);
SELECT SUM(count) FROM (SELECT ALL ((t0.c80) IS TRUE)  as count FROM t0, rt0, vt0, rt1, rt2);
SELECT * FROM t0, rt0, vt0, rt1, rt2 WHERE (t0.c80);
SELECT SUM(count) FROM (SELECT ALL ((t0.c80) IS TRUE)  as count FROM t0, rt0, vt0, rt1, rt2);
SELECT * FROM t0, rt0, vt0, rt1, rt2 WHERE (t0.c80);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2, t0 WHERE (CAST(rt2.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY CASE CASE WHEN t0.c80 THEN rt2.c0 WHEN rt0.c3 THEN rt2.c1 WHEN t0.c33 THEN rt2.c3 END  WHEN ((((rt2.c2)OR(t0.c80)))OR(rt1.c1)) THEN ABS(rt2.c1) WHEN ((rt1.c2) NOT BETWEEN (rt2.c0) AND (rt1.c0)) THEN ((((rt1.c2)OR(rt1.c2)))OR(0.967210567267569)) WHEN ((rt2.c3) ISNULL) THEN ((rt2.c3)>(rt0.c0)) WHEN (((rt2.c1, rt2.c1, rt2.c1))<((rt0.c0, rt1.c0, rt2.c3))) THEN ((rt2.c2)<<(rt0.c2)) WHEN ((rt2.c3) BETWEEN (NULL) AND (NULL)) THEN UPPER(rt0.c1) ELSE ((((rt2.c1)AND(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt2.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, rt2, t0 ORDER BY CASE CASE WHEN t0.c80 THEN rt2.c0 WHEN rt0.c3 THEN rt2.c1 WHEN t0.c33 THEN rt2.c3 END  WHEN ((((rt2.c2)OR(t0.c80)))OR(rt1.c1)) THEN ABS(rt2.c1) WHEN ((rt1.c2) NOT BETWEEN (rt2.c0) AND (rt1.c0)) THEN ((((rt1.c2)OR(rt1.c2)))OR(0.967210567267569)) WHEN ((rt2.c3) ISNULL) THEN ((rt2.c3)>(rt0.c0)) WHEN (((rt2.c1, rt2.c1, rt2.c1))<((rt0.c0, rt1.c0, rt2.c3))) THEN ((rt2.c2)<<(rt0.c2)) WHEN ((rt2.c3) BETWEEN (NULL) AND (NULL)) THEN UPPER(rt0.c1) ELSE ((((rt2.c1)AND(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2, t0 WHERE (CAST(rt2.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY CASE CASE WHEN t0.c80 THEN rt2.c0 WHEN rt0.c3 THEN rt2.c1 WHEN t0.c33 THEN rt2.c3 END  WHEN ((((rt2.c2)OR(t0.c80)))OR(rt1.c1)) THEN ABS(rt2.c1) WHEN ((rt1.c2) NOT BETWEEN (rt2.c0) AND (rt1.c0)) THEN ((((rt1.c2)OR(rt1.c2)))OR(0.967210567267569)) WHEN ((rt2.c3) ISNULL) THEN ((rt2.c3)>(rt0.c0)) WHEN (((rt2.c1, rt2.c1, rt2.c1))<((rt0.c0, rt1.c0, rt2.c3))) THEN ((rt2.c2)<<(rt0.c2)) WHEN ((rt2.c3) BETWEEN (NULL) AND (NULL)) THEN UPPER(rt0.c1) ELSE ((((rt2.c1)AND(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt2.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, rt2, t0 ORDER BY CASE CASE WHEN t0.c80 THEN rt2.c0 WHEN rt0.c3 THEN rt2.c1 WHEN t0.c33 THEN rt2.c3 END  WHEN ((((rt2.c2)OR(t0.c80)))OR(rt1.c1)) THEN ABS(rt2.c1) WHEN ((rt1.c2) NOT BETWEEN (rt2.c0) AND (rt1.c0)) THEN ((((rt1.c2)OR(rt1.c2)))OR(0.967210567267569)) WHEN ((rt2.c3) ISNULL) THEN ((rt2.c3)>(rt0.c0)) WHEN (((rt2.c1, rt2.c1, rt2.c1))<((rt0.c0, rt1.c0, rt2.c3))) THEN ((rt2.c2)<<(rt0.c2)) WHEN ((rt2.c3) BETWEEN (NULL) AND (NULL)) THEN UPPER(rt0.c1) ELSE ((((rt2.c1)AND(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, rt2, t0 WHERE (CAST(rt2.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY CASE CASE WHEN t0.c80 THEN rt2.c0 WHEN rt0.c3 THEN rt2.c1 WHEN t0.c33 THEN rt2.c3 END  WHEN ((((rt2.c2)OR(t0.c80)))OR(rt1.c1)) THEN ABS(rt2.c1) WHEN ((rt1.c2) NOT BETWEEN (rt2.c0) AND (rt1.c0)) THEN ((((rt1.c2)OR(rt1.c2)))OR(0.967210567267569)) WHEN ((rt2.c3) ISNULL) THEN ((rt2.c3)>(rt0.c0)) WHEN (((rt2.c1, rt2.c1, rt2.c1))<((rt0.c0, rt1.c0, rt2.c3))) THEN ((rt2.c2)<<(rt0.c2)) WHEN ((rt2.c3) BETWEEN (NULL) AND (NULL)) THEN UPPER(rt0.c1) ELSE ((((rt2.c1)AND(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST;
SELECT * FROM rt1, vt0, t0, rt2, rt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1, vt0, t0, rt2, rt0);
SELECT * FROM rt1, vt0, t0, rt2, rt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1, vt0, t0, rt2, rt0);
SELECT * FROM rt1, vt0, t0, rt2, rt0 WHERE (((x'') NOTNULL));
SELECT * FROM rt2, rt0, vt0, t0, rt1 WHERE (CASE WHEN ((((((((rt1.c2)OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c1)) THEN ((t0.c33) IS TRUE) END) ORDER BY TRIM(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c2)OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c1)) THEN ((t0.c33) IS TRUE) END) IS TRUE)  as count FROM rt2, rt0, vt0, t0, rt1 ORDER BY TRIM(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST);
SELECT * FROM rt2, rt0, vt0, t0, rt1 WHERE (CASE WHEN ((((((((rt1.c2)OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c1)) THEN ((t0.c33) IS TRUE) END) ORDER BY TRIM(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c2)OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c1)) THEN ((t0.c33) IS TRUE) END) IS TRUE)  as count FROM rt2, rt0, vt0, t0, rt1 ORDER BY TRIM(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST);
SELECT * FROM rt2, rt0, vt0, t0, rt1 WHERE (CASE WHEN ((((((((rt1.c2)OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c1)) THEN ((t0.c33) IS TRUE) END) ORDER BY TRIM(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, rt2, rt1 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT CAST(rt0.c3 AS INTEGER)) WHERE (((((((rt2.c2)-(rt2.c0)))AND(((rt2.c2) NOTNULL))))AND(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c2)-(rt2.c0)))AND(((rt2.c2) NOTNULL))))AND(rt1.c2))) IS TRUE)  as count FROM t0, rt0, rt2, rt1 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT CAST(rt0.c3 AS INTEGER)));
SELECT ALL COUNT(*) FROM t0, rt0, rt2, rt1 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT CAST(rt0.c3 AS INTEGER)) WHERE (((((((rt2.c2)-(rt2.c0)))AND(((rt2.c2) NOTNULL))))AND(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c2)-(rt2.c0)))AND(((rt2.c2) NOTNULL))))AND(rt1.c2))) IS TRUE)  as count FROM t0, rt0, rt2, rt1 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT CAST(rt0.c3 AS INTEGER)));
SELECT ALL COUNT(*) FROM t0, rt0, rt2, rt1 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT CAST(rt0.c3 AS INTEGER)) WHERE (((((((rt2.c2)-(rt2.c0)))AND(((rt2.c2) NOTNULL))))AND(rt1.c2)));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN rt2 ON CASE CASE rt0.c2  WHEN rt0.c0 THEN rt2.c2 END  WHEN rt0.c2 COLLATE NOCASE THEN '-1556741617' ELSE PRINTF(rt0.c3) END CROSS JOIN t0 ON ((rt1.c1) BETWEEN (0.3321114571300663) AND (((((rt2.c3)OR(rt0.c3)))AND(rt1.c2)))) CROSS JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM WHERE (((CAST(rt2.c1 AS TEXT)) ISNULL)) ORDER BY ((rt2.c2 COLLATE BINARY)%((rt2.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt2.c1 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt2 ON CASE CASE rt0.c2  WHEN rt0.c0 THEN rt2.c2 END  WHEN rt0.c2 COLLATE NOCASE THEN '-1556741617' ELSE PRINTF(rt0.c3) END CROSS JOIN t0 ON ((rt1.c1) BETWEEN (0.3321114571300663) AND (((((rt2.c3)OR(rt0.c3)))AND(rt1.c2)))) CROSS JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM ORDER BY ((rt2.c2 COLLATE BINARY)%((rt2.c3 IN ()))) DESC);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN rt2 ON CASE CASE rt0.c2  WHEN rt0.c0 THEN rt2.c2 END  WHEN rt0.c2 COLLATE NOCASE THEN '-1556741617' ELSE PRINTF(rt0.c3) END CROSS JOIN t0 ON ((rt1.c1) BETWEEN (0.3321114571300663) AND (((((rt2.c3)OR(rt0.c3)))AND(rt1.c2)))) CROSS JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM WHERE (((CAST(rt2.c1 AS TEXT)) ISNULL)) ORDER BY ((rt2.c2 COLLATE BINARY)%((rt2.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt2.c1 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt2 ON CASE CASE rt0.c2  WHEN rt0.c0 THEN rt2.c2 END  WHEN rt0.c2 COLLATE NOCASE THEN '-1556741617' ELSE PRINTF(rt0.c3) END CROSS JOIN t0 ON ((rt1.c1) BETWEEN (0.3321114571300663) AND (((((rt2.c3)OR(rt0.c3)))AND(rt1.c2)))) CROSS JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM ORDER BY ((rt2.c2 COLLATE BINARY)%((rt2.c3 IN ()))) DESC);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN rt2 ON CASE CASE rt0.c2  WHEN rt0.c0 THEN rt2.c2 END  WHEN rt0.c2 COLLATE NOCASE THEN '-1556741617' ELSE PRINTF(rt0.c3) END CROSS JOIN t0 ON ((rt1.c1) BETWEEN (0.3321114571300663) AND (((((rt2.c3)OR(rt0.c3)))AND(rt1.c2)))) CROSS JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM WHERE (((CAST(rt2.c1 AS TEXT)) ISNULL)) ORDER BY ((rt2.c2 COLLATE BINARY)%((rt2.c3 IN ()))) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c2)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS NOT(rt1.c2)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c2)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS NOT(rt1.c2)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c2)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0, t0, rt2 WHERE (((((CAST(rt2.c3 AS REAL))AND(((t0.c80)<>(rt2.c1)))))OR(CASE vt0.c0  WHEN t0.c33 THEN rt2.c0 WHEN t0.c33 THEN rt2.c0 WHEN rt2.c2 THEN vt0.c1 ELSE rt2.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt2.c3 AS REAL))AND(((t0.c80)<>(rt2.c1)))))OR(CASE vt0.c0  WHEN t0.c33 THEN rt2.c0 WHEN t0.c33 THEN rt2.c0 WHEN rt2.c2 THEN vt0.c1 ELSE rt2.c1 END))) IS TRUE)  as count FROM vt0, t0, rt2);
SELECT COUNT(*) FROM vt0, t0, rt2 WHERE (((((CAST(rt2.c3 AS REAL))AND(((t0.c80)<>(rt2.c1)))))OR(CASE vt0.c0  WHEN t0.c33 THEN rt2.c0 WHEN t0.c33 THEN rt2.c0 WHEN rt2.c2 THEN vt0.c1 ELSE rt2.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt2.c3 AS REAL))AND(((t0.c80)<>(rt2.c1)))))OR(CASE vt0.c0  WHEN t0.c33 THEN rt2.c0 WHEN t0.c33 THEN rt2.c0 WHEN rt2.c2 THEN vt0.c1 ELSE rt2.c1 END))) IS TRUE)  as count FROM vt0, t0, rt2);
SELECT COUNT(*) FROM vt0, t0, rt2 WHERE (((((CAST(rt2.c3 AS REAL))AND(((t0.c80)<>(rt2.c1)))))OR(CASE vt0.c0  WHEN t0.c33 THEN rt2.c0 WHEN t0.c33 THEN rt2.c0 WHEN rt2.c2 THEN vt0.c1 ELSE rt2.c1 END)));
SELECT COUNT(*) FROM vt0, rt0, rt2, t0, rt1 WHERE (((x'')IS NOT(DATETIME(rt1.c1, rt1.c2, vt0.c1, rt1.c2, t0.c33))));
SELECT SUM(count) FROM (SELECT ((((x'')IS NOT(DATETIME(rt1.c1, rt1.c2, vt0.c1, rt1.c2, t0.c33)))) IS TRUE)  as count FROM vt0, rt0, rt2, t0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt2, t0, rt1 WHERE (((x'')IS NOT(DATETIME(rt1.c1, rt1.c2, vt0.c1, rt1.c2, t0.c33))));
SELECT SUM(count) FROM (SELECT ((((x'')IS NOT(DATETIME(rt1.c1, rt1.c2, vt0.c1, rt1.c2, t0.c33)))) IS TRUE)  as count FROM vt0, rt0, rt2, t0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt2, t0, rt1 WHERE (((x'')IS NOT(DATETIME(rt1.c1, rt1.c2, vt0.c1, rt1.c2, t0.c33))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)GLOB(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((((((((rt0.c1 IN ()))OR((x'' IN ()))))AND(((rt0.c3)*(rt0.c3)))))OR(((rt0.c0)<=(rt0.c3)))))OR(((('850122346')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)GLOB(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c1 IN ()))OR((x'' IN ()))))AND(((rt0.c3)*(rt0.c3)))))OR(((rt0.c0)<=(rt0.c3)))))OR(((('850122346')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)GLOB(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((((((((rt0.c1 IN ()))OR((x'' IN ()))))AND(((rt0.c3)*(rt0.c3)))))OR(((rt0.c0)<=(rt0.c3)))))OR(((('850122346')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)GLOB(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c1 IN ()))OR((x'' IN ()))))AND(((rt0.c3)*(rt0.c3)))))OR(((rt0.c0)<=(rt0.c3)))))OR(((('850122346')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)GLOB(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((((((((rt0.c1 IN ()))OR((x'' IN ()))))AND(((rt0.c3)*(rt0.c3)))))OR(((rt0.c0)<=(rt0.c3)))))OR(((('850122346')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c1)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c1)GLOB(rt0.c2)))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c1)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c1)GLOB(rt0.c2)))) IS TRUE)  as count FROM rt1, rt2, rt0);
SELECT ALL COUNT(*) FROM rt1, rt2, rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c1)GLOB(rt0.c2))));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((CASE WHEN t0.c80 THEN t0.c80 END)) AND ((((rt0.c2) BETWEEN (vt0.c1) AND (t0.c80))))) RIGHT OUTER JOIN vt0 ON (NOT (((((vt0.c0)OR(rt0.c1)))OR(t0.c33)))) WHERE (((((rt0.c2) NOTNULL))<=((+ ('')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))<=((+ (''))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((CASE WHEN t0.c80 THEN t0.c80 END)) AND ((((rt0.c2) BETWEEN (vt0.c1) AND (t0.c80))))) RIGHT OUTER JOIN vt0 ON (NOT (((((vt0.c0)OR(rt0.c1)))OR(t0.c33)))));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((CASE WHEN t0.c80 THEN t0.c80 END)) AND ((((rt0.c2) BETWEEN (vt0.c1) AND (t0.c80))))) RIGHT OUTER JOIN vt0 ON (NOT (((((vt0.c0)OR(rt0.c1)))OR(t0.c33)))) WHERE (((((rt0.c2) NOTNULL))<=((+ ('')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))<=((+ (''))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((CASE WHEN t0.c80 THEN t0.c80 END)) AND ((((rt0.c2) BETWEEN (vt0.c1) AND (t0.c80))))) RIGHT OUTER JOIN vt0 ON (NOT (((((vt0.c0)OR(rt0.c1)))OR(t0.c33)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (load_extension(NULL, ((rt1.c1)+(rt1.c2)))) ORDER BY SQLITE_COMPILEOPTION_GET(rt1.c0)  NULLS FIRST, CAST(rt0.c2 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(NULL, ((rt1.c1)+(rt1.c2)))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY SQLITE_COMPILEOPTION_GET(rt1.c0)  NULLS FIRST, CAST(rt0.c2 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (load_extension(NULL, ((rt1.c1)+(rt1.c2)))) ORDER BY SQLITE_COMPILEOPTION_GET(rt1.c0)  NULLS FIRST, CAST(rt0.c2 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(NULL, ((rt1.c1)+(rt1.c2)))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY SQLITE_COMPILEOPTION_GET(rt1.c0)  NULLS FIRST, CAST(rt0.c2 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (QUOTE(SQLITE_COMPILEOPTION_USED(t0.c80)));
SELECT SUM(count) FROM (SELECT ((QUOTE(SQLITE_COMPILEOPTION_USED(t0.c80))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (QUOTE(SQLITE_COMPILEOPTION_USED(t0.c80)));
SELECT SUM(count) FROM (SELECT ((QUOTE(SQLITE_COMPILEOPTION_USED(t0.c80))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (QUOTE(SQLITE_COMPILEOPTION_USED(t0.c80)));
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1 CROSS JOIN vt0 ON (((t0.c33 IN ()))OR(((t0.c80)>(t0.c80)))) INNER JOIN rt2 ON CASE WHEN ((rt0.c1) NOT NULL) THEN ((((rt2.c2)AND(rt1.c2)))OR(t0.c80)) WHEN ((rt2.c1)GLOB(NULL)) THEN (~ (NULL)) WHEN ((rt2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt2.c2 END FULL OUTER JOIN rt0 ON CASE (((vt0.c0, 0.6832781031973796, x'6bb3')) NOT BETWEEN ((rt1.c1, rt1.c1, rt2.c2)) AND ((rt0.c2, 0.0018633569738312206, rt0.c1)))  WHEN (((rt0.c2, t0.c33, t0.c33)) NOT BETWEEN ((t0.c80, rt1.c0, rt2.c1)) AND ((rt2.c3, vt0.c1, rt1.c1))) THEN ((vt0.c0)|(vt0.c1)) ELSE ((1577778448) ISNULL) END WHERE ((((rt2.c1)) BETWEEN ((((t0.c33)GLOB(rt0.c3)))) AND ((''))));
SELECT SUM(count) FROM (SELECT (((((rt2.c1)) BETWEEN ((((t0.c33)GLOB(rt0.c3)))) AND (('')))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt0 ON (((t0.c33 IN ()))OR(((t0.c80)>(t0.c80)))) INNER JOIN rt2 ON CASE WHEN ((rt0.c1) NOT NULL) THEN ((((rt2.c2)AND(rt1.c2)))OR(t0.c80)) WHEN ((rt2.c1)GLOB(NULL)) THEN (~ (NULL)) WHEN ((rt2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt2.c2 END FULL OUTER JOIN rt0 ON CASE (((vt0.c0, 0.6832781031973796, x'6bb3')) NOT BETWEEN ((rt1.c1, rt1.c1, rt2.c2)) AND ((rt0.c2, 0.0018633569738312206, rt0.c1)))  WHEN (((rt0.c2, t0.c33, t0.c33)) NOT BETWEEN ((t0.c80, rt1.c0, rt2.c1)) AND ((rt2.c3, vt0.c1, rt1.c1))) THEN ((vt0.c0)|(vt0.c1)) ELSE ((1577778448) ISNULL) END);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1 CROSS JOIN vt0 ON (((t0.c33 IN ()))OR(((t0.c80)>(t0.c80)))) INNER JOIN rt2 ON CASE WHEN ((rt0.c1) NOT NULL) THEN ((((rt2.c2)AND(rt1.c2)))OR(t0.c80)) WHEN ((rt2.c1)GLOB(NULL)) THEN (~ (NULL)) WHEN ((rt2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt2.c2 END FULL OUTER JOIN rt0 ON CASE (((vt0.c0, 0.6832781031973796, x'6bb3')) NOT BETWEEN ((rt1.c1, rt1.c1, rt2.c2)) AND ((rt0.c2, 0.0018633569738312206, rt0.c1)))  WHEN (((rt0.c2, t0.c33, t0.c33)) NOT BETWEEN ((t0.c80, rt1.c0, rt2.c1)) AND ((rt2.c3, vt0.c1, rt1.c1))) THEN ((vt0.c0)|(vt0.c1)) ELSE ((1577778448) ISNULL) END WHERE ((((rt2.c1)) BETWEEN ((((t0.c33)GLOB(rt0.c3)))) AND ((''))));
SELECT SUM(count) FROM (SELECT (((((rt2.c1)) BETWEEN ((((t0.c33)GLOB(rt0.c3)))) AND (('')))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt0 ON (((t0.c33 IN ()))OR(((t0.c80)>(t0.c80)))) INNER JOIN rt2 ON CASE WHEN ((rt0.c1) NOT NULL) THEN ((((rt2.c2)AND(rt1.c2)))OR(t0.c80)) WHEN ((rt2.c1)GLOB(NULL)) THEN (~ (NULL)) WHEN ((rt2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN rt2.c2 END FULL OUTER JOIN rt0 ON CASE (((vt0.c0, 0.6832781031973796, x'6bb3')) NOT BETWEEN ((rt1.c1, rt1.c1, rt2.c2)) AND ((rt0.c2, 0.0018633569738312206, rt0.c1)))  WHEN (((rt0.c2, t0.c33, t0.c33)) NOT BETWEEN ((t0.c80, rt1.c0, rt2.c1)) AND ((rt2.c3, vt0.c1, rt1.c1))) THEN ((vt0.c0)|(vt0.c1)) ELSE ((1577778448) ISNULL) END);
SELECT ALL * FROM vt0, t0, rt0 FULL OUTER JOIN rt2 ON ((((t0.c80)IS(vt0.c1)))>=(vt0.c0)) INNER JOIN rt1 ON ABS(((t0.c80) BETWEEN (rt0.c2) AND (rt0.c3))) WHERE (CAST(((((((((((((rt0.c1)OR(rt2.c2)))AND(rt1.c2)))AND(t0.c33)))AND(rt2.c3)))AND(rt0.c1)))OR(rt2.c2)) AS INTEGER)) ORDER BY (~ (((((rt2.c1)OR(rt2.c1)))OR(rt1.c1)))) ASC  NULLS LAST, (((x'c7fe', (rt2.c3 IN ()), rt1.c2 COLLATE BINARY, ((NULL) NOT NULL), ((t0.c80) IS TRUE)))>=(((('218526084') NOT NULL), ((rt0.c1) BETWEEN (rt0.c2) AND (x'')), (- (rt0.c3)), (+ (rt2.c2)), ((rt2.c1)<=(rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((rt0.c1)OR(rt2.c2)))AND(rt1.c2)))AND(t0.c33)))AND(rt2.c3)))AND(rt0.c1)))OR(rt2.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0 FULL OUTER JOIN rt2 ON ((((t0.c80)IS(vt0.c1)))>=(vt0.c0)) INNER JOIN rt1 ON ABS(((t0.c80) BETWEEN (rt0.c2) AND (rt0.c3))) ORDER BY (~ (((((rt2.c1)OR(rt2.c1)))OR(rt1.c1)))) ASC  NULLS LAST, (((x'c7fe', (rt2.c3 IN ()), rt1.c2 COLLATE BINARY, ((NULL) NOT NULL), ((t0.c80) IS TRUE)))>=(((('218526084') NOT NULL), ((rt0.c1) BETWEEN (rt0.c2) AND (x'')), (- (rt0.c3)), (+ (rt2.c2)), ((rt2.c1)<=(rt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 FULL OUTER JOIN rt2 ON ((((t0.c80)IS(vt0.c1)))>=(vt0.c0)) INNER JOIN rt1 ON ABS(((t0.c80) BETWEEN (rt0.c2) AND (rt0.c3))) WHERE (CAST(((((((((((((rt0.c1)OR(rt2.c2)))AND(rt1.c2)))AND(t0.c33)))AND(rt2.c3)))AND(rt0.c1)))OR(rt2.c2)) AS INTEGER)) ORDER BY (~ (((((rt2.c1)OR(rt2.c1)))OR(rt1.c1)))) ASC  NULLS LAST, (((x'c7fe', (rt2.c3 IN ()), rt1.c2 COLLATE BINARY, ((NULL) NOT NULL), ((t0.c80) IS TRUE)))>=(((('218526084') NOT NULL), ((rt0.c1) BETWEEN (rt0.c2) AND (x'')), (- (rt0.c3)), (+ (rt2.c2)), ((rt2.c1)<=(rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((rt0.c1)OR(rt2.c2)))AND(rt1.c2)))AND(t0.c33)))AND(rt2.c3)))AND(rt0.c1)))OR(rt2.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0 FULL OUTER JOIN rt2 ON ((((t0.c80)IS(vt0.c1)))>=(vt0.c0)) INNER JOIN rt1 ON ABS(((t0.c80) BETWEEN (rt0.c2) AND (rt0.c3))) ORDER BY (~ (((((rt2.c1)OR(rt2.c1)))OR(rt1.c1)))) ASC  NULLS LAST, (((x'c7fe', (rt2.c3 IN ()), rt1.c2 COLLATE BINARY, ((NULL) NOT NULL), ((t0.c80) IS TRUE)))>=(((('218526084') NOT NULL), ((rt0.c1) BETWEEN (rt0.c2) AND (x'')), (- (rt0.c3)), (+ (rt2.c2)), ((rt2.c1)<=(rt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 FULL OUTER JOIN rt2 ON ((((t0.c80)IS(vt0.c1)))>=(vt0.c0)) INNER JOIN rt1 ON ABS(((t0.c80) BETWEEN (rt0.c2) AND (rt0.c3))) WHERE (CAST(((((((((((((rt0.c1)OR(rt2.c2)))AND(rt1.c2)))AND(t0.c33)))AND(rt2.c3)))AND(rt0.c1)))OR(rt2.c2)) AS INTEGER)) ORDER BY (~ (((((rt2.c1)OR(rt2.c1)))OR(rt1.c1)))) ASC  NULLS LAST, (((x'c7fe', (rt2.c3 IN ()), rt1.c2 COLLATE BINARY, ((NULL) NOT NULL), ((t0.c80) IS TRUE)))>=(((('218526084') NOT NULL), ((rt0.c1) BETWEEN (rt0.c2) AND (x'')), (- (rt0.c3)), (+ (rt2.c2)), ((rt2.c1)<=(rt1.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY json_insert(t0.c33, rt0.c1, rt0.c0, 0X349617c6, rt0.c1) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c33)AND(rt0.c2)))AND(rt0.c0))  WHEN (((('0.7462508549098151')AND(t0.c33)))AND(t0.c80)) THEN ((rt0.c3)%(rt0.c3)) ELSE ((rt0.c3) NOT NULL) END, 0.8222906497840095;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY json_insert(t0.c33, rt0.c1, rt0.c0, 0X349617c6, rt0.c1) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c33)AND(rt0.c2)))AND(rt0.c0))  WHEN (((('0.7462508549098151')AND(t0.c33)))AND(t0.c80)) THEN ((rt0.c3)%(rt0.c3)) ELSE ((rt0.c3) NOT NULL) END, 0.8222906497840095);
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY json_insert(t0.c33, rt0.c1, rt0.c0, 0X349617c6, rt0.c1) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c33)AND(rt0.c2)))AND(rt0.c0))  WHEN (((('0.7462508549098151')AND(t0.c33)))AND(t0.c80)) THEN ((rt0.c3)%(rt0.c3)) ELSE ((rt0.c3) NOT NULL) END, 0.8222906497840095;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY json_insert(t0.c33, rt0.c1, rt0.c0, 0X349617c6, rt0.c1) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c33)AND(rt0.c2)))AND(rt0.c0))  WHEN (((('0.7462508549098151')AND(t0.c33)))AND(t0.c80)) THEN ((rt0.c3)%(rt0.c3)) ELSE ((rt0.c3) NOT NULL) END, 0.8222906497840095);
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY json_insert(t0.c33, rt0.c1, rt0.c0, 0X349617c6, rt0.c1) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c33)AND(rt0.c2)))AND(rt0.c0))  WHEN (((('0.7462508549098151')AND(t0.c33)))AND(t0.c80)) THEN ((rt0.c3)%(rt0.c3)) ELSE ((rt0.c3) NOT NULL) END, 0.8222906497840095;
SELECT ALL COUNT(*) FROM rt1, rt2, vt0, rt0, t0 WHERE (((rt2.c1 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c80 THEN rt1.c0 END) AND (((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c80 THEN rt1.c0 END) AND (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, rt2, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt2, vt0, rt0, t0 WHERE (((rt2.c1 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c80 THEN rt1.c0 END) AND (((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c80 THEN rt1.c0 END) AND (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, rt2, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt2, vt0, rt0, t0 WHERE (((rt2.c1 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c80 THEN rt1.c0 END) AND (((rt1.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt2, rt1 CROSS JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (((rt2.c2)<(rt0.c3))) AND (rt0.c3)) LEFT OUTER JOIN t0 ON ((~ (t0.c80)) IN ()) FULL OUTER JOIN rt0 ON '' WHERE (CAST(((rt0.c0) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM rt2, rt1 CROSS JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (((rt2.c2)<(rt0.c3))) AND (rt0.c3)) LEFT OUTER JOIN t0 ON ((~ (t0.c80)) IN ()) FULL OUTER JOIN rt0 ON '');
SELECT ALL COUNT(*) FROM rt2, rt1 CROSS JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (((rt2.c2)<(rt0.c3))) AND (rt0.c3)) LEFT OUTER JOIN t0 ON ((~ (t0.c80)) IN ()) FULL OUTER JOIN rt0 ON '' WHERE (CAST(((rt0.c0) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM rt2, rt1 CROSS JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (((rt2.c2)<(rt0.c3))) AND (rt0.c3)) LEFT OUTER JOIN t0 ON ((~ (t0.c80)) IN ()) FULL OUTER JOIN rt0 ON '');
SELECT ALL COUNT(*) FROM rt2, rt1, vt0 CROSS JOIN t0 ON 0.3943760970913536 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY CASE WHEN ((t0.c80) IS TRUE) THEN ((rt2.c0)OR(rt2.c2)) ELSE (rt2.c2 IN (rt2.c0)) END, rt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt2, rt1, vt0 CROSS JOIN t0 ON 0.3943760970913536 ORDER BY CASE WHEN ((t0.c80) IS TRUE) THEN ((rt2.c0)OR(rt2.c2)) ELSE (rt2.c2 IN (rt2.c0)) END, rt2.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt1, vt0 CROSS JOIN t0 ON 0.3943760970913536 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY CASE WHEN ((t0.c80) IS TRUE) THEN ((rt2.c0)OR(rt2.c2)) ELSE (rt2.c2 IN (rt2.c0)) END, rt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt2, rt1, vt0 CROSS JOIN t0 ON 0.3943760970913536 ORDER BY CASE WHEN ((t0.c80) IS TRUE) THEN ((rt2.c0)OR(rt2.c2)) ELSE (rt2.c2 IN (rt2.c0)) END, rt2.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt1, vt0 CROSS JOIN t0 ON 0.3943760970913536 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY CASE WHEN ((t0.c80) IS TRUE) THEN ((rt2.c0)OR(rt2.c2)) ELSE (rt2.c2 IN (rt2.c0)) END, rt2.c0  NULLS FIRST;
SELECT ALL * FROM rt2, t0, rt0, rt1, vt0 WHERE ((((rt0.c1)-(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)-(rt0.c0)) IN ())) IS TRUE)  as count FROM rt2, t0, rt0, rt1, vt0);
SELECT ALL * FROM rt2, t0, rt0, rt1, vt0 WHERE ((((rt0.c1)-(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)-(rt0.c0)) IN ())) IS TRUE)  as count FROM rt2, t0, rt0, rt1, vt0);
SELECT ALL * FROM rt2, t0, rt0, rt1, vt0 WHERE ((((rt0.c1)-(rt0.c0)) IN ()));
SELECT * FROM rt1 WHERE (((rt1.c1)AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)AND(rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1)AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)AND(rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1)AND(rt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE (x'8260');
SELECT SUM(count) FROM (SELECT ((x'8260') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'8260');
SELECT SUM(count) FROM (SELECT ((x'8260') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'8260');
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt2 ON ((((CASE WHEN t0.c80 THEN rt2.c0 ELSE rt2.c0 END)AND(((rt2.c2)>(rt2.c1)))))AND((rt0.c3 IN ()))) CROSS JOIN vt0 ON CASE ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))AND(rt2.c0))  WHEN ((vt0.c1) IS FALSE) THEN rt2.c0 COLLATE NOCASE ELSE (((rt2.c1, t0.c33, 0.3170147247263152)) BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((t0.c80, rt2.c0, rt2.c3))) END LEFT OUTER JOIN rt0 ON (((((((((rt2.c1 IN ()))AND((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c80))))))AND(0.4525324110486433)))AND(rt2.c3 COLLATE BINARY)))OR(((rt2.c0)!=(rt2.c3)))) WHERE (rt2.c2) ORDER BY rt2.c1 DESC, ('' IN ()), rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt2.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt2 ON ((((CASE WHEN t0.c80 THEN rt2.c0 ELSE rt2.c0 END)AND(((rt2.c2)>(rt2.c1)))))AND((rt0.c3 IN ()))) CROSS JOIN vt0 ON CASE ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))AND(rt2.c0))  WHEN ((vt0.c1) IS FALSE) THEN rt2.c0 COLLATE NOCASE ELSE (((rt2.c1, t0.c33, 0.3170147247263152)) BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((t0.c80, rt2.c0, rt2.c3))) END LEFT OUTER JOIN rt0 ON (((((((((rt2.c1 IN ()))AND((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c80))))))AND(0.4525324110486433)))AND(rt2.c3 COLLATE BINARY)))OR(((rt2.c0)!=(rt2.c3)))) ORDER BY rt2.c1 DESC, ('' IN ()), rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt2 ON ((((CASE WHEN t0.c80 THEN rt2.c0 ELSE rt2.c0 END)AND(((rt2.c2)>(rt2.c1)))))AND((rt0.c3 IN ()))) CROSS JOIN vt0 ON CASE ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))AND(rt2.c0))  WHEN ((vt0.c1) IS FALSE) THEN rt2.c0 COLLATE NOCASE ELSE (((rt2.c1, t0.c33, 0.3170147247263152)) BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((t0.c80, rt2.c0, rt2.c3))) END LEFT OUTER JOIN rt0 ON (((((((((rt2.c1 IN ()))AND((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c80))))))AND(0.4525324110486433)))AND(rt2.c3 COLLATE BINARY)))OR(((rt2.c0)!=(rt2.c3)))) WHERE (rt2.c2) ORDER BY rt2.c1 DESC, ('' IN ()), rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt2.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt2 ON ((((CASE WHEN t0.c80 THEN rt2.c0 ELSE rt2.c0 END)AND(((rt2.c2)>(rt2.c1)))))AND((rt0.c3 IN ()))) CROSS JOIN vt0 ON CASE ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))AND(rt2.c0))  WHEN ((vt0.c1) IS FALSE) THEN rt2.c0 COLLATE NOCASE ELSE (((rt2.c1, t0.c33, 0.3170147247263152)) BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((t0.c80, rt2.c0, rt2.c3))) END LEFT OUTER JOIN rt0 ON (((((((((rt2.c1 IN ()))AND((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c80))))))AND(0.4525324110486433)))AND(rt2.c3 COLLATE BINARY)))OR(((rt2.c0)!=(rt2.c3)))) ORDER BY rt2.c1 DESC, ('' IN ()), rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt2 ON ((((CASE WHEN t0.c80 THEN rt2.c0 ELSE rt2.c0 END)AND(((rt2.c2)>(rt2.c1)))))AND((rt0.c3 IN ()))) CROSS JOIN vt0 ON CASE ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))AND(rt2.c0))  WHEN ((vt0.c1) IS FALSE) THEN rt2.c0 COLLATE NOCASE ELSE (((rt2.c1, t0.c33, 0.3170147247263152)) BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((t0.c80, rt2.c0, rt2.c3))) END LEFT OUTER JOIN rt0 ON (((((((((rt2.c1 IN ()))AND((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c80))))))AND(0.4525324110486433)))AND(rt2.c3 COLLATE BINARY)))OR(((rt2.c0)!=(rt2.c3)))) WHERE (rt2.c2) ORDER BY rt2.c1 DESC, ('' IN ()), rt0.c3  NULLS FIRST;
SELECT * FROM rt0, rt2, vt0, t0 WHERE (CAST('-812923479' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('-812923479' AS BLOB)) IS TRUE)  as count FROM rt0, rt2, vt0, t0);
SELECT * FROM rt0, rt2, vt0, t0 WHERE (CAST('-812923479' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('-812923479' AS BLOB)) IS TRUE)  as count FROM rt0, rt2, vt0, t0);
SELECT * FROM rt0, rt2, vt0, t0 WHERE (CAST('-812923479' AS BLOB));
SELECT * FROM rt2, rt1, vt0, rt0, t0 WHERE ((((+ (rt1.c0)))GLOB(((rt1.c1)GLOB(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0)))GLOB(((rt1.c1)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt2, rt1, vt0, rt0, t0);
SELECT * FROM rt2, rt1, vt0, rt0, t0 WHERE ((((+ (rt1.c0)))GLOB(((rt1.c1)GLOB(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0)))GLOB(((rt1.c1)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt2, rt1, vt0, rt0, t0);
SELECT * FROM rt2, rt1, vt0, rt0, t0 WHERE ((((+ (rt1.c0)))GLOB(((rt1.c1)GLOB(rt1.c2)))));
SELECT ALL * FROM rt0, t0, vt0, rt2, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt0, rt2, rt1);
SELECT ALL * FROM rt0, t0, vt0, rt2, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt0, rt2, rt1);
SELECT ALL * FROM rt0, t0, vt0, rt2, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((rt0.c3 IN (rt1.c0, rt1.c0)))OR(((rt1.c2)>=(rt0.c0)))))OR(LOWER(NULL))))OR((((rt1.c0, rt0.c0, rt0.c3))<=(('', rt1.c0, rt0.c1))))))AND(((rt0.c3)>(rt1.c1))))) ORDER BY 0.6683067314008168, json_type(COALESCE(DISTINCT rt1.c1, rt0.c2)) DESC  NULLS LAST, NULLIF(rt0.c2 COLLATE BINARY, rt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN (rt1.c0, rt1.c0)))OR(((rt1.c2)>=(rt0.c0)))))OR(LOWER(NULL))))OR((((rt1.c0, rt0.c0, rt0.c3))<=(('', rt1.c0, rt0.c1))))))AND(((rt0.c3)>(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.6683067314008168, json_type(COALESCE(DISTINCT rt1.c1, rt0.c2)) DESC  NULLS LAST, NULLIF(rt0.c2 COLLATE BINARY, rt0.c0)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((rt0.c3 IN (rt1.c0, rt1.c0)))OR(((rt1.c2)>=(rt0.c0)))))OR(LOWER(NULL))))OR((((rt1.c0, rt0.c0, rt0.c3))<=(('', rt1.c0, rt0.c1))))))AND(((rt0.c3)>(rt1.c1))))) ORDER BY 0.6683067314008168, json_type(COALESCE(DISTINCT rt1.c1, rt0.c2)) DESC  NULLS LAST, NULLIF(rt0.c2 COLLATE BINARY, rt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN (rt1.c0, rt1.c0)))OR(((rt1.c2)>=(rt0.c0)))))OR(LOWER(NULL))))OR((((rt1.c0, rt0.c0, rt0.c3))<=(('', rt1.c0, rt0.c1))))))AND(((rt0.c3)>(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.6683067314008168, json_type(COALESCE(DISTINCT rt1.c1, rt0.c2)) DESC  NULLS LAST, NULLIF(rt0.c2 COLLATE BINARY, rt0.c0)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((rt0.c3 IN (rt1.c0, rt1.c0)))OR(((rt1.c2)>=(rt0.c0)))))OR(LOWER(NULL))))OR((((rt1.c0, rt0.c0, rt0.c3))<=(('', rt1.c0, rt0.c1))))))AND(((rt0.c3)>(rt1.c1))))) ORDER BY 0.6683067314008168, json_type(COALESCE(DISTINCT rt1.c1, rt0.c2)) DESC  NULLS LAST, NULLIF(rt0.c2 COLLATE BINARY, rt0.c0)  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (CAST(CAST(t0.c33 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c33 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(CAST(t0.c33 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c33 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(CAST(t0.c33 AS INTEGER) AS INTEGER));
SELECT COUNT(*) FROM rt1, rt2, rt0, t0 WHERE ((((t0.c33)LIKE(x'537c')) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c33)LIKE(x'537c')) IN ())) IS TRUE)  as count FROM rt1, rt2, rt0, t0);
SELECT COUNT(*) FROM rt1, rt2, rt0, t0 WHERE ((((t0.c33)LIKE(x'537c')) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c33)LIKE(x'537c')) IN ())) IS TRUE)  as count FROM rt1, rt2, rt0, t0);
SELECT COUNT(*) FROM rt1, rt2, rt0, t0 WHERE ((((t0.c33)LIKE(x'537c')) IN ()));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)==(vt0.c0)) AS BLOB)) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN ((('-793098773')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN ((('-793098773')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) END DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)==(vt0.c0)) AS BLOB)) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN ((('-793098773')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN ((('-793098773')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) END DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)==(vt0.c0)) AS BLOB)) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN ((('-793098773')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) END DESC;
SELECT * FROM rt0, rt1 WHERE (((((rt1.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c0) NOTNULL)) IS TRUE));
SELECT * FROM rt0 RIGHT OUTER JOIN rt2 ON ((((NULL) NOT BETWEEN (0.936077327397817) AND (rt0.c3)))==(x'fc1c')) LEFT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE NOCASE)AND(((rt0.c2)IS NOT(rt2.c3)))))OR(LOWER(DISTINCT rt2.c3))) WHERE ((x'' IN (((rt0.c0) IS TRUE), TRIM(rt0.c2)))) ORDER BY (((NOT (rt2.c3))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((rt0.c0) IS TRUE), TRIM(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON ((((NULL) NOT BETWEEN (0.936077327397817) AND (rt0.c3)))==(x'fc1c')) LEFT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE NOCASE)AND(((rt0.c2)IS NOT(rt2.c3)))))OR(LOWER(DISTINCT rt2.c3))) ORDER BY (((NOT (rt2.c3))) IS TRUE) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN rt2 ON ((((NULL) NOT BETWEEN (0.936077327397817) AND (rt0.c3)))==(x'fc1c')) LEFT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE NOCASE)AND(((rt0.c2)IS NOT(rt2.c3)))))OR(LOWER(DISTINCT rt2.c3))) WHERE ((x'' IN (((rt0.c0) IS TRUE), TRIM(rt0.c2)))) ORDER BY (((NOT (rt2.c3))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((rt0.c0) IS TRUE), TRIM(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON ((((NULL) NOT BETWEEN (0.936077327397817) AND (rt0.c3)))==(x'fc1c')) LEFT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE NOCASE)AND(((rt0.c2)IS NOT(rt2.c3)))))OR(LOWER(DISTINCT rt2.c3))) ORDER BY (((NOT (rt2.c3))) IS TRUE) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN rt2 ON ((((NULL) NOT BETWEEN (0.936077327397817) AND (rt0.c3)))==(x'fc1c')) LEFT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE NOCASE)AND(((rt0.c2)IS NOT(rt2.c3)))))OR(LOWER(DISTINCT rt2.c3))) WHERE ((x'' IN (((rt0.c0) IS TRUE), TRIM(rt0.c2)))) ORDER BY (((NOT (rt2.c3))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('o]簳I_饭n');
SELECT SUM(count) FROM (SELECT (('o]簳I_饭n') IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('o]簳I_饭n');
SELECT SUM(count) FROM (SELECT (('o]簳I_饭n') IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('o]簳I_饭n');
SELECT * FROM rt1 WHERE (CASE ((rt1.c2)&(rt1.c2))  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN (((rt1.c0))>=((rt1.c2))) WHEN ((rt1.c0)+(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN ((rt1.c0)|(rt1.c0)) ELSE 0.6832781031973796 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)&(rt1.c2))  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN (((rt1.c0))>=((rt1.c2))) WHEN ((rt1.c0)+(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN ((rt1.c0)|(rt1.c0)) ELSE 0.6832781031973796 COLLATE NOCASE END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c2)&(rt1.c2))  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN (((rt1.c0))>=((rt1.c2))) WHEN ((rt1.c0)+(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN ((rt1.c0)|(rt1.c0)) ELSE 0.6832781031973796 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)&(rt1.c2))  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN (((rt1.c0))>=((rt1.c2))) WHEN ((rt1.c0)+(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN ((rt1.c0)|(rt1.c0)) ELSE 0.6832781031973796 COLLATE NOCASE END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c2)&(rt1.c2))  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN (((rt1.c0))>=((rt1.c2))) WHEN ((rt1.c0)+(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN ((rt1.c0)|(rt1.c0)) ELSE 0.6832781031973796 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt1.c2) NOTNULL) IN (((rt0.c3) IS FALSE), 0.12290769255954415 COLLATE RTRIM, ((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c0)))OR('-1858991370')))OR(rt0.c0)))) WHERE ((((((((((((((('0.17127518400200004') ISNULL))OR(NULL COLLATE RTRIM)))OR('months<')))OR(TYPEOF(DISTINCT vt0.c0))))AND(NULL)))OR((- (rt0.c0)))))OR(((((rt0.c3)AND(vt0.c0)))OR('-673763584')))));
SELECT SUM(count) FROM (SELECT (((((((((((((((('0.17127518400200004') ISNULL))OR(NULL COLLATE RTRIM)))OR('months<')))OR(TYPEOF(DISTINCT vt0.c0))))AND(NULL)))OR((- (rt0.c0)))))OR(((((rt0.c3)AND(vt0.c0)))OR('-673763584'))))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt1.c2) NOTNULL) IN (((rt0.c3) IS FALSE), 0.12290769255954415 COLLATE RTRIM, ((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c0)))OR('-1858991370')))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt1.c2) NOTNULL) IN (((rt0.c3) IS FALSE), 0.12290769255954415 COLLATE RTRIM, ((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c0)))OR('-1858991370')))OR(rt0.c0)))) WHERE ((((((((((((((('0.17127518400200004') ISNULL))OR(NULL COLLATE RTRIM)))OR('months<')))OR(TYPEOF(DISTINCT vt0.c0))))AND(NULL)))OR((- (rt0.c0)))))OR(((((rt0.c3)AND(vt0.c0)))OR('-673763584')))));
SELECT SUM(count) FROM (SELECT (((((((((((((((('0.17127518400200004') ISNULL))OR(NULL COLLATE RTRIM)))OR('months<')))OR(TYPEOF(DISTINCT vt0.c0))))AND(NULL)))OR((- (rt0.c0)))))OR(((((rt0.c3)AND(vt0.c0)))OR('-673763584'))))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt1.c2) NOTNULL) IN (((rt0.c3) IS FALSE), 0.12290769255954415 COLLATE RTRIM, ((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c0)))OR('-1858991370')))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((rt1.c2) NOTNULL) IN (((rt0.c3) IS FALSE), 0.12290769255954415 COLLATE RTRIM, ((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c0)))OR('-1858991370')))OR(rt0.c0)))) WHERE ((((((((((((((('0.17127518400200004') ISNULL))OR(NULL COLLATE RTRIM)))OR('months<')))OR(TYPEOF(DISTINCT vt0.c0))))AND(NULL)))OR((- (rt0.c0)))))OR(((((rt0.c3)AND(vt0.c0)))OR('-673763584')))));
SELECT ALL COUNT(*) FROM rt2 WHERE (((((rt2.c1)<>(rt2.c1)))>=((~ (rt2.c0))))) ORDER BY (((~ (rt2.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c1)!=(rt2.c1)))>=((~ (rt2.c0))))) IS TRUE)  as count FROM rt2 ORDER BY (((~ (rt2.c1))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((rt2.c1)<>(rt2.c1)))>=((~ (rt2.c0))))) ORDER BY (((~ (rt2.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c1)!=(rt2.c1)))>=((~ (rt2.c0))))) IS TRUE)  as count FROM rt2 ORDER BY (((~ (rt2.c1))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((rt2.c1)<>(rt2.c1)))>=((~ (rt2.c0))))) ORDER BY (((~ (rt2.c1))) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((((+ (rt2.c3)))IS NOT(rt0.c3))) ORDER BY ((rt2.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt2.c0 END) AND (((rt2.c2)LIKE(rt2.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt2.c3)))IS NOT(rt0.c3))) IS TRUE)  as count FROM rt0, rt2 ORDER BY ((rt2.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt2.c0 END) AND (((rt2.c2)LIKE(rt2.c3)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((((+ (rt2.c3)))IS NOT(rt0.c3))) ORDER BY ((rt2.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt2.c0 END) AND (((rt2.c2)LIKE(rt2.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt2.c3)))IS NOT(rt0.c3))) IS TRUE)  as count FROM rt0, rt2 ORDER BY ((rt2.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt2.c0 END) AND (((rt2.c2)LIKE(rt2.c3)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE ((((+ (rt2.c3)))IS NOT(rt0.c3))) ORDER BY ((rt2.c2 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt2.c0 END) AND (((rt2.c2)LIKE(rt2.c3)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (rt0.c2) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ()) ASC, TYPEOF(CAST(rt0.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ()) ASC, TYPEOF(CAST(rt0.c3 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (rt0.c2) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ()) ASC, TYPEOF(CAST(rt0.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ()) ASC, TYPEOF(CAST(rt0.c3 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (rt0.c2) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ()) ASC, TYPEOF(CAST(rt0.c3 AS INTEGER));
SELECT COUNT(*) FROM rt2 WHERE (rt2.c3) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((rt2.c3) IS TRUE)  as count FROM rt2 ORDER BY '');
SELECT COUNT(*) FROM rt2 WHERE (rt2.c3) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((rt2.c3) IS TRUE)  as count FROM rt2 ORDER BY '');
SELECT COUNT(*) FROM rt2 WHERE (rt2.c3) ORDER BY '';
SELECT * FROM rt0 WHERE (NULL) ORDER BY (((((rt0.c0))==((rt0.c2)))) BETWEEN ('-949552076') AND (((rt0.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))=((rt0.c2)))) BETWEEN ('-949552076') AND (((rt0.c2) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (((((rt0.c0))==((rt0.c2)))) BETWEEN ('-949552076') AND (((rt0.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))=((rt0.c2)))) BETWEEN ('-949552076') AND (((rt0.c2) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (((((rt0.c0))==((rt0.c2)))) BETWEEN ('-949552076') AND (((rt0.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, rt2 WHERE (IFNULL((((rt2.c1))!=((rt2.c3))), CASE rt2.c2  WHEN rt2.c1 THEN rt2.c1 ELSE rt2.c1 END));
SELECT SUM(count) FROM (SELECT ((IFNULL((((rt2.c1))<>((rt2.c3))), CASE rt2.c2  WHEN rt2.c1 THEN rt2.c1 ELSE rt2.c1 END)) IS TRUE)  as count FROM rt1, t0, rt2);
SELECT ALL COUNT(*) FROM rt1, t0, rt2 WHERE (IFNULL((((rt2.c1))!=((rt2.c3))), CASE rt2.c2  WHEN rt2.c1 THEN rt2.c1 ELSE rt2.c1 END));
SELECT SUM(count) FROM (SELECT ((IFNULL((((rt2.c1))<>((rt2.c3))), CASE rt2.c2  WHEN rt2.c1 THEN rt2.c1 ELSE rt2.c1 END)) IS TRUE)  as count FROM rt1, t0, rt2);
SELECT ALL COUNT(*) FROM rt1, t0, rt2 WHERE (IFNULL((((rt2.c1))!=((rt2.c3))), CASE rt2.c2  WHEN rt2.c1 THEN rt2.c1 ELSE rt2.c1 END));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND ('5fEs\r꠮{')))>>((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND ('5fEs\r꠮{')))>>((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND ('5fEs\r꠮{')))>>((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND ('5fEs\r꠮{')))>>((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND ('5fEs\r꠮{')))>>((NOT (vt0.c1)))));
SELECT * FROM t0 WHERE (((((t0.c80)>(t0.c80)))OR((NOT (t0.c33))))) ORDER BY ((((((t0.c80)/(t0.c33)))OR((t0.c33 IN ()))))AND(LOWER(t0.c80))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c80)>(t0.c80)))OR((NOT (t0.c33))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c80)/(t0.c33)))OR((t0.c33 IN ()))))AND(LOWER(t0.c80))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c80)>(t0.c80)))OR((NOT (t0.c33))))) ORDER BY ((((((t0.c80)/(t0.c33)))OR((t0.c33 IN ()))))AND(LOWER(t0.c80))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c80)>(t0.c80)))OR((NOT (t0.c33))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c80)/(t0.c33)))OR((t0.c33 IN ()))))AND(LOWER(t0.c80))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c80)>(t0.c80)))OR((NOT (t0.c33))))) ORDER BY ((((((t0.c80)/(t0.c33)))OR((t0.c33 IN ()))))AND(LOWER(t0.c80))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)%(vt0.c1)))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((((((((IFNULL(DISTINCT 0.8820899003289906, vt0.c1))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR((((vt0.c1))>=((vt0.c1))))))OR((((vt0.c0))<=(('7y'))))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC))>((- (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)%(vt0.c1)))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((IFNULL(DISTINCT 0.8820899003289906, vt0.c1))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR((((vt0.c1))>=((vt0.c1))))))OR((((vt0.c0))<=(('7y'))))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC))>((- (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)%(vt0.c1)))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((((((((IFNULL(DISTINCT 0.8820899003289906, vt0.c1))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR((((vt0.c1))>=((vt0.c1))))))OR((((vt0.c0))<=(('7y'))))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC))>((- (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)%(vt0.c1)))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((IFNULL(DISTINCT 0.8820899003289906, vt0.c1))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR((((vt0.c1))>=((vt0.c1))))))OR((((vt0.c0))<=(('7y'))))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC))>((- (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)%(vt0.c1)))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((((((((IFNULL(DISTINCT 0.8820899003289906, vt0.c1))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR((((vt0.c1))>=((vt0.c1))))))OR((((vt0.c0))<=(('7y'))))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC))>((- (vt0.c1)))) DESC  NULLS LAST;
SELECT * FROM rt1, rt0, t0 WHERE ((((((rt1.c1)AND(rt0.c2)))OR(t0.c33)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt0.c2)))OR(t0.c33)) IN ())) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE ((((((rt1.c1)AND(rt0.c2)))OR(t0.c33)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt0.c2)))OR(t0.c33)) IN ())) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE ((((((rt1.c1)AND(rt0.c2)))OR(t0.c33)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c1 IN ()))OR(((rt0.c2)IS NOT(rt2.c2)))))AND(CAST(t0.c33 AS INTEGER))) FULL OUTER JOIN rt2 ON (((rt2.c3 IN ()))<<((((rt0.c0, rt2.c1, vt0.c1))=((rt0.c0, rt2.c2, rt0.c2))))) WHERE (((((rt2.c3) NOT NULL))<=((((vt0.c1)) NOT BETWEEN ((rt2.c0)) AND ((t0.c80))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3) NOT NULL))<=((((vt0.c1)) NOT BETWEEN ((rt2.c0)) AND ((t0.c80)))))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c1 IN ()))OR(((rt0.c2)IS NOT(rt2.c2)))))AND(CAST(t0.c33 AS INTEGER))) FULL OUTER JOIN rt2 ON (((rt2.c3 IN ()))<<((((rt0.c0, rt2.c1, vt0.c1))==((rt0.c0, rt2.c2, rt0.c2))))));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c1 IN ()))OR(((rt0.c2)IS NOT(rt2.c2)))))AND(CAST(t0.c33 AS INTEGER))) FULL OUTER JOIN rt2 ON (((rt2.c3 IN ()))<<((((rt0.c0, rt2.c1, vt0.c1))=((rt0.c0, rt2.c2, rt0.c2))))) WHERE (((((rt2.c3) NOT NULL))<=((((vt0.c1)) NOT BETWEEN ((rt2.c0)) AND ((t0.c80))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c3) NOT NULL))<=((((vt0.c1)) NOT BETWEEN ((rt2.c0)) AND ((t0.c80)))))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c1 IN ()))OR(((rt0.c2)IS NOT(rt2.c2)))))AND(CAST(t0.c33 AS INTEGER))) FULL OUTER JOIN rt2 ON (((rt2.c3 IN ()))<<((((rt0.c0, rt2.c1, vt0.c1))==((rt0.c0, rt2.c2, rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST('-69248056' AS TEXT))OR(((x'5879') IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST('-69248056' AS TEXT))OR(((x'5879') IS FALSE)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST('-69248056' AS TEXT))OR(((x'5879') IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST('-69248056' AS TEXT))OR(((x'5879') IS FALSE)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST('-69248056' AS TEXT))OR(((x'5879') IS FALSE))));
SELECT ALL * FROM rt1, t0, rt2, rt0 WHERE ((((('') NOT BETWEEN (rt0.c1) AND (rt2.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c33) AND (rt0.c3))) AND (CASE WHEN rt2.c3 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((('') NOT BETWEEN (rt0.c1) AND (rt2.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c33) AND (rt0.c3))) AND (CASE WHEN rt2.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt1, t0, rt2, rt0);
SELECT ALL * FROM rt1, t0, rt2, rt0 WHERE ((((('') NOT BETWEEN (rt0.c1) AND (rt2.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c33) AND (rt0.c3))) AND (CASE WHEN rt2.c3 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((('') NOT BETWEEN (rt0.c1) AND (rt2.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c33) AND (rt0.c3))) AND (CASE WHEN rt2.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt1, t0, rt2, rt0);
SELECT ALL * FROM rt1, t0, rt2, rt0 WHERE ((((('') NOT BETWEEN (rt0.c1) AND (rt2.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c33) AND (rt0.c3))) AND (CASE WHEN rt2.c3 THEN rt0.c2 END)));
SELECT COUNT(*) FROM rt2, vt0, rt0 WHERE (IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, NULLIF(rt0.c0, rt0.c1))) ORDER BY ((((rt2.c0) IS FALSE)) BETWEEN ((- (rt0.c1))) AND (((rt2.c3)+(rt2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, NULLIF(rt0.c0, rt0.c1))) IS TRUE)  as count FROM rt2, vt0, rt0 ORDER BY ((((rt2.c0) IS FALSE)) BETWEEN ((- (rt0.c1))) AND (((rt2.c3)+(rt2.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt2, vt0, rt0 WHERE (IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, NULLIF(rt0.c0, rt0.c1))) ORDER BY ((((rt2.c0) IS FALSE)) BETWEEN ((- (rt0.c1))) AND (((rt2.c3)+(rt2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, NULLIF(rt0.c0, rt0.c1))) IS TRUE)  as count FROM rt2, vt0, rt0 ORDER BY ((((rt2.c0) IS FALSE)) BETWEEN ((- (rt0.c1))) AND (((rt2.c3)+(rt2.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt2, vt0, rt0 WHERE (IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, NULLIF(rt0.c0, rt0.c1))) ORDER BY ((((rt2.c0) IS FALSE)) BETWEEN ((- (rt0.c1))) AND (((rt2.c3)+(rt2.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt2, vt0 LEFT OUTER JOIN rt1 ON CASE '㟅VNs'  WHEN (rt0.c0 IN (vt0.c1, rt1.c1)) THEN ((rt0.c1)OR(rt1.c2)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) THEN NULL WHEN ((rt0.c1)AND('-1929744183')) THEN ((rt2.c2) NOT BETWEEN (x'4d2c') AND (rt1.c2)) WHEN TYPEOF(DISTINCT rt1.c1) THEN rt1.c1 WHEN 'wO' THEN x'' COLLATE RTRIM ELSE LOWER(DISTINCT rt1.c0) END INNER JOIN rt0 ON LIKE(rt1.c2, CASE WHEN rt2.c2 THEN rt2.c2 END) WHERE ((((((rt1.c0)IS NOT(x'192c')), json_insert(rt2.c2, rt2.c3, rt0.c1), (~ (NULL))))<((COALESCE(rt2.c0, rt0.c1, rt1.c2, rt1.c1), CASE WHEN rt2.c1 THEN rt0.c2 END, ((rt0.c0) NOTNULL))))) ORDER BY (((rt2.c0)>>(rt2.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS NOT(x'192c')), json_insert(rt2.c2, rt2.c3, rt0.c1), (~ (NULL))))<((COALESCE(rt2.c0, rt0.c1, rt1.c2, rt1.c1), CASE WHEN rt2.c1 THEN rt0.c2 END, ((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt2, vt0 LEFT OUTER JOIN rt1 ON CASE '㟅VNs'  WHEN (rt0.c0 IN (vt0.c1, rt1.c1)) THEN ((rt0.c1)OR(rt1.c2)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) THEN NULL WHEN ((rt0.c1)AND('-1929744183')) THEN ((rt2.c2) NOT BETWEEN (x'4d2c') AND (rt1.c2)) WHEN TYPEOF(DISTINCT rt1.c1) THEN rt1.c1 WHEN 'wO' THEN x'' COLLATE RTRIM ELSE LOWER(DISTINCT rt1.c0) END INNER JOIN rt0 ON LIKE(rt1.c2, CASE WHEN rt2.c2 THEN rt2.c2 END) ORDER BY (((rt2.c0)>>(rt2.c1)) IN ()));
SELECT COUNT(*) FROM rt2, vt0 LEFT OUTER JOIN rt1 ON CASE '㟅VNs'  WHEN (rt0.c0 IN (vt0.c1, rt1.c1)) THEN ((rt0.c1)OR(rt1.c2)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) THEN NULL WHEN ((rt0.c1)AND('-1929744183')) THEN ((rt2.c2) NOT BETWEEN (x'4d2c') AND (rt1.c2)) WHEN TYPEOF(DISTINCT rt1.c1) THEN rt1.c1 WHEN 'wO' THEN x'' COLLATE RTRIM ELSE LOWER(DISTINCT rt1.c0) END INNER JOIN rt0 ON LIKE(rt1.c2, CASE WHEN rt2.c2 THEN rt2.c2 END) WHERE ((((((rt1.c0)IS NOT(x'192c')), json_insert(rt2.c2, rt2.c3, rt0.c1), (~ (NULL))))<((COALESCE(rt2.c0, rt0.c1, rt1.c2, rt1.c1), CASE WHEN rt2.c1 THEN rt0.c2 END, ((rt0.c0) NOTNULL))))) ORDER BY (((rt2.c0)>>(rt2.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS NOT(x'192c')), json_insert(rt2.c2, rt2.c3, rt0.c1), (~ (NULL))))<((COALESCE(rt2.c0, rt0.c1, rt1.c2, rt1.c1), CASE WHEN rt2.c1 THEN rt0.c2 END, ((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt2, vt0 LEFT OUTER JOIN rt1 ON CASE '㟅VNs'  WHEN (rt0.c0 IN (vt0.c1, rt1.c1)) THEN ((rt0.c1)OR(rt1.c2)) WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) THEN NULL WHEN ((rt0.c1)AND('-1929744183')) THEN ((rt2.c2) NOT BETWEEN (x'4d2c') AND (rt1.c2)) WHEN TYPEOF(DISTINCT rt1.c1) THEN rt1.c1 WHEN 'wO' THEN x'' COLLATE RTRIM ELSE LOWER(DISTINCT rt1.c0) END INNER JOIN rt0 ON LIKE(rt1.c2, CASE WHEN rt2.c2 THEN rt2.c2 END) ORDER BY (((rt2.c0)>>(rt2.c1)) IN ()));
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c33) IS FALSE)))>((CAST(t0.c80 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c33) IS FALSE)))>((CAST(t0.c80 AS REAL))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c33) IS FALSE)))>((CAST(t0.c80 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c33) IS FALSE)))>((CAST(t0.c80 AS REAL))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c33) IS FALSE)))>((CAST(t0.c80 AS REAL)))));
SELECT ALL * FROM vt0, rt2 WHERE (((COALESCE(rt2.c0, vt0.c1, rt2.c2, vt0.c1))IS(CASE WHEN rt2.c0 THEN rt2.c0 ELSE rt2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(rt2.c0, vt0.c1, rt2.c2, vt0.c1))IS(CASE WHEN rt2.c0 THEN rt2.c0 ELSE rt2.c0 END))) IS TRUE)  as count FROM vt0, rt2);
SELECT ALL * FROM vt0, rt2 WHERE (((COALESCE(rt2.c0, vt0.c1, rt2.c2, vt0.c1))IS(CASE WHEN rt2.c0 THEN rt2.c0 ELSE rt2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(rt2.c0, vt0.c1, rt2.c2, vt0.c1))IS(CASE WHEN rt2.c0 THEN rt2.c0 ELSE rt2.c0 END))) IS TRUE)  as count FROM vt0, rt2);
SELECT ALL * FROM vt0, rt2 WHERE (((COALESCE(rt2.c0, vt0.c1, rt2.c2, vt0.c1))IS(CASE WHEN rt2.c0 THEN rt2.c0 ELSE rt2.c0 END)));
SELECT ALL COUNT(*) FROM t0, rt2, vt0 WHERE ((- (CASE WHEN t0.c80 THEN rt2.c1 END))) ORDER BY (((rt2.c3 IN ()))<<((x'' IN ()))) DESC, ((-9.50450659E8) IS TRUE) ASC  NULLS LAST, ((CASE vt0.c1  WHEN rt2.c3 THEN t0.c33 END) BETWEEN (((rt2.c0)-(x''))) AND ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t0.c80 THEN rt2.c1 END))) IS TRUE)  as count FROM t0, rt2, vt0 ORDER BY (((rt2.c3 IN ()))<<((x'' IN ()))) DESC, ((-9.50450659E8) IS TRUE) ASC  NULLS LAST, ((CASE vt0.c1  WHEN rt2.c3 THEN t0.c33 END) BETWEEN (((rt2.c0)-(x''))) AND ((x'' IN ()))));
SELECT ALL COUNT(*) FROM t0, rt2, vt0 WHERE ((- (CASE WHEN t0.c80 THEN rt2.c1 END))) ORDER BY (((rt2.c3 IN ()))<<((x'' IN ()))) DESC, ((-9.50450659E8) IS TRUE) ASC  NULLS LAST, ((CASE vt0.c1  WHEN rt2.c3 THEN t0.c33 END) BETWEEN (((rt2.c0)-(x''))) AND ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t0.c80 THEN rt2.c1 END))) IS TRUE)  as count FROM t0, rt2, vt0 ORDER BY (((rt2.c3 IN ()))<<((x'' IN ()))) DESC, ((-9.50450659E8) IS TRUE) ASC  NULLS LAST, ((CASE vt0.c1  WHEN rt2.c3 THEN t0.c33 END) BETWEEN (((rt2.c0)-(x''))) AND ((x'' IN ()))));
SELECT ALL COUNT(*) FROM t0, rt2, vt0 WHERE ((- (CASE WHEN t0.c80 THEN rt2.c1 END))) ORDER BY (((rt2.c3 IN ()))<<((x'' IN ()))) DESC, ((-9.50450659E8) IS TRUE) ASC  NULLS LAST, ((CASE vt0.c1  WHEN rt2.c3 THEN t0.c33 END) BETWEEN (((rt2.c0)-(x''))) AND ((x'' IN ())));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt2 ON CAST(NULL AS TEXT) WHERE ((- ((rt2.c1 IN (rt0.c1))))) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)))  NULLS LAST, INSTR(LIKELY(DISTINCT rt0.c2), NULL)  NULLS LAST, (+ ((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt2.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt2 ON CAST(NULL AS TEXT) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)))  NULLS LAST, INSTR(LIKELY(DISTINCT rt0.c2), NULL)  NULLS LAST, (+ ((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt2 ON CAST(NULL AS TEXT) WHERE ((- ((rt2.c1 IN (rt0.c1))))) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)))  NULLS LAST, INSTR(LIKELY(DISTINCT rt0.c2), NULL)  NULLS LAST, (+ ((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt2.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt2 ON CAST(NULL AS TEXT) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)))  NULLS LAST, INSTR(LIKELY(DISTINCT rt0.c2), NULL)  NULLS LAST, (+ ((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt2 ON CAST(NULL AS TEXT) WHERE ((- ((rt2.c1 IN (rt0.c1))))) ORDER BY ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)))  NULLS LAST, INSTR(LIKELY(DISTINCT rt0.c2), NULL)  NULLS LAST, (+ ((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt2, t0, vt0, rt1 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt2, t0, vt0, rt1 ORDER BY ((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, rt2, t0, vt0, rt1 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt2, t0, vt0, rt1 ORDER BY ((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, rt2, t0, vt0, rt1 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c0 END) NOTNULL);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((rt1.c1)OR(vt0.c0)))AND(vt0.c0)))-(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((rt1.c1)-(rt1.c1)))<=(rt0.c0)) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c1))))+(((rt0.c2)|(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(vt0.c0)))AND(vt0.c0)))-(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((((rt1.c1)-(rt1.c1)))<=(rt0.c0)) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c1))))+(((rt0.c2)|(rt1.c0)))));
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((rt1.c1)OR(vt0.c0)))AND(vt0.c0)))-(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((rt1.c1)-(rt1.c1)))<=(rt0.c0)) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c1))))+(((rt0.c2)|(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(vt0.c0)))AND(vt0.c0)))-(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((((rt1.c1)-(rt1.c1)))<=(rt0.c0)) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c1))))+(((rt0.c2)|(rt1.c0)))));
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((rt1.c1)OR(vt0.c0)))AND(vt0.c0)))-(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((rt1.c1)-(rt1.c1)))<=(rt0.c0)) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c1))))+(((rt0.c2)|(rt1.c0))));
SELECT * FROM t0, rt2, rt1 INNER JOIN vt0 ON ((rt2.c3) ISNULL) COLLATE BINARY WHERE ((x'' IN (((rt2.c3)LIKE(t0.c80))))) ORDER BY ((((t0.c33) BETWEEN (rt2.c3) AND (vt0.c1)))*((rt2.c3 IN ()))), ((((t0.c33)=('-0.0'))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((rt2.c3)LIKE(t0.c80))))) IS TRUE)  as count FROM t0, rt2, rt1 INNER JOIN vt0 ON ((rt2.c3) ISNULL) COLLATE BINARY ORDER BY ((((t0.c33) BETWEEN (rt2.c3) AND (vt0.c1)))*((rt2.c3 IN ()))), ((((t0.c33)=('-0.0'))) ISNULL) ASC);
SELECT * FROM t0, rt2, rt1 INNER JOIN vt0 ON ((rt2.c3) ISNULL) COLLATE BINARY WHERE ((x'' IN (((rt2.c3)LIKE(t0.c80))))) ORDER BY ((((t0.c33) BETWEEN (rt2.c3) AND (vt0.c1)))*((rt2.c3 IN ()))), ((((t0.c33)=('-0.0'))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((rt2.c3)LIKE(t0.c80))))) IS TRUE)  as count FROM t0, rt2, rt1 INNER JOIN vt0 ON ((rt2.c3) ISNULL) COLLATE BINARY ORDER BY ((((t0.c33) BETWEEN (rt2.c3) AND (vt0.c1)))*((rt2.c3 IN ()))), ((((t0.c33)=('-0.0'))) ISNULL) ASC);
SELECT * FROM t0, rt2, rt1 INNER JOIN vt0 ON ((rt2.c3) ISNULL) COLLATE BINARY WHERE ((x'' IN (((rt2.c3)LIKE(t0.c80))))) ORDER BY ((((t0.c33) BETWEEN (rt2.c3) AND (vt0.c1)))*((rt2.c3 IN ()))), ((((t0.c33)=('-0.0'))) ISNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((((rt1.c2)>>(rt1.c2)) IN (NULLIF(vt0.c0, rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (t0.c33) AND (vt0.c1)))*(((t0.c80) NOT BETWEEN (vt0.c1) AND (rt1.c1))))  NULLS FIRST, (~ (((rt1.c1)+(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)>>(rt1.c2)) IN (NULLIF(vt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY ((((rt0.c0) BETWEEN (t0.c33) AND (vt0.c1)))*(((t0.c80) NOT BETWEEN (vt0.c1) AND (rt1.c1))))  NULLS FIRST, (~ (((rt1.c1)+(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((((rt1.c2)>>(rt1.c2)) IN (NULLIF(vt0.c0, rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (t0.c33) AND (vt0.c1)))*(((t0.c80) NOT BETWEEN (vt0.c1) AND (rt1.c1))))  NULLS FIRST, (~ (((rt1.c1)+(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)>>(rt1.c2)) IN (NULLIF(vt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY ((((rt0.c0) BETWEEN (t0.c33) AND (vt0.c1)))*(((t0.c80) NOT BETWEEN (vt0.c1) AND (rt1.c1))))  NULLS FIRST, (~ (((rt1.c1)+(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((((rt1.c2)>>(rt1.c2)) IN (NULLIF(vt0.c0, rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (t0.c33) AND (vt0.c1)))*(((t0.c80) NOT BETWEEN (vt0.c1) AND (rt1.c1))))  NULLS FIRST, (~ (((rt1.c1)+(rt0.c1)))) ASC;
SELECT * FROM rt0 WHERE (((((((rt0.c0)OR('-1858991370')))AND(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CHAR(rt0.c2, rt0.c0, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR('-1858991370')))AND(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CHAR(rt0.c2, rt0.c0, rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)OR('-1858991370')))AND(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CHAR(rt0.c2, rt0.c0, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR('-1858991370')))AND(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CHAR(rt0.c2, rt0.c0, rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)OR('-1858991370')))AND(rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CHAR(rt0.c2, rt0.c0, rt0.c3))));
