-- Time: 2024/06/11 01:50:21
-- Database: database34
-- Database version: 3.40.0
-- seed value: 2036530934
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
PRAGMA temp.default_cache_size = 1772181802; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0xffffffffa979de9a; -- 1ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES (0.9608200704064137, '554242164', x''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=('') WHERE (~ (rt1.c2)); -- 0ms;
UPDATE OR REPLACE rt1 SET c1=x''; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0xffffffffa979de9a; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c2) VALUES ('3665653', 0.9608200704064137), (0.7867690995294454, NULL), (NULL, 0.7867690995294454); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (-1451630950, '럗*'); -- 0ms;
REINDEX  rt0; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, matchinfo=fts3); -- 0ms;
UPDATE rt0 SET c2=''; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('	}'), (NULL), (x''); -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(1772181802); -- 1ms;
UPDATE rt0 SET c2=NULL; -- 0ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.5237036308359005 WHERE CASE WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c2) NOTNULL) END; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c1, c2) VALUES (3665653.0, '143067105', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1069565993'); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 BLOB , c1 BLOB , c2 TEXT DEFAULT 'sN' ); -- 0ms;
UPDATE OR ABORT vt0 SET c0='},'; -- 2ms;
UPDATE OR IGNORE rt1 SET c2=180769598; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE t0 SET c0=NULL, c2='-1451630950' WHERE ((CAST(t0.c1 AS TEXT)) NOT BETWEEN (t0.c0) AND (NULL)); -- 0ms;
PRAGMA secure_delete; -- 0ms;
PRAGMA threads; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
INSERT OR REPLACE INTO t0(c2, c1) VALUES (0xffffffffa979de9a, '.j'), (NULL, 'p( '), (NULL, 0.37633273979979187), (x'', NULL), ('0.5237036308359005', 0.7821646011622077); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (3665653); -- 0ms;
UPDATE rt0 SET c2='1o*PSiၴ-G'; -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4386'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE t0 SET (c2, c0, c1)=(1454123118, -1.069565993E9, x'3b2d'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='ߡ', c0='419877453' WHERE ((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t0(c1) VALUES (0.4192274209295711); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET c2=''; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i87 ON t0(CAST((~ (c1)) AS BLOB) COLLATE RTRIM,((((c1, c0, c0)) BETWEEN ((c2, c1, c2)) AND ((c1, c1, c1))) IN (((c1) ISNULL))) DESC,'I쩠&' COLLATE BINARY ASC); -- 0ms;
CREATE INDEX IF NOT EXISTS i56 ON t0(HEX(DISTINCT CASE WHEN c0 THEN c2 ELSE c0 END) COLLATE RTRIM ASC,((CAST(c2 AS INTEGER))*(((c0) ISNULL))) COLLATE NOCASE DESC,TYPEOF(((c2) IS TRUE)) COLLATE NOCASE DESC) WHERE ((((((((((c0) BETWEEN (c0) AND (c2)))AND(((c1)>(c0)))))OR(((((((((c2)OR(c1)))AND(c0)))AND(c0)))OR(c1)))))OR(CASE c1  WHEN c1 THEN c1 ELSE c0 END)))OR(((c2)|('143067105')))); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (''), (''), (NULL), ('0.9608200704064137'), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0, c2) VALUES (0.13299392210410255, x'fe16', '180769598'), ('', 0.47122529327432583, NULL), (NULL, '', 0X21091074); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET c1=0.04843786784836179, c1='~<⡮|' WHERE (((((((t0.c1)OR(t0.c2)))AND(t0.c1))))<((CAST(t0.c1 AS BLOB)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1, c1)=(0.10956900646251178, 0.3824430713868081, 0x363fca60) WHERE CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END AS INTEGER); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('1431949178'), (0.9842151734978024), ('t왕3Dr'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
UPDATE rt0 SET c1=5.54242164E8 WHERE (((((rt0.c0))<=((rt0.c1))))|((~ (rt0.c2)))); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL WHERE CAST(((rt1.c0) NOT BETWEEN (x'caae') AND (rt1.c2)) AS NUMERIC); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=('-1117521862'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38318'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
UPDATE rt1 SET (c2, c2, c2)=(NULL, 3665653.0, NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE json_array_length(IFNULL(DISTINCT vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY); -- 0ms;
UPDATE rt1 SET (c1, c0)=('', NULL) WHERE (+ (((rt1.c1)>(rt1.c2)))); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c0) VALUES (x'', '1431949178'), ('o)zhJ}Tp2', NULL), (0x13544f12, '-11286955'); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.47122529327432583), ('sL/''RM'), (NULL); -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1406977546); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES (x'', ((((x'bbec')>(NULL))) NOT BETWEEN (x'' COLLATE RTRIM) AND (CASE 3.2429237E8  WHEN x'' THEN 0xffffffff8f662278 END)), x''); -- 0ms;
REINDEX RTRIM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
DROP TABLE vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size = -7916505904799152536; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(NULL) WHERE ((((((((vt0.c0)AND((NOT (vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 1ms;
UPDATE vt0 SET (c0, c0)=('910150240', NULL) WHERE (vt0.c0 COLLATE RTRIM IN (((vt0.c0)||(vt0.c0)), ((vt0.c0) NOT NULL))); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('*%fOb#太z'), (x''), ('FRpm,09R'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE INDEX IF NOT EXISTS i34 ON t0(CASE WHEN CAST(c2 AS INTEGER) THEN ((c0)<=(c2)) END COLLATE NOCASE DESC,(((((c2)AND(c0)))OR(x'')) IN (1.43067105E8)),'' DESC) WHERE (((c2)) BETWEEN ((NULL)) AND ((0.6066560239733505))); -- 0ms;
CREATE INDEX IF NOT EXISTS i38 ON t0((+ (((c0)|(c2)))),(((- (c0))) BETWEEN ((((c2, c1, c1))>=((c0, c2, c0)))) AND (((c2)=(c2)))) DESC,((((c1)OR(c0)))AND(c0)) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
INSERT OR ROLLBACK INTO rt1 VALUES (NULL, x'', ''), (NULL, 0.15802629581086636, NULL), ('327369216', NULL, NULL); -- 1ms;
COMMIT; -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2)=('3665653'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES ('', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'7501f847'), (x''), (-1164218945); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2) VALUES (NULL, 0X140f8901); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i34 ON t0(((((c0) BETWEEN (c0) AND (c1))) NOTNULL) COLLATE BINARY ASC,((CASE c0  WHEN c1 THEN c2 WHEN c2 THEN c0 WHEN c0 THEN c0 END)>=((((c2, c0, c0))>=((c0, '143067105', c2))))) COLLATE RTRIM,(+ (((((c1)AND(c1)))AND(c0)))) COLLATE BINARY ASC); -- 0ms;
CREATE UNIQUE INDEX i82 ON t0((NOT (CASE WHEN c2 THEN c2 WHEN c2 THEN c1 WHEN c0 THEN NULL ELSE c1 END)) COLLATE BINARY,((((c2 COLLATE BINARY)AND(CAST(0.6889012112042907 AS INTEGER))))OR(((c1)=(c2)))) COLLATE BINARY DESC,'' ASC) WHERE c0; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i97 ON t0(CAST((c2 IN ()) AS INTEGER) ASC,TRIM(ROUND(c2, c0)) ASC,((x'') NOT BETWEEN ((c0 IN (c0))) AND (c0 COLLATE RTRIM))) WHERE ((((c2) IS FALSE))-(((c2)IS NOT(c2)))); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (0.3824430713868081), (0.46501124874574595); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0x363fca60, c1=-960744940 WHERE json(CAST(rt0.c1 AS REAL)); -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'f597'), (-1303385784), (-1337833556); -- 0ms;
DELETE FROM vt0 WHERE ((((((((((((x'')AND(IFNULL(vt0.c0, vt0.c0))))OR(((vt0.c0) IS TRUE))))AND((('-1889131912') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND((vt0.c0 IN ()))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0='-1160265372' WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0))>=((vt0.c0)))))!=((CAST(rt0.c1 AS NUMERIC))))) ORDER BY LOWER(DISTINCT (((rt0.c0))=((rt0.c1)))) DESC, (((rt0.c0)) BETWEEN ((((rt0.c1)!=(rt0.c1)))) AND ((NULL))), x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))>=((vt0.c0)))))!=((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LOWER(DISTINCT (((rt0.c0))=((rt0.c1)))) DESC, (((rt0.c0)) BETWEEN ((((rt0.c1)!=(rt0.c1)))) AND ((NULL))), x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0))>=((vt0.c0)))))!=((CAST(rt0.c1 AS NUMERIC))))) ORDER BY LOWER(DISTINCT (((rt0.c0))=((rt0.c1)))) DESC, (((rt0.c0)) BETWEEN ((((rt0.c1)!=(rt0.c1)))) AND ((NULL))), x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))>=((vt0.c0)))))!=((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LOWER(DISTINCT (((rt0.c0))=((rt0.c1)))) DESC, (((rt0.c0)) BETWEEN ((((rt0.c1)!=(rt0.c1)))) AND ((NULL))), x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0))>=((vt0.c0)))))!=((CAST(rt0.c1 AS NUMERIC))))) ORDER BY LOWER(DISTINCT (((rt0.c0))=((rt0.c1)))) DESC, (((rt0.c0)) BETWEEN ((((rt0.c1)!=(rt0.c1)))) AND ((NULL))), x'' DESC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((t0.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt1.c2, vt0.c0, 0.6999624950514398)))) AND (CASE t0.c1  WHEN rt1.c1 THEN rt1.c1 END)) RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN rt1 ON ((COALESCE(rt1.c2, rt1.c1, rt0.c0, rt0.c0)) NOTNULL) WHERE (((rt0.c2)LIKE(rt0.c2)) COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)LIKE(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((t0.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt1.c2, vt0.c0, 0.6999624950514398)))) AND (CASE t0.c1  WHEN rt1.c1 THEN rt1.c1 END)) RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN rt1 ON ((COALESCE(rt1.c2, rt1.c1, rt0.c0, rt0.c0)) NOTNULL) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((t0.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt1.c2, vt0.c0, 0.6999624950514398)))) AND (CASE t0.c1  WHEN rt1.c1 THEN rt1.c1 END)) RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN rt1 ON ((COALESCE(rt1.c2, rt1.c1, rt0.c0, rt0.c0)) NOTNULL) WHERE (((rt0.c2)LIKE(rt0.c2)) COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)LIKE(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((t0.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt1.c2, vt0.c0, 0.6999624950514398)))) AND (CASE t0.c1  WHEN rt1.c1 THEN rt1.c1 END)) RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN rt1 ON ((COALESCE(rt1.c2, rt1.c1, rt0.c0, rt0.c0)) NOTNULL) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((('1431949178' COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT (((('1431949178' COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((('1431949178' COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT (((('1431949178' COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((('1431949178' COLLATE RTRIM) IS FALSE));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((t0.c0)<>(t0.c1))) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((NOT (rt1.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)!=(t0.c0)) THEN ((((t0.c1)OR(vt0.c0)))AND(t0.c0)) END WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((t0.c0)!=(t0.c1))) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((NOT (rt1.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)!=(t0.c0)) THEN ((((t0.c1)OR(vt0.c0)))AND(t0.c0)) END);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((t0.c0)<>(t0.c1))) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((NOT (rt1.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)!=(t0.c0)) THEN ((((t0.c1)OR(vt0.c0)))AND(t0.c0)) END WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((t0.c0)!=(t0.c1))) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((NOT (rt1.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)!=(t0.c0)) THEN ((((t0.c1)OR(vt0.c0)))AND(t0.c0)) END);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((((x'b706' COLLATE NOCASE)AND(rt0.c0)))OR(((rt1.c2)-(rt1.c0)))) INNER JOIN rt0 ON ((rt1.c2)>(((rt0.c1) IS TRUE))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))/(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN CASE WHEN '-1160265372' THEN rt0.c0 ELSE rt1.c2 END THEN ((rt0.c0)<<(rt0.c1)) END DESC  NULLS LAST, CAST(CAST('yBOqM' AS BLOB) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))/(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((x'b706' COLLATE NOCASE)AND(rt0.c0)))OR(((rt1.c2)-(rt1.c0)))) INNER JOIN rt0 ON ((rt1.c2)>(((rt0.c1) IS TRUE))) ORDER BY CASE WHEN CASE WHEN '-1160265372' THEN rt0.c0 ELSE rt1.c2 END THEN ((rt0.c0)<<(rt0.c1)) END DESC  NULLS LAST, CAST(CAST('yBOqM' AS BLOB) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((((x'b706' COLLATE NOCASE)AND(rt0.c0)))OR(((rt1.c2)-(rt1.c0)))) INNER JOIN rt0 ON ((rt1.c2)>(((rt0.c1) IS TRUE))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))/(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN CASE WHEN '-1160265372' THEN rt0.c0 ELSE rt1.c2 END THEN ((rt0.c0)<<(rt0.c1)) END DESC  NULLS LAST, CAST(CAST('yBOqM' AS BLOB) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))/(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((x'b706' COLLATE NOCASE)AND(rt0.c0)))OR(((rt1.c2)-(rt1.c0)))) INNER JOIN rt0 ON ((rt1.c2)>(((rt0.c1) IS TRUE))) ORDER BY CASE WHEN CASE WHEN '-1160265372' THEN rt0.c0 ELSE rt1.c2 END THEN ((rt0.c0)<<(rt0.c1)) END DESC  NULLS LAST, CAST(CAST('yBOqM' AS BLOB) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ('Z(') ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>(((((rt0.c2, t0.c0, rt0.c2))>=((t0.c0, rt0.c2, rt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('Z(') IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))!=(((((rt0.c2, t0.c0, rt0.c2))>=((t0.c0, rt0.c2, rt0.c0)))))) ASC);
SELECT ALL * FROM rt0, t0 WHERE ('Z(') ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>(((((rt0.c2, t0.c0, rt0.c2))>=((t0.c0, rt0.c2, rt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('Z(') IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))!=(((((rt0.c2, t0.c0, rt0.c2))>=((t0.c0, rt0.c2, rt0.c0)))))) ASC);
SELECT ALL * FROM rt0, t0 WHERE ('Z(') ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>(((((rt0.c2, t0.c0, rt0.c2))>=((t0.c0, rt0.c2, rt0.c0)))))) ASC;
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN rt0.c2 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1889131912'))) ELSE CASE t0.c1  WHEN vt0.c0 THEN '-1889131912' ELSE vt0.c0 END END WHERE (NULL) ORDER BY ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt0.c1)LIKE(t0.c2))) AND (((((t0.c1)OR(t0.c1)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN rt0.c2 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1889131912'))) ELSE CASE t0.c1  WHEN vt0.c0 THEN '-1889131912' ELSE vt0.c0 END END ORDER BY ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt0.c1)LIKE(t0.c2))) AND (((((t0.c1)OR(t0.c1)))AND(t0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN rt0.c2 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1889131912'))) ELSE CASE t0.c1  WHEN vt0.c0 THEN '-1889131912' ELSE vt0.c0 END END WHERE (NULL) ORDER BY ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt0.c1)LIKE(t0.c2))) AND (((((t0.c1)OR(t0.c1)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN rt0.c2 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1889131912'))) ELSE CASE t0.c1  WHEN vt0.c0 THEN '-1889131912' ELSE vt0.c0 END END ORDER BY ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt0.c1)LIKE(t0.c2))) AND (((((t0.c1)OR(t0.c1)))AND(t0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN rt0.c2 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1889131912'))) ELSE CASE t0.c1  WHEN vt0.c0 THEN '-1889131912' ELSE vt0.c0 END END WHERE (NULL) ORDER BY ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((rt0.c1)LIKE(t0.c2))) AND (((((t0.c1)OR(t0.c1)))AND(t0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (DATE(rt0.c1, NULL, '6') COLLATE NOCASE) ORDER BY (((rt0.c1)==(rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((DATE(rt0.c1, NULL, '6') COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)=(rt0.c2)) IN ()) DESC);
SELECT ALL * FROM rt0 WHERE (DATE(rt0.c1, NULL, '6') COLLATE NOCASE) ORDER BY (((rt0.c1)==(rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((DATE(rt0.c1, NULL, '6') COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)=(rt0.c2)) IN ()) DESC);
SELECT ALL * FROM rt0 WHERE (DATE(rt0.c1, NULL, '6') COLLATE NOCASE) ORDER BY (((rt0.c1)==(rt0.c2)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 INDEXED BY i38 WHERE ('336562433') ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (('336562433') IS TRUE)  as count FROM vt0, rt1, rt0 INDEXED BY i38 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 INDEXED BY i38 WHERE ('336562433') ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (('336562433') IS TRUE)  as count FROM vt0, rt1, rt0 INDEXED BY i38 ORDER BY NULL ASC);
SELECT ALL * FROM rt1 WHERE (0.011335361621201745);
SELECT SUM(count) FROM (SELECT ((0.011335361621201745) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (0.011335361621201745);
SELECT SUM(count) FROM (SELECT ((0.011335361621201745) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (0.011335361621201745);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, t0, rt0 INNER JOIN rt1 ON ((((t0.c1)<>(rt0.c0))) BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))) AND (((rt0.c0)/('-138024489')))) WHERE (CASE WHEN ((t0.c2)IS NOT(rt0.c2)) THEN ((rt0.c0) BETWEEN (0.45941301328894457) AND (vt0.c0)) END) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c1 WHEN 'c!' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 END IN (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2)IS NOT(rt0.c2)) THEN ((rt0.c0) BETWEEN (0.45941301328894457) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0 INNER JOIN rt1 ON ((((t0.c1)<>(rt0.c0))) BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))) AND (((rt0.c0)/('-138024489')))) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c1 WHEN 'c!' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 END IN (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0))))));
SELECT ALL * FROM vt0, t0, rt0 INNER JOIN rt1 ON ((((t0.c1)<>(rt0.c0))) BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))) AND (((rt0.c0)/('-138024489')))) WHERE (CASE WHEN ((t0.c2)IS NOT(rt0.c2)) THEN ((rt0.c0) BETWEEN (0.45941301328894457) AND (vt0.c0)) END) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c1 WHEN 'c!' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 END IN (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2)IS NOT(rt0.c2)) THEN ((rt0.c0) BETWEEN (0.45941301328894457) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0 INNER JOIN rt1 ON ((((t0.c1)<>(rt0.c0))) BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))) AND (((rt0.c0)/('-138024489')))) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c1 WHEN 'c!' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 END IN (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0))))));
SELECT ALL * FROM vt0, t0, rt0 INNER JOIN rt1 ON ((((t0.c1)<>(rt0.c0))) BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))) AND (((rt0.c0)/('-138024489')))) WHERE (CASE WHEN ((t0.c2)IS NOT(rt0.c2)) THEN ((rt0.c0) BETWEEN (0.45941301328894457) AND (vt0.c0)) END) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c1 WHEN 'c!' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 END IN (CAST(rt0.c0 AS TEXT)))  NULLS FIRST, (((rt1.c1)) BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON t0.c0 RIGHT OUTER JOIN rt1 ON CASE (t0.c0 IN ())  WHEN (((NULL, rt0.c0, rt0.c0))>((rt1.c2, t0.c1, rt0.c0))) THEN CASE WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE rt1.c2 END ELSE rt0.c2 END WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) BETWEEN (IFNULL(t0.c0, rt1.c2)) AND (t0.c2))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) BETWEEN (IFNULL(t0.c0, rt1.c2)) AND (t0.c2))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON t0.c0 RIGHT OUTER JOIN rt1 ON CASE (t0.c0 IN ())  WHEN (((NULL, rt0.c0, rt0.c0))>((rt1.c2, t0.c1, rt0.c0))) THEN CASE WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE rt1.c2 END ELSE rt0.c2 END ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON t0.c0 RIGHT OUTER JOIN rt1 ON CASE (t0.c0 IN ())  WHEN (((NULL, rt0.c0, rt0.c0))>((rt1.c2, t0.c1, rt0.c0))) THEN CASE WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE rt1.c2 END ELSE rt0.c2 END WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) BETWEEN (IFNULL(t0.c0, rt1.c2)) AND (t0.c2))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) BETWEEN (IFNULL(t0.c0, rt1.c2)) AND (t0.c2))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON t0.c0 RIGHT OUTER JOIN rt1 ON CASE (t0.c0 IN ())  WHEN (((NULL, rt0.c0, rt0.c0))>((rt1.c2, t0.c1, rt0.c0))) THEN CASE WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE rt1.c2 END ELSE rt0.c2 END ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON t0.c0 RIGHT OUTER JOIN rt1 ON CASE (t0.c0 IN ())  WHEN (((NULL, rt0.c0, rt0.c0))>((rt1.c2, t0.c1, rt0.c0))) THEN CASE WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE rt1.c2 END ELSE rt0.c2 END WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) BETWEEN (IFNULL(t0.c0, rt1.c2)) AND (t0.c2))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)AND(UPPER(rt1.c1))))OR(rt1.c1))) ORDER BY x'' ASC  NULLS FIRST, CAST(CAST(x'' AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(UPPER(rt1.c1))))OR(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY x'' ASC  NULLS FIRST, CAST(CAST(x'' AS INTEGER) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)AND(UPPER(rt1.c1))))OR(rt1.c1))) ORDER BY x'' ASC  NULLS FIRST, CAST(CAST(x'' AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(UPPER(rt1.c1))))OR(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY x'' ASC  NULLS FIRST, CAST(CAST(x'' AS INTEGER) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)AND(UPPER(rt1.c1))))OR(rt1.c1))) ORDER BY x'' ASC  NULLS FIRST, CAST(CAST(x'' AS INTEGER) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON (NOT (((t0.c1) NOT BETWEEN ('G_H	A') AND (t0.c1)))) WHERE ((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON (NOT (((t0.c1) NOT BETWEEN ('G_H	A') AND (t0.c1)))) ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON (NOT (((t0.c1) NOT BETWEEN ('G_H	A') AND (t0.c1)))) WHERE ((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON (NOT (((t0.c1) NOT BETWEEN ('G_H	A') AND (t0.c1)))) ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON (NOT (((t0.c1) NOT BETWEEN ('G_H	A') AND (t0.c1)))) WHERE ((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY NULL DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((t0.c2 IN ())))) ORDER BY (~ (t0.c2 COLLATE NOCASE))  NULLS FIRST, ((CAST(t0.c2 AS TEXT)) BETWEEN ((t0.c2 IN (t0.c0, t0.c0))) AND (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c2 COLLATE NOCASE))  NULLS FIRST, ((CAST(t0.c2 AS TEXT)) BETWEEN ((t0.c2 IN (t0.c0, t0.c0))) AND (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))));
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((t0.c2 IN ())))) ORDER BY (~ (t0.c2 COLLATE NOCASE))  NULLS FIRST, ((CAST(t0.c2 AS TEXT)) BETWEEN ((t0.c2 IN (t0.c0, t0.c0))) AND (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c2 COLLATE NOCASE))  NULLS FIRST, ((CAST(t0.c2 AS TEXT)) BETWEEN ((t0.c2 IN (t0.c0, t0.c0))) AND (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))));
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((t0.c2 IN ())))) ORDER BY (~ (t0.c2 COLLATE NOCASE))  NULLS FIRST, ((CAST(t0.c2 AS TEXT)) BETWEEN ((t0.c2 IN (t0.c0, t0.c0))) AND (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CASE WHEN ((x'') IS TRUE) THEN ((((t0.c2)OR(rt1.c0)))AND(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') IS TRUE) THEN ((((t0.c2)OR(rt1.c0)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN t0);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CASE WHEN ((x'') IS TRUE) THEN ((((t0.c2)OR(rt1.c0)))AND(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') IS TRUE) THEN ((((t0.c2)OR(rt1.c0)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN t0);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CASE WHEN ((x'') IS TRUE) THEN ((((t0.c2)OR(rt1.c0)))AND(rt1.c0)) END);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN 0.887083395194202 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.887083395194202 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY x'');
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN 0.887083395194202 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.887083395194202 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY x'');
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN 0.887083395194202 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END COLLATE NOCASE) ORDER BY x'';
SELECT * FROM rt1, vt0, t0, rt0 WHERE ((((((rt0.c2) IS TRUE)))<((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))) ORDER BY json_type((vt0.c0 IN (t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS TRUE)))<((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0, t0, rt0 ORDER BY json_type((vt0.c0 IN (t0.c1)))  NULLS LAST);
SELECT * FROM rt1, vt0, t0, rt0 WHERE ((((((rt0.c2) IS TRUE)))<((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))) ORDER BY json_type((vt0.c0 IN (t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS TRUE)))<((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0, t0, rt0 ORDER BY json_type((vt0.c0 IN (t0.c1)))  NULLS LAST);
SELECT * FROM rt1, vt0, t0, rt0 WHERE ((((((rt0.c2) IS TRUE)))<((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))) ORDER BY json_type((vt0.c0 IN (t0.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c2)*(t0.c2)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)*(t0.c2)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c2)*(t0.c2)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)*(t0.c2)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c2)*(t0.c2)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2)))));
SELECT * FROM vt0, rt1 WHERE ('71314897') ORDER BY (((((~ (rt1.c1)))OR(((rt1.c0) IS FALSE))))OR((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT (('71314897') IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((~ (rt1.c1)))OR(((rt1.c0) IS FALSE))))OR((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))));
SELECT * FROM vt0, rt1 WHERE ('71314897') ORDER BY (((((~ (rt1.c1)))OR(((rt1.c0) IS FALSE))))OR((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT (('71314897') IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((~ (rt1.c1)))OR(((rt1.c0) IS FALSE))))OR((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))));
SELECT * FROM vt0, rt1 WHERE ('71314897') ORDER BY (((((~ (rt1.c1)))OR(((rt1.c0) IS FALSE))))OR((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY ((((vt0.c0)&(vt0.c0))) BETWEEN (t0.c1) AND (((t0.c1)||(x''))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)&(vt0.c0))) BETWEEN (t0.c1) AND (((t0.c1)||(x'')))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY ((((vt0.c0)&(vt0.c0))) BETWEEN (t0.c1) AND (((t0.c1)||(x''))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)&(vt0.c0))) BETWEEN (t0.c1) AND (((t0.c1)||(x'')))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY ((((vt0.c0)&(vt0.c0))) BETWEEN (t0.c1) AND (((t0.c1)||(x''))));
SELECT * FROM rt0, t0, rt1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2))) NOTNULL)) ORDER BY (- (((rt0.c2)|(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (- (((rt0.c2)|(t0.c0)))));
SELECT * FROM rt0, t0, rt1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2))) NOTNULL)) ORDER BY (- (((rt0.c2)|(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (- (((rt0.c2)|(t0.c0)))));
SELECT * FROM rt0, t0, rt1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2))) NOTNULL)) ORDER BY (- (((rt0.c2)|(t0.c0))));
SELECT ALL * FROM vt0, rt1 WHERE ((((~ (rt1.c1))) IS FALSE)) ORDER BY CAST(x'' AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(x'' AS NUMERIC));
SELECT ALL * FROM vt0, rt1 WHERE ((((~ (rt1.c1))) IS FALSE)) ORDER BY CAST(x'' AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(x'' AS NUMERIC));
SELECT ALL * FROM vt0, rt1 WHERE ((((~ (rt1.c1))) IS FALSE)) ORDER BY CAST(x'' AS NUMERIC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt1 WHERE ((((rt0.c1, rt1.c0, rt0.c1)) NOT BETWEEN (((NOT (t0.c2)), x'', ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((CASE 0X13834200  WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c2 END, ((((((((rt0.c1)AND(t0.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(t0.c2)), CASE WHEN vt0.c0 THEN rt1.c2 WHEN t0.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 END)))) ORDER BY (UNLIKELY(t0.c0) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))) DESC  NULLS FIRST, ((((((((((rt1.c0)OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR('Yᅸ\n'))) BETWEEN ((((t0.c0))>=((rt1.c2)))) AND (((((rt1.c1)AND(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST, ((((rt1.c2)>('B* Iy')))>=((- (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt1.c0, rt0.c1)) NOT BETWEEN (((NOT (t0.c2)), x'', ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((CASE 0x13834200  WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c2 END, ((((((((rt0.c1)AND(t0.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(t0.c2)), CASE WHEN vt0.c0 THEN rt1.c2 WHEN t0.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 END)))) IS TRUE)  as count FROM vt0, t0, rt0, rt1 ORDER BY (UNLIKELY(t0.c0) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))) DESC  NULLS FIRST, ((((((((((rt1.c0)OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR('Yᅸ\n'))) BETWEEN ((((t0.c0))>=((rt1.c2)))) AND (((((rt1.c1)AND(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST, ((((rt1.c2)>('B* Iy')))>=((- (t0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt1 WHERE ((((rt0.c1, rt1.c0, rt0.c1)) NOT BETWEEN (((NOT (t0.c2)), x'', ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((CASE 0X13834200  WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c2 END, ((((((((rt0.c1)AND(t0.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(t0.c2)), CASE WHEN vt0.c0 THEN rt1.c2 WHEN t0.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 END)))) ORDER BY (UNLIKELY(t0.c0) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))) DESC  NULLS FIRST, ((((((((((rt1.c0)OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR('Yᅸ\n'))) BETWEEN ((((t0.c0))>=((rt1.c2)))) AND (((((rt1.c1)AND(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST, ((((rt1.c2)>('B* Iy')))>=((- (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt1.c0, rt0.c1)) NOT BETWEEN (((NOT (t0.c2)), x'', ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((CASE 0x13834200  WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c2 END, ((((((((rt0.c1)AND(t0.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(t0.c2)), CASE WHEN vt0.c0 THEN rt1.c2 WHEN t0.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 END)))) IS TRUE)  as count FROM vt0, t0, rt0, rt1 ORDER BY (UNLIKELY(t0.c0) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))) DESC  NULLS FIRST, ((((((((((rt1.c0)OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR('Yᅸ\n'))) BETWEEN ((((t0.c0))>=((rt1.c2)))) AND (((((rt1.c1)AND(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST, ((((rt1.c2)>('B* Iy')))>=((- (t0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, rt1 WHERE ((((rt0.c1, rt1.c0, rt0.c1)) NOT BETWEEN (((NOT (t0.c2)), x'', ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((CASE 0X13834200  WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c2 END, ((((((((rt0.c1)AND(t0.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(t0.c2)), CASE WHEN vt0.c0 THEN rt1.c2 WHEN t0.c1 THEN rt1.c1 WHEN NULL THEN rt1.c0 END)))) ORDER BY (UNLIKELY(t0.c0) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))) DESC  NULLS FIRST, ((((((((((rt1.c0)OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR('Yᅸ\n'))) BETWEEN ((((t0.c0))>=((rt1.c2)))) AND (((((rt1.c1)AND(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST, ((((rt1.c2)>('B* Iy')))>=((- (t0.c1))));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (((9.1015024E8 IN (rt0.c1)))AND(rt1.c2)) CROSS JOIN t0 ON (((NULL, rt0.c1, rt0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL), (((rt1.c2)) BETWEEN ((t0.c0)) AND ((rt1.c1))), ((t0.c0)%('\n')))) AND (((((rt1.c2))=((rt0.c2))), UNLIKELY(rt0.c0), MIN(rt0.c1, t0.c0)))) WHERE (json_insert(CAST(t0.c1 AS NUMERIC), (((t0.c1))<=((vt0.c0))), (((rt1.c2))>=((t0.c2))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(t0.c1 AS NUMERIC), (((t0.c1))<=((vt0.c0))), (((rt1.c2))>=((t0.c2))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (((9.1015024E8 IN (rt0.c1)))AND(rt1.c2)) CROSS JOIN t0 ON (((NULL, rt0.c1, rt0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL), (((rt1.c2)) BETWEEN ((t0.c0)) AND ((rt1.c1))), ((t0.c0)%('\n')))) AND (((((rt1.c2))=((rt0.c2))), UNLIKELY(rt0.c0), MIN(rt0.c1, t0.c0)))) ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (((9.1015024E8 IN (rt0.c1)))AND(rt1.c2)) CROSS JOIN t0 ON (((NULL, rt0.c1, rt0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL), (((rt1.c2)) BETWEEN ((t0.c0)) AND ((rt1.c1))), ((t0.c0)%('\n')))) AND (((((rt1.c2))=((rt0.c2))), UNLIKELY(rt0.c0), MIN(rt0.c1, t0.c0)))) WHERE (json_insert(CAST(t0.c1 AS NUMERIC), (((t0.c1))<=((vt0.c0))), (((rt1.c2))>=((t0.c2))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(t0.c1 AS NUMERIC), (((t0.c1))<=((vt0.c0))), (((rt1.c2))>=((t0.c2))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (((9.1015024E8 IN (rt0.c1)))AND(rt1.c2)) CROSS JOIN t0 ON (((NULL, rt0.c1, rt0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL), (((rt1.c2)) BETWEEN ((t0.c0)) AND ((rt1.c1))), ((t0.c0)%('\n')))) AND (((((rt1.c2))=((rt0.c2))), UNLIKELY(rt0.c0), MIN(rt0.c1, t0.c0)))) ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((((((((rt0.c0)OR(t0.c0)))OR(rt0.c0)))OR(CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(t0.c0)))OR(rt0.c0)))OR(CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((((rt0.c0)OR(t0.c0)))OR(rt0.c0)))OR(CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(t0.c0)))OR(rt0.c0)))OR(CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((((rt0.c0)OR(t0.c0)))OR(rt0.c0)))OR(CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(CAST(t0.c2 AS BLOB))));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((-1634363013)) AND ((vt0.c0))))) AND ((((x'')&(rt0.c1)))))) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND((((('-1451964250')AND(rt0.c1)))OR(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((-1634363013)) AND ((vt0.c0))))) AND ((((x'')&(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND((((('-1451964250')AND(rt0.c1)))OR(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((-1634363013)) AND ((vt0.c0))))) AND ((((x'')&(rt0.c1)))))) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND((((('-1451964250')AND(rt0.c1)))OR(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((-1634363013)) AND ((vt0.c0))))) AND ((((x'')&(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND((((('-1451964250')AND(rt0.c1)))OR(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((-1634363013)) AND ((vt0.c0))))) AND ((((x'')&(rt0.c1)))))) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND((((('-1451964250')AND(rt0.c1)))OR(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((json_patch(rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c1)IS(x''))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c1)IS(x''))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((json_patch(rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c1)IS(x''))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c1)IS(x''))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))<=(((rt0.c0)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))<=(((rt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))<=(((rt0.c0)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))<=(((rt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))<=(((rt0.c0)+(rt0.c0)))));
SELECT * FROM t0, rt0 WHERE ((- (rt0.c1))) ORDER BY ((t0.c2 COLLATE BINARY)IS(((t0.c2) IS TRUE))), t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c2 COLLATE BINARY)IS(((t0.c2) IS TRUE))), t0.c0  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((- (rt0.c1))) ORDER BY ((t0.c2 COLLATE BINARY)IS(((t0.c2) IS TRUE))), t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c2 COLLATE BINARY)IS(((t0.c2) IS TRUE))), t0.c0  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((- (rt0.c1))) ORDER BY ((t0.c2 COLLATE BINARY)IS(((t0.c2) IS TRUE))), t0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN t0 ON (((((t0.c1, t0.c1, rt1.c1, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, t0.c1, t0.c1, t0.c2, rt1.c1)) AND (('', t0.c2, rt1.c1, vt0.c0, rt1.c1)))) IS TRUE) WHERE (((x'') NOT BETWEEN ((~ (rt1.c0))) AND ((('') IS FALSE)))) ORDER BY CAST(((vt0.c0) NOTNULL) AS NUMERIC), ((((((rt1.c1)AND(t0.c0)))OR(vt0.c0)))OR((~ (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ((~ (rt1.c0))) AND ((('') IS FALSE)))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN t0 ON (((((t0.c1, t0.c1, rt1.c1, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, t0.c1, t0.c1, t0.c2, rt1.c1)) AND (('', t0.c2, rt1.c1, vt0.c0, rt1.c1)))) IS TRUE) ORDER BY CAST(((vt0.c0) NOTNULL) AS NUMERIC), ((((((rt1.c1)AND(t0.c0)))OR(vt0.c0)))OR((~ (rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN t0 ON (((((t0.c1, t0.c1, rt1.c1, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, t0.c1, t0.c1, t0.c2, rt1.c1)) AND (('', t0.c2, rt1.c1, vt0.c0, rt1.c1)))) IS TRUE) WHERE (((x'') NOT BETWEEN ((~ (rt1.c0))) AND ((('') IS FALSE)))) ORDER BY CAST(((vt0.c0) NOTNULL) AS NUMERIC), ((((((rt1.c1)AND(t0.c0)))OR(vt0.c0)))OR((~ (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ((~ (rt1.c0))) AND ((('') IS FALSE)))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN t0 ON (((((t0.c1, t0.c1, rt1.c1, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, t0.c1, t0.c1, t0.c2, rt1.c1)) AND (('', t0.c2, rt1.c1, vt0.c0, rt1.c1)))) IS TRUE) ORDER BY CAST(((vt0.c0) NOTNULL) AS NUMERIC), ((((((rt1.c1)AND(t0.c0)))OR(vt0.c0)))OR((~ (rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN t0 ON (((((t0.c1, t0.c1, rt1.c1, vt0.c0, rt1.c1)) BETWEEN ((rt1.c1, t0.c1, t0.c1, t0.c2, rt1.c1)) AND (('', t0.c2, rt1.c1, vt0.c0, rt1.c1)))) IS TRUE) WHERE (((x'') NOT BETWEEN ((~ (rt1.c0))) AND ((('') IS FALSE)))) ORDER BY CAST(((vt0.c0) NOTNULL) AS NUMERIC), ((((((rt1.c1)AND(t0.c0)))OR(vt0.c0)))OR((~ (rt1.c0)))) DESC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) END WHERE ((+ (((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) END);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) END WHERE ((+ (((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) END);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) END WHERE ((+ (((rt1.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)), ((((vt0.c0)OR(rt1.c1)))OR(rt0.c2)), (~ (t0.c2))))<((rt0.c1 COLLATE BINARY, CAST('' AS INTEGER), CAST(rt0.c2 AS INTEGER)))) LEFT OUTER JOIN rt0 ON ABS(CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 END) CROSS JOIN rt1 ON TYPEOF(DISTINCT CASE 0.0675982398196674  WHEN t0.c0 THEN 4.19877453E8 END) WHERE (CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)), ((((vt0.c0)OR(rt1.c1)))OR(rt0.c2)), (~ (t0.c2))))<((rt0.c1 COLLATE BINARY, CAST('' AS INTEGER), CAST(rt0.c2 AS INTEGER)))) LEFT OUTER JOIN rt0 ON ABS(CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 END) CROSS JOIN rt1 ON TYPEOF(DISTINCT CASE 0.0675982398196674  WHEN t0.c0 THEN 4.19877453E8 END));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)), ((((vt0.c0)OR(rt1.c1)))OR(rt0.c2)), (~ (t0.c2))))<((rt0.c1 COLLATE BINARY, CAST('' AS INTEGER), CAST(rt0.c2 AS INTEGER)))) LEFT OUTER JOIN rt0 ON ABS(CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 END) CROSS JOIN rt1 ON TYPEOF(DISTINCT CASE 0.0675982398196674  WHEN t0.c0 THEN 4.19877453E8 END) WHERE (CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)), ((((vt0.c0)OR(rt1.c1)))OR(rt0.c2)), (~ (t0.c2))))<((rt0.c1 COLLATE BINARY, CAST('' AS INTEGER), CAST(rt0.c2 AS INTEGER)))) LEFT OUTER JOIN rt0 ON ABS(CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 END) CROSS JOIN rt1 ON TYPEOF(DISTINCT CASE 0.0675982398196674  WHEN t0.c0 THEN 4.19877453E8 END));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))%(vt0.c0))) ORDER BY (((((vt0.c0)+(vt0.c0))))!=((json_insert(NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))%(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)+(vt0.c0))))!=((json_insert(NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))%(vt0.c0))) ORDER BY (((((vt0.c0)+(vt0.c0))))!=((json_insert(NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))%(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)+(vt0.c0))))!=((json_insert(NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))%(vt0.c0))) ORDER BY (((((vt0.c0)+(vt0.c0))))!=((json_insert(NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)<<(((vt0.c0)<=(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)<<(((vt0.c0)<=(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)<<(((vt0.c0)<=(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt1 WHERE (NULL) ORDER BY -144908713 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY -144908713 ASC);
SELECT ALL * FROM vt0, t0, rt1 WHERE (NULL) ORDER BY -144908713 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY -144908713 ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c2 IN ()))&(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))&(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c2 IN ()))&(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))&(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c2 IN ()))&(((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (0.4893926887851988))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (0.4893926887851988))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (0.4893926887851988))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (0.4893926887851988))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (0.4893926887851988))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c2)IS(rt0.c0)))<>(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)IS(rt0.c0)))<>(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c2)IS(rt0.c0)))<>(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)IS(rt0.c0)))<>(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c2)IS(rt0.c0)))<>(rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((t0.c2)OR(rt0.c0)))AND(t0.c0))) NOT NULL)) ORDER BY rt0.c0 COLLATE RTRIM ASC, (((((((((((rt0.c1)AND(t0.c1)))AND(t0.c1)))OR(rt0.c2)))AND(t0.c2))))>((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))  NULLS LAST, CHAR(((rt0.c2) BETWEEN (x'') AND (t0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(rt0.c0)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY rt0.c0 COLLATE RTRIM ASC, (((((((((((rt0.c1)AND(t0.c1)))AND(t0.c1)))OR(rt0.c2)))AND(t0.c2))))>((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))  NULLS LAST, CHAR(((rt0.c2) BETWEEN (x'') AND (t0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((t0.c2)OR(rt0.c0)))AND(t0.c0))) NOT NULL)) ORDER BY rt0.c0 COLLATE RTRIM ASC, (((((((((((rt0.c1)AND(t0.c1)))AND(t0.c1)))OR(rt0.c2)))AND(t0.c2))))>((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))  NULLS LAST, CHAR(((rt0.c2) BETWEEN (x'') AND (t0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(rt0.c0)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY rt0.c0 COLLATE RTRIM ASC, (((((((((((rt0.c1)AND(t0.c1)))AND(t0.c1)))OR(rt0.c2)))AND(t0.c2))))>((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))  NULLS LAST, CHAR(((rt0.c2) BETWEEN (x'') AND (t0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((t0.c2)OR(rt0.c0)))AND(t0.c0))) NOT NULL)) ORDER BY rt0.c0 COLLATE RTRIM ASC, (((((((((((rt0.c1)AND(t0.c1)))AND(t0.c1)))OR(rt0.c2)))AND(t0.c2))))>((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))  NULLS LAST, CHAR(((rt0.c2) BETWEEN (x'') AND (t0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((x'')OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))IS NOT((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))));
SELECT SUM(count) FROM (SELECT ((((((((((((x'')OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))IS NOT((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('')))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((x'')OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))IS NOT((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))));
SELECT SUM(count) FROM (SELECT ((((((((((((x'')OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))IS NOT((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('')))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((x'')OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))IS NOT((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((rt1.c2)IS(t0.c2)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)))OR(((NULL)IS NOT(t0.c0)))))AND(((t0.c2) NOT BETWEEN (0xffffffffdc9f7c11) AND (t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)IS(t0.c2)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)))OR(((NULL)IS NOT(t0.c0)))))AND(((t0.c2) NOT BETWEEN (0xffffffffdc9f7c11) AND (t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((rt1.c2)IS(t0.c2)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)))OR(((NULL)IS NOT(t0.c0)))))AND(((t0.c2) NOT BETWEEN (0xffffffffdc9f7c11) AND (t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)IS(t0.c2)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)))OR(((NULL)IS NOT(t0.c0)))))AND(((t0.c2) NOT BETWEEN (0xffffffffdc9f7c11) AND (t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((rt1.c2)IS(t0.c2)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)))OR(((NULL)IS NOT(t0.c0)))))AND(((t0.c2) NOT BETWEEN (0xffffffffdc9f7c11) AND (t0.c2)))) ASC  NULLS LAST;
SELECT * FROM rt0, t0, rt1 WHERE (TYPEOF(CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 ELSE t0.c2 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 ELSE t0.c2 END)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (TYPEOF(CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 ELSE t0.c2 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 ELSE t0.c2 END)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (TYPEOF(CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 ELSE t0.c2 END));
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((0.7867690995294454)>>(((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(t0.c2))))) ORDER BY (0Xfffffffff18d7d44 COLLATE NOCASE IN (((rt1.c1)/(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.7867690995294454)>>(((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0, rt1 ORDER BY (0xfffffffff18d7d44 COLLATE NOCASE IN (((rt1.c1)/(rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((0.7867690995294454)>>(((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(t0.c2))))) ORDER BY (0Xfffffffff18d7d44 COLLATE NOCASE IN (((rt1.c1)/(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.7867690995294454)>>(((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0, rt1 ORDER BY (0xfffffffff18d7d44 COLLATE NOCASE IN (((rt1.c1)/(rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((0.7867690995294454)>>(((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(t0.c2))))) ORDER BY (0Xfffffffff18d7d44 COLLATE NOCASE IN (((rt1.c1)/(rt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((TIME(t0.c0, vt0.c0, t0.c2, x'', vt0.c0)) BETWEEN ((NOT (t0.c1))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) WHEN ((((((((t0.c1)AND(rt0.c2)))OR(t0.c1)))OR(t0.c0)))OR(rt0.c0)) THEN ((t0.c1)>>(t0.c0)) WHEN LIKELY(t0.c1) THEN ((vt0.c0) NOTNULL) ELSE NULL END WHERE (CASE (rt0.c2 IN (rt0.c2))  WHEN (+ (vt0.c0)) THEN json_quote(t0.c0) ELSE ((t0.c2) NOT NULL) END) ORDER BY CAST(((rt0.c1)IS NOT(t0.c2)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN (rt0.c2))  WHEN (+ (vt0.c0)) THEN json_quote(t0.c0) ELSE ((t0.c2) NOT NULL) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((TIME(t0.c0, vt0.c0, t0.c2, x'', vt0.c0)) BETWEEN ((NOT (t0.c1))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) WHEN ((((((((t0.c1)AND(rt0.c2)))OR(t0.c1)))OR(t0.c0)))OR(rt0.c0)) THEN ((t0.c1)>>(t0.c0)) WHEN LIKELY(t0.c1) THEN ((vt0.c0) NOTNULL) ELSE NULL END ORDER BY CAST(((rt0.c1)IS NOT(t0.c2)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((TIME(t0.c0, vt0.c0, t0.c2, x'', vt0.c0)) BETWEEN ((NOT (t0.c1))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) WHEN ((((((((t0.c1)AND(rt0.c2)))OR(t0.c1)))OR(t0.c0)))OR(rt0.c0)) THEN ((t0.c1)>>(t0.c0)) WHEN LIKELY(t0.c1) THEN ((vt0.c0) NOTNULL) ELSE NULL END WHERE (CASE (rt0.c2 IN (rt0.c2))  WHEN (+ (vt0.c0)) THEN json_quote(t0.c0) ELSE ((t0.c2) NOT NULL) END) ORDER BY CAST(((rt0.c1)IS NOT(t0.c2)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN (rt0.c2))  WHEN (+ (vt0.c0)) THEN json_quote(t0.c0) ELSE ((t0.c2) NOT NULL) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((TIME(t0.c0, vt0.c0, t0.c2, x'', vt0.c0)) BETWEEN ((NOT (t0.c1))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) WHEN ((((((((t0.c1)AND(rt0.c2)))OR(t0.c1)))OR(t0.c0)))OR(rt0.c0)) THEN ((t0.c1)>>(t0.c0)) WHEN LIKELY(t0.c1) THEN ((vt0.c0) NOTNULL) ELSE NULL END ORDER BY CAST(((rt0.c1)IS NOT(t0.c2)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2) NOT NULL) AS REAL)) ORDER BY ((NOT (t0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) NOT NULL) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((NOT (t0.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2) NOT NULL) AS REAL)) ORDER BY ((NOT (t0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) NOT NULL) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((NOT (t0.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2) NOT NULL) AS REAL)) ORDER BY ((NOT (t0.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c2) NOT NULL)) ORDER BY ((t0.c1) IS FALSE) DESC  NULLS LAST, t0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED ORDER BY ((t0.c1) IS FALSE) DESC  NULLS LAST, t0.c1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c2) NOT NULL)) ORDER BY ((t0.c1) IS FALSE) DESC  NULLS LAST, t0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED ORDER BY ((t0.c1) IS FALSE) DESC  NULLS LAST, t0.c1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c2) NOT NULL)) ORDER BY ((t0.c1) IS FALSE) DESC  NULLS LAST, t0.c1;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((~ (rt1.c0))))) ORDER BY ((((((((highlight(rt1.c1, rt1.c0, 0x37eef5, x'2802'))AND(rt1.c1)))AND(((x'') BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c0)*(rt1.c1)))))OR(rt1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((highlight(rt1.c1, rt1.c0, 0X37eef5, x'2802'))AND(rt1.c1)))AND(((x'') BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c0)*(rt1.c1)))))OR(rt1.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((~ (rt1.c0))))) ORDER BY ((((((((highlight(rt1.c1, rt1.c0, 0x37eef5, x'2802'))AND(rt1.c1)))AND(((x'') BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c0)*(rt1.c1)))))OR(rt1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((highlight(rt1.c1, rt1.c0, 0X37eef5, x'2802'))AND(rt1.c1)))AND(((x'') BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c0)*(rt1.c1)))))OR(rt1.c2 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((((rt0.c0, t0.c2, rt1.c1))>((rt1.c2, rt1.c0, rt1.c1))))AND((((rt0.c0, rt1.c0, rt1.c1))>((rt1.c1, rt1.c0, t0.c0)))))) ORDER BY CAST((((t0.c1, rt1.c0, rt1.c2))!=((t0.c0, rt1.c0, t0.c1))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, t0.c2, rt1.c1))>((rt1.c2, rt1.c0, rt1.c1))))AND((((rt0.c0, rt1.c0, rt1.c1))>((rt1.c1, rt1.c0, t0.c0)))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST((((t0.c1, rt1.c0, rt1.c2))<>((t0.c0, rt1.c0, t0.c1))) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((((rt0.c0, t0.c2, rt1.c1))>((rt1.c2, rt1.c0, rt1.c1))))AND((((rt0.c0, rt1.c0, rt1.c1))>((rt1.c1, rt1.c0, t0.c0)))))) ORDER BY CAST((((t0.c1, rt1.c0, rt1.c2))!=((t0.c0, rt1.c0, t0.c1))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, t0.c2, rt1.c1))>((rt1.c2, rt1.c0, rt1.c1))))AND((((rt0.c0, rt1.c0, rt1.c1))>((rt1.c1, rt1.c0, t0.c0)))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST((((t0.c1, rt1.c0, rt1.c2))<>((t0.c0, rt1.c0, t0.c1))) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((((rt0.c0, t0.c2, rt1.c1))>((rt1.c2, rt1.c0, rt1.c1))))AND((((rt0.c0, rt1.c0, rt1.c1))>((rt1.c1, rt1.c0, t0.c0)))))) ORDER BY CAST((((t0.c1, rt1.c0, rt1.c2))!=((t0.c0, rt1.c0, t0.c1))) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE NOCASE THEN ((t0.c1) NOTNULL) END LEFT OUTER JOIN t0 ON CASE ((t0.c2)IS(vt0.c0))  WHEN '\rXs+' THEN (((rt0.c1))=((rt1.c0))) ELSE (- (rt0.c2)) END WHERE (ROUND((('w\n!sY9k') ISNULL), CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 ELSE 0.796837345414883 END));
SELECT SUM(count) FROM (SELECT ALL ((ROUND((('w\n!sY9k') ISNULL), CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 ELSE 0.796837345414883 END)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE NOCASE THEN ((t0.c1) NOTNULL) END LEFT OUTER JOIN t0 ON CASE ((t0.c2)IS(vt0.c0))  WHEN '\rXs+' THEN (((rt0.c1))=((rt1.c0))) ELSE (- (rt0.c2)) END);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE NOCASE THEN ((t0.c1) NOTNULL) END LEFT OUTER JOIN t0 ON CASE ((t0.c2)IS(vt0.c0))  WHEN '\rXs+' THEN (((rt0.c1))=((rt1.c0))) ELSE (- (rt0.c2)) END WHERE (ROUND((('w\n!sY9k') ISNULL), CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 ELSE 0.796837345414883 END));
SELECT SUM(count) FROM (SELECT ALL ((ROUND((('w\n!sY9k') ISNULL), CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 ELSE 0.796837345414883 END)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE NOCASE THEN ((t0.c1) NOTNULL) END LEFT OUTER JOIN t0 ON CASE ((t0.c2)IS(vt0.c0))  WHEN '\rXs+' THEN (((rt0.c1))=((rt1.c0))) ELSE (- (rt0.c2)) END);
SELECT * FROM rt0, vt0, rt1, t0 WHERE (((((t0.c1)/(rt1.c0)))>=(((rt1.c1)<>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)/(rt1.c0)))>=(((rt1.c1)!=(rt1.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1 NOT INDEXED, t0);
SELECT * FROM rt0, vt0, rt1, t0 WHERE (((((t0.c1)/(rt1.c0)))>=(((rt1.c1)<>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)/(rt1.c0)))>=(((rt1.c1)!=(rt1.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1 NOT INDEXED, t0);
SELECT * FROM rt0, vt0, rt1, t0 WHERE (((((t0.c1)/(rt1.c0)))>=(((rt1.c1)<>(rt1.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)==(t0.c2)))OR(CAST(t0.c1 AS REAL))))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(1772181802)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)=(t0.c2)))OR(CAST(t0.c1 AS REAL))))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(1772181802)))OR(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)==(t0.c2)))OR(CAST(t0.c1 AS REAL))))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(1772181802)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)=(t0.c2)))OR(CAST(t0.c1 AS REAL))))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(1772181802)))OR(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)==(t0.c2)))OR(CAST(t0.c1 AS REAL))))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)))OR(1772181802)))OR(t0.c1)))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN t0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE t0.c0 END)OR(((((((((rt0.c1)OR(t0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN t0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE t0.c0 END)OR(((((((((rt0.c1)OR(t0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN t0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE t0.c0 END)OR(((((((((rt0.c1)OR(t0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN t0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE t0.c0 END)OR(((((((((rt0.c1)OR(t0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN t0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE t0.c0 END)OR(((((((((rt0.c1)OR(t0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (((((t0.c2)||(rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)||(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((((t0.c2)||(rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)||(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((((t0.c2)||(rt1.c1))) IS TRUE));
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c0) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (((rt0.c2)AND(NULL))) AND (rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (((rt0.c2)AND(NULL))) AND (rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c0) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (((rt0.c2)AND(NULL))) AND (rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (((rt0.c2)AND(NULL))) AND (rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c0) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (((rt0.c2)AND(NULL))) AND (rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN ((- (rt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN ((- (rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN ((- (rt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN ((- (rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN ((- (rt0.c0))) AND (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (rt0.c1) AND (((rt0.c2)/(rt0.c0))))) ORDER BY ((rt0.c1 COLLATE RTRIM)|(rt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) NOT BETWEEN (rt0.c1) AND (((rt0.c2)/(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM)|(rt0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (rt0.c1) AND (((rt0.c2)/(rt0.c0))))) ORDER BY ((rt0.c1 COLLATE RTRIM)|(rt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) NOT BETWEEN (rt0.c1) AND (((rt0.c2)/(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM)|(rt0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (rt0.c1) AND (((rt0.c2)/(rt0.c0))))) ORDER BY ((rt0.c1 COLLATE RTRIM)|(rt0.c0 COLLATE BINARY)) DESC;
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON rt1.c2 WHERE (NULL) ORDER BY (((((((rt1.c0)OR(rt1.c1)))OR(NULL))))=((((rt1.c2) BETWEEN (rt1.c0) AND (0.539857372389876)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON rt1.c2 ORDER BY (((((((rt1.c0)OR(rt1.c1)))OR(NULL))))==((((rt1.c2) BETWEEN (rt1.c0) AND (0.539857372389876))))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON rt1.c2 WHERE (NULL) ORDER BY (((((((rt1.c0)OR(rt1.c1)))OR(NULL))))=((((rt1.c2) BETWEEN (rt1.c0) AND (0.539857372389876)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON rt1.c2 ORDER BY (((((((rt1.c0)OR(rt1.c1)))OR(NULL))))==((((rt1.c2) BETWEEN (rt1.c0) AND (0.539857372389876))))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON rt1.c2 WHERE (NULL) ORDER BY (((((((rt1.c0)OR(rt1.c1)))OR(NULL))))=((((rt1.c2) BETWEEN (rt1.c0) AND (0.539857372389876)))));
SELECT * FROM rt0, rt1, t0, vt0 WHERE (((((rt0.c1)AND(rt1.c2)))OR(((((((((t0.c2)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(''))))) ORDER BY 0.2516075518969123 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(rt1.c2)))OR(((((((((t0.c2)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(''))))) IS TRUE)  as count FROM rt0, rt1, t0, vt0 ORDER BY 0.2516075518969123 DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t0, vt0 WHERE (((((rt0.c1)AND(rt1.c2)))OR(((((((((t0.c2)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(''))))) ORDER BY 0.2516075518969123 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(rt1.c2)))OR(((((((((t0.c2)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(''))))) IS TRUE)  as count FROM rt0, rt1, t0, vt0 ORDER BY 0.2516075518969123 DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t0, vt0 WHERE (((((rt0.c1)AND(rt1.c2)))OR(((((((((t0.c2)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(''))))) ORDER BY 0.2516075518969123 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON ((CAST(t0.c0 AS BLOB))IS(((rt1.c2) ISNULL))) FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) WHERE (((((((t0.c0, t0.c1, t0.c2, vt0.c0, t0.c2)) NOT BETWEEN (('', t0.c1, t0.c1, rt1.c2, t0.c1)) AND ((rt1.c1, x'', rt1.c2, vt0.c0, t0.c1)))))==((((t0.c2)/(t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c1, t0.c2, vt0.c0, t0.c2)) NOT BETWEEN (('', t0.c1, t0.c1, rt1.c2, t0.c1)) AND ((rt1.c1, x'', rt1.c2, vt0.c0, t0.c1)))))==((((t0.c2)/(t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((CAST(t0.c0 AS BLOB))IS(((rt1.c2) ISNULL))) FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON ((CAST(t0.c0 AS BLOB))IS(((rt1.c2) ISNULL))) FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) WHERE (((((((t0.c0, t0.c1, t0.c2, vt0.c0, t0.c2)) NOT BETWEEN (('', t0.c1, t0.c1, rt1.c2, t0.c1)) AND ((rt1.c1, x'', rt1.c2, vt0.c0, t0.c1)))))==((((t0.c2)/(t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c1, t0.c2, vt0.c0, t0.c2)) NOT BETWEEN (('', t0.c1, t0.c1, rt1.c2, t0.c1)) AND ((rt1.c1, x'', rt1.c2, vt0.c0, t0.c1)))))==((((t0.c2)/(t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((CAST(t0.c0 AS BLOB))IS(((rt1.c2) ISNULL))) FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON ((CAST(t0.c0 AS BLOB))IS(((rt1.c2) ISNULL))) FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) WHERE (((((((t0.c0, t0.c1, t0.c2, vt0.c0, t0.c2)) NOT BETWEEN (('', t0.c1, t0.c1, rt1.c2, t0.c1)) AND ((rt1.c1, x'', rt1.c2, vt0.c0, t0.c1)))))==((((t0.c2)/(t0.c0))))));
SELECT * FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (x'')) RIGHT OUTER JOIN t0 ON SQLITE_SOURCE_ID() WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (x'')) RIGHT OUTER JOIN t0 ON SQLITE_SOURCE_ID());
SELECT * FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (x'')) RIGHT OUTER JOIN t0 ON SQLITE_SOURCE_ID() WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (x'')) RIGHT OUTER JOIN t0 ON SQLITE_SOURCE_ID());
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0))) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((('') IS TRUE) AS INTEGER)) ORDER BY LIKELIHOOD(DISTINCT ((((t0.c1)OR(vt0.c0)))OR(t0.c1)), 0.4460870080079715), (('0.13299392210410255') NOT BETWEEN (x'3d86') AND (CAST(t0.c1 AS INTEGER)))  NULLS LAST, LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('') IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY LIKELIHOOD(DISTINCT ((((t0.c1)OR(vt0.c0)))OR(t0.c1)), 0.4460870080079715), (('0.13299392210410255') NOT BETWEEN (x'3d86') AND (CAST(t0.c1 AS INTEGER)))  NULLS LAST, LAST_INSERT_ROWID() ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((('') IS TRUE) AS INTEGER)) ORDER BY LIKELIHOOD(DISTINCT ((((t0.c1)OR(vt0.c0)))OR(t0.c1)), 0.4460870080079715), (('0.13299392210410255') NOT BETWEEN (x'3d86') AND (CAST(t0.c1 AS INTEGER)))  NULLS LAST, LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('') IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY LIKELIHOOD(DISTINCT ((((t0.c1)OR(vt0.c0)))OR(t0.c1)), 0.4460870080079715), (('0.13299392210410255') NOT BETWEEN (x'3d86') AND (CAST(t0.c1 AS INTEGER)))  NULLS LAST, LAST_INSERT_ROWID() ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((('') IS TRUE) AS INTEGER)) ORDER BY LIKELIHOOD(DISTINCT ((((t0.c1)OR(vt0.c0)))OR(t0.c1)), 0.4460870080079715), (('0.13299392210410255') NOT BETWEEN (x'3d86') AND (CAST(t0.c1 AS INTEGER)))  NULLS LAST, LAST_INSERT_ROWID() ASC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ()) CROSS JOIN rt0 ON COALESCE(((((t0.c0)OR(rt1.c2)))AND(t0.c0)), TRIM(DISTINCT rt0.c2)) RIGHT OUTER JOIN t0 ON LIKELY(CAST(rt0.c0 AS BLOB)) WHERE (vt0.c0) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST, (((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ()) CROSS JOIN rt0 ON COALESCE(((((t0.c0)OR(rt1.c2)))AND(t0.c0)), TRIM(DISTINCT rt0.c2)) RIGHT OUTER JOIN t0 ON LIKELY(CAST(rt0.c0 AS BLOB)) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST, (((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ()) CROSS JOIN rt0 ON COALESCE(((((t0.c0)OR(rt1.c2)))AND(t0.c0)), TRIM(DISTINCT rt0.c2)) RIGHT OUTER JOIN t0 ON LIKELY(CAST(rt0.c0 AS BLOB)) WHERE (vt0.c0) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST, (((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ()) CROSS JOIN rt0 ON COALESCE(((((t0.c0)OR(rt1.c2)))AND(t0.c0)), TRIM(DISTINCT rt0.c2)) RIGHT OUTER JOIN t0 ON LIKELY(CAST(rt0.c0 AS BLOB)) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST, (((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND(-1731153179)) FULL OUTER JOIN t0 ON ((((((rt1.c2)+('419877453')))OR(((rt0.c1) ISNULL))))AND(CASE WHEN t0.c1 THEN rt0.c1 ELSE rt1.c2 END)) LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) BETWEEN (x'') AND ((t0.c2 IN ()))) WHERE ((((CASE WHEN t0.c1 THEN rt1.c2 END))<((CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c1 THEN rt1.c2 END))<((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND(-1731153179)) FULL OUTER JOIN t0 ON ((((((rt1.c2)+('419877453')))OR(((rt0.c1) ISNULL))))AND(CASE WHEN t0.c1 THEN rt0.c1 ELSE rt1.c2 END)) LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) BETWEEN (x'') AND ((t0.c2 IN ()))));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND(-1731153179)) FULL OUTER JOIN t0 ON ((((((rt1.c2)+('419877453')))OR(((rt0.c1) ISNULL))))AND(CASE WHEN t0.c1 THEN rt0.c1 ELSE rt1.c2 END)) LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) BETWEEN (x'') AND ((t0.c2 IN ()))) WHERE ((((CASE WHEN t0.c1 THEN rt1.c2 END))<((CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c1 THEN rt1.c2 END))<((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND(-1731153179)) FULL OUTER JOIN t0 ON ((((((rt1.c2)+('419877453')))OR(((rt0.c1) ISNULL))))AND(CASE WHEN t0.c1 THEN rt0.c1 ELSE rt1.c2 END)) LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) BETWEEN (x'') AND ((t0.c2 IN ()))));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (t0.c1) AND (TYPEOF(vt0.c0)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c2) AND (t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0))<=((rt1.c0))) WHEN (((t0.c0, rt1.c2, vt0.c0))<=((rt1.c0, rt1.c2, rt1.c2))) THEN ((vt0.c0) NOT NULL) WHEN CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN t0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (t0.c1) AND (TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c2) AND (t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0))<=((rt1.c0))) WHEN (((t0.c0, rt1.c2, vt0.c0))<=((rt1.c0, rt1.c2, rt1.c2))) THEN ((vt0.c0) NOT NULL) WHEN CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN t0.c0 END ASC);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (t0.c1) AND (TYPEOF(vt0.c0)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c2) AND (t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0))<=((rt1.c0))) WHEN (((t0.c0, rt1.c2, vt0.c0))<=((rt1.c0, rt1.c2, rt1.c2))) THEN ((vt0.c0) NOT NULL) WHEN CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN t0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (t0.c1) AND (TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c2) AND (t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0))<=((rt1.c0))) WHEN (((t0.c0, rt1.c2, vt0.c0))<=((rt1.c0, rt1.c2, rt1.c2))) THEN ((vt0.c0) NOT NULL) WHEN CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN t0.c0 END ASC);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (t0.c1) AND (TYPEOF(vt0.c0)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c2) AND (t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0))<=((rt1.c0))) WHEN (((t0.c0, rt1.c2, vt0.c0))<=((rt1.c0, rt1.c2, rt1.c2))) THEN ((vt0.c0) NOT NULL) WHEN CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN t0.c0 END ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON '1454123118' COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL) WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)||(json_valid(rt1.c2)))) ORDER BY (((CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c0 END, PRINTF('TRUE', rt0.c0, rt1.c0), CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END, ((t0.c0) NOT BETWEEN ('') AND (rt1.c2)), COALESCE(rt1.c2, t0.c2, t0.c0, t0.c2)))!=((((rt0.c1)OR(rt0.c1)), 0Xac6533e, ((rt1.c1) NOT BETWEEN (t0.c2) AND (t0.c0)), (NOT (t0.c1)), json(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)||(json_valid(rt1.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON '1454123118' COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL) ORDER BY (((CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c0 END, PRINTF('TRUE', rt0.c0, rt1.c0), CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END, ((t0.c0) NOT BETWEEN ('') AND (rt1.c2)), COALESCE(rt1.c2, t0.c2, t0.c0, t0.c2)))!=((((rt0.c1)OR(rt0.c1)), 0xac6533e, ((rt1.c1) NOT BETWEEN (t0.c2) AND (t0.c0)), (NOT (t0.c1)), json(rt0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON '1454123118' COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL) WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)||(json_valid(rt1.c2)))) ORDER BY (((CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c0 END, PRINTF('TRUE', rt0.c0, rt1.c0), CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END, ((t0.c0) NOT BETWEEN ('') AND (rt1.c2)), COALESCE(rt1.c2, t0.c2, t0.c0, t0.c2)))!=((((rt0.c1)OR(rt0.c1)), 0Xac6533e, ((rt1.c1) NOT BETWEEN (t0.c2) AND (t0.c0)), (NOT (t0.c1)), json(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)||(json_valid(rt1.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON '1454123118' COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL) ORDER BY (((CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c0 END, PRINTF('TRUE', rt0.c0, rt1.c0), CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END, ((t0.c0) NOT BETWEEN ('') AND (rt1.c2)), COALESCE(rt1.c2, t0.c2, t0.c0, t0.c2)))!=((((rt0.c1)OR(rt0.c1)), 0xac6533e, ((rt1.c1) NOT BETWEEN (t0.c2) AND (t0.c0)), (NOT (t0.c1)), json(rt0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON '1454123118' COLLATE NOCASE LEFT OUTER JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL) WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN t0.c2 WHEN t0.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)||(json_valid(rt1.c2)))) ORDER BY (((CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c0 END, PRINTF('TRUE', rt0.c0, rt1.c0), CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END, ((t0.c0) NOT BETWEEN ('') AND (rt1.c2)), COALESCE(rt1.c2, t0.c2, t0.c0, t0.c2)))!=((((rt0.c1)OR(rt0.c1)), 0Xac6533e, ((rt1.c1) NOT BETWEEN (t0.c2) AND (t0.c0)), (NOT (t0.c1)), json(rt0.c2))));
SELECT * FROM rt0, rt1 WHERE (((LIKELIHOOD(rt1.c0, 0.855454114224661)) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (rt0.c0))) ORDER BY (~ (((rt1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt1.c0, 0.855454114224661)) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (rt0.c0))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (((rt1.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((LIKELIHOOD(rt1.c0, 0.855454114224661)) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (rt0.c0))) ORDER BY (~ (((rt1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt1.c0, 0.855454114224661)) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (rt0.c0))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (((rt1.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((LIKELIHOOD(rt1.c0, 0.855454114224661)) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (rt0.c0))) ORDER BY (~ (((rt1.c0) IS FALSE)))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c2)GLOB(rt0.c1)) END) ORDER BY (+ ((rt0.c1 IN (vt0.c0, rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c2)GLOB(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ ((rt0.c1 IN (vt0.c0, rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c2)GLOB(rt0.c1)) END) ORDER BY (+ ((rt0.c1 IN (vt0.c0, rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c2)GLOB(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ ((rt0.c1 IN (vt0.c0, rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c2)GLOB(rt0.c1)) END) ORDER BY (+ ((rt0.c1 IN (vt0.c0, rt0.c0))))  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c1)*(NULL)))) WHERE ((NOT ('419877453'))) ORDER BY 0Xffffffffff2702a9  NULLS LAST, (~ (CAST(rt0.c0 AS NUMERIC))), ((((rt0.c1)IS(1390831004)))/((- (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ('419877453'))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c1)*(NULL)))) ORDER BY 0xffffffffff2702a9  NULLS LAST, (~ (CAST(rt0.c0 AS NUMERIC))), ((((rt0.c1)IS(1390831004)))/((- (rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c1)*(NULL)))) WHERE ((NOT ('419877453'))) ORDER BY 0Xffffffffff2702a9  NULLS LAST, (~ (CAST(rt0.c0 AS NUMERIC))), ((((rt0.c1)IS(1390831004)))/((- (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ('419877453'))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c1)*(NULL)))) ORDER BY 0xffffffffff2702a9  NULLS LAST, (~ (CAST(rt0.c0 AS NUMERIC))), ((((rt0.c1)IS(1390831004)))/((- (rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c1)*(NULL)))) WHERE ((NOT ('419877453'))) ORDER BY 0Xffffffffff2702a9  NULLS LAST, (~ (CAST(rt0.c0 AS NUMERIC))), ((((rt0.c1)IS(1390831004)))/((- (rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM t0, vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c1) ISNULL))GLOB((((t0.c2))<=((rt1.c2))))) WHERE (((vt0.c0)||(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM t0, vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c1) ISNULL))GLOB((((t0.c2))<=((rt1.c2))))));
SELECT * FROM t0, vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c1) ISNULL))GLOB((((t0.c2))<=((rt1.c2))))) WHERE (((vt0.c0)||(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM t0, vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c1) ISNULL))GLOB((((t0.c2))<=((rt1.c2))))));
SELECT * FROM t0, vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c1) ISNULL))GLOB((((t0.c2))<=((rt1.c2))))) WHERE (((vt0.c0)||(CAST(rt1.c1 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY DATETIME(((vt0.c0)<<(vt0.c0)), (- (vt0.c0)), (~ (vt0.c0))) ASC, UNLIKELY('-1875851472');
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY DATETIME(((vt0.c0)<<(vt0.c0)), (- (vt0.c0)), (~ (vt0.c0))) ASC, UNLIKELY('-1875851472'));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY DATETIME(((vt0.c0)<<(vt0.c0)), (- (vt0.c0)), (~ (vt0.c0))) ASC, UNLIKELY('-1875851472');
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY DATETIME(((vt0.c0)<<(vt0.c0)), (- (vt0.c0)), (~ (vt0.c0))) ASC, UNLIKELY('-1875851472'));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY DATETIME(((vt0.c0)<<(vt0.c0)), (- (vt0.c0)), (~ (vt0.c0))) ASC, UNLIKELY('-1875851472');
SELECT * FROM vt0, rt1 INDEXED BY i38, t0, rt0 WHERE ((((x'')) NOT BETWEEN (((('0.13299392210410255') NOTNULL))) AND ((((((vt0.c0)OR(rt1.c2)))OR(rt0.c2)))))) ORDER BY (TRIM(DISTINCT rt1.c2, rt1.c1) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN (((('0.13299392210410255') NOTNULL))) AND ((((((vt0.c0)OR(rt1.c2)))OR(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt1 INDEXED BY i38, t0, rt0 ORDER BY (TRIM(DISTINCT rt1.c2, rt1.c1) IN ()) DESC);
SELECT * FROM vt0, rt1 INDEXED BY i38, t0, rt0 WHERE ((((x'')) NOT BETWEEN (((('0.13299392210410255') NOTNULL))) AND ((((((vt0.c0)OR(rt1.c2)))OR(rt0.c2)))))) ORDER BY (TRIM(DISTINCT rt1.c2, rt1.c1) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN (((('0.13299392210410255') NOTNULL))) AND ((((((vt0.c0)OR(rt1.c2)))OR(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt1 INDEXED BY i38, t0, rt0 ORDER BY (TRIM(DISTINCT rt1.c2, rt1.c1) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON rtreenode(rt1.c0 COLLATE RTRIM, ((rt1.c0)<(rt1.c2))) LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) RIGHT OUTER JOIN rt0 ON ((((t0.c2)<(vt0.c0))) NOT BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)) WHERE ('1175988622');
SELECT SUM(count) FROM (SELECT ALL (('1175988622') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON rtreenode(rt1.c0 COLLATE RTRIM, ((rt1.c0)<(rt1.c2))) LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) RIGHT OUTER JOIN rt0 ON ((((t0.c2)<(vt0.c0))) NOT BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON rtreenode(rt1.c0 COLLATE RTRIM, ((rt1.c0)<(rt1.c2))) LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) RIGHT OUTER JOIN rt0 ON ((((t0.c2)<(vt0.c0))) NOT BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)) WHERE ('1175988622');
SELECT SUM(count) FROM (SELECT ALL (('1175988622') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON rtreenode(rt1.c0 COLLATE RTRIM, ((rt1.c0)<(rt1.c2))) LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) RIGHT OUTER JOIN rt0 ON ((((t0.c2)<(vt0.c0))) NOT BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c2  WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN t0.c0 END)AND(((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(rt1.c2 COLLATE NOCASE)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))))OR(0X1ce03e68)) WHERE ((- (((t0.c1) NOT NULL)))) ORDER BY (((rt0.c1)IS NOT(t0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((- (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c2  WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN t0.c0 END)AND(((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(rt1.c2 COLLATE NOCASE)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))))OR(0X1ce03e68)) ORDER BY (((rt0.c1)IS NOT(t0.c1)) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c2  WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN t0.c0 END)AND(((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(rt1.c2 COLLATE NOCASE)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))))OR(0X1ce03e68)) WHERE ((- (((t0.c1) NOT NULL)))) ORDER BY (((rt0.c1)IS NOT(t0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((- (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c2  WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN t0.c0 END)AND(((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(rt1.c2 COLLATE NOCASE)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))))OR(0X1ce03e68)) ORDER BY (((rt0.c1)IS NOT(t0.c1)) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c2  WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN x'' WHEN rt1.c1 THEN t0.c0 END)AND(((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(rt1.c2 COLLATE NOCASE)))AND((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))))OR(0X1ce03e68)) WHERE ((- (((t0.c1) NOT NULL)))) ORDER BY (((rt0.c1)IS NOT(t0.c1)) IN ()) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN ((rt0.c1)-(rt0.c0)) THEN ((rt0.c0)==(rt0.c2)) END) ORDER BY (~ ((((rt0.c0))>((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c2))  WHEN ((rt0.c1)-(rt0.c0)) THEN ((rt0.c0)=(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c0))>((rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN ((rt0.c1)-(rt0.c0)) THEN ((rt0.c0)==(rt0.c2)) END) ORDER BY (~ ((((rt0.c0))>((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c2))  WHEN ((rt0.c1)-(rt0.c0)) THEN ((rt0.c0)=(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c0))>((rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN ((rt0.c1)-(rt0.c0)) THEN ((rt0.c0)==(rt0.c2)) END) ORDER BY (~ ((((rt0.c0))>((rt0.c1)))))  NULLS LAST;
SELECT * FROM rt1 WHERE ((('-960744940') BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (ABS(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((('-960744940') BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (ABS(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((('-960744940') BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (ABS(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((('-960744940') BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (ABS(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((('-960744940') BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (ABS(rt1.c1))));
SELECT * FROM rt0, rt1, vt0, t0 WHERE (json_insert(rt0.c0 COLLATE NOCASE, t0.c0 COLLATE BINARY, ((rt1.c1) BETWEEN (rt0.c2) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((json_insert(rt0.c0 COLLATE NOCASE, t0.c0 COLLATE BINARY, ((rt1.c1) BETWEEN (rt0.c2) AND (t0.c0)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT * FROM rt0, rt1, vt0, t0 WHERE (json_insert(rt0.c0 COLLATE NOCASE, t0.c0 COLLATE BINARY, ((rt1.c1) BETWEEN (rt0.c2) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((json_insert(rt0.c0 COLLATE NOCASE, t0.c0 COLLATE BINARY, ((rt1.c1) BETWEEN (rt0.c2) AND (t0.c0)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT ALL * FROM t0, rt1, vt0 WHERE (CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((t0.c2) NOT BETWEEN ('827090375') AND (rt1.c2)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c0)) THEN ('TRUE' IN ()) WHEN t0.c1 THEN (t0.c1 IN ()) ELSE ((t0.c2)GLOB(t0.c0)) END) ORDER BY (((t0.c1) NOT NULL) IN (((t0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((t0.c2) NOT BETWEEN ('827090375') AND (rt1.c2)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c0)) THEN ('TRUE' IN ()) WHEN t0.c1 THEN (t0.c1 IN ()) ELSE ((t0.c2)GLOB(t0.c0)) END) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((t0.c1) NOT NULL) IN (((t0.c1) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM t0, rt1, vt0 WHERE (CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((t0.c2) NOT BETWEEN ('827090375') AND (rt1.c2)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c0)) THEN ('TRUE' IN ()) WHEN t0.c1 THEN (t0.c1 IN ()) ELSE ((t0.c2)GLOB(t0.c0)) END) ORDER BY (((t0.c1) NOT NULL) IN (((t0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((t0.c2) NOT BETWEEN ('827090375') AND (rt1.c2)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c0)) THEN ('TRUE' IN ()) WHEN t0.c1 THEN (t0.c1 IN ()) ELSE ((t0.c2)GLOB(t0.c0)) END) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((t0.c1) NOT NULL) IN (((t0.c1) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM t0, rt1, vt0 WHERE (CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN ((t0.c2) NOT BETWEEN ('827090375') AND (rt1.c2)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c0)) THEN ('TRUE' IN ()) WHEN t0.c1 THEN (t0.c1 IN ()) ELSE ((t0.c2)GLOB(t0.c0)) END) ORDER BY (((t0.c1) NOT NULL) IN (((t0.c1) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0 NOT INDEXED, rt1);
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0 NOT INDEXED, rt1);
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT NULL) IN ())) ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT NULL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT NULL) IN ())) ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT NULL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT NULL) IN ())) ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((~ (rt1.c1))) BETWEEN ((('0.9608200704064137') NOTNULL)) AND ((- (NULL)))) LEFT OUTER JOIN t0 ON NULL INNER JOIN vt0 ON (((NOT (t0.c1)))|(((t0.c1)<>(0X2cda022)))) WHERE (((t0.c0 COLLATE RTRIM)<(rt0.c1))) ORDER BY (~ (((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(rt0.c2)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)<(rt0.c1))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((~ (rt1.c1))) BETWEEN ((('0.9608200704064137') NOTNULL)) AND ((- (NULL)))) LEFT OUTER JOIN t0 ON NULL INNER JOIN vt0 ON (((NOT (t0.c1)))|(((t0.c1)<>(0x2cda022)))) ORDER BY (~ (((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(rt0.c2)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((~ (rt1.c1))) BETWEEN ((('0.9608200704064137') NOTNULL)) AND ((- (NULL)))) LEFT OUTER JOIN t0 ON NULL INNER JOIN vt0 ON (((NOT (t0.c1)))|(((t0.c1)<>(0X2cda022)))) WHERE (((t0.c0 COLLATE RTRIM)<(rt0.c1))) ORDER BY (~ (((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(rt0.c2)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)<(rt0.c1))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((~ (rt1.c1))) BETWEEN ((('0.9608200704064137') NOTNULL)) AND ((- (NULL)))) LEFT OUTER JOIN t0 ON NULL INNER JOIN vt0 ON (((NOT (t0.c1)))|(((t0.c1)<>(0x2cda022)))) ORDER BY (~ (((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(rt0.c2)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((~ (rt1.c1))) BETWEEN ((('0.9608200704064137') NOTNULL)) AND ((- (NULL)))) LEFT OUTER JOIN t0 ON NULL INNER JOIN vt0 ON (((NOT (t0.c1)))|(((t0.c1)<>(0X2cda022)))) WHERE (((t0.c0 COLLATE RTRIM)<(rt0.c1))) ORDER BY (~ (((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(rt0.c2)))OR(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 INDEXED BY i38 WHERE (x'') ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN ((~ (t0.c1))) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt1 INDEXED BY i38 ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN ((~ (t0.c1))) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))));
SELECT ALL * FROM t0, rt1 INDEXED BY i38 WHERE (x'') ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN ((~ (t0.c1))) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt1 INDEXED BY i38 ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN ((~ (t0.c1))) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))));
SELECT ALL * FROM t0, rt0 WHERE (TYPEOF(((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c0)))) ORDER BY (((t0.c1) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1) ISNULL) IN ()) ASC);
SELECT ALL * FROM t0, rt0 WHERE (TYPEOF(((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c0)))) ORDER BY (((t0.c1) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1) ISNULL) IN ()) ASC);
SELECT ALL * FROM t0, rt0 WHERE (TYPEOF(((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c0)))) ORDER BY (((t0.c1) ISNULL) IN ()) ASC;
SELECT ALL * FROM rt0, rt1, t0 WHERE (((x'')>>(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((x'')>>(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((x'')>>(t0.c1 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0)))) AND ((CAST(vt0.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0)))) AND ((CAST(vt0.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0)))) AND ((CAST(vt0.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0)))) AND ((CAST(vt0.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0)))) AND ((CAST(vt0.c0 AS REAL), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC);
SELECT ALL * FROM rt1, rt0 WHERE (((~ (rt0.c1)) IN ())) ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))OR(rt0.c2))) NOTNULL) DESC  NULLS LAST, (+ (((rt1.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))OR(rt0.c2))) NOTNULL) DESC  NULLS LAST, (+ (((rt1.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((~ (rt0.c1)) IN ())) ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))OR(rt0.c2))) NOTNULL) DESC  NULLS LAST, (+ (((rt1.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))OR(rt0.c2))) NOTNULL) DESC  NULLS LAST, (+ (((rt1.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((~ (rt0.c1)) IN ())) ORDER BY ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))OR(rt0.c2))) NOTNULL) DESC  NULLS LAST, (+ (((rt1.c0) IS FALSE)))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) IS FALSE)) ORDER BY CASE WHEN NULL THEN ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN rt1.c0 WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c1)==(rt1.c2)) END  NULLS LAST, ((((rt1.c2)||(rt1.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN NULL THEN ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN rt1.c0 WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c1)=(rt1.c2)) END  NULLS LAST, ((((rt1.c2)||(rt1.c0))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) IS FALSE)) ORDER BY CASE WHEN NULL THEN ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN rt1.c0 WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c1)==(rt1.c2)) END  NULLS LAST, ((((rt1.c2)||(rt1.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN NULL THEN ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN rt1.c0 WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c1)=(rt1.c2)) END  NULLS LAST, ((((rt1.c2)||(rt1.c0))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) IS FALSE)) ORDER BY CASE WHEN NULL THEN ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)) WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN rt1.c0 WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c1)==(rt1.c2)) END  NULLS LAST, ((((rt1.c2)||(rt1.c0))) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0)||(CAST(rt0.c0 AS TEXT)))) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)||(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0)||(CAST(rt0.c0 AS TEXT)))) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)||(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0)||(CAST(rt0.c0 AS TEXT)))) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0, t0, rt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt1 CROSS JOIN vt0 ON CAST(((((t0.c0)OR(rt1.c1)))OR(rt1.c0)) AS TEXT) WHERE (((((((((((vt0.c0)AND(rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))))OR(CAST(rt1.c0 AS INTEGER))))OR(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 ELSE t0.c1 END)))AND(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))))OR(CAST(rt1.c0 AS INTEGER))))OR(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 ELSE t0.c1 END)))AND(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt0 ON CAST(((((t0.c0)OR(rt1.c1)))OR(rt1.c0)) AS TEXT));
SELECT COUNT(*) FROM t0, rt1 CROSS JOIN vt0 ON CAST(((((t0.c0)OR(rt1.c1)))OR(rt1.c0)) AS TEXT) WHERE (((((((((((vt0.c0)AND(rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))))OR(CAST(rt1.c0 AS INTEGER))))OR(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 ELSE t0.c1 END)))AND(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))))OR(CAST(rt1.c0 AS INTEGER))))OR(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 ELSE t0.c1 END)))AND(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt0 ON CAST(((((t0.c0)OR(rt1.c1)))OR(rt1.c0)) AS TEXT));
SELECT COUNT(*) FROM t0, rt1 CROSS JOIN vt0 ON CAST(((((t0.c0)OR(rt1.c1)))OR(rt1.c0)) AS TEXT) WHERE (((((((((((vt0.c0)AND(rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))))OR(CAST(rt1.c0 AS INTEGER))))OR(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN t0.c2 WHEN t0.c1 THEN rt1.c2 ELSE t0.c1 END)))AND(rt1.c1 COLLATE BINARY)));
SELECT ALL * FROM rt1, t0 WHERE (CAST(0.8775568603918836 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.8775568603918836 AS BLOB)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CAST(0.8775568603918836 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.8775568603918836 AS BLOB)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CAST(0.8775568603918836 AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (SUBSTR(((rt0.c0)>=(t0.c1)), ((rt1.c2)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt0.c0)>=(t0.c1)), ((rt1.c2)>(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (SUBSTR(((rt0.c0)>=(t0.c1)), ((rt1.c2)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt0.c0)>=(t0.c1)), ((rt1.c2)>(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (SUBSTR(((rt0.c0)>=(t0.c1)), ((rt1.c2)>(rt0.c1))));
SELECT * FROM t0, rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (NOT ('1610550355')) WHERE ((~ ((rt0.c0 IN ())))) ORDER BY (NOT (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (NOT ('1610550355')) ORDER BY (NOT (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (NOT ('1610550355')) WHERE ((~ ((rt0.c0 IN ())))) ORDER BY (NOT (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (NOT ('1610550355')) ORDER BY (NOT (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (NOT ('1610550355')) WHERE ((~ ((rt0.c0 IN ())))) ORDER BY (NOT (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 NOT INDEXED WHERE ((- (((((t0.c2)AND(1.43067105E8)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((t0.c2)AND(1.43067105E8)))OR(t0.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 NOT INDEXED WHERE ((- (((((t0.c2)AND(1.43067105E8)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((t0.c2)AND(1.43067105E8)))OR(t0.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 NOT INDEXED WHERE ((- (((((t0.c2)AND(1.43067105E8)))OR(t0.c0)))));
SELECT ALL * FROM t0 WHERE (CAST((NOT ('-7022391')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT ('-7022391')) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((NOT ('-7022391')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT ('-7022391')) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((NOT ('-7022391')) AS INTEGER));
SELECT ALL * FROM rt1 WHERE ((('.J') NOT BETWEEN ((((rt1.c1, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c1)))) AND (TRIM(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT (((('.J') NOT BETWEEN ((((rt1.c1, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c1)))) AND (TRIM(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((('.J') NOT BETWEEN ((((rt1.c1, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c1)))) AND (TRIM(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT (((('.J') NOT BETWEEN ((((rt1.c1, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c1)))) AND (TRIM(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((('.J') NOT BETWEEN ((((rt1.c1, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, rt1.c2, rt1.c1)))) AND (TRIM(DISTINCT rt1.c0))));
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1)%(rt0.c0)))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) NOT NULL)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (0.473187945584735 COLLATE BINARY))) ORDER BY '756225044' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT NULL)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (0.473187945584735 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY '756225044' COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) NOT NULL)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (0.473187945584735 COLLATE BINARY))) ORDER BY '756225044' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT NULL)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (0.473187945584735 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY '756225044' COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) NOT NULL)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (0.473187945584735 COLLATE BINARY))) ORDER BY '756225044' COLLATE BINARY;
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (vt0.c0) ORDER BY ((((rt0.c0)IS(rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, rt1, vt0, rt0 ORDER BY ((((rt0.c0)IS(rt0.c2))) NOTNULL));
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (vt0.c0) ORDER BY ((((rt0.c0)IS(rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, rt1, vt0, rt0 ORDER BY ((((rt0.c0)IS(rt0.c2))) NOTNULL));
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (vt0.c0) ORDER BY ((((rt0.c0)IS(rt0.c2))) NOTNULL);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2 IN (rt1.c0, t0.c2)))<=(((rt1.c1) IS TRUE))) WHERE (((((x'2159')IS(t0.c0))) NOT BETWEEN (t0.c2) AND (((rt1.c2)+(t0.c1))))) ORDER BY (~ ((rt1.c2 IN (t0.c1, t0.c1))))  NULLS LAST, (((rt1.c1 IN ()))>((((rt1.c0)) BETWEEN ((1467353949)) AND ((rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'2159')IS(t0.c0))) NOT BETWEEN (t0.c2) AND (((rt1.c2)+(t0.c1))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2 IN (rt1.c0, t0.c2)))<=(((rt1.c1) IS TRUE))) ORDER BY (~ ((rt1.c2 IN (t0.c1, t0.c1))))  NULLS LAST, (((rt1.c1 IN ()))>((((rt1.c0)) BETWEEN ((1467353949)) AND ((rt1.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2 IN (rt1.c0, t0.c2)))<=(((rt1.c1) IS TRUE))) WHERE (((((x'2159')IS(t0.c0))) NOT BETWEEN (t0.c2) AND (((rt1.c2)+(t0.c1))))) ORDER BY (~ ((rt1.c2 IN (t0.c1, t0.c1))))  NULLS LAST, (((rt1.c1 IN ()))>((((rt1.c0)) BETWEEN ((1467353949)) AND ((rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'2159')IS(t0.c0))) NOT BETWEEN (t0.c2) AND (((rt1.c2)+(t0.c1))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2 IN (rt1.c0, t0.c2)))<=(((rt1.c1) IS TRUE))) ORDER BY (~ ((rt1.c2 IN (t0.c1, t0.c1))))  NULLS LAST, (((rt1.c1 IN ()))>((((rt1.c0)) BETWEEN ((1467353949)) AND ((rt1.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2 IN (rt1.c0, t0.c2)))<=(((rt1.c1) IS TRUE))) WHERE (((((x'2159')IS(t0.c0))) NOT BETWEEN (t0.c2) AND (((rt1.c2)+(t0.c1))))) ORDER BY (~ ((rt1.c2 IN (t0.c1, t0.c1))))  NULLS LAST, (((rt1.c1 IN ()))>((((rt1.c0)) BETWEEN ((1467353949)) AND ((rt1.c2)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))>=((CAST(rt1.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))>=((CAST(rt1.c1 AS BLOB))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))>=((CAST(rt1.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))>=((CAST(rt1.c1 AS BLOB))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))>=((CAST(rt1.c1 AS BLOB)))));
SELECT * FROM rt0 WHERE (((json_remove(rt0.c0, rt0.c1)) NOTNULL)) ORDER BY (((rt0.c0 IN ())) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_remove(rt0.c0, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((json_remove(rt0.c0, rt0.c1)) NOTNULL)) ORDER BY (((rt0.c0 IN ())) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_remove(rt0.c0, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('6j');
SELECT SUM(count) FROM (SELECT ALL (('6j') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('6j');
SELECT SUM(count) FROM (SELECT ALL (('6j') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('6j');
SELECT ALL * FROM rt0, t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (IFNULL(vt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (IFNULL(vt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (IFNULL(vt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (IFNULL(vt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (IFNULL(vt0.c0, rt0.c0))));
SELECT * FROM rt1 WHERE ('95640817');
SELECT SUM(count) FROM (SELECT ALL (('95640817') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('95640817');
SELECT SUM(count) FROM (SELECT ALL (('95640817') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('95640817');
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2 IN (vt0.c0)))IS(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (vt0.c0)))IS(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2 IN (vt0.c0)))IS(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (vt0.c0)))IS(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2 IN (vt0.c0)))IS(rt1.c2 COLLATE BINARY)));
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (NOT (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))AND(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))AND(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (NOT (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))AND(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))AND(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (NOT (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))AND(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)>=(CASE rt1.c2  WHEN 0.5987283773909258 THEN rt0.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END)) LEFT OUTER JOIN rt1 ON 0.8735855513361203 WHERE (((MIN(t0.c2, rt0.c1))IS(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((MIN(t0.c2, rt0.c1))IS(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)>=(CASE rt1.c2  WHEN 0.5987283773909258 THEN rt0.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END)) LEFT OUTER JOIN rt1 ON 0.8735855513361203);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)>=(CASE rt1.c2  WHEN 0.5987283773909258 THEN rt0.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END)) LEFT OUTER JOIN rt1 ON 0.8735855513361203 WHERE (((MIN(t0.c2, rt0.c1))IS(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((MIN(t0.c2, rt0.c1))IS(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)>=(CASE rt1.c2  WHEN 0.5987283773909258 THEN rt0.c1 WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END)) LEFT OUTER JOIN rt1 ON 0.8735855513361203);
SELECT * FROM vt0, rt0, rt1, t0 WHERE (LIKELY(((t0.c1)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c1)>>(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, rt1, t0);
SELECT * FROM vt0, rt0, rt1, t0 WHERE (LIKELY(((t0.c1)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c1)>>(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, rt1, t0);
SELECT * FROM vt0, rt0, rt1, t0 WHERE (LIKELY(((t0.c1)>>(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE ((~ (CAST(rt0.c2 AS BLOB)))) ORDER BY (('-2078605688') IS FALSE) ASC  NULLS LAST, CASE ((rt0.c1) IS FALSE)  WHEN PRINTF(rt0.c1) THEN '-1164218945' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (('-2078605688') IS FALSE) ASC  NULLS LAST, CASE ((rt0.c1) IS FALSE)  WHEN PRINTF(rt0.c1) THEN '-1164218945' END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (CAST(rt0.c2 AS BLOB)))) ORDER BY (('-2078605688') IS FALSE) ASC  NULLS LAST, CASE ((rt0.c1) IS FALSE)  WHEN PRINTF(rt0.c1) THEN '-1164218945' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (('-2078605688') IS FALSE) ASC  NULLS LAST, CASE ((rt0.c1) IS FALSE)  WHEN PRINTF(rt0.c1) THEN '-1164218945' END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (CAST(rt0.c2 AS BLOB)))) ORDER BY (('-2078605688') IS FALSE) ASC  NULLS LAST, CASE ((rt0.c1) IS FALSE)  WHEN PRINTF(rt0.c1) THEN '-1164218945' END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, rt1, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, rt1, vt0);
SELECT COUNT(*) FROM rt0, t0, rt1, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, rt1, vt0);
SELECT COUNT(*) FROM rt0, t0, rt1, vt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON COALESCE(CASE WHEN rt1.c2 THEN t0.c1 END, ((rt1.c1) BETWEEN (t0.c1) AND (rt0.c1))) CROSS JOIN rt1 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN (rt0.c2))) AND (((rt0.c1)IS(rt0.c2)))) WHERE (((((rt0.c1)AND(t0.c2)))AND(rt1.c0)) COLLATE NOCASE) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(t0.c2)))AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON COALESCE(CASE WHEN rt1.c2 THEN t0.c1 END, ((rt1.c1) BETWEEN (t0.c1) AND (rt0.c1))) CROSS JOIN rt1 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN (rt0.c2))) AND (((rt0.c1)IS(rt0.c2)))) ORDER BY t0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON COALESCE(CASE WHEN rt1.c2 THEN t0.c1 END, ((rt1.c1) BETWEEN (t0.c1) AND (rt0.c1))) CROSS JOIN rt1 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN (rt0.c2))) AND (((rt0.c1)IS(rt0.c2)))) WHERE (((((rt0.c1)AND(t0.c2)))AND(rt1.c0)) COLLATE NOCASE) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(t0.c2)))AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON COALESCE(CASE WHEN rt1.c2 THEN t0.c1 END, ((rt1.c1) BETWEEN (t0.c1) AND (rt0.c1))) CROSS JOIN rt1 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((t0.c0 IN (rt0.c2))) AND (((rt0.c1)IS(rt0.c2)))) ORDER BY t0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, vt0 WHERE ((((rt0.c0))=((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))=((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, rt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, vt0 WHERE ((((rt0.c0))=((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))=((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, rt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, vt0 WHERE ((((rt0.c0))=((rt0.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM) IS FALSE) WHERE (((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM) IS FALSE));
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM) IS FALSE) WHERE (((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM) IS FALSE));
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM) IS FALSE) WHERE (((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0, t0, rt0, rt1 WHERE ((((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (('1467353949', t0.c2, rt0.c1)) AND ((rt1.c2, rt0.c1, vt0.c0)))) IS TRUE)) ORDER BY (+ (((t0.c0)!=(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (('1467353949', t0.c2, rt0.c1)) AND ((rt1.c2, rt0.c1, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt0, rt1 ORDER BY (+ (((t0.c0)<>(t0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0, rt1 WHERE ((((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (('1467353949', t0.c2, rt0.c1)) AND ((rt1.c2, rt0.c1, vt0.c0)))) IS TRUE)) ORDER BY (+ (((t0.c0)!=(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (('1467353949', t0.c2, rt0.c1)) AND ((rt1.c2, rt0.c1, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt0, rt1 ORDER BY (+ (((t0.c0)<>(t0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0, rt1 WHERE ((((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (('1467353949', t0.c2, rt0.c1)) AND ((rt1.c2, rt0.c1, vt0.c0)))) IS TRUE)) ORDER BY (+ (((t0.c0)!=(t0.c2))))  NULLS LAST;
SELECT * FROM t0, rt1, vt0, rt0 WHERE ((((rt0.c2, t0.c0, '71314897')) NOT BETWEEN ((((rt0.c1)LIKE(vt0.c0)), rt1.c1 COLLATE BINARY, LTRIM(rt1.c2))) AND ((((-530221764)/(vt0.c0)), ((t0.c0)GLOB(t0.c0)), vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, t0.c0, '71314897')) NOT BETWEEN ((((rt0.c1)LIKE(vt0.c0)), rt1.c1 COLLATE BINARY, LTRIM(rt1.c2))) AND ((((-530221764)/(vt0.c0)), ((t0.c0)GLOB(t0.c0)), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt1, vt0, rt0);
SELECT * FROM t0, rt1, vt0, rt0 WHERE ((((rt0.c2, t0.c0, '71314897')) NOT BETWEEN ((((rt0.c1)LIKE(vt0.c0)), rt1.c1 COLLATE BINARY, LTRIM(rt1.c2))) AND ((((-530221764)/(vt0.c0)), ((t0.c0)GLOB(t0.c0)), vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, t0.c0, '71314897')) NOT BETWEEN ((((rt0.c1)LIKE(vt0.c0)), rt1.c1 COLLATE BINARY, LTRIM(rt1.c2))) AND ((((-530221764)/(vt0.c0)), ((t0.c0)GLOB(t0.c0)), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt1, vt0, rt0);
SELECT * FROM t0, rt1, vt0, rt0 WHERE ((((rt0.c2, t0.c0, '71314897')) NOT BETWEEN ((((rt0.c1)LIKE(vt0.c0)), rt1.c1 COLLATE BINARY, LTRIM(rt1.c2))) AND ((((-530221764)/(vt0.c0)), ((t0.c0)GLOB(t0.c0)), vt0.c0 COLLATE BINARY))));
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1 WHERE ((((rt1.c2) ISNULL) IN ())) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 END) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) ISNULL) IN ())) IS TRUE)  as count FROM rt0, t0, vt0, rt1 ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 END) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1 WHERE ((((rt1.c2) ISNULL) IN ())) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 END) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) ISNULL) IN ())) IS TRUE)  as count FROM rt0, t0, vt0, rt1 ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 END) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1 WHERE ((((rt1.c2) ISNULL) IN ())) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 END) IS FALSE) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (DATE((0.8848294855901019 IN (t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) ORDER BY ((x'3117' COLLATE RTRIM)>=((- (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE((0.8848294855901019 IN (t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ((x'3117' COLLATE RTRIM)>=((- (t0.c2)))) ASC);
SELECT * FROM t0 WHERE (DATE((0.8848294855901019 IN (t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) ORDER BY ((x'3117' COLLATE RTRIM)>=((- (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE((0.8848294855901019 IN (t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ((x'3117' COLLATE RTRIM)>=((- (t0.c2)))) ASC);
SELECT * FROM t0 WHERE (DATE((0.8848294855901019 IN (t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) ORDER BY ((x'3117' COLLATE RTRIM)>=((- (t0.c2)))) ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((0.8735855513361203)/((- ('UC\n匾v')))) WHERE (vt0.c0) ORDER BY CAST((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c2, rt1.c1, rt1.c0))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((0.8735855513361203)/((- ('UC\n匾v')))) ORDER BY CAST((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c2, rt1.c1, rt1.c0))) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((0.8735855513361203)/((- ('UC\n匾v')))) WHERE (vt0.c0) ORDER BY CAST((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c2, rt1.c1, rt1.c0))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((0.8735855513361203)/((- ('UC\n匾v')))) ORDER BY CAST((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c2, rt1.c1, rt1.c0))) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((0.8735855513361203)/((- ('UC\n匾v')))) WHERE (vt0.c0) ORDER BY CAST((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c2, rt1.c1, rt1.c0))) AS NUMERIC) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c2)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) END LEFT OUTER JOIN vt0 ON rt0.c1 CROSS JOIN rt1 ON CASE WHEN (rt1.c1 IN ()) THEN ((vt0.c0)OR(rt1.c2)) ELSE CASE t0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END END WHERE (rt0.c1) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c0)*(t0.c1)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c0 ELSE t0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c2)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) END LEFT OUTER JOIN vt0 ON rt0.c1 CROSS JOIN rt1 ON CASE WHEN (rt1.c1 IN ()) THEN ((vt0.c0)OR(rt1.c2)) ELSE CASE t0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END END ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c0)*(t0.c1)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c0 ELSE t0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c2)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) END LEFT OUTER JOIN vt0 ON rt0.c1 CROSS JOIN rt1 ON CASE WHEN (rt1.c1 IN ()) THEN ((vt0.c0)OR(rt1.c2)) ELSE CASE t0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END END WHERE (rt0.c1) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c0)*(t0.c1)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c0 ELSE t0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c2)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) END LEFT OUTER JOIN vt0 ON rt0.c1 CROSS JOIN rt1 ON CASE WHEN (rt1.c1 IN ()) THEN ((vt0.c0)OR(rt1.c2)) ELSE CASE t0.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END END ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c0)*(t0.c1)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c0 ELSE t0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c1))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c1))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c1)));
SELECT ALL * FROM vt0, t0 WHERE (((HEX(t0.c1))|(CASE vt0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) ORDER BY (((t0.c0, x'', vt0.c0)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) IS TRUE), (((vt0.c0, t0.c1, t0.c2))>((t0.c0, t0.c2, t0.c0))))) AND (((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((x'', t0.c2, t0.c0))), ((t0.c2) BETWEEN ('-218507549') AND (t0.c0)), CAST(t0.c2 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t0.c1))|(CASE vt0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0, x'', vt0.c0)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) IS TRUE), (((vt0.c0, t0.c1, t0.c2))>((t0.c0, t0.c2, t0.c0))))) AND (((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((x'', t0.c2, t0.c0))), ((t0.c2) BETWEEN ('-218507549') AND (t0.c0)), CAST(t0.c2 AS INTEGER)))) ASC);
SELECT ALL * FROM vt0, t0 WHERE (((HEX(t0.c1))|(CASE vt0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) ORDER BY (((t0.c0, x'', vt0.c0)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) IS TRUE), (((vt0.c0, t0.c1, t0.c2))>((t0.c0, t0.c2, t0.c0))))) AND (((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((x'', t0.c2, t0.c0))), ((t0.c2) BETWEEN ('-218507549') AND (t0.c0)), CAST(t0.c2 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t0.c1))|(CASE vt0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0, x'', vt0.c0)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) IS TRUE), (((vt0.c0, t0.c1, t0.c2))>((t0.c0, t0.c2, t0.c0))))) AND (((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((x'', t0.c2, t0.c0))), ((t0.c2) BETWEEN ('-218507549') AND (t0.c0)), CAST(t0.c2 AS INTEGER)))) ASC);
SELECT ALL * FROM vt0, t0 WHERE (((HEX(t0.c1))|(CASE vt0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) ORDER BY (((t0.c0, x'', vt0.c0)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) IS TRUE), (((vt0.c0, t0.c1, t0.c2))>((t0.c0, t0.c2, t0.c0))))) AND (((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((x'', t0.c2, t0.c0))), ((t0.c2) BETWEEN ('-218507549') AND (t0.c0)), CAST(t0.c2 AS INTEGER)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((CAST(rt1.c1 AS REAL), rt1.c1 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) AND (((((rt1.c0))>=((rt1.c2))), ((rt1.c0) BETWEEN (NULL) AND (rt1.c2)), ((rt1.c2)<(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((CAST(rt1.c1 AS REAL), rt1.c1 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) AND (((((rt1.c0))>=((rt1.c2))), ((rt1.c0) BETWEEN (NULL) AND (rt1.c2)), ((rt1.c2)<(rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((CAST(rt1.c1 AS REAL), rt1.c1 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) AND (((((rt1.c0))>=((rt1.c2))), ((rt1.c0) BETWEEN (NULL) AND (rt1.c2)), ((rt1.c2)<(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((CAST(rt1.c1 AS REAL), rt1.c1 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) AND (((((rt1.c0))>=((rt1.c2))), ((rt1.c0) BETWEEN (NULL) AND (rt1.c2)), ((rt1.c2)<(rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((CAST(rt1.c1 AS REAL), rt1.c1 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) AND (((((rt1.c0))>=((rt1.c2))), ((rt1.c0) BETWEEN (NULL) AND (rt1.c2)), ((rt1.c2)<(rt1.c2))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR(((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR(((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR(((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR(((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR(((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT COUNT(*) FROM t0 INDEXED BY i38 WHERE (((((t0.c2 IN ())))>((((((t0.c1)OR(t0.c1)))OR(t0.c1)))))) ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(t0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2 IN ())))>((((((t0.c1)OR(t0.c1)))OR(t0.c1)))))) IS TRUE)  as count FROM t0 INDEXED BY i38 ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(t0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 INDEXED BY i38 WHERE (((((t0.c2 IN ())))>((((((t0.c1)OR(t0.c1)))OR(t0.c1)))))) ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(t0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2 IN ())))>((((((t0.c1)OR(t0.c1)))OR(t0.c1)))))) IS TRUE)  as count FROM t0 INDEXED BY i38 ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(t0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 INDEXED BY i38 WHERE (((((t0.c2 IN ())))>((((((t0.c1)OR(t0.c1)))OR(t0.c1)))))) ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(t0.c2))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((0.9578803395833327)) AND ((rt0.c1)))) ISNULL) WHERE (0x5559cf7a);
SELECT SUM(count) FROM (SELECT ((0X5559cf7a) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((0.9578803395833327)) AND ((rt0.c1)))) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((0.9578803395833327)) AND ((rt0.c1)))) ISNULL) WHERE (0x5559cf7a);
SELECT SUM(count) FROM (SELECT ((0X5559cf7a) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((0.9578803395833327)) AND ((rt0.c1)))) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((0.9578803395833327)) AND ((rt0.c1)))) ISNULL) WHERE (0x5559cf7a);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t0.c0 AS BLOB) THEN 0xffffffffba9b6dbf ELSE x'' END WHERE (((((vt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (json_quote(rt0.c1)) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (json_quote(rt0.c1)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t0.c0 AS BLOB) THEN 0Xffffffffba9b6dbf ELSE x'' END);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t0.c0 AS BLOB) THEN 0xffffffffba9b6dbf ELSE x'' END WHERE (((((vt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (json_quote(rt0.c1)) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (json_quote(rt0.c1)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t0.c0 AS BLOB) THEN 0Xffffffffba9b6dbf ELSE x'' END);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(t0.c0 AS BLOB) THEN 0xffffffffba9b6dbf ELSE x'' END WHERE (((((vt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (json_quote(rt0.c1)) AND (CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE ((((rt1.c1, 0.0675982398196674, ((t0.c1)+(rt1.c2))))!=(((~ (t0.c1)), CAST(t0.c1 AS BLOB), rt1.c0)))) ORDER BY ((LIKELY(DISTINCT rt1.c0))>>((('0.6889012112042907')<<(0.6705081461425262)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, 0.0675982398196674, ((t0.c1)+(rt1.c2))))<>(((~ (t0.c1)), CAST(t0.c1 AS BLOB), rt1.c0)))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((LIKELY(DISTINCT rt1.c0))>>((('0.6889012112042907')<<(0.6705081461425262)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE ((((rt1.c1, 0.0675982398196674, ((t0.c1)+(rt1.c2))))!=(((~ (t0.c1)), CAST(t0.c1 AS BLOB), rt1.c0)))) ORDER BY ((LIKELY(DISTINCT rt1.c0))>>((('0.6889012112042907')<<(0.6705081461425262)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, 0.0675982398196674, ((t0.c1)+(rt1.c2))))<>(((~ (t0.c1)), CAST(t0.c1 AS BLOB), rt1.c0)))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((LIKELY(DISTINCT rt1.c0))>>((('0.6889012112042907')<<(0.6705081461425262)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE ((((rt1.c1, 0.0675982398196674, ((t0.c1)+(rt1.c2))))!=(((~ (t0.c1)), CAST(t0.c1 AS BLOB), rt1.c0)))) ORDER BY ((LIKELY(DISTINCT rt1.c0))>>((('0.6889012112042907')<<(0.6705081461425262)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((((x'' COLLATE BINARY)OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c1)-(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'' COLLATE BINARY)OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c1)-(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((x'' COLLATE BINARY)OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c1)-(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'' COLLATE BINARY)OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c1)-(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((x'' COLLATE BINARY)OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c1)-(t0.c1)))));
SELECT COUNT(*) FROM rt1, rt0 INDEXED BY i38 WHERE (((((rt1.c1)IS NOT(0.2516075518969123))) BETWEEN ((~ (rt0.c0))) AND (((-804059389)>>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)IS NOT(0.2516075518969123))) BETWEEN ((~ (rt0.c0))) AND (((-804059389)>>(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 INDEXED BY i38);
SELECT COUNT(*) FROM rt1, rt0 INDEXED BY i38 WHERE (((((rt1.c1)IS NOT(0.2516075518969123))) BETWEEN ((~ (rt0.c0))) AND (((-804059389)>>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)IS NOT(0.2516075518969123))) BETWEEN ((~ (rt0.c0))) AND (((-804059389)>>(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 INDEXED BY i38);
SELECT COUNT(*) FROM rt1 WHERE ((CASE rt1.c2  WHEN '1772181802' THEN rt1.c1 ELSE rt1.c0 END IN ())) ORDER BY ((COALESCE(rt1.c2, rt1.c0))=((rt1.c1 IN ()))), ((((rt1.c1)AND('0.13299392210410255')))OR(rt1.c1)) COLLATE RTRIM ASC  NULLS LAST, (((rt1.c1 IN ()))LIKE(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c2  WHEN '1772181802' THEN rt1.c1 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((COALESCE(rt1.c2, rt1.c0))==((rt1.c1 IN ()))), ((((rt1.c1)AND('0.13299392210410255')))OR(rt1.c1)) COLLATE RTRIM ASC  NULLS LAST, (((rt1.c1 IN ()))LIKE(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((CASE rt1.c2  WHEN '1772181802' THEN rt1.c1 ELSE rt1.c0 END IN ())) ORDER BY ((COALESCE(rt1.c2, rt1.c0))=((rt1.c1 IN ()))), ((((rt1.c1)AND('0.13299392210410255')))OR(rt1.c1)) COLLATE RTRIM ASC  NULLS LAST, (((rt1.c1 IN ()))LIKE(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c2  WHEN '1772181802' THEN rt1.c1 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((COALESCE(rt1.c2, rt1.c0))==((rt1.c1 IN ()))), ((((rt1.c1)AND('0.13299392210410255')))OR(rt1.c1)) COLLATE RTRIM ASC  NULLS LAST, (((rt1.c1 IN ()))LIKE(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((CASE rt1.c2  WHEN '1772181802' THEN rt1.c1 ELSE rt1.c0 END IN ())) ORDER BY ((COALESCE(rt1.c2, rt1.c0))=((rt1.c1 IN ()))), ((((rt1.c1)AND('0.13299392210410255')))OR(rt1.c1)) COLLATE RTRIM ASC  NULLS LAST, (((rt1.c1 IN ()))LIKE(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt0.c2 AS REAL))AND(LOWER(t0.c2)))) ORDER BY ((((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c2 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))AND(LOWER(t0.c2)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c2 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt0.c2 AS REAL))AND(LOWER(t0.c2)))) ORDER BY ((((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c2 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))AND(LOWER(t0.c2)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c2 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt0.c2 AS REAL))AND(LOWER(t0.c2)))) ORDER BY ((((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c2 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CAST(((((0X0)OR(vt0.c0)))OR(vt0.c0)) AS REAL) WHERE (CASE ((rt0.c1)/(rt0.c0))  WHEN ((t0.c0)<=(rt0.c0)) THEN IFNULL(t0.c1, rt1.c1) ELSE ((rt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)/(rt0.c0))  WHEN ((t0.c0)<=(rt0.c0)) THEN IFNULL(t0.c1, rt1.c1) ELSE ((rt1.c1) NOT NULL) END) IS TRUE)  as count FROM rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CAST(((((0x0)OR(vt0.c0)))OR(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CAST(((((0X0)OR(vt0.c0)))OR(vt0.c0)) AS REAL) WHERE (CASE ((rt0.c1)/(rt0.c0))  WHEN ((t0.c0)<=(rt0.c0)) THEN IFNULL(t0.c1, rt1.c1) ELSE ((rt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)/(rt0.c0))  WHEN ((t0.c0)<=(rt0.c0)) THEN IFNULL(t0.c1, rt1.c1) ELSE ((rt1.c1) NOT NULL) END) IS TRUE)  as count FROM rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CAST(((((0x0)OR(vt0.c0)))OR(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CAST(((((0X0)OR(vt0.c0)))OR(vt0.c0)) AS REAL) WHERE (CASE ((rt0.c1)/(rt0.c0))  WHEN ((t0.c0)<=(rt0.c0)) THEN IFNULL(t0.c1, rt1.c1) ELSE ((rt1.c1) NOT NULL) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0)+(vt0.c0))))>((((vt0.c0)<>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)+(vt0.c0))))>((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)+(vt0.c0))))>((((vt0.c0)<>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)+(vt0.c0))))>((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)+(vt0.c0))))>((((vt0.c0)<>(vt0.c0))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c0 WHEN '<_}' THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END))) WHERE ((- ('/⧲]C')));
SELECT SUM(count) FROM (SELECT ALL (((- ('/⧲]C'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c0 WHEN '<_}' THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c0 WHEN '<_}' THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END))) WHERE ((- ('/⧲]C')));
SELECT SUM(count) FROM (SELECT ALL (((- ('/⧲]C'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c0 WHEN '<_}' THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c0 WHEN '<_}' THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END))) WHERE ((- ('/⧲]C')));
SELECT ALL * FROM rt0 WHERE (((((((((CASE '-1875851472'  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c2 COLLATE RTRIM)))AND(TRIM(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c1)<=(rt0.c1)))))OR(((rt0.c0) BETWEEN ('0bXg{4') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE '-1875851472'  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c2 COLLATE RTRIM)))AND(TRIM(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c1)<=(rt0.c1)))))OR(((rt0.c0) BETWEEN ('0bXg{4') AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CASE '-1875851472'  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c2 COLLATE RTRIM)))AND(TRIM(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c1)<=(rt0.c1)))))OR(((rt0.c0) BETWEEN ('0bXg{4') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE '-1875851472'  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c2 COLLATE RTRIM)))AND(TRIM(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c1)<=(rt0.c1)))))OR(((rt0.c0) BETWEEN ('0bXg{4') AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CASE '-1875851472'  WHEN rt0.c2 THEN rt0.c0 END)OR(rt0.c2 COLLATE RTRIM)))AND(TRIM(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c1)<=(rt0.c1)))))OR(((rt0.c0) BETWEEN ('0bXg{4') AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON HEX((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON HEX((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON HEX((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON HEX((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON HEX((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) WHERE ('');
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (('-426046609')>>(CAST(rt1.c1 AS BLOB))) WHERE ((((((x'', rt1.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c2, vt0.c0))))<<(SQLITE_VERSION()))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS(vt0.c0)) WHEN '-530221764' THEN rt1.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(rt1.c2 AS TEXT) WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c0)) WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((rt1.c1) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT (((((((x'', rt1.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c2, vt0.c0))))<<(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (('-426046609')>>(CAST(rt1.c1 AS BLOB))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS(vt0.c0)) WHEN '-530221764' THEN rt1.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(rt1.c2 AS TEXT) WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c0)) WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((rt1.c1) IS FALSE) END DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (('-426046609')>>(CAST(rt1.c1 AS BLOB))) WHERE ((((((x'', rt1.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c2, vt0.c0))))<<(SQLITE_VERSION()))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS(vt0.c0)) WHEN '-530221764' THEN rt1.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(rt1.c2 AS TEXT) WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c0)) WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((rt1.c1) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT (((((((x'', rt1.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c2, vt0.c0))))<<(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (('-426046609')>>(CAST(rt1.c1 AS BLOB))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS(vt0.c0)) WHEN '-530221764' THEN rt1.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(rt1.c2 AS TEXT) WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c0)) WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((rt1.c1) IS FALSE) END DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (('-426046609')>>(CAST(rt1.c1 AS BLOB))) WHERE ((((((x'', rt1.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c2, vt0.c0))))<<(SQLITE_VERSION()))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS(vt0.c0)) WHEN '-530221764' THEN rt1.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(rt1.c2 AS TEXT) WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c0)) WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((rt1.c1) IS FALSE) END DESC;
SELECT * FROM t0, rt1, rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c0)OR(-2078605688)))OR(t0.c0)))AND(rt0.c0)))OR(-1337833556)) THEN ((((((((x'')OR(rt0.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(x'a482')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c0)OR(-2078605688)))OR(t0.c0)))AND(rt0.c0)))OR(-1337833556)) THEN ((((((((x'')OR(rt0.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(x'a482')) END) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT * FROM t0, rt1, rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c0)OR(-2078605688)))OR(t0.c0)))AND(rt0.c0)))OR(-1337833556)) THEN ((((((((x'')OR(rt0.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(x'a482')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c0)OR(-2078605688)))OR(t0.c0)))AND(rt0.c0)))OR(-1337833556)) THEN ((((((((x'')OR(rt0.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(x'a482')) END) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT * FROM t0, rt1, rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c0)OR(-2078605688)))OR(t0.c0)))AND(rt0.c0)))OR(-1337833556)) THEN ((((((((x'')OR(rt0.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(x'a482')) END);
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c1)))) AND ((LIKELY(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c1)))) AND ((LIKELY(t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c1)))) AND ((LIKELY(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c1)))) AND ((LIKELY(t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c1)))) AND ((LIKELY(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((NOT ((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((NOT ((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((NOT ((+ (rt1.c1)))));
SELECT ALL * FROM rt1 NOT INDEXED, rt0 WHERE (LENGTH(CAST(rt1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LENGTH(CAST(rt1.c2 AS BLOB))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1 NOT INDEXED, rt0 WHERE (LENGTH(CAST(rt1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LENGTH(CAST(rt1.c2 AS BLOB))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1 NOT INDEXED, rt0 WHERE (LENGTH(CAST(rt1.c2 AS BLOB)));
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE ((((((rt1.c2) NOTNULL), CAST(rt1.c2 AS BLOB), ((((((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c2)))AND(t0.c0)))OR(rt1.c0)))OR(NULL)))AND(t0.c2))))==((CAST(8.27090375E8 AS BLOB), CASE WHEN rt1.c2 THEN rt1.c0 END, (('')LIKE(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) NOTNULL), CAST(rt1.c2 AS BLOB), ((((((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c2)))AND(t0.c0)))OR(rt1.c0)))OR(NULL)))AND(t0.c2))))==((CAST(8.27090375E8 AS BLOB), CASE WHEN rt1.c2 THEN rt1.c0 END, (('')LIKE(t0.c2)))))) IS TRUE)  as count FROM t0, rt1, vt0, rt0);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE ((((((rt1.c2) NOTNULL), CAST(rt1.c2 AS BLOB), ((((((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c2)))AND(t0.c0)))OR(rt1.c0)))OR(NULL)))AND(t0.c2))))==((CAST(8.27090375E8 AS BLOB), CASE WHEN rt1.c2 THEN rt1.c0 END, (('')LIKE(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) NOTNULL), CAST(rt1.c2 AS BLOB), ((((((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c2)))AND(t0.c0)))OR(rt1.c0)))OR(NULL)))AND(t0.c2))))==((CAST(8.27090375E8 AS BLOB), CASE WHEN rt1.c2 THEN rt1.c0 END, (('')LIKE(t0.c2)))))) IS TRUE)  as count FROM t0, rt1, vt0, rt0);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE ((((((rt1.c2) NOTNULL), CAST(rt1.c2 AS BLOB), ((((((((((((vt0.c0)AND(rt1.c2)))AND(rt0.c2)))AND(t0.c0)))OR(rt1.c0)))OR(NULL)))AND(t0.c2))))==((CAST(8.27090375E8 AS BLOB), CASE WHEN rt1.c2 THEN rt1.c0 END, (('')LIKE(t0.c2))))));
SELECT COUNT(*) FROM t0, vt0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))!=(CAST(rt1.c2 AS TEXT))) WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END IN ())) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM t0, vt0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))<>(CAST(rt1.c2 AS TEXT))) ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))!=(CAST(rt1.c2 AS TEXT))) WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END IN ())) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM t0, vt0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))<>(CAST(rt1.c2 AS TEXT))) ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c2 AS BLOB))!=(CAST(rt1.c2 AS TEXT))) WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END IN ())) ORDER BY rt0.c1  NULLS LAST;
SELECT * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)<<(vt0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) AND ((t0.c0 IN ()))) INNER JOIN vt0 ON ((((rt0.c1)/(NULL)))/((NOT (rt1.c0)))) WHERE (CASE CAST(rt1.c1 AS REAL)  WHEN ((rt1.c2) BETWEEN (rt0.c1) AND (NULL)) THEN ((rt0.c0)<>(rt1.c1)) WHEN ((((((((rt1.c0)OR('')))AND(rt1.c2)))OR(rt0.c1)))OR(vt0.c0)) THEN (~ (rt0.c2)) WHEN ((((rt1.c1)AND(rt0.c0)))OR(rt1.c2)) THEN ((t0.c1)<<(rt0.c0)) ELSE CAST(rt1.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS REAL)  WHEN ((rt1.c2) BETWEEN (rt0.c1) AND (NULL)) THEN ((rt0.c0)<>(rt1.c1)) WHEN ((((((((rt1.c0)OR('')))AND(rt1.c2)))OR(rt0.c1)))OR(vt0.c0)) THEN (~ (rt0.c2)) WHEN ((((rt1.c1)AND(rt0.c0)))OR(rt1.c2)) THEN ((t0.c1)<<(rt0.c0)) ELSE CAST(rt1.c0 AS REAL) END) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)<<(vt0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) AND ((t0.c0 IN ()))) INNER JOIN vt0 ON ((((rt0.c1)/(NULL)))/((NOT (rt1.c0)))));
SELECT * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)<<(vt0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) AND ((t0.c0 IN ()))) INNER JOIN vt0 ON ((((rt0.c1)/(NULL)))/((NOT (rt1.c0)))) WHERE (CASE CAST(rt1.c1 AS REAL)  WHEN ((rt1.c2) BETWEEN (rt0.c1) AND (NULL)) THEN ((rt0.c0)<>(rt1.c1)) WHEN ((((((((rt1.c0)OR('')))AND(rt1.c2)))OR(rt0.c1)))OR(vt0.c0)) THEN (~ (rt0.c2)) WHEN ((((rt1.c1)AND(rt0.c0)))OR(rt1.c2)) THEN ((t0.c1)<<(rt0.c0)) ELSE CAST(rt1.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS REAL)  WHEN ((rt1.c2) BETWEEN (rt0.c1) AND (NULL)) THEN ((rt0.c0)<>(rt1.c1)) WHEN ((((((((rt1.c0)OR('')))AND(rt1.c2)))OR(rt0.c1)))OR(vt0.c0)) THEN (~ (rt0.c2)) WHEN ((((rt1.c1)AND(rt0.c0)))OR(rt1.c2)) THEN ((t0.c1)<<(rt0.c0)) ELSE CAST(rt1.c0 AS REAL) END) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)<<(vt0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) AND ((t0.c0 IN ()))) INNER JOIN vt0 ON ((((rt0.c1)/(NULL)))/((NOT (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0, rt1 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, rt1 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, rt1 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 CROSS JOIN t0 ON CASE t0.c2 COLLATE BINARY  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE NOCASE WHEN ((251973094)>=(rt1.c1)) THEN (+ (rt1.c2)) WHEN TRIM('-1010038694') THEN CAST(rt1.c1 AS NUMERIC) ELSE ((vt0.c0)>>(t0.c0)) END FULL OUTER JOIN rt1 ON COALESCE(((((((((rt1.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c0)))AND(0.2658369933142293)), NULL COLLATE RTRIM, json_quote(rt1.c2), ((rt1.c0)<<(rt1.c0))) WHERE (((vt0.c0) NOTNULL)) ORDER BY CASE WHEN (x'' IN (t0.c1, vt0.c0)) THEN TYPEOF(rt1.c0) END ASC, (((rt1.c0))>(((t0.c0 IN (rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE t0.c2 COLLATE BINARY  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE NOCASE WHEN ((251973094)>=(rt1.c1)) THEN (+ (rt1.c2)) WHEN TRIM('-1010038694') THEN CAST(rt1.c1 AS NUMERIC) ELSE ((vt0.c0)>>(t0.c0)) END FULL OUTER JOIN rt1 ON COALESCE(((((((((rt1.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c0)))AND(0.2658369933142293)), NULL COLLATE RTRIM, json_quote(rt1.c2), ((rt1.c0)<<(rt1.c0))) ORDER BY CASE WHEN (x'' IN (t0.c1, vt0.c0)) THEN TYPEOF(rt1.c0) END ASC, (((rt1.c0))>(((t0.c0 IN (rt1.c2)))))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN t0 ON CASE t0.c2 COLLATE BINARY  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE NOCASE WHEN ((251973094)>=(rt1.c1)) THEN (+ (rt1.c2)) WHEN TRIM('-1010038694') THEN CAST(rt1.c1 AS NUMERIC) ELSE ((vt0.c0)>>(t0.c0)) END FULL OUTER JOIN rt1 ON COALESCE(((((((((rt1.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c0)))AND(0.2658369933142293)), NULL COLLATE RTRIM, json_quote(rt1.c2), ((rt1.c0)<<(rt1.c0))) WHERE (((vt0.c0) NOTNULL)) ORDER BY CASE WHEN (x'' IN (t0.c1, vt0.c0)) THEN TYPEOF(rt1.c0) END ASC, (((rt1.c0))>(((t0.c0 IN (rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE t0.c2 COLLATE BINARY  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE NOCASE WHEN ((251973094)>=(rt1.c1)) THEN (+ (rt1.c2)) WHEN TRIM('-1010038694') THEN CAST(rt1.c1 AS NUMERIC) ELSE ((vt0.c0)>>(t0.c0)) END FULL OUTER JOIN rt1 ON COALESCE(((((((((rt1.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c0)))AND(0.2658369933142293)), NULL COLLATE RTRIM, json_quote(rt1.c2), ((rt1.c0)<<(rt1.c0))) ORDER BY CASE WHEN (x'' IN (t0.c1, vt0.c0)) THEN TYPEOF(rt1.c0) END ASC, (((rt1.c0))>(((t0.c0 IN (rt1.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((NOT (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((NOT (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((NOT (rt1.c0)) IN ()));
SELECT * FROM t0 NOT INDEXED, rt1, rt0, vt0 WHERE ((((rt0.c2, rt1.c2, NULL)) BETWEEN ((CAST(t0.c0 AS BLOB), vt0.c0 COLLATE BINARY, (NOT (rt0.c1)))) AND ((rt0.c0, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), ((rt1.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt1.c2, NULL)) BETWEEN ((CAST(t0.c0 AS BLOB), vt0.c0 COLLATE BINARY, (NOT (rt0.c1)))) AND ((rt0.c0, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), ((rt1.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT * FROM t0 NOT INDEXED, rt1, rt0, vt0 WHERE ((((rt0.c2, rt1.c2, NULL)) BETWEEN ((CAST(t0.c0 AS BLOB), vt0.c0 COLLATE BINARY, (NOT (rt0.c1)))) AND ((rt0.c0, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), ((rt1.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt1.c2, NULL)) BETWEEN ((CAST(t0.c0 AS BLOB), vt0.c0 COLLATE BINARY, (NOT (rt0.c1)))) AND ((rt0.c0, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), ((rt1.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT * FROM t0 NOT INDEXED, rt1, rt0, vt0 WHERE ((((rt0.c2, rt1.c2, NULL)) BETWEEN ((CAST(t0.c0 AS BLOB), vt0.c0 COLLATE BINARY, (NOT (rt0.c1)))) AND ((rt0.c0, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), ((rt1.c1) IS TRUE)))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((NOT (((t0.c1)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1)AND(t0.c0))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((NOT (((t0.c1)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1)AND(t0.c0))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((NOT (((t0.c1)AND(t0.c0)))));
SELECT COUNT(*) FROM rt1, rt0, t0, vt0 WHERE (((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t0, vt0 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB) DESC);
SELECT COUNT(*) FROM rt1, rt0, t0, vt0 WHERE (((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t0, vt0 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB) DESC);
SELECT COUNT(*) FROM rt1, rt0, t0, vt0 WHERE (((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT ALL * FROM t0, rt1, rt0, vt0 WHERE (((json_array_length(vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((((rt0.c1, t0.c0, t0.c2))>=((rt1.c1, rt1.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((((rt0.c1, t0.c0, t0.c2))>=((rt1.c1, rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT ALL * FROM t0, rt1, rt0, vt0 WHERE (((json_array_length(vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((((rt0.c1, t0.c0, t0.c2))>=((rt1.c1, rt1.c2, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((((rt0.c1, t0.c0, t0.c2))>=((rt1.c1, rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN 0.23245675312378422 THEN vt0.c0 END)OR('-1875851472')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((NOT (vt0.c0)))))OR((vt0.c0 IN ()))))OR((((vt0.c0, vt0.c0, '-1277596577')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, x'6dad'))))) DESC, CASE WHEN vt0.c0 THEN vt0.c0 END  NULLS FIRST, '419877453'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN 0.23245675312378422 THEN vt0.c0 END)OR('-1875851472')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((NOT (vt0.c0)))))OR((vt0.c0 IN ()))))OR((((vt0.c0, vt0.c0, '-1277596577')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, x'6dad'))))) DESC, CASE WHEN vt0.c0 THEN vt0.c0 END  NULLS FIRST, '419877453'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN 0.23245675312378422 THEN vt0.c0 END)OR('-1875851472')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((NOT (vt0.c0)))))OR((vt0.c0 IN ()))))OR((((vt0.c0, vt0.c0, '-1277596577')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, x'6dad'))))) DESC, CASE WHEN vt0.c0 THEN vt0.c0 END  NULLS FIRST, '419877453'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN 0.23245675312378422 THEN vt0.c0 END)OR('-1875851472')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((NOT (vt0.c0)))))OR((vt0.c0 IN ()))))OR((((vt0.c0, vt0.c0, '-1277596577')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, x'6dad'))))) DESC, CASE WHEN vt0.c0 THEN vt0.c0 END  NULLS FIRST, '419877453'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN 0.23245675312378422 THEN vt0.c0 END)OR('-1875851472')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((NOT (vt0.c0)))))OR((vt0.c0 IN ()))))OR((((vt0.c0, vt0.c0, '-1277596577')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, x'6dad'))))) DESC, CASE WHEN vt0.c0 THEN vt0.c0 END  NULLS FIRST, '419877453'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((t0.c2)) BETWEEN ((((vt0.c0)||(t0.c1)))) AND ((((rt1.c0)*(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((((vt0.c0)||(t0.c1)))) AND ((((rt1.c0)*(t0.c0)))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((t0.c2)) BETWEEN ((((vt0.c0)||(t0.c1)))) AND ((((rt1.c0)*(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((((vt0.c0)||(t0.c1)))) AND ((((rt1.c0)*(t0.c0)))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((t0.c2)) BETWEEN ((((vt0.c0)||(t0.c1)))) AND ((((rt1.c0)*(t0.c0))))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (COALESCE(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), ((rt0.c0)>>(0xfffffffff18d7d44))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), ((rt0.c0)>>(0xfffffffff18d7d44)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (COALESCE(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), ((rt0.c0)>>(0xfffffffff18d7d44))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), ((rt0.c0)>>(0xfffffffff18d7d44)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (COALESCE(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), ((rt0.c0)>>(0xfffffffff18d7d44))));
SELECT * FROM t0, vt0, rt0, rt1 WHERE (LTRIM(((rt0.c1)LIKE(rt1.c2)))) ORDER BY ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((((((t0.c2) NOT BETWEEN (t0.c0) AND (NULL)))AND(((((rt0.c1)AND(t0.c1)))OR(rt0.c1)))))OR((t0.c0 IN ()))) ASC, (CASE 189425691  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c1)LIKE(rt1.c2)))) IS TRUE)  as count FROM t0, vt0, rt0, rt1 ORDER BY ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((((((t0.c2) NOT BETWEEN (t0.c0) AND (NULL)))AND(((((rt0.c1)AND(t0.c1)))OR(rt0.c1)))))OR((t0.c0 IN ()))) ASC, (CASE 189425691  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) ASC);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (LTRIM(((rt0.c1)LIKE(rt1.c2)))) ORDER BY ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((((((t0.c2) NOT BETWEEN (t0.c0) AND (NULL)))AND(((((rt0.c1)AND(t0.c1)))OR(rt0.c1)))))OR((t0.c0 IN ()))) ASC, (CASE 189425691  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c1)LIKE(rt1.c2)))) IS TRUE)  as count FROM t0, vt0, rt0, rt1 ORDER BY ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((((((t0.c2) NOT BETWEEN (t0.c0) AND (NULL)))AND(((((rt0.c1)AND(t0.c1)))OR(rt0.c1)))))OR((t0.c0 IN ()))) ASC, (CASE 189425691  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) ASC);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (LTRIM(((rt0.c1)LIKE(rt1.c2)))) ORDER BY ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((((((t0.c2) NOT BETWEEN (t0.c0) AND (NULL)))AND(((((rt0.c1)AND(t0.c1)))OR(rt0.c1)))))OR((t0.c0 IN ()))) ASC, (CASE 189425691  WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UPPER(DISTINCT ((t0.c1)!=(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((t0.c1)<>(t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UPPER(DISTINCT ((t0.c1)!=(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((t0.c1)<>(t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UPPER(DISTINCT ((t0.c1)!=(t0.c0))));
SELECT * FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0)<<(t0.c0)))) AND (((t0.c1 IN (rt0.c2, x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c0)<<(t0.c0)))) AND (((t0.c1 IN (rt0.c2, x'')))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0)<<(t0.c0)))) AND (((t0.c1 IN (rt0.c2, x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c0)<<(t0.c0)))) AND (((t0.c1 IN (rt0.c2, x'')))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0)<<(t0.c0)))) AND (((t0.c1 IN (rt0.c2, x''))))));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c1) BETWEEN (t0.c0) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) WHEN ((t0.c0)||(t0.c0)) THEN ((0.9038388404298126) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN x'c3107219' ELSE (t0.c1 IN ()) END) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) BETWEEN (t0.c0) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) WHEN ((t0.c0)||(t0.c0)) THEN ((0.9038388404298126) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN x'c3107219' ELSE (t0.c1 IN ()) END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY t0.c2 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c1) BETWEEN (t0.c0) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) WHEN ((t0.c0)||(t0.c0)) THEN ((0.9038388404298126) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN x'c3107219' ELSE (t0.c1 IN ()) END) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) BETWEEN (t0.c0) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) WHEN ((t0.c0)||(t0.c0)) THEN ((0.9038388404298126) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN x'c3107219' ELSE (t0.c1 IN ()) END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY t0.c2 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c1) BETWEEN (t0.c0) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) WHEN ((t0.c0)||(t0.c0)) THEN ((0.9038388404298126) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN x'c3107219' ELSE (t0.c1 IN ()) END) ORDER BY t0.c2 ASC;
SELECT COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (ABS(CAST(t0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(t0.c1 AS REAL))) IS TRUE)  as count FROM rt1, t0, rt0, vt0);
SELECT COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (ABS(CAST(t0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(t0.c1 AS REAL))) IS TRUE)  as count FROM rt1, t0, rt0, vt0);
SELECT COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (ABS(CAST(t0.c1 AS REAL)));
SELECT ALL * FROM rt1, vt0, t0, rt0 WHERE (((TYPEOF(t0.c2))!=((((rt1.c2))<=((t0.c1)))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c2))!=((((rt1.c2))<=((t0.c1)))))) IS TRUE)  as count FROM rt1, vt0, t0, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt1, vt0, t0, rt0 WHERE (((TYPEOF(t0.c2))!=((((rt1.c2))<=((t0.c1)))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c2))!=((((rt1.c2))<=((t0.c1)))))) IS TRUE)  as count FROM rt1, vt0, t0, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt1, vt0, t0, rt0 WHERE (((TYPEOF(t0.c2))!=((((rt1.c2))<=((t0.c1)))))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt1.c0 ELSE vt0.c0 END IN ()) WHERE (((rt1.c2 COLLATE BINARY) IS FALSE)) ORDER BY (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt1.c0 ELSE vt0.c0 END IN ()) ORDER BY (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt1.c0 ELSE vt0.c0 END IN ()) WHERE (((rt1.c2 COLLATE BINARY) IS FALSE)) ORDER BY (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt1.c0 ELSE vt0.c0 END IN ()) ORDER BY (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt1.c0 ELSE vt0.c0 END IN ()) WHERE (((rt1.c2 COLLATE BINARY) IS FALSE)) ORDER BY (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c1)) IN ())  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (((((((((((rt0.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c2)))<(rt0.c2 COLLATE BINARY))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c2)))<(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (((((((((((rt0.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c2)))<(rt0.c2 COLLATE BINARY))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c2)))<(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (((((((((((rt0.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c2)))<(rt0.c2 COLLATE BINARY))) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c2 AS REAL)) IS FALSE));
SELECT ALL * FROM rt1 INDEXED BY i38, rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 INDEXED BY i38, rt0, vt0);
SELECT ALL * FROM rt1 INDEXED BY i38, rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 INDEXED BY i38, rt0, vt0);
SELECT * FROM vt0, t0, rt1 WHERE ('{6uoPߡ');
SELECT SUM(count) FROM (SELECT ALL (('{6uoPߡ') IS TRUE)  as count FROM vt0, t0, rt1);
SELECT * FROM vt0, t0, rt1 WHERE ('{6uoPߡ');
SELECT SUM(count) FROM (SELECT ALL (('{6uoPߡ') IS TRUE)  as count FROM vt0, t0, rt1);
SELECT * FROM vt0, t0, rt1 WHERE ('{6uoPߡ');
SELECT ALL * FROM t0, vt0 WHERE ((((+ (vt0.c0)))|(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))|(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((+ (vt0.c0)))|(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))|(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((+ (vt0.c0)))|(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN ABS(t0.c0) THEN (t0.c1 IN ()) ELSE ((x'')>=(rt1.c2)) END WHERE (((((t0.c0) ISNULL)) BETWEEN (((rt1.c2)&(rt1.c1))) AND (('>	XJ峱' IN ())))) ORDER BY CAST(((rt1.c0) NOTNULL) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) BETWEEN (((rt1.c2)&(rt1.c1))) AND (('>	XJ峱' IN ())))) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN ABS(t0.c0) THEN (t0.c1 IN ()) ELSE ((x'')>=(rt1.c2)) END ORDER BY CAST(((rt1.c0) NOTNULL) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN ABS(t0.c0) THEN (t0.c1 IN ()) ELSE ((x'')>=(rt1.c2)) END WHERE (((((t0.c0) ISNULL)) BETWEEN (((rt1.c2)&(rt1.c1))) AND (('>	XJ峱' IN ())))) ORDER BY CAST(((rt1.c0) NOTNULL) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) BETWEEN (((rt1.c2)&(rt1.c1))) AND (('>	XJ峱' IN ())))) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN ABS(t0.c0) THEN (t0.c1 IN ()) ELSE ((x'')>=(rt1.c2)) END ORDER BY CAST(((rt1.c0) NOTNULL) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN vt0 ON CASE WHEN ABS(t0.c0) THEN (t0.c1 IN ()) ELSE ((x'')>=(rt1.c2)) END WHERE (((((t0.c0) ISNULL)) BETWEEN (((rt1.c2)&(rt1.c1))) AND (('>	XJ峱' IN ())))) ORDER BY CAST(((rt1.c0) NOTNULL) AS NUMERIC) ASC;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0, rt0, rt1 WHERE ((((('-1010038694') NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (((rt1.c1)&(vt0.c0))) AND (((rt1.c2)OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1010038694') NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (((rt1.c1)&(vt0.c0))) AND (((rt1.c2)OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, rt1);
SELECT COUNT(*) FROM vt0, t0, rt0, rt1 WHERE ((((('-1010038694') NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (((rt1.c1)&(vt0.c0))) AND (((rt1.c2)OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1010038694') NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (((rt1.c1)&(vt0.c0))) AND (((rt1.c2)OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, rt1);
SELECT COUNT(*) FROM vt0, t0, rt0, rt1 WHERE ((((('-1010038694') NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (((rt1.c1)&(vt0.c0))) AND (((rt1.c2)OR(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (rtreenode(((((0X5559cf7a)AND(rt1.c1)))OR(vt0.c0)), (rt0.c0 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((((0x5559cf7a)AND(rt1.c1)))OR(vt0.c0)), (rt0.c0 IN (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (rtreenode(((((0X5559cf7a)AND(rt1.c1)))OR(vt0.c0)), (rt0.c0 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((((0x5559cf7a)AND(rt1.c1)))OR(vt0.c0)), (rt0.c0 IN (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (rtreenode(((((0X5559cf7a)AND(rt1.c1)))OR(vt0.c0)), (rt0.c0 IN (rt0.c0))));
SELECT * FROM rt1 INNER JOIN rt0 ON (((rt1.c2)GLOB(rt0.c1)) IN ()) WHERE ((((rt0.c0 IN (x'bce6'))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (IFNULL(DISTINCT rt0.c2, rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM  NULLS LAST, (~ (rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (x'bce6'))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (IFNULL(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((rt1.c2)GLOB(rt0.c1)) IN ()) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM  NULLS LAST, (~ (rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN rt0 ON (((rt1.c2)GLOB(rt0.c1)) IN ()) WHERE ((((rt0.c0 IN (x'bce6'))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (IFNULL(DISTINCT rt0.c2, rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM  NULLS LAST, (~ (rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (x'bce6'))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (IFNULL(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((rt1.c2)GLOB(rt0.c1)) IN ()) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM  NULLS LAST, (~ (rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN rt0 ON (((rt1.c2)GLOB(rt0.c1)) IN ()) WHERE ((((rt0.c0 IN (x'bce6'))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (IFNULL(DISTINCT rt0.c2, rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM  NULLS LAST, (~ (rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL * FROM vt0, t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL * FROM vt0, t0, rt1 WHERE (t0.c0);
SELECT * FROM vt0, rt0, rt1 WHERE (0X70260975);
SELECT SUM(count) FROM (SELECT ((0X70260975) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (0X70260975);
SELECT SUM(count) FROM (SELECT ((0X70260975) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (0X70260975);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT ALL * FROM rt0, t0, rt1 RIGHT OUTER JOIN vt0 ON (((((((((((t0.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)), ((t0.c1) NOT NULL), ((rt1.c1)||(rt0.c0))))<((CASE WHEN vt0.c0 THEN rt1.c2 END, TYPEOF(t0.c1), CAST(vt0.c0 AS REAL)))) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1)))) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1)))) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c1))))) IS TRUE)  as count FROM rt0, t0, rt1 RIGHT OUTER JOIN vt0 ON (((((((((((t0.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)), ((t0.c1) NOT NULL), ((rt1.c1)||(rt0.c0))))<((CASE WHEN vt0.c0 THEN rt1.c2 END, TYPEOF(t0.c1), CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM rt0, t0, rt1 RIGHT OUTER JOIN vt0 ON (((((((((((t0.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)), ((t0.c1) NOT NULL), ((rt1.c1)||(rt0.c0))))<((CASE WHEN vt0.c0 THEN rt1.c2 END, TYPEOF(t0.c1), CAST(vt0.c0 AS REAL)))) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1)))) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1)))) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c1))))) IS TRUE)  as count FROM rt0, t0, rt1 RIGHT OUTER JOIN vt0 ON (((((((((((t0.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)), ((t0.c1) NOT NULL), ((rt1.c1)||(rt0.c0))))<((CASE WHEN vt0.c0 THEN rt1.c2 END, TYPEOF(t0.c1), CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM rt0, t0, rt1 RIGHT OUTER JOIN vt0 ON (((((((((((t0.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt0.c0)), ((t0.c1) NOT NULL), ((rt1.c1)||(rt0.c0))))<((CASE WHEN vt0.c0 THEN rt1.c2 END, TYPEOF(t0.c1), CAST(vt0.c0 AS REAL)))) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1)))) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c1)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (NOT ((('o.') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt1.c1)) NOT BETWEEN (('8PJ4W	')) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN rt1 ON CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER) WHERE (CAST(rt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY CAST((- (rt0.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (NOT ((('o.') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt1.c1)) NOT BETWEEN (('8PJ4W	')) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN rt1 ON CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER) ORDER BY CAST((- (rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (NOT ((('o.') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt1.c1)) NOT BETWEEN (('8PJ4W	')) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN rt1 ON CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER) WHERE (CAST(rt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY CAST((- (rt0.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (NOT ((('o.') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt1.c1)) NOT BETWEEN (('8PJ4W	')) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN rt1 ON CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER) ORDER BY CAST((- (rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))+((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))+((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))+((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))+((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))+((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((((((((- (rt1.c2)))AND(t0.c0)))OR(x'')))OR(CAST(t0.c2 AS NUMERIC))))OR(rt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN t0.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE (NOT (rt1.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt1.c2)))AND(t0.c0)))OR(x'')))OR(CAST(t0.c2 AS NUMERIC))))OR(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0 ORDER BY CASE WHEN t0.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE (NOT (rt1.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((((((((- (rt1.c2)))AND(t0.c0)))OR(x'')))OR(CAST(t0.c2 AS NUMERIC))))OR(rt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN t0.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE (NOT (rt1.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt1.c2)))AND(t0.c0)))OR(x'')))OR(CAST(t0.c2 AS NUMERIC))))OR(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0 ORDER BY CASE WHEN t0.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE (NOT (rt1.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((((((((- (rt1.c2)))AND(t0.c0)))OR(x'')))OR(CAST(t0.c2 AS NUMERIC))))OR(rt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN t0.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE (NOT (rt1.c2)) END  NULLS LAST;
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((0.7095569071750194)) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((0.7095569071750194)) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((0.7095569071750194)) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((0.7095569071750194)) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((0.7095569071750194)) AND ((rt1.c1))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END)OR(json_type(rt1.c0))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((rt1.c1))<=((('-1337833556' IN (rt1.c0)))))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((rt1.c1)GLOB('t왕3Dr')))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0.363481083418135)))))AND(CASE vt0.c0  WHEN rt1.c0 THEN '1223980520' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1))<=((('-1337833556' IN (rt1.c0)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END)OR(json_type(rt1.c0))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((rt1.c1)GLOB('t왕3Dr')))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0.363481083418135)))))AND(CASE vt0.c0  WHEN rt1.c0 THEN '1223980520' END))  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END)OR(json_type(rt1.c0))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((rt1.c1))<=((('-1337833556' IN (rt1.c0)))))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((rt1.c1)GLOB('t왕3Dr')))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0.363481083418135)))))AND(CASE vt0.c0  WHEN rt1.c0 THEN '1223980520' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1))<=((('-1337833556' IN (rt1.c0)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END)OR(json_type(rt1.c0))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((rt1.c1)GLOB('t왕3Dr')))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0.363481083418135)))))AND(CASE vt0.c0  WHEN rt1.c0 THEN '1223980520' END))  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END)OR(json_type(rt1.c0))))AND((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((rt1.c1))<=((('-1337833556' IN (rt1.c0)))))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((rt1.c1)GLOB('t왕3Dr')))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (0.363481083418135)))))AND(CASE vt0.c0  WHEN rt1.c0 THEN '1223980520' END))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((((x'6e6d') BETWEEN (t0.c2) AND (t0.c0)))<(t0.c1)) ASC, (~ (json_object(t0.c0, t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((((x'6e6d') BETWEEN (t0.c2) AND (t0.c0)))<(t0.c1)) ASC, (~ (json_object(t0.c0, t0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((((x'6e6d') BETWEEN (t0.c2) AND (t0.c0)))<(t0.c1)) ASC, (~ (json_object(t0.c0, t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((((x'6e6d') BETWEEN (t0.c2) AND (t0.c0)))<(t0.c1)) ASC, (~ (json_object(t0.c0, t0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((((x'6e6d') BETWEEN (t0.c2) AND (t0.c0)))<(t0.c1)) ASC, (~ (json_object(t0.c0, t0.c2)))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((0.6767531748575253) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.6767531748575253) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((0.6767531748575253) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.6767531748575253) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((0.6767531748575253) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((rt1.c1 IN ()))));
SELECT * FROM t0, rt1 WHERE (CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((rt1.c2) NOT NULL) WHEN rt1.c2 THEN ((rt1.c1)*(rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN MIN(t0.c2, 0.691253953406683) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((rt1.c2) NOT NULL) WHEN rt1.c2 THEN ((rt1.c1)*(rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN MIN(t0.c2, 0.691253953406683) END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((rt1.c2) NOT NULL) WHEN rt1.c2 THEN ((rt1.c1)*(rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN MIN(t0.c2, 0.691253953406683) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((rt1.c2) NOT NULL) WHEN rt1.c2 THEN ((rt1.c1)*(rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN MIN(t0.c2, 0.691253953406683) END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((rt1.c2) NOT NULL) WHEN rt1.c2 THEN ((rt1.c1)*(rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN MIN(t0.c2, 0.691253953406683) END);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c2)>>(vt0.c0)))>>((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN -138024489 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE rt0.c2 END ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)>>(vt0.c0)))>>((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN -138024489 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE rt0.c2 END ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c2)>>(vt0.c0)))>>((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN -138024489 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE rt0.c2 END ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)>>(vt0.c0)))>>((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN -138024489 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE rt0.c2 END ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c2)>>(vt0.c0)))>>((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN -138024489 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE rt0.c2 END ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN 0Xffffffff9e5512f1 END)IS(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '-144908713' WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN 0.47122529327432583 THEN '0.887083395194202' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)), (CAST(rt1.c1 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN 0Xffffffff9e5512f1 END)IS(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '-144908713' WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN 0.47122529327432583 THEN '0.887083395194202' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)), (CAST(rt1.c1 AS BLOB) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN 0Xffffffff9e5512f1 END)IS(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '-144908713' WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN 0.47122529327432583 THEN '0.887083395194202' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)), (CAST(rt1.c1 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN 0Xffffffff9e5512f1 END)IS(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '-144908713' WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN 0.47122529327432583 THEN '0.887083395194202' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)), (CAST(rt1.c1 AS BLOB) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN 0Xffffffff9e5512f1 END)IS(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '-144908713' WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN 0.47122529327432583 THEN '0.887083395194202' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)), (CAST(rt1.c1 AS BLOB) IN ())  NULLS FIRST;
SELECT * FROM rt1, t0 FULL OUTER JOIN vt0 ON (((((vt0.c0, vt0.c0, t0.c1))<=((vt0.c0, NULL, NULL)))) ISNULL) WHERE ((~ (CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE NULL END))) IS TRUE)  as count FROM rt1 NOT INDEXED, t0 FULL OUTER JOIN vt0 ON (((((vt0.c0, vt0.c0, t0.c1))<=((vt0.c0, NULL, NULL)))) ISNULL));
SELECT * FROM rt1, t0 FULL OUTER JOIN vt0 ON (((((vt0.c0, vt0.c0, t0.c1))<=((vt0.c0, NULL, NULL)))) ISNULL) WHERE ((~ (CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE NULL END))) IS TRUE)  as count FROM rt1 NOT INDEXED, t0 FULL OUTER JOIN vt0 ON (((((vt0.c0, vt0.c0, t0.c1))<=((vt0.c0, NULL, NULL)))) ISNULL));
SELECT * FROM rt1, t0 FULL OUTER JOIN vt0 ON (((((vt0.c0, vt0.c0, t0.c1))<=((vt0.c0, NULL, NULL)))) ISNULL) WHERE ((~ (CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE NULL END)));
SELECT ALL * FROM t0, rt0, vt0, rt1 WHERE (CAST(827090375 AS REAL)) ORDER BY CAST(LTRIM(t0.c1) AS BLOB) DESC  NULLS FIRST, ((((rt1.c2)|('-892232004')))<=((((t0.c1, t0.c2, 0.48152261215447334))>=((rt1.c1, rt1.c1, rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(827090375 AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0, rt1 ORDER BY CAST(LTRIM(t0.c1) AS BLOB) DESC  NULLS FIRST, ((((rt1.c2)|('-892232004')))<=((((t0.c1, t0.c2, 0.48152261215447334))>=((rt1.c1, rt1.c1, rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0, rt1 WHERE (CAST(827090375 AS REAL)) ORDER BY CAST(LTRIM(t0.c1) AS BLOB) DESC  NULLS FIRST, ((((rt1.c2)|('-892232004')))<=((((t0.c1, t0.c2, 0.48152261215447334))>=((rt1.c1, rt1.c1, rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(827090375 AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0, rt1 ORDER BY CAST(LTRIM(t0.c1) AS BLOB) DESC  NULLS FIRST, ((((rt1.c2)|('-892232004')))<=((((t0.c1, t0.c2, 0.48152261215447334))>=((rt1.c1, rt1.c1, rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0, rt1 WHERE (CAST(827090375 AS REAL)) ORDER BY CAST(LTRIM(t0.c1) AS BLOB) DESC  NULLS FIRST, ((((rt1.c2)|('-892232004')))<=((((t0.c1, t0.c2, 0.48152261215447334))>=((rt1.c1, rt1.c1, rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((t0.c0) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c0))) ORDER BY '	}' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY '	}' DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((t0.c0) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c0))) ORDER BY '	}' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY '	}' DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((t0.c0) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c0))) ORDER BY '	}' DESC  NULLS FIRST;
SELECT * FROM t0, vt0, rt1, rt0 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((NULL COLLATE RTRIM)OR(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)))AND(CAST(rt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt1, rt0 NOT INDEXED ORDER BY ((((NULL COLLATE RTRIM)OR(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)))AND(CAST(rt1.c0 AS TEXT))));
SELECT * FROM t0, vt0, rt1, rt0 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((NULL COLLATE RTRIM)OR(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)))AND(CAST(rt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt1, rt0 NOT INDEXED ORDER BY ((((NULL COLLATE RTRIM)OR(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)))AND(CAST(rt1.c0 AS TEXT))));
SELECT * FROM t0, vt0, rt1, rt0 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((NULL COLLATE RTRIM)OR(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)))AND(CAST(rt1.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (- (((-1.1286955E7)<(rt0.c1)))) WHERE ((((NULL)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c2 END)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (((-1.1286955E7)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (- (((-1.1286955E7)<(rt0.c1)))) WHERE ((((NULL)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c2 END)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (((-1.1286955E7)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (- (((-1.1286955E7)<(rt0.c1)))) WHERE ((((NULL)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c2 END))));
SELECT * FROM rt0, vt0 WHERE ((~ (rt0.c2)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((~ (rt0.c2)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((~ (rt0.c2)) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0, vt0, rt1 WHERE (rt0.c1) ORDER BY ((CAST(vt0.c0 AS REAL))<(((rt1.c2)AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0, rt1 ORDER BY ((CAST(vt0.c0 AS REAL))<(((rt1.c2)AND(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0, rt1 WHERE (rt0.c1) ORDER BY ((CAST(vt0.c0 AS REAL))<(((rt1.c2)AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0, rt1 ORDER BY ((CAST(vt0.c0 AS REAL))<(((rt1.c2)AND(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0, rt1 WHERE (rt0.c1) ORDER BY ((CAST(vt0.c0 AS REAL))<(((rt1.c2)AND(rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON rt1.c1 FULL OUTER JOIN vt0 ON ((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))) IN (((rt1.c1)>(rt0.c1)))) FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (((((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt1.c0)))) WHERE ('') ORDER BY CAST(NULL AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON rt1.c1 FULL OUTER JOIN vt0 ON ((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))) IN (((rt1.c1)>(rt0.c1)))) FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (((((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt1.c0)))) ORDER BY CAST(NULL AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON rt1.c1 FULL OUTER JOIN vt0 ON ((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))) IN (((rt1.c1)>(rt0.c1)))) FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (((((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt1.c0)))) WHERE ('') ORDER BY CAST(NULL AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON rt1.c1 FULL OUTER JOIN vt0 ON ((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))) IN (((rt1.c1)>(rt0.c1)))) FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (((((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt1.c0)))) ORDER BY CAST(NULL AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, rt0 WHERE ((- ((NOT (vt0.c0))))) ORDER BY (((~ (t0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM rt1, t0, vt0, rt0 ORDER BY (((~ (t0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, t0, vt0, rt0 WHERE ((- ((NOT (vt0.c0))))) ORDER BY (((~ (t0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM rt1, t0, vt0, rt0 ORDER BY (((~ (t0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, t0, vt0, rt0 WHERE ((- ((NOT (vt0.c0))))) ORDER BY (((~ (t0.c1))) ISNULL);
SELECT * FROM rt0, rt1, t0, vt0 WHERE (CASE 0.8651796733524739  WHEN TYPEOF(DISTINCT rt0.c2) THEN NULL WHEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0)) THEN rt1.c0 COLLATE RTRIM WHEN ((((t0.c0)AND(rt0.c0)))OR(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END) ORDER BY (((t0.c0)) BETWEEN ((ABS(DISTINCT rt1.c1))) AND (((((t0.c2))!=((rt0.c1))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.8651796733524739  WHEN TYPEOF(DISTINCT rt0.c2) THEN NULL WHEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0)) THEN rt1.c0 COLLATE RTRIM WHEN ((((t0.c0)AND(rt0.c0)))OR(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED, t0, vt0 ORDER BY (((t0.c0)) BETWEEN ((ABS(DISTINCT rt1.c1))) AND (((((t0.c2))!=((rt0.c1))))))  NULLS LAST);
SELECT * FROM rt0, rt1, t0, vt0 WHERE (CASE 0.8651796733524739  WHEN TYPEOF(DISTINCT rt0.c2) THEN NULL WHEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0)) THEN rt1.c0 COLLATE RTRIM WHEN ((((t0.c0)AND(rt0.c0)))OR(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END) ORDER BY (((t0.c0)) BETWEEN ((ABS(DISTINCT rt1.c1))) AND (((((t0.c2))!=((rt0.c1))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.8651796733524739  WHEN TYPEOF(DISTINCT rt0.c2) THEN NULL WHEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0)) THEN rt1.c0 COLLATE RTRIM WHEN ((((t0.c0)AND(rt0.c0)))OR(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED, t0, vt0 ORDER BY (((t0.c0)) BETWEEN ((ABS(DISTINCT rt1.c1))) AND (((((t0.c2))!=((rt0.c1))))))  NULLS LAST);
SELECT * FROM rt0, rt1, t0, vt0 WHERE (CASE 0.8651796733524739  WHEN TYPEOF(DISTINCT rt0.c2) THEN NULL WHEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0)) THEN rt1.c0 COLLATE RTRIM WHEN ((((t0.c0)AND(rt0.c0)))OR(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END) ORDER BY (((t0.c0)) BETWEEN ((ABS(DISTINCT rt1.c1))) AND (((((t0.c2))!=((rt0.c1))))))  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (rt0.c0) AND (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) WHERE ((((~ (0.9086752589899568)))LIKE(((rt0.c1) NOTNULL)))) ORDER BY ((TRIM(rt0.c2))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ASC  NULLS FIRST, 0.750987740229745  NULLS FIRST, ((vt0.c0)*(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((~ (0.9086752589899568)))LIKE(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (rt0.c0) AND (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) ORDER BY ((TRIM(rt0.c2))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ASC  NULLS FIRST, 0.750987740229745  NULLS FIRST, ((vt0.c0)*(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (rt0.c0) AND (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) WHERE ((((~ (0.9086752589899568)))LIKE(((rt0.c1) NOTNULL)))) ORDER BY ((TRIM(rt0.c2))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ASC  NULLS FIRST, 0.750987740229745  NULLS FIRST, ((vt0.c0)*(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((~ (0.9086752589899568)))LIKE(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (rt0.c0) AND (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) ORDER BY ((TRIM(rt0.c2))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ASC  NULLS FIRST, 0.750987740229745  NULLS FIRST, ((vt0.c0)*(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (rt0.c0) AND (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) WHERE ((((~ (0.9086752589899568)))LIKE(((rt0.c1) NOTNULL)))) ORDER BY ((TRIM(rt0.c2))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ASC  NULLS FIRST, 0.750987740229745  NULLS FIRST, ((vt0.c0)*(CAST(rt0.c1 AS INTEGER)));
SELECT COUNT(*) FROM vt0 INDEXED BY i38 NATURAL JOIN rt0 WHERE (((((vt0.c0) IS FALSE))%('C!'))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c2)) THEN NULL ELSE ((vt0.c0)AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))%('C!'))) IS TRUE)  as count FROM vt0 INDEXED BY i38 NATURAL JOIN rt0 ORDER BY CASE WHEN (rt0.c0 IN (rt0.c2)) THEN NULL ELSE ((vt0.c0)AND(rt0.c1)) END);
SELECT COUNT(*) FROM vt0 INDEXED BY i38 NATURAL JOIN rt0 WHERE (((((vt0.c0) IS FALSE))%('C!'))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c2)) THEN NULL ELSE ((vt0.c0)AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))%('C!'))) IS TRUE)  as count FROM vt0 INDEXED BY i38 NATURAL JOIN rt0 ORDER BY CASE WHEN (rt0.c0 IN (rt0.c2)) THEN NULL ELSE ((vt0.c0)AND(rt0.c1)) END);
SELECT * FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON CAST(((((rt1.c0)AND(rt0.c0)))AND(0Xffffffffd0a87952)) AS BLOB) CROSS JOIN t0 ON (((CAST(rt0.c0 AS TEXT), ((t0.c0)OR(x'')), CAST('257445993' AS INTEGER)))<(((~ (rt1.c0)), CASE x'2f6c'  WHEN rt0.c2 THEN rt1.c0 END, t0.c2 COLLATE RTRIM))) WHERE ('-1743601413');
SELECT SUM(count) FROM (SELECT ALL (('-1743601413') IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON CAST(((((rt1.c0)AND(rt0.c0)))AND(0Xffffffffd0a87952)) AS BLOB) CROSS JOIN t0 ON (((CAST(rt0.c0 AS TEXT), ((t0.c0)OR(x'')), CAST('257445993' AS INTEGER)))<(((~ (rt1.c0)), CASE x'2f6c'  WHEN rt0.c2 THEN rt1.c0 END, t0.c2 COLLATE RTRIM))));
SELECT * FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON CAST(((((rt1.c0)AND(rt0.c0)))AND(0Xffffffffd0a87952)) AS BLOB) CROSS JOIN t0 ON (((CAST(rt0.c0 AS TEXT), ((t0.c0)OR(x'')), CAST('257445993' AS INTEGER)))<(((~ (rt1.c0)), CASE x'2f6c'  WHEN rt0.c2 THEN rt1.c0 END, t0.c2 COLLATE RTRIM))) WHERE ('-1743601413');
SELECT SUM(count) FROM (SELECT ALL (('-1743601413') IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON CAST(((((rt1.c0)AND(rt0.c0)))AND(0Xffffffffd0a87952)) AS BLOB) CROSS JOIN t0 ON (((CAST(rt0.c0 AS TEXT), ((t0.c0)OR(x'')), CAST('257445993' AS INTEGER)))<(((~ (rt1.c0)), CASE x'2f6c'  WHEN rt0.c2 THEN rt1.c0 END, t0.c2 COLLATE RTRIM))));
SELECT * FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON CAST(((((rt1.c0)AND(rt0.c0)))AND(0Xffffffffd0a87952)) AS BLOB) CROSS JOIN t0 ON (((CAST(rt0.c0 AS TEXT), ((t0.c0)OR(x'')), CAST('257445993' AS INTEGER)))<(((~ (rt1.c0)), CASE x'2f6c'  WHEN rt0.c2 THEN rt1.c0 END, t0.c2 COLLATE RTRIM))) WHERE ('-1743601413');
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE '1755399156'  WHEN ((rt0.c1) BETWEEN ('ap^X9a|Kf') AND (rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN (('aⱴ')IS(rt0.c1)) WHEN (rt0.c1 IN (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE '1755399156'  WHEN ((rt0.c1) BETWEEN ('ap^X9a|Kf') AND (rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN (('aⱴ')IS(rt0.c1)) WHEN (rt0.c1 IN (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE '1755399156'  WHEN ((rt0.c1) BETWEEN ('ap^X9a|Kf') AND (rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN (('aⱴ')IS(rt0.c1)) WHEN (rt0.c1 IN (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE '1755399156'  WHEN ((rt0.c1) BETWEEN ('ap^X9a|Kf') AND (rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN (('aⱴ')IS(rt0.c1)) WHEN (rt0.c1 IN (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE '1755399156'  WHEN ((rt0.c1) BETWEEN ('ap^X9a|Kf') AND (rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN (('aⱴ')IS(rt0.c1)) WHEN (rt0.c1 IN (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) NOT NULL) END);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((0.887083395194202, (vt0.c0 IN ()), UNLIKELY(t0.c1)))<>((((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c1)), CAST(t0.c1 AS INTEGER), t0.c0))));
SELECT SUM(count) FROM (SELECT (((((0.887083395194202, (vt0.c0 IN ()), UNLIKELY(t0.c1)))!=((((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c1)), CAST(t0.c1 AS INTEGER), t0.c0)))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((0.887083395194202, (vt0.c0 IN ()), UNLIKELY(t0.c1)))<>((((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c1)), CAST(t0.c1 AS INTEGER), t0.c0))));
SELECT SUM(count) FROM (SELECT (((((0.887083395194202, (vt0.c0 IN ()), UNLIKELY(t0.c1)))!=((((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c1)), CAST(t0.c1 AS INTEGER), t0.c0)))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((((0.887083395194202, (vt0.c0 IN ()), UNLIKELY(t0.c1)))<>((((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c1)), CAST(t0.c1 AS INTEGER), t0.c0))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN (rt1.c2 IN ()) THEN CAST(rt1.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c2 END ELSE (((rt0.c1))>((rt0.c1))) END) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN (+ ('1755399156')) THEN ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN (rt1.c2 IN ()) THEN CAST(rt1.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c2 END ELSE (((rt0.c1))>((rt0.c1))) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN (+ ('1755399156')) THEN ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN (rt1.c2 IN ()) THEN CAST(rt1.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c2 END ELSE (((rt0.c1))>((rt0.c1))) END) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN (+ ('1755399156')) THEN ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN (rt1.c2 IN ()) THEN CAST(rt1.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c2 END ELSE (((rt0.c1))>((rt0.c1))) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN (+ ('1755399156')) THEN ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN (rt1.c2 IN ()) THEN CAST(rt1.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c2 END ELSE (((rt0.c1))>((rt0.c1))) END) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN (+ ('1755399156')) THEN ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON NULL CROSS JOIN t0 ON ((rt0.c2)AND(t0.c1)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE ((rt0.c2)*(t0.c1))  WHEN (+ (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) END WHERE (CASE ((('-804059389', rt1.c0, rt0.c1))<=((rt0.c1, rt1.c2, NULL)))  WHEN '-831871170' THEN (~ (rt1.c2)) WHEN (+ (t0.c1)) THEN ((t0.c1)>>(x'')) WHEN (((t0.c2, vt0.c0, 0.3589381877345862)) NOT BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((rt0.c1, t0.c1, rt1.c1))) THEN ((rt1.c2)>=(t0.c0)) END) ORDER BY CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, x'28a2' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((('-804059389', rt1.c0, rt0.c1))<=((rt0.c1, rt1.c2, NULL)))  WHEN '-831871170' THEN (~ (rt1.c2)) WHEN (+ (t0.c1)) THEN ((t0.c1)>>(x'')) WHEN (((t0.c2, vt0.c0, 0.3589381877345862)) NOT BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((rt0.c1, t0.c1, rt1.c1))) THEN ((rt1.c2)>=(t0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON NULL CROSS JOIN t0 ON ((rt0.c2)AND(t0.c1)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE ((rt0.c2)*(t0.c1))  WHEN (+ (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) END ORDER BY CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, x'28a2' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON NULL CROSS JOIN t0 ON ((rt0.c2)AND(t0.c1)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE ((rt0.c2)*(t0.c1))  WHEN (+ (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) END WHERE (CASE ((('-804059389', rt1.c0, rt0.c1))<=((rt0.c1, rt1.c2, NULL)))  WHEN '-831871170' THEN (~ (rt1.c2)) WHEN (+ (t0.c1)) THEN ((t0.c1)>>(x'')) WHEN (((t0.c2, vt0.c0, 0.3589381877345862)) NOT BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((rt0.c1, t0.c1, rt1.c1))) THEN ((rt1.c2)>=(t0.c0)) END) ORDER BY CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, x'28a2' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((('-804059389', rt1.c0, rt0.c1))<=((rt0.c1, rt1.c2, NULL)))  WHEN '-831871170' THEN (~ (rt1.c2)) WHEN (+ (t0.c1)) THEN ((t0.c1)>>(x'')) WHEN (((t0.c2, vt0.c0, 0.3589381877345862)) NOT BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((rt0.c1, t0.c1, rt1.c1))) THEN ((rt1.c2)>=(t0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON NULL CROSS JOIN t0 ON ((rt0.c2)AND(t0.c1)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE ((rt0.c2)*(t0.c1))  WHEN (+ (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) END ORDER BY CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, x'28a2' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON NULL CROSS JOIN t0 ON ((rt0.c2)AND(t0.c1)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE ((rt0.c2)*(t0.c1))  WHEN (+ (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) END WHERE (CASE ((('-804059389', rt1.c0, rt0.c1))<=((rt0.c1, rt1.c2, NULL)))  WHEN '-831871170' THEN (~ (rt1.c2)) WHEN (+ (t0.c1)) THEN ((t0.c1)>>(x'')) WHEN (((t0.c2, vt0.c0, 0.3589381877345862)) NOT BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((rt0.c1, t0.c1, rt1.c1))) THEN ((rt1.c2)>=(t0.c0)) END) ORDER BY CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, x'28a2' ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY CASE WHEN (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('AL	cfvOl')IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN t0.c1 WHEN (NULL IN (t0.c1)) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('AL	cfvOl')IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN t0.c1 WHEN (NULL IN (t0.c1)) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) END DESC);
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY CASE WHEN (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('AL	cfvOl')IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN t0.c1 WHEN (NULL IN (t0.c1)) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('AL	cfvOl')IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN t0.c1 WHEN (NULL IN (t0.c1)) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) END DESC);
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY CASE WHEN (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('AL	cfvOl')IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN t0.c1 WHEN (NULL IN (t0.c1)) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) END DESC;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (('-1107810881') ISNULL) FULL OUTER JOIN rt0 ON CAST(t0.c0 AS NUMERIC) WHERE (((((t0.c2) ISNULL)) ISNULL)) ORDER BY (+ (((rt0.c1) BETWEEN (t0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL)) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (('-1107810881') ISNULL) FULL OUTER JOIN rt0 ON CAST(t0.c0 AS NUMERIC) ORDER BY (+ (((rt0.c1) BETWEEN (t0.c1) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (('-1107810881') ISNULL) FULL OUTER JOIN rt0 ON CAST(t0.c0 AS NUMERIC) WHERE (((((t0.c2) ISNULL)) ISNULL)) ORDER BY (+ (((rt0.c1) BETWEEN (t0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL)) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (('-1107810881') ISNULL) FULL OUTER JOIN rt0 ON CAST(t0.c0 AS NUMERIC) ORDER BY (+ (((rt0.c1) BETWEEN (t0.c1) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (('-1107810881') ISNULL) FULL OUTER JOIN rt0 ON CAST(t0.c0 AS NUMERIC) WHERE (((((t0.c2) ISNULL)) ISNULL)) ORDER BY (+ (((rt0.c1) BETWEEN (t0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (t0.c2);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (rt0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c0) IS TRUE))IS NOT(rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) IS TRUE))IS NOT(rt0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (rt0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c0) IS TRUE))IS NOT(rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) IS TRUE))IS NOT(rt0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (rt0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c0) IS TRUE))IS NOT(rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN (rt0.c2)) IN ())) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN (rt0.c2)) IN ())) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN (rt0.c2)) IN ())) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)) END) ORDER BY CASE ((rt0.c0)<=(vt0.c0))  WHEN ((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)&(rt0.c2)) END, ((CAST('1952069241' AS BLOB)) NOT BETWEEN (CASE rt0.c1  WHEN 0Xffffffffa2fdbf37 THEN 866304894 ELSE vt0.c0 END) AND (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c0)<=(vt0.c0))  WHEN ((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)&(rt0.c2)) END, ((CAST('1952069241' AS BLOB)) NOT BETWEEN (CASE rt0.c1  WHEN 0Xffffffffa2fdbf37 THEN 866304894 ELSE vt0.c0 END) AND (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)) END) ORDER BY CASE ((rt0.c0)<=(vt0.c0))  WHEN ((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)&(rt0.c2)) END, ((CAST('1952069241' AS BLOB)) NOT BETWEEN (CASE rt0.c1  WHEN 0Xffffffffa2fdbf37 THEN 866304894 ELSE vt0.c0 END) AND (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c0)<=(vt0.c0))  WHEN ((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)&(rt0.c2)) END, ((CAST('1952069241' AS BLOB)) NOT BETWEEN (CASE rt0.c1  WHEN 0Xffffffffa2fdbf37 THEN 866304894 ELSE vt0.c0 END) AND (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)) END) ORDER BY CASE ((rt0.c0)<=(vt0.c0))  WHEN ((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)&(rt0.c2)) END, ((CAST('1952069241' AS BLOB)) NOT BETWEEN (CASE rt0.c1  WHEN 0Xffffffffa2fdbf37 THEN 866304894 ELSE vt0.c0 END) AND (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c2 COLLATE BINARY, CASE rt1.c2  WHEN t0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)<=(rt1.c1))))<>((CASE WHEN t0.c2 THEN t0.c2 ELSE rt1.c1 END, x'', (+ (rt1.c2))))) CROSS JOIN rt0 ON (('1952335365') NOTNULL) INNER JOIN t0 ON (((t0.c2) NOTNULL) IN (vt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(x'')))AND(rt0.c0)))) WHERE (CAST(((rt0.c0)GLOB(t0.c1)) AS TEXT)) ORDER BY (('G_H	A')>=(((t0.c1) IS TRUE))) DESC, (((LIKELIHOOD(DISTINCT t0.c2, 0.30975826237991455)))<=((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN 0X44146810 WHEN rt0.c1 THEN NULL ELSE rt1.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)GLOB(t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((rt1.c2 COLLATE BINARY, CASE rt1.c2  WHEN t0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)<=(rt1.c1))))!=((CASE WHEN t0.c2 THEN t0.c2 ELSE rt1.c1 END, x'', (+ (rt1.c2))))) CROSS JOIN rt0 ON (('1952335365') NOTNULL) INNER JOIN t0 ON (((t0.c2) NOTNULL) IN (vt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(x'')))AND(rt0.c0)))) ORDER BY (('G_H	A')>=(((t0.c1) IS TRUE))) DESC, (((LIKELIHOOD(DISTINCT t0.c2, 0.30975826237991455)))<=((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN 0x44146810 WHEN rt0.c1 THEN NULL ELSE rt1.c2 END))) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c2 COLLATE BINARY, CASE rt1.c2  WHEN t0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)<=(rt1.c1))))<>((CASE WHEN t0.c2 THEN t0.c2 ELSE rt1.c1 END, x'', (+ (rt1.c2))))) CROSS JOIN rt0 ON (('1952335365') NOTNULL) INNER JOIN t0 ON (((t0.c2) NOTNULL) IN (vt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(x'')))AND(rt0.c0)))) WHERE (CAST(((rt0.c0)GLOB(t0.c1)) AS TEXT)) ORDER BY (('G_H	A')>=(((t0.c1) IS TRUE))) DESC, (((LIKELIHOOD(DISTINCT t0.c2, 0.30975826237991455)))<=((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN 0X44146810 WHEN rt0.c1 THEN NULL ELSE rt1.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)GLOB(t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((rt1.c2 COLLATE BINARY, CASE rt1.c2  WHEN t0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)<=(rt1.c1))))!=((CASE WHEN t0.c2 THEN t0.c2 ELSE rt1.c1 END, x'', (+ (rt1.c2))))) CROSS JOIN rt0 ON (('1952335365') NOTNULL) INNER JOIN t0 ON (((t0.c2) NOTNULL) IN (vt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(x'')))AND(rt0.c0)))) ORDER BY (('G_H	A')>=(((t0.c1) IS TRUE))) DESC, (((LIKELIHOOD(DISTINCT t0.c2, 0.30975826237991455)))<=((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN 0x44146810 WHEN rt0.c1 THEN NULL ELSE rt1.c2 END))) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c2 COLLATE BINARY, CASE rt1.c2  WHEN t0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)<=(rt1.c1))))<>((CASE WHEN t0.c2 THEN t0.c2 ELSE rt1.c1 END, x'', (+ (rt1.c2))))) CROSS JOIN rt0 ON (('1952335365') NOTNULL) INNER JOIN t0 ON (((t0.c2) NOTNULL) IN (vt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(x'')))AND(rt0.c0)))) WHERE (CAST(((rt0.c0)GLOB(t0.c1)) AS TEXT)) ORDER BY (('G_H	A')>=(((t0.c1) IS TRUE))) DESC, (((LIKELIHOOD(DISTINCT t0.c2, 0.30975826237991455)))<=((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN 0X44146810 WHEN rt0.c1 THEN NULL ELSE rt1.c2 END))) DESC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC)) ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), (((((rt0.c1))<>((rt0.c1))))LIKE(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), (((((rt0.c1))!=((rt0.c1))))LIKE(rt0.c2 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC)) ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), (((((rt0.c1))<>((rt0.c1))))LIKE(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), (((((rt0.c1))!=((rt0.c1))))LIKE(rt0.c2 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC)) ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), (((((rt0.c1))<>((rt0.c1))))LIKE(rt0.c2 COLLATE NOCASE));
SELECT ALL * FROM vt0, t0, rt0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, t0, rt0, rt1);
SELECT ALL * FROM vt0, t0, rt0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, t0, rt0, rt1);
SELECT ALL * FROM vt0, t0, rt0, rt1 WHERE (rt0.c0);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (CASE WHEN rt1.c1 THEN rt0.c0 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END WHEN (((vt0.c0))==((t0.c2))) THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))AND(t0.c1)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 THEN rt0.c0 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END WHEN (((vt0.c0))==((t0.c2))) THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))AND(t0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM t0, rt1, vt0, rt0);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (CASE WHEN rt1.c1 THEN rt0.c0 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END WHEN (((vt0.c0))==((t0.c2))) THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))AND(t0.c1)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 THEN rt0.c0 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END WHEN (((vt0.c0))==((t0.c2))) THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))AND(t0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM t0, rt1, vt0, rt0);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (CASE WHEN rt1.c1 THEN rt0.c0 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END WHEN (((vt0.c0))==((t0.c2))) THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))AND(t0.c1)))AND(rt0.c2)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY x'b9a7' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY x'b9a7' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY x'b9a7' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY x'b9a7' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY x'b9a7' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (CASE (rt0.c0 IN (t0.c2))  WHEN ((t0.c0)<=(t0.c1)) THEN rt1.c0 COLLATE BINARY WHEN (rt1.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(rt1.c0)))OR(rt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (('554242164')||(rt1.c0)) ELSE ((t0.c1) BETWEEN (t0.c2) AND (rt1.c0)) END) ORDER BY (CASE WHEN 'xc*ⓥayp쵭I[]' THEN rt1.c1 ELSE rt1.c1 END IN ()) DESC, (NOT (CASE rt0.c0  WHEN rt1.c2 THEN t0.c1 ELSE rt0.c2 END)), NULLIF(DISTINCT rt0.c1, DATE(t0.c2, rt1.c0, t0.c2, t0.c2, rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN (t0.c2))  WHEN ((t0.c0)<=(t0.c1)) THEN rt1.c0 COLLATE BINARY WHEN (rt1.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(rt1.c0)))OR(rt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (('554242164')||(rt1.c0)) ELSE ((t0.c1) BETWEEN (t0.c2) AND (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1, rt0, t0 ORDER BY (CASE WHEN 'xc*ⓥayp쵭I[]' THEN rt1.c1 ELSE rt1.c1 END IN ()) DESC, (NOT (CASE rt0.c0  WHEN rt1.c2 THEN t0.c1 ELSE rt0.c2 END)), NULLIF(DISTINCT rt0.c1, DATE(t0.c2, rt1.c0, t0.c2, t0.c2, rt1.c2)));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (CASE (rt0.c0 IN (t0.c2))  WHEN ((t0.c0)<=(t0.c1)) THEN rt1.c0 COLLATE BINARY WHEN (rt1.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(rt1.c0)))OR(rt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (('554242164')||(rt1.c0)) ELSE ((t0.c1) BETWEEN (t0.c2) AND (rt1.c0)) END) ORDER BY (CASE WHEN 'xc*ⓥayp쵭I[]' THEN rt1.c1 ELSE rt1.c1 END IN ()) DESC, (NOT (CASE rt0.c0  WHEN rt1.c2 THEN t0.c1 ELSE rt0.c2 END)), NULLIF(DISTINCT rt0.c1, DATE(t0.c2, rt1.c0, t0.c2, t0.c2, rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN (t0.c2))  WHEN ((t0.c0)<=(t0.c1)) THEN rt1.c0 COLLATE BINARY WHEN (rt1.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(rt1.c0)))OR(rt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (('554242164')||(rt1.c0)) ELSE ((t0.c1) BETWEEN (t0.c2) AND (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1, rt0, t0 ORDER BY (CASE WHEN 'xc*ⓥayp쵭I[]' THEN rt1.c1 ELSE rt1.c1 END IN ()) DESC, (NOT (CASE rt0.c0  WHEN rt1.c2 THEN t0.c1 ELSE rt0.c2 END)), NULLIF(DISTINCT rt0.c1, DATE(t0.c2, rt1.c0, t0.c2, t0.c2, rt1.c2)));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (CASE (rt0.c0 IN (t0.c2))  WHEN ((t0.c0)<=(t0.c1)) THEN rt1.c0 COLLATE BINARY WHEN (rt1.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(rt1.c0)))OR(rt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (('554242164')||(rt1.c0)) ELSE ((t0.c1) BETWEEN (t0.c2) AND (rt1.c0)) END) ORDER BY (CASE WHEN 'xc*ⓥayp쵭I[]' THEN rt1.c1 ELSE rt1.c1 END IN ()) DESC, (NOT (CASE rt0.c0  WHEN rt1.c2 THEN t0.c1 ELSE rt0.c2 END)), NULLIF(DISTINCT rt0.c1, DATE(t0.c2, rt1.c0, t0.c2, t0.c2, rt1.c2));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON TIME(((vt0.c0)<>(rt0.c2)), rt0.c1 COLLATE NOCASE, rt0.c2) INNER JOIN rt0 ON 0xffffffffe6dccd66 WHERE ((NULL IN (CAST(rt1.c0 AS NUMERIC), (- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NULL IN (CAST(rt1.c0 AS NUMERIC), (- (rt1.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON TIME(((vt0.c0)<>(rt0.c2)), rt0.c1 COLLATE NOCASE, rt0.c2) INNER JOIN rt0 ON 0Xffffffffe6dccd66);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON TIME(((vt0.c0)<>(rt0.c2)), rt0.c1 COLLATE NOCASE, rt0.c2) INNER JOIN rt0 ON 0xffffffffe6dccd66 WHERE ((NULL IN (CAST(rt1.c0 AS NUMERIC), (- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NULL IN (CAST(rt1.c0 AS NUMERIC), (- (rt1.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON TIME(((vt0.c0)<>(rt0.c2)), rt0.c1 COLLATE NOCASE, rt0.c2) INNER JOIN rt0 ON 0Xffffffffe6dccd66);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON TIME(((vt0.c0)<>(rt0.c2)), rt0.c1 COLLATE NOCASE, rt0.c2) INNER JOIN rt0 ON 0xffffffffe6dccd66 WHERE ((NULL IN (CAST(rt1.c0 AS NUMERIC), (- (rt1.c2)))));
SELECT ALL * FROM t0 WHERE (((((t0.c2)=(x'')))<=(((t0.c2) ISNULL)))) ORDER BY ((((NULL) ISNULL))&(DATETIME(t0.c0, t0.c2, 0.8819466880920984)))  NULLS FIRST, (((-1.303385784E9)GLOB(-825557037)) IN ()), (((t0.c2)AND(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)=(x'')))<=(((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL) ISNULL))&(DATETIME(t0.c0, t0.c2, 0.8819466880920984)))  NULLS FIRST, (((-1.303385784E9)GLOB(-825557037)) IN ()), (((t0.c2)AND(t0.c1)) IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c2)=(x'')))<=(((t0.c2) ISNULL)))) ORDER BY ((((NULL) ISNULL))&(DATETIME(t0.c0, t0.c2, 0.8819466880920984)))  NULLS FIRST, (((-1.303385784E9)GLOB(-825557037)) IN ()), (((t0.c2)AND(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)=(x'')))<=(((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL) ISNULL))&(DATETIME(t0.c0, t0.c2, 0.8819466880920984)))  NULLS FIRST, (((-1.303385784E9)GLOB(-825557037)) IN ()), (((t0.c2)AND(t0.c1)) IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c2)=(x'')))<=(((t0.c2) ISNULL)))) ORDER BY ((((NULL) ISNULL))&(DATETIME(t0.c0, t0.c2, 0.8819466880920984)))  NULLS FIRST, (((-1.303385784E9)GLOB(-825557037)) IN ()), (((t0.c2)AND(t0.c1)) IN ());
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED NATURAL JOIN rt1 WHERE ((('yYK_')GLOB(ABS(x'120d'))));
SELECT SUM(count) FROM (SELECT (((('yYK_')GLOB(ABS(x'120d')))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED NATURAL JOIN rt1 WHERE ((('yYK_')GLOB(ABS(x'120d'))));
SELECT SUM(count) FROM (SELECT (((('yYK_')GLOB(ABS(x'120d')))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED NATURAL JOIN rt1 WHERE ((('yYK_')GLOB(ABS(x'120d'))));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN '971369098' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)IS(vt0.c0)))+(((vt0.c0)OR(0.38543625324597697)))) DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((CAST(vt0.c0 AS REAL)))<=((TRIM(DISTINCT vt0.c0, vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)!=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN '971369098' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))+(((vt0.c0)OR(0.38543625324597697)))) DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((CAST(vt0.c0 AS REAL)))<=((TRIM(DISTINCT vt0.c0, vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN '971369098' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)IS(vt0.c0)))+(((vt0.c0)OR(0.38543625324597697)))) DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((CAST(vt0.c0 AS REAL)))<=((TRIM(DISTINCT vt0.c0, vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)!=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN '971369098' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))+(((vt0.c0)OR(0.38543625324597697)))) DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((CAST(vt0.c0 AS REAL)))<=((TRIM(DISTINCT vt0.c0, vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN '971369098' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)IS(vt0.c0)))+(((vt0.c0)OR(0.38543625324597697)))) DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((CAST(vt0.c0 AS REAL)))<=((TRIM(DISTINCT vt0.c0, vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON rt0.c1 CROSS JOIN t0 ON (+ (rt0.c0)) RIGHT OUTER JOIN rt0 ON ((LTRIM(rt0.c2, t0.c1))IS(ABS(rt1.c2))) WHERE (((((t0.c1) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt0.c1 CROSS JOIN t0 ON (+ (rt0.c0)) RIGHT OUTER JOIN rt0 ON ((LTRIM(rt0.c2, t0.c1))IS(ABS(rt1.c2))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON rt0.c1 CROSS JOIN t0 ON (+ (rt0.c0)) RIGHT OUTER JOIN rt0 ON ((LTRIM(rt0.c2, t0.c1))IS(ABS(rt1.c2))) WHERE (((((t0.c1) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt0.c1 CROSS JOIN t0 ON (+ (rt0.c0)) RIGHT OUTER JOIN rt0 ON ((LTRIM(rt0.c2, t0.c1))IS(ABS(rt1.c2))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))<<(rt0.c1 COLLATE BINARY))) ORDER BY (NOT (((vt0.c0)%(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<<(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((vt0.c0)%(rt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))<<(rt0.c1 COLLATE BINARY))) ORDER BY (NOT (((vt0.c0)%(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<<(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((vt0.c0)%(rt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))<<(rt0.c1 COLLATE BINARY))) ORDER BY (NOT (((vt0.c0)%(rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((rt0.c1 IN (t0.c1, rt0.c2)))<((rt1.c1 IN ()))) INNER JOIN rt1 ON ((CASE WHEN NULL THEN rt0.c2 ELSE t0.c2 END) NOTNULL) LEFT OUTER JOIN rt0 ON rt1.c1 WHERE (CASE WHEN t0.c2 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((rt0.c1 IN (t0.c1, rt0.c2)))<((rt1.c1 IN ()))) INNER JOIN rt1 ON ((CASE WHEN NULL THEN rt0.c2 ELSE t0.c2 END) NOTNULL) LEFT OUTER JOIN rt0 ON rt1.c1);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((rt0.c1 IN (t0.c1, rt0.c2)))<((rt1.c1 IN ()))) INNER JOIN rt1 ON ((CASE WHEN NULL THEN rt0.c2 ELSE t0.c2 END) NOTNULL) LEFT OUTER JOIN rt0 ON rt1.c1 WHERE (CASE WHEN t0.c2 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((rt0.c1 IN (t0.c1, rt0.c2)))<((rt1.c1 IN ()))) INNER JOIN rt1 ON ((CASE WHEN NULL THEN rt0.c2 ELSE t0.c2 END) NOTNULL) LEFT OUTER JOIN rt0 ON rt1.c1);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((rt0.c1 IN (t0.c1, rt0.c2)))<((rt1.c1 IN ()))) INNER JOIN rt1 ON ((CASE WHEN NULL THEN rt0.c2 ELSE t0.c2 END) NOTNULL) LEFT OUTER JOIN rt0 ON rt1.c1 WHERE (CASE WHEN t0.c2 THEN rt1.c0 END COLLATE NOCASE);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt1 ON (((((x'f2fe')!=(t0.c2))))>((((t0.c0) NOT NULL)))) FULL OUTER JOIN rt0 ON (- (((((t0.c2)AND(t0.c0)))OR(1142188048)))) WHERE ((((CAST(rt0.c0 AS NUMERIC), ((rt0.c0)<=(t0.c1)), (NOT (t0.c1))))=((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt0.c2  WHEN '1216980979' THEN vt0.c0 ELSE rt1.c1 END, ((vt0.c0)>=(rt1.c0)))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN NULL THEN rt0.c2 END)) AND ((LIKELIHOOD(DISTINCT rt1.c2, 0.3638864126272494)))), rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS NUMERIC), ((rt0.c0)<=(t0.c1)), (NOT (t0.c1))))=((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt0.c2  WHEN '1216980979' THEN vt0.c0 ELSE rt1.c1 END, ((vt0.c0)>=(rt1.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt1 ON (((((x'f2fe')!=(t0.c2))))>((((t0.c0) NOT NULL)))) FULL OUTER JOIN rt0 ON (- (((((t0.c2)AND(t0.c0)))OR(1142188048)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN NULL THEN rt0.c2 END)) AND ((LIKELIHOOD(DISTINCT rt1.c2, 0.3638864126272494)))), rt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt1 ON (((((x'f2fe')!=(t0.c2))))>((((t0.c0) NOT NULL)))) FULL OUTER JOIN rt0 ON (- (((((t0.c2)AND(t0.c0)))OR(1142188048)))) WHERE ((((CAST(rt0.c0 AS NUMERIC), ((rt0.c0)<=(t0.c1)), (NOT (t0.c1))))=((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt0.c2  WHEN '1216980979' THEN vt0.c0 ELSE rt1.c1 END, ((vt0.c0)>=(rt1.c0)))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN NULL THEN rt0.c2 END)) AND ((LIKELIHOOD(DISTINCT rt1.c2, 0.3638864126272494)))), rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS NUMERIC), ((rt0.c0)<=(t0.c1)), (NOT (t0.c1))))=((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt0.c2  WHEN '1216980979' THEN vt0.c0 ELSE rt1.c1 END, ((vt0.c0)>=(rt1.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt1 ON (((((x'f2fe')!=(t0.c2))))>((((t0.c0) NOT NULL)))) FULL OUTER JOIN rt0 ON (- (((((t0.c2)AND(t0.c0)))OR(1142188048)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN NULL THEN rt0.c2 END)) AND ((LIKELIHOOD(DISTINCT rt1.c2, 0.3638864126272494)))), rt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt1 ON (((((x'f2fe')!=(t0.c2))))>((((t0.c0) NOT NULL)))) FULL OUTER JOIN rt0 ON (- (((((t0.c2)AND(t0.c0)))OR(1142188048)))) WHERE ((((CAST(rt0.c0 AS NUMERIC), ((rt0.c0)<=(t0.c1)), (NOT (t0.c1))))=((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt0.c2  WHEN '1216980979' THEN vt0.c0 ELSE rt1.c1 END, ((vt0.c0)>=(rt1.c0)))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN NULL THEN rt0.c2 END)) AND ((LIKELIHOOD(DISTINCT rt1.c2, 0.3638864126272494)))), rt1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c2, t0.c2, t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE BINARY, (((t0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c0, t0.c2, t0.c1))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), (+ (rt0.c0)), x'9a8d')) AND ((((rt0.c0)IS NOT(t0.c1)), NULL, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)), '1454123118')))) ORDER BY CASE HEX(DISTINCT t0.c1)  WHEN ((t0.c1)*(rt0.c1)) THEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END  NULLS FIRST, CAST((t0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, t0.c2, t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE BINARY, (((t0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c0, t0.c2, t0.c1))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), (+ (rt0.c0)), x'9a8d')) AND ((((rt0.c0)IS NOT(t0.c1)), NULL, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)), '1454123118')))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE HEX(DISTINCT t0.c1)  WHEN ((t0.c1)*(rt0.c1)) THEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END  NULLS FIRST, CAST((t0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c2, t0.c2, t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE BINARY, (((t0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c0, t0.c2, t0.c1))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), (+ (rt0.c0)), x'9a8d')) AND ((((rt0.c0)IS NOT(t0.c1)), NULL, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)), '1454123118')))) ORDER BY CASE HEX(DISTINCT t0.c1)  WHEN ((t0.c1)*(rt0.c1)) THEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END  NULLS FIRST, CAST((t0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, t0.c2, t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE BINARY, (((t0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c0, t0.c2, t0.c1))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), (+ (rt0.c0)), x'9a8d')) AND ((((rt0.c0)IS NOT(t0.c1)), NULL, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)), '1454123118')))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE HEX(DISTINCT t0.c1)  WHEN ((t0.c1)*(rt0.c1)) THEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END  NULLS FIRST, CAST((t0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c2, t0.c2, t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2 COLLATE BINARY, (((t0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c0, t0.c2, t0.c1))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), (+ (rt0.c0)), x'9a8d')) AND ((((rt0.c0)IS NOT(t0.c1)), NULL, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)), '1454123118')))) ORDER BY CASE HEX(DISTINCT t0.c1)  WHEN ((t0.c1)*(rt0.c1)) THEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END  NULLS FIRST, CAST((t0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((('-872233434')IS(t0.c0)))!=(SQLITE_COMPILEOPTION_GET(t0.c1))) WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))))AND(NULL)))OR((((t0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ORDER BY ((((t0.c1)>>(rt0.c1))) IS TRUE), ((TRIM(DISTINCT t0.c2))!=(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))))AND(NULL)))OR((((t0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((('-872233434')IS(t0.c0)))!=(SQLITE_COMPILEOPTION_GET(t0.c1))) ORDER BY ((((t0.c1)>>(rt0.c1))) IS TRUE), ((TRIM(DISTINCT t0.c2))!=(rt0.c2)) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((('-872233434')IS(t0.c0)))!=(SQLITE_COMPILEOPTION_GET(t0.c1))) WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))))AND(NULL)))OR((((t0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ORDER BY ((((t0.c1)>>(rt0.c1))) IS TRUE), ((TRIM(DISTINCT t0.c2))!=(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))))AND(NULL)))OR((((t0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((('-872233434')IS(t0.c0)))!=(SQLITE_COMPILEOPTION_GET(t0.c1))) ORDER BY ((((t0.c1)>>(rt0.c1))) IS TRUE), ((TRIM(DISTINCT t0.c2))!=(rt0.c2)) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((('-872233434')IS(t0.c0)))!=(SQLITE_COMPILEOPTION_GET(t0.c1))) WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))))AND(NULL)))OR((((t0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ORDER BY ((((t0.c1)>>(rt0.c1))) IS TRUE), ((TRIM(DISTINCT t0.c2))!=(rt0.c2)) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE x'597b' END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE x'597b' END);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE x'597b' END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE x'597b' END);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE x'597b' END WHERE (NULL);
SELECT * FROM rt1, vt0 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY ((HEX(rt1.c2))&(CASE WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((HEX(rt1.c2))&(CASE WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY ((HEX(rt1.c2))&(CASE WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((HEX(rt1.c2))&(CASE WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY ((HEX(rt1.c2))&(CASE WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((rt0.c2 IN (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt1.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((rt0.c2 IN (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt1.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((rt0.c2 IN (rt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (rt0.c2) ORDER BY rt0.c2 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY rt0.c2 COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (rt0.c2) ORDER BY rt0.c2 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY rt0.c2 COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (rt0.c2) ORDER BY rt0.c2 COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (IFNULL(DISTINCT RTRIM(rt1.c2), '')) ORDER BY ((((LIKELY(DISTINCT rt1.c0))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(COALESCE(DISTINCT rt1.c0, rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT RTRIM(rt1.c2), '')) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((LIKELY(DISTINCT rt1.c0))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(COALESCE(DISTINCT rt1.c0, rt1.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (IFNULL(DISTINCT RTRIM(rt1.c2), '')) ORDER BY ((((LIKELY(DISTINCT rt1.c0))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(COALESCE(DISTINCT rt1.c0, rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT RTRIM(rt1.c2), '')) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((LIKELY(DISTINCT rt1.c0))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(COALESCE(DISTINCT rt1.c0, rt1.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (IFNULL(DISTINCT RTRIM(rt1.c2), '')) ORDER BY ((((LIKELY(DISTINCT rt1.c0))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(COALESCE(DISTINCT rt1.c0, rt1.c2))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE (0.4277940667151694) ORDER BY (((rt1.c0))=((rt1.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((0.4277940667151694) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0))=((rt1.c1))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.4277940667151694) ORDER BY (((rt1.c0))=((rt1.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((0.4277940667151694) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0))=((rt1.c1))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.4277940667151694) ORDER BY (((rt1.c0))=((rt1.c1))) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.9848541178637918) BETWEEN ((('1867812496')&(t0.c2))) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((0.9848541178637918) BETWEEN ((('1867812496')&(t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.9848541178637918) BETWEEN ((('1867812496')&(t0.c2))) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((0.9848541178637918) BETWEEN ((('1867812496')&(t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.9848541178637918) BETWEEN ((('1867812496')&(t0.c2))) AND (t0.c2)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c1))<((vt0.c0))) THEN ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN json_quote(rt0.c1) THEN 0.3007131753845518 END WHERE (CASE WHEN NULL THEN ((rt0.c0)!=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((rt0.c0)<>(rt0.c1)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c1))<((vt0.c0))) THEN ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN json_quote(rt0.c1) THEN 0.3007131753845518 END);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c1))<((vt0.c0))) THEN ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN json_quote(rt0.c1) THEN 0.3007131753845518 END WHERE (CASE WHEN NULL THEN ((rt0.c0)!=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((rt0.c0)<>(rt0.c1)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c1))<((vt0.c0))) THEN ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN json_quote(rt0.c1) THEN 0.3007131753845518 END);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c1))<((vt0.c0))) THEN ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN json_quote(rt0.c1) THEN 0.3007131753845518 END WHERE (CASE WHEN NULL THEN ((rt0.c0)!=(rt0.c1)) END);
SELECT * FROM t0 WHERE (((CAST('-1559909236' AS TEXT)) ISNULL)) ORDER BY (CAST(t0.c1 AS REAL) IN (((((t0.c2)AND(t0.c1)))OR(t0.c0)), ((t0.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST('-1559909236' AS TEXT)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c1 AS REAL) IN (((((t0.c2)AND(t0.c1)))OR(t0.c0)), ((t0.c1) IS TRUE)))  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST('-1559909236' AS TEXT)) ISNULL)) ORDER BY (CAST(t0.c1 AS REAL) IN (((((t0.c2)AND(t0.c1)))OR(t0.c0)), ((t0.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST('-1559909236' AS TEXT)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c1 AS REAL) IN (((((t0.c2)AND(t0.c1)))OR(t0.c0)), ((t0.c1) IS TRUE)))  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST('-1559909236' AS TEXT)) ISNULL)) ORDER BY (CAST(t0.c1 AS REAL) IN (((((t0.c2)AND(t0.c1)))OR(t0.c0)), ((t0.c1) IS TRUE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt1, rt0 WHERE ((0.4978307329792888 IN ()));
SELECT SUM(count) FROM (SELECT (((0.4978307329792888 IN ())) IS TRUE)  as count FROM t0, vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, rt0 WHERE ((0.4978307329792888 IN ()));
SELECT SUM(count) FROM (SELECT (((0.4978307329792888 IN ())) IS TRUE)  as count FROM t0, vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, rt0 WHERE ((0.4978307329792888 IN ()));
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (rt0.c2)));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (x'ff00');
SELECT SUM(count) FROM (SELECT ALL ((x'ff00') IS TRUE)  as count FROM rt1 NOT INDEXED, rt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (x'ff00');
SELECT SUM(count) FROM (SELECT ALL ((x'ff00') IS TRUE)  as count FROM rt1 NOT INDEXED, rt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (x'ff00');
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((t0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (LOWER(DISTINCT ('95640817' IN ()))) ORDER BY (NOT (t0.c0)) COLLATE BINARY ASC  NULLS LAST, '-825557037' ASC, CASE WHEN json_quote('-1947074854') THEN CASE WHEN vt0.c0 THEN t0.c2 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ('95640817' IN ()))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (NOT (t0.c0)) COLLATE BINARY ASC  NULLS LAST, '-825557037' ASC, CASE WHEN json_quote('-1947074854') THEN CASE WHEN vt0.c0 THEN t0.c2 END END ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (LOWER(DISTINCT ('95640817' IN ()))) ORDER BY (NOT (t0.c0)) COLLATE BINARY ASC  NULLS LAST, '-825557037' ASC, CASE WHEN json_quote('-1947074854') THEN CASE WHEN vt0.c0 THEN t0.c2 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ('95640817' IN ()))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (NOT (t0.c0)) COLLATE BINARY ASC  NULLS LAST, '-825557037' ASC, CASE WHEN json_quote('-1947074854') THEN CASE WHEN vt0.c0 THEN t0.c2 END END ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (LOWER(DISTINCT ('95640817' IN ()))) ORDER BY (NOT (t0.c0)) COLLATE BINARY ASC  NULLS LAST, '-825557037' ASC, CASE WHEN json_quote('-1947074854') THEN CASE WHEN vt0.c0 THEN t0.c2 END END ASC;
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c1) AND ((vt0.c0 IN ())))) ORDER BY (-207110756 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c1) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (-207110756 IN ()) ASC);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c1) AND ((vt0.c0 IN ())))) ORDER BY (-207110756 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c1) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (-207110756 IN ()) ASC);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c1) AND ((vt0.c0 IN ())))) ORDER BY (-207110756 IN ()) ASC;
SELECT COUNT(*) FROM rt1 WHERE (81366935) ORDER BY json_insert(rt1.c0 COLLATE NOCASE, ((NULL)|(rt1.c0)), (((rt1.c0, rt1.c0, rt1.c0))==((rt1.c2, rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((81366935) IS TRUE)  as count FROM rt1 ORDER BY json_insert(rt1.c0 COLLATE NOCASE, ((NULL)|(rt1.c0)), (((rt1.c0, rt1.c0, rt1.c0))==((rt1.c2, rt1.c2, rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (81366935) ORDER BY json_insert(rt1.c0 COLLATE NOCASE, ((NULL)|(rt1.c0)), (((rt1.c0, rt1.c0, rt1.c0))==((rt1.c2, rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((81366935) IS TRUE)  as count FROM rt1 ORDER BY json_insert(rt1.c0 COLLATE NOCASE, ((NULL)|(rt1.c0)), (((rt1.c0, rt1.c0, rt1.c0))==((rt1.c2, rt1.c2, rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (81366935) ORDER BY json_insert(rt1.c0 COLLATE NOCASE, ((NULL)|(rt1.c0)), (((rt1.c0, rt1.c0, rt1.c0))==((rt1.c2, rt1.c2, rt1.c0))));
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END)>=(0Xffffffffeaf2ba74)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c1 END)>=(0xffffffffeaf2ba74))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END)>=(0Xffffffffeaf2ba74)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c1 END)>=(0xffffffffeaf2ba74))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END)>=(0Xffffffffeaf2ba74)));
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0)*(rt0.c1)) IN ((rt0.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(rt0.c1)) IN ((rt0.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0)*(rt0.c1)) IN ((rt0.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(rt0.c1)) IN ((rt0.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0)*(rt0.c1)) IN ((rt0.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM t0, rt1 WHERE (((((t0.c0 COLLATE BINARY)OR((rt1.c2 IN ()))))OR(((NULL) BETWEEN (rt1.c0) AND (t0.c2))))) ORDER BY ((NULL) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CAST(rt1.c2 AS REAL))) ASC, t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE BINARY)OR((rt1.c2 IN ()))))OR(((NULL) BETWEEN (rt1.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((NULL) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CAST(rt1.c2 AS REAL))) ASC, t0.c2 ASC  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (((((t0.c0 COLLATE BINARY)OR((rt1.c2 IN ()))))OR(((NULL) BETWEEN (rt1.c0) AND (t0.c2))))) ORDER BY ((NULL) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CAST(rt1.c2 AS REAL))) ASC, t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE BINARY)OR((rt1.c2 IN ()))))OR(((NULL) BETWEEN (rt1.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((NULL) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CAST(rt1.c2 AS REAL))) ASC, t0.c2 ASC  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (((((t0.c0 COLLATE BINARY)OR((rt1.c2 IN ()))))OR(((NULL) BETWEEN (rt1.c0) AND (t0.c2))))) ORDER BY ((NULL) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CAST(rt1.c2 AS REAL))) ASC, t0.c2 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c0 END)) DESC, (+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c0 END)) DESC, (+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c0 END)) DESC, (+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c0 END)) DESC, (+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (CASE WHEN rt0.c0 THEN rt0.c0 END)) DESC, (+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC;
SELECT * FROM rt0, rt1 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((- (NULL)));
SELECT ALL * FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)=((rt1.c1 IN ())))) ORDER BY (((rt1.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(vt0.c0)))) AND ((((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)))))  NULLS FIRST, rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)==((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(vt0.c0)))) AND ((((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)))))  NULLS FIRST, rt1.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)=((rt1.c1 IN ())))) ORDER BY (((rt1.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(vt0.c0)))) AND ((((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)))))  NULLS FIRST, rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)==((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(vt0.c0)))) AND ((((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)))))  NULLS FIRST, rt1.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)=((rt1.c1 IN ())))) ORDER BY (((rt1.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(vt0.c0)))) AND ((((((vt0.c0)AND(rt1.c2)))AND(rt1.c2)))))  NULLS FIRST, rt1.c0  NULLS FIRST;
SELECT * FROM vt0, rt0, t0 WHERE ((- (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((- (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((- (CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(x'81f0')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(x'81f0')) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(x'81f0')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(x'81f0')) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c0)))AND(x'81f0')) IN ()));
SELECT * FROM t0, rt1, vt0 WHERE (CAST(t0.c2 COLLATE RTRIM AS INTEGER)) ORDER BY ((((t0.c0 IN ())))>=((((rt1.c0) IS TRUE)))), ((TRIM(DISTINCT rt1.c1, t0.c1)) BETWEEN ((((x'', t0.c0, t0.c0)) BETWEEN ((t0.c2, rt1.c0, rt1.c2)) AND ((t0.c1, t0.c1, t0.c2)))) AND (TRIM(DISTINCT NULL, '2126545451')))  NULLS FIRST, ((((t0.c1)%(rt1.c1))) BETWEEN (CASE t0.c0  WHEN x'43666cc0' THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 ELSE rt1.c0 END) AND ((((rt1.c1, t0.c2, t0.c2)) BETWEEN ((rt1.c2, rt1.c0, '0.4893926887851988')) AND ((t0.c2, t0.c1, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY ((((t0.c0 IN ())))>=((((rt1.c0) IS TRUE)))), ((TRIM(DISTINCT rt1.c1, t0.c1)) BETWEEN ((((x'', t0.c0, t0.c0)) BETWEEN ((t0.c2, rt1.c0, rt1.c2)) AND ((t0.c1, t0.c1, t0.c2)))) AND (TRIM(DISTINCT NULL, '2126545451')))  NULLS FIRST, ((((t0.c1)%(rt1.c1))) BETWEEN (CASE t0.c0  WHEN x'43666cc0' THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 ELSE rt1.c0 END) AND ((((rt1.c1, t0.c2, t0.c2)) BETWEEN ((rt1.c2, rt1.c0, '0.4893926887851988')) AND ((t0.c2, t0.c1, vt0.c0)))))  NULLS FIRST);
SELECT * FROM t0, rt1, vt0 WHERE (CAST(t0.c2 COLLATE RTRIM AS INTEGER)) ORDER BY ((((t0.c0 IN ())))>=((((rt1.c0) IS TRUE)))), ((TRIM(DISTINCT rt1.c1, t0.c1)) BETWEEN ((((x'', t0.c0, t0.c0)) BETWEEN ((t0.c2, rt1.c0, rt1.c2)) AND ((t0.c1, t0.c1, t0.c2)))) AND (TRIM(DISTINCT NULL, '2126545451')))  NULLS FIRST, ((((t0.c1)%(rt1.c1))) BETWEEN (CASE t0.c0  WHEN x'43666cc0' THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 ELSE rt1.c0 END) AND ((((rt1.c1, t0.c2, t0.c2)) BETWEEN ((rt1.c2, rt1.c0, '0.4893926887851988')) AND ((t0.c2, t0.c1, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY ((((t0.c0 IN ())))>=((((rt1.c0) IS TRUE)))), ((TRIM(DISTINCT rt1.c1, t0.c1)) BETWEEN ((((x'', t0.c0, t0.c0)) BETWEEN ((t0.c2, rt1.c0, rt1.c2)) AND ((t0.c1, t0.c1, t0.c2)))) AND (TRIM(DISTINCT NULL, '2126545451')))  NULLS FIRST, ((((t0.c1)%(rt1.c1))) BETWEEN (CASE t0.c0  WHEN x'43666cc0' THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 ELSE rt1.c0 END) AND ((((rt1.c1, t0.c2, t0.c2)) BETWEEN ((rt1.c2, rt1.c0, '0.4893926887851988')) AND ((t0.c2, t0.c1, vt0.c0)))))  NULLS FIRST);
SELECT * FROM t0, rt1, vt0 WHERE (CAST(t0.c2 COLLATE RTRIM AS INTEGER)) ORDER BY ((((t0.c0 IN ())))>=((((rt1.c0) IS TRUE)))), ((TRIM(DISTINCT rt1.c1, t0.c1)) BETWEEN ((((x'', t0.c0, t0.c0)) BETWEEN ((t0.c2, rt1.c0, rt1.c2)) AND ((t0.c1, t0.c1, t0.c2)))) AND (TRIM(DISTINCT NULL, '2126545451')))  NULLS FIRST, ((((t0.c1)%(rt1.c1))) BETWEEN (CASE t0.c0  WHEN x'43666cc0' THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 ELSE rt1.c0 END) AND ((((rt1.c1, t0.c2, t0.c2)) BETWEEN ((rt1.c2, rt1.c0, '0.4893926887851988')) AND ((t0.c2, t0.c1, vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((((rt1.c1) ISNULL)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) ISNULL)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((((rt1.c1) ISNULL)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) ISNULL)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((((rt1.c1) ISNULL)) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC;
SELECT ALL * FROM t0, vt0, rt1, rt0 WHERE (CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY ((((rt0.c0)-(t0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt1, rt0 ORDER BY ((((rt0.c0)-(t0.c2))) IS FALSE));
SELECT ALL * FROM t0, vt0, rt1, rt0 WHERE (CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY ((((rt0.c0)-(t0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt1, rt0 ORDER BY ((((rt0.c0)-(t0.c2))) IS FALSE));
SELECT ALL * FROM t0, vt0, rt1, rt0 WHERE (CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY ((((rt0.c0)-(t0.c2))) IS FALSE);
SELECT * FROM t0, rt0, rt1, vt0 WHERE (1216980979);
SELECT SUM(count) FROM (SELECT ((1216980979) IS TRUE)  as count FROM t0, rt0, rt1, vt0);
SELECT * FROM t0, rt0, rt1, vt0 WHERE (1216980979);
SELECT SUM(count) FROM (SELECT ((1216980979) IS TRUE)  as count FROM t0, rt0, rt1, vt0);
SELECT * FROM t0, rt0, rt1, vt0 WHERE (1216980979);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((((t0.c2)OR(t0.c0)))OR(((t0.c1)<<(t0.c1)))))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t0.c0)))AND(2118349647)))AND(CAST(t0.c0 AS REAL))))OR(((((((((NULL)OR(t0.c2)))OR(t0.c0)))OR(x'7d68')))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c2)OR(t0.c0)))OR(((t0.c1)<<(t0.c1)))))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t0.c0)))AND(2118349647)))AND(CAST(t0.c0 AS REAL))))OR(((((((((NULL)OR(t0.c2)))OR(t0.c0)))OR(x'7d68')))AND(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((((t0.c2)OR(t0.c0)))OR(((t0.c1)<<(t0.c1)))))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t0.c0)))AND(2118349647)))AND(CAST(t0.c0 AS REAL))))OR(((((((((NULL)OR(t0.c2)))OR(t0.c0)))OR(x'7d68')))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c2)OR(t0.c0)))OR(((t0.c1)<<(t0.c1)))))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t0.c0)))AND(2118349647)))AND(CAST(t0.c0 AS REAL))))OR(((((((((NULL)OR(t0.c2)))OR(t0.c0)))OR(x'7d68')))AND(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((((t0.c2)OR(t0.c0)))OR(((t0.c1)<<(t0.c1)))))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t0.c0)))AND(2118349647)))AND(CAST(t0.c0 AS REAL))))OR(((((((((NULL)OR(t0.c2)))OR(t0.c0)))OR(x'7d68')))AND(t0.c2)))));
SELECT * FROM vt0, t0 WHERE (((((((((((t0.c0) IS FALSE))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))OR(CAST(t0.c1 AS NUMERIC))))OR(((t0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(t0.c1 COLLATE NOCASE))) ORDER BY ((((t0.c0)>(0Xfffffffffc81c18b))) BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c2) BETWEEN (t0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) IS FALSE))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))OR(CAST(t0.c1 AS NUMERIC))))OR(((t0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0)>(0Xfffffffffc81c18b))) BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (((((((((((t0.c0) IS FALSE))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))OR(CAST(t0.c1 AS NUMERIC))))OR(((t0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(t0.c1 COLLATE NOCASE))) ORDER BY ((((t0.c0)>(0Xfffffffffc81c18b))) BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c2) BETWEEN (t0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) IS FALSE))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))OR(CAST(t0.c1 AS NUMERIC))))OR(((t0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0)>(0Xfffffffffc81c18b))) BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (((((((((((t0.c0) IS FALSE))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))OR(CAST(t0.c1 AS NUMERIC))))OR(((t0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(t0.c1 COLLATE NOCASE))) ORDER BY ((((t0.c0)>(0Xfffffffffc81c18b))) BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c2) BETWEEN (t0.c1) AND (vt0.c0))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)IS NOT(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)IS NOT(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)IS NOT(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)IS NOT(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)IS NOT(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN (vt0.c0 IN ()) WHEN (NULL IN ()) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN (vt0.c0 IN ()) WHEN (NULL IN ()) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN (vt0.c0 IN ()) WHEN (NULL IN ()) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN (vt0.c0 IN ()) WHEN (NULL IN ()) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN (vt0.c0 IN ()) WHEN (NULL IN ()) THEN vt0.c0 END);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)/('II'))  WHEN ((rt1.c2) NOTNULL) THEN ((vt0.c0)-(rt1.c1)) ELSE CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END END) ORDER BY (((rt1.c2) NOTNULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0)/('II'))  WHEN ((rt1.c2) NOTNULL) THEN ((vt0.c0)-(rt1.c1)) ELSE CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END END) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2) NOTNULL) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)/('II'))  WHEN ((rt1.c2) NOTNULL) THEN ((vt0.c0)-(rt1.c1)) ELSE CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END END) ORDER BY (((rt1.c2) NOTNULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0)/('II'))  WHEN ((rt1.c2) NOTNULL) THEN ((vt0.c0)-(rt1.c1)) ELSE CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END END) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2) NOTNULL) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)/('II'))  WHEN ((rt1.c2) NOTNULL) THEN ((vt0.c0)-(rt1.c1)) ELSE CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END END) ORDER BY (((rt1.c2) NOTNULL) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON t0.c1 WHERE ((NOT ((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, t0.c2, t0.c0)) AND ((0xffffffffbdc329f2, t0.c2, rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, t0.c2, t0.c0)) AND ((0Xffffffffbdc329f2, t0.c2, rt1.c2)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON t0.c1);
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON t0.c1 WHERE ((NOT ((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, t0.c2, t0.c0)) AND ((0xffffffffbdc329f2, t0.c2, rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, t0.c2, t0.c0)) AND ((0Xffffffffbdc329f2, t0.c2, rt1.c2)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON t0.c1);
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON t0.c1 WHERE ((NOT ((((t0.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, t0.c2, t0.c0)) AND ((0xffffffffbdc329f2, t0.c2, rt1.c2))))));
SELECT * FROM t0 INNER JOIN rt1 ON CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c1))  WHEN CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN '' END THEN CASE WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END END FULL OUTER JOIN rt0 ON t0.c0 WHERE (((((rt1.c0)=(rt1.c2))) NOT BETWEEN (t0.c1) AND (TRIM(DISTINCT rt1.c0, rt1.c1)))) ORDER BY '-7022391' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)=(rt1.c2))) NOT BETWEEN (t0.c1) AND (TRIM(DISTINCT rt1.c0, rt1.c1)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c1))  WHEN CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN '' END THEN CASE WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END END FULL OUTER JOIN rt0 ON t0.c0 ORDER BY '-7022391' COLLATE BINARY DESC);
SELECT * FROM t0 INNER JOIN rt1 ON CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c1))  WHEN CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN '' END THEN CASE WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END END FULL OUTER JOIN rt0 ON t0.c0 WHERE (((((rt1.c0)=(rt1.c2))) NOT BETWEEN (t0.c1) AND (TRIM(DISTINCT rt1.c0, rt1.c1)))) ORDER BY '-7022391' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)=(rt1.c2))) NOT BETWEEN (t0.c1) AND (TRIM(DISTINCT rt1.c0, rt1.c1)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c1))  WHEN CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN '' END THEN CASE WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END END FULL OUTER JOIN rt0 ON t0.c0 ORDER BY '-7022391' COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt1 WHERE ('0.6767531748575253') ORDER BY (~ (CASE '-1128246465'  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.6767531748575253') IS TRUE)  as count FROM rt1 ORDER BY (~ (CASE '-1128246465'  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ('0.6767531748575253') ORDER BY (~ (CASE '-1128246465'  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.6767531748575253') IS TRUE)  as count FROM rt1 ORDER BY (~ (CASE '-1128246465'  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ('0.6767531748575253') ORDER BY (~ (CASE '-1128246465'  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOTNULL))))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOTNULL))))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOTNULL))))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOTNULL))))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOTNULL))))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((+ (0.9229607171687454))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (0.9229607171687454))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (0.9229607171687454))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (0.9229607171687454))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (0.9229607171687454))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (((UNLIKELY(rt1.c0))+((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt1.c0))+((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0, rt1);
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (((UNLIKELY(rt1.c0))+((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt1.c0))+((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0, rt1);
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (((UNLIKELY(rt1.c0))+((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1)<<(0X64078608)) THEN CAST(rt1.c1 AS INTEGER) WHEN ((rt1.c2)||(rt1.c1)) THEN rt1.c1 WHEN ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN CAST(0.08062569782638318 AS BLOB) WHEN CAST(rt1.c2 AS REAL) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1)<<(rt1.c2)) ELSE rt1.c2 COLLATE RTRIM END) ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)<<(0x64078608)) THEN CAST(rt1.c1 AS INTEGER) WHEN ((rt1.c2)||(rt1.c1)) THEN rt1.c1 WHEN ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN CAST(0.08062569782638318 AS BLOB) WHEN CAST(rt1.c2 AS REAL) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1)<<(rt1.c2)) ELSE rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1)<<(0X64078608)) THEN CAST(rt1.c1 AS INTEGER) WHEN ((rt1.c2)||(rt1.c1)) THEN rt1.c1 WHEN ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN CAST(0.08062569782638318 AS BLOB) WHEN CAST(rt1.c2 AS REAL) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1)<<(rt1.c2)) ELSE rt1.c2 COLLATE RTRIM END) ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)<<(0x64078608)) THEN CAST(rt1.c1 AS INTEGER) WHEN ((rt1.c2)||(rt1.c1)) THEN rt1.c1 WHEN ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN CAST(0.08062569782638318 AS BLOB) WHEN CAST(rt1.c2 AS REAL) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1)<<(rt1.c2)) ELSE rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1)<<(0X64078608)) THEN CAST(rt1.c1 AS INTEGER) WHEN ((rt1.c2)||(rt1.c1)) THEN rt1.c1 WHEN ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN CAST(0.08062569782638318 AS BLOB) WHEN CAST(rt1.c2 AS REAL) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1)<<(rt1.c2)) ELSE rt1.c2 COLLATE RTRIM END) ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) IN ());
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON CHANGES() CROSS JOIN vt0 ON (((rt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON CHANGES() CROSS JOIN vt0 ON (((rt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON CHANGES() CROSS JOIN vt0 ON (((rt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON CHANGES() CROSS JOIN vt0 ON (((rt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON CHANGES() CROSS JOIN vt0 ON (((rt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c2)) IN ()) WHERE (t0.c2);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (- ((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FULL OUTER JOIN rt1 ON (((rt0.c2, t0.c1, rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, t0.c1, rt1.c0)) AND ((t0.c1, rt1.c1, rt1.c1))), ((t0.c1) NOT NULL), (((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt1.c2, ((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2) NOT BETWEEN (t0.c1) AND (rt1.c2))))) WHERE (((NULL)>>(rt0.c0)) COLLATE NOCASE) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>>(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (- ((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FULL OUTER JOIN rt1 ON (((rt0.c2, t0.c1, rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, t0.c1, rt1.c0)) AND ((t0.c1, rt1.c1, rt1.c1))), ((t0.c1) NOT NULL), (((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt1.c2, ((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2) NOT BETWEEN (t0.c1) AND (rt1.c2))))) ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (- ((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FULL OUTER JOIN rt1 ON (((rt0.c2, t0.c1, rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, t0.c1, rt1.c0)) AND ((t0.c1, rt1.c1, rt1.c1))), ((t0.c1) NOT NULL), (((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt1.c2, ((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2) NOT BETWEEN (t0.c1) AND (rt1.c2))))) WHERE (((NULL)>>(rt0.c0)) COLLATE NOCASE) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>>(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (- ((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FULL OUTER JOIN rt1 ON (((rt0.c2, t0.c1, rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, t0.c1, rt1.c0)) AND ((t0.c1, rt1.c1, rt1.c1))), ((t0.c1) NOT NULL), (((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt1.c2, ((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2) NOT BETWEEN (t0.c1) AND (rt1.c2))))) ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (- ((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FULL OUTER JOIN rt1 ON (((rt0.c2, t0.c1, rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, t0.c1, rt1.c0)) AND ((t0.c1, rt1.c1, rt1.c1))), ((t0.c1) NOT NULL), (((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, t0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt1.c2, ((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c2) NOT BETWEEN (t0.c1) AND (rt1.c2))))) WHERE (((NULL)>>(rt0.c0)) COLLATE NOCASE) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*((NOT (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (GLOB(((vt0.c0) IS FALSE), (((t0.c1))<>((t0.c2))))) ORDER BY ((x'3a28') BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))) AND (((t0.c1)==(t0.c2))))  NULLS FIRST, UPPER(DISTINCT CAST(t0.c1 AS TEXT)) ASC, ((((t0.c2)%(t0.c2))) BETWEEN ((((t0.c2))<((t0.c1)))) AND (((t0.c2) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(((vt0.c0) IS FALSE), (((t0.c1))!=((t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((x'3a28') BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))) AND (((t0.c1)==(t0.c2))))  NULLS FIRST, UPPER(DISTINCT CAST(t0.c1 AS TEXT)) ASC, ((((t0.c2)%(t0.c2))) BETWEEN ((((t0.c2))<((t0.c1)))) AND (((t0.c2) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (GLOB(((vt0.c0) IS FALSE), (((t0.c1))<>((t0.c2))))) ORDER BY ((x'3a28') BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))) AND (((t0.c1)==(t0.c2))))  NULLS FIRST, UPPER(DISTINCT CAST(t0.c1 AS TEXT)) ASC, ((((t0.c2)%(t0.c2))) BETWEEN ((((t0.c2))<((t0.c1)))) AND (((t0.c2) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(((vt0.c0) IS FALSE), (((t0.c1))!=((t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((x'3a28') BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))) AND (((t0.c1)==(t0.c2))))  NULLS FIRST, UPPER(DISTINCT CAST(t0.c1 AS TEXT)) ASC, ((((t0.c2)%(t0.c2))) BETWEEN ((((t0.c2))<((t0.c1)))) AND (((t0.c2) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (GLOB(((vt0.c0) IS FALSE), (((t0.c1))<>((t0.c2))))) ORDER BY ((x'3a28') BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))) AND (((t0.c1)==(t0.c2))))  NULLS FIRST, UPPER(DISTINCT CAST(t0.c1 AS TEXT)) ASC, ((((t0.c2)%(t0.c2))) BETWEEN ((((t0.c2))<((t0.c1)))) AND (((t0.c2) IS TRUE)))  NULLS FIRST;
SELECT * FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))<=((((rt0.c1, vt0.c0, t0.c1))<((x'', x'', t0.c1))))) LEFT OUTER JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS REAL) WHERE ((((((((('1431949178')OR(rt0.c0)))OR(t0.c0)))OR((((t0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((((('1431949178')OR(rt0.c0)))OR(t0.c0)))OR((((t0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR(t0.c2))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))<=((((rt0.c1, vt0.c0, t0.c1))<((x'', x'', t0.c1))))) LEFT OUTER JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS REAL));
SELECT * FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))<=((((rt0.c1, vt0.c0, t0.c1))<((x'', x'', t0.c1))))) LEFT OUTER JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS REAL) WHERE ((((((((('1431949178')OR(rt0.c0)))OR(t0.c0)))OR((((t0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((((('1431949178')OR(rt0.c0)))OR(t0.c0)))OR((((t0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR(t0.c2))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))<=((((rt0.c1, vt0.c0, t0.c1))<((x'', x'', t0.c1))))) LEFT OUTER JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS REAL));
SELECT * FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))<=((((rt0.c1, vt0.c0, t0.c1))<((x'', x'', t0.c1))))) LEFT OUTER JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)) AS REAL) WHERE ((((((((('1431949178')OR(rt0.c0)))OR(t0.c0)))OR((((t0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR(t0.c2)));
SELECT COUNT(*) FROM t0, vt0 WHERE (JULIANDAY(((NULL)<<(t0.c1)), CAST(vt0.c0 AS REAL), (t0.c1 IN ()), x'', t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((NULL)<<(t0.c1)), CAST(vt0.c0 AS REAL), (t0.c1 IN ()), x'', t0.c2)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (JULIANDAY(((NULL)<<(t0.c1)), CAST(vt0.c0 AS REAL), (t0.c1 IN ()), x'', t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((NULL)<<(t0.c1)), CAST(vt0.c0 AS REAL), (t0.c1 IN ()), x'', t0.c2)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (JULIANDAY(((NULL)<<(t0.c1)), CAST(vt0.c0 AS REAL), (t0.c1 IN ()), x'', t0.c2));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) IS FALSE) IN ('0.8735855513361203' COLLATE NOCASE, IFNULL(DISTINCT t0.c2, t0.c0))) WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c2))) BETWEEN (CASE WHEN 'TA' THEN t0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(t0.c0)))AND(t0.c2))) BETWEEN (CASE WHEN 'TA' THEN t0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) IS FALSE) IN ('0.8735855513361203' COLLATE NOCASE, IFNULL(DISTINCT t0.c2, t0.c0))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) IS FALSE) IN ('0.8735855513361203' COLLATE NOCASE, IFNULL(DISTINCT t0.c2, t0.c0))) WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c2))) BETWEEN (CASE WHEN 'TA' THEN t0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(t0.c0)))AND(t0.c2))) BETWEEN (CASE WHEN 'TA' THEN t0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) IS FALSE) IN ('0.8735855513361203' COLLATE NOCASE, IFNULL(DISTINCT t0.c2, t0.c0))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) IS FALSE) IN ('0.8735855513361203' COLLATE NOCASE, IFNULL(DISTINCT t0.c2, t0.c0))) WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c2))) BETWEEN (CASE WHEN 'TA' THEN t0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- ((+ (rt1.c2))))) ORDER BY (('318762736')&(CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (('318762736')&(CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- ((+ (rt1.c2))))) ORDER BY (('318762736')&(CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (('318762736')&(CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- ((+ (rt1.c2))))) ORDER BY (('318762736')&(CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))  NULLS FIRST;
SELECT * FROM rt1, vt0, t0 WHERE ('-202997376');
SELECT SUM(count) FROM (SELECT (('-202997376') IS TRUE)  as count FROM rt1, vt0, t0);
SELECT * FROM rt1, vt0, t0 WHERE ('-202997376');
SELECT SUM(count) FROM (SELECT (('-202997376') IS TRUE)  as count FROM rt1, vt0, t0);
SELECT * FROM rt1, vt0, t0 WHERE ('-202997376');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c2)!=(rt0.c1)))) WHERE ((('1658588664')+(CAST(NULL AS NUMERIC)))) ORDER BY (((CAST(rt0.c1 AS BLOB), ((rt0.c2) NOT NULL), vt0.c0 COLLATE BINARY))<=((((rt0.c1)==(vt0.c0)), CAST(rt0.c2 AS REAL), ((rt0.c2)>>(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('1658588664')+(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c2)<>(rt0.c1)))) ORDER BY (((CAST(rt0.c1 AS BLOB), ((rt0.c2) NOT NULL), vt0.c0 COLLATE BINARY))<=((((rt0.c1)=(vt0.c0)), CAST(rt0.c2 AS REAL), ((rt0.c2)>>(rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c2)!=(rt0.c1)))) WHERE ((('1658588664')+(CAST(NULL AS NUMERIC)))) ORDER BY (((CAST(rt0.c1 AS BLOB), ((rt0.c2) NOT NULL), vt0.c0 COLLATE BINARY))<=((((rt0.c1)==(vt0.c0)), CAST(rt0.c2 AS REAL), ((rt0.c2)>>(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('1658588664')+(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c2)<>(rt0.c1)))) ORDER BY (((CAST(rt0.c1 AS BLOB), ((rt0.c2) NOT NULL), vt0.c0 COLLATE BINARY))<=((((rt0.c1)=(vt0.c0)), CAST(rt0.c2 AS REAL), ((rt0.c2)>>(rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c2)!=(rt0.c1)))) WHERE ((('1658588664')+(CAST(NULL AS NUMERIC)))) ORDER BY (((CAST(rt0.c1 AS BLOB), ((rt0.c2) NOT NULL), vt0.c0 COLLATE BINARY))<=((((rt0.c1)==(vt0.c0)), CAST(rt0.c2 AS REAL), ((rt0.c2)>>(rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c1)&(rt0.c2)))))) ORDER BY (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c1)&(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c1)&(rt0.c2)))))) ORDER BY (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c1)&(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c1)&(rt0.c2)))))) ORDER BY (NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM rt1, rt0, vt0, t0 WHERE ((((rt1.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, rt0, vt0, t0);
SELECT ALL * FROM rt1, rt0, vt0, t0 WHERE ((((rt1.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, rt0, vt0, t0);
SELECT ALL * FROM rt1, rt0, vt0, t0 WHERE ((((rt1.c2 IN ())) NOT NULL));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((t0.c2)+(rt1.c0)))OR(((t0.c1)&(vt0.c0)))) INNER JOIN vt0 ON (((t0.c0)|(t0.c2)) IN (CAST(t0.c0 AS REAL))) CROSS JOIN t0 ON ((((rt1.c2)LIKE(rt0.c1))) BETWEEN (((((((((rt1.c2)AND(t0.c1)))AND(rt1.c2)))AND(t0.c1)))OR(vt0.c0))) AND ((((rt1.c1, 0.3589381877345862, rt1.c0))>=((rt0.c0, '', vt0.c0))))) WHERE (GLOB(CASE rt1.c1  WHEN t0.c2 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt1.c1 ELSE rt1.c2 END, (- (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE rt1.c1  WHEN t0.c2 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt1.c1 ELSE rt1.c2 END, (- (t0.c0)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((t0.c2)+(rt1.c0)))OR(((t0.c1)&(vt0.c0)))) INNER JOIN vt0 ON (((t0.c0)|(t0.c2)) IN (CAST(t0.c0 AS REAL))) CROSS JOIN t0 ON ((((rt1.c2)LIKE(rt0.c1))) BETWEEN (((((((((rt1.c2)AND(t0.c1)))AND(rt1.c2)))AND(t0.c1)))OR(vt0.c0))) AND ((((rt1.c1, 0.3589381877345862, rt1.c0))>=((rt0.c0, '', vt0.c0))))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((t0.c2)+(rt1.c0)))OR(((t0.c1)&(vt0.c0)))) INNER JOIN vt0 ON (((t0.c0)|(t0.c2)) IN (CAST(t0.c0 AS REAL))) CROSS JOIN t0 ON ((((rt1.c2)LIKE(rt0.c1))) BETWEEN (((((((((rt1.c2)AND(t0.c1)))AND(rt1.c2)))AND(t0.c1)))OR(vt0.c0))) AND ((((rt1.c1, 0.3589381877345862, rt1.c0))>=((rt0.c0, '', vt0.c0))))) WHERE (GLOB(CASE rt1.c1  WHEN t0.c2 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt1.c1 ELSE rt1.c2 END, (- (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE rt1.c1  WHEN t0.c2 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt1.c1 ELSE rt1.c2 END, (- (t0.c0)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((t0.c2)+(rt1.c0)))OR(((t0.c1)&(vt0.c0)))) INNER JOIN vt0 ON (((t0.c0)|(t0.c2)) IN (CAST(t0.c0 AS REAL))) CROSS JOIN t0 ON ((((rt1.c2)LIKE(rt0.c1))) BETWEEN (((((((((rt1.c2)AND(t0.c1)))AND(rt1.c2)))AND(t0.c1)))OR(vt0.c0))) AND ((((rt1.c1, 0.3589381877345862, rt1.c0))>=((rt0.c0, '', vt0.c0))))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 NOT INDEXED WHERE (((((rt1.c1)==(t0.c1)))>=(((0.31504719962493166)AND(t0.c1))))) ORDER BY (rt0.c2 IN (rt1.c0)) COLLATE RTRIM, CAST(rt1.c0 COLLATE NOCASE AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)=(t0.c1)))>=(((0.31504719962493166)AND(t0.c1))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (rt0.c2 IN (rt1.c0)) COLLATE RTRIM, CAST(rt1.c0 COLLATE NOCASE AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 NOT INDEXED WHERE (((((rt1.c1)==(t0.c1)))>=(((0.31504719962493166)AND(t0.c1))))) ORDER BY (rt0.c2 IN (rt1.c0)) COLLATE RTRIM, CAST(rt1.c0 COLLATE NOCASE AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)=(t0.c1)))>=(((0.31504719962493166)AND(t0.c1))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (rt0.c2 IN (rt1.c0)) COLLATE RTRIM, CAST(rt1.c0 COLLATE NOCASE AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 NOT INDEXED WHERE (((((rt1.c1)==(t0.c1)))>=(((0.31504719962493166)AND(t0.c1))))) ORDER BY (rt0.c2 IN (rt1.c0)) COLLATE RTRIM, CAST(rt1.c0 COLLATE NOCASE AS BLOB) DESC;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c1)<(t0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN 0.7138586223370194 WHEN t0.c1 THEN NULL ELSE t0.c2 END)) WHERE (UPPER(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c1)<(t0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN 0.7138586223370194 WHEN t0.c1 THEN NULL ELSE t0.c2 END)));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c1)<(t0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN 0.7138586223370194 WHEN t0.c1 THEN NULL ELSE t0.c2 END)) WHERE (UPPER(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c1)<(t0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN 0.7138586223370194 WHEN t0.c1 THEN NULL ELSE t0.c2 END)));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c1)<(t0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN 0.7138586223370194 WHEN t0.c1 THEN NULL ELSE t0.c2 END)) WHERE (UPPER(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))));
SELECT ALL * FROM vt0, rt0, t0, rt1 WHERE (CASE rt1.c2  WHEN ((vt0.c0) BETWEEN (1189986661) AND (rt1.c2)) THEN ((rt0.c0) ISNULL) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY ((CAST(x'' AS INTEGER))<(CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN ((vt0.c0) BETWEEN (1189986661) AND (rt1.c2)) THEN ((rt0.c0) ISNULL) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (NULL)) END) IS TRUE)  as count FROM vt0, rt0, t0, rt1 ORDER BY ((CAST(x'' AS INTEGER))<(CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 ELSE rt0.c1 END)) ASC);
SELECT ALL * FROM vt0, rt0, t0, rt1 WHERE (CASE rt1.c2  WHEN ((vt0.c0) BETWEEN (1189986661) AND (rt1.c2)) THEN ((rt0.c0) ISNULL) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY ((CAST(x'' AS INTEGER))<(CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN ((vt0.c0) BETWEEN (1189986661) AND (rt1.c2)) THEN ((rt0.c0) ISNULL) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (NULL)) END) IS TRUE)  as count FROM vt0, rt0, t0, rt1 ORDER BY ((CAST(x'' AS INTEGER))<(CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 ELSE rt0.c1 END)) ASC);
SELECT ALL * FROM vt0, rt0, t0, rt1 WHERE (CASE rt1.c2  WHEN ((vt0.c0) BETWEEN (1189986661) AND (rt1.c2)) THEN ((rt0.c0) ISNULL) ELSE ((rt1.c0) NOT BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY ((CAST(x'' AS INTEGER))<(CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 ELSE rt0.c1 END)) ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))&(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))&(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))&(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))&(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)))&(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 END)));
SELECT COUNT(*) FROM rt0, t0 WHERE (((json_insert(rt0.c2, t0.c1, rt0.c0, rt0.c2, 0X5fff0c53, rt0.c2, rt0.c2)) BETWEEN (('->' IN ())) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_insert(rt0.c2, t0.c1, rt0.c0, rt0.c2, 0X5fff0c53, rt0.c2, rt0.c2)) BETWEEN (('->' IN ())) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((json_insert(rt0.c2, t0.c1, rt0.c0, rt0.c2, 0X5fff0c53, rt0.c2, rt0.c2)) BETWEEN (('->' IN ())) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_insert(rt0.c2, t0.c1, rt0.c0, rt0.c2, 0X5fff0c53, rt0.c2, rt0.c2)) BETWEEN (('->' IN ())) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, t0, rt0 WHERE (NULLIF(DISTINCT (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c0))), ((((((((rt1.c1)OR(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c0))), ((((((((rt1.c1)OR(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(t0.c0)))) IS TRUE)  as count FROM vt0, rt1, t0, rt0);
SELECT COUNT(*) FROM vt0, rt1, t0, rt0 WHERE (NULLIF(DISTINCT (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c0))), ((((((((rt1.c1)OR(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c0))), ((((((((rt1.c1)OR(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(t0.c0)))) IS TRUE)  as count FROM vt0, rt1, t0, rt0);
SELECT COUNT(*) FROM vt0, rt1, t0, rt0 WHERE (NULLIF(DISTINCT (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c0))), ((((((((rt1.c1)OR(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(t0.c0))));
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN ())) ORDER BY ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)/(rt1.c0))) AND (MAX(rt1.c0, rt1.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)/(rt1.c0))) AND (MAX(rt1.c0, rt1.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN ())) ORDER BY ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)/(rt1.c0))) AND (MAX(rt1.c0, rt1.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)/(rt1.c0))) AND (MAX(rt1.c0, rt1.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN ())) ORDER BY ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)/(rt1.c0))) AND (MAX(rt1.c0, rt1.c2)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (json_quote(LIKELIHOOD(rt1.c0, 0.6737160758493986))) ORDER BY ((IFNULL(rt0.c2, rt0.c0))OR(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(LIKELIHOOD(rt1.c0, 0.6737160758493986))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((IFNULL(rt0.c2, rt0.c0))OR(rt0.c1)) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (json_quote(LIKELIHOOD(rt1.c0, 0.6737160758493986))) ORDER BY ((IFNULL(rt0.c2, rt0.c0))OR(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(LIKELIHOOD(rt1.c0, 0.6737160758493986))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((IFNULL(rt0.c2, rt0.c0))OR(rt0.c1)) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (json_quote(LIKELIHOOD(rt1.c0, 0.6737160758493986))) ORDER BY ((IFNULL(rt0.c2, rt0.c0))OR(rt0.c1)) ASC;
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT ALL * FROM vt0, rt0, rt1 FULL OUTER JOIN t0 ON 0.957848692538137 WHERE (((rt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(0Xffffffffa302bc28 COLLATE NOCASE)))AND(((((t0.c2)AND(rt0.c0)))OR(t0.c0)))))OR((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c1, t0.c2, t0.c2)) AND ((vt0.c0, rt1.c0, rt1.c0))))))AND(((t0.c2) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, rt1 FULL OUTER JOIN t0 ON 0.957848692538137 ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(0xffffffffa302bc28 COLLATE NOCASE)))AND(((((t0.c2)AND(rt0.c0)))OR(t0.c0)))))OR((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c1, t0.c2, t0.c2)) AND ((vt0.c0, rt1.c0, rt1.c0))))))AND(((t0.c2) IS TRUE))) ASC);
SELECT ALL * FROM vt0, rt0, rt1 FULL OUTER JOIN t0 ON 0.957848692538137 WHERE (((rt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(0Xffffffffa302bc28 COLLATE NOCASE)))AND(((((t0.c2)AND(rt0.c0)))OR(t0.c0)))))OR((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c1, t0.c2, t0.c2)) AND ((vt0.c0, rt1.c0, rt1.c0))))))AND(((t0.c2) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, rt1 FULL OUTER JOIN t0 ON 0.957848692538137 ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(0xffffffffa302bc28 COLLATE NOCASE)))AND(((((t0.c2)AND(rt0.c0)))OR(t0.c0)))))OR((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c1, t0.c2, t0.c2)) AND ((vt0.c0, rt1.c0, rt1.c0))))))AND(((t0.c2) IS TRUE))) ASC);
SELECT ALL * FROM vt0, rt0, rt1 FULL OUTER JOIN t0 ON 0.957848692538137 WHERE (((rt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(0Xffffffffa302bc28 COLLATE NOCASE)))AND(((((t0.c2)AND(rt0.c0)))OR(t0.c0)))))OR((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c1, t0.c2, t0.c2)) AND ((vt0.c0, rt1.c0, rt1.c0))))))AND(((t0.c2) IS TRUE))) ASC;
SELECT * FROM rt0, t0, rt1, vt0 WHERE (COALESCE((rt0.c0 IN (t0.c1, t0.c2)), (rt1.c1 IN (t0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE((rt0.c0 IN (t0.c1, t0.c2)), (rt1.c1 IN (t0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0, t0, rt1, vt0);
SELECT * FROM rt0, t0, rt1, vt0 WHERE (COALESCE((rt0.c0 IN (t0.c1, t0.c2)), (rt1.c1 IN (t0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE((rt0.c0 IN (t0.c1, t0.c2)), (rt1.c1 IN (t0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0, t0, rt1, vt0);
SELECT * FROM rt0, t0, rt1, vt0 WHERE (COALESCE((rt0.c0 IN (t0.c1, t0.c2)), (rt1.c1 IN (t0.c2, rt0.c1))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0, vt0 WHERE (((rt0.c0)*(((t0.c0)IS(rt1.c1))))) ORDER BY ((COALESCE(rt1.c2, rt0.c0, rt0.c2, rt1.c2)) BETWEEN (rt1.c1) AND ('-1111283214'));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(((t0.c0)IS(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0, vt0 ORDER BY ((COALESCE(rt1.c2, rt0.c0, rt0.c2, rt1.c2)) BETWEEN (rt1.c1) AND ('-1111283214')));
SELECT ALL COUNT(*) FROM t0, rt1, rt0, vt0 WHERE (((rt0.c0)*(((t0.c0)IS(rt1.c1))))) ORDER BY ((COALESCE(rt1.c2, rt0.c0, rt0.c2, rt1.c2)) BETWEEN (rt1.c1) AND ('-1111283214'));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(((t0.c0)IS(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0, vt0 ORDER BY ((COALESCE(rt1.c2, rt0.c0, rt0.c2, rt1.c2)) BETWEEN (rt1.c1) AND ('-1111283214')));
SELECT ALL COUNT(*) FROM t0, rt1, rt0, vt0 WHERE (((rt0.c0)*(((t0.c0)IS(rt1.c1))))) ORDER BY ((COALESCE(rt1.c2, rt0.c0, rt0.c2, rt1.c2)) BETWEEN (rt1.c1) AND ('-1111283214'));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0 COLLATE RTRIM, (+ (t0.c0)), (~ (t0.c1))))>((((((rt1.c2)AND(t0.c0)))OR(rt1.c2)), rt1.c1, (((rt1.c2, t0.c1, rt1.c0)) BETWEEN ((rt1.c0, t0.c0, rt1.c0)) AND ((t0.c0, rt1.c0, '')))))) RIGHT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (0X12ffeef0) AND (t0.c1))) IS TRUE) WHERE (json_remove(((rt1.c0)||(rt1.c0)), ((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((rt1.c0)||(rt1.c0)), ((t0.c0) ISNULL))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0 COLLATE RTRIM, (+ (t0.c0)), (~ (t0.c1))))>((((((rt1.c2)AND(t0.c0)))OR(rt1.c2)), rt1.c1, (((rt1.c2, t0.c1, rt1.c0)) BETWEEN ((rt1.c0, t0.c0, rt1.c0)) AND ((t0.c0, rt1.c0, '')))))) RIGHT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (0x12ffeef0) AND (t0.c1))) IS TRUE));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0 COLLATE RTRIM, (+ (t0.c0)), (~ (t0.c1))))>((((((rt1.c2)AND(t0.c0)))OR(rt1.c2)), rt1.c1, (((rt1.c2, t0.c1, rt1.c0)) BETWEEN ((rt1.c0, t0.c0, rt1.c0)) AND ((t0.c0, rt1.c0, '')))))) RIGHT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (0X12ffeef0) AND (t0.c1))) IS TRUE) WHERE (json_remove(((rt1.c0)||(rt1.c0)), ((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((rt1.c0)||(rt1.c0)), ((t0.c0) ISNULL))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0 COLLATE RTRIM, (+ (t0.c0)), (~ (t0.c1))))>((((((rt1.c2)AND(t0.c0)))OR(rt1.c2)), rt1.c1, (((rt1.c2, t0.c1, rt1.c0)) BETWEEN ((rt1.c0, t0.c0, rt1.c0)) AND ((t0.c0, rt1.c0, '')))))) RIGHT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (0x12ffeef0) AND (t0.c1))) IS TRUE));
SELECT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS NOT(rt1.c0)))-(x'')) INNER JOIN t0 ON json_type((+ (rt0.c0))) RIGHT OUTER JOIN rt0 ON CASE ((t0.c0) NOT NULL)  WHEN (rt0.c1 IN ()) THEN ((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) ELSE (rt0.c2 IN (rt1.c1)) END WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS NOT(rt1.c0)))-(x'')) INNER JOIN t0 ON json_type((+ (rt0.c0))) RIGHT OUTER JOIN rt0 ON CASE ((t0.c0) NOT NULL)  WHEN (rt0.c1 IN ()) THEN ((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) ELSE (rt0.c2 IN (rt1.c1)) END);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS NOT(rt1.c0)))-(x'')) INNER JOIN t0 ON json_type((+ (rt0.c0))) RIGHT OUTER JOIN rt0 ON CASE ((t0.c0) NOT NULL)  WHEN (rt0.c1 IN ()) THEN ((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) ELSE (rt0.c2 IN (rt1.c1)) END WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS NOT(rt1.c0)))-(x'')) INNER JOIN t0 ON json_type((+ (rt0.c0))) RIGHT OUTER JOIN rt0 ON CASE ((t0.c0) NOT NULL)  WHEN (rt0.c1 IN ()) THEN ((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) ELSE (rt0.c2 IN (rt1.c1)) END);
SELECT ALL * FROM rt1 INDEXED BY i38, vt0 WHERE (((rt1.c2 COLLATE NOCASE)-(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE)-(rt1.c2))) IS TRUE)  as count FROM rt1 INDEXED BY i38, vt0);
SELECT ALL * FROM rt1 INDEXED BY i38, vt0 WHERE (((rt1.c2 COLLATE NOCASE)-(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE)-(rt1.c2))) IS TRUE)  as count FROM rt1 INDEXED BY i38, vt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))LIKE(((0.5015221353617728)IS('')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))LIKE(((0.5015221353617728)IS(''))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))LIKE(((0.5015221353617728)IS('')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))LIKE(((0.5015221353617728)IS(''))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))LIKE(((0.5015221353617728)IS('')))));
SELECT * FROM rt1, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((t0.c2)|(t0.c1))))>=((((x'') BETWEEN (rt0.c2) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)|(t0.c1))))>=((((x'') BETWEEN (rt0.c2) AND (t0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((t0.c2)|(t0.c1))))>=((((x'') BETWEEN (rt0.c2) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)|(t0.c1))))>=((((x'') BETWEEN (rt0.c2) AND (t0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((t0.c2)|(t0.c1))))>=((((x'') BETWEEN (rt0.c2) AND (t0.c2))))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1))<=((rt0.c2))) COLLATE BINARY) ORDER BY (CASE WHEN rt0.c2 THEN 0.4852785543969831 ELSE vt0.c0 END IN ((((rt0.c2, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c1))))), ((((((((CASE 0X4ddc2d33  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(HEX(rt0.c0))))AND(((rt0.c1)/(rt0.c1)))))OR((rt0.c2 IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE WHEN rt0.c2 THEN 0.4852785543969831 ELSE vt0.c0 END IN ((((rt0.c2, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c1))))), ((((((((CASE 0x4ddc2d33  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(HEX(rt0.c0))))AND(((rt0.c1)/(rt0.c1)))))OR((rt0.c2 IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))) ASC, NULL  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1))<=((rt0.c2))) COLLATE BINARY) ORDER BY (CASE WHEN rt0.c2 THEN 0.4852785543969831 ELSE vt0.c0 END IN ((((rt0.c2, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c1))))), ((((((((CASE 0X4ddc2d33  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(HEX(rt0.c0))))AND(((rt0.c1)/(rt0.c1)))))OR((rt0.c2 IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE WHEN rt0.c2 THEN 0.4852785543969831 ELSE vt0.c0 END IN ((((rt0.c2, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c1))))), ((((((((CASE 0x4ddc2d33  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(HEX(rt0.c0))))AND(((rt0.c1)/(rt0.c1)))))OR((rt0.c2 IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))) ASC, NULL  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1))<=((rt0.c2))) COLLATE BINARY) ORDER BY (CASE WHEN rt0.c2 THEN 0.4852785543969831 ELSE vt0.c0 END IN ((((rt0.c2, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c1))))), ((((((((CASE 0X4ddc2d33  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)OR(HEX(rt0.c0))))AND(((rt0.c1)/(rt0.c1)))))OR((rt0.c2 IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))) ASC, NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((((((vt0.c0)AND('')))OR(rt0.c2)))AND(vt0.c0)))AND(t0.c0)) AS REAL) WHERE (((((rt0.c0 IN ())))<((-421737114)))) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (vt0.c0 IN ()) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)!=(t0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))<((-421737114)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((((((vt0.c0)AND('')))OR(rt0.c2)))AND(vt0.c0)))AND(t0.c0)) AS REAL) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (vt0.c0 IN ()) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)!=(t0.c2)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((((((vt0.c0)AND('')))OR(rt0.c2)))AND(vt0.c0)))AND(t0.c0)) AS REAL) WHERE (((((rt0.c0 IN ())))<((-421737114)))) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (vt0.c0 IN ()) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)!=(t0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))<((-421737114)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((((((vt0.c0)AND('')))OR(rt0.c2)))AND(vt0.c0)))AND(t0.c0)) AS REAL) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (vt0.c0 IN ()) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)!=(t0.c2)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON CAST(((((((((vt0.c0)AND('')))OR(rt0.c2)))AND(vt0.c0)))AND(t0.c0)) AS REAL) WHERE (((((rt0.c0 IN ())))<((-421737114)))) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (vt0.c0 IN ()) THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)!=(t0.c2)) END ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt1, rt0 WHERE (CAST(t0.c1 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt1, rt0);
SELECT ALL * FROM vt0, t0, rt1, rt0 WHERE (CAST(t0.c1 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt1, rt0);
SELECT ALL * FROM vt0, t0, rt1, rt0 WHERE (CAST(t0.c1 COLLATE RTRIM AS INTEGER));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0) IS FALSE))>=(((((vt0.c0)OR(rt1.c2)))AND(rt1.c2)))) WHERE (vt0.c0) ORDER BY (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((rt1.c2, rt1.c0, rt1.c0)))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0) IS FALSE))>=(((((vt0.c0)OR(rt1.c2)))AND(rt1.c2)))) ORDER BY (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((rt1.c2, rt1.c0, rt1.c0)))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0) IS FALSE))>=(((((vt0.c0)OR(rt1.c2)))AND(rt1.c2)))) WHERE (vt0.c0) ORDER BY (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((rt1.c2, rt1.c0, rt1.c0)))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0) IS FALSE))>=(((((vt0.c0)OR(rt1.c2)))AND(rt1.c2)))) ORDER BY (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((rt1.c2, rt1.c0, rt1.c0)))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0) IS FALSE))>=(((((vt0.c0)OR(rt1.c2)))AND(rt1.c2)))) WHERE (vt0.c0) ORDER BY (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((rt1.c2, rt1.c0, rt1.c0)))) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.6705081461425262))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE NOCASE THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.6705081461425262))) END) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.6705081461425262))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE NOCASE THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.6705081461425262))) END) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.6705081461425262))) END);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0))==((rt0.c0))) ELSE (- (rt0.c2)) END) ORDER BY json_array(CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c1))<((rt0.c0))), (rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0))=((rt0.c0))) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY json_array(CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c1))<((rt0.c0))), (rt0.c0 IN ())));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0))==((rt0.c0))) ELSE (- (rt0.c2)) END) ORDER BY json_array(CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c1))<((rt0.c0))), (rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0))=((rt0.c0))) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY json_array(CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c1))<((rt0.c0))), (rt0.c0 IN ())));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c0))==((rt0.c0))) ELSE (- (rt0.c2)) END) ORDER BY json_array(CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c1))<((rt0.c0))), (rt0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0)<(rt1.c1)) ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0)<(rt1.c1)) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0)<(rt1.c1)) ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0)<(rt1.c1)) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0)<(rt1.c1)) ELSE (rt1.c1 IN ()) END);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE t0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE BINARY WHERE (((rt0.c2)/(rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE t0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE t0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE BINARY WHERE (((rt0.c2)/(rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE t0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 LEFT OUTER JOIN rt0 ON CASE t0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE BINARY WHERE (((rt0.c2)/(rt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 INNER JOIN t0 ON (TOTAL_CHANGES() IN (((rt0.c0) ISNULL))) FULL OUTER JOIN rt1 ON (NOT (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2)))) WHERE (x'') ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt0.c0)) IN (CASE t0.c1  WHEN t0.c1 THEN rt0.c2 END, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (TOTAL_CHANGES() IN (((rt0.c0) ISNULL))) FULL OUTER JOIN rt1 ON (NOT (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2)))) ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt0.c0)) IN (CASE t0.c1  WHEN t0.c1 THEN rt0.c2 END, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 INNER JOIN t0 ON (TOTAL_CHANGES() IN (((rt0.c0) ISNULL))) FULL OUTER JOIN rt1 ON (NOT (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2)))) WHERE (x'') ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt0.c0)) IN (CASE t0.c1  WHEN t0.c1 THEN rt0.c2 END, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (TOTAL_CHANGES() IN (((rt0.c0) ISNULL))) FULL OUTER JOIN rt1 ON (NOT (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2)))) ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt0.c0)) IN (CASE t0.c1  WHEN t0.c1 THEN rt0.c2 END, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 INNER JOIN t0 ON (TOTAL_CHANGES() IN (((rt0.c0) ISNULL))) FULL OUTER JOIN rt1 ON (NOT (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2)))) WHERE (x'') ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt0.c0)) IN (CASE t0.c1  WHEN t0.c1 THEN rt0.c2 END, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2))));
SELECT * FROM vt0 INDEXED BY i38 WHERE (CASE WHEN 1228132759 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1228132759 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 INDEXED BY i38);
SELECT * FROM vt0 INDEXED BY i38 WHERE (CASE WHEN 1228132759 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1228132759 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 INDEXED BY i38);
SELECT * FROM rt0, t0 WHERE ((~ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN '-1e500' ELSE rt0.c0 END))) ORDER BY (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN (('[A' IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN '-1e500' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN (('[A' IN (rt0.c1)))));
SELECT * FROM rt0, t0 WHERE ((~ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN '-1e500' ELSE rt0.c0 END))) ORDER BY (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN (('[A' IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN '-1e500' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN (('[A' IN (rt0.c1)))));
SELECT * FROM rt0, t0 WHERE ((~ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c1 THEN '-1e500' ELSE rt0.c0 END))) ORDER BY (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN (('[A' IN (rt0.c1))));
SELECT COUNT(*) FROM t0, vt0, rt0, rt1 WHERE (x'3231');
SELECT SUM(count) FROM (SELECT ((x'3231') IS TRUE)  as count FROM t0, vt0, rt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt0, rt1 WHERE (x'3231');
SELECT SUM(count) FROM (SELECT ((x'3231') IS TRUE)  as count FROM t0, vt0, rt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt0, rt1 WHERE (x'3231');
SELECT COUNT(*) FROM rt1, vt0, t0 CROSS JOIN rt0 ON CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END COLLATE RTRIM WHERE (((((t0.c0)>=(rt0.c0)))||(CASE WHEN x'' THEN NULL END))) ORDER BY ((((((t0.c1) NOT BETWEEN (1881540981) AND (rt0.c1)))AND((+ (rt0.c1)))))OR((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>=(rt0.c0)))||(CASE WHEN x'' THEN NULL END))) IS TRUE)  as count FROM rt1, vt0, t0 CROSS JOIN rt0 ON CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END COLLATE RTRIM ORDER BY ((((((t0.c1) NOT BETWEEN (1881540981) AND (rt0.c1)))AND((+ (rt0.c1)))))OR((- (vt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0, t0 CROSS JOIN rt0 ON CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END COLLATE RTRIM WHERE (((((t0.c0)>=(rt0.c0)))||(CASE WHEN x'' THEN NULL END))) ORDER BY ((((((t0.c1) NOT BETWEEN (1881540981) AND (rt0.c1)))AND((+ (rt0.c1)))))OR((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>=(rt0.c0)))||(CASE WHEN x'' THEN NULL END))) IS TRUE)  as count FROM rt1, vt0, t0 CROSS JOIN rt0 ON CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END COLLATE RTRIM ORDER BY ((((((t0.c1) NOT BETWEEN (1881540981) AND (rt0.c1)))AND((+ (rt0.c1)))))OR((- (vt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0, t0 CROSS JOIN rt0 ON CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END COLLATE RTRIM WHERE (((((t0.c0)>=(rt0.c0)))||(CASE WHEN x'' THEN NULL END))) ORDER BY ((((((t0.c1) NOT BETWEEN (1881540981) AND (rt0.c1)))AND((+ (rt0.c1)))))OR((- (vt0.c0))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (LOWER(DISTINCT rt1.c0)) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT rt1.c0)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (LOWER(DISTINCT rt1.c0)) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT rt1.c0)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (LOWER(DISTINCT rt1.c0)) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN ('|o') AND (rt0.c0)) AS TEXT)) ORDER BY (NOT (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN ('|o') AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN ('|o') AND (rt0.c0)) AS TEXT)) ORDER BY (NOT (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN ('|o') AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN ('|o') AND (rt0.c0)) AS TEXT)) ORDER BY (NOT (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0 NOT INDEXED RIGHT OUTER JOIN rt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c2))) ISNULL) WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c2)IS NOT(rt1.c0)) END) ORDER BY ((0.7734508271872969 COLLATE RTRIM) NOT BETWEEN (((t0.c0) ISNULL)) AND ((((rt1.c2, rt1.c0, rt0.c1))==((t0.c2, x'dcba', t0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c2)IS NOT(rt1.c0)) END) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c2))) ISNULL) ORDER BY ((0.7734508271872969 COLLATE RTRIM) NOT BETWEEN (((t0.c0) ISNULL)) AND ((((rt1.c2, rt1.c0, rt0.c1))=((t0.c2, x'dcba', t0.c1))))));
SELECT ALL * FROM rt0, t0 NOT INDEXED RIGHT OUTER JOIN rt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c2))) ISNULL) WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c2)IS NOT(rt1.c0)) END) ORDER BY ((0.7734508271872969 COLLATE RTRIM) NOT BETWEEN (((t0.c0) ISNULL)) AND ((((rt1.c2, rt1.c0, rt0.c1))==((t0.c2, x'dcba', t0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c2)IS NOT(rt1.c0)) END) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c2))) ISNULL) ORDER BY ((0.7734508271872969 COLLATE RTRIM) NOT BETWEEN (((t0.c0) ISNULL)) AND ((((rt1.c2, rt1.c0, rt0.c1))=((t0.c2, x'dcba', t0.c1))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON LIKELY(DISTINCT t0.c0) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ()) WHERE (CASE CASE WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c1 END  WHEN (((rt0.c2))==((t0.c0))) THEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c1 END  WHEN (((rt0.c2))==((t0.c0))) THEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c2)) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON LIKELY(DISTINCT t0.c0) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON LIKELY(DISTINCT t0.c0) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ()) WHERE (CASE CASE WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c1 END  WHEN (((rt0.c2))==((t0.c0))) THEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c1 END  WHEN (((rt0.c2))==((t0.c0))) THEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c2)) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON LIKELY(DISTINCT t0.c0) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON LIKELY(DISTINCT t0.c0) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) IS FALSE) CROSS JOIN rt0 ON (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ()) WHERE (CASE CASE WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c1 END  WHEN (((rt0.c2))==((t0.c0))) THEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c2)) END);
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((rt1.c1 COLLATE RTRIM IN ())) ORDER BY ((json_patch(rt0.c0, NULL))+(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT (((rt1.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((json_patch(rt0.c0, NULL))+(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((rt1.c1 COLLATE RTRIM IN ())) ORDER BY ((json_patch(rt0.c0, NULL))+(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT (((rt1.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((json_patch(rt0.c0, NULL))+(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((rt1.c1 COLLATE RTRIM IN ())) ORDER BY ((json_patch(rt0.c0, NULL))+(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((CASE rt1.c2  WHEN rt1.c1 THEN '-1827313981' WHEN x'' THEN t0.c1 WHEN '-1839189113' THEN rt1.c2 END)AND(((t0.c1)>(t0.c2)))))OR(CASE rt1.c0  WHEN t0.c2 THEN t0.c2 END))) ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c2  WHEN rt1.c1 THEN '-1827313981' WHEN x'' THEN t0.c1 WHEN '-1839189113' THEN rt1.c2 END)AND(((t0.c1)>(t0.c2)))))OR(CASE rt1.c0  WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((CASE rt1.c2  WHEN rt1.c1 THEN '-1827313981' WHEN x'' THEN t0.c1 WHEN '-1839189113' THEN rt1.c2 END)AND(((t0.c1)>(t0.c2)))))OR(CASE rt1.c0  WHEN t0.c2 THEN t0.c2 END))) ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c2  WHEN rt1.c1 THEN '-1827313981' WHEN x'' THEN t0.c1 WHEN '-1839189113' THEN rt1.c2 END)AND(((t0.c1)>(t0.c2)))))OR(CASE rt1.c0  WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((CASE rt1.c2  WHEN rt1.c1 THEN '-1827313981' WHEN x'' THEN t0.c1 WHEN '-1839189113' THEN rt1.c2 END)AND(((t0.c1)>(t0.c2)))))OR(CASE rt1.c0  WHEN t0.c2 THEN t0.c2 END))) ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))<(((((0.31279027623757294)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))IS(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CASE WHEN rt0.c2 THEN LIKELIHOOD(rt0.c2, 0.4693685566763659) ELSE rt0.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))<(((((0.31279027623757294)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))IS(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CASE WHEN rt0.c2 THEN LIKELIHOOD(rt0.c2, 0.4693685566763659) ELSE rt0.c1 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))<(((((0.31279027623757294)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))IS(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CASE WHEN rt0.c2 THEN LIKELIHOOD(rt0.c2, 0.4693685566763659) ELSE rt0.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))<(((((0.31279027623757294)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))IS(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CASE WHEN rt0.c2 THEN LIKELIHOOD(rt0.c2, 0.4693685566763659) ELSE rt0.c1 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))<(((((0.31279027623757294)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))IS(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CASE WHEN rt0.c2 THEN LIKELIHOOD(rt0.c2, 0.4693685566763659) ELSE rt0.c1 END  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((t0.c1))>((t0.c1))))GLOB(COALESCE(DISTINCT 1.678214664E9, t0.c2)))) ORDER BY ((((('')AND(t0.c0)))AND(NULL)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))>((t0.c1))))GLOB(COALESCE(DISTINCT 1.678214664E9, t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ((((('')AND(t0.c0)))AND(NULL)) IN ())  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c1))>((t0.c1))))GLOB(COALESCE(DISTINCT 1.678214664E9, t0.c2)))) ORDER BY ((((('')AND(t0.c0)))AND(NULL)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))>((t0.c1))))GLOB(COALESCE(DISTINCT 1.678214664E9, t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ((((('')AND(t0.c0)))AND(NULL)) IN ())  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c1))>((t0.c1))))GLOB(COALESCE(DISTINCT 1.678214664E9, t0.c2)))) ORDER BY ((((('')AND(t0.c0)))AND(NULL)) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, t0, vt0 WHERE (TYPEOF(0.5266417737717342));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(0.5266417737717342)) IS TRUE)  as count FROM rt0, rt1, t0, vt0);
SELECT ALL * FROM rt0, rt1, t0, vt0 WHERE (TYPEOF(0.5266417737717342));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(0.5266417737717342)) IS TRUE)  as count FROM rt0, rt1, t0, vt0);
SELECT ALL * FROM rt0, rt1, t0, vt0 WHERE (TYPEOF(0.5266417737717342));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c2)) IN ()));
SELECT * FROM rt1, vt0 WHERE ((((((vt0.c0))>=((rt1.c0))))GLOB(x'534c'))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))))AND(x'')))AND(vt0.c0)))OR((~ (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((rt1.c0))))GLOB(x'534c'))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))))AND(x'')))AND(vt0.c0)))OR((~ (rt1.c0)))) ASC);
SELECT * FROM rt1, vt0 WHERE ((((((vt0.c0))>=((rt1.c0))))GLOB(x'534c'))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))))AND(x'')))AND(vt0.c0)))OR((~ (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((rt1.c0))))GLOB(x'534c'))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))))AND(x'')))AND(vt0.c0)))OR((~ (rt1.c0)))) ASC);
SELECT * FROM rt1, vt0 WHERE ((((((vt0.c0))>=((rt1.c0))))GLOB(x'534c'))) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))))AND(x'')))AND(vt0.c0)))OR((~ (rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((t0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, t0.c2, t0.c2)) AND ((t0.c2, vt0.c0, t0.c0))))IS NOT(((rt0.c1)<(rt0.c1))))) ORDER BY ((((((rt0.c2)>(t0.c2)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c1)))))AND(((((((((rt0.c1)OR(rt0.c1)))AND(0X3502bb78)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST, ((((('')<(t0.c0))))<((((((rt0.c0)AND(t0.c2)))AND(t0.c0))))) ASC, 1.228132759E9 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, t0.c2, t0.c2)) AND ((t0.c2, vt0.c0, t0.c0))))IS NOT(((rt0.c1)<(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((rt0.c2)>(t0.c2)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c1)))))AND(((((((((rt0.c1)OR(rt0.c1)))AND(0X3502bb78)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST, ((((('')<(t0.c0))))<((((((rt0.c0)AND(t0.c2)))AND(t0.c0))))) ASC, 1.228132759E9 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((t0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, t0.c2, t0.c2)) AND ((t0.c2, vt0.c0, t0.c0))))IS NOT(((rt0.c1)<(rt0.c1))))) ORDER BY ((((((rt0.c2)>(t0.c2)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c1)))))AND(((((((((rt0.c1)OR(rt0.c1)))AND(0X3502bb78)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST, ((((('')<(t0.c0))))<((((((rt0.c0)AND(t0.c2)))AND(t0.c0))))) ASC, 1.228132759E9 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, t0.c2, t0.c2)) AND ((t0.c2, vt0.c0, t0.c0))))IS NOT(((rt0.c1)<(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((rt0.c2)>(t0.c2)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c1)))))AND(((((((((rt0.c1)OR(rt0.c1)))AND(0X3502bb78)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST, ((((('')<(t0.c0))))<((((((rt0.c0)AND(t0.c2)))AND(t0.c0))))) ASC, 1.228132759E9 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((t0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, t0.c2, t0.c2)) AND ((t0.c2, vt0.c0, t0.c0))))IS NOT(((rt0.c1)<(rt0.c1))))) ORDER BY ((((((rt0.c2)>(t0.c2)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c1)))))AND(((((((((rt0.c1)OR(rt0.c1)))AND(0X3502bb78)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST, ((((('')<(t0.c0))))<((((((rt0.c0)AND(t0.c2)))AND(t0.c0))))) ASC, 1.228132759E9 DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE ((+ (0.9101737258917609))) ORDER BY ((((((((rt0.c1)OR((NOT (rt1.c1)))))OR(CAST(rt1.c0 AS BLOB))))OR(rt0.c1)))AND('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.9101737258917609))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((((rt0.c1)OR((NOT (rt1.c1)))))OR(CAST(rt1.c0 AS BLOB))))OR(rt0.c1)))AND('')) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((+ (0.9101737258917609))) ORDER BY ((((((((rt0.c1)OR((NOT (rt1.c1)))))OR(CAST(rt1.c0 AS BLOB))))OR(rt0.c1)))AND('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.9101737258917609))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((((rt0.c1)OR((NOT (rt1.c1)))))OR(CAST(rt1.c0 AS BLOB))))OR(rt0.c1)))AND('')) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((+ (0.9101737258917609))) ORDER BY ((((((((rt0.c1)OR((NOT (rt1.c1)))))OR(CAST(rt1.c0 AS BLOB))))OR(rt0.c1)))AND('')) DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c2) IS TRUE))OR(((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (rt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) IS TRUE))OR(((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (rt0.c0 IN ()));
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c2) IS TRUE))OR(((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (rt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) IS TRUE))OR(((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (rt0.c0 IN ()));
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c2) IS TRUE))OR(((((rt1.c2)OR(rt1.c1)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (rt0.c0 IN ());
SELECT * FROM rt1, rt0, t0, vt0 WHERE (((NULLIF(t0.c2, rt0.c0))>=(CASE WHEN rt1.c0 THEN x'' END))) ORDER BY ((('0.6889012112042907', TYPEOF('0.0675982398196674'), NULL))<=(((((t0.c2))!=((rt1.c1))), ((rt0.c0)<(t0.c2)), CASE WHEN rt0.c1 THEN t0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c2, rt0.c0))>=(CASE WHEN rt1.c0 THEN x'' END))) IS TRUE)  as count FROM rt1, rt0, t0, vt0 ORDER BY ((('0.6889012112042907', TYPEOF('0.0675982398196674'), NULL))<=(((((t0.c2))<>((rt1.c1))), ((rt0.c0)<(t0.c2)), CASE WHEN rt0.c1 THEN t0.c2 END))) ASC);
SELECT * FROM rt1, rt0, t0, vt0 WHERE (((NULLIF(t0.c2, rt0.c0))>=(CASE WHEN rt1.c0 THEN x'' END))) ORDER BY ((('0.6889012112042907', TYPEOF('0.0675982398196674'), NULL))<=(((((t0.c2))!=((rt1.c1))), ((rt0.c0)<(t0.c2)), CASE WHEN rt0.c1 THEN t0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c2, rt0.c0))>=(CASE WHEN rt1.c0 THEN x'' END))) IS TRUE)  as count FROM rt1, rt0, t0, vt0 ORDER BY ((('0.6889012112042907', TYPEOF('0.0675982398196674'), NULL))<=(((((t0.c2))<>((rt1.c1))), ((rt0.c0)<(t0.c2)), CASE WHEN rt0.c1 THEN t0.c2 END))) ASC);
SELECT * FROM rt1, rt0, t0, vt0 WHERE (((NULLIF(t0.c2, rt0.c0))>=(CASE WHEN rt1.c0 THEN x'' END))) ORDER BY ((('0.6889012112042907', TYPEOF('0.0675982398196674'), NULL))<=(((((t0.c2))!=((rt1.c1))), ((rt0.c0)<(t0.c2)), CASE WHEN rt0.c1 THEN t0.c2 END))) ASC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON CASE ((t0.c2)!=(rt0.c0))  WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS TEXT) END CROSS JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((t0.c1)>=(t0.c1)))<>(((t0.c1) NOT NULL))) WHERE (((((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))=((((rt0.c2))<=((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))==((((rt0.c2))<=((t0.c1)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON CASE ((t0.c2)!=(rt0.c0))  WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS TEXT) END CROSS JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((t0.c1)>=(t0.c1)))!=(((t0.c1) NOT NULL))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON CASE ((t0.c2)!=(rt0.c0))  WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS TEXT) END CROSS JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((t0.c1)>=(t0.c1)))<>(((t0.c1) NOT NULL))) WHERE (((((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))=((((rt0.c2))<=((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))==((((rt0.c2))<=((t0.c1)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON CASE ((t0.c2)!=(rt0.c0))  WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS TEXT) END CROSS JOIN vt0 ON (+ (rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((t0.c1)>=(t0.c1)))!=(((t0.c1) NOT NULL))));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((((t0.c1) NOT NULL))OR(CASE WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN '257445993' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) NOT NULL))OR(CASE WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN '257445993' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)%(t0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((((t0.c1) NOT NULL))OR(CASE WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN '257445993' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) NOT NULL))OR(CASE WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN '257445993' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)%(t0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((((t0.c1) NOT NULL))OR(CASE WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN '257445993' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)%(t0.c2)))));
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST(((((rt1.c0)AND(t0.c2)))OR(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)AND(t0.c2)))OR(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST(((((rt1.c0)AND(t0.c2)))OR(rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)AND(t0.c2)))OR(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST(((((rt1.c0)AND(t0.c2)))OR(rt1.c0)) AS BLOB));
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((((t0.c1)OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY) ORDER BY (((rt1.c2) NOTNULL) IN (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0, rt1 ORDER BY (((rt1.c2) NOTNULL) IN (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((((t0.c1)OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY) ORDER BY (((rt1.c2) NOTNULL) IN (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0, rt1 ORDER BY (((rt1.c2) NOTNULL) IN (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((((t0.c1)OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY) ORDER BY (((rt1.c2) NOTNULL) IN (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (((rt1.c0))==((((((t0.c2)AND(t0.c2)))AND(t0.c1))))) RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c2)) AND ((rt1.c1, t0.c0, rt1.c1))) THEN (+ (rt0.c2)) ELSE x'' END LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN ('5') AND (rt1.c2)) THEN (~ ('癑')) END WHERE ((((('㸊<')<(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((('㸊<')<(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (((rt1.c0))=((((((t0.c2)AND(t0.c2)))AND(t0.c1))))) RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c2)) AND ((rt1.c1, t0.c0, rt1.c1))) THEN (+ (rt0.c2)) ELSE x'' END LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN ('5') AND (rt1.c2)) THEN (~ ('癑')) END);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (((rt1.c0))==((((((t0.c2)AND(t0.c2)))AND(t0.c1))))) RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c2)) AND ((rt1.c1, t0.c0, rt1.c1))) THEN (+ (rt0.c2)) ELSE x'' END LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN ('5') AND (rt1.c2)) THEN (~ ('癑')) END WHERE ((((('㸊<')<(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((('㸊<')<(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (((rt1.c0))=((((((t0.c2)AND(t0.c2)))AND(t0.c1))))) RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c2)) AND ((rt1.c1, t0.c0, rt1.c1))) THEN (+ (rt0.c2)) ELSE x'' END LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN ('5') AND (rt1.c2)) THEN (~ ('癑')) END);
SELECT ALL * FROM vt0 WHERE (x'e723');
SELECT SUM(count) FROM (SELECT ((x'e723') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'e723');
SELECT SUM(count) FROM (SELECT ((x'e723') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'e723');
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (TRIM(((vt0.c0)&(vt0.c0)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0)&(vt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (TRIM(((vt0.c0)&(vt0.c0)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0)&(vt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (TRIM(((vt0.c0)&(vt0.c0)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 INNER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM WHERE (CAST((((vt0.c0, t0.c0, rt0.c2))<=((NULL, t0.c0, t0.c2))) AS REAL)) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, t0.c0, rt0.c2))<=((NULL, t0.c0, t0.c2))) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0 INNER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 INNER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM WHERE (CAST((((vt0.c0, t0.c0, rt0.c2))<=((NULL, t0.c0, t0.c2))) AS REAL)) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, t0.c0, rt0.c2))<=((NULL, t0.c0, t0.c2))) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0 INNER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 INNER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM WHERE (CAST((((vt0.c0, t0.c0, rt0.c2))<=((NULL, t0.c0, t0.c2))) AS REAL)) ORDER BY CHANGES()  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (UNLIKELY(DISTINCT ((((t0.c1)AND(rt0.c2)))OR(x'a4ee')))) ORDER BY (((('865830550') IS FALSE))>>(((t0.c0)*(rt1.c1)))), (((((((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt1.c0))))AND(((rt0.c1)<(t0.c1)))))OR((+ (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((((t0.c1)AND(rt0.c2)))OR(x'a4ee')))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((('865830550') IS FALSE))>>(((t0.c0)*(rt1.c1)))), (((((((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt1.c0))))AND(((rt0.c1)<(t0.c1)))))OR((+ (rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (UNLIKELY(DISTINCT ((((t0.c1)AND(rt0.c2)))OR(x'a4ee')))) ORDER BY (((('865830550') IS FALSE))>>(((t0.c0)*(rt1.c1)))), (((((((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt1.c0))))AND(((rt0.c1)<(t0.c1)))))OR((+ (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((((t0.c1)AND(rt0.c2)))OR(x'a4ee')))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((('865830550') IS FALSE))>>(((t0.c0)*(rt1.c1)))), (((((((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt1.c0))))AND(((rt0.c1)<(t0.c1)))))OR((+ (rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (UNLIKELY(DISTINCT ((((t0.c1)AND(rt0.c2)))OR(x'a4ee')))) ORDER BY (((('865830550') IS FALSE))>>(((t0.c0)*(rt1.c1)))), (((((((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt1.c0))))AND(((rt0.c1)<(t0.c1)))))OR((+ (rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN rt1 ON vt0.c0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (~ (rt0.c0))) WHERE ((((~ (rt1.c2)))LIKE(CASE WHEN rt1.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))LIKE(CASE WHEN rt1.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 INNER JOIN rt1 ON vt0.c0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (~ (rt0.c0))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN rt1 ON vt0.c0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (~ (rt0.c0))) WHERE ((((~ (rt1.c2)))LIKE(CASE WHEN rt1.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))LIKE(CASE WHEN rt1.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 INNER JOIN rt1 ON vt0.c0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (~ (rt0.c0))));
SELECT * FROM t0, vt0 LEFT OUTER JOIN rt0 ON (HEX(rt0.c1) IN (((t0.c1)<=(rt0.c1)), CASE t0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c0 END)) WHERE ((((CASE NULL  WHEN rt0.c1 THEN t0.c2 ELSE t0.c0 END, CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END, CAST(rt0.c0 AS TEXT), x'', ((t0.c2)GLOB(t0.c0))))!=((LIKELY(DISTINCT t0.c0), (NOT (t0.c0)), rt0.c0, rt0.c0 COLLATE BINARY, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE NULL  WHEN rt0.c1 THEN t0.c2 ELSE t0.c0 END, CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END, CAST(rt0.c0 AS TEXT), x'', ((t0.c2)GLOB(t0.c0))))!=((LIKELY(DISTINCT t0.c0), (NOT (t0.c0)), rt0.c0, rt0.c0 COLLATE BINARY, t0.c2)))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON (HEX(rt0.c1) IN (((t0.c1)<=(rt0.c1)), CASE t0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c0 END)));
SELECT * FROM t0, vt0 LEFT OUTER JOIN rt0 ON (HEX(rt0.c1) IN (((t0.c1)<=(rt0.c1)), CASE t0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c0 END)) WHERE ((((CASE NULL  WHEN rt0.c1 THEN t0.c2 ELSE t0.c0 END, CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END, CAST(rt0.c0 AS TEXT), x'', ((t0.c2)GLOB(t0.c0))))!=((LIKELY(DISTINCT t0.c0), (NOT (t0.c0)), rt0.c0, rt0.c0 COLLATE BINARY, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE NULL  WHEN rt0.c1 THEN t0.c2 ELSE t0.c0 END, CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END, CAST(rt0.c0 AS TEXT), x'', ((t0.c2)GLOB(t0.c0))))!=((LIKELY(DISTINCT t0.c0), (NOT (t0.c0)), rt0.c0, rt0.c0 COLLATE BINARY, t0.c2)))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON (HEX(rt0.c1) IN (((t0.c1)<=(rt0.c1)), CASE t0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c0 END)));
SELECT * FROM t0, vt0 LEFT OUTER JOIN rt0 ON (HEX(rt0.c1) IN (((t0.c1)<=(rt0.c1)), CASE t0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c0 END)) WHERE ((((CASE NULL  WHEN rt0.c1 THEN t0.c2 ELSE t0.c0 END, CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END, CAST(rt0.c0 AS TEXT), x'', ((t0.c2)GLOB(t0.c0))))!=((LIKELY(DISTINCT t0.c0), (NOT (t0.c0)), rt0.c0, rt0.c0 COLLATE BINARY, t0.c2))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((IFNULL(t0.c2, t0.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((rt0.c1 IN ())))) ORDER BY (- (t0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)|(t0.c0)))OR(865830550)))AND(CASE WHEN 'SP䋲a' THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(t0.c2, t0.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (t0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)|(t0.c0)))OR(865830550)))AND(CASE WHEN 'SP䋲a' THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((IFNULL(t0.c2, t0.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((rt0.c1 IN ())))) ORDER BY (- (t0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)|(t0.c0)))OR(865830550)))AND(CASE WHEN 'SP䋲a' THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(t0.c2, t0.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (t0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)|(t0.c0)))OR(865830550)))AND(CASE WHEN 'SP䋲a' THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((IFNULL(t0.c2, t0.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((rt0.c1 IN ())))) ORDER BY (- (t0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)|(t0.c0)))OR(865830550)))AND(CASE WHEN 'SP䋲a' THEN rt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON 'F.' CROSS JOIN vt0 ON (json_type(t0.c1) IN ()) WHERE ((((CASE WHEN t0.c0 THEN rt1.c2 ELSE t0.c2 END, ((rt1.c1)OR(t0.c1)), NULL))<>(((NOT (t0.c0)), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), ((((t0.c1)OR(t0.c1)))OR(rt1.c0)))))) ORDER BY CAST(CASE WHEN '0.7867690995294454' THEN rt1.c1 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN rt1.c2 ELSE t0.c2 END, ((rt1.c1)OR(t0.c1)), NULL))<>(((NOT (t0.c0)), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), ((((t0.c1)OR(t0.c1)))OR(rt1.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON 'F.' CROSS JOIN vt0 ON (json_type(t0.c1) IN ()) ORDER BY CAST(CASE WHEN '0.7867690995294454' THEN rt1.c1 END AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON 'F.' CROSS JOIN vt0 ON (json_type(t0.c1) IN ()) WHERE ((((CASE WHEN t0.c0 THEN rt1.c2 ELSE t0.c2 END, ((rt1.c1)OR(t0.c1)), NULL))<>(((NOT (t0.c0)), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), ((((t0.c1)OR(t0.c1)))OR(rt1.c0)))))) ORDER BY CAST(CASE WHEN '0.7867690995294454' THEN rt1.c1 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN rt1.c2 ELSE t0.c2 END, ((rt1.c1)OR(t0.c1)), NULL))<>(((NOT (t0.c0)), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), ((((t0.c1)OR(t0.c1)))OR(rt1.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON 'F.' CROSS JOIN vt0 ON (json_type(t0.c1) IN ()) ORDER BY CAST(CASE WHEN '0.7867690995294454' THEN rt1.c1 END AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON 'F.' CROSS JOIN vt0 ON (json_type(t0.c1) IN ()) WHERE ((((CASE WHEN t0.c0 THEN rt1.c2 ELSE t0.c2 END, ((rt1.c1)OR(t0.c1)), NULL))<>(((NOT (t0.c0)), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), ((((t0.c1)OR(t0.c1)))OR(rt1.c0)))))) ORDER BY CAST(CASE WHEN '0.7867690995294454' THEN rt1.c1 END AS BLOB) ASC  NULLS LAST;
SELECT * FROM rt1, t0 WHERE ('/⧲]C');
SELECT SUM(count) FROM (SELECT ALL (('/⧲]C') IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE ('/⧲]C');
SELECT SUM(count) FROM (SELECT ALL (('/⧲]C') IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE ('/⧲]C');
SELECT ALL * FROM t0, rt1 WHERE (CAST(CASE x''  WHEN t0.c0 THEN t0.c1 WHEN 0.48152261215447334 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END AS REAL)) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE x''  WHEN t0.c0 THEN t0.c1 WHEN 0.48152261215447334 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END AS REAL)) IS TRUE)  as count FROM t0, rt1 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (CAST(CASE x''  WHEN t0.c0 THEN t0.c1 WHEN 0.48152261215447334 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END AS REAL)) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE x''  WHEN t0.c0 THEN t0.c1 WHEN 0.48152261215447334 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END AS REAL)) IS TRUE)  as count FROM t0, rt1 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (CAST(CASE x''  WHEN t0.c0 THEN t0.c1 WHEN 0.48152261215447334 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END AS REAL)) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c1)<(t0.c1)) THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)<(t0.c1)) THEN t0.c1 END) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c1)<(t0.c1)) THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)<(t0.c1)) THEN t0.c1 END) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c1)<(t0.c1)) THEN t0.c1 END);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((NOT (((rt1.c1)|(rt1.c0))))) ORDER BY json_array_length((~ (rt1.c0)), ((rt1.c2) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c1)|(rt1.c0))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY json_array_length((~ (rt1.c0)), ((rt1.c2) ISNULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((NOT (((rt1.c1)|(rt1.c0))))) ORDER BY json_array_length((~ (rt1.c0)), ((rt1.c2) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c1)|(rt1.c0))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY json_array_length((~ (rt1.c0)), ((rt1.c2) ISNULL)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON '4192697' WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOTNULL)) AND (((t0.c2) NOTNULL)))) ORDER BY ((0.9578803395833327)>>(((rt0.c2) IS TRUE))) ASC, (((rt0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN rt0.c1 THEN rt0.c1 END)) AND (((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOTNULL)) AND (((t0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON '4192697' ORDER BY ((0.9578803395833327)>>(((rt0.c2) IS TRUE))) ASC, (((rt0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN rt0.c1 THEN rt0.c1 END)) AND (((+ (t0.c0))))));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON '4192697' WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOTNULL)) AND (((t0.c2) NOTNULL)))) ORDER BY ((0.9578803395833327)>>(((rt0.c2) IS TRUE))) ASC, (((rt0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN rt0.c1 THEN rt0.c1 END)) AND (((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOTNULL)) AND (((t0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON '4192697' ORDER BY ((0.9578803395833327)>>(((rt0.c2) IS TRUE))) ASC, (((rt0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN rt0.c1 THEN rt0.c1 END)) AND (((+ (t0.c0))))));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON '4192697' WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOTNULL)) AND (((t0.c2) NOTNULL)))) ORDER BY ((0.9578803395833327)>>(((rt0.c2) IS TRUE))) ASC, (((rt0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN rt0.c1 THEN rt0.c1 END)) AND (((+ (t0.c0)))));
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE (rt0.c2) ORDER BY ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0, rt1 ORDER BY ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE (rt0.c2) ORDER BY ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0, rt1 ORDER BY ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE (rt0.c2) ORDER BY ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (NULLIF(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((('-58605173'))==((((t0.c2) IS TRUE)))) CROSS JOIN t0 ON ((((0.39055989527103174)!=(rt1.c0)))IS NOT(CASE rt1.c2  WHEN rt1.c0 THEN t0.c2 END)) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((('-58605173'))=((((t0.c2) IS TRUE)))) CROSS JOIN t0 ON ((((0.39055989527103174)!=(rt1.c0)))IS NOT(CASE rt1.c2  WHEN rt1.c0 THEN t0.c2 END)));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((('-58605173'))==((((t0.c2) IS TRUE)))) CROSS JOIN t0 ON ((((0.39055989527103174)!=(rt1.c0)))IS NOT(CASE rt1.c2  WHEN rt1.c0 THEN t0.c2 END)) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((('-58605173'))=((((t0.c2) IS TRUE)))) CROSS JOIN t0 ON ((((0.39055989527103174)!=(rt1.c0)))IS NOT(CASE rt1.c2  WHEN rt1.c0 THEN t0.c2 END)));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((('-58605173'))==((((t0.c2) IS TRUE)))) CROSS JOIN t0 ON ((((0.39055989527103174)!=(rt1.c0)))IS NOT(CASE rt1.c2  WHEN rt1.c0 THEN t0.c2 END)) WHERE (rt1.c2);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c1 IN ()))||(((t0.c1)LIKE(t0.c2))))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c1 END IN ((+ (t0.c2)))), (((rt0.c0) IS FALSE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))||(((t0.c1)LIKE(t0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c1 END IN ((+ (t0.c2)))), (((rt0.c0) IS FALSE) IN ()) ASC);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c1 IN ()))||(((t0.c1)LIKE(t0.c2))))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c1 END IN ((+ (t0.c2)))), (((rt0.c0) IS FALSE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))||(((t0.c1)LIKE(t0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c1 END IN ((+ (t0.c2)))), (((rt0.c0) IS FALSE) IN ()) ASC);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c1 IN ()))||(((t0.c1)LIKE(t0.c2))))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c1 END IN ((+ (t0.c2)))), (((rt0.c0) IS FALSE) IN ()) ASC;
SELECT COUNT(*) FROM vt0, rt1, t0, rt0 WHERE (((TRIM(rt0.c2, vt0.c0))+(((rt0.c0)<=(0.2990046544982068)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c2, vt0.c0))+(((rt0.c0)<=(0.2990046544982068))))) IS TRUE)  as count FROM vt0, rt1, t0, rt0);
SELECT COUNT(*) FROM vt0, rt1, t0, rt0 WHERE (((TRIM(rt0.c2, vt0.c0))+(((rt0.c0)<=(0.2990046544982068)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c2, vt0.c0))+(((rt0.c0)<=(0.2990046544982068))))) IS TRUE)  as count FROM vt0, rt1, t0, rt0);
SELECT COUNT(*) FROM vt0, rt1, t0, rt0 WHERE (((TRIM(rt0.c2, vt0.c0))+(((rt0.c0)<=(0.2990046544982068)))));
SELECT * FROM vt0, rt0, t0, rt1 WHERE (LIKELY(((rt0.c2)<>(0.5987283773909258))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c2)!=(0.5987283773909258)))) IS TRUE)  as count FROM vt0, rt0, t0, rt1);
SELECT * FROM vt0, rt0, t0, rt1 WHERE (LIKELY(((rt0.c2)<>(0.5987283773909258))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c2)!=(0.5987283773909258)))) IS TRUE)  as count FROM vt0, rt0, t0, rt1);
SELECT * FROM vt0, rt0, t0, rt1 WHERE (LIKELY(((rt0.c2)<>(0.5987283773909258))));
SELECT ALL * FROM vt0, rt0, rt1, t0 WHERE (LIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))) ORDER BY ((rt1.c1)/(CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c1 THEN rt1.c2 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c2 END)) DESC, ((t0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0, rt1, t0 ORDER BY ((rt1.c1)/(CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c1 THEN rt1.c2 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c2 END)) DESC, ((t0.c2 IN ()) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, rt1, t0 WHERE (LIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))) ORDER BY ((rt1.c1)/(CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c1 THEN rt1.c2 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c2 END)) DESC, ((t0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0, rt1, t0 ORDER BY ((rt1.c1)/(CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c1 THEN rt1.c2 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c2 END)) DESC, ((t0.c2 IN ()) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, rt1, t0 WHERE (LIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))) ORDER BY ((rt1.c1)/(CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c1 THEN rt1.c2 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c2 END)) DESC, ((t0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0, 0.31473841339393804, rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt1.c2)AND(rt0.c0)))AND(rt1.c0)), rt1.c2)) AND ((((NULL)OR(rt1.c1)), rt1.c2 COLLATE NOCASE, ((rt1.c1)*(rt1.c0)))))) ORDER BY ((rt0.c2 IN (rt1.c2)) IN (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((((ABS(rt1.c2))AND(((rt0.c0)OR(rt1.c1)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, 0.31473841339393804, rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt1.c2)AND(rt0.c0)))AND(rt1.c0)), rt1.c2)) AND ((((NULL)OR(rt1.c1)), rt1.c2 COLLATE NOCASE, ((rt1.c1)*(rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c2 IN (rt1.c2)) IN (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((((ABS(rt1.c2))AND(((rt0.c0)OR(rt1.c1)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0, 0.31473841339393804, rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt1.c2)AND(rt0.c0)))AND(rt1.c0)), rt1.c2)) AND ((((NULL)OR(rt1.c1)), rt1.c2 COLLATE NOCASE, ((rt1.c1)*(rt1.c0)))))) ORDER BY ((rt0.c2 IN (rt1.c2)) IN (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((((ABS(rt1.c2))AND(((rt0.c0)OR(rt1.c1)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, 0.31473841339393804, rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt1.c2)AND(rt0.c0)))AND(rt1.c0)), rt1.c2)) AND ((((NULL)OR(rt1.c1)), rt1.c2 COLLATE NOCASE, ((rt1.c1)*(rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c2 IN (rt1.c2)) IN (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((((ABS(rt1.c2))AND(((rt0.c0)OR(rt1.c1)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0, 0.31473841339393804, rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt1.c2)AND(rt0.c0)))AND(rt1.c0)), rt1.c2)) AND ((((NULL)OR(rt1.c1)), rt1.c2 COLLATE NOCASE, ((rt1.c1)*(rt1.c0)))))) ORDER BY ((rt0.c2 IN (rt1.c2)) IN (CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((((ABS(rt1.c2))AND(((rt0.c0)OR(rt1.c1)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t0, rt1 WHERE ((((rt1.c0)+(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)+(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, rt1);
SELECT COUNT(*) FROM rt0, vt0, t0, rt1 WHERE ((((rt1.c0)+(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)+(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, rt1);
SELECT COUNT(*) FROM rt0, vt0, t0, rt1 WHERE ((((rt1.c0)+(rt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (((t0.c2)<(((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c1))))) ORDER BY ((MAX(t0.c2, vt0.c0)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2))) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c2)<(((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, t0, rt0, vt0 ORDER BY ((MAX(t0.c2, vt0.c0)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2))) AND (NULL)) ASC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (((t0.c2)<(((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c1))))) ORDER BY ((MAX(t0.c2, vt0.c0)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2))) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c2)<(((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, t0, rt0, vt0 ORDER BY ((MAX(t0.c2, vt0.c0)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2))) AND (NULL)) ASC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (((t0.c2)<(((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c1))))) ORDER BY ((MAX(t0.c2, vt0.c0)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c2))) AND (NULL)) ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((t0.c1))!=((NULL)))) BETWEEN (CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('108060132'))) ORDER BY load_extension((t0.c2 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<>((NULL)))) BETWEEN (CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('108060132'))) IS TRUE)  as count FROM rt1, t0 ORDER BY load_extension((t0.c2 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((t0.c1))!=((NULL)))) BETWEEN (CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('108060132'))) ORDER BY load_extension((t0.c2 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<>((NULL)))) BETWEEN (CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('108060132'))) IS TRUE)  as count FROM rt1, t0 ORDER BY load_extension((t0.c2 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS TEXT) CROSS JOIN rt1 ON ((((((rt1.c0)AND(rt0.c1)))AND(t0.c2)))/(((((vt0.c0)AND(t0.c0)))AND(rt1.c0)))) WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS TEXT) CROSS JOIN rt1 ON ((((((rt1.c0)AND(rt0.c1)))AND(t0.c2)))/(((((vt0.c0)AND(t0.c0)))AND(rt1.c0)))));
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS TEXT) CROSS JOIN rt1 ON ((((((rt1.c0)AND(rt0.c1)))AND(t0.c2)))/(((((vt0.c0)AND(t0.c0)))AND(rt1.c0)))) WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS TEXT) CROSS JOIN rt1 ON ((((((rt1.c0)AND(rt0.c1)))AND(t0.c2)))/(((((vt0.c0)AND(t0.c0)))AND(rt1.c0)))));
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON CAST(CAST(rt1.c2 AS TEXT) AS TEXT) CROSS JOIN rt1 ON ((((((rt1.c0)AND(rt0.c1)))AND(t0.c2)))/(((((vt0.c0)AND(t0.c0)))AND(rt1.c0)))) WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT * FROM t0, vt0 WHERE (TYPEOF(DISTINCT vt0.c0)) ORDER BY (((t0.c1))>=(((t0.c2 IN (t0.c0, t0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c0)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c1))>=(((t0.c2 IN (t0.c0, t0.c1))))) DESC);
SELECT * FROM t0, vt0 WHERE (TYPEOF(DISTINCT vt0.c0)) ORDER BY (((t0.c1))>=(((t0.c2 IN (t0.c0, t0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c0)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c1))>=(((t0.c2 IN (t0.c0, t0.c1))))) DESC);
SELECT * FROM t0, vt0 WHERE (TYPEOF(DISTINCT vt0.c0)) ORDER BY (((t0.c1))>=(((t0.c2 IN (t0.c0, t0.c1))))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON NULL CROSS JOIN rt1 ON ((1376799481)AND(rt1.c1)) COLLATE BINARY WHERE ((+ (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON NULL CROSS JOIN rt1 ON ((1376799481)AND(rt1.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON NULL CROSS JOIN rt1 ON ((1376799481)AND(rt1.c1)) COLLATE BINARY WHERE ((+ (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON NULL CROSS JOIN rt1 ON ((1376799481)AND(rt1.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON NULL CROSS JOIN rt1 ON ((1376799481)AND(rt1.c1)) COLLATE BINARY WHERE ((+ (CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt1 INDEXED BY i38 FULL OUTER JOIN t0 ON IFNULL(((((rt1.c2)OR(t0.c2)))OR(rt1.c0)), IFNULL(vt0.c0, rt1.c0)) RIGHT OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL)) NOT BETWEEN (((rt1.c2)<(rt1.c2))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) WHERE (CASE WHEN rt1.c0 THEN ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((NULL)|(vt0.c0)) THEN ((t0.c0)>=(t0.c0)) WHEN ((vt0.c0) NOTNULL) THEN (~ (rt1.c1)) ELSE (('') IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((NULL)|(vt0.c0)) THEN ((t0.c0)>=(t0.c0)) WHEN ((vt0.c0) NOTNULL) THEN (~ (rt1.c1)) ELSE (('') IS FALSE) END) IS TRUE)  as count FROM rt1 INDEXED BY i38 FULL OUTER JOIN t0 ON IFNULL(((((rt1.c2)OR(t0.c2)))OR(rt1.c0)), IFNULL(vt0.c0, rt1.c0)) RIGHT OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL)) NOT BETWEEN (((rt1.c2)<(rt1.c2))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT ALL * FROM rt1 INDEXED BY i38 FULL OUTER JOIN t0 ON IFNULL(((((rt1.c2)OR(t0.c2)))OR(rt1.c0)), IFNULL(vt0.c0, rt1.c0)) RIGHT OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL)) NOT BETWEEN (((rt1.c2)<(rt1.c2))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) WHERE (CASE WHEN rt1.c0 THEN ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((NULL)|(vt0.c0)) THEN ((t0.c0)>=(t0.c0)) WHEN ((vt0.c0) NOTNULL) THEN (~ (rt1.c1)) ELSE (('') IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((NULL)|(vt0.c0)) THEN ((t0.c0)>=(t0.c0)) WHEN ((vt0.c0) NOTNULL) THEN (~ (rt1.c1)) ELSE (('') IS FALSE) END) IS TRUE)  as count FROM rt1 INDEXED BY i38 FULL OUTER JOIN t0 ON IFNULL(((((rt1.c2)OR(t0.c2)))OR(rt1.c0)), IFNULL(vt0.c0, rt1.c0)) RIGHT OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL)) NOT BETWEEN (((rt1.c2)<(rt1.c2))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((((x'8ac3b358')OR(t0.c2)))OR(t0.c0))) NOT BETWEEN ((((t0.c2, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c2)))) AND (((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((x'8ac3b358')OR(t0.c2)))OR(t0.c0))) NOT BETWEEN ((((t0.c2, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c2)))) AND (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((x'8ac3b358')OR(t0.c2)))OR(t0.c0))) NOT BETWEEN ((((t0.c2, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c2)))) AND (((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((x'8ac3b358')OR(t0.c2)))OR(t0.c0))) NOT BETWEEN ((((t0.c2, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c2)))) AND (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((x'8ac3b358')OR(t0.c2)))OR(t0.c0))) NOT BETWEEN ((((t0.c2, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c2)))) AND (((t0.c1) NOT NULL))));
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c1)) AND ((((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c2)))))) ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE ASC, ((((((t0.c1)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c0)<=(t0.c2))) AND (CAST(t0.c1 AS TEXT))) ASC, load_extension(((x'99a4') BETWEEN ('1610550355') AND (t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((t0.c1)) AND ((((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE ASC, ((((((t0.c1)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c0)<=(t0.c2))) AND (CAST(t0.c1 AS TEXT))) ASC, load_extension(((x'99a4') BETWEEN ('1610550355') AND (t0.c2))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c1)) AND ((((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c2)))))) ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE ASC, ((((((t0.c1)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c0)<=(t0.c2))) AND (CAST(t0.c1 AS TEXT))) ASC, load_extension(((x'99a4') BETWEEN ('1610550355') AND (t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((t0.c1)) AND ((((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) ISNULL) COLLATE NOCASE ASC, ((((((t0.c1)AND(t0.c1)))OR(t0.c1))) BETWEEN (((t0.c0)<=(t0.c2))) AND (CAST(t0.c1 AS TEXT))) ASC, load_extension(((x'99a4') BETWEEN ('1610550355') AND (t0.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON COALESCE(CAST(rt0.c2 AS REAL), ((t0.c1)|('xc*ⓥayp쵭I[]')), CAST(t0.c0 AS NUMERIC), LIKELY(t0.c0)) WHERE (((((((t0.c2)<(rt0.c2)))AND(CASE rt0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)<(rt0.c2)))AND(CASE rt0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON COALESCE(CAST(rt0.c2 AS REAL), ((t0.c1)|('xc*ⓥayp쵭I[]')), CAST(t0.c0 AS NUMERIC), LIKELY(t0.c0)) ORDER BY t0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON COALESCE(CAST(rt0.c2 AS REAL), ((t0.c1)|('xc*ⓥayp쵭I[]')), CAST(t0.c0 AS NUMERIC), LIKELY(t0.c0)) WHERE (((((((t0.c2)<(rt0.c2)))AND(CASE rt0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)<(rt0.c2)))AND(CASE rt0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON COALESCE(CAST(rt0.c2 AS REAL), ((t0.c1)|('xc*ⓥayp쵭I[]')), CAST(t0.c0 AS NUMERIC), LIKELY(t0.c0)) ORDER BY t0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON COALESCE(CAST(rt0.c2 AS REAL), ((t0.c1)|('xc*ⓥayp쵭I[]')), CAST(t0.c0 AS NUMERIC), LIKELY(t0.c0)) WHERE (((((((t0.c2)<(rt0.c2)))AND(CASE rt0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY t0.c2;
SELECT * FROM rt0, t0 INNER JOIN rt1 ON (((((NOT (rt1.c2)))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt1.c1 END)) INNER JOIN vt0 ON ((((rt0.c0) NOTNULL))IS(TRIM(rt1.c0, rt1.c1))) WHERE ((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND (((~ (rt1.c2)))))) ORDER BY (((((0.4192274209295711, t0.c2, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, 0.9160456254488731)) AND ((rt1.c0, rt1.c1, rt1.c1))))+((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND (((~ (rt1.c2)))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON (((((NOT (rt1.c2)))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt1.c1 END)) INNER JOIN vt0 ON ((((rt0.c0) NOTNULL))IS(TRIM(rt1.c0, rt1.c1))) ORDER BY (((((0.4192274209295711, t0.c2, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, 0.9160456254488731)) AND ((rt1.c0, rt1.c1, rt1.c1))))+((rt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM rt0, t0 INNER JOIN rt1 ON (((((NOT (rt1.c2)))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt1.c1 END)) INNER JOIN vt0 ON ((((rt0.c0) NOTNULL))IS(TRIM(rt1.c0, rt1.c1))) WHERE ((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND (((~ (rt1.c2)))))) ORDER BY (((((0.4192274209295711, t0.c2, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, 0.9160456254488731)) AND ((rt1.c0, rt1.c1, rt1.c1))))+((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND (((~ (rt1.c2)))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON (((((NOT (rt1.c2)))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt1.c1 END)) INNER JOIN vt0 ON ((((rt0.c0) NOTNULL))IS(TRIM(rt1.c0, rt1.c1))) ORDER BY (((((0.4192274209295711, t0.c2, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, 0.9160456254488731)) AND ((rt1.c0, rt1.c1, rt1.c1))))+((rt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM rt0, t0 INNER JOIN rt1 ON (((((NOT (rt1.c2)))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt1.c1 END)) INNER JOIN vt0 ON ((((rt0.c0) NOTNULL))IS(TRIM(rt1.c0, rt1.c1))) WHERE ((((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND (((~ (rt1.c2)))))) ORDER BY (((((0.4192274209295711, t0.c2, rt1.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, 0.9160456254488731)) AND ((rt1.c0, rt1.c1, rt1.c1))))+((rt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ (x'')) INNER JOIN vt0 ON (+ (LIKELIHOOD(rt1.c1, 0.32749357527588474))) WHERE (((((t0.c2)AND(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)AND(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ (x'')) INNER JOIN vt0 ON (+ (LIKELIHOOD(rt1.c1, 0.32749357527588474))));
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ (x'')) INNER JOIN vt0 ON (+ (LIKELIHOOD(rt1.c1, 0.32749357527588474))) WHERE (((((t0.c2)AND(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)AND(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ (x'')) INNER JOIN vt0 ON (+ (LIKELIHOOD(rt1.c1, 0.32749357527588474))));
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ (x'')) INNER JOIN vt0 ON (+ (LIKELIHOOD(rt1.c1, 0.32749357527588474))) WHERE (((((t0.c2)AND(rt1.c0))) NOT NULL));
SELECT * FROM rt0 CROSS JOIN t0 ON ((t0.c2)<(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((NULL))))<<('x*5t7k')) RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c2)) AS INTEGER) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c2) BETWEEN (vt0.c0) AND (t0.c0)))) AND (((((t0.c2))=((t0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt1.c2) BETWEEN (vt0.c0) AND (t0.c0)))) AND (((((t0.c2))==((t0.c2))))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((t0.c2)<(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((NULL))))<<('x*5t7k')) RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c2)) AS INTEGER));
SELECT * FROM rt0 CROSS JOIN t0 ON ((t0.c2)<(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((NULL))))<<('x*5t7k')) RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c2)) AS INTEGER) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c2) BETWEEN (vt0.c0) AND (t0.c0)))) AND (((((t0.c2))=((t0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt1.c2) BETWEEN (vt0.c0) AND (t0.c0)))) AND (((((t0.c2))==((t0.c2))))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((t0.c2)<(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((NULL))))<<('x*5t7k')) RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c2)) AS INTEGER));
SELECT * FROM rt0 CROSS JOIN t0 ON ((t0.c2)<(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((NULL))))<<('x*5t7k')) RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c2)) AS INTEGER) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c2) BETWEEN (vt0.c0) AND (t0.c0)))) AND (((((t0.c2))=((t0.c2)))))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CHANGES())) AND ((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))>(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CHANGES())) AND ((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS INTEGER))>(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CHANGES())) AND ((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))>(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CHANGES())) AND ((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS INTEGER))>(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CHANGES())) AND ((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))>(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))) ASC;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON (((rt1.c1)>=(rt1.c2)) IN ()) WHERE ((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c0))))==(((+ (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c0))))=(((+ (rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt0 ON (((rt1.c1)>=(rt1.c2)) IN ()));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON (((rt1.c1)>=(rt1.c2)) IN ()) WHERE ((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c0))))==(((+ (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c0))))=(((+ (rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt0 ON (((rt1.c1)>=(rt1.c2)) IN ()));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON (((rt1.c1)>=(rt1.c2)) IN ()) WHERE ((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c0))))==(((+ (rt1.c2))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((0Xffffffffe6267651 IN (rt0.c2, rt1.c0))) BETWEEN ((rt0.c1 IN ())) AND ((NOT (rt0.c2)))) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)>(((rt0.c2)<<('2118349647'))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)>(((rt0.c2)<<('2118349647'))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((0xffffffffe6267651 IN (rt0.c2, rt1.c0))) BETWEEN ((rt0.c1 IN ())) AND ((NOT (rt0.c2)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((0Xffffffffe6267651 IN (rt0.c2, rt1.c0))) BETWEEN ((rt0.c1 IN ())) AND ((NOT (rt0.c2)))) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)>(((rt0.c2)<<('2118349647'))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)>(((rt0.c2)<<('2118349647'))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((0xffffffffe6267651 IN (rt0.c2, rt1.c0))) BETWEEN ((rt0.c1 IN ())) AND ((NOT (rt0.c2)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((0Xffffffffe6267651 IN (rt0.c2, rt1.c0))) BETWEEN ((rt0.c1 IN ())) AND ((NOT (rt0.c2)))) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)>(((rt0.c2)<<('2118349647'))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)  NULLS FIRST;
SELECT * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (CASE rt1.c1  WHEN t0.c2 THEN vt0.c0 END IN ()) CROSS JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE (((((rt0.c2 IN (rt0.c0)), ((rt1.c2)LIKE(1.256067448E9)), ((((rt0.c0)OR(t0.c0)))AND(t0.c2)), DATETIME(t0.c1, t0.c1, t0.c2), ((((rt0.c1)OR(t0.c2)))AND(rt0.c0))))<=(((rt1.c0 IN (rt1.c2, rt1.c1)), '-375001922', (NOT (rt1.c0)), CAST(rt0.c0 AS TEXT), json_type(t0.c1))))) ORDER BY ((rt1.c1) NOT BETWEEN (((t0.c1) IS TRUE)) AND (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN (rt0.c0)), ((rt1.c2)LIKE(1.256067448E9)), ((((rt0.c0)OR(t0.c0)))AND(t0.c2)), DATETIME(t0.c1, t0.c1, t0.c2), ((((rt0.c1)OR(t0.c2)))AND(rt0.c0))))<=(((rt1.c0 IN (rt1.c2, rt1.c1)), '-375001922', (NOT (rt1.c0)), CAST(rt0.c0 AS TEXT), json_type(t0.c1))))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (CASE rt1.c1  WHEN t0.c2 THEN vt0.c0 END IN ()) CROSS JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) ORDER BY ((rt1.c1) NOT BETWEEN (((t0.c1) IS TRUE)) AND (NULL)) ASC  NULLS LAST);
SELECT * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (CASE rt1.c1  WHEN t0.c2 THEN vt0.c0 END IN ()) CROSS JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE (((((rt0.c2 IN (rt0.c0)), ((rt1.c2)LIKE(1.256067448E9)), ((((rt0.c0)OR(t0.c0)))AND(t0.c2)), DATETIME(t0.c1, t0.c1, t0.c2), ((((rt0.c1)OR(t0.c2)))AND(rt0.c0))))<=(((rt1.c0 IN (rt1.c2, rt1.c1)), '-375001922', (NOT (rt1.c0)), CAST(rt0.c0 AS TEXT), json_type(t0.c1))))) ORDER BY ((rt1.c1) NOT BETWEEN (((t0.c1) IS TRUE)) AND (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN (rt0.c0)), ((rt1.c2)LIKE(1.256067448E9)), ((((rt0.c0)OR(t0.c0)))AND(t0.c2)), DATETIME(t0.c1, t0.c1, t0.c2), ((((rt0.c1)OR(t0.c2)))AND(rt0.c0))))<=(((rt1.c0 IN (rt1.c2, rt1.c1)), '-375001922', (NOT (rt1.c0)), CAST(rt0.c0 AS TEXT), json_type(t0.c1))))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (CASE rt1.c1  WHEN t0.c2 THEN vt0.c0 END IN ()) CROSS JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) ORDER BY ((rt1.c1) NOT BETWEEN (((t0.c1) IS TRUE)) AND (NULL)) ASC  NULLS LAST);
SELECT * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (CASE rt1.c1  WHEN t0.c2 THEN vt0.c0 END IN ()) CROSS JOIN vt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE (((((rt0.c2 IN (rt0.c0)), ((rt1.c2)LIKE(1.256067448E9)), ((((rt0.c0)OR(t0.c0)))AND(t0.c2)), DATETIME(t0.c1, t0.c1, t0.c2), ((((rt0.c1)OR(t0.c2)))AND(rt0.c0))))<=(((rt1.c0 IN (rt1.c2, rt1.c1)), '-375001922', (NOT (rt1.c0)), CAST(rt0.c0 AS TEXT), json_type(t0.c1))))) ORDER BY ((rt1.c1) NOT BETWEEN (((t0.c1) IS TRUE)) AND (NULL)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON '0.9160456254488731' LEFT OUTER JOIN rt1 ON ((STRFTIME(0x62dc0df8, t0.c0, vt0.c0))<=((- (t0.c0)))) RIGHT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(rt1.c2)))OR(vt0.c0)))OR(rt1.c1)))AND(t0.c0)) COLLATE BINARY WHERE (((((t0.c2)&(rt1.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND ((((rt0.c2, rt0.c1, t0.c1)) NOT BETWEEN ((t0.c1, rt0.c1, t0.c1)) AND ((rt1.c2, t0.c1, vt0.c0)))))) ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN 0.5763419012495039 ELSE rt0.c0 END) AND (UNLIKELY(DISTINCT rt1.c1))) ASC, (((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((((((t0.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c1)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)&(rt1.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND ((((rt0.c2, rt0.c1, t0.c1)) NOT BETWEEN ((t0.c1, rt0.c1, t0.c1)) AND ((rt1.c2, t0.c1, vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON '0.9160456254488731' LEFT OUTER JOIN rt1 ON ((STRFTIME(0X62dc0df8, t0.c0, vt0.c0))<=((- (t0.c0)))) RIGHT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(rt1.c2)))OR(vt0.c0)))OR(rt1.c1)))AND(t0.c0)) COLLATE BINARY ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN 0.5763419012495039 ELSE rt0.c0 END) AND (UNLIKELY(DISTINCT rt1.c1))) ASC, (((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((((((t0.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c1)))OR(vt0.c0))))) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON '0.9160456254488731' LEFT OUTER JOIN rt1 ON ((STRFTIME(0x62dc0df8, t0.c0, vt0.c0))<=((- (t0.c0)))) RIGHT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(rt1.c2)))OR(vt0.c0)))OR(rt1.c1)))AND(t0.c0)) COLLATE BINARY WHERE (((((t0.c2)&(rt1.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND ((((rt0.c2, rt0.c1, t0.c1)) NOT BETWEEN ((t0.c1, rt0.c1, t0.c1)) AND ((rt1.c2, t0.c1, vt0.c0)))))) ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN 0.5763419012495039 ELSE rt0.c0 END) AND (UNLIKELY(DISTINCT rt1.c1))) ASC, (((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((((((t0.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c1)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)&(rt1.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND ((((rt0.c2, rt0.c1, t0.c1)) NOT BETWEEN ((t0.c1, rt0.c1, t0.c1)) AND ((rt1.c2, t0.c1, vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON '0.9160456254488731' LEFT OUTER JOIN rt1 ON ((STRFTIME(0X62dc0df8, t0.c0, vt0.c0))<=((- (t0.c0)))) RIGHT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(rt1.c2)))OR(vt0.c0)))OR(rt1.c1)))AND(t0.c0)) COLLATE BINARY ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN 0.5763419012495039 ELSE rt0.c0 END) AND (UNLIKELY(DISTINCT rt1.c1))) ASC, (((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((((((t0.c1)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c1)))OR(vt0.c0))))) ASC);
SELECT * FROM rt1, vt0 LEFT OUTER JOIN t0 ON (((-1.1286955E7 IN ())) NOT BETWEEN ((- (NULL))) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))<>(((((rt1.c2)AND(t0.c1)))OR(t0.c0)))) WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN UNLIKELY(DISTINCT rt1.c2) THEN (~ (rt1.c0)) WHEN ((rt1.c0)!=(t0.c0)) THEN ((rt0.c1) NOT NULL) WHEN rt1.c1 THEN (((t0.c2, t0.c1, vt0.c0))==((rt0.c2, rt0.c0, rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE RTRIM  WHEN UNLIKELY(DISTINCT rt1.c2) THEN (~ (rt1.c0)) WHEN ((rt1.c0)<>(t0.c0)) THEN ((rt0.c1) NOT NULL) WHEN rt1.c1 THEN (((t0.c2, t0.c1, vt0.c0))==((rt0.c2, rt0.c0, rt1.c2))) END) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN t0 ON (((-1.1286955E7 IN ())) NOT BETWEEN ((- (NULL))) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))<>(((((rt1.c2)AND(t0.c1)))OR(t0.c0)))));
SELECT * FROM rt1, vt0 LEFT OUTER JOIN t0 ON (((-1.1286955E7 IN ())) NOT BETWEEN ((- (NULL))) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))<>(((((rt1.c2)AND(t0.c1)))OR(t0.c0)))) WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN UNLIKELY(DISTINCT rt1.c2) THEN (~ (rt1.c0)) WHEN ((rt1.c0)!=(t0.c0)) THEN ((rt0.c1) NOT NULL) WHEN rt1.c1 THEN (((t0.c2, t0.c1, vt0.c0))==((rt0.c2, rt0.c0, rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE RTRIM  WHEN UNLIKELY(DISTINCT rt1.c2) THEN (~ (rt1.c0)) WHEN ((rt1.c0)<>(t0.c0)) THEN ((rt0.c1) NOT NULL) WHEN rt1.c1 THEN (((t0.c2, t0.c1, vt0.c0))==((rt0.c2, rt0.c0, rt1.c2))) END) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN t0 ON (((-1.1286955E7 IN ())) NOT BETWEEN ((- (NULL))) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))<>(((((rt1.c2)AND(t0.c1)))OR(t0.c0)))));
SELECT * FROM rt1, vt0 LEFT OUTER JOIN t0 ON (((-1.1286955E7 IN ())) NOT BETWEEN ((- (NULL))) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))<>(((((rt1.c2)AND(t0.c1)))OR(t0.c0)))) WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN UNLIKELY(DISTINCT rt1.c2) THEN (~ (rt1.c0)) WHEN ((rt1.c0)!=(t0.c0)) THEN ((rt0.c1) NOT NULL) WHEN rt1.c1 THEN (((t0.c2, t0.c1, vt0.c0))==((rt0.c2, rt0.c0, rt1.c2))) END);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0, rt1 WHERE (COALESCE(DISTINCT ((rt1.c2)OR(rt1.c1)), TRIM(rt0.c0), HEX(rt0.c2), t0.c1 COLLATE RTRIM, HEX(rt0.c1), ((((rt0.c2)AND(t0.c2)))AND(''))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt1.c2)OR(rt1.c1)), TRIM(rt0.c0), HEX(rt0.c2), t0.c1 COLLATE RTRIM, HEX(rt0.c1), ((((rt0.c2)AND(t0.c2)))AND('')))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0, rt1 WHERE (COALESCE(DISTINCT ((rt1.c2)OR(rt1.c1)), TRIM(rt0.c0), HEX(rt0.c2), t0.c1 COLLATE RTRIM, HEX(rt0.c1), ((((rt0.c2)AND(t0.c2)))AND(''))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt1.c2)OR(rt1.c1)), TRIM(rt0.c0), HEX(rt0.c2), t0.c1 COLLATE RTRIM, HEX(rt0.c1), ((((rt0.c2)AND(t0.c2)))AND('')))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0, rt1 WHERE (COALESCE(DISTINCT ((rt1.c2)OR(rt1.c1)), TRIM(rt0.c0), HEX(rt0.c2), t0.c1 COLLATE RTRIM, HEX(rt0.c1), ((((rt0.c2)AND(t0.c2)))AND(''))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c2 COLLATE NOCASE DESC  NULLS LAST, (+ (((rt1.c2) NOTNULL))) ASC  NULLS FIRST, CASE (rt1.c0 IN ())  WHEN rt1.c1 THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)) WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END WHEN (((rt1.c2))<=((rt1.c1))) THEN (((rt1.c1, rt1.c1, 0.9063639158265198))<>((rt1.c0, rt1.c2, rt1.c2))) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN '-1875851472' WHEN rt1.c1 THEN rt1.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 COLLATE NOCASE DESC  NULLS LAST, (+ (((rt1.c2) NOTNULL))) ASC  NULLS FIRST, CASE (rt1.c0 IN ())  WHEN rt1.c1 THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)) WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END WHEN (((rt1.c2))<=((rt1.c1))) THEN (((rt1.c1, rt1.c1, 0.9063639158265198))<>((rt1.c0, rt1.c2, rt1.c2))) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN '-1875851472' WHEN rt1.c1 THEN rt1.c1 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c2 COLLATE NOCASE DESC  NULLS LAST, (+ (((rt1.c2) NOTNULL))) ASC  NULLS FIRST, CASE (rt1.c0 IN ())  WHEN rt1.c1 THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)) WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END WHEN (((rt1.c2))<=((rt1.c1))) THEN (((rt1.c1, rt1.c1, 0.9063639158265198))<>((rt1.c0, rt1.c2, rt1.c2))) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN '-1875851472' WHEN rt1.c1 THEN rt1.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 COLLATE NOCASE DESC  NULLS LAST, (+ (((rt1.c2) NOTNULL))) ASC  NULLS FIRST, CASE (rt1.c0 IN ())  WHEN rt1.c1 THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)) WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END WHEN (((rt1.c2))<=((rt1.c1))) THEN (((rt1.c1, rt1.c1, 0.9063639158265198))<>((rt1.c0, rt1.c2, rt1.c2))) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN '-1875851472' WHEN rt1.c1 THEN rt1.c1 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c2 COLLATE NOCASE DESC  NULLS LAST, (+ (((rt1.c2) NOTNULL))) ASC  NULLS FIRST, CASE (rt1.c0 IN ())  WHEN rt1.c1 THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)) WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END WHEN (((rt1.c2))<=((rt1.c1))) THEN (((rt1.c1, rt1.c1, 0.9063639158265198))<>((rt1.c0, rt1.c2, rt1.c2))) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN '-1875851472' WHEN rt1.c1 THEN rt1.c1 END END  NULLS FIRST;
SELECT * FROM rt0, rt1, vt0 WHERE (CAST(rt1.c2 AS TEXT) COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST);
SELECT * FROM rt0, rt1, vt0 WHERE (CAST(rt1.c2 AS TEXT) COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST);
SELECT * FROM rt0, rt1, vt0 WHERE (CAST(rt1.c2 AS TEXT) COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c2) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END) ORDER BY rt1.c2 ASC  NULLS FIRST, CASE CASE NULL  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END  WHEN rt1.c1 THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c2) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC  NULLS FIRST, CASE CASE NULL  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END  WHEN rt1.c1 THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c2) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END) ORDER BY rt1.c2 ASC  NULLS FIRST, CASE CASE NULL  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END  WHEN rt1.c1 THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c2) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC  NULLS FIRST, CASE CASE NULL  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END  WHEN rt1.c1 THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((rt1.c2) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END) ORDER BY rt1.c2 ASC  NULLS FIRST, CASE CASE NULL  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END  WHEN rt1.c1 THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS FIRST;
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((CASE rt0.c2  WHEN NULL THEN t0.c1 ELSE rt1.c1 END)/((rt1.c1 IN (rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN NULL THEN t0.c1 ELSE rt1.c1 END)/((rt1.c1 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0, rt1);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((CASE rt0.c2  WHEN NULL THEN t0.c1 ELSE rt1.c1 END)/((rt1.c1 IN (rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN NULL THEN t0.c1 ELSE rt1.c1 END)/((rt1.c1 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0, rt1);
SELECT * FROM t0, vt0, rt0, rt1 WHERE (((CASE rt0.c2  WHEN NULL THEN t0.c1 ELSE rt1.c1 END)/((rt1.c1 IN (rt0.c0, rt0.c1)))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c1 END) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (1138020348))) ORDER BY CASE WHEN CAST(t0.c2 AS BLOB) THEN ((t0.c0) IS TRUE) ELSE '-1947074854' END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 END) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (1138020348))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c2 AS BLOB) THEN ((t0.c0) IS TRUE) ELSE '-1947074854' END);
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c1 END) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (1138020348))) ORDER BY CASE WHEN CAST(t0.c2 AS BLOB) THEN ((t0.c0) IS TRUE) ELSE '-1947074854' END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 END) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (1138020348))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c2 AS BLOB) THEN ((t0.c0) IS TRUE) ELSE '-1947074854' END);
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c1 END) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (1138020348))) ORDER BY CASE WHEN CAST(t0.c2 AS BLOB) THEN ((t0.c0) IS TRUE) ELSE '-1947074854' END;
SELECT * FROM rt1 WHERE ((((NOT (1256067448))) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((x'')) AND ((rt1.c0)))) AND (UNLIKELY(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (1256067448))) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((x'')) AND ((rt1.c0)))) AND (UNLIKELY(rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((NOT (1256067448))) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((x'')) AND ((rt1.c0)))) AND (UNLIKELY(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (1256067448))) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((x'')) AND ((rt1.c0)))) AND (UNLIKELY(rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((NOT (1256067448))) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((x'')) AND ((rt1.c0)))) AND (UNLIKELY(rt1.c0))));
SELECT COUNT(*) FROM vt0, t0, rt1, rt0 WHERE ((NOT (((((vt0.c0)AND(rt1.c1)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c0)AND(rt1.c1)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt1, rt0);
SELECT COUNT(*) FROM vt0, t0, rt1, rt0 WHERE ((NOT (((((vt0.c0)AND(rt1.c1)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c0)AND(rt1.c1)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt1, rt0);
SELECT COUNT(*) FROM vt0, t0, rt1, rt0 WHERE ((NOT (((((vt0.c0)AND(rt1.c1)))OR(t0.c0)))));
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))/((vt0.c0 IN ())))) ORDER BY (json_type(vt0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (json_type(vt0.c0) IN ()) ASC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))/((vt0.c0 IN ())))) ORDER BY (json_type(vt0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (json_type(vt0.c0) IN ()) ASC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))/((vt0.c0 IN ())))) ORDER BY (json_type(vt0.c0) IN ()) ASC;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- ((((rt0.c1))<>((rt0.c2))))) WHERE (CASE ((rt0.c0)+(rt0.c1))  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<=((rt0.c2))) THEN (rt0.c1 IN ()) WHEN NULL THEN rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)+(rt0.c1))  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<=((rt0.c2))) THEN (rt0.c1 IN ()) WHEN NULL THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- ((((rt0.c1))!=((rt0.c2))))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- ((((rt0.c1))<>((rt0.c2))))) WHERE (CASE ((rt0.c0)+(rt0.c1))  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<=((rt0.c2))) THEN (rt0.c1 IN ()) WHEN NULL THEN rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)+(rt0.c1))  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<=((rt0.c2))) THEN (rt0.c1 IN ()) WHEN NULL THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- ((((rt0.c1))!=((rt0.c2))))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- ((((rt0.c1))<>((rt0.c2))))) WHERE (CASE ((rt0.c0)+(rt0.c1))  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<=((rt0.c2))) THEN (rt0.c1 IN ()) WHEN NULL THEN rt0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN UNLIKELY(rt1.c1) THEN CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END END) ORDER BY (((rt1.c2) IS TRUE) IN (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(rt1.c1) THEN CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2) IS TRUE) IN (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN UNLIKELY(rt1.c1) THEN CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END END) ORDER BY (((rt1.c2) IS TRUE) IN (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(rt1.c1) THEN CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2) IS TRUE) IN (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN UNLIKELY(rt1.c1) THEN CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END END) ORDER BY (((rt1.c2) IS TRUE) IN (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST;
SELECT * FROM rt1, rt0, t0, vt0 WHERE (CAST(((t0.c0)>>(t0.c2)) AS BLOB)) ORDER BY (~ ((rt0.c0 IN (t0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)>>(t0.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t0, vt0 ORDER BY (~ ((rt0.c0 IN (t0.c2)))));
SELECT * FROM rt1, rt0, t0, vt0 WHERE (CAST(((t0.c0)>>(t0.c2)) AS BLOB)) ORDER BY (~ ((rt0.c0 IN (t0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)>>(t0.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t0, vt0 ORDER BY (~ ((rt0.c0 IN (t0.c2)))));
SELECT * FROM rt1, rt0, t0, vt0 WHERE (CAST(((t0.c0)>>(t0.c2)) AS BLOB)) ORDER BY (~ ((rt0.c0 IN (t0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt1.c2) NOTNULL) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS NUMERIC))>(((rt1.c0)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))>(((rt1.c0)%(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt1.c2) NOTNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt1.c2) NOTNULL) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS NUMERIC))>(((rt1.c0)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))>(((rt1.c0)%(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt1.c2) NOTNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt1.c2) NOTNULL) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS NUMERIC))>(((rt1.c0)%(rt1.c2)))));
SELECT ALL * FROM vt0 NOT INDEXED, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2, rt1.c1, t0.c1)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c2 ELSE 0.9224381550449331 END, ((0.5071260192260092) NOTNULL), (t0.c2 IN ()))) AND ((((((t0.c1)OR(rt1.c2)))OR(t0.c0)), (('[a') BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c2 AS BLOB)))) WHERE (0.9000937187009596) ORDER BY ((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)AND((((vt0.c0, rt1.c2, t0.c0))>((rt1.c2, t0.c2, t0.c2))))) ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0.9000937187009596) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2, rt1.c1, t0.c1)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c2 ELSE 0.9224381550449331 END, ((0.5071260192260092) NOTNULL), (t0.c2 IN ()))) AND ((((((t0.c1)OR(rt1.c2)))OR(t0.c0)), (('[a') BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c2 AS BLOB)))) ORDER BY ((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)AND((((vt0.c0, rt1.c2, t0.c0))>((rt1.c2, t0.c2, t0.c2))))) ASC, vt0.c0 DESC);
SELECT ALL * FROM vt0 NOT INDEXED, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2, rt1.c1, t0.c1)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c2 ELSE 0.9224381550449331 END, ((0.5071260192260092) NOTNULL), (t0.c2 IN ()))) AND ((((((t0.c1)OR(rt1.c2)))OR(t0.c0)), (('[a') BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c2 AS BLOB)))) WHERE (0.9000937187009596) ORDER BY ((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)AND((((vt0.c0, rt1.c2, t0.c0))>((rt1.c2, t0.c2, t0.c2))))) ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0.9000937187009596) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2, rt1.c1, t0.c1)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c2 ELSE 0.9224381550449331 END, ((0.5071260192260092) NOTNULL), (t0.c2 IN ()))) AND ((((((t0.c1)OR(rt1.c2)))OR(t0.c0)), (('[a') BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c2 AS BLOB)))) ORDER BY ((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)AND((((vt0.c0, rt1.c2, t0.c0))>((rt1.c2, t0.c2, t0.c2))))) ASC, vt0.c0 DESC);
SELECT ALL * FROM vt0 NOT INDEXED, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2, rt1.c1, t0.c1)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c2 ELSE 0.9224381550449331 END, ((0.5071260192260092) NOTNULL), (t0.c2 IN ()))) AND ((((((t0.c1)OR(rt1.c2)))OR(t0.c0)), (('[a') BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c2 AS BLOB)))) WHERE (0.9000937187009596) ORDER BY ((CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END)AND((((vt0.c0, rt1.c2, t0.c0))>((rt1.c2, t0.c2, t0.c2))))) ASC, vt0.c0 DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((CASE WHEN vt0.c0 THEN rt1.c0 END)AND((((rt0.c0))<=((rt1.c1))))))OR(((t0.c0)IS(rt1.c1)))) CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END ELSE ((t0.c1)AND(rt0.c2)) END WHERE ((((rt0.c1)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN t0.c0 THEN rt1.c2 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '1658588664' END)))) ORDER BY CAST(rt1.c1 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((CAST(t0.c1 AS NUMERIC))||(json_quote(t0.c0))) DESC, ((vt0.c0)>>(((((rt0.c1)AND(t0.c2)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN t0.c0 THEN rt1.c2 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '1658588664' END)))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((CASE WHEN vt0.c0 THEN rt1.c0 END)AND((((rt0.c0))<=((rt1.c1))))))OR(((t0.c0)IS(rt1.c1)))) CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END ELSE ((t0.c1)AND(rt0.c2)) END ORDER BY CAST(rt1.c1 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((CAST(t0.c1 AS NUMERIC))||(json_quote(t0.c0))) DESC, ((vt0.c0)>>(((((rt0.c1)AND(t0.c2)))OR(t0.c1)))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((CASE WHEN vt0.c0 THEN rt1.c0 END)AND((((rt0.c0))<=((rt1.c1))))))OR(((t0.c0)IS(rt1.c1)))) CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END ELSE ((t0.c1)AND(rt0.c2)) END WHERE ((((rt0.c1)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN t0.c0 THEN rt1.c2 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '1658588664' END)))) ORDER BY CAST(rt1.c1 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((CAST(t0.c1 AS NUMERIC))||(json_quote(t0.c0))) DESC, ((vt0.c0)>>(((((rt0.c1)AND(t0.c2)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN t0.c0 THEN rt1.c2 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '1658588664' END)))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((CASE WHEN vt0.c0 THEN rt1.c0 END)AND((((rt0.c0))<=((rt1.c1))))))OR(((t0.c0)IS(rt1.c1)))) CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END ELSE ((t0.c1)AND(rt0.c2)) END ORDER BY CAST(rt1.c1 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((CAST(t0.c1 AS NUMERIC))||(json_quote(t0.c0))) DESC, ((vt0.c0)>>(((((rt0.c1)AND(t0.c2)))OR(t0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (ABS((((x'', t0.c0, t0.c1))>((t0.c2, t0.c1, t0.c0))))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS((((x'', t0.c0, t0.c1))>((t0.c2, t0.c1, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC);
SELECT COUNT(*) FROM t0 WHERE (ABS((((x'', t0.c0, t0.c1))>((t0.c2, t0.c1, t0.c0))))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS((((x'', t0.c0, t0.c1))>((t0.c2, t0.c1, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC);
SELECT COUNT(*) FROM t0 WHERE (ABS((((x'', t0.c0, t0.c1))>((t0.c2, t0.c1, t0.c0))))) ORDER BY t0.c1 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2)))))));
SELECT ALL * FROM rt0, rt1 INNER JOIN t0 ON ((t0.c1) IS TRUE) COLLATE RTRIM WHERE ((((rt1.c2 IN ('993362397')))IS NOT((rt0.c1 IN (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ('993362397')))IS NOT((rt0.c1 IN (t0.c1))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON ((t0.c1) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM rt0, rt1 INNER JOIN t0 ON ((t0.c1) IS TRUE) COLLATE RTRIM WHERE ((((rt1.c2 IN ('993362397')))IS NOT((rt0.c1 IN (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ('993362397')))IS NOT((rt0.c1 IN (t0.c1))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON ((t0.c1) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM rt0, rt1 INNER JOIN t0 ON ((t0.c1) IS TRUE) COLLATE RTRIM WHERE ((((rt1.c2 IN ('993362397')))IS NOT((rt0.c1 IN (t0.c1)))));
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((((rt0.c0) BETWEEN (0.8651796733524739) AND (rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (0.8651796733524739) AND (rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((((rt0.c0) BETWEEN (0.8651796733524739) AND (rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (0.8651796733524739) AND (rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((((rt0.c0) BETWEEN (0.8651796733524739) AND (rt1.c0))) NOT NULL));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON CAST(((-8.3187117E8) IS FALSE) AS TEXT) CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (NOT (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)) WHERE (CAST(CAST(x'' AS INTEGER) AS REAL)) ORDER BY (((CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))!=((0Xffffffffdd185fb9 COLLATE BINARY))), rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(x'' AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON CAST(((-8.3187117E8) IS FALSE) AS TEXT) CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (NOT (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)) ORDER BY (((CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))<>((0xffffffffdd185fb9 COLLATE BINARY))), rt1.c1 ASC);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON CAST(((-8.3187117E8) IS FALSE) AS TEXT) CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (NOT (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)) WHERE (CAST(CAST(x'' AS INTEGER) AS REAL)) ORDER BY (((CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))!=((0Xffffffffdd185fb9 COLLATE BINARY))), rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(x'' AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON CAST(((-8.3187117E8) IS FALSE) AS TEXT) CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (NOT (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)) ORDER BY (((CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))<>((0xffffffffdd185fb9 COLLATE BINARY))), rt1.c1 ASC);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON CAST(((-8.3187117E8) IS FALSE) AS TEXT) CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (NOT (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)) WHERE (CAST(CAST(x'' AS INTEGER) AS REAL)) ORDER BY (((CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c0 END))!=((0Xffffffffdd185fb9 COLLATE BINARY))), rt1.c1 ASC;
SELECT * FROM rt0, rt1, vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c2  WHEN '1099077906' THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c2 END)) AND ((rt1.c1)))) ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (CAST(t0.c1 AS TEXT)) AND (((t0.c0)>=(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE t0.c2  WHEN '1099077906' THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c2 END)) AND ((rt1.c1)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (CAST(t0.c1 AS TEXT)) AND (((t0.c0)>=(t0.c0))))  NULLS LAST);
SELECT * FROM rt0, rt1, vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c2  WHEN '1099077906' THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c2 END)) AND ((rt1.c1)))) ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (CAST(t0.c1 AS TEXT)) AND (((t0.c0)>=(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE t0.c2  WHEN '1099077906' THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c2 END)) AND ((rt1.c1)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (CAST(t0.c1 AS TEXT)) AND (((t0.c0)>=(t0.c0))))  NULLS LAST);
SELECT * FROM rt0, rt1, vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c2  WHEN '1099077906' THEN vt0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c2 END)) AND ((rt1.c1)))) ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (CAST(t0.c1 AS TEXT)) AND (((t0.c0)>=(t0.c0))))  NULLS LAST;
SELECT * FROM t0, rt1, rt0, vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)AND(t0.c0)))))AND(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)AND(t0.c0)))))AND(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT * FROM t0, rt1, rt0, vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)AND(t0.c0)))))AND(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)AND(t0.c0)))))AND(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT * FROM t0, rt1, rt0, vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)AND(t0.c0)))))AND(((rt1.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(CAST(rt0.c1 AS INTEGER), ((rt0.c2) ISNULL))) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(rt0.c1 AS INTEGER), ((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c1 IN ()) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(CAST(rt0.c1 AS INTEGER), ((rt0.c2) ISNULL))) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(rt0.c1 AS INTEGER), ((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c1 IN ()) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(CAST(rt0.c1 AS INTEGER), ((rt0.c2) ISNULL))) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 CROSS JOIN rt1 ON '-960184655' WHERE (((TYPEOF(DISTINCT rt0.c1))%((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2)))))) ORDER BY LIKE(NULL, CAST(t0.c1 AS NUMERIC), ',') ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1))%((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0 CROSS JOIN rt1 ON '-960184655' ORDER BY LIKE(NULL, CAST(t0.c1 AS NUMERIC), ',') ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 CROSS JOIN rt1 ON '-960184655' WHERE (((TYPEOF(DISTINCT rt0.c1))%((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2)))))) ORDER BY LIKE(NULL, CAST(t0.c1 AS NUMERIC), ',') ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1))%((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0 CROSS JOIN rt1 ON '-960184655' ORDER BY LIKE(NULL, CAST(t0.c1 AS NUMERIC), ',') ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 CROSS JOIN rt1 ON '-960184655' WHERE (((TYPEOF(DISTINCT rt0.c1))%((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2)))))) ORDER BY LIKE(NULL, CAST(t0.c1 AS NUMERIC), ',') ASC;
SELECT COUNT(*) FROM rt1, vt0, t0 INNER JOIN rt0 ON SQLITE_VERSION() WHERE (rt1.c2) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))  WHEN ((rt0.c1)IS NOT('*q^|')) THEN (rt0.c0 IN ()) WHEN 0.6091668781567172 THEN (((t0.c2, rt1.c1, rt1.c0))!=((t0.c1, rt0.c0, rt1.c2))) WHEN ((((rt1.c0)AND('-1827313981')))OR(t0.c1)) THEN rt0.c1 COLLATE NOCASE ELSE LIKELY(rt0.c1) END;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0, t0 INNER JOIN rt0 ON SQLITE_VERSION() ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))  WHEN ((rt0.c1)IS NOT('*q^|')) THEN (rt0.c0 IN ()) WHEN 0.6091668781567172 THEN (((t0.c2, rt1.c1, rt1.c0))<>((t0.c1, rt0.c0, rt1.c2))) WHEN ((((rt1.c0)AND('-1827313981')))OR(t0.c1)) THEN rt0.c1 COLLATE NOCASE ELSE LIKELY(rt0.c1) END);
SELECT COUNT(*) FROM rt1, vt0, t0 INNER JOIN rt0 ON SQLITE_VERSION() WHERE (rt1.c2) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))  WHEN ((rt0.c1)IS NOT('*q^|')) THEN (rt0.c0 IN ()) WHEN 0.6091668781567172 THEN (((t0.c2, rt1.c1, rt1.c0))!=((t0.c1, rt0.c0, rt1.c2))) WHEN ((((rt1.c0)AND('-1827313981')))OR(t0.c1)) THEN rt0.c1 COLLATE NOCASE ELSE LIKELY(rt0.c1) END;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0, t0 INNER JOIN rt0 ON SQLITE_VERSION() ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))  WHEN ((rt0.c1)IS NOT('*q^|')) THEN (rt0.c0 IN ()) WHEN 0.6091668781567172 THEN (((t0.c2, rt1.c1, rt1.c0))<>((t0.c1, rt0.c0, rt1.c2))) WHEN ((((rt1.c0)AND('-1827313981')))OR(t0.c1)) THEN rt0.c1 COLLATE NOCASE ELSE LIKELY(rt0.c1) END);
SELECT COUNT(*) FROM rt1, vt0, t0 INNER JOIN rt0 ON SQLITE_VERSION() WHERE (rt1.c2) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))  WHEN ((rt0.c1)IS NOT('*q^|')) THEN (rt0.c0 IN ()) WHEN 0.6091668781567172 THEN (((t0.c2, rt1.c1, rt1.c0))!=((t0.c1, rt0.c0, rt1.c2))) WHEN ((((rt1.c0)AND('-1827313981')))OR(t0.c1)) THEN rt0.c1 COLLATE NOCASE ELSE LIKELY(rt0.c1) END;
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)LIKE(t0.c1))) IS FALSE)) ORDER BY TYPEOF((('1175988622')/(t0.c0)))  NULLS FIRST, t0.c2 ASC, (- ((~ (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)LIKE(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY TYPEOF((('1175988622')/(t0.c0)))  NULLS FIRST, t0.c2 ASC, (- ((~ (t0.c1))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c1)LIKE(t0.c1))) IS FALSE)) ORDER BY TYPEOF((('1175988622')/(t0.c0)))  NULLS FIRST, t0.c2 ASC, (- ((~ (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)LIKE(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY TYPEOF((('1175988622')/(t0.c0)))  NULLS FIRST, t0.c2 ASC, (- ((~ (t0.c1))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c1)LIKE(t0.c1))) IS FALSE)) ORDER BY TYPEOF((('1175988622')/(t0.c0)))  NULLS FIRST, t0.c2 ASC, (- ((~ (t0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((t0.c2) NOT BETWEEN (ABS(rt1.c0)) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (ABS(rt1.c0)) AND (rt1.c2))) IS TRUE)  as count FROM vt0, rt1, rt0, t0);
SELECT COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((t0.c2) NOT BETWEEN (ABS(rt1.c0)) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (ABS(rt1.c0)) AND (rt1.c2))) IS TRUE)  as count FROM vt0, rt1, rt0, t0);
SELECT COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((t0.c2) NOT BETWEEN (ABS(rt1.c0)) AND (rt1.c2)));
SELECT * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM COLLATE RTRIM) ORDER BY (CAST(rt0.c1 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ()));
SELECT * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM COLLATE RTRIM) ORDER BY (CAST(rt0.c1 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ()));
SELECT * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM COLLATE RTRIM) ORDER BY (CAST(rt0.c1 AS TEXT) IN ());
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE (((((((((((t0.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))*((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))*((~ (t0.c0))))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE (((((((((((t0.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))*((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))*((~ (t0.c0))))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE (((((((((((t0.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))*((~ (t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, -1.111283214E9)))))) ORDER BY (NOT (((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, -1.111283214E9)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, -1.111283214E9)))))) ORDER BY (NOT (((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, -1.111283214E9)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, -1.111283214E9)))))) ORDER BY (NOT (((vt0.c0)>=(vt0.c0))));
SELECT * FROM rt1, rt0 WHERE ((((('')<=(rt0.c0))) ISNULL)) ORDER BY IFNULL(CAST(rt1.c2 AS INTEGER), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('')<=(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY IFNULL(CAST(rt1.c2 AS INTEGER), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((((('')<=(rt0.c0))) ISNULL)) ORDER BY IFNULL(CAST(rt1.c2 AS INTEGER), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('')<=(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY IFNULL(CAST(rt1.c2 AS INTEGER), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((((('')<=(rt0.c0))) ISNULL)) ORDER BY IFNULL(CAST(rt1.c2 AS INTEGER), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((((((t0.c0)AND(rt1.c2)))OR(rt1.c0)))&(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(rt1.c2)))OR(rt1.c0)))&(x''))) IS TRUE)  as count FROM vt0, rt1, rt0, t0);
SELECT COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((((((t0.c0)AND(rt1.c2)))OR(rt1.c0)))&(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(rt1.c2)))OR(rt1.c0)))&(x''))) IS TRUE)  as count FROM vt0, rt1, rt0, t0);
SELECT COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((((((t0.c0)AND(rt1.c2)))OR(rt1.c0)))&(x'')));
SELECT * FROM t0, rt1, vt0 WHERE (CASE '874088000'  WHEN (t0.c2 IN ()) THEN (rt1.c2 IN (rt1.c2)) ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '874088000'  WHEN (t0.c2 IN ()) THEN (rt1.c2 IN (rt1.c2)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE (CASE '874088000'  WHEN (t0.c2 IN ()) THEN (rt1.c2 IN (rt1.c2)) ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '874088000'  WHEN (t0.c2 IN ()) THEN (rt1.c2 IN (rt1.c2)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT * FROM t0, rt1, vt0 WHERE (CASE '874088000'  WHEN (t0.c2 IN ()) THEN (rt1.c2 IN (rt1.c2)) ELSE (NOT (vt0.c0)) END);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((t0.c0)<>(t0.c1)) IN (((t0.c1)<<(rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((x'')) AND ((NULL)));
SELECT SUM(count) FROM (SELECT (((((t0.c0)!=(t0.c1)) IN (((t0.c1)<<(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((rt1.c2)) NOT BETWEEN ((x'')) AND ((NULL))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((t0.c0)<>(t0.c1)) IN (((t0.c1)<<(rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((x'')) AND ((NULL)));
SELECT SUM(count) FROM (SELECT (((((t0.c0)!=(t0.c1)) IN (((t0.c1)<<(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((rt1.c2)) NOT BETWEEN ((x'')) AND ((NULL))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((t0.c0)<>(t0.c1)) IN (((t0.c1)<<(rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((x'')) AND ((NULL)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((CAST(t0.c2 AS TEXT)))!=(((t0.c0 IN ()))))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)AND(CAST(t0.c2 AS REAL))))AND(CASE t0.c0  WHEN '' THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c2 AS TEXT)))<>(((t0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)AND(CAST(t0.c2 AS REAL))))AND(CASE t0.c0  WHEN '' THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((CAST(t0.c2 AS TEXT)))!=(((t0.c0 IN ()))))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)AND(CAST(t0.c2 AS REAL))))AND(CASE t0.c0  WHEN '' THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c2 AS TEXT)))<>(((t0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)AND(CAST(t0.c2 AS REAL))))AND(CASE t0.c0  WHEN '' THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((CAST(t0.c2 AS TEXT)))!=(((t0.c0 IN ()))))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)AND(CAST(t0.c2 AS REAL))))AND(CASE t0.c0  WHEN '' THEN vt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON ((t0.c0 IN ()) IN (ABS(rt1.c2))) RIGHT OUTER JOIN rt1 ON CASE ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))  WHEN UNLIKELY(DISTINCT rt0.c2) THEN t0.c1 COLLATE BINARY WHEN rt1.c0 THEN (rt1.c2 IN ()) WHEN ((((x'')OR(t0.c0)))OR(t0.c2)) THEN CAST(t0.c2 AS INTEGER) ELSE ((((rt1.c2)AND(rt0.c0)))OR(x'')) END WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON ((t0.c0 IN ()) IN (ABS(rt1.c2))) RIGHT OUTER JOIN rt1 ON CASE ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))  WHEN UNLIKELY(DISTINCT rt0.c2) THEN t0.c1 COLLATE BINARY WHEN rt1.c0 THEN (rt1.c2 IN ()) WHEN ((((x'')OR(t0.c0)))OR(t0.c2)) THEN CAST(t0.c2 AS INTEGER) ELSE ((((rt1.c2)AND(rt0.c0)))OR(x'')) END);
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON ((t0.c0 IN ()) IN (ABS(rt1.c2))) RIGHT OUTER JOIN rt1 ON CASE ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))  WHEN UNLIKELY(DISTINCT rt0.c2) THEN t0.c1 COLLATE BINARY WHEN rt1.c0 THEN (rt1.c2 IN ()) WHEN ((((x'')OR(t0.c0)))OR(t0.c2)) THEN CAST(t0.c2 AS INTEGER) ELSE ((((rt1.c2)AND(rt0.c0)))OR(x'')) END WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON ((t0.c0 IN ()) IN (ABS(rt1.c2))) RIGHT OUTER JOIN rt1 ON CASE ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))  WHEN UNLIKELY(DISTINCT rt0.c2) THEN t0.c1 COLLATE BINARY WHEN rt1.c0 THEN (rt1.c2 IN ()) WHEN ((((x'')OR(t0.c0)))OR(t0.c2)) THEN CAST(t0.c2 AS INTEGER) ELSE ((((rt1.c2)AND(rt0.c0)))OR(x'')) END);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY ((((t0.c1) IS TRUE)) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c1) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY ((((t0.c1) IS TRUE)) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c1) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY ((((t0.c1) IS TRUE)) ISNULL);
SELECT COUNT(*) FROM rt1, rt0 NOT INDEXED, vt0, t0 WHERE ((- (((t0.c1) NOTNULL)))) ORDER BY (((vt0.c0))!=((rt0.c0))) COLLATE RTRIM  NULLS FIRST, '*D)|7h썾v';
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY (((vt0.c0))!=((rt0.c0))) COLLATE RTRIM  NULLS FIRST, '*D)|7h썾v');
SELECT COUNT(*) FROM rt1, rt0 NOT INDEXED, vt0, t0 WHERE ((- (((t0.c1) NOTNULL)))) ORDER BY (((vt0.c0))!=((rt0.c0))) COLLATE RTRIM  NULLS FIRST, '*D)|7h썾v';
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY (((vt0.c0))!=((rt0.c0))) COLLATE RTRIM  NULLS FIRST, '*D)|7h썾v');
SELECT COUNT(*) FROM rt1, rt0 NOT INDEXED, vt0, t0 WHERE ((- (((t0.c1) NOTNULL)))) ORDER BY (((vt0.c0))!=((rt0.c0))) COLLATE RTRIM  NULLS FIRST, '*D)|7h썾v';
SELECT ALL COUNT(*) FROM t0 WHERE ('T4x' COLLATE BINARY) ORDER BY (- (CASE WHEN t0.c0 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL (('T4x' COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (- (CASE WHEN t0.c0 THEN NULL END)));
SELECT ALL COUNT(*) FROM t0 WHERE ('T4x' COLLATE BINARY) ORDER BY (- (CASE WHEN t0.c0 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL (('T4x' COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (- (CASE WHEN t0.c0 THEN NULL END)));
SELECT ALL COUNT(*) FROM t0 WHERE ('T4x' COLLATE BINARY) ORDER BY (- (CASE WHEN t0.c0 THEN NULL END));
SELECT ALL * FROM t0, rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) AND (CASE WHEN rt1.c2 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS TEXT)) BETWEEN (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) AND (CASE WHEN rt1.c2 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) AND (CASE WHEN rt1.c2 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS TEXT)) BETWEEN (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) AND (CASE WHEN rt1.c2 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) AND (CASE WHEN rt1.c2 THEN t0.c0 END)));
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY TRIM(DISTINCT rt1.c0);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY TRIM(DISTINCT rt1.c0));
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY TRIM(DISTINCT rt1.c0);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY TRIM(DISTINCT rt1.c0));
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY TRIM(DISTINCT rt1.c0);
SELECT * FROM rt1, vt0, rt0 WHERE (((95640817)GLOB(json_array(vt0.c0, rt1.c1)))) ORDER BY ((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(1308165668))) NOTNULL), CAST(rt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((95640817)GLOB(json_array(vt0.c0, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(1308165668))) NOTNULL), CAST(rt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST);
SELECT * FROM rt1, vt0, rt0 WHERE (((95640817)GLOB(json_array(vt0.c0, rt1.c1)))) ORDER BY ((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(1308165668))) NOTNULL), CAST(rt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((95640817)GLOB(json_array(vt0.c0, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(1308165668))) NOTNULL), CAST(rt1.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)+(rt0.c0))))) ORDER BY ((((((rt0.c1)OR(x'')))AND(((rt0.c0)IS(rt0.c2)))))AND('-1634363013')), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)+(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(x'')))AND(((rt0.c0)IS(rt0.c2)))))AND('-1634363013')), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)+(rt0.c0))))) ORDER BY ((((((rt0.c1)OR(x'')))AND(((rt0.c0)IS(rt0.c2)))))AND('-1634363013')), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)+(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(x'')))AND(((rt0.c0)IS(rt0.c2)))))AND('-1634363013')), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)+(rt0.c0))))) ORDER BY ((((((rt0.c1)OR(x'')))AND(((rt0.c0)IS(rt0.c2)))))AND('-1634363013')), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((((((rt1.c1)&(rt1.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR(CAST(t0.c0 AS TEXT))))OR(CAST(NULL AS INTEGER))))OR((~ (t0.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)&(rt1.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR(CAST(t0.c0 AS TEXT))))OR(CAST(NULL AS INTEGER))))OR((~ (t0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((((((rt1.c1)&(rt1.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR(CAST(t0.c0 AS TEXT))))OR(CAST(NULL AS INTEGER))))OR((~ (t0.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)&(rt1.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR(CAST(t0.c0 AS TEXT))))OR(CAST(NULL AS INTEGER))))OR((~ (t0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((((((rt1.c1)&(rt1.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR(CAST(t0.c0 AS TEXT))))OR(CAST(NULL AS INTEGER))))OR((~ (t0.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY x'');
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY x'');
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY x'';
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((((t0.c2)<>(rt0.c1)))/(rt0.c2))) ORDER BY 0.07529051824864463  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<>(rt0.c1)))/(rt0.c2))) IS TRUE)  as count FROM vt0, rt1, rt0, t0 ORDER BY 0.07529051824864463  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((((t0.c2)<>(rt0.c1)))/(rt0.c2))) ORDER BY 0.07529051824864463  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<>(rt0.c1)))/(rt0.c2))) IS TRUE)  as count FROM vt0, rt1, rt0, t0 ORDER BY 0.07529051824864463  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0 WHERE (((((t0.c2)<>(rt0.c1)))/(rt0.c2))) ORDER BY 0.07529051824864463  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ ((+ (vt0.c0))))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((+ (vt0.c0))))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((+ (vt0.c0))))) ORDER BY '' ASC;
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (((t0.c1)<<(t0.c1))))) ORDER BY ((((TRIM(DISTINCT t0.c0, rt0.c1))OR('-242385596')))AND(((rt1.c2)!=(1.89425691E8)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1)<<(t0.c1))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((TRIM(DISTINCT t0.c0, rt0.c1))OR('-242385596')))AND(((rt1.c2)!=(1.89425691E8)))) DESC);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (((t0.c1)<<(t0.c1))))) ORDER BY ((((TRIM(DISTINCT t0.c0, rt0.c1))OR('-242385596')))AND(((rt1.c2)!=(1.89425691E8)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1)<<(t0.c1))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((TRIM(DISTINCT t0.c0, rt0.c1))OR('-242385596')))AND(((rt1.c2)!=(1.89425691E8)))) DESC);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (((t0.c1)<<(t0.c1))))) ORDER BY ((((TRIM(DISTINCT t0.c0, rt0.c1))OR('-242385596')))AND(((rt1.c2)!=(1.89425691E8)))) DESC;
SELECT COUNT(*) FROM t0, rt0, rt1, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))))) ORDER BY TRIM(DISTINCT ((rt0.c2) IS TRUE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0, rt1, vt0 ORDER BY TRIM(DISTINCT ((rt0.c2) IS TRUE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, rt1, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))))) ORDER BY TRIM(DISTINCT ((rt0.c2) IS TRUE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0, rt1, vt0 ORDER BY TRIM(DISTINCT ((rt0.c2) IS TRUE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, rt1, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))))) ORDER BY TRIM(DISTINCT ((rt0.c2) IS TRUE)) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 LEFT OUTER JOIN rt0 ON (JULIANDAY(rt0.c2, rt0.c0, rt1.c1) IN ((~ (t0.c0)), t0.c1)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c1)) THEN 1.867812496E9 END WHERE (((((NULL)||(rt0.c1))) BETWEEN ((('-1606003072') NOT NULL)) AND (UPPER(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((NULL)||(rt0.c1))) BETWEEN ((('-1606003072') NOT NULL)) AND (UPPER(t0.c2)))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON (JULIANDAY(rt0.c2, rt0.c0, rt1.c1) IN ((~ (t0.c0)), t0.c1)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c1)) THEN 1.867812496E9 END);
SELECT ALL * FROM t0, rt1 LEFT OUTER JOIN rt0 ON (JULIANDAY(rt0.c2, rt0.c0, rt1.c1) IN ((~ (t0.c0)), t0.c1)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c1)) THEN 1.867812496E9 END WHERE (((((NULL)||(rt0.c1))) BETWEEN ((('-1606003072') NOT NULL)) AND (UPPER(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((NULL)||(rt0.c1))) BETWEEN ((('-1606003072') NOT NULL)) AND (UPPER(t0.c2)))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON (JULIANDAY(rt0.c2, rt0.c0, rt1.c1) IN ((~ (t0.c0)), t0.c1)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c1)) THEN 1.867812496E9 END);
SELECT ALL * FROM t0, rt1 LEFT OUTER JOIN rt0 ON (JULIANDAY(rt0.c2, rt0.c0, rt1.c1) IN ((~ (t0.c0)), t0.c1)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c1)) THEN 1.867812496E9 END WHERE (((((NULL)||(rt0.c1))) BETWEEN ((('-1606003072') NOT NULL)) AND (UPPER(t0.c2))));
SELECT * FROM t0, rt1, rt0, vt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT * FROM t0, rt1, rt0, vt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, rt1, rt0, vt0);
SELECT * FROM t0, rt1, rt0, vt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(t0.c2))  WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((((((((t0.c2)AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(x'bc6c')) WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN MIN(NULL, t0.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(t0.c2))  WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((((((((t0.c2)AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(x'bc6c')) WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN MIN(NULL, t0.c0) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(t0.c2))  WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((((((((t0.c2)AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(x'bc6c')) WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN MIN(NULL, t0.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(t0.c2))  WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((((((((t0.c2)AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(x'bc6c')) WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN MIN(NULL, t0.c0) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(t0.c2))  WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((((((((t0.c2)AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(x'bc6c')) WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN MIN(NULL, t0.c0) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM t0, rt0, vt0, rt1 WHERE (CASE WHEN rt1.c2 THEN (t0.c2 IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN (t0.c2 IN (t0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT * FROM t0, rt0, vt0, rt1 WHERE (CASE WHEN rt1.c2 THEN (t0.c2 IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN (t0.c2 IN (t0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT * FROM t0, rt0, vt0, rt1 WHERE (CASE WHEN rt1.c2 THEN (t0.c2 IN (t0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c2)-(x''))) AND (INSTR(t0.c2, t0.c1)))) ORDER BY ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((((((((x'')AND(t0.c1)))AND(t0.c0)))OR(3665653.0)))AND(t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c2)-(x''))) AND (INSTR(t0.c2, t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((((((((x'')AND(t0.c1)))AND(t0.c0)))OR(3665653.0)))AND(t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c2)-(x''))) AND (INSTR(t0.c2, t0.c1)))) ORDER BY ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((((((((x'')AND(t0.c1)))AND(t0.c0)))OR(3665653.0)))AND(t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c2)-(x''))) AND (INSTR(t0.c2, t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((((((((x'')AND(t0.c1)))AND(t0.c0)))OR(3665653.0)))AND(t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c2)-(x''))) AND (INSTR(t0.c2, t0.c1)))) ORDER BY ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((((((((x'')AND(t0.c1)))AND(t0.c0)))OR(3665653.0)))AND(t0.c1)))) DESC;
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE ((- (((t0.c0)*(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)*(rt1.c0))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE ((- (((t0.c0)*(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)*(rt1.c0))))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE ((- (((t0.c0)*(rt1.c0)))));
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON (((NULL, ((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0)), x'' COLLATE BINARY))>=((((t0.c0)&(t0.c2)), vt0.c0 COLLATE BINARY, LIKELY(rt1.c0)))) RIGHT OUTER JOIN rt1 ON (((rt1.c1, t0.c0, rt0.c2)) NOT BETWEEN (((((x'37bf', t0.c2, vt0.c0, t0.c0, 1085417273))=((t0.c2, t0.c0, rt0.c2, rt1.c1, rt1.c0))), CAST(vt0.c0 AS REAL), json_insert(rt1.c0, vt0.c0, rt0.c1))) AND (((- (rt0.c0)), ((0.07529051824864463)>(t0.c1)), (rt0.c0 IN (NULL))))) WHERE ((((((((((((rt1.c0, rt1.c2, rt0.c0)) BETWEEN (('菈1C', rt0.c1, rt1.c2)) AND ((rt1.c0, vt0.c0, 1165217133))))AND((~ (rt0.c0)))))AND(t0.c0)))OR(((((((((t0.c0)AND(t0.c2)))AND(rt1.c0)))AND('WK')))OR(vt0.c0)))))AND(((vt0.c0)IS NOT(x''))))) ORDER BY ((x'') NOT BETWEEN (CAST(t0.c2 AS REAL)) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c0, rt1.c2, rt0.c0)) BETWEEN (('菈1C', rt0.c1, rt1.c2)) AND ((rt1.c0, vt0.c0, 1165217133))))AND((~ (rt0.c0)))))AND(t0.c0)))OR(((((((((t0.c0)AND(t0.c2)))AND(rt1.c0)))AND('WK')))OR(vt0.c0)))))AND(((vt0.c0)IS NOT(x''))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON (((NULL, ((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0)), x'' COLLATE BINARY))>=((((t0.c0)&(t0.c2)), vt0.c0 COLLATE BINARY, LIKELY(rt1.c0)))) RIGHT OUTER JOIN rt1 ON (((rt1.c1, t0.c0, rt0.c2)) NOT BETWEEN (((((x'37bf', t0.c2, vt0.c0, t0.c0, 1085417273))=((t0.c2, t0.c0, rt0.c2, rt1.c1, rt1.c0))), CAST(vt0.c0 AS REAL), json_insert(rt1.c0, vt0.c0, rt0.c1))) AND (((- (rt0.c0)), ((0.07529051824864463)>(t0.c1)), (rt0.c0 IN (NULL))))) ORDER BY ((x'') NOT BETWEEN (CAST(t0.c2 AS REAL)) AND (NULL))  NULLS FIRST);
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON (((NULL, ((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0)), x'' COLLATE BINARY))>=((((t0.c0)&(t0.c2)), vt0.c0 COLLATE BINARY, LIKELY(rt1.c0)))) RIGHT OUTER JOIN rt1 ON (((rt1.c1, t0.c0, rt0.c2)) NOT BETWEEN (((((x'37bf', t0.c2, vt0.c0, t0.c0, 1085417273))=((t0.c2, t0.c0, rt0.c2, rt1.c1, rt1.c0))), CAST(vt0.c0 AS REAL), json_insert(rt1.c0, vt0.c0, rt0.c1))) AND (((- (rt0.c0)), ((0.07529051824864463)>(t0.c1)), (rt0.c0 IN (NULL))))) WHERE ((((((((((((rt1.c0, rt1.c2, rt0.c0)) BETWEEN (('菈1C', rt0.c1, rt1.c2)) AND ((rt1.c0, vt0.c0, 1165217133))))AND((~ (rt0.c0)))))AND(t0.c0)))OR(((((((((t0.c0)AND(t0.c2)))AND(rt1.c0)))AND('WK')))OR(vt0.c0)))))AND(((vt0.c0)IS NOT(x''))))) ORDER BY ((x'') NOT BETWEEN (CAST(t0.c2 AS REAL)) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c0, rt1.c2, rt0.c0)) BETWEEN (('菈1C', rt0.c1, rt1.c2)) AND ((rt1.c0, vt0.c0, 1165217133))))AND((~ (rt0.c0)))))AND(t0.c0)))OR(((((((((t0.c0)AND(t0.c2)))AND(rt1.c0)))AND('WK')))OR(vt0.c0)))))AND(((vt0.c0)IS NOT(x''))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON (((NULL, ((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0)), x'' COLLATE BINARY))>=((((t0.c0)&(t0.c2)), vt0.c0 COLLATE BINARY, LIKELY(rt1.c0)))) RIGHT OUTER JOIN rt1 ON (((rt1.c1, t0.c0, rt0.c2)) NOT BETWEEN (((((x'37bf', t0.c2, vt0.c0, t0.c0, 1085417273))=((t0.c2, t0.c0, rt0.c2, rt1.c1, rt1.c0))), CAST(vt0.c0 AS REAL), json_insert(rt1.c0, vt0.c0, rt0.c1))) AND (((- (rt0.c0)), ((0.07529051824864463)>(t0.c1)), (rt0.c0 IN (NULL))))) ORDER BY ((x'') NOT BETWEEN (CAST(t0.c2 AS REAL)) AND (NULL))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt1.c2)))AND(rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt1.c2)))AND(rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt1.c2)))AND(rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE((+ (vt0.c0)), json_extract(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0));
SELECT SUM(count) FROM (SELECT ((COALESCE((+ (vt0.c0)), json_extract(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE((+ (vt0.c0)), json_extract(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0));
SELECT SUM(count) FROM (SELECT ((COALESCE((+ (vt0.c0)), json_extract(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE((+ (vt0.c0)), json_extract(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((0x1aa567f2)OR(rt0.c0 COLLATE RTRIM)))AND('3665653')))OR(((rt0.c1)IS(rt0.c0)))))AND((rt0.c2 IN (rt0.c2, rt0.c2))))) ORDER BY (((rt0.c2 IN (rt0.c0)))IS NOT('-825557037')) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((0x1aa567f2)OR(rt0.c0 COLLATE RTRIM)))AND('3665653')))OR(((rt0.c1)IS(rt0.c0)))))AND((rt0.c2 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0)))IS NOT('-825557037')) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((0x1aa567f2)OR(rt0.c0 COLLATE RTRIM)))AND('3665653')))OR(((rt0.c1)IS(rt0.c0)))))AND((rt0.c2 IN (rt0.c2, rt0.c2))))) ORDER BY (((rt0.c2 IN (rt0.c0)))IS NOT('-825557037')) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((0x1aa567f2)OR(rt0.c0 COLLATE RTRIM)))AND('3665653')))OR(((rt0.c1)IS(rt0.c0)))))AND((rt0.c2 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0)))IS NOT('-825557037')) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((0x1aa567f2)OR(rt0.c0 COLLATE RTRIM)))AND('3665653')))OR(((rt0.c1)IS(rt0.c0)))))AND((rt0.c2 IN (rt0.c2, rt0.c2))))) ORDER BY (((rt0.c2 IN (rt0.c0)))IS NOT('-825557037')) ASC;
SELECT * FROM vt0, t0, rt0, rt1 WHERE ((t0.c1 IN (NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN (NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0, rt1);
SELECT * FROM vt0, t0, rt0, rt1 WHERE ((t0.c1 IN (NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN (NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0, rt1);
SELECT * FROM vt0, t0, rt0, rt1 WHERE ((t0.c1 IN (NULL)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((-101544333) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((-101544333) NOT NULL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-101544333) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((-101544333) NOT NULL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-101544333) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((~ (((t0.c1) NOT NULL)))) ORDER BY '554242164' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY '554242164' ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((~ (((t0.c1) NOT NULL)))) ORDER BY '554242164' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY '554242164' ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((~ (((t0.c1) NOT NULL)))) ORDER BY '554242164' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, rt0 NATURAL JOIN rt1 WHERE ((+ (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((+ (SQLITE_VERSION()))) IS TRUE)  as count FROM vt0, t0, rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0, t0, rt0 NATURAL JOIN rt1 WHERE ((+ (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((+ (SQLITE_VERSION()))) IS TRUE)  as count FROM vt0, t0, rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0, t0, rt0 NATURAL JOIN rt1 WHERE ((+ (SQLITE_VERSION())));
SELECT ALL * FROM rt1 WHERE (json_quote(((rt1.c2)>('-1128246465')))) ORDER BY CAST(((rt1.c1)LIKE(rt1.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt1.c2)>('-1128246465')))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1)LIKE(rt1.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (json_quote(((rt1.c2)>('-1128246465')))) ORDER BY CAST(((rt1.c1)LIKE(rt1.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt1.c2)>('-1128246465')))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1)LIKE(rt1.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (json_quote(((rt1.c2)>('-1128246465')))) ORDER BY CAST(((rt1.c1)LIKE(rt1.c0)) AS BLOB)  NULLS FIRST;
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), ((((((((((((rt0.c2)AND(NULL)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(x'')), ((t0.c2) IS TRUE), 0.9086752589899568 COLLATE BINARY, ((((t0.c1)OR(rt0.c1)))AND(t0.c2))))<=((rt0.c0, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), t0.c2, ((vt0.c0) IS TRUE), -2067501811))) WHERE (((t0.c0)>(NULL)) COLLATE RTRIM) ORDER BY (((x''))>((t0.c1))) COLLATE BINARY  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), ((((((((((((rt0.c2)AND(NULL)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(x'')), ((t0.c2) IS TRUE), 0.9086752589899568 COLLATE BINARY, ((((t0.c1)OR(rt0.c1)))AND(t0.c2))))<=((rt0.c0, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), t0.c2, ((vt0.c0) IS TRUE), -2067501811))) ORDER BY (((x''))>((t0.c1))) COLLATE BINARY  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), ((((((((((((rt0.c2)AND(NULL)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(x'')), ((t0.c2) IS TRUE), 0.9086752589899568 COLLATE BINARY, ((((t0.c1)OR(rt0.c1)))AND(t0.c2))))<=((rt0.c0, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), t0.c2, ((vt0.c0) IS TRUE), -2067501811))) WHERE (((t0.c0)>(NULL)) COLLATE RTRIM) ORDER BY (((x''))>((t0.c1))) COLLATE BINARY  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), ((((((((((((rt0.c2)AND(NULL)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(x'')), ((t0.c2) IS TRUE), 0.9086752589899568 COLLATE BINARY, ((((t0.c1)OR(rt0.c1)))AND(t0.c2))))<=((rt0.c0, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), t0.c2, ((vt0.c0) IS TRUE), -2067501811))) ORDER BY (((x''))>((t0.c1))) COLLATE BINARY  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), ((((((((((((rt0.c2)AND(NULL)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(x'')), ((t0.c2) IS TRUE), 0.9086752589899568 COLLATE BINARY, ((((t0.c1)OR(rt0.c1)))AND(t0.c2))))<=((rt0.c0, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), t0.c2, ((vt0.c0) IS TRUE), -2067501811))) WHERE (((t0.c0)>(NULL)) COLLATE RTRIM) ORDER BY (((x''))>((t0.c1))) COLLATE BINARY  NULLS LAST, CAST(rt0.c1 AS INTEGER) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 INDEXED BY i38, rt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0, vt0 INDEXED BY i38, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0 INDEXED BY i38, rt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0, vt0 INDEXED BY i38, rt1, rt0);
SELECT * FROM t0, rt0, rt1, vt0 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, rt1, vt0 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT * FROM t0, rt0, rt1, vt0 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, rt1, vt0 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT * FROM t0, rt0, rt1, vt0 WHERE ((NOT ((rt1.c1 IN ())))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (LAST_INSERT_ROWID());
SELECT * FROM t0, vt0, rt0 WHERE (((x'c10785e0')IS(t0.c2))) ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST, (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))OR((- (rt0.c0)))))AND(((rt0.c0) BETWEEN (x'690a') AND (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'c10785e0')IS(t0.c2))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST, (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))OR((- (rt0.c0)))))AND(((rt0.c0) BETWEEN (x'690a') AND (rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (((x'c10785e0')IS(t0.c2))) ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST, (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))OR((- (rt0.c0)))))AND(((rt0.c0) BETWEEN (x'690a') AND (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'c10785e0')IS(t0.c2))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST, (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))OR((- (rt0.c0)))))AND(((rt0.c0) BETWEEN (x'690a') AND (rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (((x'c10785e0')IS(t0.c2))) ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST, (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))OR((- (rt0.c0)))))AND(((rt0.c0) BETWEEN (x'690a') AND (rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON NULL INNER JOIN t0 ON ((((rt1.c2)IS(rt1.c0)))<>(CASE WHEN rt0.c1 THEN rt0.c2 END)) INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS NUMERIC) WHERE ((((~ (vt0.c0)))%((vt0.c0 IN ())))) ORDER BY ((((t0.c1) NOT NULL))*(rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))%((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON NULL INNER JOIN t0 ON ((((rt1.c2)IS(rt1.c0)))<>(CASE WHEN rt0.c1 THEN rt0.c2 END)) INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS NUMERIC) ORDER BY ((((t0.c1) NOT NULL))*(rt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON NULL INNER JOIN t0 ON ((((rt1.c2)IS(rt1.c0)))<>(CASE WHEN rt0.c1 THEN rt0.c2 END)) INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS NUMERIC) WHERE ((((~ (vt0.c0)))%((vt0.c0 IN ())))) ORDER BY ((((t0.c1) NOT NULL))*(rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))%((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON NULL INNER JOIN t0 ON ((((rt1.c2)IS(rt1.c0)))<>(CASE WHEN rt0.c1 THEN rt0.c2 END)) INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS NUMERIC) ORDER BY ((((t0.c1) NOT NULL))*(rt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON NULL INNER JOIN t0 ON ((((rt1.c2)IS(rt1.c0)))<>(CASE WHEN rt0.c1 THEN rt0.c2 END)) INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS NUMERIC) WHERE ((((~ (vt0.c0)))%((vt0.c0 IN ())))) ORDER BY ((((t0.c1) NOT NULL))*(rt0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((((((vt0.c0) IS FALSE))AND((((rt1.c0))>((t0.c0))))))OR(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND((((rt1.c0))>((t0.c0))))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((((((vt0.c0) IS FALSE))AND((((rt1.c0))>((t0.c0))))))OR(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND((((rt1.c0))>((t0.c0))))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((((((vt0.c0) IS FALSE))AND((((rt1.c0))>((t0.c0))))))OR(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0 WHERE ('1228132759') ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt0.c0)&(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1228132759') IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt0.c0)&(t0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ('1228132759') ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt0.c0)&(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1228132759') IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt0.c0)&(t0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ('1228132759') ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt0.c0)&(t0.c1)))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE ((- (NULL))) ORDER BY ((CASE rt0.c1  WHEN 0.6026675726783763 THEN NULL END)OR(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CASE rt0.c1  WHEN 0.6026675726783763 THEN NULL END)OR(rt0.c0)) ASC);
SELECT * FROM t0, vt0, rt0 WHERE ((- (NULL))) ORDER BY ((CASE rt0.c1  WHEN 0.6026675726783763 THEN NULL END)OR(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CASE rt0.c1  WHEN 0.6026675726783763 THEN NULL END)OR(rt0.c0)) ASC);
SELECT * FROM t0, vt0, rt0 WHERE ((- (NULL))) ORDER BY ((CASE rt0.c1  WHEN 0.6026675726783763 THEN NULL END)OR(rt0.c0)) ASC;
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (json_insert((rt1.c0 IN ()), ((((t0.c2)AND(t0.c1)))OR(t0.c1)), TYPEOF(rt1.c2))) ORDER BY (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c1)) IN (t0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((rt1.c0 IN ()), ((((t0.c2)AND(t0.c1)))OR(t0.c1)), TYPEOF(rt1.c2))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c1)) IN (t0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (json_insert((rt1.c0 IN ()), ((((t0.c2)AND(t0.c1)))OR(t0.c1)), TYPEOF(rt1.c2))) ORDER BY (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c1)) IN (t0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((rt1.c0 IN ()), ((((t0.c2)AND(t0.c1)))OR(t0.c1)), TYPEOF(rt1.c2))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c1)) IN (t0.c1))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) NOTNULL) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) ELSE IFNULL(DISTINCT t0.c2, t0.c0) END) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) NOTNULL) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) ELSE IFNULL(DISTINCT t0.c2, t0.c0) END) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1 ASC);
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) NOTNULL) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) ELSE IFNULL(DISTINCT t0.c2, t0.c0) END) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) NOTNULL) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) ELSE IFNULL(DISTINCT t0.c2, t0.c0) END) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1 ASC);
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c0) NOTNULL) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) ELSE IFNULL(DISTINCT t0.c2, t0.c0) END) ORDER BY rt0.c1 ASC;
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON UPPER((t0.c2 IN (rt1.c0, rt0.c2))) WHERE (((((((((((((((rt0.c2)OR(x'')))OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND('1e500000Mh')))OR(NULL)))<(((rt0.c0) BETWEEN (rt0.c2) AND ('0.3589381877345862'))))) ORDER BY (((json_extract(rt0.c0, rt1.c2)))==((CAST(190869221 AS REAL))))  NULLS FIRST, CAST(((rt1.c1) NOTNULL) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(x'')))OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND('1e500000Mh')))OR(NULL)))<(((rt0.c0) BETWEEN (rt0.c2) AND ('0.3589381877345862'))))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON UPPER((t0.c2 IN (rt1.c0, rt0.c2))) ORDER BY (((json_extract(rt0.c0, rt1.c2)))==((CAST(190869221 AS REAL))))  NULLS FIRST, CAST(((rt1.c1) NOTNULL) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON UPPER((t0.c2 IN (rt1.c0, rt0.c2))) WHERE (((((((((((((((rt0.c2)OR(x'')))OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND('1e500000Mh')))OR(NULL)))<(((rt0.c0) BETWEEN (rt0.c2) AND ('0.3589381877345862'))))) ORDER BY (((json_extract(rt0.c0, rt1.c2)))==((CAST(190869221 AS REAL))))  NULLS FIRST, CAST(((rt1.c1) NOTNULL) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(x'')))OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND('1e500000Mh')))OR(NULL)))<(((rt0.c0) BETWEEN (rt0.c2) AND ('0.3589381877345862'))))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON UPPER((t0.c2 IN (rt1.c0, rt0.c2))) ORDER BY (((json_extract(rt0.c0, rt1.c2)))==((CAST(190869221 AS REAL))))  NULLS FIRST, CAST(((rt1.c1) NOTNULL) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON UPPER((t0.c2 IN (rt1.c0, rt0.c2))) WHERE (((((((((((((((rt0.c2)OR(x'')))OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND('1e500000Mh')))OR(NULL)))<(((rt0.c0) BETWEEN (rt0.c2) AND ('0.3589381877345862'))))) ORDER BY (((json_extract(rt0.c0, rt1.c2)))==((CAST(190869221 AS REAL))))  NULLS FIRST, CAST(((rt1.c1) NOTNULL) AS INTEGER) DESC;
SELECT * FROM rt1 INDEXED BY i38, vt0, rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (0Xffffffffc8a38020) AND (rt0.c0)) THEN ((rt0.c0)GLOB(0.08062569782638318)) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT BETWEEN (0xffffffffc8a38020) AND (rt0.c0)) THEN ((rt0.c0)GLOB(0.08062569782638318)) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 INDEXED BY i38, vt0, rt0);
SELECT * FROM rt1 INDEXED BY i38, vt0, rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (0Xffffffffc8a38020) AND (rt0.c0)) THEN ((rt0.c0)GLOB(0.08062569782638318)) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT BETWEEN (0xffffffffc8a38020) AND (rt0.c0)) THEN ((rt0.c0)GLOB(0.08062569782638318)) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 INDEXED BY i38, vt0, rt0);
SELECT ALL * FROM t0 WHERE (((x'')+((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'')+((+ (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'')+((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'')+((+ (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'')+((+ (t0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2))) BETWEEN ('9223372036854775807' COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY))) ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2))) BETWEEN ('9223372036854775807' COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2))) BETWEEN ('9223372036854775807' COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY))) ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2))) BETWEEN ('9223372036854775807' COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2))) BETWEEN ('9223372036854775807' COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY))) ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 NOT INDEXED, t0, rt1 WHERE ('' COLLATE RTRIM) ORDER BY CAST(CAST(t0.c2 AS TEXT) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0, rt1 ORDER BY CAST(CAST(t0.c2 AS TEXT) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 NOT INDEXED, t0, rt1 WHERE ('' COLLATE RTRIM) ORDER BY CAST(CAST(t0.c2 AS TEXT) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0, rt1 ORDER BY CAST(CAST(t0.c2 AS TEXT) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 NOT INDEXED, t0, rt1 WHERE ('' COLLATE RTRIM) ORDER BY CAST(CAST(t0.c2 AS TEXT) AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c1)&('1142188048'))  WHEN CASE WHEN '0.539857372389876' THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END THEN UNLIKELY(DISTINCT rt1.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1)&('1142188048'))  WHEN CASE WHEN '0.539857372389876' THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END THEN UNLIKELY(DISTINCT rt1.c1) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c1)&('1142188048'))  WHEN CASE WHEN '0.539857372389876' THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END THEN UNLIKELY(DISTINCT rt1.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1)&('1142188048'))  WHEN CASE WHEN '0.539857372389876' THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END THEN UNLIKELY(DISTINCT rt1.c1) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c1)&('1142188048'))  WHEN CASE WHEN '0.539857372389876' THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END THEN UNLIKELY(DISTINCT rt1.c1) END);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (NULL);
SELECT * FROM rt0 WHERE ('0.539857372389876') ORDER BY LOWER(CAST(rt0.c1 AS TEXT)), ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((43207252))) IN ()), ((0X4ef7af3c)||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.539857372389876') IS TRUE)  as count FROM rt0 ORDER BY LOWER(CAST(rt0.c1 AS TEXT)), ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((43207252))) IN ()), ((0x4ef7af3c)||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE ('0.539857372389876') ORDER BY LOWER(CAST(rt0.c1 AS TEXT)), ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((43207252))) IN ()), ((0X4ef7af3c)||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.539857372389876') IS TRUE)  as count FROM rt0 ORDER BY LOWER(CAST(rt0.c1 AS TEXT)), ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((43207252))) IN ()), ((0x4ef7af3c)||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE ('0.539857372389876') ORDER BY LOWER(CAST(rt0.c1 AS TEXT)), ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((43207252))) IN ()), ((0X4ef7af3c)||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (UPPER(DISTINCT ((rt1.c2)-(rt1.c0)))) ORDER BY CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt1.c2)-(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS NUMERIC));
SELECT COUNT(*) FROM rt1 WHERE (UPPER(DISTINCT ((rt1.c2)-(rt1.c0)))) ORDER BY CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt1.c2)-(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS NUMERIC));
SELECT COUNT(*) FROM rt1 WHERE (UPPER(DISTINCT ((rt1.c2)-(rt1.c0)))) ORDER BY CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS NUMERIC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('') ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2)+(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE x'45e4' END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2)+(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE x'45e4' END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('') ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2)+(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE x'45e4' END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2)+(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE x'45e4' END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('') ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c2)+(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE x'45e4' END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE x''  WHEN LIKELY(t0.c0) THEN ((t0.c2)%(t0.c1)) END WHERE (CASE ((t0.c1) ISNULL)  WHEN ((t0.c1)%(t0.c1)) THEN ((t0.c1)<(t0.c1)) ELSE CASE WHEN vt0.c0 THEN 0.957848692538137 WHEN '-1010038694' THEN vt0.c0 WHEN t0.c1 THEN t0.c0 END END) ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (- (x'')) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) ISNULL)  WHEN ((t0.c1)%(t0.c1)) THEN ((t0.c1)<(t0.c1)) ELSE CASE WHEN vt0.c0 THEN 0.957848692538137 WHEN '-1010038694' THEN vt0.c0 WHEN t0.c1 THEN t0.c0 END END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE x''  WHEN LIKELY(t0.c0) THEN ((t0.c2)%(t0.c1)) END ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (- (x'')) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE x''  WHEN LIKELY(t0.c0) THEN ((t0.c2)%(t0.c1)) END WHERE (CASE ((t0.c1) ISNULL)  WHEN ((t0.c1)%(t0.c1)) THEN ((t0.c1)<(t0.c1)) ELSE CASE WHEN vt0.c0 THEN 0.957848692538137 WHEN '-1010038694' THEN vt0.c0 WHEN t0.c1 THEN t0.c0 END END) ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (- (x'')) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) ISNULL)  WHEN ((t0.c1)%(t0.c1)) THEN ((t0.c1)<(t0.c1)) ELSE CASE WHEN vt0.c0 THEN 0.957848692538137 WHEN '-1010038694' THEN vt0.c0 WHEN t0.c1 THEN t0.c0 END END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE x''  WHEN LIKELY(t0.c0) THEN ((t0.c2)%(t0.c1)) END ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (- (x'')) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE x''  WHEN LIKELY(t0.c0) THEN ((t0.c2)%(t0.c1)) END WHERE (CASE ((t0.c1) ISNULL)  WHEN ((t0.c1)%(t0.c1)) THEN ((t0.c1)<(t0.c1)) ELSE CASE WHEN vt0.c0 THEN 0.957848692538137 WHEN '-1010038694' THEN vt0.c0 WHEN t0.c1 THEN t0.c0 END END) ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (- (x'')) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) COLLATE RTRIM DESC;
SELECT * FROM rt1, rt0 WHERE (('<-' IN ()));
SELECT SUM(count) FROM (SELECT ((('<-' IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (('<-' IN ()));
SELECT SUM(count) FROM (SELECT ((('<-' IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (('<-' IN ()));
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('~<⡮|')))))OR((('1223980520')*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('~<⡮|')))))OR((('1223980520')*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('~<⡮|')))))OR((('1223980520')*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('~<⡮|')))))OR((('1223980520')*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('~<⡮|')))))OR((('1223980520')*(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)<(rt0.c0)) IN ()) LEFT OUTER JOIN rt0 ON CAST(((rt1.c0) IS FALSE) AS BLOB) WHERE (load_extension(rt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt1.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)<(rt0.c0)) IN ()) LEFT OUTER JOIN rt0 ON CAST(((rt1.c0) IS FALSE) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)<(rt0.c0)) IN ()) LEFT OUTER JOIN rt0 ON CAST(((rt1.c0) IS FALSE) AS BLOB) WHERE (load_extension(rt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt1.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)<(rt0.c0)) IN ()) LEFT OUTER JOIN rt0 ON CAST(((rt1.c0) IS FALSE) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))-(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))-(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))-(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))-(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))-(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT * FROM rt1, rt0, vt0, t0 WHERE (CAST((((((((('257445993')OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(NULL)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((((((('257445993')OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(NULL)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, vt0, t0);
SELECT * FROM rt1, rt0, vt0, t0 WHERE (CAST((((((((('257445993')OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(NULL)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((((((('257445993')OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(NULL)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, vt0, t0);
SELECT * FROM rt1, rt0, vt0, t0 WHERE (CAST((((((((('257445993')OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(NULL)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)OR(json_object(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR(json_object(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)OR(json_object(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR(json_object(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM t0, vt0, rt0, rt1 WHERE ((((t0.c1 IN ()))!=(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))<>(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0, rt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt0, rt1 WHERE ((((t0.c1 IN ()))!=(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))<>(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0, rt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt0, rt1 WHERE ((((t0.c1 IN ()))!=(CAST(t0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<<(NULLIF(rt0.c2, rt0.c2)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))<<(NULLIF(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<<(NULLIF(rt0.c2, rt0.c2)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))<<(NULLIF(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<<(NULLIF(rt0.c2, rt0.c2)))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC)) ORDER BY CASE CAST(0.0830331683848663 AS NUMERIC)  WHEN -695839872 THEN DATE(rt0.c0, vt0.c0, rt0.c0) ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) END DESC, (NOT (CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE CAST(0.0830331683848663 AS NUMERIC)  WHEN -695839872 THEN DATE(rt0.c0, vt0.c0, rt0.c0) ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) END DESC, (NOT (CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC)) ORDER BY CASE CAST(0.0830331683848663 AS NUMERIC)  WHEN -695839872 THEN DATE(rt0.c0, vt0.c0, rt0.c0) ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) END DESC, (NOT (CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE CAST(0.0830331683848663 AS NUMERIC)  WHEN -695839872 THEN DATE(rt0.c0, vt0.c0, rt0.c0) ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) END DESC, (NOT (CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC)) ORDER BY CASE CAST(0.0830331683848663 AS NUMERIC)  WHEN -695839872 THEN DATE(rt0.c0, vt0.c0, rt0.c0) ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) END DESC, (NOT (CAST(rt0.c0 AS INTEGER)));
SELECT ALL * FROM vt0, rt0 INDEXED BY i38 FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))-((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))&((((t0.c1)) NOT BETWEEN ((0.2802236129767878)) AND ((''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))&((((t0.c1)) NOT BETWEEN ((0.2802236129767878)) AND (('')))))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i38 FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))-((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT ALL * FROM vt0, rt0 INDEXED BY i38 FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))-((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))&((((t0.c1)) NOT BETWEEN ((0.2802236129767878)) AND ((''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))&((((t0.c1)) NOT BETWEEN ((0.2802236129767878)) AND (('')))))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i38 FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))-((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c2) BETWEEN ((~ (rt1.c1))) AND ((rt0.c1 IN ())))) ORDER BY ((((rt0.c1) NOTNULL)) NOT BETWEEN (((((rt1.c2)AND(rt0.c1)))AND(rt0.c2))) AND (((0.27946752065196856)-(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN ((~ (rt1.c1))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c1) NOTNULL)) NOT BETWEEN (((((rt1.c2)AND(rt0.c1)))AND(rt0.c2))) AND (((0.27946752065196856)-(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((rt1.c2) BETWEEN ((~ (rt1.c1))) AND ((rt0.c1 IN ())))) ORDER BY ((((rt0.c1) NOTNULL)) NOT BETWEEN (((((rt1.c2)AND(rt0.c1)))AND(rt0.c2))) AND (((0.27946752065196856)-(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN ((~ (rt1.c1))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c1) NOTNULL)) NOT BETWEEN (((((rt1.c2)AND(rt0.c1)))AND(rt0.c2))) AND (((0.27946752065196856)-(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((rt1.c2) BETWEEN ((~ (rt1.c1))) AND ((rt0.c1 IN ())))) ORDER BY ((((rt0.c1) NOTNULL)) NOT BETWEEN (((((rt1.c2)AND(rt0.c1)))AND(rt0.c2))) AND (((0.27946752065196856)-(rt1.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, vt0, rt0 WHERE (((((t0.c1 IN (rt1.c2)), ((rt1.c2) NOT NULL), ((t0.c1)<<(rt1.c2))))>((CAST(rt1.c2 AS INTEGER), ((-1.731153179E9)OR(rt1.c1)), t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1 IN (rt1.c2)), ((rt1.c2) NOT NULL), ((t0.c1)<<(rt1.c2))))>((CAST(rt1.c2 AS INTEGER), ((-1.731153179E9)OR(rt1.c1)), t0.c2)))) IS TRUE)  as count FROM rt1, t0, vt0, rt0);
SELECT COUNT(*) FROM rt1, t0, vt0, rt0 WHERE (((((t0.c1 IN (rt1.c2)), ((rt1.c2) NOT NULL), ((t0.c1)<<(rt1.c2))))>((CAST(rt1.c2 AS INTEGER), ((-1.731153179E9)OR(rt1.c1)), t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1 IN (rt1.c2)), ((rt1.c2) NOT NULL), ((t0.c1)<<(rt1.c2))))>((CAST(rt1.c2 AS INTEGER), ((-1.731153179E9)OR(rt1.c1)), t0.c2)))) IS TRUE)  as count FROM rt1, t0, vt0, rt0);
SELECT COUNT(*) FROM rt1, t0, vt0, rt0 WHERE (((((t0.c1 IN (rt1.c2)), ((rt1.c2) NOT NULL), ((t0.c1)<<(rt1.c2))))>((CAST(rt1.c2 AS INTEGER), ((-1.731153179E9)OR(rt1.c1)), t0.c2))));
SELECT COUNT(*) FROM t0, rt1 WHERE (((CHAR(rt1.c1, t0.c0, rt1.c0)) NOT BETWEEN (((rt1.c0)>>(rt1.c0))) AND (((((t0.c0)AND(rt1.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(rt1.c1, t0.c0, rt1.c0)) NOT BETWEEN (((rt1.c0)>>(rt1.c0))) AND (((((t0.c0)AND(rt1.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, rt1 NOT INDEXED);
SELECT COUNT(*) FROM t0, rt1 WHERE (((CHAR(rt1.c1, t0.c0, rt1.c0)) NOT BETWEEN (((rt1.c0)>>(rt1.c0))) AND (((((t0.c0)AND(rt1.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(rt1.c1, t0.c0, rt1.c0)) NOT BETWEEN (((rt1.c0)>>(rt1.c0))) AND (((((t0.c0)AND(rt1.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, rt1 NOT INDEXED);
SELECT COUNT(*) FROM t0, rt1 WHERE (((CHAR(rt1.c1, t0.c0, rt1.c0)) NOT BETWEEN (((rt1.c0)>>(rt1.c0))) AND (((((t0.c0)AND(rt1.c2)))OR(t0.c2)))));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (('i^')<=(t0.c2)) COLLATE BINARY FULL OUTER JOIN rt1 ON (((((rt1.c2, x'', t0.c0))>=((t0.c2, vt0.c0, vt0.c0))))||((- (rt1.c1)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (('i^')<=(t0.c2)) COLLATE BINARY FULL OUTER JOIN rt1 ON (((((rt1.c2, x'', t0.c0))>=((t0.c2, vt0.c0, vt0.c0))))||((- (rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (('i^')<=(t0.c2)) COLLATE BINARY FULL OUTER JOIN rt1 ON (((((rt1.c2, x'', t0.c0))>=((t0.c2, vt0.c0, vt0.c0))))||((- (rt1.c1)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (('i^')<=(t0.c2)) COLLATE BINARY FULL OUTER JOIN rt1 ON (((((rt1.c2, x'', t0.c0))>=((t0.c2, vt0.c0, vt0.c0))))||((- (rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (('i^')<=(t0.c2)) COLLATE BINARY FULL OUTER JOIN rt1 ON (((((rt1.c2, x'', t0.c0))>=((t0.c2, vt0.c0, vt0.c0))))||((- (rt1.c1)))) WHERE (t0.c0);
SELECT COUNT(*) FROM t0, vt0, rt1, rt0 WHERE (t0.c0) ORDER BY CASE (rt1.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN ((rt1.c0)%(rt1.c1)) ELSE ((t0.c1) IS FALSE) END DESC, UPPER((((rt1.c1))<((rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0, rt1, rt0 ORDER BY CASE (rt1.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN ((rt1.c0)%(rt1.c1)) ELSE ((t0.c1) IS FALSE) END DESC, UPPER((((rt1.c1))<((rt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt1, rt0 WHERE (t0.c0) ORDER BY CASE (rt1.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN ((rt1.c0)%(rt1.c1)) ELSE ((t0.c1) IS FALSE) END DESC, UPPER((((rt1.c1))<((rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0, rt1, rt0 ORDER BY CASE (rt1.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN ((rt1.c0)%(rt1.c1)) ELSE ((t0.c1) IS FALSE) END DESC, UPPER((((rt1.c1))<((rt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt1, rt0 WHERE (t0.c0) ORDER BY CASE (rt1.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN ((rt1.c0)%(rt1.c1)) ELSE ((t0.c1) IS FALSE) END DESC, UPPER((((rt1.c1))<((rt1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ ((('-1287281346')<(vt0.c0)))) WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ ((('-1287281346')<(vt0.c0)))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ ((('-1287281346')<(vt0.c0)))) WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ ((('-1287281346')<(vt0.c0)))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (+ ((('-1287281346')<(vt0.c0)))) WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0, vt0 WHERE ((((t0.c0))<((rt0.c2))) COLLATE NOCASE) ORDER BY (+ (rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1, rt0, vt0 ORDER BY (+ (rt1.c0)) DESC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, vt0 WHERE ((((t0.c0))<((rt0.c2))) COLLATE NOCASE) ORDER BY (+ (rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1, rt0, vt0 ORDER BY (+ (rt1.c0)) DESC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, vt0 WHERE ((((t0.c0))<((rt0.c2))) COLLATE NOCASE) ORDER BY (+ (rt1.c0)) DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- (rt1.c0)) FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN ((CASE WHEN vt0.c0 THEN rt1.c0 END)) AND ((((t0.c1) BETWEEN (rt1.c0) AND (t0.c0))))) WHERE ((((rt1.c1)>>(vt0.c0)) IN ())) ORDER BY ((((((t0.c0)OR(rt1.c1)))AND(t0.c1)))OR('td'));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (- (rt1.c0)) FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN ((CASE WHEN vt0.c0 THEN rt1.c0 END)) AND ((((t0.c1) BETWEEN (rt1.c0) AND (t0.c0))))) ORDER BY ((((((t0.c0)OR(rt1.c1)))AND(t0.c1)))OR('td')));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- (rt1.c0)) FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN ((CASE WHEN vt0.c0 THEN rt1.c0 END)) AND ((((t0.c1) BETWEEN (rt1.c0) AND (t0.c0))))) WHERE ((((rt1.c1)>>(vt0.c0)) IN ())) ORDER BY ((((((t0.c0)OR(rt1.c1)))AND(t0.c1)))OR('td'));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (- (rt1.c0)) FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN ((CASE WHEN vt0.c0 THEN rt1.c0 END)) AND ((((t0.c1) BETWEEN (rt1.c0) AND (t0.c0))))) ORDER BY ((((((t0.c0)OR(rt1.c1)))AND(t0.c1)))OR('td')));
SELECT ALL * FROM rt0, t0 INDEXED BY i38 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0 INDEXED BY i38 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0, t0 INDEXED BY i38 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0 INDEXED BY i38 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0, t0 INDEXED BY i38 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) IS FALSE)  NULLS LAST, (NOT ((+ (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) IS FALSE)  NULLS LAST, (NOT ((+ (t0.c1)))) ASC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) IS FALSE)  NULLS LAST, (NOT ((+ (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) IS FALSE)  NULLS LAST, (NOT ((+ (t0.c1)))) ASC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) IS FALSE)  NULLS LAST, (NOT ((+ (t0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN (NULL))) BETWEEN (TYPEOF(vt0.c0)) AND ('' COLLATE NOCASE)) WHERE ((((t0.c1 IN (rt1.c2))) NOT BETWEEN (t0.c1 COLLATE BINARY) AND (((((((((t0.c0)OR(rt1.c2)))AND(rt1.c0)))OR(-1519367887)))OR(t0.c2))))) ORDER BY ((((rt1.c1)<=(rt1.c0))) NOT BETWEEN (((0.8779830170508224) ISNULL)) AND ((- ('2126545451'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN (rt1.c2))) NOT BETWEEN (t0.c1 COLLATE BINARY) AND (((((((((t0.c0)OR(rt1.c2)))AND(rt1.c0)))OR(-1519367887)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN (NULL))) BETWEEN (TYPEOF(vt0.c0)) AND ('' COLLATE NOCASE)) ORDER BY ((((rt1.c1)<=(rt1.c0))) NOT BETWEEN (((0.8779830170508224) ISNULL)) AND ((- ('2126545451'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN (NULL))) BETWEEN (TYPEOF(vt0.c0)) AND ('' COLLATE NOCASE)) WHERE ((((t0.c1 IN (rt1.c2))) NOT BETWEEN (t0.c1 COLLATE BINARY) AND (((((((((t0.c0)OR(rt1.c2)))AND(rt1.c0)))OR(-1519367887)))OR(t0.c2))))) ORDER BY ((((rt1.c1)<=(rt1.c0))) NOT BETWEEN (((0.8779830170508224) ISNULL)) AND ((- ('2126545451'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN (rt1.c2))) NOT BETWEEN (t0.c1 COLLATE BINARY) AND (((((((((t0.c0)OR(rt1.c2)))AND(rt1.c0)))OR(-1519367887)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN (NULL))) BETWEEN (TYPEOF(vt0.c0)) AND ('' COLLATE NOCASE)) ORDER BY ((((rt1.c1)<=(rt1.c0))) NOT BETWEEN (((0.8779830170508224) ISNULL)) AND ((- ('2126545451'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN (NULL))) BETWEEN (TYPEOF(vt0.c0)) AND ('' COLLATE NOCASE)) WHERE ((((t0.c1 IN (rt1.c2))) NOT BETWEEN (t0.c1 COLLATE BINARY) AND (((((((((t0.c0)OR(rt1.c2)))AND(rt1.c0)))OR(-1519367887)))OR(t0.c2))))) ORDER BY ((((rt1.c1)<=(rt1.c0))) NOT BETWEEN (((0.8779830170508224) ISNULL)) AND ((- ('2126545451'))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY IFNULL(DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) DESC, (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0)||(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) DESC, (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0)||(rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY IFNULL(DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) DESC, (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0)||(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) DESC, (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0)||(rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY IFNULL(DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) DESC, (((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0)||(rt0.c0))))) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(((x'')&(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')&(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((x'')&(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')&(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((x'')&(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((('-832971519'))<(((((t0.c2, rt1.c1, rt1.c0)) BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c1, t0.c2, rt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-832971519'))<(((((t0.c2, rt1.c1, rt1.c0)) BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c1, t0.c2, rt1.c0))))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((('-832971519'))<(((((t0.c2, rt1.c1, rt1.c0)) BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c1, t0.c2, rt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-832971519'))<(((((t0.c2, rt1.c1, rt1.c0)) BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c1, t0.c2, rt1.c0))))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((('-832971519'))<(((((t0.c2, rt1.c1, rt1.c0)) BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c1, t0.c2, rt1.c0)))))));
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE RTRIM CROSS JOIN t0 ON ((TRIM(rt0.c2))/(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1)))) WHERE ((((rt0.c1, t0.c2, t0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), 'AL	CFVOL' COLLATE RTRIM, (((t0.c1))==((t0.c2))))) AND ((((vt0.c0)GLOB(t0.c0)), CASE WHEN 189425691 THEN t0.c1 END, t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, t0.c2, t0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), 'AL	CFVOL' COLLATE RTRIM, (((t0.c1))=((t0.c2))))) AND ((((vt0.c0)GLOB(t0.c0)), CASE WHEN 189425691 THEN t0.c1 END, t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE RTRIM CROSS JOIN t0 ON ((TRIM(rt0.c2))/(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE RTRIM CROSS JOIN t0 ON ((TRIM(rt0.c2))/(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1)))) WHERE ((((rt0.c1, t0.c2, t0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), 'AL	CFVOL' COLLATE RTRIM, (((t0.c1))==((t0.c2))))) AND ((((vt0.c0)GLOB(t0.c0)), CASE WHEN 189425691 THEN t0.c1 END, t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, t0.c2, t0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), 'AL	CFVOL' COLLATE RTRIM, (((t0.c1))=((t0.c2))))) AND ((((vt0.c0)GLOB(t0.c0)), CASE WHEN 189425691 THEN t0.c1 END, t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE RTRIM CROSS JOIN t0 ON ((TRIM(rt0.c2))/(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE RTRIM CROSS JOIN t0 ON ((TRIM(rt0.c2))/(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1)))) WHERE ((((rt0.c1, t0.c2, t0.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), 'AL	CFVOL' COLLATE RTRIM, (((t0.c1))==((t0.c2))))) AND ((((vt0.c0)GLOB(t0.c0)), CASE WHEN 189425691 THEN t0.c1 END, t0.c0 COLLATE RTRIM))));
SELECT * FROM vt0, t0, rt0 WHERE (CAST((~ (t0.c1)) AS INTEGER)) ORDER BY 0.23245675312378422  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY 0.23245675312378422  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE (CAST((~ (t0.c1)) AS INTEGER)) ORDER BY 0.23245675312378422  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY 0.23245675312378422  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE (CAST((~ (t0.c1)) AS INTEGER)) ORDER BY 0.23245675312378422  NULLS LAST;
SELECT * FROM rt1 WHERE (HEX(((rt1.c0) BETWEEN ('f*(') AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt1.c0) BETWEEN ('f*(') AND (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (HEX(((rt1.c0) BETWEEN ('f*(') AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt1.c0) BETWEEN ('f*(') AND (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (HEX(((rt1.c0) BETWEEN ('f*(') AND (rt1.c2))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((vt0.c0) IS FALSE)))) WHERE (((NULL)>>(0.843580499201126)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(0.843580499201126))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((vt0.c0) IS FALSE)))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((vt0.c0) IS FALSE)))) WHERE (((NULL)>>(0.843580499201126)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(0.843580499201126))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((vt0.c0) IS FALSE)))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((vt0.c0) IS FALSE)))) WHERE (((NULL)>>(0.843580499201126)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) ORDER BY 'V\nRf})y{'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY 'V\nRf})y{'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) ORDER BY 'V\nRf})y{'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY 'V\nRf})y{'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))) ISNULL)) ORDER BY 'V\nRf})y{'  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (0.34855278677234947);
SELECT SUM(count) FROM (SELECT ALL ((0.34855278677234947) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (0.34855278677234947);
SELECT SUM(count) FROM (SELECT ALL ((0.34855278677234947) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (0.34855278677234947);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT * FROM t0, rt1, rt0, vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY QUOTE(((rt0.c1)/(t0.c2))), CASE CAST(t0.c2 AS TEXT)  WHEN rt0.c1 THEN CAST(t0.c2 AS BLOB) ELSE CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t0, rt1, rt0, vt0 NOT INDEXED ORDER BY QUOTE(((rt0.c1)/(t0.c2))), CASE CAST(t0.c2 AS TEXT)  WHEN rt0.c1 THEN CAST(t0.c2 AS BLOB) ELSE CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 END END);
SELECT * FROM t0, rt1, rt0, vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY QUOTE(((rt0.c1)/(t0.c2))), CASE CAST(t0.c2 AS TEXT)  WHEN rt0.c1 THEN CAST(t0.c2 AS BLOB) ELSE CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t0, rt1, rt0, vt0 NOT INDEXED ORDER BY QUOTE(((rt0.c1)/(t0.c2))), CASE CAST(t0.c2 AS TEXT)  WHEN rt0.c1 THEN CAST(t0.c2 AS BLOB) ELSE CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 END END);
SELECT * FROM t0, rt1, rt0, vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY QUOTE(((rt0.c1)/(t0.c2))), CASE CAST(t0.c2 AS TEXT)  WHEN rt0.c1 THEN CAST(t0.c2 AS BLOB) ELSE CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 END END;
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((x'b697') BETWEEN ((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c2)))) AND (((rt0.c0) IS TRUE))) WHERE (((CASE WHEN rt0.c2 THEN 0X3ac7f0b1 END) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c1))) AND (LIKELIHOOD(rt0.c2, 0.30271413636229305)))) ORDER BY ((((rt1.c0)-(rt1.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN 0X3ac7f0b1 END) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c1))) AND (LIKELIHOOD(rt0.c2, 0.30271413636229305)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((x'b697') BETWEEN ((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c2)))) AND (((rt0.c0) IS TRUE))) ORDER BY ((((rt1.c0)-(rt1.c1))) NOT NULL) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((x'b697') BETWEEN ((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c2)))) AND (((rt0.c0) IS TRUE))) WHERE (((CASE WHEN rt0.c2 THEN 0X3ac7f0b1 END) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c1))) AND (LIKELIHOOD(rt0.c2, 0.30271413636229305)))) ORDER BY ((((rt1.c0)-(rt1.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN 0X3ac7f0b1 END) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c1))) AND (LIKELIHOOD(rt0.c2, 0.30271413636229305)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((x'b697') BETWEEN ((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c2)))) AND (((rt0.c0) IS TRUE))) ORDER BY ((((rt1.c0)-(rt1.c1))) NOT NULL) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((x'b697') BETWEEN ((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c2)))) AND (((rt0.c0) IS TRUE))) WHERE (((CASE WHEN rt0.c2 THEN 0X3ac7f0b1 END) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c1))) AND (LIKELIHOOD(rt0.c2, 0.30271413636229305)))) ORDER BY ((((rt1.c0)-(rt1.c1))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2 IN (rt0.c2, rt1.c0)) IN ()) CROSS JOIN rt0 ON (((rt0.c1)AND(rt0.c0)) IN (((rt0.c1)LIKE(t0.c2)))) RIGHT OUTER JOIN rt1 ON ((rt0.c0 IN ()) IN (rt0.c1, TYPEOF(t0.c0))) WHERE ((((rt1.c1, rt0.c1, t0.c2, t0.c2, rt1.c0)) BETWEEN ((CAST(rt0.c1 AS REAL), CASE WHEN rt1.c1 THEN t0.c0 END, ((-2078605688) ISNULL), (0xffffffffb7233af4 IN ()), ((rt0.c0) IS TRUE))) AND ((rt0.c0, ((t0.c1)%(vt0.c0)), t0.c2, ((t0.c1)/(t0.c0)), ((t0.c0)IS NOT(rt1.c0)))))) ORDER BY LTRIM(rt0.c0, rt0.c0) COLLATE RTRIM ASC, ((((((((((((((rt1.c1)<(rt1.c1)))OR(1.80769598E8)))OR(CASE WHEN 0.5394996799554069 THEN t0.c1 ELSE rt0.c0 END)))OR((~ (t0.c2)))))OR((+ (t0.c2)))))OR((((1404472918, t0.c2, 'dJYtvHVW', rt1.c2, rt0.c0))<((rt0.c2, t0.c2, rt0.c0, rt0.c2, vt0.c0))))))AND(CASE vt0.c0  WHEN rt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt0.c1, t0.c2, t0.c2, rt1.c0)) BETWEEN ((CAST(rt0.c1 AS REAL), CASE WHEN rt1.c1 THEN t0.c0 END, ((-2078605688) ISNULL), (0Xffffffffb7233af4 IN ()), ((rt0.c0) IS TRUE))) AND ((rt0.c0, ((t0.c1)%(vt0.c0)), t0.c2, ((t0.c1)/(t0.c0)), ((t0.c0)IS NOT(rt1.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2 IN (rt0.c2, rt1.c0)) IN ()) CROSS JOIN rt0 ON (((rt0.c1)AND(rt0.c0)) IN (((rt0.c1)LIKE(t0.c2)))) RIGHT OUTER JOIN rt1 ON ((rt0.c0 IN ()) IN (rt0.c1, TYPEOF(t0.c0))) ORDER BY LTRIM(rt0.c0, rt0.c0) COLLATE RTRIM ASC, ((((((((((((((rt1.c1)<(rt1.c1)))OR(1.80769598E8)))OR(CASE WHEN 0.5394996799554069 THEN t0.c1 ELSE rt0.c0 END)))OR((~ (t0.c2)))))OR((+ (t0.c2)))))OR((((1404472918, t0.c2, 'dJYtvHVW', rt1.c2, rt0.c0))<((rt0.c2, t0.c2, rt0.c0, rt0.c2, vt0.c0))))))AND(CASE vt0.c0  WHEN rt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt1.c2 END)) DESC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2 IN (rt0.c2, rt1.c0)) IN ()) CROSS JOIN rt0 ON (((rt0.c1)AND(rt0.c0)) IN (((rt0.c1)LIKE(t0.c2)))) RIGHT OUTER JOIN rt1 ON ((rt0.c0 IN ()) IN (rt0.c1, TYPEOF(t0.c0))) WHERE ((((rt1.c1, rt0.c1, t0.c2, t0.c2, rt1.c0)) BETWEEN ((CAST(rt0.c1 AS REAL), CASE WHEN rt1.c1 THEN t0.c0 END, ((-2078605688) ISNULL), (0xffffffffb7233af4 IN ()), ((rt0.c0) IS TRUE))) AND ((rt0.c0, ((t0.c1)%(vt0.c0)), t0.c2, ((t0.c1)/(t0.c0)), ((t0.c0)IS NOT(rt1.c0)))))) ORDER BY LTRIM(rt0.c0, rt0.c0) COLLATE RTRIM ASC, ((((((((((((((rt1.c1)<(rt1.c1)))OR(1.80769598E8)))OR(CASE WHEN 0.5394996799554069 THEN t0.c1 ELSE rt0.c0 END)))OR((~ (t0.c2)))))OR((+ (t0.c2)))))OR((((1404472918, t0.c2, 'dJYtvHVW', rt1.c2, rt0.c0))<((rt0.c2, t0.c2, rt0.c0, rt0.c2, vt0.c0))))))AND(CASE vt0.c0  WHEN rt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt0.c1, t0.c2, t0.c2, rt1.c0)) BETWEEN ((CAST(rt0.c1 AS REAL), CASE WHEN rt1.c1 THEN t0.c0 END, ((-2078605688) ISNULL), (0Xffffffffb7233af4 IN ()), ((rt0.c0) IS TRUE))) AND ((rt0.c0, ((t0.c1)%(vt0.c0)), t0.c2, ((t0.c1)/(t0.c0)), ((t0.c0)IS NOT(rt1.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2 IN (rt0.c2, rt1.c0)) IN ()) CROSS JOIN rt0 ON (((rt0.c1)AND(rt0.c0)) IN (((rt0.c1)LIKE(t0.c2)))) RIGHT OUTER JOIN rt1 ON ((rt0.c0 IN ()) IN (rt0.c1, TYPEOF(t0.c0))) ORDER BY LTRIM(rt0.c0, rt0.c0) COLLATE RTRIM ASC, ((((((((((((((rt1.c1)<(rt1.c1)))OR(1.80769598E8)))OR(CASE WHEN 0.5394996799554069 THEN t0.c1 ELSE rt0.c0 END)))OR((~ (t0.c2)))))OR((+ (t0.c2)))))OR((((1404472918, t0.c2, 'dJYtvHVW', rt1.c2, rt0.c0))<((rt0.c2, t0.c2, rt0.c0, rt0.c2, vt0.c0))))))AND(CASE vt0.c0  WHEN rt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt1.c2 END)) DESC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c2 IN (rt0.c2, rt1.c0)) IN ()) CROSS JOIN rt0 ON (((rt0.c1)AND(rt0.c0)) IN (((rt0.c1)LIKE(t0.c2)))) RIGHT OUTER JOIN rt1 ON ((rt0.c0 IN ()) IN (rt0.c1, TYPEOF(t0.c0))) WHERE ((((rt1.c1, rt0.c1, t0.c2, t0.c2, rt1.c0)) BETWEEN ((CAST(rt0.c1 AS REAL), CASE WHEN rt1.c1 THEN t0.c0 END, ((-2078605688) ISNULL), (0xffffffffb7233af4 IN ()), ((rt0.c0) IS TRUE))) AND ((rt0.c0, ((t0.c1)%(vt0.c0)), t0.c2, ((t0.c1)/(t0.c0)), ((t0.c0)IS NOT(rt1.c0)))))) ORDER BY LTRIM(rt0.c0, rt0.c0) COLLATE RTRIM ASC, ((((((((((((((rt1.c1)<(rt1.c1)))OR(1.80769598E8)))OR(CASE WHEN 0.5394996799554069 THEN t0.c1 ELSE rt0.c0 END)))OR((~ (t0.c2)))))OR((+ (t0.c2)))))OR((((1404472918, t0.c2, 'dJYtvHVW', rt1.c2, rt0.c0))<((rt0.c2, t0.c2, rt0.c0, rt0.c2, vt0.c0))))))AND(CASE vt0.c0  WHEN rt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt1.c2 END)) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CHAR(rt1.c2, rt1.c2, rt1.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CHAR(rt1.c2, rt1.c2, rt1.c0)) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CHAR(rt1.c2, rt1.c2, rt1.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CHAR(rt1.c2, rt1.c2, rt1.c0)) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CHAR(rt1.c2, rt1.c2, rt1.c0)) NOTNULL));
SELECT ALL * FROM rt1 WHERE (((((((((NULL)OR(((rt1.c1)|(rt1.c2)))))OR(0.850785603467811)))OR(CAST(rt1.c1 AS NUMERIC))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(((rt1.c1)|(rt1.c2)))))OR(0.850785603467811)))OR(CAST(rt1.c1 AS NUMERIC))))AND(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((NULL)OR(((rt1.c1)|(rt1.c2)))))OR(0.850785603467811)))OR(CAST(rt1.c1 AS NUMERIC))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(((rt1.c1)|(rt1.c2)))))OR(0.850785603467811)))OR(CAST(rt1.c1 AS NUMERIC))))AND(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((NULL)OR(((rt1.c1)|(rt1.c2)))))OR(0.850785603467811)))OR(CAST(rt1.c1 AS NUMERIC))))AND(rt1.c1)));
SELECT * FROM vt0, rt0, t0 WHERE ((((CAST(x'' AS REAL), (((x'', '', rt0.c0))<=((rt0.c1, t0.c1, vt0.c0))), ((NULL) BETWEEN (rt0.c0) AND (rt0.c1))))>=((((t0.c1)<(t0.c0)), HEX(DISTINCT rt0.c1), NULL)))) ORDER BY ((((CASE vt0.c0  WHEN NULL THEN t0.c1 END)AND(((rt0.c2)||(x'')))))OR(t0.c2));
SELECT SUM(count) FROM (SELECT (((((CAST(x'' AS REAL), (((x'', '', rt0.c0))<=((rt0.c1, t0.c1, vt0.c0))), ((NULL) BETWEEN (rt0.c0) AND (rt0.c1))))>=((((t0.c1)<(t0.c0)), HEX(DISTINCT rt0.c1), NULL)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((CASE vt0.c0  WHEN NULL THEN t0.c1 END)AND(((rt0.c2)||(x'')))))OR(t0.c2)));
SELECT * FROM vt0, rt0, t0 WHERE ((((CAST(x'' AS REAL), (((x'', '', rt0.c0))<=((rt0.c1, t0.c1, vt0.c0))), ((NULL) BETWEEN (rt0.c0) AND (rt0.c1))))>=((((t0.c1)<(t0.c0)), HEX(DISTINCT rt0.c1), NULL)))) ORDER BY ((((CASE vt0.c0  WHEN NULL THEN t0.c1 END)AND(((rt0.c2)||(x'')))))OR(t0.c2));
SELECT SUM(count) FROM (SELECT (((((CAST(x'' AS REAL), (((x'', '', rt0.c0))<=((rt0.c1, t0.c1, vt0.c0))), ((NULL) BETWEEN (rt0.c0) AND (rt0.c1))))>=((((t0.c1)<(t0.c0)), HEX(DISTINCT rt0.c1), NULL)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((CASE vt0.c0  WHEN NULL THEN t0.c1 END)AND(((rt0.c2)||(x'')))))OR(t0.c2)));
SELECT * FROM vt0, rt0, t0 WHERE ((((CAST(x'' AS REAL), (((x'', '', rt0.c0))<=((rt0.c1, t0.c1, vt0.c0))), ((NULL) BETWEEN (rt0.c0) AND (rt0.c1))))>=((((t0.c1)<(t0.c0)), HEX(DISTINCT rt0.c1), NULL)))) ORDER BY ((((CASE vt0.c0  WHEN NULL THEN t0.c1 END)AND(((rt0.c2)||(x'')))))OR(t0.c2));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<<(vt0.c0)) THEN (- (vt0.c0)) ELSE NULL END) ORDER BY CASE '1431949178'  WHEN ((-1477252123)<>(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN '' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0)<<(vt0.c0)) THEN (- (vt0.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY CASE '1431949178'  WHEN ((-1477252123)!=(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN '' END  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<<(vt0.c0)) THEN (- (vt0.c0)) ELSE NULL END) ORDER BY CASE '1431949178'  WHEN ((-1477252123)<>(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN '' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0)<<(vt0.c0)) THEN (- (vt0.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY CASE '1431949178'  WHEN ((-1477252123)!=(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN '' END  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<<(vt0.c0)) THEN (- (vt0.c0)) ELSE NULL END) ORDER BY CASE '1431949178'  WHEN ((-1477252123)<>(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN '' END  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)%(rt1.c2)) THEN (~ (rt0.c0)) ELSE ((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) END RIGHT OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c2)) COLLATE BINARY WHERE (IFNULL((rt1.c0 IN ()), ((rt0.c1) ISNULL))) ORDER BY (NOT (((rt1.c1) IS FALSE))) ASC, ((CAST(t0.c1 AS BLOB))AND(CASE t0.c2  WHEN '-1889131912' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt1.c0 IN ()), ((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)%(rt1.c2)) THEN (~ (rt0.c0)) ELSE ((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) END RIGHT OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c2)) COLLATE BINARY ORDER BY (NOT (((rt1.c1) IS FALSE))) ASC, ((CAST(t0.c1 AS BLOB))AND(CASE t0.c2  WHEN '-1889131912' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)%(rt1.c2)) THEN (~ (rt0.c0)) ELSE ((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) END RIGHT OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c2)) COLLATE BINARY WHERE (IFNULL((rt1.c0 IN ()), ((rt0.c1) ISNULL))) ORDER BY (NOT (((rt1.c1) IS FALSE))) ASC, ((CAST(t0.c1 AS BLOB))AND(CASE t0.c2  WHEN '-1889131912' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt1.c0 IN ()), ((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)%(rt1.c2)) THEN (~ (rt0.c0)) ELSE ((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) END RIGHT OUTER JOIN rt0 ON ((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c2)) COLLATE BINARY ORDER BY (NOT (((rt1.c1) IS FALSE))) ASC, ((CAST(t0.c1 AS BLOB))AND(CASE t0.c2  WHEN '-1889131912' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, t0 WHERE (PRINTF(rt0.c2)) ORDER BY ((t0.c2)GLOB(((t0.c2)>('-1264142972'))))  NULLS LAST, CASE t0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((PRINTF(rt0.c2)) IS TRUE)  as count FROM rt0, vt0, rt1, t0 ORDER BY ((t0.c2)GLOB(((t0.c2)>('-1264142972'))))  NULLS LAST, CASE t0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, t0 WHERE (PRINTF(rt0.c2)) ORDER BY ((t0.c2)GLOB(((t0.c2)>('-1264142972'))))  NULLS LAST, CASE t0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((PRINTF(rt0.c2)) IS TRUE)  as count FROM rt0, vt0, rt1, t0 ORDER BY ((t0.c2)GLOB(((t0.c2)>('-1264142972'))))  NULLS LAST, CASE t0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, t0 WHERE (PRINTF(rt0.c2)) ORDER BY ((t0.c2)GLOB(((t0.c2)>('-1264142972'))))  NULLS LAST, CASE t0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((((((rt1.c2)AND(t0.c1)))OR(rt1.c0)))OR(t0.c0)))AND(rt1.c2))) NOT NULL)) ORDER BY ((rt1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(t0.c1)))OR(rt1.c0)))OR(t0.c0)))AND(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((rt1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((((((rt1.c2)AND(t0.c1)))OR(rt1.c0)))OR(t0.c0)))AND(rt1.c2))) NOT NULL)) ORDER BY ((rt1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(t0.c1)))OR(rt1.c0)))OR(t0.c0)))AND(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((rt1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((((((rt1.c2)AND(t0.c1)))OR(rt1.c0)))OR(t0.c0)))AND(rt1.c2))) NOT NULL)) ORDER BY ((rt1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(rt0.c0)) ORDER BY ((CAST(vt0.c0 AS BLOB))>((((rt0.c2, rt0.c1, ' ^')) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '865830550', rt0.c1))))) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))OR(rt0.c2));
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c0)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))>((((rt0.c2, rt0.c1, ' ^')) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '865830550', rt0.c1))))) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))OR(rt0.c2)));
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(rt0.c0)) ORDER BY ((CAST(vt0.c0 AS BLOB))>((((rt0.c2, rt0.c1, ' ^')) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '865830550', rt0.c1))))) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))OR(rt0.c2));
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c0)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))>((((rt0.c2, rt0.c1, ' ^')) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '865830550', rt0.c1))))) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))OR(rt0.c2)));
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(rt0.c0)) ORDER BY ((CAST(vt0.c0 AS BLOB))>((((rt0.c2, rt0.c1, ' ^')) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '865830550', rt0.c1))))) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))OR(rt0.c2));
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CAST(0.3148916375954355 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(0.3148916375954355 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CAST(0.3148916375954355 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(0.3148916375954355 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CAST(0.3148916375954355 AS TEXT)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))<>((NULLIF(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL)))!=((NULLIF(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))<>((NULLIF(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL)))!=((NULLIF(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))<>((NULLIF(vt0.c0, vt0.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1)*(vt0.c0)) IN (((rt1.c0) ISNULL)))) ORDER BY (((rt1.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)*(vt0.c0)) IN (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2 IN ())) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1)*(vt0.c0)) IN (((rt1.c0) ISNULL)))) ORDER BY (((rt1.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)*(vt0.c0)) IN (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2 IN ())) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1)*(vt0.c0)) IN (((rt1.c0) ISNULL)))) ORDER BY (((rt1.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((+ (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (rt1.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)/(rt0.c0)))AND(((rt0.c2)GLOB('0.2516075518969123')))))AND(vt0.c0 COLLATE BINARY)) INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c2)%(rt1.c2))))) WHERE ((((rt1.c1))>=((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1))>=((rt1.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)/(rt0.c0)))AND(((rt0.c2)GLOB('0.2516075518969123')))))AND(vt0.c0 COLLATE BINARY)) INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c2)%(rt1.c2))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)/(rt0.c0)))AND(((rt0.c2)GLOB('0.2516075518969123')))))AND(vt0.c0 COLLATE BINARY)) INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c2)%(rt1.c2))))) WHERE ((((rt1.c1))>=((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1))>=((rt1.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)/(rt0.c0)))AND(((rt0.c2)GLOB('0.2516075518969123')))))AND(vt0.c0 COLLATE BINARY)) INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c2)%(rt1.c2))))));
SELECT ALL * FROM rt1, t0 INNER JOIN vt0 ON (('') BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CASE rt1.c0  WHEN t0.c2 THEN t0.c1 ELSE 0xffffffffe6267651 END)) CROSS JOIN rt0 ON json_object(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)/(t0.c2))) WHERE (CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN CHANGES() END) IS TRUE)  as count FROM rt1, t0 INNER JOIN vt0 ON (('') BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CASE rt1.c0  WHEN t0.c2 THEN t0.c1 ELSE 0xffffffffe6267651 END)) CROSS JOIN rt0 ON json_object(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)/(t0.c2))));
SELECT ALL * FROM rt1, t0 INNER JOIN vt0 ON (('') BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CASE rt1.c0  WHEN t0.c2 THEN t0.c1 ELSE 0xffffffffe6267651 END)) CROSS JOIN rt0 ON json_object(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)/(t0.c2))) WHERE (CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN CHANGES() END) IS TRUE)  as count FROM rt1, t0 INNER JOIN vt0 ON (('') BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CASE rt1.c0  WHEN t0.c2 THEN t0.c1 ELSE 0xffffffffe6267651 END)) CROSS JOIN rt0 ON json_object(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)/(t0.c2))));
SELECT ALL * FROM rt1, t0 INNER JOIN vt0 ON (('') BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CASE rt1.c0  WHEN t0.c2 THEN t0.c1 ELSE 0xffffffffe6267651 END)) CROSS JOIN rt0 ON json_object(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)/(t0.c2))) WHERE (CASE rt1.c2 COLLATE NOCASE  WHEN ((rt1.c2)LIKE(rt1.c0)) THEN CHANGES() END);
SELECT COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON ((((x'' COLLATE RTRIM)AND(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))))AND(rt1.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON '-1835232169' WHERE (json(((rt1.c2) NOT NULL))) ORDER BY TRIM(ABS(t0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(((rt1.c2) NOT NULL))) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON ((((x'' COLLATE RTRIM)AND(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))))AND(rt1.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON '-1835232169' ORDER BY TRIM(ABS(t0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON ((((x'' COLLATE RTRIM)AND(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))))AND(rt1.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON '-1835232169' WHERE (json(((rt1.c2) NOT NULL))) ORDER BY TRIM(ABS(t0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(((rt1.c2) NOT NULL))) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON ((((x'' COLLATE RTRIM)AND(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))))AND(rt1.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON '-1835232169' ORDER BY TRIM(ABS(t0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON ((((x'' COLLATE RTRIM)AND(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))))AND(rt1.c2 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON '-1835232169' WHERE (json(((rt1.c2) NOT NULL))) ORDER BY TRIM(ABS(t0.c1)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 END)) WHERE ((((rt1.c0 IN (rt1.c1, NULL)))>>((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt1.c1, NULL)))>>((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 END)) WHERE ((((rt1.c0 IN (rt1.c1, NULL)))>>((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt1.c1, NULL)))>>((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 END)) WHERE ((((rt1.c0 IN (rt1.c1, NULL)))>>((rt1.c1 IN ()))));
SELECT ALL * FROM t0 WHERE ((((x'bb514452' IN ()))<>(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((x'bb514452' IN ()))<>(t0.c1))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((x'bb514452' IN ()))<>(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((x'bb514452' IN ()))<>(t0.c1))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((x'bb514452' IN ()))<>(t0.c1)));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)LIKE(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY ((((rt1.c2) IS TRUE))|((rt1.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)LIKE(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) IS TRUE))|((rt1.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)LIKE(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY ((((rt1.c2) IS TRUE))|((rt1.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)LIKE(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) IS TRUE))|((rt1.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)LIKE(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY ((((rt1.c2) IS TRUE))|((rt1.c2 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt1.c1)<=(rt0.c1)) COLLATE NOCASE) ORDER BY (~ (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<=(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (rt0.c1)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt1.c1)<=(rt0.c1)) COLLATE NOCASE) ORDER BY (~ (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<=(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (rt0.c1)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt1.c1)<=(rt0.c1)) COLLATE NOCASE) ORDER BY (~ (rt0.c1));
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (CAST(rt1.c2 AS REAL) COLLATE RTRIM) ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN 'Se\r' WHEN rt1.c1 THEN rt1.c2 WHEN t0.c2 THEN t0.c1 END)|(UPPER(rt0.c2)))  NULLS FIRST, (t0.c1 IN (((((((((rt0.c1)AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)), ((0.5763419012495039) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN 'Se\r' WHEN rt1.c1 THEN rt1.c2 WHEN t0.c2 THEN t0.c1 END)|(UPPER(rt0.c2)))  NULLS FIRST, (t0.c1 IN (((((((((rt0.c1)AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)), ((0.5763419012495039) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (CAST(rt1.c2 AS REAL) COLLATE RTRIM) ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN 'Se\r' WHEN rt1.c1 THEN rt1.c2 WHEN t0.c2 THEN t0.c1 END)|(UPPER(rt0.c2)))  NULLS FIRST, (t0.c1 IN (((((((((rt0.c1)AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)), ((0.5763419012495039) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN 'Se\r' WHEN rt1.c1 THEN rt1.c2 WHEN t0.c2 THEN t0.c1 END)|(UPPER(rt0.c2)))  NULLS FIRST, (t0.c1 IN (((((((((rt0.c1)AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)), ((0.5763419012495039) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (CAST(rt1.c2 AS REAL) COLLATE RTRIM) ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN 'Se\r' WHEN rt1.c1 THEN rt1.c2 WHEN t0.c2 THEN t0.c1 END)|(UPPER(rt0.c2)))  NULLS FIRST, (t0.c1 IN (((((((((rt0.c1)AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)), ((0.5763419012495039) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0)), GLOB(vt0.c0, vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('2089365310')))AND(vt0.c0)), ((vt0.c0)=(vt0.c0)), vt0.c0))!=((vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), load_extension(vt0.c0), (((vt0.c0))<=((NULL))), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)GLOB(vt0.c0)), GLOB(vt0.c0, vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('2089365310')))AND(vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c0))<>((vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), load_extension(vt0.c0), (((vt0.c0))<=((NULL))), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0)), GLOB(vt0.c0, vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('2089365310')))AND(vt0.c0)), ((vt0.c0)=(vt0.c0)), vt0.c0))!=((vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), load_extension(vt0.c0), (((vt0.c0))<=((NULL))), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)GLOB(vt0.c0)), GLOB(vt0.c0, vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('2089365310')))AND(vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c0))<>((vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), load_extension(vt0.c0), (((vt0.c0))<=((NULL))), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((((CASE WHEN t0.c2 THEN vt0.c0 END, IFNULL(DISTINCT t0.c1, t0.c1), rt1.c2))>((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN '' WHEN t0.c2 THEN '1952335365' ELSE vt0.c0 END, CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END, ((rt1.c0) IS FALSE))))) ORDER BY CAST(0.25586054481702014 AS BLOB);
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c2 THEN vt0.c0 END, IFNULL(DISTINCT t0.c1, t0.c1), rt1.c2))>((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN '' WHEN t0.c2 THEN '1952335365' ELSE vt0.c0 END, CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END, ((rt1.c0) IS FALSE))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY CAST(0.25586054481702014 AS BLOB));
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((((CASE WHEN t0.c2 THEN vt0.c0 END, IFNULL(DISTINCT t0.c1, t0.c1), rt1.c2))>((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN '' WHEN t0.c2 THEN '1952335365' ELSE vt0.c0 END, CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END, ((rt1.c0) IS FALSE))))) ORDER BY CAST(0.25586054481702014 AS BLOB);
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c2 THEN vt0.c0 END, IFNULL(DISTINCT t0.c1, t0.c1), rt1.c2))>((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN '' WHEN t0.c2 THEN '1952335365' ELSE vt0.c0 END, CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END, ((rt1.c0) IS FALSE))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY CAST(0.25586054481702014 AS BLOB));
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE ((((CASE WHEN t0.c2 THEN vt0.c0 END, IFNULL(DISTINCT t0.c1, t0.c1), rt1.c2))>((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN '' WHEN t0.c2 THEN '1952335365' ELSE vt0.c0 END, CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END, ((rt1.c0) IS FALSE))))) ORDER BY CAST(0.25586054481702014 AS BLOB);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (rt1.c2)) COLLATE NOCASE WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (rt1.c2)) COLLATE NOCASE WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (rt1.c2)) COLLATE NOCASE WHERE (x'');
SELECT COUNT(*) FROM vt0, rt1, t0 INDEXED BY i38 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, rt1, t0 INDEXED BY i38);
SELECT COUNT(*) FROM vt0, rt1, t0 INDEXED BY i38 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, rt1, t0 INDEXED BY i38);
SELECT COUNT(*) FROM vt0, rt1, t0 INDEXED BY i38 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE rt0.c0  WHEN x'8905' THEN t0.c1 ELSE t0.c0 END) NOTNULL)) ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('0.7138586223370194'))) IS TRUE)  NULLS LAST, (((((((((((t0.c2))<=((0.3628748851377249))))AND((rt0.c1 IN (t0.c2)))))AND(t0.c1)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)), CASE TYPEOF(t0.c1)  WHEN ((rt0.c0) IS TRUE) THEN ((1429041032)!=(rt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN x'8905' THEN t0.c1 ELSE t0.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('0.7138586223370194'))) IS TRUE)  NULLS LAST, (((((((((((t0.c2))<=((0.3628748851377249))))AND((rt0.c1 IN (t0.c2)))))AND(t0.c1)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)), CASE TYPEOF(t0.c1)  WHEN ((rt0.c0) IS TRUE) THEN ((1429041032)<>(rt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE rt0.c0  WHEN x'8905' THEN t0.c1 ELSE t0.c0 END) NOTNULL)) ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('0.7138586223370194'))) IS TRUE)  NULLS LAST, (((((((((((t0.c2))<=((0.3628748851377249))))AND((rt0.c1 IN (t0.c2)))))AND(t0.c1)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)), CASE TYPEOF(t0.c1)  WHEN ((rt0.c0) IS TRUE) THEN ((1429041032)!=(rt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN x'8905' THEN t0.c1 ELSE t0.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('0.7138586223370194'))) IS TRUE)  NULLS LAST, (((((((((((t0.c2))<=((0.3628748851377249))))AND((rt0.c1 IN (t0.c2)))))AND(t0.c1)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)), CASE TYPEOF(t0.c1)  WHEN ((rt0.c0) IS TRUE) THEN ((1429041032)<>(rt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE rt0.c0  WHEN x'8905' THEN t0.c1 ELSE t0.c0 END) NOTNULL)) ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('0.7138586223370194'))) IS TRUE)  NULLS LAST, (((((((((((t0.c2))<=((0.3628748851377249))))AND((rt0.c1 IN (t0.c2)))))AND(t0.c1)))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)), CASE TYPEOF(t0.c1)  WHEN ((rt0.c0) IS TRUE) THEN ((1429041032)!=(rt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0, vt0, t0 WHERE (((t0.c1) NOT BETWEEN ((NOT (vt0.c0))) AND ((+ (rt1.c2))))) ORDER BY (NOT (CASE rt0.c0  WHEN t0.c1 THEN rt1.c1 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOT BETWEEN ((NOT (vt0.c0))) AND ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY (NOT (CASE rt0.c0  WHEN t0.c1 THEN rt1.c1 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt0, t0 WHERE (((t0.c1) NOT BETWEEN ((NOT (vt0.c0))) AND ((+ (rt1.c2))))) ORDER BY (NOT (CASE rt0.c0  WHEN t0.c1 THEN rt1.c1 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOT BETWEEN ((NOT (vt0.c0))) AND ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY (NOT (CASE rt0.c0  WHEN t0.c1 THEN rt1.c1 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt0, t0 WHERE (((t0.c1) NOT BETWEEN ((NOT (vt0.c0))) AND ((+ (rt1.c2))))) ORDER BY (NOT (CASE rt0.c0  WHEN t0.c1 THEN rt1.c1 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN t0 ON ((((((((((rt1.c2)AND(rt1.c2)))OR(t0.c1)))OR('')))OR(vt0.c0)))<(rt1.c1)) WHERE ((NOT (CAST(rt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN t0 ON ((((((((((rt1.c2)AND(rt1.c2)))OR(t0.c1)))OR('')))OR(vt0.c0)))<(rt1.c1)));
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN t0 ON ((((((((((rt1.c2)AND(rt1.c2)))OR(t0.c1)))OR('')))OR(vt0.c0)))<(rt1.c1)) WHERE ((NOT (CAST(rt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN t0 ON ((((((((((rt1.c2)AND(rt1.c2)))OR(t0.c1)))OR('')))OR(vt0.c0)))<(rt1.c1)));
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN t0 ON ((((((((((rt1.c2)AND(rt1.c2)))OR(t0.c1)))OR('')))OR(vt0.c0)))<(rt1.c1)) WHERE ((NOT (CAST(rt1.c0 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (((IFNULL(DISTINCT '-1634363013', rt0.c1))<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT '-1634363013', rt0.c1))<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((IFNULL(DISTINCT '-1634363013', rt0.c1))<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT '-1634363013', rt0.c1))<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((IFNULL(DISTINCT '-1634363013', rt0.c1))<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 INNER JOIN rt1 ON (x'' IN ()) WHERE ((((((t0.c2))<=((''))))>>(((((rt1.c0)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))<=((''))))>>(((((rt1.c0)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 INNER JOIN rt1 ON (x'' IN ()) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 INNER JOIN rt1 ON (x'' IN ()) WHERE ((((((t0.c2))<=((''))))>>(((((rt1.c0)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))<=((''))))>>(((((rt1.c0)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 INNER JOIN rt1 ON (x'' IN ()) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 INNER JOIN rt1 ON (x'' IN ()) WHERE ((((((t0.c2))<=((''))))>>(((((rt1.c0)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END);
SELECT * FROM t0, rt0 WHERE ((((~ (rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c1 END) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c1 END) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((~ (rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c1 END) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c1 END) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((~ (rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c1 END) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((+ (((rt1.c1)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ (((rt1.c1)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ (((rt1.c1)LIKE(rt1.c0)))));
SELECT * FROM rt0 INNER JOIN rt1 ON 0.17851534093828902 RIGHT OUTER JOIN t0 ON ((((((((((((((((((rt1.c2) IS FALSE))AND(CASE rt0.c0  WHEN rt1.c0 THEN NULL END)))AND((((''))!=((rt1.c0))))))OR(json_insert(0.507276361666603, rt0.c1, rt1.c1))))AND(((rt0.c0) NOT NULL))))AND((~ (NULL)))))AND(((rt0.c0) IS TRUE))))OR(((((rt0.c2)AND(t0.c1)))OR(0.9607930653815382)))))AND(LOWER(t0.c0))) WHERE (((((1952335365)<<(rt0.c1)))/(CASE WHEN 0.48152261215447334 THEN t0.c2 END))) ORDER BY CASE ((rt0.c0)GLOB(rt1.c0))  WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (t0.c1)) THEN rt1.c1 ELSE (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))) END DESC  NULLS LAST, ((((((((((((rt0.c1)AND(t0.c1)))OR(rt1.c0)))AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c2) AND (0.3338007882122753)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((1952335365)<<(rt0.c1)))/(CASE WHEN 0.48152261215447334 THEN t0.c2 END))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON 0.17851534093828902 RIGHT OUTER JOIN t0 ON ((((((((((((((((((rt1.c2) IS FALSE))AND(CASE rt0.c0  WHEN rt1.c0 THEN NULL END)))AND((((''))<>((rt1.c0))))))OR(json_insert(0.507276361666603, rt0.c1, rt1.c1))))AND(((rt0.c0) NOT NULL))))AND((~ (NULL)))))AND(((rt0.c0) IS TRUE))))OR(((((rt0.c2)AND(t0.c1)))OR(0.9607930653815382)))))AND(LOWER(t0.c0))) ORDER BY CASE ((rt0.c0)GLOB(rt1.c0))  WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (t0.c1)) THEN rt1.c1 ELSE (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))) END DESC  NULLS LAST, ((((((((((((rt0.c1)AND(t0.c1)))OR(rt1.c0)))AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c2) AND (0.3338007882122753)))) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON 0.17851534093828902 RIGHT OUTER JOIN t0 ON ((((((((((((((((((rt1.c2) IS FALSE))AND(CASE rt0.c0  WHEN rt1.c0 THEN NULL END)))AND((((''))!=((rt1.c0))))))OR(json_insert(0.507276361666603, rt0.c1, rt1.c1))))AND(((rt0.c0) NOT NULL))))AND((~ (NULL)))))AND(((rt0.c0) IS TRUE))))OR(((((rt0.c2)AND(t0.c1)))OR(0.9607930653815382)))))AND(LOWER(t0.c0))) WHERE (((((1952335365)<<(rt0.c1)))/(CASE WHEN 0.48152261215447334 THEN t0.c2 END))) ORDER BY CASE ((rt0.c0)GLOB(rt1.c0))  WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (t0.c1)) THEN rt1.c1 ELSE (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))) END DESC  NULLS LAST, ((((((((((((rt0.c1)AND(t0.c1)))OR(rt1.c0)))AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c2) AND (0.3338007882122753)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((1952335365)<<(rt0.c1)))/(CASE WHEN 0.48152261215447334 THEN t0.c2 END))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON 0.17851534093828902 RIGHT OUTER JOIN t0 ON ((((((((((((((((((rt1.c2) IS FALSE))AND(CASE rt0.c0  WHEN rt1.c0 THEN NULL END)))AND((((''))<>((rt1.c0))))))OR(json_insert(0.507276361666603, rt0.c1, rt1.c1))))AND(((rt0.c0) NOT NULL))))AND((~ (NULL)))))AND(((rt0.c0) IS TRUE))))OR(((((rt0.c2)AND(t0.c1)))OR(0.9607930653815382)))))AND(LOWER(t0.c0))) ORDER BY CASE ((rt0.c0)GLOB(rt1.c0))  WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (t0.c1)) THEN rt1.c1 ELSE (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))) END DESC  NULLS LAST, ((((((((((((rt0.c1)AND(t0.c1)))OR(rt1.c0)))AND(rt0.c2)))OR(rt1.c0)))AND(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (t0.c2) AND (0.3338007882122753)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c1))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c1))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c1))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c1))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c1))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1, t0 WHERE (LENGTH((NULL IN (t0.c0, -1)))) ORDER BY ('菈1c' IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH((NULL IN (t0.c0, -1)))) IS TRUE)  as count FROM rt1, t0 ORDER BY ('菈1c' IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE (LENGTH((NULL IN (t0.c0, -1)))) ORDER BY ('菈1c' IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH((NULL IN (t0.c0, -1)))) IS TRUE)  as count FROM rt1, t0 ORDER BY ('菈1c' IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE (LENGTH((NULL IN (t0.c0, -1)))) ORDER BY ('菈1c' IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE (TRIM(DISTINCT t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (TRIM(DISTINCT t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (TRIM(DISTINCT t0.c0 COLLATE RTRIM));
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c2)))>=(((rt0.c2)||(rt0.c2))))) ORDER BY IFNULL(DISTINCT TRIM(rt0.c1), NULLIF(DISTINCT rt0.c0, rt0.c2));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))>=(((rt0.c2)||(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(DISTINCT TRIM(rt0.c1), NULLIF(DISTINCT rt0.c0, rt0.c2)));
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c2)))>=(((rt0.c2)||(rt0.c2))))) ORDER BY IFNULL(DISTINCT TRIM(rt0.c1), NULLIF(DISTINCT rt0.c0, rt0.c2));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))>=(((rt0.c2)||(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(DISTINCT TRIM(rt0.c1), NULLIF(DISTINCT rt0.c0, rt0.c2)));
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c2)))>=(((rt0.c2)||(rt0.c2))))) ORDER BY IFNULL(DISTINCT TRIM(rt0.c1), NULLIF(DISTINCT rt0.c0, rt0.c2));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((((('# R䘼') BETWEEN (t0.c2) AND (t0.c1)))OR(-825557037)))OR(UPPER(rt1.c2)))) ORDER BY ABS(DISTINCT CASE WHEN t0.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN t0.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('# R䘼') BETWEEN (t0.c2) AND (t0.c1)))OR(-825557037)))OR(UPPER(rt1.c2)))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ABS(DISTINCT CASE WHEN t0.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN t0.c1 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((((('# R䘼') BETWEEN (t0.c2) AND (t0.c1)))OR(-825557037)))OR(UPPER(rt1.c2)))) ORDER BY ABS(DISTINCT CASE WHEN t0.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN t0.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('# R䘼') BETWEEN (t0.c2) AND (t0.c1)))OR(-825557037)))OR(UPPER(rt1.c2)))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ABS(DISTINCT CASE WHEN t0.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN t0.c1 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE ((((((('# R䘼') BETWEEN (t0.c2) AND (t0.c1)))OR(-825557037)))OR(UPPER(rt1.c2)))) ORDER BY ABS(DISTINCT CASE WHEN t0.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN t0.c1 END) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0)OR(rt1.c2)) COLLATE RTRIM) ORDER BY (LOWER(DISTINCT rt1.c2) IN (((rt1.c1)LIKE(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)OR(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (LOWER(DISTINCT rt1.c2) IN (((rt1.c1)LIKE(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0)OR(rt1.c2)) COLLATE RTRIM) ORDER BY (LOWER(DISTINCT rt1.c2) IN (((rt1.c1)LIKE(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)OR(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (LOWER(DISTINCT rt1.c2) IN (((rt1.c1)LIKE(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0)OR(rt1.c2)) COLLATE RTRIM) ORDER BY (LOWER(DISTINCT rt1.c2) IN (((rt1.c1)LIKE(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0, rt1 WHERE (((INSTR(rt1.c1, vt0.c0))>=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((INSTR(rt1.c1, vt0.c0))>=((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT ALL * FROM t0, rt0, vt0, rt1 WHERE (((INSTR(rt1.c1, vt0.c0))>=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((INSTR(rt1.c1, vt0.c0))>=((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT ALL * FROM t0, rt0, vt0, rt1 WHERE (((INSTR(rt1.c1, vt0.c0))>=((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN (x'dca3')))) AND (((- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN (x'dca3')))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN (x'dca3')))) AND (((- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN (x'dca3')))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN (x'dca3')))) AND (((- (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((((((rt1.c1)OR(rt1.c0)))AND('')))AND(rt1.c1)))AND(NULL)) AS BLOB)) ORDER BY NULL, ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))), TRIM(rt1.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt1.c1)OR(rt1.c0)))AND('')))AND(rt1.c1)))AND(NULL)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY NULL, ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))), TRIM(rt1.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((((((rt1.c1)OR(rt1.c0)))AND('')))AND(rt1.c1)))AND(NULL)) AS BLOB)) ORDER BY NULL, ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))), TRIM(rt1.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt1.c1)OR(rt1.c0)))AND('')))AND(rt1.c1)))AND(NULL)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY NULL, ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))), TRIM(rt1.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((((((rt1.c1)OR(rt1.c0)))AND('')))AND(rt1.c1)))AND(NULL)) AS BLOB)) ORDER BY NULL, ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))), TRIM(rt1.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (0x140f8901);
SELECT SUM(count) FROM (SELECT ALL ((0X140f8901) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0x140f8901);
SELECT SUM(count) FROM (SELECT ALL ((0X140f8901) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0x140f8901);
SELECT COUNT(*) FROM vt0 WHERE (('-262223293' COLLATE RTRIM IN (CHANGES(), ((vt0.c0) IS FALSE)))) ORDER BY json_quote(ROUND(vt0.c0, vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('-262223293' COLLATE RTRIM IN (CHANGES(), ((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY json_quote(ROUND(vt0.c0, vt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (('-262223293' COLLATE RTRIM IN (CHANGES(), ((vt0.c0) IS FALSE)))) ORDER BY json_quote(ROUND(vt0.c0, vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('-262223293' COLLATE RTRIM IN (CHANGES(), ((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY json_quote(ROUND(vt0.c0, vt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (('-262223293' COLLATE RTRIM IN (CHANGES(), ((vt0.c0) IS FALSE)))) ORDER BY json_quote(ROUND(vt0.c0, vt0.c0)) DESC  NULLS LAST;
